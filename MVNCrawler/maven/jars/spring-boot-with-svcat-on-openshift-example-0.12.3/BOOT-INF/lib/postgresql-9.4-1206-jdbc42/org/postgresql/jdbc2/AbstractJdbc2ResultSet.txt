Compiled from "AbstractJdbc2ResultSet.java"
public abstract class org.postgresql.jdbc2.AbstractJdbc2ResultSet implements org.postgresql.core.BaseResultSet,org.postgresql.PGRefCursorResultSet {
  private boolean updateable;

  private boolean doingUpdates;

  private java.util.HashMap updateValues;

  private boolean usingOID;

  private java.util.List primaryKeys;

  private boolean singleTable;

  private java.lang.String onlyTable;

  private java.lang.String tableName;

  private java.sql.PreparedStatement updateStatement;

  private java.sql.PreparedStatement insertStatement;

  private java.sql.PreparedStatement deleteStatement;

  private java.sql.PreparedStatement selectStatement;

  private final int resultsettype;

  private final int resultsetconcurrency;

  private int fetchdirection;

  protected final org.postgresql.core.BaseConnection connection;

  protected final org.postgresql.core.BaseStatement statement;

  private java.sql.Statement realStatement;

  protected final org.postgresql.core.Field[] fields;

  protected final org.postgresql.core.Query originalQuery;

  protected final int maxRows;

  protected final int maxFieldSize;

  protected java.util.List rows;

  protected int current_row;

  protected int row_offset;

  protected byte[][] this_row;

  protected java.sql.SQLWarning warnings;

  protected boolean wasNullFlag;

  protected boolean onInsertRow;

  private byte[][] rowBuffer;

  protected int fetchSize;

  protected org.postgresql.core.ResultCursor cursor;

  private java.util.HashMap columnNameIndexMap;

  private java.sql.ResultSetMetaData rsMetaData;

  private java.lang.String refCursorName;

  private static final java.math.BigInteger BYTEMAX;

  private static final java.math.BigInteger BYTEMIN;

  private static final java.math.BigInteger SHORTMAX;

  private static final java.math.BigInteger SHORTMIN;

  private static final java.lang.NumberFormatException FAST_NUMBER_FAILED;

  private static final java.math.BigInteger INTMAX;

  private static final java.math.BigInteger INTMIN;

  private static final java.math.BigInteger LONGMAX;

  private static final java.math.BigInteger LONGMIN;

  protected abstract java.sql.ResultSetMetaData createMetaData() throws java.sql.SQLException;

  public java.sql.ResultSetMetaData getMetaData() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method checkClosed:()V
       4: aload_0
       5: getfield      #2                  // Field rsMetaData:Ljava/sql/ResultSetMetaData;
       8: ifnonnull     19
      11: aload_0
      12: aload_0
      13: invokevirtual #3                  // Method createMetaData:()Ljava/sql/ResultSetMetaData;
      16: putfield      #2                  // Field rsMetaData:Ljava/sql/ResultSetMetaData;
      19: aload_0
      20: getfield      #2                  // Field rsMetaData:Ljava/sql/ResultSetMetaData;
      23: areturn

  public org.postgresql.jdbc2.AbstractJdbc2ResultSet(org.postgresql.core.Query, org.postgresql.core.BaseStatement, org.postgresql.core.Field[], java.util.List, org.postgresql.core.ResultCursor, int, int, int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #5                  // Field updateable:Z
       9: aload_0
      10: iconst_0
      11: putfield      #6                  // Field doingUpdates:Z
      14: aload_0
      15: aconst_null
      16: putfield      #7                  // Field updateValues:Ljava/util/HashMap;
      19: aload_0
      20: iconst_0
      21: putfield      #8                  // Field usingOID:Z
      24: aload_0
      25: iconst_0
      26: putfield      #9                  // Field singleTable:Z
      29: aload_0
      30: ldc           #10                 // String
      32: putfield      #11                 // Field onlyTable:Ljava/lang/String;
      35: aload_0
      36: aconst_null
      37: putfield      #12                 // Field tableName:Ljava/lang/String;
      40: aload_0
      41: aconst_null
      42: putfield      #13                 // Field updateStatement:Ljava/sql/PreparedStatement;
      45: aload_0
      46: aconst_null
      47: putfield      #14                 // Field insertStatement:Ljava/sql/PreparedStatement;
      50: aload_0
      51: aconst_null
      52: putfield      #15                 // Field deleteStatement:Ljava/sql/PreparedStatement;
      55: aload_0
      56: aconst_null
      57: putfield      #16                 // Field selectStatement:Ljava/sql/PreparedStatement;
      60: aload_0
      61: sipush        1002
      64: putfield      #18                 // Field fetchdirection:I
      67: aload_0
      68: iconst_m1
      69: putfield      #19                 // Field current_row:I
      72: aload_0
      73: aconst_null
      74: putfield      #20                 // Field warnings:Ljava/sql/SQLWarning;
      77: aload_0
      78: iconst_0
      79: putfield      #21                 // Field wasNullFlag:Z
      82: aload_0
      83: iconst_0
      84: putfield      #22                 // Field onInsertRow:Z
      87: aload_0
      88: aconst_null
      89: checkcast     #23                 // class "[[B"
      92: putfield      #24                 // Field rowBuffer:[[B
      95: aload         4
      97: ifnonnull     110
     100: new           #25                 // class java/lang/NullPointerException
     103: dup
     104: ldc           #26                 // String tuples must be non-null
     106: invokespecial #27                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     109: athrow
     110: aload_3
     111: ifnonnull     124
     114: new           #25                 // class java/lang/NullPointerException
     117: dup
     118: ldc           #28                 // String fields must be non-null
     120: invokespecial #27                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     123: athrow
     124: aload_0
     125: aload_1
     126: putfield      #29                 // Field originalQuery:Lorg/postgresql/core/Query;
     129: aload_0
     130: aload_2
     131: invokeinterface #30,  1           // InterfaceMethod org/postgresql/core/BaseStatement.getConnection:()Ljava/sql/Connection;
     136: checkcast     #31                 // class org/postgresql/core/BaseConnection
     139: putfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     142: aload_0
     143: aload_2
     144: putfield      #33                 // Field statement:Lorg/postgresql/core/BaseStatement;
     147: aload_0
     148: aload_3
     149: putfield      #34                 // Field fields:[Lorg/postgresql/core/Field;
     152: aload_0
     153: aload         4
     155: putfield      #35                 // Field rows:Ljava/util/List;
     158: aload_0
     159: aload         5
     161: putfield      #36                 // Field cursor:Lorg/postgresql/core/ResultCursor;
     164: aload_0
     165: iload         6
     167: putfield      #37                 // Field maxRows:I
     170: aload_0
     171: iload         7
     173: putfield      #38                 // Field maxFieldSize:I
     176: aload_0
     177: iload         8
     179: putfield      #39                 // Field resultsettype:I
     182: aload_0
     183: iload         9
     185: putfield      #40                 // Field resultsetconcurrency:I
     188: return

  public java.net.URL getURL(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #41                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: ldc           #42                 // String getURL(int)
      10: invokestatic  #43                 // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      13: athrow

  public java.net.URL getURL(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: invokevirtual #45                 // Method getURL:(I)Ljava/net/URL;
       9: areturn

  protected java.lang.Object internalGetObject(int, org.postgresql.core.Field) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #46                 // Method getSQLType:(I)I
       5: lookupswitch  { // 22
                    -7: 192
                    -6: 210
                    -5: 219
                    -4: 298
                    -3: 298
                    -2: 298
                    -1: 273
                     1: 273
                     2: 228
                     3: 228
                     4: 210
                     5: 210
                     6: 264
                     7: 255
                     8: 264
                    12: 273
                    91: 279
                    92: 285
                    93: 291
                  2003: 304
                  2004: 316
                  2005: 310
               default: 322
          }
     192: aload_0
     193: iload_1
     194: invokevirtual #47                 // Method getBoolean:(I)Z
     197: ifeq          206
     200: getstatic     #48                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
     203: goto          209
     206: getstatic     #49                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     209: areturn
     210: aload_0
     211: iload_1
     212: invokevirtual #50                 // Method getInt:(I)I
     215: invokestatic  #51                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     218: areturn
     219: aload_0
     220: iload_1
     221: invokevirtual #52                 // Method getLong:(I)J
     224: invokestatic  #53                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     227: areturn
     228: aload_0
     229: iload_1
     230: aload_2
     231: invokevirtual #54                 // Method org/postgresql/core/Field.getMod:()I
     234: iconst_m1
     235: if_icmpne     242
     238: iconst_m1
     239: goto          251
     242: aload_2
     243: invokevirtual #54                 // Method org/postgresql/core/Field.getMod:()I
     246: iconst_4
     247: isub
     248: ldc           #55                 // int 65535
     250: iand
     251: invokevirtual #56                 // Method getBigDecimal:(II)Ljava/math/BigDecimal;
     254: areturn
     255: aload_0
     256: iload_1
     257: invokevirtual #57                 // Method getFloat:(I)F
     260: invokestatic  #58                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
     263: areturn
     264: aload_0
     265: iload_1
     266: invokevirtual #59                 // Method getDouble:(I)D
     269: invokestatic  #60                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
     272: areturn
     273: aload_0
     274: iload_1
     275: invokevirtual #61                 // Method getString:(I)Ljava/lang/String;
     278: areturn
     279: aload_0
     280: iload_1
     281: invokevirtual #62                 // Method getDate:(I)Ljava/sql/Date;
     284: areturn
     285: aload_0
     286: iload_1
     287: invokevirtual #63                 // Method getTime:(I)Ljava/sql/Time;
     290: areturn
     291: aload_0
     292: iload_1
     293: aconst_null
     294: invokevirtual #64                 // Method getTimestamp:(ILjava/util/Calendar;)Ljava/sql/Timestamp;
     297: areturn
     298: aload_0
     299: iload_1
     300: invokevirtual #65                 // Method getBytes:(I)[B
     303: areturn
     304: aload_0
     305: iload_1
     306: invokevirtual #66                 // Method getArray:(I)Ljava/sql/Array;
     309: areturn
     310: aload_0
     311: iload_1
     312: invokevirtual #67                 // Method getClob:(I)Ljava/sql/Clob;
     315: areturn
     316: aload_0
     317: iload_1
     318: invokevirtual #68                 // Method getBlob:(I)Ljava/sql/Blob;
     321: areturn
     322: aload_0
     323: iload_1
     324: invokevirtual #69                 // Method getPGType:(I)Ljava/lang/String;
     327: astore_3
     328: aload_3
     329: ldc           #70                 // String unknown
     331: invokevirtual #71                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     334: ifeq          343
     337: aload_0
     338: iload_1
     339: invokevirtual #61                 // Method getString:(I)Ljava/lang/String;
     342: areturn
     343: aload_3
     344: ldc           #72                 // String uuid
     346: invokevirtual #71                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     349: ifeq          383
     352: aload_0
     353: iload_1
     354: invokevirtual #73                 // Method isBinary:(I)Z
     357: ifeq          373
     360: aload_0
     361: aload_0
     362: getfield      #74                 // Field this_row:[[B
     365: iload_1
     366: iconst_1
     367: isub
     368: aaload
     369: invokevirtual #75                 // Method getUUID:([B)Ljava/lang/Object;
     372: areturn
     373: aload_0
     374: aload_0
     375: iload_1
     376: invokevirtual #61                 // Method getString:(I)Ljava/lang/String;
     379: invokevirtual #76                 // Method getUUID:(Ljava/lang/String;)Ljava/lang/Object;
     382: areturn
     383: aload_3
     384: ldc           #77                 // String refcursor
     386: invokevirtual #71                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     389: ifeq          490
     392: aload_0
     393: iload_1
     394: invokevirtual #61                 // Method getString:(I)Ljava/lang/String;
     397: astore        4
     399: new           #78                 // class java/lang/StringBuilder
     402: dup
     403: ldc           #79                 // String FETCH ALL IN
     405: invokespecial #80                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     408: astore        5
     410: aload         5
     412: aload         4
     414: invokestatic  #81                 // Method org/postgresql/core/Utils.escapeIdentifier:(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;
     417: pop
     418: aload_0
     419: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     422: aload         5
     424: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     427: aload_0
     428: getfield      #39                 // Field resultsettype:I
     431: sipush        1007
     434: invokeinterface #83,  4           // InterfaceMethod org/postgresql/core/BaseConnection.execSQLQuery:(Ljava/lang/String;II)Ljava/sql/ResultSet;
     439: astore        6
     441: aload         5
     443: iconst_0
     444: invokevirtual #84                 // Method java/lang/StringBuilder.setLength:(I)V
     447: aload         5
     449: ldc           #85                 // String CLOSE
     451: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     454: pop
     455: aload         5
     457: aload         4
     459: invokestatic  #81                 // Method org/postgresql/core/Utils.escapeIdentifier:(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;
     462: pop
     463: aload_0
     464: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     467: aload         5
     469: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     472: invokeinterface #87,  2           // InterfaceMethod org/postgresql/core/BaseConnection.execSQLUpdate:(Ljava/lang/String;)V
     477: aload         6
     479: checkcast     #88                 // class org/postgresql/jdbc2/AbstractJdbc2ResultSet
     482: aload         4
     484: invokespecial #89                 // Method setRefCursor:(Ljava/lang/String;)V
     487: aload         6
     489: areturn
     490: ldc           #90                 // String hstore
     492: aload_3
     493: invokevirtual #71                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     496: ifeq          537
     499: aload_0
     500: iload_1
     501: invokevirtual #73                 // Method isBinary:(I)Z
     504: ifeq          528
     507: aload_0
     508: getfield      #74                 // Field this_row:[[B
     511: iload_1
     512: iconst_1
     513: isub
     514: aaload
     515: aload_0
     516: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     519: invokeinterface #91,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getEncoding:()Lorg/postgresql/core/Encoding;
     524: invokestatic  #92                 // Method org/postgresql/util/HStoreConverter.fromBytes:([BLorg/postgresql/core/Encoding;)Ljava/util/Map;
     527: areturn
     528: aload_0
     529: iload_1
     530: invokevirtual #61                 // Method getString:(I)Ljava/lang/String;
     533: invokestatic  #93                 // Method org/postgresql/util/HStoreConverter.fromString:(Ljava/lang/String;)Ljava/util/Map;
     536: areturn
     537: aconst_null
     538: areturn

  private void checkScrollable() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method checkClosed:()V
       4: aload_0
       5: getfield      #39                 // Field resultsettype:I
       8: sipush        1003
      11: if_icmpne     30
      14: new           #94                 // class org/postgresql/util/PSQLException
      17: dup
      18: ldc           #95                 // String Operation requires a scrollable ResultSet, but this ResultSet is FORWARD_ONLY.
      20: invokestatic  #96                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      23: getstatic     #97                 // Field org/postgresql/util/PSQLState.INVALID_CURSOR_STATE:Lorg/postgresql/util/PSQLState;
      26: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      29: athrow
      30: return

  public boolean absolute(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #99                 // Method checkScrollable:()V
       4: iload_1
       5: ifne          14
       8: aload_0
       9: invokevirtual #100                // Method beforeFirst:()V
      12: iconst_0
      13: ireturn
      14: aload_0
      15: getfield      #35                 // Field rows:Ljava/util/List;
      18: invokeinterface #101,  1          // InterfaceMethod java/util/List.size:()I
      23: istore_3
      24: iload_1
      25: ifge          47
      28: iload_1
      29: iload_3
      30: ineg
      31: if_icmplt     41
      34: iload_3
      35: iload_1
      36: iadd
      37: istore_2
      38: goto          65
      41: aload_0
      42: invokevirtual #100                // Method beforeFirst:()V
      45: iconst_0
      46: ireturn
      47: iload_1
      48: iload_3
      49: if_icmpgt     59
      52: iload_1
      53: iconst_1
      54: isub
      55: istore_2
      56: goto          65
      59: aload_0
      60: invokevirtual #102                // Method afterLast:()V
      63: iconst_0
      64: ireturn
      65: aload_0
      66: iload_2
      67: putfield      #19                 // Field current_row:I
      70: aload_0
      71: invokespecial #103                // Method initRowBuffer:()V
      74: aload_0
      75: iconst_0
      76: putfield      #22                 // Field onInsertRow:Z
      79: iconst_1
      80: ireturn

  public void afterLast() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #99                 // Method checkScrollable:()V
       4: aload_0
       5: getfield      #35                 // Field rows:Ljava/util/List;
       8: invokeinterface #101,  1          // InterfaceMethod java/util/List.size:()I
      13: istore_1
      14: iload_1
      15: ifle          23
      18: aload_0
      19: iload_1
      20: putfield      #19                 // Field current_row:I
      23: aload_0
      24: iconst_0
      25: putfield      #22                 // Field onInsertRow:Z
      28: aload_0
      29: aconst_null
      30: checkcast     #23                 // class "[[B"
      33: putfield      #74                 // Field this_row:[[B
      36: aload_0
      37: aconst_null
      38: checkcast     #23                 // class "[[B"
      41: putfield      #24                 // Field rowBuffer:[[B
      44: return

  public void beforeFirst() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #99                 // Method checkScrollable:()V
       4: aload_0
       5: getfield      #35                 // Field rows:Ljava/util/List;
       8: invokeinterface #101,  1          // InterfaceMethod java/util/List.size:()I
      13: ifle          21
      16: aload_0
      17: iconst_m1
      18: putfield      #19                 // Field current_row:I
      21: aload_0
      22: iconst_0
      23: putfield      #22                 // Field onInsertRow:Z
      26: aload_0
      27: aconst_null
      28: checkcast     #23                 // class "[[B"
      31: putfield      #74                 // Field this_row:[[B
      34: aload_0
      35: aconst_null
      36: checkcast     #23                 // class "[[B"
      39: putfield      #24                 // Field rowBuffer:[[B
      42: return

  public boolean first() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #99                 // Method checkScrollable:()V
       4: aload_0
       5: getfield      #35                 // Field rows:Ljava/util/List;
       8: invokeinterface #101,  1          // InterfaceMethod java/util/List.size:()I
      13: ifgt          18
      16: iconst_0
      17: ireturn
      18: aload_0
      19: iconst_0
      20: putfield      #19                 // Field current_row:I
      23: aload_0
      24: invokespecial #103                // Method initRowBuffer:()V
      27: aload_0
      28: iconst_0
      29: putfield      #22                 // Field onInsertRow:Z
      32: iconst_1
      33: ireturn

  public java.sql.Array getArray(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: invokevirtual #66                 // Method getArray:(I)Ljava/sql/Array;
       9: areturn

  protected abstract java.sql.Array makeArray(int, byte[]) throws java.sql.SQLException;

  protected abstract java.sql.Array makeArray(int, java.lang.String) throws java.sql.SQLException;

  public java.sql.Array getArray(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #104                // Method checkResultSet:(I)V
       5: aload_0
       6: getfield      #21                 // Field wasNullFlag:Z
       9: ifeq          14
      12: aconst_null
      13: areturn
      14: aload_0
      15: getfield      #34                 // Field fields:[Lorg/postgresql/core/Field;
      18: iload_1
      19: iconst_1
      20: isub
      21: aaload
      22: invokevirtual #105                // Method org/postgresql/core/Field.getOID:()I
      25: istore_2
      26: aload_0
      27: iload_1
      28: invokevirtual #73                 // Method isBinary:(I)Z
      31: ifeq          48
      34: aload_0
      35: iload_2
      36: aload_0
      37: getfield      #74                 // Field this_row:[[B
      40: iload_1
      41: iconst_1
      42: isub
      43: aaload
      44: invokevirtual #106                // Method makeArray:(I[B)Ljava/sql/Array;
      47: areturn
      48: aload_0
      49: iload_2
      50: aload_0
      51: iload_1
      52: invokevirtual #107                // Method getFixedString:(I)Ljava/lang/String;
      55: invokevirtual #108                // Method makeArray:(ILjava/lang/String;)Ljava/sql/Array;
      58: areturn

  public java.math.BigDecimal getBigDecimal(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: iconst_m1
       3: invokevirtual #56                 // Method getBigDecimal:(II)Ljava/math/BigDecimal;
       6: areturn

  public java.math.BigDecimal getBigDecimal(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: invokevirtual #109                // Method getBigDecimal:(I)Ljava/math/BigDecimal;
       9: areturn

  public java.sql.Blob getBlob(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: invokevirtual #68                 // Method getBlob:(I)Ljava/sql/Blob;
       9: areturn

  protected abstract java.sql.Blob makeBlob(long) throws java.sql.SQLException;

  public java.sql.Blob getBlob(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #104                // Method checkResultSet:(I)V
       5: aload_0
       6: getfield      #21                 // Field wasNullFlag:Z
       9: ifeq          14
      12: aconst_null
      13: areturn
      14: aload_0
      15: aload_0
      16: iload_1
      17: invokevirtual #52                 // Method getLong:(I)J
      20: invokevirtual #110                // Method makeBlob:(J)Ljava/sql/Blob;
      23: areturn

  public java.io.Reader getCharacterStream(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: invokevirtual #111                // Method getCharacterStream:(I)Ljava/io/Reader;
       9: areturn

  public java.io.Reader getCharacterStream(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #104                // Method checkResultSet:(I)V
       5: aload_0
       6: getfield      #21                 // Field wasNullFlag:Z
       9: ifeq          14
      12: aconst_null
      13: areturn
      14: aload_0
      15: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
      18: checkcast     #112                // class org/postgresql/jdbc2/AbstractJdbc2Connection
      21: getstatic     #113                // Field org/postgresql/core/ServerVersion.v7_2:Lorg/postgresql/core/ServerVersion;
      24: invokevirtual #114                // Method org/postgresql/jdbc2/AbstractJdbc2Connection.haveMinimumCompatibleVersion:(Lorg/postgresql/core/Version;)Z
      27: ifeq          46
      30: new           #115                // class java/io/CharArrayReader
      33: dup
      34: aload_0
      35: iload_1
      36: invokevirtual #61                 // Method getString:(I)Ljava/lang/String;
      39: invokevirtual #116                // Method java/lang/String.toCharArray:()[C
      42: invokespecial #117                // Method java/io/CharArrayReader."<init>":([C)V
      45: areturn
      46: aload_0
      47: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
      50: invokeinterface #91,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getEncoding:()Lorg/postgresql/core/Encoding;
      55: astore_2
      56: aload_0
      57: iload_1
      58: invokevirtual #118                // Method getBinaryStream:(I)Ljava/io/InputStream;
      61: astore_3
      62: aload_2
      63: aload_3
      64: invokevirtual #119                // Method org/postgresql/core/Encoding.getDecodingReader:(Ljava/io/InputStream;)Ljava/io/Reader;
      67: areturn
      68: astore        4
      70: new           #94                 // class org/postgresql/util/PSQLException
      73: dup
      74: ldc           #121                // String Unexpected error while decoding character data from a large object.
      76: invokestatic  #96                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      79: getstatic     #122                // Field org/postgresql/util/PSQLState.UNEXPECTED_ERROR:Lorg/postgresql/util/PSQLState;
      82: aload         4
      84: invokespecial #123                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
      87: athrow
    Exception table:
       from    to  target type
          62    67    68   Class java/io/IOException

  public java.sql.Clob getClob(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: invokevirtual #67                 // Method getClob:(I)Ljava/sql/Clob;
       9: areturn

  protected abstract java.sql.Clob makeClob(long) throws java.sql.SQLException;

  public java.sql.Clob getClob(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #104                // Method checkResultSet:(I)V
       5: aload_0
       6: getfield      #21                 // Field wasNullFlag:Z
       9: ifeq          14
      12: aconst_null
      13: areturn
      14: aload_0
      15: aload_0
      16: iload_1
      17: invokevirtual #52                 // Method getLong:(I)J
      20: invokevirtual #124                // Method makeClob:(J)Ljava/sql/Clob;
      23: areturn

  public int getConcurrency() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method checkClosed:()V
       4: aload_0
       5: getfield      #40                 // Field resultsetconcurrency:I
       8: ireturn

  public java.sql.Date getDate(int, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #104                // Method checkResultSet:(I)V
       5: aload_0
       6: getfield      #21                 // Field wasNullFlag:Z
       9: ifeq          14
      12: aconst_null
      13: areturn
      14: aload_0
      15: iload_1
      16: invokevirtual #73                 // Method isBinary:(I)Z
      19: ifeq          157
      22: iload_1
      23: iconst_1
      24: isub
      25: istore_3
      26: aload_0
      27: getfield      #34                 // Field fields:[Lorg/postgresql/core/Field;
      30: iload_3
      31: aaload
      32: invokevirtual #105                // Method org/postgresql/core/Field.getOID:()I
      35: istore        4
      37: aload_2
      38: ifnonnull     45
      41: aconst_null
      42: goto          49
      45: aload_2
      46: invokevirtual #125                // Method java/util/Calendar.getTimeZone:()Ljava/util/TimeZone;
      49: astore        5
      51: iload         4
      53: sipush        1082
      56: if_icmpne     80
      59: aload_0
      60: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
      63: invokeinterface #127,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc2/TimestampUtils;
      68: aload         5
      70: aload_0
      71: getfield      #74                 // Field this_row:[[B
      74: iload_3
      75: aaload
      76: invokevirtual #128                // Method org/postgresql/jdbc2/TimestampUtils.toDateBin:(Ljava/util/TimeZone;[B)Ljava/sql/Date;
      79: areturn
      80: iload         4
      82: sipush        1114
      85: if_icmpeq     96
      88: iload         4
      90: sipush        1184
      93: if_icmpne     124
      96: aload_0
      97: iload_1
      98: aload_2
      99: invokevirtual #64                 // Method getTimestamp:(ILjava/util/Calendar;)Ljava/sql/Timestamp;
     102: astore        6
     104: aload_0
     105: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     108: invokeinterface #127,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc2/TimestampUtils;
     113: aload         6
     115: invokevirtual #129                // Method java/sql/Timestamp.getTime:()J
     118: aload         5
     120: invokevirtual #130                // Method org/postgresql/jdbc2/TimestampUtils.convertToDate:(JLjava/util/TimeZone;)Ljava/sql/Date;
     123: areturn
     124: new           #94                 // class org/postgresql/util/PSQLException
     127: dup
     128: ldc           #131                // String Cannot convert the column of type {0} to requested type {1}.
     130: iconst_2
     131: anewarray     #132                // class java/lang/Object
     134: dup
     135: iconst_0
     136: iload         4
     138: invokestatic  #133                // Method org/postgresql/core/Oid.toString:(I)Ljava/lang/String;
     141: aastore
     142: dup
     143: iconst_1
     144: ldc           #134                // String date
     146: aastore
     147: invokestatic  #135                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     150: getstatic     #136                // Field org/postgresql/util/PSQLState.DATA_TYPE_MISMATCH:Lorg/postgresql/util/PSQLState;
     153: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     156: athrow
     157: aload_0
     158: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     161: invokeinterface #127,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc2/TimestampUtils;
     166: aload_2
     167: aload_0
     168: iload_1
     169: invokevirtual #61                 // Method getString:(I)Ljava/lang/String;
     172: invokevirtual #137                // Method org/postgresql/jdbc2/TimestampUtils.toDate:(Ljava/util/Calendar;Ljava/lang/String;)Ljava/sql/Date;
     175: areturn

  public java.sql.Time getTime(int, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #104                // Method checkResultSet:(I)V
       5: aload_0
       6: getfield      #21                 // Field wasNullFlag:Z
       9: ifeq          14
      12: aconst_null
      13: areturn
      14: aload_0
      15: iload_1
      16: invokevirtual #73                 // Method isBinary:(I)Z
      19: ifeq          165
      22: iload_1
      23: iconst_1
      24: isub
      25: istore_3
      26: aload_0
      27: getfield      #34                 // Field fields:[Lorg/postgresql/core/Field;
      30: iload_3
      31: aaload
      32: invokevirtual #105                // Method org/postgresql/core/Field.getOID:()I
      35: istore        4
      37: aload_2
      38: ifnonnull     45
      41: aconst_null
      42: goto          49
      45: aload_2
      46: invokevirtual #125                // Method java/util/Calendar.getTimeZone:()Ljava/util/TimeZone;
      49: astore        5
      51: iload         4
      53: sipush        1083
      56: if_icmpeq     67
      59: iload         4
      61: sipush        1266
      64: if_icmpne     88
      67: aload_0
      68: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
      71: invokeinterface #127,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc2/TimestampUtils;
      76: aload         5
      78: aload_0
      79: getfield      #74                 // Field this_row:[[B
      82: iload_3
      83: aaload
      84: invokevirtual #138                // Method org/postgresql/jdbc2/TimestampUtils.toTimeBin:(Ljava/util/TimeZone;[B)Ljava/sql/Time;
      87: areturn
      88: iload         4
      90: sipush        1114
      93: if_icmpeq     104
      96: iload         4
      98: sipush        1184
     101: if_icmpne     132
     104: aload_0
     105: iload_1
     106: aload_2
     107: invokevirtual #64                 // Method getTimestamp:(ILjava/util/Calendar;)Ljava/sql/Timestamp;
     110: astore        6
     112: aload_0
     113: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     116: invokeinterface #127,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc2/TimestampUtils;
     121: aload         6
     123: invokevirtual #129                // Method java/sql/Timestamp.getTime:()J
     126: aload         5
     128: invokevirtual #139                // Method org/postgresql/jdbc2/TimestampUtils.convertToTime:(JLjava/util/TimeZone;)Ljava/sql/Time;
     131: areturn
     132: new           #94                 // class org/postgresql/util/PSQLException
     135: dup
     136: ldc           #131                // String Cannot convert the column of type {0} to requested type {1}.
     138: iconst_2
     139: anewarray     #132                // class java/lang/Object
     142: dup
     143: iconst_0
     144: iload         4
     146: invokestatic  #133                // Method org/postgresql/core/Oid.toString:(I)Ljava/lang/String;
     149: aastore
     150: dup
     151: iconst_1
     152: ldc           #140                // String time
     154: aastore
     155: invokestatic  #135                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     158: getstatic     #136                // Field org/postgresql/util/PSQLState.DATA_TYPE_MISMATCH:Lorg/postgresql/util/PSQLState;
     161: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     164: athrow
     165: aload_0
     166: iload_1
     167: invokevirtual #61                 // Method getString:(I)Ljava/lang/String;
     170: astore_3
     171: aload_0
     172: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     175: invokeinterface #127,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc2/TimestampUtils;
     180: aload_2
     181: aload_3
     182: invokevirtual #141                // Method org/postgresql/jdbc2/TimestampUtils.toTime:(Ljava/util/Calendar;Ljava/lang/String;)Ljava/sql/Time;
     185: areturn

  public java.sql.Timestamp getTimestamp(int, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #104                // Method checkResultSet:(I)V
       5: aload_0
       6: getfield      #21                 // Field wasNullFlag:Z
       9: ifeq          14
      12: aconst_null
      13: areturn
      14: iload_1
      15: iconst_1
      16: isub
      17: istore_3
      18: aload_0
      19: getfield      #34                 // Field fields:[Lorg/postgresql/core/Field;
      22: iload_3
      23: aaload
      24: invokevirtual #105                // Method org/postgresql/core/Field.getOID:()I
      27: istore        4
      29: aload_0
      30: iload_1
      31: invokevirtual #73                 // Method isBinary:(I)Z
      34: ifeq          200
      37: iload         4
      39: sipush        1184
      42: if_icmpeq     53
      45: iload         4
      47: sipush        1114
      50: if_icmpne     105
      53: iload         4
      55: sipush        1184
      58: if_icmpne     65
      61: iconst_1
      62: goto          66
      65: iconst_0
      66: istore        5
      68: aload_2
      69: ifnonnull     76
      72: aconst_null
      73: goto          80
      76: aload_2
      77: invokevirtual #125                // Method java/util/Calendar.getTimeZone:()Ljava/util/TimeZone;
      80: astore        6
      82: aload_0
      83: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
      86: invokeinterface #127,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc2/TimestampUtils;
      91: aload         6
      93: aload_0
      94: getfield      #74                 // Field this_row:[[B
      97: iload_3
      98: aaload
      99: iload         5
     101: invokevirtual #142                // Method org/postgresql/jdbc2/TimestampUtils.toTimestampBin:(Ljava/util/TimeZone;[BZ)Ljava/sql/Timestamp;
     104: areturn
     105: iload         4
     107: sipush        1083
     110: if_icmpeq     121
     113: iload         4
     115: sipush        1266
     118: if_icmpne     135
     121: aload_0
     122: iload_1
     123: aload_2
     124: invokevirtual #143                // Method getTime:(ILjava/util/Calendar;)Ljava/sql/Time;
     127: invokevirtual #144                // Method java/sql/Time.getTime:()J
     130: lstore        5
     132: goto          190
     135: iload         4
     137: sipush        1082
     140: if_icmpne     157
     143: aload_0
     144: iload_1
     145: aload_2
     146: invokevirtual #145                // Method getDate:(ILjava/util/Calendar;)Ljava/sql/Date;
     149: invokevirtual #146                // Method java/sql/Date.getTime:()J
     152: lstore        5
     154: goto          190
     157: new           #94                 // class org/postgresql/util/PSQLException
     160: dup
     161: ldc           #131                // String Cannot convert the column of type {0} to requested type {1}.
     163: iconst_2
     164: anewarray     #132                // class java/lang/Object
     167: dup
     168: iconst_0
     169: iload         4
     171: invokestatic  #133                // Method org/postgresql/core/Oid.toString:(I)Ljava/lang/String;
     174: aastore
     175: dup
     176: iconst_1
     177: ldc           #147                // String timestamp
     179: aastore
     180: invokestatic  #135                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     183: getstatic     #136                // Field org/postgresql/util/PSQLState.DATA_TYPE_MISMATCH:Lorg/postgresql/util/PSQLState;
     186: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     189: athrow
     190: new           #148                // class java/sql/Timestamp
     193: dup
     194: lload         5
     196: invokespecial #149                // Method java/sql/Timestamp."<init>":(J)V
     199: areturn
     200: aload_0
     201: iload_1
     202: invokevirtual #61                 // Method getString:(I)Ljava/lang/String;
     205: astore        5
     207: iload         4
     209: sipush        1083
     212: if_icmpeq     223
     215: iload         4
     217: sipush        1266
     220: if_icmpne     249
     223: new           #148                // class java/sql/Timestamp
     226: dup
     227: aload_0
     228: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     231: invokeinterface #127,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc2/TimestampUtils;
     236: aload_2
     237: aload         5
     239: invokevirtual #141                // Method org/postgresql/jdbc2/TimestampUtils.toTime:(Ljava/util/Calendar;Ljava/lang/String;)Ljava/sql/Time;
     242: invokevirtual #144                // Method java/sql/Time.getTime:()J
     245: invokespecial #149                // Method java/sql/Timestamp."<init>":(J)V
     248: areturn
     249: aload_0
     250: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     253: invokeinterface #127,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc2/TimestampUtils;
     258: aload_2
     259: aload         5
     261: invokevirtual #150                // Method org/postgresql/jdbc2/TimestampUtils.toTimestamp:(Ljava/util/Calendar;Ljava/lang/String;)Ljava/sql/Timestamp;
     264: areturn

  public java.sql.Date getDate(java.lang.String, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: aload_2
       7: invokevirtual #145                // Method getDate:(ILjava/util/Calendar;)Ljava/sql/Date;
      10: areturn

  public java.sql.Time getTime(java.lang.String, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: aload_2
       7: invokevirtual #143                // Method getTime:(ILjava/util/Calendar;)Ljava/sql/Time;
      10: areturn

  public java.sql.Timestamp getTimestamp(java.lang.String, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: aload_2
       7: invokevirtual #64                 // Method getTimestamp:(ILjava/util/Calendar;)Ljava/sql/Timestamp;
      10: areturn

  public int getFetchDirection() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method checkClosed:()V
       4: aload_0
       5: getfield      #18                 // Field fetchdirection:I
       8: ireturn

  public java.lang.Object getObjectImpl(java.lang.String, java.util.Map) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: aload_2
       7: invokevirtual #151                // Method getObjectImpl:(ILjava/util/Map;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object getObjectImpl(int, java.util.Map) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method checkClosed:()V
       4: aload_2
       5: ifnull        17
       8: aload_2
       9: invokeinterface #152,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
      14: ifeq          23
      17: aload_0
      18: iload_1
      19: invokevirtual #153                // Method getObject:(I)Ljava/lang/Object;
      22: areturn
      23: aload_0
      24: invokevirtual #41                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: ldc           #154                // String getObjectImpl(int,Map)
      29: invokestatic  #43                 // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      32: athrow

  public java.sql.Ref getRef(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: invokevirtual #155                // Method getRef:(I)Ljava/sql/Ref;
       9: areturn

  public java.sql.Ref getRef(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #41                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: ldc           #156                // String getRef(int)
      10: invokestatic  #43                 // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      13: athrow

  public int getRow() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method checkClosed:()V
       4: aload_0
       5: getfield      #22                 // Field onInsertRow:Z
       8: ifeq          13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: getfield      #35                 // Field rows:Ljava/util/List;
      17: invokeinterface #101,  1          // InterfaceMethod java/util/List.size:()I
      22: istore_1
      23: aload_0
      24: getfield      #19                 // Field current_row:I
      27: iflt          38
      30: aload_0
      31: getfield      #19                 // Field current_row:I
      34: iload_1
      35: if_icmplt     40
      38: iconst_0
      39: ireturn
      40: aload_0
      41: getfield      #157                // Field row_offset:I
      44: aload_0
      45: getfield      #19                 // Field current_row:I
      48: iadd
      49: iconst_1
      50: iadd
      51: ireturn

  public java.sql.Statement getStatement() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method checkClosed:()V
       4: aload_0
       5: getfield      #33                 // Field statement:Lorg/postgresql/core/BaseStatement;
       8: areturn

  public int getType() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method checkClosed:()V
       4: aload_0
       5: getfield      #39                 // Field resultsettype:I
       8: ireturn

  public boolean isAfterLast() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method checkClosed:()V
       4: aload_0
       5: getfield      #22                 // Field onInsertRow:Z
       8: ifeq          13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: getfield      #35                 // Field rows:Ljava/util/List;
      17: invokeinterface #101,  1          // InterfaceMethod java/util/List.size:()I
      22: istore_1
      23: aload_0
      24: getfield      #157                // Field row_offset:I
      27: iload_1
      28: iadd
      29: ifne          34
      32: iconst_0
      33: ireturn
      34: aload_0
      35: getfield      #19                 // Field current_row:I
      38: iload_1
      39: if_icmplt     46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ireturn

  public boolean isBeforeFirst() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method checkClosed:()V
       4: aload_0
       5: getfield      #22                 // Field onInsertRow:Z
       8: ifeq          13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: getfield      #157                // Field row_offset:I
      17: aload_0
      18: getfield      #19                 // Field current_row:I
      21: iadd
      22: ifge          41
      25: aload_0
      26: getfield      #35                 // Field rows:Ljava/util/List;
      29: invokeinterface #101,  1          // InterfaceMethod java/util/List.size:()I
      34: ifle          41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn

  public boolean isFirst() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method checkClosed:()V
       4: aload_0
       5: getfield      #22                 // Field onInsertRow:Z
       8: ifeq          13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: getfield      #35                 // Field rows:Ljava/util/List;
      17: invokeinterface #101,  1          // InterfaceMethod java/util/List.size:()I
      22: istore_1
      23: aload_0
      24: getfield      #157                // Field row_offset:I
      27: iload_1
      28: iadd
      29: ifne          34
      32: iconst_0
      33: ireturn
      34: aload_0
      35: getfield      #157                // Field row_offset:I
      38: aload_0
      39: getfield      #19                 // Field current_row:I
      42: iadd
      43: ifne          50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ireturn

  public boolean isLast() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method checkClosed:()V
       4: aload_0
       5: getfield      #22                 // Field onInsertRow:Z
       8: ifeq          13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: getfield      #35                 // Field rows:Ljava/util/List;
      17: invokeinterface #101,  1          // InterfaceMethod java/util/List.size:()I
      22: istore_1
      23: iload_1
      24: ifne          29
      27: iconst_0
      28: ireturn
      29: aload_0
      30: getfield      #19                 // Field current_row:I
      33: iload_1
      34: iconst_1
      35: isub
      36: if_icmpeq     41
      39: iconst_0
      40: ireturn
      41: aload_0
      42: getfield      #36                 // Field cursor:Lorg/postgresql/core/ResultCursor;
      45: ifnonnull     50
      48: iconst_1
      49: ireturn
      50: aload_0
      51: getfield      #37                 // Field maxRows:I
      54: ifle          75
      57: aload_0
      58: getfield      #157                // Field row_offset:I
      61: aload_0
      62: getfield      #19                 // Field current_row:I
      65: iadd
      66: aload_0
      67: getfield      #37                 // Field maxRows:I
      70: if_icmpne     75
      73: iconst_1
      74: ireturn
      75: aload_0
      76: dup
      77: getfield      #157                // Field row_offset:I
      80: iload_1
      81: iconst_1
      82: isub
      83: iadd
      84: putfield      #157                // Field row_offset:I
      87: aload_0
      88: getfield      #158                // Field fetchSize:I
      91: istore_2
      92: aload_0
      93: getfield      #37                 // Field maxRows:I
      96: ifeq          126
      99: iload_2
     100: ifeq          116
     103: aload_0
     104: getfield      #157                // Field row_offset:I
     107: iload_2
     108: iadd
     109: aload_0
     110: getfield      #37                 // Field maxRows:I
     113: if_icmple     126
     116: aload_0
     117: getfield      #37                 // Field maxRows:I
     120: aload_0
     121: getfield      #157                // Field row_offset:I
     124: isub
     125: istore_2
     126: aload_0
     127: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     130: invokeinterface #159,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getQueryExecutor:()Lorg/postgresql/core/QueryExecutor;
     135: aload_0
     136: getfield      #36                 // Field cursor:Lorg/postgresql/core/ResultCursor;
     139: new           #160                // class org/postgresql/jdbc2/AbstractJdbc2ResultSet$CursorResultHandler
     142: dup
     143: aload_0
     144: invokespecial #161                // Method org/postgresql/jdbc2/AbstractJdbc2ResultSet$CursorResultHandler."<init>":(Lorg/postgresql/jdbc2/AbstractJdbc2ResultSet;)V
     147: iload_2
     148: invokeinterface #162,  4          // InterfaceMethod org/postgresql/core/QueryExecutor.fetch:(Lorg/postgresql/core/ResultCursor;Lorg/postgresql/core/ResultHandler;I)V
     153: aload_0
     154: getfield      #35                 // Field rows:Ljava/util/List;
     157: iconst_0
     158: aload_0
     159: getfield      #74                 // Field this_row:[[B
     162: invokeinterface #163,  3          // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
     167: aload_0
     168: iconst_0
     169: putfield      #19                 // Field current_row:I
     172: aload_0
     173: getfield      #35                 // Field rows:Ljava/util/List;
     176: invokeinterface #101,  1          // InterfaceMethod java/util/List.size:()I
     181: iconst_1
     182: if_icmpne     189
     185: iconst_1
     186: goto          190
     189: iconst_0
     190: ireturn

  public boolean last() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #99                 // Method checkScrollable:()V
       4: aload_0
       5: getfield      #35                 // Field rows:Ljava/util/List;
       8: invokeinterface #101,  1          // InterfaceMethod java/util/List.size:()I
      13: istore_1
      14: iload_1
      15: ifgt          20
      18: iconst_0
      19: ireturn
      20: aload_0
      21: iload_1
      22: iconst_1
      23: isub
      24: putfield      #19                 // Field current_row:I
      27: aload_0
      28: invokespecial #103                // Method initRowBuffer:()V
      31: aload_0
      32: iconst_0
      33: putfield      #22                 // Field onInsertRow:Z
      36: iconst_1
      37: ireturn

  public boolean previous() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #99                 // Method checkScrollable:()V
       4: aload_0
       5: getfield      #22                 // Field onInsertRow:Z
       8: ifeq          27
      11: new           #94                 // class org/postgresql/util/PSQLException
      14: dup
      15: ldc           #164                // String Can\'\'t use relative move methods while on the insert row.
      17: invokestatic  #96                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      20: getstatic     #97                 // Field org/postgresql/util/PSQLState.INVALID_CURSOR_STATE:Lorg/postgresql/util/PSQLState;
      23: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      26: athrow
      27: aload_0
      28: getfield      #19                 // Field current_row:I
      31: iconst_1
      32: isub
      33: ifge          59
      36: aload_0
      37: iconst_m1
      38: putfield      #19                 // Field current_row:I
      41: aload_0
      42: aconst_null
      43: checkcast     #23                 // class "[[B"
      46: putfield      #74                 // Field this_row:[[B
      49: aload_0
      50: aconst_null
      51: checkcast     #23                 // class "[[B"
      54: putfield      #24                 // Field rowBuffer:[[B
      57: iconst_0
      58: ireturn
      59: aload_0
      60: dup
      61: getfield      #19                 // Field current_row:I
      64: iconst_1
      65: isub
      66: putfield      #19                 // Field current_row:I
      69: aload_0
      70: invokespecial #103                // Method initRowBuffer:()V
      73: iconst_1
      74: ireturn

  public boolean relative(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #99                 // Method checkScrollable:()V
       4: aload_0
       5: getfield      #22                 // Field onInsertRow:Z
       8: ifeq          27
      11: new           #94                 // class org/postgresql/util/PSQLException
      14: dup
      15: ldc           #164                // String Can\'\'t use relative move methods while on the insert row.
      17: invokestatic  #96                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      20: getstatic     #97                 // Field org/postgresql/util/PSQLState.INVALID_CURSOR_STATE:Lorg/postgresql/util/PSQLState;
      23: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      26: athrow
      27: aload_0
      28: aload_0
      29: getfield      #19                 // Field current_row:I
      32: iconst_1
      33: iadd
      34: iload_1
      35: iadd
      36: invokevirtual #165                // Method absolute:(I)Z
      39: ireturn

  public void setFetchDirection(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method checkClosed:()V
       4: iload_1
       5: tableswitch   { // 1000 to 1002
                  1000: 32
                  1001: 35
                  1002: 35
               default: 42
          }
      32: goto          62
      35: aload_0
      36: invokespecial #99                 // Method checkScrollable:()V
      39: goto          62
      42: new           #94                 // class org/postgresql/util/PSQLException
      45: dup
      46: ldc           #166                // String Invalid fetch direction constant: {0}.
      48: iload_1
      49: invokestatic  #51                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      52: invokestatic  #167                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
      55: getstatic     #168                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      58: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      61: athrow
      62: aload_0
      63: iload_1
      64: putfield      #18                 // Field fetchdirection:I
      67: return

  public synchronized void cancelRowUpdates() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method checkClosed:()V
       4: aload_0
       5: getfield      #22                 // Field onInsertRow:Z
       8: ifeq          27
      11: new           #94                 // class org/postgresql/util/PSQLException
      14: dup
      15: ldc           #169                // String Cannot call cancelRowUpdates() when on the insert row.
      17: invokestatic  #96                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      20: getstatic     #97                 // Field org/postgresql/util/PSQLState.INVALID_CURSOR_STATE:Lorg/postgresql/util/PSQLState;
      23: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      26: athrow
      27: aload_0
      28: getfield      #6                  // Field doingUpdates:Z
      31: ifeq          44
      34: aload_0
      35: iconst_0
      36: putfield      #6                  // Field doingUpdates:Z
      39: aload_0
      40: iconst_1
      41: invokespecial #170                // Method clearRowBuffer:(Z)V
      44: return

  public synchronized void deleteRow() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #171                // Method checkUpdateable:()V
       4: aload_0
       5: getfield      #22                 // Field onInsertRow:Z
       8: ifeq          27
      11: new           #94                 // class org/postgresql/util/PSQLException
      14: dup
      15: ldc           #172                // String Cannot call deleteRow() when on the insert row.
      17: invokestatic  #96                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      20: getstatic     #97                 // Field org/postgresql/util/PSQLState.INVALID_CURSOR_STATE:Lorg/postgresql/util/PSQLState;
      23: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      26: athrow
      27: aload_0
      28: invokevirtual #173                // Method isBeforeFirst:()Z
      31: ifeq          50
      34: new           #94                 // class org/postgresql/util/PSQLException
      37: dup
      38: ldc           #174                // String Currently positioned before the start of the ResultSet.  You cannot call deleteRow() here.
      40: invokestatic  #96                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      43: getstatic     #97                 // Field org/postgresql/util/PSQLState.INVALID_CURSOR_STATE:Lorg/postgresql/util/PSQLState;
      46: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      49: athrow
      50: aload_0
      51: invokevirtual #175                // Method isAfterLast:()Z
      54: ifeq          73
      57: new           #94                 // class org/postgresql/util/PSQLException
      60: dup
      61: ldc           #176                // String Currently positioned after the end of the ResultSet.  You cannot call deleteRow() here.
      63: invokestatic  #96                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      66: getstatic     #97                 // Field org/postgresql/util/PSQLState.INVALID_CURSOR_STATE:Lorg/postgresql/util/PSQLState;
      69: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      72: athrow
      73: aload_0
      74: getfield      #35                 // Field rows:Ljava/util/List;
      77: invokeinterface #101,  1          // InterfaceMethod java/util/List.size:()I
      82: ifne          101
      85: new           #94                 // class org/postgresql/util/PSQLException
      88: dup
      89: ldc           #177                // String There are no rows in this ResultSet.
      91: invokestatic  #96                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      94: getstatic     #97                 // Field org/postgresql/util/PSQLState.INVALID_CURSOR_STATE:Lorg/postgresql/util/PSQLState;
      97: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     100: athrow
     101: aload_0
     102: getfield      #178                // Field primaryKeys:Ljava/util/List;
     105: invokeinterface #101,  1          // InterfaceMethod java/util/List.size:()I
     110: istore_1
     111: aload_0
     112: getfield      #15                 // Field deleteStatement:Ljava/sql/PreparedStatement;
     115: ifnonnull     219
     118: new           #78                 // class java/lang/StringBuilder
     121: dup
     122: ldc           #179                // String DELETE FROM
     124: invokespecial #80                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     127: aload_0
     128: getfield      #11                 // Field onlyTable:Ljava/lang/String;
     131: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: aload_0
     135: getfield      #12                 // Field tableName:Ljava/lang/String;
     138: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: ldc           #180                // String  where
     143: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: astore_2
     147: iconst_0
     148: istore_3
     149: iload_3
     150: iload_1
     151: if_icmpge     202
     154: aload_2
     155: aload_0
     156: getfield      #178                // Field primaryKeys:Ljava/util/List;
     159: iload_3
     160: invokeinterface #181,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     165: checkcast     #182                // class org/postgresql/jdbc2/AbstractJdbc2ResultSet$PrimaryKey
     168: getfield      #183                // Field org/postgresql/jdbc2/AbstractJdbc2ResultSet$PrimaryKey.name:Ljava/lang/String;
     171: invokestatic  #81                 // Method org/postgresql/core/Utils.escapeIdentifier:(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: pop
     175: aload_2
     176: ldc           #184                // String  = ?
     178: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     181: pop
     182: iload_3
     183: iload_1
     184: iconst_1
     185: isub
     186: if_icmpge     196
     189: aload_2
     190: ldc           #185                // String  and
     192: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     195: pop
     196: iinc          3, 1
     199: goto          149
     202: aload_0
     203: aload_0
     204: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     207: aload_2
     208: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     211: invokeinterface #186,  2          // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
     216: putfield      #15                 // Field deleteStatement:Ljava/sql/PreparedStatement;
     219: aload_0
     220: getfield      #15                 // Field deleteStatement:Ljava/sql/PreparedStatement;
     223: invokeinterface #187,  1          // InterfaceMethod java/sql/PreparedStatement.clearParameters:()V
     228: iconst_0
     229: istore_2
     230: iload_2
     231: iload_1
     232: if_icmpge     269
     235: aload_0
     236: getfield      #15                 // Field deleteStatement:Ljava/sql/PreparedStatement;
     239: iload_2
     240: iconst_1
     241: iadd
     242: aload_0
     243: getfield      #178                // Field primaryKeys:Ljava/util/List;
     246: iload_2
     247: invokeinterface #181,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     252: checkcast     #182                // class org/postgresql/jdbc2/AbstractJdbc2ResultSet$PrimaryKey
     255: invokevirtual #188                // Method org/postgresql/jdbc2/AbstractJdbc2ResultSet$PrimaryKey.getValue:()Ljava/lang/Object;
     258: invokeinterface #189,  3          // InterfaceMethod java/sql/PreparedStatement.setObject:(ILjava/lang/Object;)V
     263: iinc          2, 1
     266: goto          230
     269: aload_0
     270: getfield      #15                 // Field deleteStatement:Ljava/sql/PreparedStatement;
     273: invokeinterface #190,  1          // InterfaceMethod java/sql/PreparedStatement.executeUpdate:()I
     278: pop
     279: aload_0
     280: getfield      #35                 // Field rows:Ljava/util/List;
     283: aload_0
     284: getfield      #19                 // Field current_row:I
     287: invokeinterface #191,  2          // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
     292: pop
     293: aload_0
     294: dup
     295: getfield      #19                 // Field current_row:I
     298: iconst_1
     299: isub
     300: putfield      #19                 // Field current_row:I
     303: aload_0
     304: invokevirtual #192                // Method moveToCurrentRow:()V
     307: return

  public synchronized void insertRow() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #171                // Method checkUpdateable:()V
       4: aload_0
       5: getfield      #22                 // Field onInsertRow:Z
       8: ifne          27
      11: new           #94                 // class org/postgresql/util/PSQLException
      14: dup
      15: ldc           #193                // String Not on the insert row.
      17: invokestatic  #96                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      20: getstatic     #97                 // Field org/postgresql/util/PSQLState.INVALID_CURSOR_STATE:Lorg/postgresql/util/PSQLState;
      23: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      26: athrow
      27: aload_0
      28: getfield      #7                  // Field updateValues:Ljava/util/HashMap;
      31: invokevirtual #194                // Method java/util/HashMap.size:()I
      34: ifne          53
      37: new           #94                 // class org/postgresql/util/PSQLException
      40: dup
      41: ldc           #195                // String You must specify at least one column value to insert a row.
      43: invokestatic  #96                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      46: getstatic     #168                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      49: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      52: athrow
      53: new           #78                 // class java/lang/StringBuilder
      56: dup
      57: ldc           #196                // String INSERT INTO
      59: invokespecial #80                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      62: aload_0
      63: getfield      #12                 // Field tableName:Ljava/lang/String;
      66: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: ldc           #197                // String  (
      71: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: astore_1
      75: new           #78                 // class java/lang/StringBuilder
      78: dup
      79: ldc           #198                // String ) values (
      81: invokespecial #80                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      84: astore_2
      85: aload_0
      86: getfield      #7                  // Field updateValues:Ljava/util/HashMap;
      89: invokevirtual #199                // Method java/util/HashMap.keySet:()Ljava/util/Set;
      92: invokeinterface #200,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      97: astore_3
      98: aload_0
      99: getfield      #7                  // Field updateValues:Ljava/util/HashMap;
     102: invokevirtual #194                // Method java/util/HashMap.size:()I
     105: istore        4
     107: iconst_0
     108: istore        5
     110: aload_3
     111: invokeinterface #201,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     116: ifeq          176
     119: aload_3
     120: invokeinterface #202,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     125: checkcast     #203                // class java/lang/String
     128: astore        6
     130: aload_1
     131: aload         6
     133: invokestatic  #81                 // Method org/postgresql/core/Utils.escapeIdentifier:(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: pop
     137: iload         5
     139: iload         4
     141: iconst_1
     142: isub
     143: if_icmpge     163
     146: aload_1
     147: ldc           #204                // String ,
     149: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: pop
     153: aload_2
     154: ldc           #205                // String ?,
     156: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: pop
     160: goto          170
     163: aload_2
     164: ldc           #206                // String ?)
     166: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     169: pop
     170: iinc          5, 1
     173: goto          110
     176: aload_1
     177: aload_2
     178: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     181: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     184: pop
     185: aload_0
     186: aload_0
     187: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     190: aload_1
     191: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     194: invokeinterface #186,  2          // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
     199: putfield      #14                 // Field insertStatement:Ljava/sql/PreparedStatement;
     202: aload_0
     203: getfield      #7                  // Field updateValues:Ljava/util/HashMap;
     206: invokevirtual #199                // Method java/util/HashMap.keySet:()Ljava/util/Set;
     209: invokeinterface #200,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     214: astore        5
     216: iconst_1
     217: istore        6
     219: aload         5
     221: invokeinterface #201,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     226: ifeq          271
     229: aload         5
     231: invokeinterface #202,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     236: checkcast     #203                // class java/lang/String
     239: astore        7
     241: aload_0
     242: getfield      #7                  // Field updateValues:Ljava/util/HashMap;
     245: aload         7
     247: invokevirtual #207                // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     250: astore        8
     252: aload_0
     253: getfield      #14                 // Field insertStatement:Ljava/sql/PreparedStatement;
     256: iload         6
     258: aload         8
     260: invokeinterface #189,  3          // InterfaceMethod java/sql/PreparedStatement.setObject:(ILjava/lang/Object;)V
     265: iinc          6, 1
     268: goto          219
     271: aload_0
     272: getfield      #14                 // Field insertStatement:Ljava/sql/PreparedStatement;
     275: invokeinterface #190,  1          // InterfaceMethod java/sql/PreparedStatement.executeUpdate:()I
     280: pop
     281: aload_0
     282: getfield      #8                  // Field usingOID:Z
     285: ifeq          315
     288: aload_0
     289: getfield      #14                 // Field insertStatement:Ljava/sql/PreparedStatement;
     292: checkcast     #208                // class org/postgresql/jdbc2/AbstractJdbc2Statement
     295: invokevirtual #209                // Method org/postgresql/jdbc2/AbstractJdbc2Statement.getLastOID:()J
     298: lstore        6
     300: aload_0
     301: getfield      #7                  // Field updateValues:Ljava/util/HashMap;
     304: ldc           #210                // String oid
     306: lload         6
     308: invokestatic  #53                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     311: invokevirtual #211                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     314: pop
     315: aload_0
     316: invokespecial #212                // Method updateRowBuffer:()V
     319: aload_0
     320: getfield      #35                 // Field rows:Ljava/util/List;
     323: aload_0
     324: getfield      #24                 // Field rowBuffer:[[B
     327: invokeinterface #213,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     332: pop
     333: aload_0
     334: aload_0
     335: getfield      #24                 // Field rowBuffer:[[B
     338: putfield      #74                 // Field this_row:[[B
     341: aload_0
     342: iconst_0
     343: invokespecial #170                // Method clearRowBuffer:(Z)V
     346: return

  public synchronized void moveToCurrentRow() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #171                // Method checkUpdateable:()V
       4: aload_0
       5: getfield      #19                 // Field current_row:I
       8: iflt          27
      11: aload_0
      12: getfield      #19                 // Field current_row:I
      15: aload_0
      16: getfield      #35                 // Field rows:Ljava/util/List;
      19: invokeinterface #101,  1          // InterfaceMethod java/util/List.size:()I
      24: if_icmplt     46
      27: aload_0
      28: aconst_null
      29: checkcast     #23                 // class "[[B"
      32: putfield      #74                 // Field this_row:[[B
      35: aload_0
      36: aconst_null
      37: checkcast     #23                 // class "[[B"
      40: putfield      #24                 // Field rowBuffer:[[B
      43: goto          50
      46: aload_0
      47: invokespecial #103                // Method initRowBuffer:()V
      50: aload_0
      51: iconst_0
      52: putfield      #22                 // Field onInsertRow:Z
      55: aload_0
      56: iconst_0
      57: putfield      #6                  // Field doingUpdates:Z
      60: return

  public synchronized void moveToInsertRow() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #171                // Method checkUpdateable:()V
       4: aload_0
       5: getfield      #14                 // Field insertStatement:Ljava/sql/PreparedStatement;
       8: ifnull        16
      11: aload_0
      12: aconst_null
      13: putfield      #14                 // Field insertStatement:Ljava/sql/PreparedStatement;
      16: aload_0
      17: iconst_0
      18: invokespecial #170                // Method clearRowBuffer:(Z)V
      21: aload_0
      22: iconst_1
      23: putfield      #22                 // Field onInsertRow:Z
      26: aload_0
      27: iconst_0
      28: putfield      #6                  // Field doingUpdates:Z
      31: return

  private synchronized void clearRowBuffer(boolean) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #34                 // Field fields:[Lorg/postgresql/core/Field;
       5: arraylength
       6: anewarray     #214                // class "[B"
       9: putfield      #24                 // Field rowBuffer:[[B
      12: iload_1
      13: ifeq          34
      16: aload_0
      17: getfield      #74                 // Field this_row:[[B
      20: iconst_0
      21: aload_0
      22: getfield      #24                 // Field rowBuffer:[[B
      25: iconst_0
      26: aload_0
      27: getfield      #74                 // Field this_row:[[B
      30: arraylength
      31: invokestatic  #215                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      34: aload_0
      35: getfield      #7                  // Field updateValues:Ljava/util/HashMap;
      38: invokevirtual #216                // Method java/util/HashMap.clear:()V
      41: return

  public boolean rowDeleted() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method checkClosed:()V
       4: iconst_0
       5: ireturn

  public boolean rowInserted() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method checkClosed:()V
       4: iconst_0
       5: ireturn

  public boolean rowUpdated() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method checkClosed:()V
       4: iconst_0
       5: ireturn

  public synchronized void updateAsciiStream(int, java.io.InputStream, int) throws java.sql.SQLException;
    Code:
       0: aload_2
       1: ifnonnull     10
       4: aload_0
       5: iload_1
       6: invokevirtual #217                // Method updateNull:(I)V
       9: return
      10: new           #218                // class java/io/InputStreamReader
      13: dup
      14: aload_2
      15: ldc           #219                // String ASCII
      17: invokespecial #220                // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/lang/String;)V
      20: astore        4
      22: iload_3
      23: newarray       char
      25: astore        5
      27: iconst_0
      28: istore        6
      30: aload         4
      32: aload         5
      34: iload         6
      36: iload_3
      37: iload         6
      39: isub
      40: invokevirtual #221                // Method java/io/InputStreamReader.read:([CII)I
      43: istore        7
      45: iload         7
      47: iconst_m1
      48: if_icmpne     54
      51: goto          73
      54: iload         6
      56: iload         7
      58: iadd
      59: istore        6
      61: iload         6
      63: iload_3
      64: if_icmpne     70
      67: goto          73
      70: goto          30
      73: aload_0
      74: iload_1
      75: new           #203                // class java/lang/String
      78: dup
      79: aload         5
      81: iconst_0
      82: iload         6
      84: invokespecial #222                // Method java/lang/String."<init>":([CII)V
      87: invokevirtual #223                // Method updateString:(ILjava/lang/String;)V
      90: goto          133
      93: astore        4
      95: new           #94                 // class org/postgresql/util/PSQLException
      98: dup
      99: ldc           #225                // String The JVM claims not to support the encoding: {0}
     101: ldc           #219                // String ASCII
     103: invokestatic  #167                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
     106: getstatic     #122                // Field org/postgresql/util/PSQLState.UNEXPECTED_ERROR:Lorg/postgresql/util/PSQLState;
     109: aload         4
     111: invokespecial #123                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
     114: athrow
     115: astore        4
     117: new           #94                 // class org/postgresql/util/PSQLException
     120: dup
     121: ldc           #226                // String Provided InputStream failed.
     123: invokestatic  #96                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
     126: aconst_null
     127: aload         4
     129: invokespecial #123                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
     132: athrow
     133: return
    Exception table:
       from    to  target type
          10    90    93   Class java/io/UnsupportedEncodingException
          10    90   115   Class java/io/IOException

  public synchronized void updateBigDecimal(int, java.math.BigDecimal) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #227                // Method updateValue:(ILjava/lang/Object;)V
       6: return

  public synchronized void updateBinaryStream(int, java.io.InputStream, int) throws java.sql.SQLException;
    Code:
       0: aload_2
       1: ifnonnull     10
       4: aload_0
       5: iload_1
       6: invokevirtual #217                // Method updateNull:(I)V
       9: return
      10: iload_3
      11: newarray       byte
      13: astore        4
      15: iconst_0
      16: istore        5
      18: aload_2
      19: aload         4
      21: iload         5
      23: iload_3
      24: iload         5
      26: isub
      27: invokevirtual #228                // Method java/io/InputStream.read:([BII)I
      30: istore        6
      32: iload         6
      34: iconst_m1
      35: if_icmpne     41
      38: goto          60
      41: iload         5
      43: iload         6
      45: iadd
      46: istore        5
      48: iload         5
      50: iload_3
      51: if_icmpne     57
      54: goto          60
      57: goto          18
      60: goto          81
      63: astore        6
      65: new           #94                 // class org/postgresql/util/PSQLException
      68: dup
      69: ldc           #226                // String Provided InputStream failed.
      71: invokestatic  #96                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      74: aconst_null
      75: aload         6
      77: invokespecial #123                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
      80: athrow
      81: iload         5
      83: iload_3
      84: if_icmpne     97
      87: aload_0
      88: iload_1
      89: aload         4
      91: invokevirtual #229                // Method updateBytes:(I[B)V
      94: goto          121
      97: iload         5
      99: newarray       byte
     101: astore        6
     103: aload         4
     105: iconst_0
     106: aload         6
     108: iconst_0
     109: iload         5
     111: invokestatic  #215                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     114: aload_0
     115: iload_1
     116: aload         6
     118: invokevirtual #229                // Method updateBytes:(I[B)V
     121: return
    Exception table:
       from    to  target type
          18    60    63   Class java/io/IOException

  public synchronized void updateBoolean(int, boolean) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #230                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       6: invokevirtual #227                // Method updateValue:(ILjava/lang/Object;)V
       9: return

  public synchronized void updateByte(int, byte) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #231                // Method java/lang/String.valueOf:(I)Ljava/lang/String;
       6: invokevirtual #227                // Method updateValue:(ILjava/lang/Object;)V
       9: return

  public synchronized void updateBytes(int, byte[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #227                // Method updateValue:(ILjava/lang/Object;)V
       6: return

  public synchronized void updateCharacterStream(int, java.io.Reader, int) throws java.sql.SQLException;
    Code:
       0: aload_2
       1: ifnonnull     10
       4: aload_0
       5: iload_1
       6: invokevirtual #217                // Method updateNull:(I)V
       9: return
      10: iload_3
      11: newarray       char
      13: astore        4
      15: iconst_0
      16: istore        5
      18: aload_2
      19: aload         4
      21: iload         5
      23: iload_3
      24: iload         5
      26: isub
      27: invokevirtual #232                // Method java/io/Reader.read:([CII)I
      30: istore        6
      32: iload         6
      34: iconst_m1
      35: if_icmpne     41
      38: goto          60
      41: iload         5
      43: iload         6
      45: iadd
      46: istore        5
      48: iload         5
      50: iload_3
      51: if_icmpne     57
      54: goto          60
      57: goto          18
      60: aload_0
      61: iload_1
      62: new           #203                // class java/lang/String
      65: dup
      66: aload         4
      68: iconst_0
      69: iload         5
      71: invokespecial #222                // Method java/lang/String."<init>":([CII)V
      74: invokevirtual #223                // Method updateString:(ILjava/lang/String;)V
      77: goto          98
      80: astore        4
      82: new           #94                 // class org/postgresql/util/PSQLException
      85: dup
      86: ldc           #233                // String Provided Reader failed.
      88: invokestatic  #96                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      91: aconst_null
      92: aload         4
      94: invokespecial #123                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
      97: athrow
      98: return
    Exception table:
       from    to  target type
          10    77    80   Class java/io/IOException

  public synchronized void updateDate(int, java.sql.Date) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #227                // Method updateValue:(ILjava/lang/Object;)V
       6: return

  public synchronized void updateDouble(int, double) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: dload_2
       3: invokestatic  #60                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
       6: invokevirtual #227                // Method updateValue:(ILjava/lang/Object;)V
       9: return

  public synchronized void updateFloat(int, float) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: fload_2
       3: invokestatic  #58                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
       6: invokevirtual #227                // Method updateValue:(ILjava/lang/Object;)V
       9: return

  public synchronized void updateInt(int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #51                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       6: invokevirtual #227                // Method updateValue:(ILjava/lang/Object;)V
       9: return

  public synchronized void updateLong(int, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: lload_2
       3: invokestatic  #53                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       6: invokevirtual #227                // Method updateValue:(ILjava/lang/Object;)V
       9: return

  public synchronized void updateNull(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #234                // Method checkColumnIndex:(I)V
       5: aload_0
       6: iload_1
       7: invokevirtual #69                 // Method getPGType:(I)Ljava/lang/String;
      10: astore_2
      11: aload_0
      12: iload_1
      13: new           #235                // class org/postgresql/jdbc2/AbstractJdbc2ResultSet$NullObject
      16: dup
      17: aload_2
      18: invokespecial #236                // Method org/postgresql/jdbc2/AbstractJdbc2ResultSet$NullObject."<init>":(Ljava/lang/String;)V
      21: invokevirtual #227                // Method updateValue:(ILjava/lang/Object;)V
      24: return

  public synchronized void updateObject(int, java.lang.Object) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #227                // Method updateValue:(ILjava/lang/Object;)V
       6: return

  public synchronized void updateObject(int, java.lang.Object, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #237                // Method updateObject:(ILjava/lang/Object;)V
       6: return

  public void refreshRow() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #171                // Method checkUpdateable:()V
       4: aload_0
       5: getfield      #22                 // Field onInsertRow:Z
       8: ifeq          27
      11: new           #94                 // class org/postgresql/util/PSQLException
      14: dup
      15: ldc           #238                // String Can\'\'t refresh the insert row.
      17: invokestatic  #96                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      20: getstatic     #97                 // Field org/postgresql/util/PSQLState.INVALID_CURSOR_STATE:Lorg/postgresql/util/PSQLState;
      23: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      26: athrow
      27: aload_0
      28: invokevirtual #173                // Method isBeforeFirst:()Z
      31: ifne          53
      34: aload_0
      35: invokevirtual #175                // Method isAfterLast:()Z
      38: ifne          53
      41: aload_0
      42: getfield      #35                 // Field rows:Ljava/util/List;
      45: invokeinterface #101,  1          // InterfaceMethod java/util/List.size:()I
      50: ifne          54
      53: return
      54: new           #78                 // class java/lang/StringBuilder
      57: dup
      58: ldc           #239                // String select
      60: invokespecial #80                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      63: astore_1
      64: aload_0
      65: invokevirtual #240                // Method getMetaData:()Ljava/sql/ResultSetMetaData;
      68: astore_2
      69: aload_2
      70: checkcast     #241                // class org/postgresql/PGResultSetMetaData
      73: astore_3
      74: iconst_1
      75: istore        4
      77: iload         4
      79: aload_2
      80: invokeinterface #242,  1          // InterfaceMethod java/sql/ResultSetMetaData.getColumnCount:()I
      85: if_icmpgt     120
      88: iload         4
      90: iconst_1
      91: if_icmple     101
      94: aload_1
      95: ldc           #204                // String ,
      97: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: pop
     101: aload_1
     102: aload_3
     103: iload         4
     105: invokeinterface #243,  2          // InterfaceMethod org/postgresql/PGResultSetMetaData.getBaseColumnName:(I)Ljava/lang/String;
     110: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: pop
     114: iinc          4, 1
     117: goto          77
     120: aload_1
     121: ldc           #244                // String  from
     123: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: aload_0
     127: getfield      #11                 // Field onlyTable:Ljava/lang/String;
     130: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: aload_0
     134: getfield      #12                 // Field tableName:Ljava/lang/String;
     137: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: ldc           #180                // String  where
     142: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: pop
     146: aload_0
     147: getfield      #178                // Field primaryKeys:Ljava/util/List;
     150: invokeinterface #101,  1          // InterfaceMethod java/util/List.size:()I
     155: istore        4
     157: iconst_0
     158: istore        5
     160: iload         5
     162: iload         4
     164: if_icmpge     220
     167: aload_0
     168: getfield      #178                // Field primaryKeys:Ljava/util/List;
     171: iload         5
     173: invokeinterface #181,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     178: checkcast     #182                // class org/postgresql/jdbc2/AbstractJdbc2ResultSet$PrimaryKey
     181: astore        6
     183: aload_1
     184: aload         6
     186: getfield      #183                // Field org/postgresql/jdbc2/AbstractJdbc2ResultSet$PrimaryKey.name:Ljava/lang/String;
     189: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     192: ldc           #245                // String = ?
     194: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     197: pop
     198: iload         5
     200: iload         4
     202: iconst_1
     203: isub
     204: if_icmpge     214
     207: aload_1
     208: ldc           #185                // String  and
     210: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     213: pop
     214: iinc          5, 1
     217: goto          160
     220: aload_0
     221: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     224: invokeinterface #246,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getLogger:()Lorg/postgresql/core/Logger;
     229: invokevirtual #247                // Method org/postgresql/core/Logger.logDebug:()Z
     232: ifeq          269
     235: aload_0
     236: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     239: invokeinterface #246,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getLogger:()Lorg/postgresql/core/Logger;
     244: new           #78                 // class java/lang/StringBuilder
     247: dup
     248: invokespecial #248                // Method java/lang/StringBuilder."<init>":()V
     251: ldc           #249                // String selecting
     253: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     256: aload_1
     257: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     260: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     263: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     266: invokevirtual #250                // Method org/postgresql/core/Logger.debug:(Ljava/lang/String;)V
     269: aload_0
     270: aload_0
     271: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     274: aload_1
     275: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     278: sipush        1004
     281: sipush        1008
     284: invokeinterface #251,  4          // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;II)Ljava/sql/PreparedStatement;
     289: putfield      #16                 // Field selectStatement:Ljava/sql/PreparedStatement;
     292: iconst_0
     293: istore        5
     295: iconst_1
     296: istore        6
     298: iload         5
     300: iload         4
     302: if_icmpge     342
     305: aload_0
     306: getfield      #16                 // Field selectStatement:Ljava/sql/PreparedStatement;
     309: iload         6
     311: aload_0
     312: getfield      #178                // Field primaryKeys:Ljava/util/List;
     315: iload         5
     317: invokeinterface #181,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     322: checkcast     #182                // class org/postgresql/jdbc2/AbstractJdbc2ResultSet$PrimaryKey
     325: invokevirtual #188                // Method org/postgresql/jdbc2/AbstractJdbc2ResultSet$PrimaryKey.getValue:()Ljava/lang/Object;
     328: invokeinterface #189,  3          // InterfaceMethod java/sql/PreparedStatement.setObject:(ILjava/lang/Object;)V
     333: iinc          5, 1
     336: iinc          6, 1
     339: goto          298
     342: aload_0
     343: getfield      #16                 // Field selectStatement:Ljava/sql/PreparedStatement;
     346: invokeinterface #252,  1          // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
     351: checkcast     #88                 // class org/postgresql/jdbc2/AbstractJdbc2ResultSet
     354: astore        5
     356: aload         5
     358: invokevirtual #253                // Method next:()Z
     361: ifeq          373
     364: aload_0
     365: aload         5
     367: getfield      #74                 // Field this_row:[[B
     370: putfield      #24                 // Field rowBuffer:[[B
     373: aload_0
     374: getfield      #35                 // Field rows:Ljava/util/List;
     377: aload_0
     378: getfield      #19                 // Field current_row:I
     381: aload_0
     382: getfield      #24                 // Field rowBuffer:[[B
     385: invokeinterface #254,  3          // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
     390: pop
     391: aload_0
     392: aload_0
     393: getfield      #24                 // Field rowBuffer:[[B
     396: putfield      #74                 // Field this_row:[[B
     399: aload_0
     400: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     403: invokeinterface #246,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getLogger:()Lorg/postgresql/core/Logger;
     408: ldc           #255                // String done updates
     410: invokevirtual #250                // Method org/postgresql/core/Logger.debug:(Ljava/lang/String;)V
     413: aload         5
     415: invokevirtual #256                // Method close:()V
     418: aload_0
     419: getfield      #16                 // Field selectStatement:Ljava/sql/PreparedStatement;
     422: invokeinterface #257,  1          // InterfaceMethod java/sql/PreparedStatement.close:()V
     427: aload_0
     428: aconst_null
     429: putfield      #16                 // Field selectStatement:Ljava/sql/PreparedStatement;
     432: return

  public synchronized void updateRow() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #171                // Method checkUpdateable:()V
       4: aload_0
       5: getfield      #22                 // Field onInsertRow:Z
       8: ifeq          28
      11: new           #94                 // class org/postgresql/util/PSQLException
      14: dup
      15: ldc_w         #258                // String Cannot call updateRow() when on the insert row.
      18: invokestatic  #96                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      21: getstatic     #97                 // Field org/postgresql/util/PSQLState.INVALID_CURSOR_STATE:Lorg/postgresql/util/PSQLState;
      24: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      27: athrow
      28: aload_0
      29: invokevirtual #173                // Method isBeforeFirst:()Z
      32: ifne          54
      35: aload_0
      36: invokevirtual #175                // Method isAfterLast:()Z
      39: ifne          54
      42: aload_0
      43: getfield      #35                 // Field rows:Ljava/util/List;
      46: invokeinterface #101,  1          // InterfaceMethod java/util/List.size:()I
      51: ifne          71
      54: new           #94                 // class org/postgresql/util/PSQLException
      57: dup
      58: ldc_w         #259                // String Cannot update the ResultSet because it is either before the start or after the end of the results.
      61: invokestatic  #96                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      64: getstatic     #97                 // Field org/postgresql/util/PSQLState.INVALID_CURSOR_STATE:Lorg/postgresql/util/PSQLState;
      67: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      70: athrow
      71: aload_0
      72: getfield      #6                  // Field doingUpdates:Z
      75: ifne          79
      78: return
      79: new           #78                 // class java/lang/StringBuilder
      82: dup
      83: new           #78                 // class java/lang/StringBuilder
      86: dup
      87: invokespecial #248                // Method java/lang/StringBuilder."<init>":()V
      90: ldc_w         #260                // String UPDATE
      93: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_0
      97: getfield      #11                 // Field onlyTable:Ljava/lang/String;
     100: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: aload_0
     104: getfield      #12                 // Field tableName:Ljava/lang/String;
     107: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: ldc_w         #261                // String  SET
     113: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     119: invokespecial #80                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     122: astore_1
     123: aload_0
     124: getfield      #7                  // Field updateValues:Ljava/util/HashMap;
     127: invokevirtual #194                // Method java/util/HashMap.size:()I
     130: istore_2
     131: aload_0
     132: getfield      #7                  // Field updateValues:Ljava/util/HashMap;
     135: invokevirtual #199                // Method java/util/HashMap.keySet:()Ljava/util/Set;
     138: invokeinterface #200,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     143: astore_3
     144: iconst_0
     145: istore        4
     147: aload_3
     148: invokeinterface #201,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     153: ifeq          202
     156: aload_3
     157: invokeinterface #202,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     162: checkcast     #203                // class java/lang/String
     165: astore        5
     167: aload_1
     168: aload         5
     170: invokestatic  #81                 // Method org/postgresql/core/Utils.escapeIdentifier:(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;
     173: pop
     174: aload_1
     175: ldc           #184                // String  = ?
     177: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     180: pop
     181: iload         4
     183: iload_2
     184: iconst_1
     185: isub
     186: if_icmpge     196
     189: aload_1
     190: ldc           #204                // String ,
     192: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     195: pop
     196: iinc          4, 1
     199: goto          147
     202: aload_1
     203: ldc_w         #262                // String  WHERE
     206: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: pop
     210: aload_0
     211: getfield      #178                // Field primaryKeys:Ljava/util/List;
     214: invokeinterface #101,  1          // InterfaceMethod java/util/List.size:()I
     219: istore        4
     221: iconst_0
     222: istore        5
     224: iload         5
     226: iload         4
     228: if_icmpge     286
     231: aload_0
     232: getfield      #178                // Field primaryKeys:Ljava/util/List;
     235: iload         5
     237: invokeinterface #181,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     242: checkcast     #182                // class org/postgresql/jdbc2/AbstractJdbc2ResultSet$PrimaryKey
     245: astore        6
     247: aload_1
     248: aload         6
     250: getfield      #183                // Field org/postgresql/jdbc2/AbstractJdbc2ResultSet$PrimaryKey.name:Ljava/lang/String;
     253: invokestatic  #81                 // Method org/postgresql/core/Utils.escapeIdentifier:(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;
     256: pop
     257: aload_1
     258: ldc           #184                // String  = ?
     260: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     263: pop
     264: iload         5
     266: iload         4
     268: iconst_1
     269: isub
     270: if_icmpge     280
     273: aload_1
     274: ldc           #185                // String  and
     276: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     279: pop
     280: iinc          5, 1
     283: goto          224
     286: aload_0
     287: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     290: invokeinterface #246,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getLogger:()Lorg/postgresql/core/Logger;
     295: invokevirtual #247                // Method org/postgresql/core/Logger.logDebug:()Z
     298: ifeq          336
     301: aload_0
     302: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     305: invokeinterface #246,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getLogger:()Lorg/postgresql/core/Logger;
     310: new           #78                 // class java/lang/StringBuilder
     313: dup
     314: invokespecial #248                // Method java/lang/StringBuilder."<init>":()V
     317: ldc_w         #263                // String updating
     320: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     323: aload_1
     324: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     327: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     330: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     333: invokevirtual #250                // Method org/postgresql/core/Logger.debug:(Ljava/lang/String;)V
     336: aload_0
     337: aload_0
     338: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     341: aload_1
     342: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     345: invokeinterface #186,  2          // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
     350: putfield      #13                 // Field updateStatement:Ljava/sql/PreparedStatement;
     353: iconst_0
     354: istore        5
     356: aload_0
     357: getfield      #7                  // Field updateValues:Ljava/util/HashMap;
     360: invokevirtual #264                // Method java/util/HashMap.values:()Ljava/util/Collection;
     363: invokeinterface #265,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     368: astore        6
     370: aload         6
     372: invokeinterface #201,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     377: ifeq          410
     380: aload         6
     382: invokeinterface #202,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     387: astore        7
     389: aload_0
     390: getfield      #13                 // Field updateStatement:Ljava/sql/PreparedStatement;
     393: iload         5
     395: iconst_1
     396: iadd
     397: aload         7
     399: invokeinterface #189,  3          // InterfaceMethod java/sql/PreparedStatement.setObject:(ILjava/lang/Object;)V
     404: iinc          5, 1
     407: goto          370
     410: iconst_0
     411: istore        7
     413: iload         7
     415: iload         4
     417: if_icmpge     459
     420: aload_0
     421: getfield      #13                 // Field updateStatement:Ljava/sql/PreparedStatement;
     424: iload         5
     426: iconst_1
     427: iadd
     428: aload_0
     429: getfield      #178                // Field primaryKeys:Ljava/util/List;
     432: iload         7
     434: invokeinterface #181,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     439: checkcast     #182                // class org/postgresql/jdbc2/AbstractJdbc2ResultSet$PrimaryKey
     442: invokevirtual #188                // Method org/postgresql/jdbc2/AbstractJdbc2ResultSet$PrimaryKey.getValue:()Ljava/lang/Object;
     445: invokeinterface #189,  3          // InterfaceMethod java/sql/PreparedStatement.setObject:(ILjava/lang/Object;)V
     450: iinc          7, 1
     453: iinc          5, 1
     456: goto          413
     459: aload_0
     460: getfield      #13                 // Field updateStatement:Ljava/sql/PreparedStatement;
     463: invokeinterface #190,  1          // InterfaceMethod java/sql/PreparedStatement.executeUpdate:()I
     468: pop
     469: aload_0
     470: getfield      #13                 // Field updateStatement:Ljava/sql/PreparedStatement;
     473: invokeinterface #257,  1          // InterfaceMethod java/sql/PreparedStatement.close:()V
     478: aload_0
     479: aconst_null
     480: putfield      #13                 // Field updateStatement:Ljava/sql/PreparedStatement;
     483: aload_0
     484: invokespecial #212                // Method updateRowBuffer:()V
     487: aload_0
     488: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     491: invokeinterface #246,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getLogger:()Lorg/postgresql/core/Logger;
     496: ldc_w         #266                // String copying data
     499: invokevirtual #250                // Method org/postgresql/core/Logger.debug:(Ljava/lang/String;)V
     502: aload_0
     503: getfield      #24                 // Field rowBuffer:[[B
     506: iconst_0
     507: aload_0
     508: getfield      #74                 // Field this_row:[[B
     511: iconst_0
     512: aload_0
     513: getfield      #24                 // Field rowBuffer:[[B
     516: arraylength
     517: invokestatic  #215                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     520: aload_0
     521: getfield      #35                 // Field rows:Ljava/util/List;
     524: aload_0
     525: getfield      #19                 // Field current_row:I
     528: aload_0
     529: getfield      #24                 // Field rowBuffer:[[B
     532: invokeinterface #254,  3          // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
     537: pop
     538: aload_0
     539: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     542: invokeinterface #246,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getLogger:()Lorg/postgresql/core/Logger;
     547: ldc           #255                // String done updates
     549: invokevirtual #250                // Method org/postgresql/core/Logger.debug:(Ljava/lang/String;)V
     552: aload_0
     553: getfield      #7                  // Field updateValues:Ljava/util/HashMap;
     556: invokevirtual #216                // Method java/util/HashMap.clear:()V
     559: aload_0
     560: iconst_0
     561: putfield      #6                  // Field doingUpdates:Z
     564: return

  public synchronized void updateShort(int, short) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #267                // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
       6: invokevirtual #227                // Method updateValue:(ILjava/lang/Object;)V
       9: return

  public synchronized void updateString(int, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #227                // Method updateValue:(ILjava/lang/Object;)V
       6: return

  public synchronized void updateTime(int, java.sql.Time) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #227                // Method updateValue:(ILjava/lang/Object;)V
       6: return

  public synchronized void updateTimestamp(int, java.sql.Timestamp) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #227                // Method updateValue:(ILjava/lang/Object;)V
       6: return

  public synchronized void updateNull(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: invokevirtual #217                // Method updateNull:(I)V
       9: return

  public synchronized void updateBoolean(java.lang.String, boolean) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: iload_2
       7: invokevirtual #268                // Method updateBoolean:(IZ)V
      10: return

  public synchronized void updateByte(java.lang.String, byte) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: iload_2
       7: invokevirtual #269                // Method updateByte:(IB)V
      10: return

  public synchronized void updateShort(java.lang.String, short) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: iload_2
       7: invokevirtual #270                // Method updateShort:(IS)V
      10: return

  public synchronized void updateInt(java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: iload_2
       7: invokevirtual #271                // Method updateInt:(II)V
      10: return

  public synchronized void updateLong(java.lang.String, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: lload_2
       7: invokevirtual #272                // Method updateLong:(IJ)V
      10: return

  public synchronized void updateFloat(java.lang.String, float) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: fload_2
       7: invokevirtual #273                // Method updateFloat:(IF)V
      10: return

  public synchronized void updateDouble(java.lang.String, double) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: dload_2
       7: invokevirtual #274                // Method updateDouble:(ID)V
      10: return

  public synchronized void updateBigDecimal(java.lang.String, java.math.BigDecimal) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: aload_2
       7: invokevirtual #275                // Method updateBigDecimal:(ILjava/math/BigDecimal;)V
      10: return

  public synchronized void updateString(java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: aload_2
       7: invokevirtual #223                // Method updateString:(ILjava/lang/String;)V
      10: return

  public synchronized void updateBytes(java.lang.String, byte[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: aload_2
       7: invokevirtual #229                // Method updateBytes:(I[B)V
      10: return

  public synchronized void updateDate(java.lang.String, java.sql.Date) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: aload_2
       7: invokevirtual #276                // Method updateDate:(ILjava/sql/Date;)V
      10: return

  public synchronized void updateTime(java.lang.String, java.sql.Time) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: aload_2
       7: invokevirtual #277                // Method updateTime:(ILjava/sql/Time;)V
      10: return

  public synchronized void updateTimestamp(java.lang.String, java.sql.Timestamp) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: aload_2
       7: invokevirtual #278                // Method updateTimestamp:(ILjava/sql/Timestamp;)V
      10: return

  public synchronized void updateAsciiStream(java.lang.String, java.io.InputStream, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: aload_2
       7: iload_3
       8: invokevirtual #279                // Method updateAsciiStream:(ILjava/io/InputStream;I)V
      11: return

  public synchronized void updateBinaryStream(java.lang.String, java.io.InputStream, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: aload_2
       7: iload_3
       8: invokevirtual #280                // Method updateBinaryStream:(ILjava/io/InputStream;I)V
      11: return

  public synchronized void updateCharacterStream(java.lang.String, java.io.Reader, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: aload_2
       7: iload_3
       8: invokevirtual #281                // Method updateCharacterStream:(ILjava/io/Reader;I)V
      11: return

  public synchronized void updateObject(java.lang.String, java.lang.Object, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: aload_2
       7: invokevirtual #237                // Method updateObject:(ILjava/lang/Object;)V
      10: return

  public synchronized void updateObject(java.lang.String, java.lang.Object) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: aload_2
       7: invokevirtual #237                // Method updateObject:(ILjava/lang/Object;)V
      10: return

  boolean isUpdateable() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method checkClosed:()V
       4: aload_0
       5: getfield      #40                 // Field resultsetconcurrency:I
       8: sipush        1007
      11: if_icmpne     31
      14: new           #94                 // class org/postgresql/util/PSQLException
      17: dup
      18: ldc_w         #282                // String ResultSets with concurrency CONCUR_READ_ONLY cannot be updated.
      21: invokestatic  #96                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      24: getstatic     #97                 // Field org/postgresql/util/PSQLState.INVALID_CURSOR_STATE:Lorg/postgresql/util/PSQLState;
      27: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      30: athrow
      31: aload_0
      32: getfield      #5                  // Field updateable:Z
      35: ifeq          40
      38: iconst_1
      39: ireturn
      40: aload_0
      41: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
      44: invokeinterface #246,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getLogger:()Lorg/postgresql/core/Logger;
      49: ldc_w         #283                // String checking if rs is updateable
      52: invokevirtual #250                // Method org/postgresql/core/Logger.debug:(Ljava/lang/String;)V
      55: aload_0
      56: invokespecial #284                // Method parseQuery:()V
      59: aload_0
      60: getfield      #9                  // Field singleTable:Z
      63: ifne          83
      66: aload_0
      67: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
      70: invokeinterface #246,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getLogger:()Lorg/postgresql/core/Logger;
      75: ldc_w         #285                // String not a single table
      78: invokevirtual #250                // Method org/postgresql/core/Logger.debug:(Ljava/lang/String;)V
      81: iconst_0
      82: ireturn
      83: aload_0
      84: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
      87: invokeinterface #246,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getLogger:()Lorg/postgresql/core/Logger;
      92: ldc_w         #286                // String getting primary keys
      95: invokevirtual #250                // Method org/postgresql/core/Logger.debug:(Ljava/lang/String;)V
      98: aload_0
      99: new           #287                // class java/util/ArrayList
     102: dup
     103: invokespecial #288                // Method java/util/ArrayList."<init>":()V
     106: putfield      #178                // Field primaryKeys:Ljava/util/List;
     109: aload_0
     110: iconst_0
     111: putfield      #8                  // Field usingOID:Z
     114: aload_0
     115: ldc           #210                // String oid
     117: invokespecial #289                // Method findColumnIndex:(Ljava/lang/String;)I
     120: istore_1
     121: iconst_0
     122: istore_2
     123: iconst_0
     124: istore_3
     125: iload_1
     126: ifle          164
     129: iinc          2, 1
     132: iinc          3, 1
     135: aload_0
     136: getfield      #178                // Field primaryKeys:Ljava/util/List;
     139: new           #182                // class org/postgresql/jdbc2/AbstractJdbc2ResultSet$PrimaryKey
     142: dup
     143: aload_0
     144: iload_1
     145: ldc           #210                // String oid
     147: invokespecial #290                // Method org/postgresql/jdbc2/AbstractJdbc2ResultSet$PrimaryKey."<init>":(Lorg/postgresql/jdbc2/AbstractJdbc2ResultSet;ILjava/lang/String;)V
     150: invokeinterface #213,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     155: pop
     156: aload_0
     157: iconst_1
     158: putfield      #8                  // Field usingOID:Z
     161: goto          278
     164: aload_0
     165: getfield      #12                 // Field tableName:Ljava/lang/String;
     168: invokestatic  #291                // Method quotelessTableName:(Ljava/lang/String;)[Ljava/lang/String;
     171: astore        4
     173: aload         4
     175: iconst_0
     176: aaload
     177: astore        5
     179: aload         4
     181: iconst_1
     182: aaload
     183: astore        6
     185: aload_0
     186: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     189: invokeinterface #292,  1          // InterfaceMethod java/sql/Connection.getMetaData:()Ljava/sql/DatabaseMetaData;
     194: ldc           #10                 // String
     196: aload         6
     198: aload         5
     200: invokeinterface #293,  4          // InterfaceMethod java/sql/DatabaseMetaData.getPrimaryKeys:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;
     205: astore        7
     207: aload         7
     209: invokeinterface #294,  1          // InterfaceMethod java/sql/ResultSet.next:()Z
     214: ifeq          271
     217: iinc          3, 1
     220: aload         7
     222: iconst_4
     223: invokeinterface #295,  2          // InterfaceMethod java/sql/ResultSet.getString:(I)Ljava/lang/String;
     228: astore        8
     230: aload_0
     231: aload         8
     233: invokespecial #289                // Method findColumnIndex:(Ljava/lang/String;)I
     236: istore        9
     238: iload         9
     240: ifle          268
     243: iinc          2, 1
     246: aload_0
     247: getfield      #178                // Field primaryKeys:Ljava/util/List;
     250: new           #182                // class org/postgresql/jdbc2/AbstractJdbc2ResultSet$PrimaryKey
     253: dup
     254: aload_0
     255: iload         9
     257: aload         8
     259: invokespecial #290                // Method org/postgresql/jdbc2/AbstractJdbc2ResultSet$PrimaryKey."<init>":(Lorg/postgresql/jdbc2/AbstractJdbc2ResultSet;ILjava/lang/String;)V
     262: invokeinterface #213,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     267: pop
     268: goto          207
     271: aload         7
     273: invokeinterface #296,  1          // InterfaceMethod java/sql/ResultSet.close:()V
     278: aload_0
     279: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     282: invokeinterface #246,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getLogger:()Lorg/postgresql/core/Logger;
     287: invokevirtual #247                // Method org/postgresql/core/Logger.logDebug:()Z
     290: ifeq          325
     293: aload_0
     294: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     297: invokeinterface #246,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getLogger:()Lorg/postgresql/core/Logger;
     302: new           #78                 // class java/lang/StringBuilder
     305: dup
     306: invokespecial #248                // Method java/lang/StringBuilder."<init>":()V
     309: ldc_w         #297                // String no of keys=
     312: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     315: iload_2
     316: invokevirtual #298                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     319: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     322: invokevirtual #250                // Method org/postgresql/core/Logger.debug:(Ljava/lang/String;)V
     325: iload_2
     326: iconst_1
     327: if_icmpge     351
     330: new           #94                 // class org/postgresql/util/PSQLException
     333: dup
     334: ldc_w         #299                // String No primary key found for table {0}.
     337: aload_0
     338: getfield      #12                 // Field tableName:Ljava/lang/String;
     341: invokestatic  #167                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
     344: getstatic     #300                // Field org/postgresql/util/PSQLState.DATA_ERROR:Lorg/postgresql/util/PSQLState;
     347: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     350: athrow
     351: aload_0
     352: iload_2
     353: iload_3
     354: if_icmpne     361
     357: iconst_1
     358: goto          362
     361: iconst_0
     362: putfield      #5                  // Field updateable:Z
     365: aload_0
     366: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     369: invokeinterface #246,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getLogger:()Lorg/postgresql/core/Logger;
     374: invokevirtual #247                // Method org/postgresql/core/Logger.logDebug:()Z
     377: ifeq          415
     380: aload_0
     381: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     384: invokeinterface #246,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getLogger:()Lorg/postgresql/core/Logger;
     389: new           #78                 // class java/lang/StringBuilder
     392: dup
     393: invokespecial #248                // Method java/lang/StringBuilder."<init>":()V
     396: ldc_w         #301                // String checking primary key
     399: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     402: aload_0
     403: getfield      #5                  // Field updateable:Z
     406: invokevirtual #302                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     409: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     412: invokevirtual #250                // Method org/postgresql/core/Logger.debug:(Ljava/lang/String;)V
     415: aload_0
     416: getfield      #5                  // Field updateable:Z
     419: ireturn

  public static java.lang.String[] quotelessTableName(java.lang.String);
    Code:
       0: iconst_2
       1: anewarray     #203                // class java/lang/String
       4: dup
       5: iconst_0
       6: aconst_null
       7: aastore
       8: dup
       9: iconst_1
      10: ldc           #10                 // String
      12: aastore
      13: astore_1
      14: new           #78                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #248                // Method java/lang/StringBuilder."<init>":()V
      21: astore_2
      22: iconst_0
      23: istore_3
      24: iconst_0
      25: istore        4
      27: iload         4
      29: aload_0
      30: invokevirtual #303                // Method java/lang/String.length:()I
      33: if_icmpge     179
      36: aload_0
      37: iload         4
      39: invokevirtual #304                // Method java/lang/String.charAt:(I)C
      42: istore        5
      44: iload         5
      46: lookupswitch  { // 2
                    34: 72
                    46: 122
               default: 154
          }
      72: iload         4
      74: aload_0
      75: invokevirtual #303                // Method java/lang/String.length:()I
      78: iconst_1
      79: isub
      80: if_icmpge     109
      83: aload_0
      84: iload         4
      86: iconst_1
      87: iadd
      88: invokevirtual #304                // Method java/lang/String.charAt:(I)C
      91: bipush        34
      93: if_icmpne     109
      96: iinc          4, 1
      99: aload_2
     100: iload         5
     102: invokevirtual #305                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     105: pop
     106: goto          173
     109: iload_3
     110: ifne          117
     113: iconst_1
     114: goto          118
     117: iconst_0
     118: istore_3
     119: goto          173
     122: iload_3
     123: ifeq          136
     126: aload_2
     127: iload         5
     129: invokevirtual #305                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     132: pop
     133: goto          173
     136: aload_1
     137: iconst_1
     138: aload_2
     139: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     142: aastore
     143: new           #78                 // class java/lang/StringBuilder
     146: dup
     147: invokespecial #248                // Method java/lang/StringBuilder."<init>":()V
     150: astore_2
     151: goto          173
     154: aload_2
     155: iload_3
     156: ifeq          164
     159: iload         5
     161: goto          169
     164: iload         5
     166: invokestatic  #306                // Method java/lang/Character.toLowerCase:(C)C
     169: invokevirtual #305                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     172: pop
     173: iinc          4, 1
     176: goto          27
     179: aload_1
     180: iconst_0
     181: aload_2
     182: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     185: aastore
     186: aload_1
     187: areturn

  private void parseQuery();
    Code:
       0: aload_0
       1: getfield      #29                 // Field originalQuery:Lorg/postgresql/core/Query;
       4: aconst_null
       5: invokeinterface #307,  2          // InterfaceMethod org/postgresql/core/Query.toString:(Lorg/postgresql/core/ParameterList;)Ljava/lang/String;
      10: astore_1
      11: new           #308                // class java/util/StringTokenizer
      14: dup
      15: aload_1
      16: ldc_w         #309                // String  \r\t\n
      19: invokespecial #310                // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      22: astore_2
      23: iconst_0
      24: istore_3
      25: iconst_0
      26: istore        4
      28: ldc           #10                 // String
      30: astore        5
      32: aload_0
      33: iconst_1
      34: putfield      #9                  // Field singleTable:Z
      37: iload_3
      38: ifne          141
      41: iload         4
      43: ifne          141
      46: aload_2
      47: invokevirtual #311                // Method java/util/StringTokenizer.hasMoreTokens:()Z
      50: ifeq          141
      53: aload_2
      54: invokevirtual #312                // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      57: astore        5
      59: iload_3
      60: ifne          115
      63: ldc_w         #313                // String from
      66: aload         5
      68: invokevirtual #314                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      71: ifeq          37
      74: aload_0
      75: aload_2
      76: invokevirtual #312                // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      79: putfield      #12                 // Field tableName:Ljava/lang/String;
      82: ldc_w         #315                // String only
      85: aload_0
      86: getfield      #12                 // Field tableName:Ljava/lang/String;
      89: invokevirtual #314                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      92: ifeq          110
      95: aload_0
      96: aload_2
      97: invokevirtual #312                // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
     100: putfield      #12                 // Field tableName:Ljava/lang/String;
     103: aload_0
     104: ldc_w         #316                // String ONLY
     107: putfield      #11                 // Field onlyTable:Ljava/lang/String;
     110: iconst_1
     111: istore_3
     112: goto          37
     115: iconst_1
     116: istore        4
     118: aload_0
     119: aload         5
     121: ldc_w         #317                // String ,
     124: invokevirtual #314                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     127: ifne          134
     130: iconst_1
     131: goto          135
     134: iconst_0
     135: putfield      #9                  // Field singleTable:Z
     138: goto          37
     141: return

  private void updateRowBuffer() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field updateValues:Ljava/util/HashMap;
       4: invokevirtual #199                // Method java/util/HashMap.keySet:()Ljava/util/Set;
       7: invokeinterface #200,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      12: astore_1
      13: aload_1
      14: invokeinterface #201,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          382
      22: aload_1
      23: invokeinterface #202,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #203                // class java/lang/String
      31: astore_2
      32: aload_0
      33: aload_2
      34: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
      37: iconst_1
      38: isub
      39: istore_3
      40: aload_0
      41: getfield      #7                  // Field updateValues:Ljava/util/HashMap;
      44: aload_2
      45: invokevirtual #207                // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      48: astore        4
      50: aload         4
      52: instanceof    #318                // class org/postgresql/util/PGobject
      55: ifeq          97
      58: aload         4
      60: checkcast     #318                // class org/postgresql/util/PGobject
      63: invokevirtual #319                // Method org/postgresql/util/PGobject.getValue:()Ljava/lang/String;
      66: astore        5
      68: aload_0
      69: getfield      #24                 // Field rowBuffer:[[B
      72: iload_3
      73: aload         5
      75: ifnonnull     82
      78: aconst_null
      79: goto          93
      82: aload_0
      83: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
      86: aload         5
      88: invokeinterface #320,  2          // InterfaceMethod org/postgresql/core/BaseConnection.encodeString:(Ljava/lang/String;)[B
      93: aastore
      94: goto          379
      97: aload_0
      98: iload_3
      99: iconst_1
     100: iadd
     101: invokevirtual #46                 // Method getSQLType:(I)I
     104: lookupswitch  { // 7
                    -4: 283
                    -3: 283
                    -2: 283
                     0: 280
                    91: 172
                    92: 208
                    93: 244
               default: 359
          }
     172: aload_0
     173: getfield      #24                 // Field rowBuffer:[[B
     176: iload_3
     177: aload_0
     178: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     181: aload_0
     182: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     185: invokeinterface #127,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc2/TimestampUtils;
     190: aconst_null
     191: aload         4
     193: checkcast     #321                // class java/sql/Date
     196: invokevirtual #322                // Method org/postgresql/jdbc2/TimestampUtils.toString:(Ljava/util/Calendar;Ljava/sql/Date;)Ljava/lang/String;
     199: invokeinterface #320,  2          // InterfaceMethod org/postgresql/core/BaseConnection.encodeString:(Ljava/lang/String;)[B
     204: aastore
     205: goto          379
     208: aload_0
     209: getfield      #24                 // Field rowBuffer:[[B
     212: iload_3
     213: aload_0
     214: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     217: aload_0
     218: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     221: invokeinterface #127,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc2/TimestampUtils;
     226: aconst_null
     227: aload         4
     229: checkcast     #323                // class java/sql/Time
     232: invokevirtual #324                // Method org/postgresql/jdbc2/TimestampUtils.toString:(Ljava/util/Calendar;Ljava/sql/Time;)Ljava/lang/String;
     235: invokeinterface #320,  2          // InterfaceMethod org/postgresql/core/BaseConnection.encodeString:(Ljava/lang/String;)[B
     240: aastore
     241: goto          379
     244: aload_0
     245: getfield      #24                 // Field rowBuffer:[[B
     248: iload_3
     249: aload_0
     250: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     253: aload_0
     254: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     257: invokeinterface #127,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc2/TimestampUtils;
     262: aconst_null
     263: aload         4
     265: checkcast     #148                // class java/sql/Timestamp
     268: invokevirtual #325                // Method org/postgresql/jdbc2/TimestampUtils.toString:(Ljava/util/Calendar;Ljava/sql/Timestamp;)Ljava/lang/String;
     271: invokeinterface #320,  2          // InterfaceMethod org/postgresql/core/BaseConnection.encodeString:(Ljava/lang/String;)[B
     276: aastore
     277: goto          379
     280: goto          379
     283: aload_0
     284: iload_3
     285: iconst_1
     286: iadd
     287: invokevirtual #73                 // Method isBinary:(I)Z
     290: ifeq          310
     293: aload_0
     294: getfield      #24                 // Field rowBuffer:[[B
     297: iload_3
     298: aload         4
     300: checkcast     #214                // class "[B"
     303: checkcast     #214                // class "[B"
     306: aastore
     307: goto          379
     310: aload_0
     311: getfield      #24                 // Field rowBuffer:[[B
     314: iload_3
     315: aload         4
     317: checkcast     #214                // class "[B"
     320: checkcast     #214                // class "[B"
     323: invokestatic  #326                // Method org/postgresql/util/PGbytea.toPGString:([B)Ljava/lang/String;
     326: ldc_w         #327                // String ISO-8859-1
     329: invokevirtual #328                // Method java/lang/String.getBytes:(Ljava/lang/String;)[B
     332: aastore
     333: goto          379
     336: astore        5
     338: new           #94                 // class org/postgresql/util/PSQLException
     341: dup
     342: ldc           #225                // String The JVM claims not to support the encoding: {0}
     344: ldc_w         #327                // String ISO-8859-1
     347: invokestatic  #167                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
     350: getstatic     #122                // Field org/postgresql/util/PSQLState.UNEXPECTED_ERROR:Lorg/postgresql/util/PSQLState;
     353: aload         5
     355: invokespecial #123                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
     358: athrow
     359: aload_0
     360: getfield      #24                 // Field rowBuffer:[[B
     363: iload_3
     364: aload_0
     365: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     368: aload         4
     370: invokestatic  #329                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     373: invokeinterface #320,  2          // InterfaceMethod org/postgresql/core/BaseConnection.encodeString:(Ljava/lang/String;)[B
     378: aastore
     379: goto          13
     382: return
    Exception table:
       from    to  target type
         310   333   336   Class java/io/UnsupportedEncodingException

  public org.postgresql.core.BaseStatement getPGStatement();
    Code:
       0: aload_0
       1: getfield      #33                 // Field statement:Lorg/postgresql/core/BaseStatement;
       4: areturn

  public java.lang.String getRefCursor();
    Code:
       0: aload_0
       1: getfield      #330                // Field refCursorName:Ljava/lang/String;
       4: areturn

  private void setRefCursor(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #330                // Field refCursorName:Ljava/lang/String;
       5: return

  public void setFetchSize(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method checkClosed:()V
       4: iload_1
       5: ifge          25
       8: new           #94                 // class org/postgresql/util/PSQLException
      11: dup
      12: ldc_w         #331                // String Fetch size must be a value greater to or equal to 0.
      15: invokestatic  #96                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      18: getstatic     #168                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      21: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      24: athrow
      25: aload_0
      26: iload_1
      27: putfield      #158                // Field fetchSize:I
      30: return

  public int getFetchSize() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method checkClosed:()V
       4: aload_0
       5: getfield      #158                // Field fetchSize:I
       8: ireturn

  public boolean next() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method checkClosed:()V
       4: aload_0
       5: getfield      #22                 // Field onInsertRow:Z
       8: ifeq          27
      11: new           #94                 // class org/postgresql/util/PSQLException
      14: dup
      15: ldc           #164                // String Can\'\'t use relative move methods while on the insert row.
      17: invokestatic  #96                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      20: getstatic     #97                 // Field org/postgresql/util/PSQLState.INVALID_CURSOR_STATE:Lorg/postgresql/util/PSQLState;
      23: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      26: athrow
      27: aload_0
      28: getfield      #19                 // Field current_row:I
      31: iconst_1
      32: iadd
      33: aload_0
      34: getfield      #35                 // Field rows:Ljava/util/List;
      37: invokeinterface #101,  1          // InterfaceMethod java/util/List.size:()I
      42: if_icmplt     233
      45: aload_0
      46: getfield      #36                 // Field cursor:Lorg/postgresql/core/ResultCursor;
      49: ifnull        80
      52: aload_0
      53: getfield      #37                 // Field maxRows:I
      56: ifle          111
      59: aload_0
      60: getfield      #157                // Field row_offset:I
      63: aload_0
      64: getfield      #35                 // Field rows:Ljava/util/List;
      67: invokeinterface #101,  1          // InterfaceMethod java/util/List.size:()I
      72: iadd
      73: aload_0
      74: getfield      #37                 // Field maxRows:I
      77: if_icmplt     111
      80: aload_0
      81: aload_0
      82: getfield      #35                 // Field rows:Ljava/util/List;
      85: invokeinterface #101,  1          // InterfaceMethod java/util/List.size:()I
      90: putfield      #19                 // Field current_row:I
      93: aload_0
      94: aconst_null
      95: checkcast     #23                 // class "[[B"
      98: putfield      #74                 // Field this_row:[[B
     101: aload_0
     102: aconst_null
     103: checkcast     #23                 // class "[[B"
     106: putfield      #24                 // Field rowBuffer:[[B
     109: iconst_0
     110: ireturn
     111: aload_0
     112: dup
     113: getfield      #157                // Field row_offset:I
     116: aload_0
     117: getfield      #35                 // Field rows:Ljava/util/List;
     120: invokeinterface #101,  1          // InterfaceMethod java/util/List.size:()I
     125: iadd
     126: putfield      #157                // Field row_offset:I
     129: aload_0
     130: getfield      #158                // Field fetchSize:I
     133: istore_1
     134: aload_0
     135: getfield      #37                 // Field maxRows:I
     138: ifeq          168
     141: iload_1
     142: ifeq          158
     145: aload_0
     146: getfield      #157                // Field row_offset:I
     149: iload_1
     150: iadd
     151: aload_0
     152: getfield      #37                 // Field maxRows:I
     155: if_icmple     168
     158: aload_0
     159: getfield      #37                 // Field maxRows:I
     162: aload_0
     163: getfield      #157                // Field row_offset:I
     166: isub
     167: istore_1
     168: aload_0
     169: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     172: invokeinterface #159,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getQueryExecutor:()Lorg/postgresql/core/QueryExecutor;
     177: aload_0
     178: getfield      #36                 // Field cursor:Lorg/postgresql/core/ResultCursor;
     181: new           #160                // class org/postgresql/jdbc2/AbstractJdbc2ResultSet$CursorResultHandler
     184: dup
     185: aload_0
     186: invokespecial #161                // Method org/postgresql/jdbc2/AbstractJdbc2ResultSet$CursorResultHandler."<init>":(Lorg/postgresql/jdbc2/AbstractJdbc2ResultSet;)V
     189: iload_1
     190: invokeinterface #162,  4          // InterfaceMethod org/postgresql/core/QueryExecutor.fetch:(Lorg/postgresql/core/ResultCursor;Lorg/postgresql/core/ResultHandler;I)V
     195: aload_0
     196: iconst_0
     197: putfield      #19                 // Field current_row:I
     200: aload_0
     201: getfield      #35                 // Field rows:Ljava/util/List;
     204: invokeinterface #101,  1          // InterfaceMethod java/util/List.size:()I
     209: ifne          230
     212: aload_0
     213: aconst_null
     214: checkcast     #23                 // class "[[B"
     217: putfield      #74                 // Field this_row:[[B
     220: aload_0
     221: aconst_null
     222: checkcast     #23                 // class "[[B"
     225: putfield      #24                 // Field rowBuffer:[[B
     228: iconst_0
     229: ireturn
     230: goto          243
     233: aload_0
     234: dup
     235: getfield      #19                 // Field current_row:I
     238: iconst_1
     239: iadd
     240: putfield      #19                 // Field current_row:I
     243: aload_0
     244: invokespecial #103                // Method initRowBuffer:()V
     247: iconst_1
     248: ireturn

  public void close() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #35                 // Field rows:Ljava/util/List;
       5: aload_0
       6: getfield      #36                 // Field cursor:Lorg/postgresql/core/ResultCursor;
       9: ifnull        26
      12: aload_0
      13: getfield      #36                 // Field cursor:Lorg/postgresql/core/ResultCursor;
      16: invokeinterface #332,  1          // InterfaceMethod org/postgresql/core/ResultCursor.close:()V
      21: aload_0
      22: aconst_null
      23: putfield      #36                 // Field cursor:Lorg/postgresql/core/ResultCursor;
      26: return

  public boolean wasNull() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method checkClosed:()V
       4: aload_0
       5: getfield      #21                 // Field wasNullFlag:Z
       8: ireturn

  public java.lang.String getString(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #104                // Method checkResultSet:(I)V
       5: aload_0
       6: getfield      #21                 // Field wasNullFlag:Z
       9: ifeq          14
      12: aconst_null
      13: areturn
      14: aload_0
      15: iload_1
      16: invokevirtual #73                 // Method isBinary:(I)Z
      19: ifeq          107
      22: aload_0
      23: iload_1
      24: invokevirtual #46                 // Method getSQLType:(I)I
      27: bipush        12
      29: if_icmpeq     107
      32: aload_0
      33: iload_1
      34: aload_0
      35: getfield      #34                 // Field fields:[Lorg/postgresql/core/Field;
      38: iload_1
      39: iconst_1
      40: isub
      41: aaload
      42: invokevirtual #334                // Method internalGetObject:(ILorg/postgresql/core/Field;)Ljava/lang/Object;
      45: astore_2
      46: aload_2
      47: ifnonnull     52
      50: aconst_null
      51: areturn
      52: aload_2
      53: instanceof    #335                // class java/util/Date
      56: ifeq          76
      59: aload_0
      60: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
      63: invokeinterface #127,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc2/TimestampUtils;
      68: aload_2
      69: checkcast     #335                // class java/util/Date
      72: invokevirtual #336                // Method org/postgresql/jdbc2/TimestampUtils.timeToString:(Ljava/util/Date;)Ljava/lang/String;
      75: areturn
      76: ldc           #90                 // String hstore
      78: aload_0
      79: iload_1
      80: invokevirtual #69                 // Method getPGType:(I)Ljava/lang/String;
      83: invokevirtual #71                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      86: ifeq          97
      89: aload_2
      90: checkcast     #337                // class java/util/Map
      93: invokestatic  #338                // Method org/postgresql/util/HStoreConverter.toString:(Ljava/util/Map;)Ljava/lang/String;
      96: areturn
      97: aload_0
      98: iload_1
      99: aload_2
     100: invokevirtual #339                // Method java/lang/Object.toString:()Ljava/lang/String;
     103: invokespecial #340                // Method trimString:(ILjava/lang/String;)Ljava/lang/String;
     106: areturn
     107: aload_0
     108: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     111: invokeinterface #91,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getEncoding:()Lorg/postgresql/core/Encoding;
     116: astore_2
     117: aload_0
     118: iload_1
     119: aload_2
     120: aload_0
     121: getfield      #74                 // Field this_row:[[B
     124: iload_1
     125: iconst_1
     126: isub
     127: aaload
     128: invokevirtual #341                // Method org/postgresql/core/Encoding.decode:([B)Ljava/lang/String;
     131: invokespecial #340                // Method trimString:(ILjava/lang/String;)Ljava/lang/String;
     134: areturn
     135: astore_3
     136: new           #94                 // class org/postgresql/util/PSQLException
     139: dup
     140: ldc_w         #342                // String Invalid character data was found.  This is most likely caused by stored data containing characters that are invalid for the character set the database was created in.  The most common example of this is storing 8bit data in a SQL_ASCII database.
     143: invokestatic  #96                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
     146: getstatic     #300                // Field org/postgresql/util/PSQLState.DATA_ERROR:Lorg/postgresql/util/PSQLState;
     149: aload_3
     150: invokespecial #123                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
     153: athrow
    Exception table:
       from    to  target type
         117   134   135   Class java/io/IOException

  public boolean getBoolean(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #104                // Method checkResultSet:(I)V
       5: aload_0
       6: getfield      #21                 // Field wasNullFlag:Z
       9: ifeq          14
      12: iconst_0
      13: ireturn
      14: aload_0
      15: iload_1
      16: invokevirtual #73                 // Method isBinary:(I)Z
      19: ifeq          59
      22: iload_1
      23: iconst_1
      24: isub
      25: istore_2
      26: aload_0
      27: aload_0
      28: getfield      #74                 // Field this_row:[[B
      31: iload_2
      32: aaload
      33: aload_0
      34: getfield      #34                 // Field fields:[Lorg/postgresql/core/Field;
      37: iload_2
      38: aaload
      39: invokevirtual #105                // Method org/postgresql/core/Field.getOID:()I
      42: ldc_w         #343                // String boolean
      45: invokespecial #344                // Method readDoubleValue:([BILjava/lang/String;)D
      48: dconst_1
      49: dcmpl
      50: ifne          57
      53: iconst_1
      54: goto          58
      57: iconst_0
      58: ireturn
      59: aload_0
      60: iload_1
      61: invokevirtual #61                 // Method getString:(I)Ljava/lang/String;
      64: invokestatic  #345                // Method toBoolean:(Ljava/lang/String;)Z
      67: ireturn

  public byte getByte(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #104                // Method checkResultSet:(I)V
       5: aload_0
       6: getfield      #21                 // Field wasNullFlag:Z
       9: ifeq          14
      12: iconst_0
      13: ireturn
      14: aload_0
      15: iload_1
      16: invokevirtual #73                 // Method isBinary:(I)Z
      19: ifeq          57
      22: iload_1
      23: iconst_1
      24: isub
      25: istore_2
      26: aload_0
      27: aload_0
      28: getfield      #74                 // Field this_row:[[B
      31: iload_2
      32: aaload
      33: aload_0
      34: getfield      #34                 // Field fields:[Lorg/postgresql/core/Field;
      37: iload_2
      38: aaload
      39: invokevirtual #105                // Method org/postgresql/core/Field.getOID:()I
      42: ldc2_w        #347                // long -128l
      45: ldc2_w        #349                // long 127l
      48: ldc_w         #351                // String byte
      51: invokespecial #352                // Method readLongValue:([BIJJLjava/lang/String;)J
      54: l2i
      55: i2b
      56: ireturn
      57: aload_0
      58: iload_1
      59: invokevirtual #61                 // Method getString:(I)Ljava/lang/String;
      62: astore_2
      63: aload_2
      64: ifnull        204
      67: aload_2
      68: invokevirtual #353                // Method java/lang/String.trim:()Ljava/lang/String;
      71: astore_2
      72: aload_2
      73: invokevirtual #303                // Method java/lang/String.length:()I
      76: ifne          81
      79: iconst_0
      80: ireturn
      81: aload_2
      82: invokestatic  #354                // Method java/lang/Byte.parseByte:(Ljava/lang/String;)B
      85: ireturn
      86: astore_3
      87: new           #356                // class java/math/BigDecimal
      90: dup
      91: aload_2
      92: invokespecial #357                // Method java/math/BigDecimal."<init>":(Ljava/lang/String;)V
      95: astore        4
      97: aload         4
      99: invokevirtual #358                // Method java/math/BigDecimal.toBigInteger:()Ljava/math/BigInteger;
     102: astore        5
     104: aload         5
     106: getstatic     #359                // Field BYTEMAX:Ljava/math/BigInteger;
     109: invokevirtual #360                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
     112: istore        6
     114: aload         5
     116: getstatic     #361                // Field BYTEMIN:Ljava/math/BigInteger;
     119: invokevirtual #360                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
     122: istore        7
     124: iload         6
     126: ifgt          134
     129: iload         7
     131: ifge          165
     134: new           #94                 // class org/postgresql/util/PSQLException
     137: dup
     138: ldc_w         #362                // String Bad value for type {0} : {1}
     141: iconst_2
     142: anewarray     #132                // class java/lang/Object
     145: dup
     146: iconst_0
     147: ldc_w         #351                // String byte
     150: aastore
     151: dup
     152: iconst_1
     153: aload_2
     154: aastore
     155: invokestatic  #135                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     158: getstatic     #363                // Field org/postgresql/util/PSQLState.NUMERIC_VALUE_OUT_OF_RANGE:Lorg/postgresql/util/PSQLState;
     161: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     164: athrow
     165: aload         5
     167: invokevirtual #364                // Method java/math/BigInteger.byteValue:()B
     170: ireturn
     171: astore        4
     173: new           #94                 // class org/postgresql/util/PSQLException
     176: dup
     177: ldc_w         #362                // String Bad value for type {0} : {1}
     180: iconst_2
     181: anewarray     #132                // class java/lang/Object
     184: dup
     185: iconst_0
     186: ldc_w         #351                // String byte
     189: aastore
     190: dup
     191: iconst_1
     192: aload_2
     193: aastore
     194: invokestatic  #135                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     197: getstatic     #363                // Field org/postgresql/util/PSQLState.NUMERIC_VALUE_OUT_OF_RANGE:Lorg/postgresql/util/PSQLState;
     200: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     203: athrow
     204: iconst_0
     205: ireturn
    Exception table:
       from    to  target type
          81    85    86   Class java/lang/NumberFormatException
          87   170   171   Class java/lang/NumberFormatException

  public short getShort(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #104                // Method checkResultSet:(I)V
       5: aload_0
       6: getfield      #21                 // Field wasNullFlag:Z
       9: ifeq          14
      12: iconst_0
      13: ireturn
      14: aload_0
      15: iload_1
      16: invokevirtual #73                 // Method isBinary:(I)Z
      19: ifeq          76
      22: iload_1
      23: iconst_1
      24: isub
      25: istore_2
      26: aload_0
      27: getfield      #34                 // Field fields:[Lorg/postgresql/core/Field;
      30: iload_2
      31: aaload
      32: invokevirtual #105                // Method org/postgresql/core/Field.getOID:()I
      35: istore_3
      36: iload_3
      37: bipush        21
      39: if_icmpne     53
      42: aload_0
      43: getfield      #74                 // Field this_row:[[B
      46: iload_2
      47: aaload
      48: iconst_0
      49: invokestatic  #365                // Method org/postgresql/util/ByteConverter.int2:([BI)S
      52: ireturn
      53: aload_0
      54: aload_0
      55: getfield      #74                 // Field this_row:[[B
      58: iload_2
      59: aaload
      60: iload_3
      61: ldc2_w        #367                // long -32768l
      64: ldc2_w        #369                // long 32767l
      67: ldc_w         #371                // String short
      70: invokespecial #352                // Method readLongValue:([BIJJLjava/lang/String;)J
      73: l2i
      74: i2s
      75: ireturn
      76: aload_0
      77: iload_1
      78: invokevirtual #107                // Method getFixedString:(I)Ljava/lang/String;
      81: astore_2
      82: aload_2
      83: ifnull        214
      86: aload_2
      87: invokevirtual #353                // Method java/lang/String.trim:()Ljava/lang/String;
      90: astore_2
      91: aload_2
      92: invokestatic  #372                // Method java/lang/Short.parseShort:(Ljava/lang/String;)S
      95: ireturn
      96: astore_3
      97: new           #356                // class java/math/BigDecimal
     100: dup
     101: aload_2
     102: invokespecial #357                // Method java/math/BigDecimal."<init>":(Ljava/lang/String;)V
     105: astore        4
     107: aload         4
     109: invokevirtual #358                // Method java/math/BigDecimal.toBigInteger:()Ljava/math/BigInteger;
     112: astore        5
     114: aload         5
     116: getstatic     #373                // Field SHORTMAX:Ljava/math/BigInteger;
     119: invokevirtual #360                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
     122: istore        6
     124: aload         5
     126: getstatic     #374                // Field SHORTMIN:Ljava/math/BigInteger;
     129: invokevirtual #360                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
     132: istore        7
     134: iload         6
     136: ifgt          144
     139: iload         7
     141: ifge          175
     144: new           #94                 // class org/postgresql/util/PSQLException
     147: dup
     148: ldc_w         #362                // String Bad value for type {0} : {1}
     151: iconst_2
     152: anewarray     #132                // class java/lang/Object
     155: dup
     156: iconst_0
     157: ldc_w         #371                // String short
     160: aastore
     161: dup
     162: iconst_1
     163: aload_2
     164: aastore
     165: invokestatic  #135                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     168: getstatic     #363                // Field org/postgresql/util/PSQLState.NUMERIC_VALUE_OUT_OF_RANGE:Lorg/postgresql/util/PSQLState;
     171: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     174: athrow
     175: aload         5
     177: invokevirtual #375                // Method java/math/BigInteger.shortValue:()S
     180: ireturn
     181: astore        4
     183: new           #94                 // class org/postgresql/util/PSQLException
     186: dup
     187: ldc_w         #362                // String Bad value for type {0} : {1}
     190: iconst_2
     191: anewarray     #132                // class java/lang/Object
     194: dup
     195: iconst_0
     196: ldc_w         #371                // String short
     199: aastore
     200: dup
     201: iconst_1
     202: aload_2
     203: aastore
     204: invokestatic  #135                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     207: getstatic     #363                // Field org/postgresql/util/PSQLState.NUMERIC_VALUE_OUT_OF_RANGE:Lorg/postgresql/util/PSQLState;
     210: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     213: athrow
     214: iconst_0
     215: ireturn
    Exception table:
       from    to  target type
          91    95    96   Class java/lang/NumberFormatException
          97   180   181   Class java/lang/NumberFormatException

  public int getInt(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #104                // Method checkResultSet:(I)V
       5: aload_0
       6: getfield      #21                 // Field wasNullFlag:Z
       9: ifeq          14
      12: iconst_0
      13: ireturn
      14: aload_0
      15: iload_1
      16: invokevirtual #73                 // Method isBinary:(I)Z
      19: ifeq          75
      22: iload_1
      23: iconst_1
      24: isub
      25: istore_2
      26: aload_0
      27: getfield      #34                 // Field fields:[Lorg/postgresql/core/Field;
      30: iload_2
      31: aaload
      32: invokevirtual #105                // Method org/postgresql/core/Field.getOID:()I
      35: istore_3
      36: iload_3
      37: bipush        23
      39: if_icmpne     53
      42: aload_0
      43: getfield      #74                 // Field this_row:[[B
      46: iload_2
      47: aaload
      48: iconst_0
      49: invokestatic  #376                // Method org/postgresql/util/ByteConverter.int4:([BI)I
      52: ireturn
      53: aload_0
      54: aload_0
      55: getfield      #74                 // Field this_row:[[B
      58: iload_2
      59: aaload
      60: iload_3
      61: ldc2_w        #378                // long -2147483648l
      64: ldc2_w        #380                // long 2147483647l
      67: ldc_w         #382                // String int
      70: invokespecial #352                // Method readLongValue:([BIJJLjava/lang/String;)J
      73: l2i
      74: ireturn
      75: aload_0
      76: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
      79: invokeinterface #91,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getEncoding:()Lorg/postgresql/core/Encoding;
      84: astore_2
      85: aload_2
      86: invokevirtual #383                // Method org/postgresql/core/Encoding.hasAsciiNumbers:()Z
      89: ifeq          99
      92: aload_0
      93: iload_1
      94: invokespecial #384                // Method getFastInt:(I)I
      97: ireturn
      98: astore_3
      99: aload_0
     100: iload_1
     101: invokevirtual #107                // Method getFixedString:(I)Ljava/lang/String;
     104: invokestatic  #385                // Method toInt:(Ljava/lang/String;)I
     107: ireturn
    Exception table:
       from    to  target type
          92    97    98   Class java/lang/NumberFormatException

  public long getLong(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #104                // Method checkResultSet:(I)V
       5: aload_0
       6: getfield      #21                 // Field wasNullFlag:Z
       9: ifeq          14
      12: lconst_0
      13: lreturn
      14: aload_0
      15: iload_1
      16: invokevirtual #73                 // Method isBinary:(I)Z
      19: ifeq          74
      22: iload_1
      23: iconst_1
      24: isub
      25: istore_2
      26: aload_0
      27: getfield      #34                 // Field fields:[Lorg/postgresql/core/Field;
      30: iload_2
      31: aaload
      32: invokevirtual #105                // Method org/postgresql/core/Field.getOID:()I
      35: istore_3
      36: iload_3
      37: bipush        20
      39: if_icmpne     53
      42: aload_0
      43: getfield      #74                 // Field this_row:[[B
      46: iload_2
      47: aaload
      48: iconst_0
      49: invokestatic  #386                // Method org/postgresql/util/ByteConverter.int8:([BI)J
      52: lreturn
      53: aload_0
      54: aload_0
      55: getfield      #74                 // Field this_row:[[B
      58: iload_2
      59: aaload
      60: iload_3
      61: ldc2_w        #388                // long -9223372036854775808l
      64: ldc2_w        #390                // long 9223372036854775807l
      67: ldc_w         #392                // String long
      70: invokespecial #352                // Method readLongValue:([BIJJLjava/lang/String;)J
      73: lreturn
      74: aload_0
      75: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
      78: invokeinterface #91,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getEncoding:()Lorg/postgresql/core/Encoding;
      83: astore_2
      84: aload_2
      85: invokevirtual #383                // Method org/postgresql/core/Encoding.hasAsciiNumbers:()Z
      88: ifeq          98
      91: aload_0
      92: iload_1
      93: invokespecial #393                // Method getFastLong:(I)J
      96: lreturn
      97: astore_3
      98: aload_0
      99: iload_1
     100: invokevirtual #107                // Method getFixedString:(I)Ljava/lang/String;
     103: invokestatic  #394                // Method toLong:(Ljava/lang/String;)J
     106: lreturn
    Exception table:
       from    to  target type
          91    96    97   Class java/lang/NumberFormatException

  private long getFastLong(int) throws java.sql.SQLException, java.lang.NumberFormatException;
    Code:
       0: aload_0
       1: getfield      #74                 // Field this_row:[[B
       4: iload_1
       5: iconst_1
       6: isub
       7: aaload
       8: astore_2
       9: aload_2
      10: arraylength
      11: ifne          18
      14: getstatic     #395                // Field FAST_NUMBER_FAILED:Ljava/lang/NumberFormatException;
      17: athrow
      18: lconst_0
      19: lstore_3
      20: aload_2
      21: iconst_0
      22: baload
      23: bipush        45
      25: if_icmpne     51
      28: iconst_1
      29: istore        6
      31: iconst_1
      32: istore        5
      34: aload_2
      35: arraylength
      36: iconst_1
      37: if_icmpeq     47
      40: aload_2
      41: arraylength
      42: bipush        19
      44: if_icmple     68
      47: getstatic     #395                // Field FAST_NUMBER_FAILED:Ljava/lang/NumberFormatException;
      50: athrow
      51: iconst_0
      52: istore        5
      54: iconst_0
      55: istore        6
      57: aload_2
      58: arraylength
      59: bipush        18
      61: if_icmple     68
      64: getstatic     #395                // Field FAST_NUMBER_FAILED:Ljava/lang/NumberFormatException;
      67: athrow
      68: iload         5
      70: aload_2
      71: arraylength
      72: if_icmpge     120
      75: aload_2
      76: iload         5
      78: iinc          5, 1
      81: baload
      82: istore        7
      84: iload         7
      86: bipush        48
      88: if_icmplt     98
      91: iload         7
      93: bipush        57
      95: if_icmple     102
      98: getstatic     #395                // Field FAST_NUMBER_FAILED:Ljava/lang/NumberFormatException;
     101: athrow
     102: lload_3
     103: ldc2_w        #396                // long 10l
     106: lmul
     107: lstore_3
     108: lload_3
     109: iload         7
     111: bipush        48
     113: isub
     114: i2l
     115: ladd
     116: lstore_3
     117: goto          68
     120: iload         6
     122: ifeq          128
     125: lload_3
     126: lneg
     127: lstore_3
     128: lload_3
     129: lreturn

  private int getFastInt(int) throws java.sql.SQLException, java.lang.NumberFormatException;
    Code:
       0: aload_0
       1: getfield      #74                 // Field this_row:[[B
       4: iload_1
       5: iconst_1
       6: isub
       7: aaload
       8: astore_2
       9: aload_2
      10: arraylength
      11: ifne          18
      14: getstatic     #395                // Field FAST_NUMBER_FAILED:Ljava/lang/NumberFormatException;
      17: athrow
      18: iconst_0
      19: istore_3
      20: aload_2
      21: iconst_0
      22: baload
      23: bipush        45
      25: if_icmpne     51
      28: iconst_1
      29: istore        5
      31: iconst_1
      32: istore        4
      34: aload_2
      35: arraylength
      36: iconst_1
      37: if_icmpeq     47
      40: aload_2
      41: arraylength
      42: bipush        10
      44: if_icmple     68
      47: getstatic     #395                // Field FAST_NUMBER_FAILED:Ljava/lang/NumberFormatException;
      50: athrow
      51: iconst_0
      52: istore        4
      54: iconst_0
      55: istore        5
      57: aload_2
      58: arraylength
      59: bipush        9
      61: if_icmple     68
      64: getstatic     #395                // Field FAST_NUMBER_FAILED:Ljava/lang/NumberFormatException;
      67: athrow
      68: iload         4
      70: aload_2
      71: arraylength
      72: if_icmpge     118
      75: aload_2
      76: iload         4
      78: iinc          4, 1
      81: baload
      82: istore        6
      84: iload         6
      86: bipush        48
      88: if_icmplt     98
      91: iload         6
      93: bipush        57
      95: if_icmple     102
      98: getstatic     #395                // Field FAST_NUMBER_FAILED:Ljava/lang/NumberFormatException;
     101: athrow
     102: iload_3
     103: bipush        10
     105: imul
     106: istore_3
     107: iload_3
     108: iload         6
     110: bipush        48
     112: isub
     113: iadd
     114: istore_3
     115: goto          68
     118: iload         5
     120: ifeq          126
     123: iload_3
     124: ineg
     125: istore_3
     126: iload_3
     127: ireturn

  private java.math.BigDecimal getFastBigDecimal(int) throws java.sql.SQLException, java.lang.NumberFormatException;
    Code:
       0: aload_0
       1: getfield      #74                 // Field this_row:[[B
       4: iload_1
       5: iconst_1
       6: isub
       7: aaload
       8: astore_2
       9: aload_2
      10: arraylength
      11: ifne          18
      14: getstatic     #395                // Field FAST_NUMBER_FAILED:Ljava/lang/NumberFormatException;
      17: athrow
      18: iconst_0
      19: istore_3
      20: lconst_0
      21: lstore        4
      23: aload_2
      24: iconst_0
      25: baload
      26: bipush        45
      28: if_icmpne     54
      31: iconst_1
      32: istore        7
      34: iconst_1
      35: istore        6
      37: aload_2
      38: arraylength
      39: iconst_1
      40: if_icmpeq     50
      43: aload_2
      44: arraylength
      45: bipush        19
      47: if_icmple     71
      50: getstatic     #395                // Field FAST_NUMBER_FAILED:Ljava/lang/NumberFormatException;
      53: athrow
      54: iconst_0
      55: istore        6
      57: iconst_0
      58: istore        7
      60: aload_2
      61: arraylength
      62: bipush        18
      64: if_icmple     71
      67: getstatic     #395                // Field FAST_NUMBER_FAILED:Ljava/lang/NumberFormatException;
      70: athrow
      71: iconst_0
      72: istore        8
      74: iload         6
      76: aload_2
      77: arraylength
      78: if_icmpge     149
      81: aload_2
      82: iload         6
      84: iinc          6, 1
      87: baload
      88: istore        9
      90: iload         9
      92: bipush        48
      94: if_icmplt     104
      97: iload         9
      99: bipush        57
     101: if_icmple     127
     104: iload         9
     106: bipush        46
     108: if_icmpne     123
     111: aload_2
     112: arraylength
     113: iload         6
     115: isub
     116: istore_3
     117: iinc          8, 1
     120: goto          74
     123: getstatic     #395                // Field FAST_NUMBER_FAILED:Ljava/lang/NumberFormatException;
     126: athrow
     127: lload         4
     129: ldc2_w        #396                // long 10l
     132: lmul
     133: lstore        4
     135: lload         4
     137: iload         9
     139: bipush        48
     141: isub
     142: i2l
     143: ladd
     144: lstore        4
     146: goto          74
     149: iload         7
     151: ifeq          161
     154: aload_2
     155: arraylength
     156: iconst_1
     157: isub
     158: goto          163
     161: aload_2
     162: arraylength
     163: istore        9
     165: iload         8
     167: iconst_1
     168: if_icmpgt     178
     171: iload         8
     173: iload         9
     175: if_icmpne     182
     178: getstatic     #395                // Field FAST_NUMBER_FAILED:Ljava/lang/NumberFormatException;
     181: athrow
     182: iload         7
     184: ifeq          192
     187: lload         4
     189: lneg
     190: lstore        4
     192: lload         4
     194: iload_3
     195: invokestatic  #398                // Method java/math/BigDecimal.valueOf:(JI)Ljava/math/BigDecimal;
     198: areturn

  public float getFloat(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #104                // Method checkResultSet:(I)V
       5: aload_0
       6: getfield      #21                 // Field wasNullFlag:Z
       9: ifeq          14
      12: fconst_0
      13: freturn
      14: aload_0
      15: iload_1
      16: invokevirtual #73                 // Method isBinary:(I)Z
      19: ifeq          70
      22: iload_1
      23: iconst_1
      24: isub
      25: istore_2
      26: aload_0
      27: getfield      #34                 // Field fields:[Lorg/postgresql/core/Field;
      30: iload_2
      31: aaload
      32: invokevirtual #105                // Method org/postgresql/core/Field.getOID:()I
      35: istore_3
      36: iload_3
      37: sipush        700
      40: if_icmpne     54
      43: aload_0
      44: getfield      #74                 // Field this_row:[[B
      47: iload_2
      48: aaload
      49: iconst_0
      50: invokestatic  #399                // Method org/postgresql/util/ByteConverter.float4:([BI)F
      53: freturn
      54: aload_0
      55: aload_0
      56: getfield      #74                 // Field this_row:[[B
      59: iload_2
      60: aaload
      61: iload_3
      62: ldc_w         #400                // String float
      65: invokespecial #344                // Method readDoubleValue:([BILjava/lang/String;)D
      68: d2f
      69: freturn
      70: aload_0
      71: iload_1
      72: invokevirtual #107                // Method getFixedString:(I)Ljava/lang/String;
      75: invokestatic  #401                // Method toFloat:(Ljava/lang/String;)F
      78: freturn

  public double getDouble(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #104                // Method checkResultSet:(I)V
       5: aload_0
       6: getfield      #21                 // Field wasNullFlag:Z
       9: ifeq          14
      12: dconst_0
      13: dreturn
      14: aload_0
      15: iload_1
      16: invokevirtual #73                 // Method isBinary:(I)Z
      19: ifeq          69
      22: iload_1
      23: iconst_1
      24: isub
      25: istore_2
      26: aload_0
      27: getfield      #34                 // Field fields:[Lorg/postgresql/core/Field;
      30: iload_2
      31: aaload
      32: invokevirtual #105                // Method org/postgresql/core/Field.getOID:()I
      35: istore_3
      36: iload_3
      37: sipush        701
      40: if_icmpne     54
      43: aload_0
      44: getfield      #74                 // Field this_row:[[B
      47: iload_2
      48: aaload
      49: iconst_0
      50: invokestatic  #402                // Method org/postgresql/util/ByteConverter.float8:([BI)D
      53: dreturn
      54: aload_0
      55: aload_0
      56: getfield      #74                 // Field this_row:[[B
      59: iload_2
      60: aaload
      61: iload_3
      62: ldc_w         #403                // String double
      65: invokespecial #344                // Method readDoubleValue:([BILjava/lang/String;)D
      68: dreturn
      69: aload_0
      70: iload_1
      71: invokevirtual #107                // Method getFixedString:(I)Ljava/lang/String;
      74: invokestatic  #404                // Method toDouble:(Ljava/lang/String;)D
      77: dreturn

  public java.math.BigDecimal getBigDecimal(int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #104                // Method checkResultSet:(I)V
       5: aload_0
       6: getfield      #21                 // Field wasNullFlag:Z
       9: ifeq          14
      12: aconst_null
      13: areturn
      14: aload_0
      15: iload_1
      16: invokevirtual #73                 // Method isBinary:(I)Z
      19: ifeq          124
      22: aload_0
      23: iload_1
      24: invokevirtual #46                 // Method getSQLType:(I)I
      27: istore_3
      28: iload_3
      29: iconst_2
      30: if_icmpeq     124
      33: iload_3
      34: iconst_3
      35: if_icmpeq     124
      38: aload_0
      39: iload_1
      40: aload_0
      41: getfield      #34                 // Field fields:[Lorg/postgresql/core/Field;
      44: iload_1
      45: iconst_1
      46: isub
      47: aaload
      48: invokevirtual #334                // Method internalGetObject:(ILorg/postgresql/core/Field;)Ljava/lang/Object;
      51: astore        4
      53: aload         4
      55: ifnonnull     60
      58: aconst_null
      59: areturn
      60: aload         4
      62: instanceof    #387                // class java/lang/Long
      65: ifne          84
      68: aload         4
      70: instanceof    #377                // class java/lang/Integer
      73: ifne          84
      76: aload         4
      78: instanceof    #346                // class java/lang/Byte
      81: ifeq          109
      84: aload         4
      86: checkcast     #405                // class java/lang/Number
      89: invokevirtual #406                // Method java/lang/Number.longValue:()J
      92: invokestatic  #407                // Method java/math/BigDecimal.valueOf:(J)Ljava/math/BigDecimal;
      95: astore        5
      97: aload_0
      98: aload         5
     100: iload_2
     101: invokespecial #408                // Method scaleBigDecimal:(Ljava/math/BigDecimal;I)Ljava/math/BigDecimal;
     104: astore        5
     106: aload         5
     108: areturn
     109: aload_0
     110: aload_0
     111: aload         4
     113: invokestatic  #329                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     116: invokespecial #409                // Method trimMoney:(Ljava/lang/String;)Ljava/lang/String;
     119: iload_2
     120: invokevirtual #410                // Method toBigDecimal:(Ljava/lang/String;I)Ljava/math/BigDecimal;
     123: areturn
     124: aload_0
     125: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     128: invokeinterface #91,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getEncoding:()Lorg/postgresql/core/Encoding;
     133: astore_3
     134: aload_3
     135: invokevirtual #383                // Method org/postgresql/core/Encoding.hasAsciiNumbers:()Z
     138: ifeq          162
     141: aload_0
     142: iload_1
     143: invokespecial #411                // Method getFastBigDecimal:(I)Ljava/math/BigDecimal;
     146: astore        4
     148: aload_0
     149: aload         4
     151: iload_2
     152: invokespecial #408                // Method scaleBigDecimal:(Ljava/math/BigDecimal;I)Ljava/math/BigDecimal;
     155: astore        4
     157: aload         4
     159: areturn
     160: astore        4
     162: aload_0
     163: aload_0
     164: iload_1
     165: invokevirtual #107                // Method getFixedString:(I)Ljava/lang/String;
     168: iload_2
     169: invokevirtual #410                // Method toBigDecimal:(Ljava/lang/String;I)Ljava/math/BigDecimal;
     172: areturn
    Exception table:
       from    to  target type
         141   159   160   Class java/lang/NumberFormatException

  public byte[] getBytes(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #104                // Method checkResultSet:(I)V
       5: aload_0
       6: getfield      #21                 // Field wasNullFlag:Z
       9: ifeq          14
      12: aconst_null
      13: areturn
      14: aload_0
      15: iload_1
      16: invokevirtual #73                 // Method isBinary:(I)Z
      19: ifeq          31
      22: aload_0
      23: getfield      #74                 // Field this_row:[[B
      26: iload_1
      27: iconst_1
      28: isub
      29: aaload
      30: areturn
      31: aload_0
      32: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
      35: getstatic     #113                // Field org/postgresql/core/ServerVersion.v7_2:Lorg/postgresql/core/ServerVersion;
      38: invokeinterface #412,  2          // InterfaceMethod org/postgresql/core/BaseConnection.haveMinimumCompatibleVersion:(Lorg/postgresql/core/Version;)Z
      43: ifeq          93
      46: aload_0
      47: getfield      #34                 // Field fields:[Lorg/postgresql/core/Field;
      50: iload_1
      51: iconst_1
      52: isub
      53: aaload
      54: invokevirtual #105                // Method org/postgresql/core/Field.getOID:()I
      57: bipush        17
      59: if_icmpne     79
      62: aload_0
      63: iload_1
      64: aload_0
      65: getfield      #74                 // Field this_row:[[B
      68: iload_1
      69: iconst_1
      70: isub
      71: aaload
      72: invokestatic  #413                // Method org/postgresql/util/PGbytea.toBytes:([B)[B
      75: invokespecial #414                // Method trimBytes:(I[B)[B
      78: areturn
      79: aload_0
      80: iload_1
      81: aload_0
      82: getfield      #74                 // Field this_row:[[B
      85: iload_1
      86: iconst_1
      87: isub
      88: aaload
      89: invokespecial #414                // Method trimBytes:(I[B)[B
      92: areturn
      93: aload_0
      94: getfield      #34                 // Field fields:[Lorg/postgresql/core/Field;
      97: iload_1
      98: iconst_1
      99: isub
     100: aaload
     101: invokevirtual #105                // Method org/postgresql/core/Field.getOID:()I
     104: bipush        26
     106: if_icmpne     151
     109: aload_0
     110: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
     113: invokeinterface #415,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getLargeObjectAPI:()Lorg/postgresql/largeobject/LargeObjectManager;
     118: astore_2
     119: aload_2
     120: aload_0
     121: iload_1
     122: invokevirtual #52                 // Method getLong:(I)J
     125: invokevirtual #416                // Method org/postgresql/largeobject/LargeObjectManager.open:(J)Lorg/postgresql/largeobject/LargeObject;
     128: astore_3
     129: aload_3
     130: aload_3
     131: invokevirtual #417                // Method org/postgresql/largeobject/LargeObject.size:()I
     134: invokevirtual #418                // Method org/postgresql/largeobject/LargeObject.read:(I)[B
     137: astore        4
     139: aload_3
     140: invokevirtual #419                // Method org/postgresql/largeobject/LargeObject.close:()V
     143: aload_0
     144: iload_1
     145: aload         4
     147: invokespecial #414                // Method trimBytes:(I[B)[B
     150: areturn
     151: aload_0
     152: iload_1
     153: aload_0
     154: getfield      #74                 // Field this_row:[[B
     157: iload_1
     158: iconst_1
     159: isub
     160: aaload
     161: invokespecial #414                // Method trimBytes:(I[B)[B
     164: areturn

  public java.sql.Date getDate(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: aconst_null
       3: invokevirtual #145                // Method getDate:(ILjava/util/Calendar;)Ljava/sql/Date;
       6: areturn

  public java.sql.Time getTime(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: aconst_null
       3: invokevirtual #143                // Method getTime:(ILjava/util/Calendar;)Ljava/sql/Time;
       6: areturn

  public java.sql.Timestamp getTimestamp(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: aconst_null
       3: invokevirtual #64                 // Method getTimestamp:(ILjava/util/Calendar;)Ljava/sql/Timestamp;
       6: areturn

  public java.io.InputStream getAsciiStream(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #104                // Method checkResultSet:(I)V
       5: aload_0
       6: getfield      #21                 // Field wasNullFlag:Z
       9: ifeq          14
      12: aconst_null
      13: areturn
      14: aload_0
      15: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
      18: getstatic     #113                // Field org/postgresql/core/ServerVersion.v7_2:Lorg/postgresql/core/ServerVersion;
      21: invokeinterface #412,  2          // InterfaceMethod org/postgresql/core/BaseConnection.haveMinimumCompatibleVersion:(Lorg/postgresql/core/Version;)Z
      26: ifeq          67
      29: new           #420                // class java/io/ByteArrayInputStream
      32: dup
      33: aload_0
      34: iload_1
      35: invokevirtual #61                 // Method getString:(I)Ljava/lang/String;
      38: ldc           #219                // String ASCII
      40: invokevirtual #328                // Method java/lang/String.getBytes:(Ljava/lang/String;)[B
      43: invokespecial #421                // Method java/io/ByteArrayInputStream."<init>":([B)V
      46: areturn
      47: astore_2
      48: new           #94                 // class org/postgresql/util/PSQLException
      51: dup
      52: ldc           #225                // String The JVM claims not to support the encoding: {0}
      54: ldc           #219                // String ASCII
      56: invokestatic  #167                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
      59: getstatic     #122                // Field org/postgresql/util/PSQLState.UNEXPECTED_ERROR:Lorg/postgresql/util/PSQLState;
      62: aload_2
      63: invokespecial #123                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
      66: athrow
      67: aload_0
      68: iload_1
      69: invokevirtual #118                // Method getBinaryStream:(I)Ljava/io/InputStream;
      72: areturn
    Exception table:
       from    to  target type
          29    46    47   Class java/io/UnsupportedEncodingException

  public java.io.InputStream getUnicodeStream(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #104                // Method checkResultSet:(I)V
       5: aload_0
       6: getfield      #21                 // Field wasNullFlag:Z
       9: ifeq          14
      12: aconst_null
      13: areturn
      14: aload_0
      15: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
      18: getstatic     #113                // Field org/postgresql/core/ServerVersion.v7_2:Lorg/postgresql/core/ServerVersion;
      21: invokeinterface #412,  2          // InterfaceMethod org/postgresql/core/BaseConnection.haveMinimumCompatibleVersion:(Lorg/postgresql/core/Version;)Z
      26: ifeq          69
      29: new           #420                // class java/io/ByteArrayInputStream
      32: dup
      33: aload_0
      34: iload_1
      35: invokevirtual #61                 // Method getString:(I)Ljava/lang/String;
      38: ldc_w         #422                // String UTF-8
      41: invokevirtual #328                // Method java/lang/String.getBytes:(Ljava/lang/String;)[B
      44: invokespecial #421                // Method java/io/ByteArrayInputStream."<init>":([B)V
      47: areturn
      48: astore_2
      49: new           #94                 // class org/postgresql/util/PSQLException
      52: dup
      53: ldc           #225                // String The JVM claims not to support the encoding: {0}
      55: ldc_w         #422                // String UTF-8
      58: invokestatic  #167                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
      61: getstatic     #122                // Field org/postgresql/util/PSQLState.UNEXPECTED_ERROR:Lorg/postgresql/util/PSQLState;
      64: aload_2
      65: invokespecial #123                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
      68: athrow
      69: aload_0
      70: iload_1
      71: invokevirtual #118                // Method getBinaryStream:(I)Ljava/io/InputStream;
      74: areturn
    Exception table:
       from    to  target type
          29    47    48   Class java/io/UnsupportedEncodingException

  public java.io.InputStream getBinaryStream(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #104                // Method checkResultSet:(I)V
       5: aload_0
       6: getfield      #21                 // Field wasNullFlag:Z
       9: ifeq          14
      12: aconst_null
      13: areturn
      14: aload_0
      15: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
      18: getstatic     #113                // Field org/postgresql/core/ServerVersion.v7_2:Lorg/postgresql/core/ServerVersion;
      21: invokeinterface #412,  2          // InterfaceMethod org/postgresql/core/BaseConnection.haveMinimumCompatibleVersion:(Lorg/postgresql/core/Version;)Z
      26: ifeq          51
      29: aload_0
      30: iload_1
      31: invokevirtual #65                 // Method getBytes:(I)[B
      34: astore_2
      35: aload_2
      36: ifnull        48
      39: new           #420                // class java/io/ByteArrayInputStream
      42: dup
      43: aload_2
      44: invokespecial #421                // Method java/io/ByteArrayInputStream."<init>":([B)V
      47: areturn
      48: goto          92
      51: aload_0
      52: getfield      #34                 // Field fields:[Lorg/postgresql/core/Field;
      55: iload_1
      56: iconst_1
      57: isub
      58: aaload
      59: invokevirtual #105                // Method org/postgresql/core/Field.getOID:()I
      62: bipush        26
      64: if_icmpne     92
      67: aload_0
      68: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
      71: invokeinterface #415,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getLargeObjectAPI:()Lorg/postgresql/largeobject/LargeObjectManager;
      76: astore_2
      77: aload_2
      78: aload_0
      79: iload_1
      80: invokevirtual #52                 // Method getLong:(I)J
      83: invokevirtual #416                // Method org/postgresql/largeobject/LargeObjectManager.open:(J)Lorg/postgresql/largeobject/LargeObject;
      86: astore_3
      87: aload_3
      88: invokevirtual #423                // Method org/postgresql/largeobject/LargeObject.getInputStream:()Ljava/io/InputStream;
      91: areturn
      92: aconst_null
      93: areturn

  public java.lang.String getString(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: invokevirtual #61                 // Method getString:(I)Ljava/lang/String;
       9: areturn

  public boolean getBoolean(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: invokevirtual #47                 // Method getBoolean:(I)Z
       9: ireturn

  public byte getByte(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: invokevirtual #424                // Method getByte:(I)B
       9: ireturn

  public short getShort(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: invokevirtual #425                // Method getShort:(I)S
       9: ireturn

  public int getInt(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: invokevirtual #50                 // Method getInt:(I)I
       9: ireturn

  public long getLong(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: invokevirtual #52                 // Method getLong:(I)J
       9: lreturn

  public float getFloat(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: invokevirtual #57                 // Method getFloat:(I)F
       9: freturn

  public double getDouble(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: invokevirtual #59                 // Method getDouble:(I)D
       9: dreturn

  public java.math.BigDecimal getBigDecimal(java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: iload_2
       7: invokevirtual #56                 // Method getBigDecimal:(II)Ljava/math/BigDecimal;
      10: areturn

  public byte[] getBytes(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: invokevirtual #65                 // Method getBytes:(I)[B
       9: areturn

  public java.sql.Date getDate(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: aconst_null
       7: invokevirtual #145                // Method getDate:(ILjava/util/Calendar;)Ljava/sql/Date;
      10: areturn

  public java.sql.Time getTime(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: aconst_null
       7: invokevirtual #143                // Method getTime:(ILjava/util/Calendar;)Ljava/sql/Time;
      10: areturn

  public java.sql.Timestamp getTimestamp(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: aconst_null
       7: invokevirtual #64                 // Method getTimestamp:(ILjava/util/Calendar;)Ljava/sql/Timestamp;
      10: areturn

  public java.io.InputStream getAsciiStream(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: invokevirtual #426                // Method getAsciiStream:(I)Ljava/io/InputStream;
       9: areturn

  public java.io.InputStream getUnicodeStream(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: invokevirtual #427                // Method getUnicodeStream:(I)Ljava/io/InputStream;
       9: areturn

  public java.io.InputStream getBinaryStream(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: invokevirtual #118                // Method getBinaryStream:(I)Ljava/io/InputStream;
       9: areturn

  public java.sql.SQLWarning getWarnings() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method checkClosed:()V
       4: aload_0
       5: getfield      #20                 // Field warnings:Ljava/sql/SQLWarning;
       8: areturn

  public void clearWarnings() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method checkClosed:()V
       4: aload_0
       5: aconst_null
       6: putfield      #20                 // Field warnings:Ljava/sql/SQLWarning;
       9: return

  protected void addWarning(java.sql.SQLWarning);
    Code:
       0: aload_0
       1: getfield      #20                 // Field warnings:Ljava/sql/SQLWarning;
       4: ifnull        18
       7: aload_0
       8: getfield      #20                 // Field warnings:Ljava/sql/SQLWarning;
      11: aload_1
      12: invokevirtual #428                // Method java/sql/SQLWarning.setNextWarning:(Ljava/sql/SQLWarning;)V
      15: goto          23
      18: aload_0
      19: aload_1
      20: putfield      #20                 // Field warnings:Ljava/sql/SQLWarning;
      23: return

  public java.lang.String getCursorName() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method checkClosed:()V
       4: aconst_null
       5: areturn

  public java.lang.Object getObject(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #104                // Method checkResultSet:(I)V
       5: aload_0
       6: getfield      #21                 // Field wasNullFlag:Z
       9: ifeq          14
      12: aconst_null
      13: areturn
      14: aload_0
      15: getfield      #34                 // Field fields:[Lorg/postgresql/core/Field;
      18: iload_1
      19: iconst_1
      20: isub
      21: aaload
      22: astore_2
      23: aload_2
      24: ifnonnull     34
      27: aload_0
      28: iconst_1
      29: putfield      #21                 // Field wasNullFlag:Z
      32: aconst_null
      33: areturn
      34: aload_0
      35: iload_1
      36: aload_2
      37: invokevirtual #334                // Method internalGetObject:(ILorg/postgresql/core/Field;)Ljava/lang/Object;
      40: astore_3
      41: aload_3
      42: ifnull        47
      45: aload_3
      46: areturn
      47: aload_0
      48: iload_1
      49: invokevirtual #73                 // Method isBinary:(I)Z
      52: ifeq          79
      55: aload_0
      56: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
      59: aload_0
      60: iload_1
      61: invokevirtual #69                 // Method getPGType:(I)Ljava/lang/String;
      64: aconst_null
      65: aload_0
      66: getfield      #74                 // Field this_row:[[B
      69: iload_1
      70: iconst_1
      71: isub
      72: aaload
      73: invokeinterface #429,  4          // InterfaceMethod org/postgresql/core/BaseConnection.getObject:(Ljava/lang/String;Ljava/lang/String;[B)Ljava/lang/Object;
      78: areturn
      79: aload_0
      80: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
      83: aload_0
      84: iload_1
      85: invokevirtual #69                 // Method getPGType:(I)Ljava/lang/String;
      88: aload_0
      89: iload_1
      90: invokevirtual #61                 // Method getString:(I)Ljava/lang/String;
      93: aconst_null
      94: invokeinterface #429,  4          // InterfaceMethod org/postgresql/core/BaseConnection.getObject:(Ljava/lang/String;Ljava/lang/String;[B)Ljava/lang/Object;
      99: areturn

  public java.lang.Object getObject(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #44                 // Method findColumn:(Ljava/lang/String;)I
       6: invokevirtual #153                // Method getObject:(I)Ljava/lang/Object;
       9: areturn

  public int findColumn(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method checkClosed:()V
       4: aload_0
       5: aload_1
       6: invokespecial #289                // Method findColumnIndex:(Ljava/lang/String;)I
       9: istore_2
      10: iload_2
      11: ifne          32
      14: new           #94                 // class org/postgresql/util/PSQLException
      17: dup
      18: ldc_w         #430                // String The column name {0} was not found in this ResultSet.
      21: aload_1
      22: invokestatic  #167                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
      25: getstatic     #431                // Field org/postgresql/util/PSQLState.UNDEFINED_COLUMN:Lorg/postgresql/util/PSQLState;
      28: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      31: athrow
      32: iload_2
      33: ireturn

  private int findColumnIndex(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #432                // Field columnNameIndexMap:Ljava/util/HashMap;
       4: ifnonnull     112
       7: aload_0
       8: new           #433                // class java/util/HashMap
      11: dup
      12: aload_0
      13: getfield      #34                 // Field fields:[Lorg/postgresql/core/Field;
      16: arraylength
      17: iconst_2
      18: imul
      19: invokespecial #434                // Method java/util/HashMap."<init>":(I)V
      22: putfield      #432                // Field columnNameIndexMap:Ljava/util/HashMap;
      25: aload_0
      26: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
      29: invokeinterface #435,  1          // InterfaceMethod org/postgresql/core/BaseConnection.isColumnSanitiserDisabled:()Z
      34: istore_2
      35: aload_0
      36: getfield      #34                 // Field fields:[Lorg/postgresql/core/Field;
      39: arraylength
      40: iconst_1
      41: isub
      42: istore_3
      43: iload_3
      44: iflt          112
      47: iload_2
      48: ifeq          77
      51: aload_0
      52: getfield      #432                // Field columnNameIndexMap:Ljava/util/HashMap;
      55: aload_0
      56: getfield      #34                 // Field fields:[Lorg/postgresql/core/Field;
      59: iload_3
      60: aaload
      61: invokevirtual #436                // Method org/postgresql/core/Field.getColumnLabel:()Ljava/lang/String;
      64: iload_3
      65: iconst_1
      66: iadd
      67: invokestatic  #51                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      70: invokevirtual #211                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      73: pop
      74: goto          106
      77: aload_0
      78: getfield      #432                // Field columnNameIndexMap:Ljava/util/HashMap;
      81: aload_0
      82: getfield      #34                 // Field fields:[Lorg/postgresql/core/Field;
      85: iload_3
      86: aaload
      87: invokevirtual #436                // Method org/postgresql/core/Field.getColumnLabel:()Ljava/lang/String;
      90: getstatic     #437                // Field java/util/Locale.US:Ljava/util/Locale;
      93: invokevirtual #438                // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      96: iload_3
      97: iconst_1
      98: iadd
      99: invokestatic  #51                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     102: invokevirtual #211                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     105: pop
     106: iinc          3, -1
     109: goto          43
     112: aload_0
     113: getfield      #432                // Field columnNameIndexMap:Ljava/util/HashMap;
     116: aload_1
     117: invokevirtual #207                // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     120: checkcast     #377                // class java/lang/Integer
     123: astore_2
     124: aload_2
     125: ifnull        133
     128: aload_2
     129: invokevirtual #439                // Method java/lang/Integer.intValue:()I
     132: ireturn
     133: aload_0
     134: getfield      #432                // Field columnNameIndexMap:Ljava/util/HashMap;
     137: aload_1
     138: getstatic     #437                // Field java/util/Locale.US:Ljava/util/Locale;
     141: invokevirtual #438                // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
     144: invokevirtual #207                // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     147: checkcast     #377                // class java/lang/Integer
     150: astore_2
     151: aload_2
     152: ifnull        170
     155: aload_0
     156: getfield      #432                // Field columnNameIndexMap:Ljava/util/HashMap;
     159: aload_1
     160: aload_2
     161: invokevirtual #211                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     164: pop
     165: aload_2
     166: invokevirtual #439                // Method java/lang/Integer.intValue:()I
     169: ireturn
     170: aload_0
     171: getfield      #432                // Field columnNameIndexMap:Ljava/util/HashMap;
     174: aload_1
     175: getstatic     #437                // Field java/util/Locale.US:Ljava/util/Locale;
     178: invokevirtual #440                // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
     181: invokevirtual #207                // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     184: checkcast     #377                // class java/lang/Integer
     187: astore_2
     188: aload_2
     189: ifnull        207
     192: aload_0
     193: getfield      #432                // Field columnNameIndexMap:Ljava/util/HashMap;
     196: aload_1
     197: aload_2
     198: invokevirtual #211                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     201: pop
     202: aload_2
     203: invokevirtual #439                // Method java/lang/Integer.intValue:()I
     206: ireturn
     207: iconst_0
     208: ireturn

  public int getColumnOID(int);
    Code:
       0: aload_0
       1: getfield      #34                 // Field fields:[Lorg/postgresql/core/Field;
       4: iload_1
       5: iconst_1
       6: isub
       7: aaload
       8: invokevirtual #105                // Method org/postgresql/core/Field.getOID:()I
      11: ireturn

  public java.lang.String getFixedString(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: iload_1
       3: invokevirtual #61                 // Method getString:(I)Ljava/lang/String;
       6: invokespecial #409                // Method trimMoney:(Ljava/lang/String;)Ljava/lang/String;
       9: areturn

  private java.lang.String trimMoney(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_1
       7: invokevirtual #303                // Method java/lang/String.length:()I
      10: iconst_2
      11: if_icmpge     16
      14: aload_1
      15: areturn
      16: aload_1
      17: iconst_0
      18: invokevirtual #304                // Method java/lang/String.charAt:(I)C
      21: istore_2
      22: iload_2
      23: bipush        45
      25: if_icmple     30
      28: aload_1
      29: areturn
      30: iload_2
      31: bipush        40
      33: if_icmpne     67
      36: new           #78                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #248                // Method java/lang/StringBuilder."<init>":()V
      43: ldc_w         #441                // String -
      46: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_1
      50: invokestatic  #442                // Method org/postgresql/util/PGtokenizer.removePara:(Ljava/lang/String;)Ljava/lang/String;
      53: iconst_1
      54: invokevirtual #443                // Method java/lang/String.substring:(I)Ljava/lang/String;
      57: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: astore_1
      64: goto          123
      67: iload_2
      68: bipush        36
      70: if_icmpne     82
      73: aload_1
      74: iconst_1
      75: invokevirtual #443                // Method java/lang/String.substring:(I)Ljava/lang/String;
      78: astore_1
      79: goto          123
      82: iload_2
      83: bipush        45
      85: if_icmpne     123
      88: aload_1
      89: iconst_1
      90: invokevirtual #304                // Method java/lang/String.charAt:(I)C
      93: bipush        36
      95: if_icmpne     123
      98: new           #78                 // class java/lang/StringBuilder
     101: dup
     102: invokespecial #248                // Method java/lang/StringBuilder."<init>":()V
     105: ldc_w         #441                // String -
     108: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: aload_1
     112: iconst_2
     113: invokevirtual #443                // Method java/lang/String.substring:(I)Ljava/lang/String;
     116: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     122: astore_1
     123: aload_1
     124: areturn

  protected java.lang.String getPGType(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #34                 // Field fields:[Lorg/postgresql/core/Field;
       4: iload_1
       5: iconst_1
       6: isub
       7: aaload
       8: astore_2
       9: aload_0
      10: aload_2
      11: invokespecial #444                // Method initSqlType:(Lorg/postgresql/core/Field;)V
      14: aload_2
      15: invokevirtual #445                // Method org/postgresql/core/Field.getPGType:()Ljava/lang/String;
      18: areturn

  protected int getSQLType(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #34                 // Field fields:[Lorg/postgresql/core/Field;
       4: iload_1
       5: iconst_1
       6: isub
       7: aaload
       8: astore_2
       9: aload_0
      10: aload_2
      11: invokespecial #444                // Method initSqlType:(Lorg/postgresql/core/Field;)V
      14: aload_2
      15: invokevirtual #446                // Method org/postgresql/core/Field.getSQLType:()I
      18: ireturn

  private void initSqlType(org.postgresql.core.Field) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: invokevirtual #447                // Method org/postgresql/core/Field.isTypeInitialized:()Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #32                 // Field connection:Lorg/postgresql/core/BaseConnection;
      12: invokeinterface #448,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
      17: astore_2
      18: aload_1
      19: invokevirtual #105                // Method org/postgresql/core/Field.getOID:()I
      22: istore_3
      23: aload_2
      24: iload_3
      25: invokeinterface #449,  2          // InterfaceMethod org/postgresql/core/TypeInfo.getPGType:(I)Ljava/lang/String;
      30: astore        4
      32: aload_2
      33: aload         4
      35: invokeinterface #450,  2          // InterfaceMethod org/postgresql/core/TypeInfo.getSQLType:(Ljava/lang/String;)I
      40: istore        5
      42: aload_1
      43: iload         5
      45: invokevirtual #451                // Method org/postgresql/core/Field.setSQLType:(I)V
      48: aload_1
      49: aload         4
      51: invokevirtual #452                // Method org/postgresql/core/Field.setPGType:(Ljava/lang/String;)V
      54: return

  private void checkUpdateable() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #453                // Method isUpdateable:()Z
       8: ifne          28
      11: new           #94                 // class org/postgresql/util/PSQLException
      14: dup
      15: ldc_w         #454                // String ResultSet is not updateable.  The query that generated this result set must select only one table, and must select all primary keys from that table. See the JDBC 2.1 API Specification, section 5.6 for more details.
      18: invokestatic  #96                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      21: getstatic     #97                 // Field org/postgresql/util/PSQLState.INVALID_CURSOR_STATE:Lorg/postgresql/util/PSQLState;
      24: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      27: athrow
      28: aload_0
      29: getfield      #7                  // Field updateValues:Ljava/util/HashMap;
      32: ifnonnull     60
      35: aload_0
      36: new           #433                // class java/util/HashMap
      39: dup
      40: aload_0
      41: getfield      #34                 // Field fields:[Lorg/postgresql/core/Field;
      44: arraylength
      45: i2d
      46: ldc2_w        #455                // double 0.75d
      49: ddiv
      50: d2i
      51: ldc_w         #457                // float 0.75f
      54: invokespecial #458                // Method java/util/HashMap."<init>":(IF)V
      57: putfield      #7                  // Field updateValues:Ljava/util/HashMap;
      60: return

  protected void checkClosed() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #35                 // Field rows:Ljava/util/List;
       4: ifnonnull     24
       7: new           #94                 // class org/postgresql/util/PSQLException
      10: dup
      11: ldc_w         #459                // String This ResultSet is closed.
      14: invokestatic  #96                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      17: getstatic     #460                // Field org/postgresql/util/PSQLState.OBJECT_NOT_IN_STATE:Lorg/postgresql/util/PSQLState;
      20: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      23: athrow
      24: return

  protected boolean isResultSetClosed();
    Code:
       0: aload_0
       1: getfield      #35                 // Field rows:Ljava/util/List;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  protected void checkColumnIndex(int) throws java.sql.SQLException;
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmplt     14
       5: iload_1
       6: aload_0
       7: getfield      #34                 // Field fields:[Lorg/postgresql/core/Field;
      10: arraylength
      11: if_icmple     53
      14: new           #94                 // class org/postgresql/util/PSQLException
      17: dup
      18: ldc_w         #461                // String The column index is out of range: {0}, number of columns: {1}.
      21: iconst_2
      22: anewarray     #132                // class java/lang/Object
      25: dup
      26: iconst_0
      27: iload_1
      28: invokestatic  #51                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      31: aastore
      32: dup
      33: iconst_1
      34: aload_0
      35: getfield      #34                 // Field fields:[Lorg/postgresql/core/Field;
      38: arraylength
      39: invokestatic  #51                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      42: aastore
      43: invokestatic  #135                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      46: getstatic     #168                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      49: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      52: athrow
      53: return

  protected void checkResultSet(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method checkClosed:()V
       4: aload_0
       5: getfield      #74                 // Field this_row:[[B
       8: ifnonnull     28
      11: new           #94                 // class org/postgresql/util/PSQLException
      14: dup
      15: ldc_w         #462                // String ResultSet not positioned properly, perhaps you need to call next.
      18: invokestatic  #96                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      21: getstatic     #97                 // Field org/postgresql/util/PSQLState.INVALID_CURSOR_STATE:Lorg/postgresql/util/PSQLState;
      24: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      27: athrow
      28: aload_0
      29: iload_1
      30: invokevirtual #234                // Method checkColumnIndex:(I)V
      33: aload_0
      34: aload_0
      35: getfield      #74                 // Field this_row:[[B
      38: iload_1
      39: iconst_1
      40: isub
      41: aaload
      42: ifnonnull     49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: putfield      #21                 // Field wasNullFlag:Z
      53: return

  protected boolean isBinary(int);
    Code:
       0: aload_0
       1: getfield      #34                 // Field fields:[Lorg/postgresql/core/Field;
       4: iload_1
       5: iconst_1
       6: isub
       7: aaload
       8: invokevirtual #463                // Method org/postgresql/core/Field.getFormat:()I
      11: iconst_1
      12: if_icmpne     19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public static boolean toBoolean(java.lang.String);
    Code:
       0: aload_0
       1: ifnull        88
       4: aload_0
       5: invokevirtual #353                // Method java/lang/String.trim:()Ljava/lang/String;
       8: astore_0
       9: aload_0
      10: ldc_w         #465                // String t
      13: invokevirtual #314                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      16: ifne          39
      19: aload_0
      20: ldc_w         #466                // String true
      23: invokevirtual #314                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      26: ifne          39
      29: aload_0
      30: ldc_w         #467                // String 1
      33: invokevirtual #71                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      36: ifeq          41
      39: iconst_1
      40: ireturn
      41: aload_0
      42: ldc_w         #468                // String f
      45: invokevirtual #314                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      48: ifne          71
      51: aload_0
      52: ldc_w         #469                // String false
      55: invokevirtual #314                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      58: ifne          71
      61: aload_0
      62: ldc_w         #470                // String 0
      65: invokevirtual #71                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      68: ifeq          73
      71: iconst_0
      72: ireturn
      73: aload_0
      74: invokestatic  #471                // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
      77: dconst_1
      78: dcmpl
      79: ifne          84
      82: iconst_1
      83: ireturn
      84: goto          88
      87: astore_1
      88: iconst_0
      89: ireturn
    Exception table:
       from    to  target type
          73    83    87   Class java/lang/NumberFormatException

  public static int toInt(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ifnull        125
       4: aload_0
       5: invokevirtual #353                // Method java/lang/String.trim:()Ljava/lang/String;
       8: astore_0
       9: aload_0
      10: invokestatic  #472                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      13: ireturn
      14: astore_1
      15: new           #356                // class java/math/BigDecimal
      18: dup
      19: aload_0
      20: invokespecial #357                // Method java/math/BigDecimal."<init>":(Ljava/lang/String;)V
      23: astore_2
      24: aload_2
      25: invokevirtual #358                // Method java/math/BigDecimal.toBigInteger:()Ljava/math/BigInteger;
      28: astore_3
      29: aload_3
      30: getstatic     #473                // Field INTMAX:Ljava/math/BigInteger;
      33: invokevirtual #360                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      36: istore        4
      38: aload_3
      39: getstatic     #474                // Field INTMIN:Ljava/math/BigInteger;
      42: invokevirtual #360                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      45: istore        5
      47: iload         4
      49: ifgt          57
      52: iload         5
      54: ifge          88
      57: new           #94                 // class org/postgresql/util/PSQLException
      60: dup
      61: ldc_w         #362                // String Bad value for type {0} : {1}
      64: iconst_2
      65: anewarray     #132                // class java/lang/Object
      68: dup
      69: iconst_0
      70: ldc_w         #382                // String int
      73: aastore
      74: dup
      75: iconst_1
      76: aload_0
      77: aastore
      78: invokestatic  #135                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      81: getstatic     #363                // Field org/postgresql/util/PSQLState.NUMERIC_VALUE_OUT_OF_RANGE:Lorg/postgresql/util/PSQLState;
      84: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      87: athrow
      88: aload_3
      89: invokevirtual #475                // Method java/math/BigInteger.intValue:()I
      92: ireturn
      93: astore_2
      94: new           #94                 // class org/postgresql/util/PSQLException
      97: dup
      98: ldc_w         #362                // String Bad value for type {0} : {1}
     101: iconst_2
     102: anewarray     #132                // class java/lang/Object
     105: dup
     106: iconst_0
     107: ldc_w         #382                // String int
     110: aastore
     111: dup
     112: iconst_1
     113: aload_0
     114: aastore
     115: invokestatic  #135                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     118: getstatic     #363                // Field org/postgresql/util/PSQLState.NUMERIC_VALUE_OUT_OF_RANGE:Lorg/postgresql/util/PSQLState;
     121: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     124: athrow
     125: iconst_0
     126: ireturn
    Exception table:
       from    to  target type
           4    13    14   Class java/lang/NumberFormatException
          15    92    93   Class java/lang/NumberFormatException

  public static long toLong(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ifnull        125
       4: aload_0
       5: invokevirtual #353                // Method java/lang/String.trim:()Ljava/lang/String;
       8: astore_0
       9: aload_0
      10: invokestatic  #476                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      13: lreturn
      14: astore_1
      15: new           #356                // class java/math/BigDecimal
      18: dup
      19: aload_0
      20: invokespecial #357                // Method java/math/BigDecimal."<init>":(Ljava/lang/String;)V
      23: astore_2
      24: aload_2
      25: invokevirtual #358                // Method java/math/BigDecimal.toBigInteger:()Ljava/math/BigInteger;
      28: astore_3
      29: aload_3
      30: getstatic     #477                // Field LONGMAX:Ljava/math/BigInteger;
      33: invokevirtual #360                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      36: istore        4
      38: aload_3
      39: getstatic     #478                // Field LONGMIN:Ljava/math/BigInteger;
      42: invokevirtual #360                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      45: istore        5
      47: iload         4
      49: ifgt          57
      52: iload         5
      54: ifge          88
      57: new           #94                 // class org/postgresql/util/PSQLException
      60: dup
      61: ldc_w         #362                // String Bad value for type {0} : {1}
      64: iconst_2
      65: anewarray     #132                // class java/lang/Object
      68: dup
      69: iconst_0
      70: ldc_w         #392                // String long
      73: aastore
      74: dup
      75: iconst_1
      76: aload_0
      77: aastore
      78: invokestatic  #135                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      81: getstatic     #363                // Field org/postgresql/util/PSQLState.NUMERIC_VALUE_OUT_OF_RANGE:Lorg/postgresql/util/PSQLState;
      84: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      87: athrow
      88: aload_3
      89: invokevirtual #479                // Method java/math/BigInteger.longValue:()J
      92: lreturn
      93: astore_2
      94: new           #94                 // class org/postgresql/util/PSQLException
      97: dup
      98: ldc_w         #362                // String Bad value for type {0} : {1}
     101: iconst_2
     102: anewarray     #132                // class java/lang/Object
     105: dup
     106: iconst_0
     107: ldc_w         #392                // String long
     110: aastore
     111: dup
     112: iconst_1
     113: aload_0
     114: aastore
     115: invokestatic  #135                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     118: getstatic     #363                // Field org/postgresql/util/PSQLState.NUMERIC_VALUE_OUT_OF_RANGE:Lorg/postgresql/util/PSQLState;
     121: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     124: athrow
     125: lconst_0
     126: lreturn
    Exception table:
       from    to  target type
           4    13    14   Class java/lang/NumberFormatException
          15    92    93   Class java/lang/NumberFormatException

  public static java.math.BigDecimal toBigDecimal(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: invokevirtual #353                // Method java/lang/String.trim:()Ljava/lang/String;
      10: astore_0
      11: new           #356                // class java/math/BigDecimal
      14: dup
      15: aload_0
      16: invokespecial #357                // Method java/math/BigDecimal."<init>":(Ljava/lang/String;)V
      19: areturn
      20: astore_1
      21: new           #94                 // class org/postgresql/util/PSQLException
      24: dup
      25: ldc_w         #362                // String Bad value for type {0} : {1}
      28: iconst_2
      29: anewarray     #132                // class java/lang/Object
      32: dup
      33: iconst_0
      34: ldc_w         #480                // String BigDecimal
      37: aastore
      38: dup
      39: iconst_1
      40: aload_0
      41: aastore
      42: invokestatic  #135                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      45: getstatic     #363                // Field org/postgresql/util/PSQLState.NUMERIC_VALUE_OUT_OF_RANGE:Lorg/postgresql/util/PSQLState;
      48: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      51: athrow
    Exception table:
       from    to  target type
           6    19    20   Class java/lang/NumberFormatException

  public java.math.BigDecimal toBigDecimal(java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_1
       7: invokestatic  #481                // Method toBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;
      10: astore_3
      11: aload_0
      12: aload_3
      13: iload_2
      14: invokespecial #408                // Method scaleBigDecimal:(Ljava/math/BigDecimal;I)Ljava/math/BigDecimal;
      17: areturn

  private java.math.BigDecimal scaleBigDecimal(java.math.BigDecimal, int) throws org.postgresql.util.PSQLException;
    Code:
       0: iload_2
       1: iconst_m1
       2: if_icmpne     7
       5: aload_1
       6: areturn
       7: aload_1
       8: iload_2
       9: invokevirtual #482                // Method java/math/BigDecimal.setScale:(I)Ljava/math/BigDecimal;
      12: areturn
      13: astore_3
      14: new           #94                 // class org/postgresql/util/PSQLException
      17: dup
      18: ldc_w         #362                // String Bad value for type {0} : {1}
      21: iconst_2
      22: anewarray     #132                // class java/lang/Object
      25: dup
      26: iconst_0
      27: ldc_w         #480                // String BigDecimal
      30: aastore
      31: dup
      32: iconst_1
      33: aload_1
      34: aastore
      35: invokestatic  #135                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      38: getstatic     #363                // Field org/postgresql/util/PSQLState.NUMERIC_VALUE_OUT_OF_RANGE:Lorg/postgresql/util/PSQLState;
      41: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      44: athrow
    Exception table:
       from    to  target type
           7    12    13   Class java/lang/ArithmeticException

  public static float toFloat(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ifnull        46
       4: aload_0
       5: invokevirtual #353                // Method java/lang/String.trim:()Ljava/lang/String;
       8: astore_0
       9: aload_0
      10: invokestatic  #484                // Method java/lang/Float.parseFloat:(Ljava/lang/String;)F
      13: freturn
      14: astore_1
      15: new           #94                 // class org/postgresql/util/PSQLException
      18: dup
      19: ldc_w         #362                // String Bad value for type {0} : {1}
      22: iconst_2
      23: anewarray     #132                // class java/lang/Object
      26: dup
      27: iconst_0
      28: ldc_w         #400                // String float
      31: aastore
      32: dup
      33: iconst_1
      34: aload_0
      35: aastore
      36: invokestatic  #135                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      39: getstatic     #363                // Field org/postgresql/util/PSQLState.NUMERIC_VALUE_OUT_OF_RANGE:Lorg/postgresql/util/PSQLState;
      42: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      45: athrow
      46: fconst_0
      47: freturn
    Exception table:
       from    to  target type
           4    13    14   Class java/lang/NumberFormatException

  public static double toDouble(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ifnull        46
       4: aload_0
       5: invokevirtual #353                // Method java/lang/String.trim:()Ljava/lang/String;
       8: astore_0
       9: aload_0
      10: invokestatic  #471                // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
      13: dreturn
      14: astore_1
      15: new           #94                 // class org/postgresql/util/PSQLException
      18: dup
      19: ldc_w         #362                // String Bad value for type {0} : {1}
      22: iconst_2
      23: anewarray     #132                // class java/lang/Object
      26: dup
      27: iconst_0
      28: ldc_w         #403                // String double
      31: aastore
      32: dup
      33: iconst_1
      34: aload_0
      35: aastore
      36: invokestatic  #135                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      39: getstatic     #363                // Field org/postgresql/util/PSQLState.NUMERIC_VALUE_OUT_OF_RANGE:Lorg/postgresql/util/PSQLState;
      42: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      45: athrow
      46: dconst_0
      47: dreturn
    Exception table:
       from    to  target type
           4    13    14   Class java/lang/NumberFormatException

  private void initRowBuffer();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #35                 // Field rows:Ljava/util/List;
       5: aload_0
       6: getfield      #19                 // Field current_row:I
       9: invokeinterface #181,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      14: checkcast     #23                 // class "[[B"
      17: checkcast     #23                 // class "[[B"
      20: putfield      #74                 // Field this_row:[[B
      23: aload_0
      24: getfield      #40                 // Field resultsetconcurrency:I
      27: sipush        1008
      30: if_icmpne     66
      33: aload_0
      34: aload_0
      35: getfield      #74                 // Field this_row:[[B
      38: arraylength
      39: anewarray     #214                // class "[B"
      42: putfield      #24                 // Field rowBuffer:[[B
      45: aload_0
      46: getfield      #74                 // Field this_row:[[B
      49: iconst_0
      50: aload_0
      51: getfield      #24                 // Field rowBuffer:[[B
      54: iconst_0
      55: aload_0
      56: getfield      #74                 // Field this_row:[[B
      59: arraylength
      60: invokestatic  #215                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      63: goto          74
      66: aload_0
      67: aconst_null
      68: checkcast     #23                 // class "[[B"
      71: putfield      #24                 // Field rowBuffer:[[B
      74: return

  private boolean isColumnTrimmable(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #46                 // Method getSQLType:(I)I
       5: tableswitch   { // -4 to 12
                    -4: 88
                    -3: 88
                    -2: 88
                    -1: 88
                     0: 90
                     1: 88
                     2: 90
                     3: 90
                     4: 90
                     5: 90
                     6: 90
                     7: 90
                     8: 90
                     9: 90
                    10: 90
                    11: 90
                    12: 88
               default: 90
          }
      88: iconst_1
      89: ireturn
      90: iconst_0
      91: ireturn

  private byte[] trimBytes(int, byte[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #38                 // Field maxFieldSize:I
       4: ifle          44
       7: aload_2
       8: arraylength
       9: aload_0
      10: getfield      #38                 // Field maxFieldSize:I
      13: if_icmple     44
      16: aload_0
      17: iload_1
      18: invokespecial #485                // Method isColumnTrimmable:(I)Z
      21: ifeq          44
      24: aload_0
      25: getfield      #38                 // Field maxFieldSize:I
      28: newarray       byte
      30: astore_3
      31: aload_2
      32: iconst_0
      33: aload_3
      34: iconst_0
      35: aload_0
      36: getfield      #38                 // Field maxFieldSize:I
      39: invokestatic  #215                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      42: aload_3
      43: areturn
      44: aload_2
      45: areturn

  private java.lang.String trimString(int, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #38                 // Field maxFieldSize:I
       4: ifle          36
       7: aload_2
       8: invokevirtual #303                // Method java/lang/String.length:()I
      11: aload_0
      12: getfield      #38                 // Field maxFieldSize:I
      15: if_icmple     36
      18: aload_0
      19: iload_1
      20: invokespecial #485                // Method isColumnTrimmable:(I)Z
      23: ifeq          36
      26: aload_2
      27: iconst_0
      28: aload_0
      29: getfield      #38                 // Field maxFieldSize:I
      32: invokevirtual #486                // Method java/lang/String.substring:(II)Ljava/lang/String;
      35: areturn
      36: aload_2
      37: areturn

  private double readDoubleValue(byte[], int, java.lang.String) throws org.postgresql.util.PSQLException;
    Code:
       0: iload_2
       1: lookupswitch  { // 5
                    20: 66
                    21: 52
                    23: 59
                   700: 73
                   701: 80
               default: 86
          }
      52: aload_1
      53: iconst_0
      54: invokestatic  #365                // Method org/postgresql/util/ByteConverter.int2:([BI)S
      57: i2d
      58: dreturn
      59: aload_1
      60: iconst_0
      61: invokestatic  #376                // Method org/postgresql/util/ByteConverter.int4:([BI)I
      64: i2d
      65: dreturn
      66: aload_1
      67: iconst_0
      68: invokestatic  #386                // Method org/postgresql/util/ByteConverter.int8:([BI)J
      71: l2d
      72: dreturn
      73: aload_1
      74: iconst_0
      75: invokestatic  #399                // Method org/postgresql/util/ByteConverter.float4:([BI)F
      78: f2d
      79: dreturn
      80: aload_1
      81: iconst_0
      82: invokestatic  #402                // Method org/postgresql/util/ByteConverter.float8:([BI)D
      85: dreturn
      86: new           #94                 // class org/postgresql/util/PSQLException
      89: dup
      90: ldc           #131                // String Cannot convert the column of type {0} to requested type {1}.
      92: iconst_2
      93: anewarray     #132                // class java/lang/Object
      96: dup
      97: iconst_0
      98: iload_2
      99: invokestatic  #133                // Method org/postgresql/core/Oid.toString:(I)Ljava/lang/String;
     102: aastore
     103: dup
     104: iconst_1
     105: aload_3
     106: aastore
     107: invokestatic  #135                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     110: getstatic     #136                // Field org/postgresql/util/PSQLState.DATA_TYPE_MISMATCH:Lorg/postgresql/util/PSQLState;
     113: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     116: athrow

  private long readLongValue(byte[], int, long, long, java.lang.String) throws org.postgresql.util.PSQLException;
    Code:
       0: iload_2
       1: lookupswitch  { // 5
                    20: 74
                    21: 52
                    23: 63
                   700: 84
                   701: 95
               default: 106
          }
      52: aload_1
      53: iconst_0
      54: invokestatic  #365                // Method org/postgresql/util/ByteConverter.int2:([BI)S
      57: i2l
      58: lstore        8
      60: goto          138
      63: aload_1
      64: iconst_0
      65: invokestatic  #376                // Method org/postgresql/util/ByteConverter.int4:([BI)I
      68: i2l
      69: lstore        8
      71: goto          138
      74: aload_1
      75: iconst_0
      76: invokestatic  #386                // Method org/postgresql/util/ByteConverter.int8:([BI)J
      79: lstore        8
      81: goto          138
      84: aload_1
      85: iconst_0
      86: invokestatic  #399                // Method org/postgresql/util/ByteConverter.float4:([BI)F
      89: f2l
      90: lstore        8
      92: goto          138
      95: aload_1
      96: iconst_0
      97: invokestatic  #402                // Method org/postgresql/util/ByteConverter.float8:([BI)D
     100: d2l
     101: lstore        8
     103: goto          138
     106: new           #94                 // class org/postgresql/util/PSQLException
     109: dup
     110: ldc           #131                // String Cannot convert the column of type {0} to requested type {1}.
     112: iconst_2
     113: anewarray     #132                // class java/lang/Object
     116: dup
     117: iconst_0
     118: iload_2
     119: invokestatic  #133                // Method org/postgresql/core/Oid.toString:(I)Ljava/lang/String;
     122: aastore
     123: dup
     124: iconst_1
     125: aload         7
     127: aastore
     128: invokestatic  #135                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     131: getstatic     #136                // Field org/postgresql/util/PSQLState.DATA_TYPE_MISMATCH:Lorg/postgresql/util/PSQLState;
     134: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     137: athrow
     138: lload         8
     140: lload_3
     141: lcmp
     142: iflt          153
     145: lload         8
     147: lload         5
     149: lcmp
     150: ifle          187
     153: new           #94                 // class org/postgresql/util/PSQLException
     156: dup
     157: ldc_w         #362                // String Bad value for type {0} : {1}
     160: iconst_2
     161: anewarray     #132                // class java/lang/Object
     164: dup
     165: iconst_0
     166: aload         7
     168: aastore
     169: dup
     170: iconst_1
     171: lload         8
     173: invokestatic  #53                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     176: aastore
     177: invokestatic  #135                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     180: getstatic     #363                // Field org/postgresql/util/PSQLState.NUMERIC_VALUE_OUT_OF_RANGE:Lorg/postgresql/util/PSQLState;
     183: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     186: athrow
     187: lload         8
     189: lreturn

  protected void updateValue(int, java.lang.Object) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #171                // Method checkUpdateable:()V
       4: aload_0
       5: getfield      #22                 // Field onInsertRow:Z
       8: ifne          54
      11: aload_0
      12: invokevirtual #173                // Method isBeforeFirst:()Z
      15: ifne          37
      18: aload_0
      19: invokevirtual #175                // Method isAfterLast:()Z
      22: ifne          37
      25: aload_0
      26: getfield      #35                 // Field rows:Ljava/util/List;
      29: invokeinterface #101,  1          // InterfaceMethod java/util/List.size:()I
      34: ifne          54
      37: new           #94                 // class org/postgresql/util/PSQLException
      40: dup
      41: ldc_w         #259                // String Cannot update the ResultSet because it is either before the start or after the end of the results.
      44: invokestatic  #96                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      47: getstatic     #97                 // Field org/postgresql/util/PSQLState.INVALID_CURSOR_STATE:Lorg/postgresql/util/PSQLState;
      50: invokespecial #98                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      53: athrow
      54: aload_0
      55: iload_1
      56: invokevirtual #234                // Method checkColumnIndex:(I)V
      59: aload_0
      60: aload_0
      61: getfield      #22                 // Field onInsertRow:Z
      64: ifne          71
      67: iconst_1
      68: goto          72
      71: iconst_0
      72: putfield      #6                  // Field doingUpdates:Z
      75: aload_2
      76: ifnonnull     87
      79: aload_0
      80: iload_1
      81: invokevirtual #217                // Method updateNull:(I)V
      84: goto          111
      87: aload_0
      88: invokevirtual #240                // Method getMetaData:()Ljava/sql/ResultSetMetaData;
      91: checkcast     #241                // class org/postgresql/PGResultSetMetaData
      94: astore_3
      95: aload_0
      96: getfield      #7                  // Field updateValues:Ljava/util/HashMap;
      99: aload_3
     100: iload_1
     101: invokeinterface #243,  2          // InterfaceMethod org/postgresql/PGResultSetMetaData.getBaseColumnName:(I)Ljava/lang/String;
     106: aload_2
     107: invokevirtual #211                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     110: pop
     111: return

  protected java.lang.Object getUUID(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: areturn

  protected java.lang.Object getUUID(byte[]) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: areturn

  void addRows(java.util.List);
    Code:
       0: aload_0
       1: getfield      #35                 // Field rows:Ljava/util/List;
       4: aload_1
       5: invokeinterface #487,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      10: pop
      11: return

  public void registerRealStatement(java.sql.Statement);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #488                // Field realStatement:Ljava/sql/Statement;
       5: return

  static {};
    Code:
       0: new           #489                // class java/math/BigInteger
       3: dup
       4: bipush        127
       6: invokestatic  #490                // Method java/lang/Byte.toString:(B)Ljava/lang/String;
       9: invokespecial #491                // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
      12: putstatic     #359                // Field BYTEMAX:Ljava/math/BigInteger;
      15: new           #489                // class java/math/BigInteger
      18: dup
      19: bipush        -128
      21: invokestatic  #490                // Method java/lang/Byte.toString:(B)Ljava/lang/String;
      24: invokespecial #491                // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
      27: putstatic     #361                // Field BYTEMIN:Ljava/math/BigInteger;
      30: new           #489                // class java/math/BigInteger
      33: dup
      34: sipush        32767
      37: invokestatic  #492                // Method java/lang/Short.toString:(S)Ljava/lang/String;
      40: invokespecial #491                // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
      43: putstatic     #373                // Field SHORTMAX:Ljava/math/BigInteger;
      46: new           #489                // class java/math/BigInteger
      49: dup
      50: sipush        -32768
      53: invokestatic  #492                // Method java/lang/Short.toString:(S)Ljava/lang/String;
      56: invokespecial #491                // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
      59: putstatic     #374                // Field SHORTMIN:Ljava/math/BigInteger;
      62: new           #493                // class org/postgresql/jdbc2/AbstractJdbc2ResultSet$1
      65: dup
      66: invokespecial #494                // Method org/postgresql/jdbc2/AbstractJdbc2ResultSet$1."<init>":()V
      69: putstatic     #395                // Field FAST_NUMBER_FAILED:Ljava/lang/NumberFormatException;
      72: new           #489                // class java/math/BigInteger
      75: dup
      76: ldc_w         #495                // int 2147483647
      79: invokestatic  #496                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      82: invokespecial #491                // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
      85: putstatic     #473                // Field INTMAX:Ljava/math/BigInteger;
      88: new           #489                // class java/math/BigInteger
      91: dup
      92: ldc_w         #497                // int -2147483648
      95: invokestatic  #496                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      98: invokespecial #491                // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
     101: putstatic     #474                // Field INTMIN:Ljava/math/BigInteger;
     104: new           #489                // class java/math/BigInteger
     107: dup
     108: ldc2_w        #390                // long 9223372036854775807l
     111: invokestatic  #498                // Method java/lang/Long.toString:(J)Ljava/lang/String;
     114: invokespecial #491                // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
     117: putstatic     #477                // Field LONGMAX:Ljava/math/BigInteger;
     120: new           #489                // class java/math/BigInteger
     123: dup
     124: ldc2_w        #388                // long -9223372036854775808l
     127: invokestatic  #498                // Method java/lang/Long.toString:(J)Ljava/lang/String;
     130: invokespecial #491                // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
     133: putstatic     #478                // Field LONGMIN:Ljava/math/BigInteger;
     136: return
}
