Compiled from "LruCache.java"
public class org.postgresql.util.LruCache<Key, Value extends org.postgresql.util.CanEstimateSize> {
  private final org.postgresql.util.LruCache$EvictAction<Value> onEvict;

  private final org.postgresql.util.LruCache$CreateAction<Key, Value> createAction;

  private final int maxSizeEntries;

  private final long maxSizeBytes;

  private long currentSize;

  private final java.util.Map<Key, Value> cache;

  private void evictValue(Value);
    Code:
       0: aload_0
       1: getfield      #5                  // Field onEvict:Lorg/postgresql/util/LruCache$EvictAction;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod org/postgresql/util/LruCache$EvictAction.evict:(Ljava/lang/Object;)V
      10: goto          14
      13: astore_2
      14: return
    Exception table:
       from    to  target type
           0    10    13   Class java/sql/SQLException

  public org.postgresql.util.LruCache(int, long, org.postgresql.util.LruCache$CreateAction<Key, Value>, org.postgresql.util.LruCache$EvictAction<Value>);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #9                  // class org/postgresql/util/LruCache$1
       8: dup
       9: aload_0
      10: invokespecial #10                 // Method org/postgresql/util/LruCache$1."<init>":(Lorg/postgresql/util/LruCache;)V
      13: putfield      #11                 // Field cache:Ljava/util/Map;
      16: aload_0
      17: iload_1
      18: putfield      #4                  // Field maxSizeEntries:I
      21: aload_0
      22: lload_2
      23: putfield      #2                  // Field maxSizeBytes:J
      26: aload_0
      27: aload         4
      29: putfield      #12                 // Field createAction:Lorg/postgresql/util/LruCache$CreateAction;
      32: aload_0
      33: aload         5
      35: putfield      #5                  // Field onEvict:Lorg/postgresql/util/LruCache$EvictAction;
      38: return

  public Value borrow(Key) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field cache:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #13,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #14                 // class org/postgresql/util/CanEstimateSize
      13: astore_2
      14: aload_2
      15: ifnonnull     32
      18: aload_0
      19: getfield      #12                 // Field createAction:Lorg/postgresql/util/LruCache$CreateAction;
      22: aload_1
      23: invokeinterface #15,  2           // InterfaceMethod org/postgresql/util/LruCache$CreateAction.create:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #14                 // class org/postgresql/util/CanEstimateSize
      31: areturn
      32: aload_0
      33: dup
      34: getfield      #3                  // Field currentSize:J
      37: aload_2
      38: invokeinterface #16,  1           // InterfaceMethod org/postgresql/util/CanEstimateSize.getSize:()J
      43: lsub
      44: putfield      #3                  // Field currentSize:J
      47: aload_2
      48: areturn

  public void put(Key, Value);
    Code:
       0: aload_2
       1: invokeinterface #16,  1           // InterfaceMethod org/postgresql/util/CanEstimateSize.getSize:()J
       6: lstore_3
       7: aload_0
       8: getfield      #2                  // Field maxSizeBytes:J
      11: lconst_0
      12: lcmp
      13: ifeq          36
      16: aload_0
      17: getfield      #4                  // Field maxSizeEntries:I
      20: ifeq          36
      23: lload_3
      24: ldc2_w        #17                 // long 2l
      27: lmul
      28: aload_0
      29: getfield      #2                  // Field maxSizeBytes:J
      32: lcmp
      33: ifle          42
      36: aload_0
      37: aload_2
      38: invokespecial #1                  // Method evictValue:(Lorg/postgresql/util/CanEstimateSize;)V
      41: return
      42: aload_0
      43: dup
      44: getfield      #3                  // Field currentSize:J
      47: lload_3
      48: ladd
      49: putfield      #3                  // Field currentSize:J
      52: aload_0
      53: getfield      #11                 // Field cache:Ljava/util/Map;
      56: aload_1
      57: aload_2
      58: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      63: pop
      64: return

  static int access$000(org.postgresql.util.LruCache);
    Code:
       0: aload_0
       1: getfield      #4                  // Field maxSizeEntries:I
       4: ireturn

  static long access$100(org.postgresql.util.LruCache);
    Code:
       0: aload_0
       1: getfield      #3                  // Field currentSize:J
       4: lreturn

  static long access$200(org.postgresql.util.LruCache);
    Code:
       0: aload_0
       1: getfield      #2                  // Field maxSizeBytes:J
       4: lreturn

  static void access$300(org.postgresql.util.LruCache, org.postgresql.util.CanEstimateSize);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method evictValue:(Lorg/postgresql/util/CanEstimateSize;)V
       5: return

  static long access$102(org.postgresql.util.LruCache, long);
    Code:
       0: aload_0
       1: lload_1
       2: dup2_x1
       3: putfield      #3                  // Field currentSize:J
       6: lreturn
}
