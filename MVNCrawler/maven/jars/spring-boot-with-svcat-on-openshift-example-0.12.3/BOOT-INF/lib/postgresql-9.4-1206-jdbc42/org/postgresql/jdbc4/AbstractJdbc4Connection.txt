Compiled from "AbstractJdbc4Connection.java"
public abstract class org.postgresql.jdbc4.AbstractJdbc4Connection extends org.postgresql.jdbc3g.AbstractJdbc3gConnection {
  private static final java.sql.SQLPermission SQL_PERMISSION_ABORT;

  private final java.util.Properties _clientInfo;

  public org.postgresql.jdbc4.AbstractJdbc4Connection(org.postgresql.util.HostSpec[], java.lang.String, java.lang.String, java.util.Properties, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokespecial #2                  // Method org/postgresql/jdbc3g/AbstractJdbc3gConnection."<init>":([Lorg/postgresql/util/HostSpec;Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;Ljava/lang/String;)V
      11: aload_0
      12: invokevirtual #3                  // Method getTypeInfo:()Lorg/postgresql/core/TypeInfo;
      15: astore        6
      17: aload_0
      18: getstatic     #4                  // Field org/postgresql/core/ServerVersion.v8_3:Lorg/postgresql/core/ServerVersion;
      21: invokevirtual #5                  // Method haveMinimumServerVersion:(Lorg/postgresql/core/Version;)Z
      24: ifeq          56
      27: aload         6
      29: ldc           #6                  // String xml
      31: sipush        142
      34: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      37: sipush        2009
      40: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      43: ldc           #10                 // String java.sql.SQLXML
      45: sipush        143
      48: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      51: invokeinterface #11,  6           // InterfaceMethod org/postgresql/core/TypeInfo.addCoreType:(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;)V
      56: aload_0
      57: new           #12                 // class java/util/Properties
      60: dup
      61: invokespecial #13                 // Method java/util/Properties."<init>":()V
      64: putfield      #14                 // Field _clientInfo:Ljava/util/Properties;
      67: aload_0
      68: getstatic     #15                 // Field org/postgresql/core/ServerVersion.v9_0:Lorg/postgresql/core/ServerVersion;
      71: invokevirtual #5                  // Method haveMinimumServerVersion:(Lorg/postgresql/core/Version;)Z
      74: ifeq          108
      77: getstatic     #16                 // Field org/postgresql/PGProperty.APPLICATION_NAME:Lorg/postgresql/PGProperty;
      80: aload         4
      82: invokevirtual #17                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      85: astore        7
      87: aload         7
      89: ifnonnull     96
      92: ldc           #18                 // String
      94: astore        7
      96: aload_0
      97: getfield      #14                 // Field _clientInfo:Ljava/util/Properties;
     100: ldc           #19                 // String ApplicationName
     102: aload         7
     104: invokevirtual #20                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     107: pop
     108: return

  protected abstract java.sql.Array makeArray(int, java.lang.String) throws java.sql.SQLException;

  protected abstract java.sql.Clob makeClob(long) throws java.sql.SQLException;

  protected abstract java.sql.Blob makeBlob(long) throws java.sql.SQLException;

  protected abstract java.sql.SQLXML makeSQLXML() throws java.sql.SQLException;

  public java.sql.Clob createClob() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #22                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: ldc           #23                 // String createClob()
      10: invokestatic  #24                 // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      13: athrow

  public java.sql.Blob createBlob() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #22                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: ldc           #25                 // String createBlob()
      10: invokestatic  #24                 // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      13: athrow

  public java.sql.NClob createNClob() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #22                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: ldc           #26                 // String createNClob()
      10: invokestatic  #24                 // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      13: athrow

  public java.sql.SQLXML createSQLXML() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #27                 // Method makeSQLXML:()Ljava/sql/SQLXML;
       8: areturn

  public java.sql.Struct createStruct(java.lang.String, java.lang.Object[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #22                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: ldc           #28                 // String createStruct(String, Object[])
      10: invokestatic  #24                 // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      13: athrow

  public java.sql.Array createArrayOf(java.lang.String, java.lang.Object[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #3                  // Method getTypeInfo:()Lorg/postgresql/core/TypeInfo;
       8: aload_1
       9: invokeinterface #29,  2           // InterfaceMethod org/postgresql/core/TypeInfo.getPGArrayType:(Ljava/lang/String;)I
      14: istore_3
      15: iload_3
      16: ifne          36
      19: new           #30                 // class org/postgresql/util/PSQLException
      22: dup
      23: ldc           #31                 // String Unable to find server array type for provided name {0}.
      25: aload_1
      26: invokestatic  #32                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
      29: getstatic     #33                 // Field org/postgresql/util/PSQLState.INVALID_NAME:Lorg/postgresql/util/PSQLState;
      32: invokespecial #34                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      35: athrow
      36: aload_0
      37: invokevirtual #3                  // Method getTypeInfo:()Lorg/postgresql/core/TypeInfo;
      40: iload_3
      41: invokeinterface #35,  2           // InterfaceMethod org/postgresql/core/TypeInfo.getArrayDelimiter:(I)C
      46: istore        4
      48: new           #36                 // class java/lang/StringBuilder
      51: dup
      52: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
      55: astore        5
      57: aload         5
      59: aload_2
      60: iload         4
      62: invokestatic  #38                 // Method appendArray:(Ljava/lang/StringBuilder;Ljava/lang/Object;C)V
      65: aload_0
      66: iload_3
      67: aload         5
      69: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: invokevirtual #40                 // Method makeArray:(ILjava/lang/String;)Ljava/sql/Array;
      75: areturn

  private static void appendArray(java.lang.StringBuilder, java.lang.Object, char);
    Code:
       0: aload_0
       1: bipush        123
       3: invokevirtual #41                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       6: pop
       7: aload_1
       8: invokestatic  #42                 // Method java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I
      11: istore_3
      12: iconst_0
      13: istore        4
      15: iload         4
      17: iload_3
      18: if_icmpge     95
      21: iload         4
      23: ifle          32
      26: aload_0
      27: iload_2
      28: invokevirtual #41                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      31: pop
      32: aload_1
      33: iload         4
      35: invokestatic  #43                 // Method java/lang/reflect/Array.get:(Ljava/lang/Object;I)Ljava/lang/Object;
      38: astore        5
      40: aload         5
      42: ifnonnull     55
      45: aload_0
      46: ldc           #44                 // String NULL
      48: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: pop
      52: goto          89
      55: aload         5
      57: invokevirtual #22                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      60: invokevirtual #46                 // Method java/lang/Class.isArray:()Z
      63: ifeq          76
      66: aload_0
      67: aload         5
      69: iload_2
      70: invokestatic  #38                 // Method appendArray:(Ljava/lang/StringBuilder;Ljava/lang/Object;C)V
      73: goto          89
      76: aload         5
      78: invokevirtual #47                 // Method java/lang/Object.toString:()Ljava/lang/String;
      81: astore        6
      83: aload_0
      84: aload         6
      86: invokestatic  #48                 // Method org/postgresql/jdbc2/AbstractJdbc2Array.escapeArrayElement:(Ljava/lang/StringBuilder;Ljava/lang/String;)V
      89: iinc          4, 1
      92: goto          15
      95: aload_0
      96: bipush        125
      98: invokevirtual #41                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     101: pop
     102: return

  public boolean isValid(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method isClosed:()Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: iload_1
      10: ifge          33
      13: new           #30                 // class org/postgresql/util/PSQLException
      16: dup
      17: ldc           #50                 // String Invalid timeout ({0}<0).
      19: iload_1
      20: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      23: invokestatic  #32                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
      26: getstatic     #51                 // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      29: invokespecial #34                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      32: athrow
      33: iconst_0
      34: istore_2
      35: aconst_null
      36: astore_3
      37: aload_0
      38: invokevirtual #49                 // Method isClosed:()Z
      41: ifne          67
      44: aload_0
      45: invokevirtual #52                 // Method createStatement:()Ljava/sql/Statement;
      48: astore_3
      49: aload_3
      50: iload_1
      51: invokeinterface #53,  2           // InterfaceMethod java/sql/Statement.setQueryTimeout:(I)V
      56: aload_3
      57: ldc           #18                 // String
      59: invokeinterface #54,  2           // InterfaceMethod java/sql/Statement.executeUpdate:(Ljava/lang/String;)I
      64: pop
      65: iconst_1
      66: istore_2
      67: aload_3
      68: ifnull        139
      71: aload_3
      72: invokeinterface #55,  1           // InterfaceMethod java/sql/Statement.close:()V
      77: goto          139
      80: astore        4
      82: goto          139
      85: astore        4
      87: aload_0
      88: invokevirtual #58                 // Method getLogger:()Lorg/postgresql/core/Logger;
      91: ldc           #59                 // String Validating connection.
      93: invokestatic  #60                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      96: aload         4
      98: invokevirtual #61                 // Method org/postgresql/core/Logger.log:(Ljava/lang/String;Ljava/lang/Throwable;)V
     101: aload_3
     102: ifnull        139
     105: aload_3
     106: invokeinterface #55,  1           // InterfaceMethod java/sql/Statement.close:()V
     111: goto          139
     114: astore        4
     116: goto          139
     119: astore        5
     121: aload_3
     122: ifnull        136
     125: aload_3
     126: invokeinterface #55,  1           // InterfaceMethod java/sql/Statement.close:()V
     131: goto          136
     134: astore        6
     136: aload         5
     138: athrow
     139: iload_2
     140: ireturn
    Exception table:
       from    to  target type
          71    77    80   Class java/lang/Exception
          37    67    85   Class java/sql/SQLException
         105   111   114   Class java/lang/Exception
          37    67   119   any
          85   101   119   any
         125   131   134   Class java/lang/Exception
         119   121   119   any

  public void setClientInfo(java.lang.String, java.lang.String) throws java.sql.SQLClientInfoException;
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method checkClosed:()V
       4: goto          45
       7: astore_3
       8: new           #62                 // class java/util/HashMap
      11: dup
      12: invokespecial #63                 // Method java/util/HashMap."<init>":()V
      15: astore        4
      17: aload         4
      19: aload_1
      20: getstatic     #64                 // Field java/sql/ClientInfoStatus.REASON_UNKNOWN:Ljava/sql/ClientInfoStatus;
      23: invokeinterface #65,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      28: pop
      29: new           #66                 // class java/sql/SQLClientInfoException
      32: dup
      33: ldc           #67                 // String This connection has been closed.
      35: invokestatic  #60                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      38: aload         4
      40: aload_3
      41: invokespecial #68                 // Method java/sql/SQLClientInfoException."<init>":(Ljava/lang/String;Ljava/util/Map;Ljava/lang/Throwable;)V
      44: athrow
      45: aload_0
      46: getstatic     #15                 // Field org/postgresql/core/ServerVersion.v9_0:Lorg/postgresql/core/ServerVersion;
      49: invokevirtual #5                  // Method haveMinimumServerVersion:(Lorg/postgresql/core/Version;)Z
      52: ifeq          164
      55: ldc           #19                 // String ApplicationName
      57: aload_1
      58: invokevirtual #69                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      61: ifeq          164
      64: aload_2
      65: ifnonnull     71
      68: ldc           #18                 // String
      70: astore_2
      71: new           #36                 // class java/lang/StringBuilder
      74: dup
      75: ldc           #70                 // String SET application_name = \'
      77: invokespecial #71                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      80: astore_3
      81: aload_3
      82: aload_2
      83: aload_0
      84: invokevirtual #72                 // Method getStandardConformingStrings:()Z
      87: invokestatic  #73                 // Method org/postgresql/core/Utils.escapeLiteral:(Ljava/lang/StringBuilder;Ljava/lang/String;Z)Ljava/lang/StringBuilder;
      90: pop
      91: aload_3
      92: ldc           #74                 // String \'
      94: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: pop
      98: aload_0
      99: aload_3
     100: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: invokevirtual #75                 // Method execSQLUpdate:(Ljava/lang/String;)V
     106: goto          153
     109: astore_3
     110: new           #62                 // class java/util/HashMap
     113: dup
     114: invokespecial #63                 // Method java/util/HashMap."<init>":()V
     117: astore        4
     119: aload         4
     121: aload_1
     122: getstatic     #64                 // Field java/sql/ClientInfoStatus.REASON_UNKNOWN:Ljava/sql/ClientInfoStatus;
     125: invokeinterface #65,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     130: pop
     131: new           #66                 // class java/sql/SQLClientInfoException
     134: dup
     135: ldc           #76                 // String Failed to set ClientInfo property: {0}
     137: ldc           #19                 // String ApplicationName
     139: invokestatic  #32                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
     142: aload_3
     143: invokevirtual #77                 // Method java/sql/SQLException.getSQLState:()Ljava/lang/String;
     146: aload         4
     148: aload_3
     149: invokespecial #78                 // Method java/sql/SQLClientInfoException."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljava/lang/Throwable;)V
     152: athrow
     153: aload_0
     154: getfield      #14                 // Field _clientInfo:Ljava/util/Properties;
     157: aload_1
     158: aload_2
     159: invokevirtual #20                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     162: pop
     163: return
     164: aload_0
     165: new           #79                 // class java/sql/SQLWarning
     168: dup
     169: ldc           #80                 // String ClientInfo property not supported.
     171: invokestatic  #60                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
     174: getstatic     #81                 // Field org/postgresql/util/PSQLState.NOT_IMPLEMENTED:Lorg/postgresql/util/PSQLState;
     177: invokevirtual #82                 // Method org/postgresql/util/PSQLState.getState:()Ljava/lang/String;
     180: invokespecial #83                 // Method java/sql/SQLWarning."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     183: invokevirtual #84                 // Method addWarning:(Ljava/sql/SQLWarning;)V
     186: return
    Exception table:
       from    to  target type
           0     4     7   Class java/sql/SQLException
          71   106   109   Class java/sql/SQLException

  public void setClientInfo(java.util.Properties) throws java.sql.SQLClientInfoException;
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method checkClosed:()V
       4: goto          87
       7: astore_2
       8: new           #62                 // class java/util/HashMap
      11: dup
      12: invokespecial #63                 // Method java/util/HashMap."<init>":()V
      15: astore_3
      16: aload_1
      17: invokevirtual #85                 // Method java/util/Properties.entrySet:()Ljava/util/Set;
      20: invokeinterface #86,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      25: astore        4
      27: aload         4
      29: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          72
      37: aload         4
      39: invokeinterface #88,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #89                 // class java/util/Map$Entry
      47: astore        5
      49: aload_3
      50: aload         5
      52: invokeinterface #90,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      57: checkcast     #91                 // class java/lang/String
      60: getstatic     #64                 // Field java/sql/ClientInfoStatus.REASON_UNKNOWN:Ljava/sql/ClientInfoStatus;
      63: invokeinterface #65,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      68: pop
      69: goto          27
      72: new           #66                 // class java/sql/SQLClientInfoException
      75: dup
      76: ldc           #67                 // String This connection has been closed.
      78: invokestatic  #60                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      81: aload_3
      82: aload_2
      83: invokespecial #68                 // Method java/sql/SQLClientInfoException."<init>":(Ljava/lang/String;Ljava/util/Map;Ljava/lang/Throwable;)V
      86: athrow
      87: new           #62                 // class java/util/HashMap
      90: dup
      91: invokespecial #63                 // Method java/util/HashMap."<init>":()V
      94: astore_2
      95: iconst_1
      96: anewarray     #91                 // class java/lang/String
      99: dup
     100: iconst_0
     101: ldc           #19                 // String ApplicationName
     103: aastore
     104: astore_3
     105: aload_3
     106: arraylength
     107: istore        4
     109: iconst_0
     110: istore        5
     112: iload         5
     114: iload         4
     116: if_icmpge     160
     119: aload_3
     120: iload         5
     122: aaload
     123: astore        6
     125: aload_0
     126: aload         6
     128: aload_1
     129: aload         6
     131: aconst_null
     132: invokevirtual #92                 // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     135: invokevirtual #93                 // Method setClientInfo:(Ljava/lang/String;Ljava/lang/String;)V
     138: goto          154
     141: astore        7
     143: aload_2
     144: aload         7
     146: invokevirtual #94                 // Method java/sql/SQLClientInfoException.getFailedProperties:()Ljava/util/Map;
     149: invokeinterface #95,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
     154: iinc          5, 1
     157: goto          112
     160: aload_2
     161: invokeinterface #96,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
     166: ifne          189
     169: new           #66                 // class java/sql/SQLClientInfoException
     172: dup
     173: ldc           #97                 // String One ore more ClientInfo failed.
     175: invokestatic  #60                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
     178: getstatic     #81                 // Field org/postgresql/util/PSQLState.NOT_IMPLEMENTED:Lorg/postgresql/util/PSQLState;
     181: invokevirtual #82                 // Method org/postgresql/util/PSQLState.getState:()Ljava/lang/String;
     184: aload_2
     185: invokespecial #98                 // Method java/sql/SQLClientInfoException."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
     188: athrow
     189: return
    Exception table:
       from    to  target type
           0     4     7   Class java/sql/SQLException
         125   138   141   Class java/sql/SQLClientInfoException

  public java.lang.String getClientInfo(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #14                 // Field _clientInfo:Ljava/util/Properties;
       8: aload_1
       9: invokevirtual #99                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      12: areturn

  public java.util.Properties getClientInfo() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #14                 // Field _clientInfo:Ljava/util/Properties;
       8: areturn

  public <T> T createQueryObject(java.lang.Class<T>) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #22                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: ldc           #100                // String createQueryObject(Class<T>)
      10: invokestatic  #24                 // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      13: athrow

  public boolean isWrapperFor(java.lang.Class<?>) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method checkClosed:()V
       4: aload_1
       5: aload_0
       6: invokevirtual #22                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokevirtual #101                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      12: ireturn

  public <T> T unwrap(java.lang.Class<T>) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method checkClosed:()V
       4: aload_1
       5: aload_0
       6: invokevirtual #22                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokevirtual #101                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      12: ifeq          21
      15: aload_1
      16: aload_0
      17: invokevirtual #102                // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      20: areturn
      21: new           #57                 // class java/sql/SQLException
      24: dup
      25: new           #36                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #103                // String Cannot unwrap to
      34: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_1
      38: invokevirtual #104                // Method java/lang/Class.getName:()Ljava/lang/String;
      41: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokespecial #105                // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
      50: athrow

  public java.lang.String getSchema() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #52                 // Method createStatement:()Ljava/sql/Statement;
       8: astore_1
       9: aload_1
      10: ldc           #106                // String select current_schema()
      12: invokeinterface #107,  2          // InterfaceMethod java/sql/Statement.executeQuery:(Ljava/lang/String;)Ljava/sql/ResultSet;
      17: astore_2
      18: aload_2
      19: invokeinterface #108,  1          // InterfaceMethod java/sql/ResultSet.next:()Z
      24: ifne          43
      27: aconst_null
      28: astore_3
      29: aload_2
      30: invokeinterface #109,  1          // InterfaceMethod java/sql/ResultSet.close:()V
      35: aload_1
      36: invokeinterface #55,  1           // InterfaceMethod java/sql/Statement.close:()V
      41: aload_3
      42: areturn
      43: aload_2
      44: iconst_1
      45: invokeinterface #110,  2          // InterfaceMethod java/sql/ResultSet.getString:(I)Ljava/lang/String;
      50: astore_3
      51: aload_2
      52: invokeinterface #109,  1          // InterfaceMethod java/sql/ResultSet.close:()V
      57: aload_1
      58: invokeinterface #55,  1           // InterfaceMethod java/sql/Statement.close:()V
      63: aload_3
      64: areturn
      65: astore        4
      67: aload_2
      68: invokeinterface #109,  1          // InterfaceMethod java/sql/ResultSet.close:()V
      73: aload         4
      75: athrow
      76: astore        5
      78: aload_1
      79: invokeinterface #55,  1           // InterfaceMethod java/sql/Statement.close:()V
      84: aload         5
      86: athrow
    Exception table:
       from    to  target type
          18    29    65   any
          43    51    65   any
          65    67    65   any
           9    35    76   any
          43    57    76   any
          65    78    76   any

  public void setSchema(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #52                 // Method createStatement:()Ljava/sql/Statement;
       8: astore_2
       9: aload_1
      10: ifnonnull     25
      13: aload_2
      14: ldc           #111                // String SET SESSION search_path TO DEFAULT
      16: invokeinterface #54,  2           // InterfaceMethod java/sql/Statement.executeUpdate:(Ljava/lang/String;)I
      21: pop
      22: goto          68
      25: new           #36                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
      32: astore_3
      33: aload_3
      34: ldc           #112                // String SET SESSION search_path TO \'
      36: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: pop
      40: aload_3
      41: aload_1
      42: aload_0
      43: invokevirtual #72                 // Method getStandardConformingStrings:()Z
      46: invokestatic  #73                 // Method org/postgresql/core/Utils.escapeLiteral:(Ljava/lang/StringBuilder;Ljava/lang/String;Z)Ljava/lang/StringBuilder;
      49: pop
      50: aload_3
      51: ldc           #74                 // String \'
      53: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: pop
      57: aload_2
      58: aload_3
      59: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: invokeinterface #54,  2           // InterfaceMethod java/sql/Statement.executeUpdate:(Ljava/lang/String;)I
      67: pop
      68: aload_2
      69: invokeinterface #55,  1           // InterfaceMethod java/sql/Statement.close:()V
      74: goto          88
      77: astore        4
      79: aload_2
      80: invokeinterface #55,  1           // InterfaceMethod java/sql/Statement.close:()V
      85: aload         4
      87: athrow
      88: return
    Exception table:
       from    to  target type
           9    68    77   any
          77    79    77   any

  public void abort(java.util.concurrent.Executor) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method isClosed:()Z
       4: ifeq          8
       7: return
       8: getstatic     #113                // Field SQL_PERMISSION_ABORT:Ljava/sql/SQLPermission;
      11: aload_0
      12: invokevirtual #114                // Method java/sql/SQLPermission.checkGuard:(Ljava/lang/Object;)V
      15: new           #115                // class org/postgresql/jdbc4/AbstractJdbc4Connection$AbortCommand
      18: dup
      19: aload_0
      20: invokespecial #116                // Method org/postgresql/jdbc4/AbstractJdbc4Connection$AbortCommand."<init>":(Lorg/postgresql/jdbc4/AbstractJdbc4Connection;)V
      23: astore_2
      24: aload_1
      25: ifnull        38
      28: aload_1
      29: aload_2
      30: invokeinterface #117,  2          // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      35: goto          42
      38: aload_2
      39: invokevirtual #118                // Method org/postgresql/jdbc4/AbstractJdbc4Connection$AbortCommand.run:()V
      42: return

  public void setNetworkTimeout(java.util.concurrent.Executor, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc           #119                // String setNetworkTimeout(Executor, int)
       6: invokestatic  #24                 // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
       9: athrow

  public int getNetworkTimeout() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc           #120                // String getNetworkTimeout()
       6: invokestatic  #24                 // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
       9: athrow

  static void access$000(org.postgresql.jdbc4.AbstractJdbc4Connection);
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method abort:()V
       4: return

  static {};
    Code:
       0: new           #121                // class java/sql/SQLPermission
       3: dup
       4: ldc           #122                // String callAbort
       6: invokespecial #123                // Method java/sql/SQLPermission."<init>":(Ljava/lang/String;)V
       9: putstatic     #113                // Field SQL_PERMISSION_ABORT:Ljava/sql/SQLPermission;
      12: return
}
