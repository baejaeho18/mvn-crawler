Compiled from "AbstractJdbc2Clob.java"
public abstract class org.postgresql.jdbc2.AbstractJdbc2Clob extends org.postgresql.jdbc2.AbstractJdbc2BlobClob {
  public org.postgresql.jdbc2.AbstractJdbc2Clob(org.postgresql.core.BaseConnection, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: invokespecial #1                  // Method org/postgresql/jdbc2/AbstractJdbc2BlobClob."<init>":(Lorg/postgresql/core/BaseConnection;J)V
       6: return

  public synchronized java.io.InputStream getAsciiStream() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method getBinaryStream:()Ljava/io/InputStream;
       4: areturn

  public synchronized java.io.Reader getCharacterStream() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field conn:Lorg/postgresql/core/BaseConnection;
       4: invokeinterface #4,  1            // InterfaceMethod org/postgresql/core/BaseConnection.getEncoding:()Lorg/postgresql/core/Encoding;
       9: invokevirtual #5                  // Method org/postgresql/core/Encoding.name:()Ljava/lang/String;
      12: invokestatic  #6                  // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      15: astore_1
      16: new           #7                  // class java/io/InputStreamReader
      19: dup
      20: aload_0
      21: invokevirtual #2                  // Method getBinaryStream:()Ljava/io/InputStream;
      24: aload_1
      25: invokespecial #8                  // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
      28: areturn

  public synchronized java.lang.String getSubString(long, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: i2l
       4: invokevirtual #9                  // Method assertPosition:(JJ)V
       7: aload_0
       8: iconst_0
       9: invokevirtual #10                 // Method getLo:(Z)Lorg/postgresql/largeobject/LargeObject;
      12: lload_1
      13: l2i
      14: iconst_1
      15: isub
      16: invokevirtual #11                 // Method org/postgresql/largeobject/LargeObject.seek:(I)V
      19: new           #12                 // class java/lang/String
      22: dup
      23: aload_0
      24: iconst_0
      25: invokevirtual #10                 // Method getLo:(Z)Lorg/postgresql/largeobject/LargeObject;
      28: iload_3
      29: invokevirtual #13                 // Method org/postgresql/largeobject/LargeObject.read:(I)[B
      32: invokespecial #14                 // Method java/lang/String."<init>":([B)V
      35: areturn

  public synchronized long position(java.lang.String, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method checkFreed:()V
       4: aload_0
       5: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: ldc           #17                 // String position(String,long)
      10: invokestatic  #18                 // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      13: athrow

  public synchronized long position(java.sql.Clob, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method checkFreed:()V
       4: aload_0
       5: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: ldc           #19                 // String position(Clob,start)
      10: invokestatic  #18                 // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      13: athrow
}
