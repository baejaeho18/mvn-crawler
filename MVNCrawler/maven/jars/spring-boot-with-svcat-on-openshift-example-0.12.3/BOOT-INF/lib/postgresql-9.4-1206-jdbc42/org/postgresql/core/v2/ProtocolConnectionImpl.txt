Compiled from "ProtocolConnectionImpl.java"
class org.postgresql.core.v2.ProtocolConnectionImpl implements org.postgresql.core.ProtocolConnection {
  private java.lang.String serverVersion;

  private int serverVersionNum;

  private int cancelPid;

  private int cancelKey;

  private boolean standardConformingStrings;

  private int transactionState;

  private java.sql.SQLWarning warnings;

  private boolean closed;

  private final java.util.ArrayList notifications;

  private final org.postgresql.core.PGStream pgStream;

  private final java.lang.String user;

  private final java.lang.String database;

  private final org.postgresql.core.v2.QueryExecutorImpl executor;

  private final org.postgresql.core.Logger logger;

  private final int connectTimeout;

  org.postgresql.core.v2.ProtocolConnectionImpl(org.postgresql.core.PGStream, java.lang.String, java.lang.String, org.postgresql.core.Logger, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field serverVersionNum:I
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field closed:Z
      14: aload_0
      15: new           #4                  // class java/util/ArrayList
      18: dup
      19: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      22: putfield      #6                  // Field notifications:Ljava/util/ArrayList;
      25: aload_0
      26: aload_1
      27: putfield      #7                  // Field pgStream:Lorg/postgresql/core/PGStream;
      30: aload_0
      31: aload_2
      32: putfield      #8                  // Field user:Ljava/lang/String;
      35: aload_0
      36: aload_3
      37: putfield      #9                  // Field database:Ljava/lang/String;
      40: aload_0
      41: aload         4
      43: putfield      #10                 // Field logger:Lorg/postgresql/core/Logger;
      46: aload_0
      47: new           #11                 // class org/postgresql/core/v2/QueryExecutorImpl
      50: dup
      51: aload_0
      52: aload_1
      53: aload         4
      55: invokespecial #12                 // Method org/postgresql/core/v2/QueryExecutorImpl."<init>":(Lorg/postgresql/core/v2/ProtocolConnectionImpl;Lorg/postgresql/core/PGStream;Lorg/postgresql/core/Logger;)V
      58: putfield      #13                 // Field executor:Lorg/postgresql/core/v2/QueryExecutorImpl;
      61: aload_0
      62: iload         5
      64: putfield      #14                 // Field connectTimeout:I
      67: return

  public org.postgresql.util.HostSpec getHostSpec();
    Code:
       0: aload_0
       1: getfield      #7                  // Field pgStream:Lorg/postgresql/core/PGStream;
       4: invokevirtual #15                 // Method org/postgresql/core/PGStream.getHostSpec:()Lorg/postgresql/util/HostSpec;
       7: areturn

  public java.lang.String getUser();
    Code:
       0: aload_0
       1: getfield      #8                  // Field user:Ljava/lang/String;
       4: areturn

  public java.lang.String getDatabase();
    Code:
       0: aload_0
       1: getfield      #9                  // Field database:Ljava/lang/String;
       4: areturn

  public java.lang.String getServerVersion();
    Code:
       0: aload_0
       1: getfield      #16                 // Field serverVersion:Ljava/lang/String;
       4: areturn

  public int getServerVersionNum();
    Code:
       0: aload_0
       1: getfield      #2                  // Field serverVersionNum:I
       4: ifeq          12
       7: aload_0
       8: getfield      #2                  // Field serverVersionNum:I
      11: ireturn
      12: aload_0
      13: getfield      #16                 // Field serverVersion:Ljava/lang/String;
      16: invokestatic  #17                 // Method org/postgresql/core/Utils.parseServerVersionStr:(Ljava/lang/String;)I
      19: ireturn

  public synchronized boolean getStandardConformingStrings();
    Code:
       0: aload_0
       1: getfield      #18                 // Field standardConformingStrings:Z
       4: ireturn

  public synchronized int getTransactionState();
    Code:
       0: aload_0
       1: getfield      #19                 // Field transactionState:I
       4: ireturn

  public synchronized org.postgresql.PGNotification[] getNotifications() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field notifications:Ljava/util/ArrayList;
       4: aload_0
       5: getfield      #6                  // Field notifications:Ljava/util/ArrayList;
       8: invokevirtual #20                 // Method java/util/ArrayList.size:()I
      11: anewarray     #21                 // class org/postgresql/PGNotification
      14: invokevirtual #22                 // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      17: checkcast     #23                 // class "[Lorg/postgresql/PGNotification;"
      20: checkcast     #23                 // class "[Lorg/postgresql/PGNotification;"
      23: astore_1
      24: aload_0
      25: getfield      #6                  // Field notifications:Ljava/util/ArrayList;
      28: invokevirtual #24                 // Method java/util/ArrayList.clear:()V
      31: aload_1
      32: areturn

  public synchronized java.sql.SQLWarning getWarnings();
    Code:
       0: aload_0
       1: getfield      #25                 // Field warnings:Ljava/sql/SQLWarning;
       4: astore_1
       5: aload_0
       6: aconst_null
       7: putfield      #25                 // Field warnings:Ljava/sql/SQLWarning;
      10: aload_1
      11: areturn

  public org.postgresql.core.QueryExecutor getQueryExecutor();
    Code:
       0: aload_0
       1: getfield      #13                 // Field executor:Lorg/postgresql/core/v2/QueryExecutorImpl;
       4: areturn

  public void sendQueryCancel() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #26                 // Field cancelPid:I
       4: ifgt          8
       7: return
       8: aconst_null
       9: astore_1
      10: aload_0
      11: getfield      #10                 // Field logger:Lorg/postgresql/core/Logger;
      14: invokevirtual #27                 // Method org/postgresql/core/Logger.logDebug:()Z
      17: ifeq          66
      20: aload_0
      21: getfield      #10                 // Field logger:Lorg/postgresql/core/Logger;
      24: new           #28                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #30                 // String  FE=> CancelRequest(pid=
      33: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #26                 // Field cancelPid:I
      40: invokevirtual #32                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: ldc           #33                 // String ,ckey=
      45: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #34                 // Field cancelKey:I
      52: invokevirtual #32                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      55: ldc           #35                 // String )
      57: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokevirtual #37                 // Method org/postgresql/core/Logger.debug:(Ljava/lang/String;)V
      66: new           #38                 // class org/postgresql/core/PGStream
      69: dup
      70: aload_0
      71: getfield      #7                  // Field pgStream:Lorg/postgresql/core/PGStream;
      74: invokevirtual #15                 // Method org/postgresql/core/PGStream.getHostSpec:()Lorg/postgresql/util/HostSpec;
      77: aload_0
      78: getfield      #14                 // Field connectTimeout:I
      81: invokespecial #39                 // Method org/postgresql/core/PGStream."<init>":(Lorg/postgresql/util/HostSpec;I)V
      84: astore_1
      85: aload_1
      86: bipush        16
      88: invokevirtual #40                 // Method org/postgresql/core/PGStream.SendInteger4:(I)V
      91: aload_1
      92: sipush        1234
      95: invokevirtual #41                 // Method org/postgresql/core/PGStream.SendInteger2:(I)V
      98: aload_1
      99: sipush        5678
     102: invokevirtual #41                 // Method org/postgresql/core/PGStream.SendInteger2:(I)V
     105: aload_1
     106: aload_0
     107: getfield      #26                 // Field cancelPid:I
     110: invokevirtual #40                 // Method org/postgresql/core/PGStream.SendInteger4:(I)V
     113: aload_1
     114: aload_0
     115: getfield      #34                 // Field cancelKey:I
     118: invokevirtual #40                 // Method org/postgresql/core/PGStream.SendInteger4:(I)V
     121: aload_1
     122: invokevirtual #42                 // Method org/postgresql/core/PGStream.flush:()V
     125: aload_1
     126: invokevirtual #43                 // Method org/postgresql/core/PGStream.ReceiveEOF:()V
     129: aload_1
     130: invokevirtual #44                 // Method org/postgresql/core/PGStream.close:()V
     133: aconst_null
     134: astore_1
     135: aload_1
     136: ifnull        202
     139: aload_1
     140: invokevirtual #44                 // Method org/postgresql/core/PGStream.close:()V
     143: goto          202
     146: astore_2
     147: goto          202
     150: astore_2
     151: aload_0
     152: getfield      #10                 // Field logger:Lorg/postgresql/core/Logger;
     155: invokevirtual #27                 // Method org/postgresql/core/Logger.logDebug:()Z
     158: ifeq          171
     161: aload_0
     162: getfield      #10                 // Field logger:Lorg/postgresql/core/Logger;
     165: ldc           #46                 // String Ignoring exception on cancel request:
     167: aload_2
     168: invokevirtual #47                 // Method org/postgresql/core/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
     171: aload_1
     172: ifnull        202
     175: aload_1
     176: invokevirtual #44                 // Method org/postgresql/core/PGStream.close:()V
     179: goto          202
     182: astore_2
     183: goto          202
     186: astore_3
     187: aload_1
     188: ifnull        200
     191: aload_1
     192: invokevirtual #44                 // Method org/postgresql/core/PGStream.close:()V
     195: goto          200
     198: astore        4
     200: aload_3
     201: athrow
     202: return
    Exception table:
       from    to  target type
         139   143   146   Class java/io/IOException
          10   135   150   Class java/io/IOException
         175   179   182   Class java/io/IOException
          10   135   186   any
         150   171   186   any
         191   195   198   Class java/io/IOException

  public void close();
    Code:
       0: aload_0
       1: getfield      #3                  // Field closed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #10                 // Field logger:Lorg/postgresql/core/Logger;
      12: invokevirtual #27                 // Method org/postgresql/core/Logger.logDebug:()Z
      15: ifeq          27
      18: aload_0
      19: getfield      #10                 // Field logger:Lorg/postgresql/core/Logger;
      22: ldc           #48                 // String  FE=> Terminate
      24: invokevirtual #37                 // Method org/postgresql/core/Logger.debug:(Ljava/lang/String;)V
      27: aload_0
      28: getfield      #7                  // Field pgStream:Lorg/postgresql/core/PGStream;
      31: bipush        88
      33: invokevirtual #49                 // Method org/postgresql/core/PGStream.SendChar:(I)V
      36: aload_0
      37: getfield      #7                  // Field pgStream:Lorg/postgresql/core/PGStream;
      40: invokevirtual #42                 // Method org/postgresql/core/PGStream.flush:()V
      43: aload_0
      44: getfield      #7                  // Field pgStream:Lorg/postgresql/core/PGStream;
      47: invokevirtual #44                 // Method org/postgresql/core/PGStream.close:()V
      50: goto          74
      53: astore_1
      54: aload_0
      55: getfield      #10                 // Field logger:Lorg/postgresql/core/Logger;
      58: invokevirtual #27                 // Method org/postgresql/core/Logger.logDebug:()Z
      61: ifeq          74
      64: aload_0
      65: getfield      #10                 // Field logger:Lorg/postgresql/core/Logger;
      68: ldc           #50                 // String Discarding IOException on close:
      70: aload_1
      71: invokevirtual #47                 // Method org/postgresql/core/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      74: aload_0
      75: iconst_1
      76: putfield      #3                  // Field closed:Z
      79: return
    Exception table:
       from    to  target type
           8    50    53   Class java/io/IOException

  public org.postgresql.core.Encoding getEncoding();
    Code:
       0: aload_0
       1: getfield      #7                  // Field pgStream:Lorg/postgresql/core/PGStream;
       4: invokevirtual #51                 // Method org/postgresql/core/PGStream.getEncoding:()Lorg/postgresql/core/Encoding;
       7: areturn

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #3                  // Field closed:Z
       4: ireturn

  void setEncoding(org.postgresql.core.Encoding) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field pgStream:Lorg/postgresql/core/PGStream;
       4: aload_1
       5: invokevirtual #52                 // Method org/postgresql/core/PGStream.setEncoding:(Lorg/postgresql/core/Encoding;)V
       8: return

  void setServerVersion(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field serverVersion:Ljava/lang/String;
       5: return

  void setServerVersionNum(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field serverVersionNum:I
       5: return

  void setBackendKeyData(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #26                 // Field cancelPid:I
       5: aload_0
       6: iload_2
       7: putfield      #34                 // Field cancelKey:I
      10: return

  synchronized void setStandardConformingStrings(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #18                 // Field standardConformingStrings:Z
       5: return

  synchronized void addWarning(java.sql.SQLWarning);
    Code:
       0: aload_0
       1: getfield      #25                 // Field warnings:Ljava/sql/SQLWarning;
       4: ifnonnull     15
       7: aload_0
       8: aload_1
       9: putfield      #25                 // Field warnings:Ljava/sql/SQLWarning;
      12: goto          23
      15: aload_0
      16: getfield      #25                 // Field warnings:Ljava/sql/SQLWarning;
      19: aload_1
      20: invokevirtual #53                 // Method java/sql/SQLWarning.setNextWarning:(Ljava/sql/SQLWarning;)V
      23: return

  synchronized void addNotification(org.postgresql.PGNotification);
    Code:
       0: aload_0
       1: getfield      #6                  // Field notifications:Ljava/util/ArrayList;
       4: aload_1
       5: invokevirtual #54                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
       8: pop
       9: return

  synchronized void setTransactionState(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #19                 // Field transactionState:I
       5: return

  public int getProtocolVersion();
    Code:
       0: iconst_2
       1: ireturn

  public void setBinaryReceiveOids(java.util.Set<java.lang.Integer>);
    Code:
       0: return

  public boolean getIntegerDateTimes();
    Code:
       0: iconst_0
       1: ireturn

  public int getBackendPID();
    Code:
       0: aload_0
       1: getfield      #26                 // Field cancelPid:I
       4: ireturn

  public void abort();
    Code:
       0: aload_0
       1: getfield      #7                  // Field pgStream:Lorg/postgresql/core/PGStream;
       4: invokevirtual #55                 // Method org/postgresql/core/PGStream.getSocket:()Ljava/net/Socket;
       7: invokevirtual #56                 // Method java/net/Socket.close:()V
      10: goto          14
      13: astore_1
      14: aload_0
      15: iconst_1
      16: putfield      #3                  // Field closed:Z
      19: return
    Exception table:
       from    to  target type
           0    10    13   Class java/io/IOException
}
