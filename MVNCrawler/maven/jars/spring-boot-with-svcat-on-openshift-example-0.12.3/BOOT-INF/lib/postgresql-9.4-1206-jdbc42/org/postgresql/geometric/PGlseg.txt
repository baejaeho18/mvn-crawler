Compiled from "PGlseg.java"
public class org.postgresql.geometric.PGlseg extends org.postgresql.util.PGobject implements java.io.Serializable,java.lang.Cloneable {
  public org.postgresql.geometric.PGpoint[] point;

  public org.postgresql.geometric.PGlseg(double, double, double, double);
    Code:
       0: aload_0
       1: new           #1                  // class org/postgresql/geometric/PGpoint
       4: dup
       5: dload_1
       6: dload_3
       7: invokespecial #2                  // Method org/postgresql/geometric/PGpoint."<init>":(DD)V
      10: new           #1                  // class org/postgresql/geometric/PGpoint
      13: dup
      14: dload         5
      16: dload         7
      18: invokespecial #2                  // Method org/postgresql/geometric/PGpoint."<init>":(DD)V
      21: invokespecial #3                  // Method "<init>":(Lorg/postgresql/geometric/PGpoint;Lorg/postgresql/geometric/PGpoint;)V
      24: return

  public org.postgresql.geometric.PGlseg(org.postgresql.geometric.PGpoint, org.postgresql.geometric.PGpoint);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method "<init>":()V
       4: aload_0
       5: getfield      #5                  // Field point:[Lorg/postgresql/geometric/PGpoint;
       8: iconst_0
       9: aload_1
      10: aastore
      11: aload_0
      12: getfield      #5                  // Field point:[Lorg/postgresql/geometric/PGpoint;
      15: iconst_1
      16: aload_2
      17: aastore
      18: return

  public org.postgresql.geometric.PGlseg(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #4                  // Method "<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #6                  // Method setValue:(Ljava/lang/String;)V
       9: return

  public org.postgresql.geometric.PGlseg();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method org/postgresql/util/PGobject."<init>":()V
       4: aload_0
       5: iconst_2
       6: anewarray     #1                  // class org/postgresql/geometric/PGpoint
       9: putfield      #5                  // Field point:[Lorg/postgresql/geometric/PGpoint;
      12: aload_0
      13: ldc           #8                  // String lseg
      15: invokevirtual #9                  // Method setType:(Ljava/lang/String;)V
      18: return

  public void setValue(java.lang.String) throws java.sql.SQLException;
    Code:
       0: new           #10                 // class org/postgresql/util/PGtokenizer
       3: dup
       4: aload_1
       5: invokestatic  #11                 // Method org/postgresql/util/PGtokenizer.removeBox:(Ljava/lang/String;)Ljava/lang/String;
       8: bipush        44
      10: invokespecial #12                 // Method org/postgresql/util/PGtokenizer."<init>":(Ljava/lang/String;C)V
      13: astore_2
      14: aload_2
      15: invokevirtual #13                 // Method org/postgresql/util/PGtokenizer.getSize:()I
      18: iconst_2
      19: if_icmpeq     53
      22: new           #14                 // class org/postgresql/util/PSQLException
      25: dup
      26: ldc           #15                 // String Conversion to type {0} failed: {1}.
      28: iconst_2
      29: anewarray     #16                 // class java/lang/Object
      32: dup
      33: iconst_0
      34: aload_0
      35: getfield      #17                 // Field type:Ljava/lang/String;
      38: aastore
      39: dup
      40: iconst_1
      41: aload_1
      42: aastore
      43: invokestatic  #18                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      46: getstatic     #19                 // Field org/postgresql/util/PSQLState.DATA_TYPE_MISMATCH:Lorg/postgresql/util/PSQLState;
      49: invokespecial #20                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      52: athrow
      53: aload_0
      54: getfield      #5                  // Field point:[Lorg/postgresql/geometric/PGpoint;
      57: iconst_0
      58: new           #1                  // class org/postgresql/geometric/PGpoint
      61: dup
      62: aload_2
      63: iconst_0
      64: invokevirtual #21                 // Method org/postgresql/util/PGtokenizer.getToken:(I)Ljava/lang/String;
      67: invokespecial #22                 // Method org/postgresql/geometric/PGpoint."<init>":(Ljava/lang/String;)V
      70: aastore
      71: aload_0
      72: getfield      #5                  // Field point:[Lorg/postgresql/geometric/PGpoint;
      75: iconst_1
      76: new           #1                  // class org/postgresql/geometric/PGpoint
      79: dup
      80: aload_2
      81: iconst_1
      82: invokevirtual #21                 // Method org/postgresql/util/PGtokenizer.getToken:(I)Ljava/lang/String;
      85: invokespecial #22                 // Method org/postgresql/geometric/PGpoint."<init>":(Ljava/lang/String;)V
      88: aastore
      89: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #23                 // class org/postgresql/geometric/PGlseg
       4: ifeq          90
       7: aload_1
       8: checkcast     #23                 // class org/postgresql/geometric/PGlseg
      11: astore_2
      12: aload_2
      13: getfield      #5                  // Field point:[Lorg/postgresql/geometric/PGpoint;
      16: iconst_0
      17: aaload
      18: aload_0
      19: getfield      #5                  // Field point:[Lorg/postgresql/geometric/PGpoint;
      22: iconst_0
      23: aaload
      24: invokevirtual #24                 // Method org/postgresql/geometric/PGpoint.equals:(Ljava/lang/Object;)Z
      27: ifeq          48
      30: aload_2
      31: getfield      #5                  // Field point:[Lorg/postgresql/geometric/PGpoint;
      34: iconst_1
      35: aaload
      36: aload_0
      37: getfield      #5                  // Field point:[Lorg/postgresql/geometric/PGpoint;
      40: iconst_1
      41: aaload
      42: invokevirtual #24                 // Method org/postgresql/geometric/PGpoint.equals:(Ljava/lang/Object;)Z
      45: ifne          84
      48: aload_2
      49: getfield      #5                  // Field point:[Lorg/postgresql/geometric/PGpoint;
      52: iconst_0
      53: aaload
      54: aload_0
      55: getfield      #5                  // Field point:[Lorg/postgresql/geometric/PGpoint;
      58: iconst_1
      59: aaload
      60: invokevirtual #24                 // Method org/postgresql/geometric/PGpoint.equals:(Ljava/lang/Object;)Z
      63: ifeq          88
      66: aload_2
      67: getfield      #5                  // Field point:[Lorg/postgresql/geometric/PGpoint;
      70: iconst_1
      71: aaload
      72: aload_0
      73: getfield      #5                  // Field point:[Lorg/postgresql/geometric/PGpoint;
      76: iconst_0
      77: aaload
      78: invokevirtual #24                 // Method org/postgresql/geometric/PGpoint.equals:(Ljava/lang/Object;)Z
      81: ifeq          88
      84: iconst_1
      85: goto          89
      88: iconst_0
      89: ireturn
      90: iconst_0
      91: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #5                  // Field point:[Lorg/postgresql/geometric/PGpoint;
       4: iconst_0
       5: aaload
       6: invokevirtual #25                 // Method org/postgresql/geometric/PGpoint.hashCode:()I
       9: aload_0
      10: getfield      #5                  // Field point:[Lorg/postgresql/geometric/PGpoint;
      13: iconst_1
      14: aaload
      15: invokevirtual #25                 // Method org/postgresql/geometric/PGpoint.hashCode:()I
      18: ixor
      19: ireturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokespecial #26                 // Method org/postgresql/util/PGobject.clone:()Ljava/lang/Object;
       4: checkcast     #23                 // class org/postgresql/geometric/PGlseg
       7: astore_1
       8: aload_1
       9: getfield      #5                  // Field point:[Lorg/postgresql/geometric/PGpoint;
      12: ifnull        76
      15: aload_1
      16: aload_1
      17: getfield      #5                  // Field point:[Lorg/postgresql/geometric/PGpoint;
      20: invokevirtual #27                 // Method "[Lorg/postgresql/geometric/PGpoint;".clone:()Ljava/lang/Object;
      23: checkcast     #28                 // class "[Lorg/postgresql/geometric/PGpoint;"
      26: checkcast     #28                 // class "[Lorg/postgresql/geometric/PGpoint;"
      29: putfield      #5                  // Field point:[Lorg/postgresql/geometric/PGpoint;
      32: iconst_0
      33: istore_2
      34: iload_2
      35: aload_1
      36: getfield      #5                  // Field point:[Lorg/postgresql/geometric/PGpoint;
      39: arraylength
      40: if_icmpge     76
      43: aload_1
      44: getfield      #5                  // Field point:[Lorg/postgresql/geometric/PGpoint;
      47: iload_2
      48: aaload
      49: ifnull        70
      52: aload_1
      53: getfield      #5                  // Field point:[Lorg/postgresql/geometric/PGpoint;
      56: iload_2
      57: aload_1
      58: getfield      #5                  // Field point:[Lorg/postgresql/geometric/PGpoint;
      61: iload_2
      62: aaload
      63: invokevirtual #29                 // Method org/postgresql/geometric/PGpoint.clone:()Ljava/lang/Object;
      66: checkcast     #1                  // class org/postgresql/geometric/PGpoint
      69: aastore
      70: iinc          2, 1
      73: goto          34
      76: aload_1
      77: areturn

  public java.lang.String getValue();
    Code:
       0: new           #30                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #32                 // String [
       9: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #5                  // Field point:[Lorg/postgresql/geometric/PGpoint;
      16: iconst_0
      17: aaload
      18: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      21: ldc           #35                 // String ,
      23: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: getfield      #5                  // Field point:[Lorg/postgresql/geometric/PGpoint;
      30: iconst_1
      31: aaload
      32: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      35: ldc           #36                 // String ]
      37: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: areturn
}
