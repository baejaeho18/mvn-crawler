Compiled from "SharedTimer.java"
public class org.postgresql.util.SharedTimer {
  private static java.util.concurrent.atomic.AtomicInteger timerCount;

  private org.postgresql.core.Logger log;

  private volatile java.util.Timer timer;

  private java.util.concurrent.atomic.AtomicInteger refCount;

  public org.postgresql.util.SharedTimer(org.postgresql.core.Logger);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field timer:Ljava/util/Timer;
       9: aload_0
      10: new           #3                  // class java/util/concurrent/atomic/AtomicInteger
      13: dup
      14: iconst_0
      15: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      18: putfield      #5                  // Field refCount:Ljava/util/concurrent/atomic/AtomicInteger;
      21: aload_0
      22: aload_1
      23: putfield      #6                  // Field log:Lorg/postgresql/core/Logger;
      26: return

  public int getRefCount();
    Code:
       0: aload_0
       1: getfield      #5                  // Field refCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public synchronized java.util.Timer getTimer();
    Code:
       0: aload_0
       1: getfield      #2                  // Field timer:Ljava/util/Timer;
       4: ifnonnull     45
       7: getstatic     #8                  // Field timerCount:Ljava/util/concurrent/atomic/AtomicInteger;
      10: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      13: istore_1
      14: aload_0
      15: new           #10                 // class java/util/Timer
      18: dup
      19: new           #11                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #13                 // String PostgreSQL-JDBC-SharedTimer-
      28: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: iload_1
      32: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      35: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: iconst_1
      39: invokespecial #17                 // Method java/util/Timer."<init>":(Ljava/lang/String;Z)V
      42: putfield      #2                  // Field timer:Ljava/util/Timer;
      45: aload_0
      46: getfield      #5                  // Field refCount:Ljava/util/concurrent/atomic/AtomicInteger;
      49: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      52: pop
      53: aload_0
      54: getfield      #2                  // Field timer:Ljava/util/Timer;
      57: areturn

  public synchronized void releaseTimer();
    Code:
       0: aload_0
       1: getfield      #5                  // Field refCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
       7: istore_1
       8: iload_1
       9: ifle          24
      12: aload_0
      13: getfield      #6                  // Field log:Lorg/postgresql/core/Logger;
      16: ldc           #19                 // String Outstanding references still exist so not closing shared Timer
      18: invokevirtual #20                 // Method org/postgresql/core/Logger.debug:(Ljava/lang/String;)V
      21: goto          76
      24: iload_1
      25: ifne          59
      28: aload_0
      29: getfield      #6                  // Field log:Lorg/postgresql/core/Logger;
      32: ldc           #21                 // String No outstanding references to shared Timer, will cancel and close it
      34: invokevirtual #20                 // Method org/postgresql/core/Logger.debug:(Ljava/lang/String;)V
      37: aload_0
      38: getfield      #2                  // Field timer:Ljava/util/Timer;
      41: ifnull        76
      44: aload_0
      45: getfield      #2                  // Field timer:Ljava/util/Timer;
      48: invokevirtual #22                 // Method java/util/Timer.cancel:()V
      51: aload_0
      52: aconst_null
      53: putfield      #2                  // Field timer:Ljava/util/Timer;
      56: goto          76
      59: aload_0
      60: getfield      #6                  // Field log:Lorg/postgresql/core/Logger;
      63: ldc           #23                 // String releaseTimer() called too many times; there is probably a bug in the calling code
      65: invokevirtual #20                 // Method org/postgresql/core/Logger.debug:(Ljava/lang/String;)V
      68: aload_0
      69: getfield      #5                  // Field refCount:Ljava/util/concurrent/atomic/AtomicInteger;
      72: iconst_0
      73: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      76: return

  static {};
    Code:
       0: new           #3                  // class java/util/concurrent/atomic/AtomicInteger
       3: dup
       4: iconst_0
       5: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
       8: putstatic     #8                  // Field timerCount:Ljava/util/concurrent/atomic/AtomicInteger;
      11: return
}
