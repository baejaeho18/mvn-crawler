Compiled from "PGProperty.java"
public final class org.postgresql.PGProperty extends java.lang.Enum<org.postgresql.PGProperty> {
  public static final org.postgresql.PGProperty PG_DBNAME;

  public static final org.postgresql.PGProperty PG_HOST;

  public static final org.postgresql.PGProperty PG_PORT;

  public static final org.postgresql.PGProperty USER;

  public static final org.postgresql.PGProperty PASSWORD;

  public static final org.postgresql.PGProperty PROTOCOL_VERSION;

  public static final org.postgresql.PGProperty LOG_LEVEL;

  public static final org.postgresql.PGProperty PREPARE_THRESHOLD;

  public static final org.postgresql.PGProperty PREPARED_STATEMENT_CACHE_QUERIES;

  public static final org.postgresql.PGProperty PREPARED_STATEMENT_CACHE_SIZE_MIB;

  public static final org.postgresql.PGProperty DEFAULT_ROW_FETCH_SIZE;

  public static final org.postgresql.PGProperty BINARY_TRANSFER;

  public static final org.postgresql.PGProperty COMPATIBLE;

  public static final org.postgresql.PGProperty READ_ONLY;

  public static final org.postgresql.PGProperty BINARY_TRANSFER_ENABLE;

  public static final org.postgresql.PGProperty BINARY_TRANSFER_DISABLE;

  public static final org.postgresql.PGProperty STRING_TYPE;

  public static final org.postgresql.PGProperty UNKNOWN_LENGTH;

  public static final org.postgresql.PGProperty LOG_UNCLOSED_CONNECTIONS;

  public static final org.postgresql.PGProperty DISABLE_COLUMN_SANITISER;

  public static final org.postgresql.PGProperty SSL;

  public static final org.postgresql.PGProperty SSL_MODE;

  public static final org.postgresql.PGProperty SSL_FACTORY;

  public static final org.postgresql.PGProperty SSL_FACTORY_ARG;

  public static final org.postgresql.PGProperty SSL_HOSTNAME_VERIFIER;

  public static final org.postgresql.PGProperty SSL_CERT;

  public static final org.postgresql.PGProperty SSL_KEY;

  public static final org.postgresql.PGProperty SSL_ROOT_CERT;

  public static final org.postgresql.PGProperty SSL_PASSWORD;

  public static final org.postgresql.PGProperty SSL_PASSWORD_CALLBACK;

  public static final org.postgresql.PGProperty TCP_KEEP_ALIVE;

  public static final org.postgresql.PGProperty LOGIN_TIMEOUT;

  public static final org.postgresql.PGProperty CONNECT_TIMEOUT;

  public static final org.postgresql.PGProperty SOCKET_TIMEOUT;

  public static final org.postgresql.PGProperty RECEIVE_BUFFER_SIZE;

  public static final org.postgresql.PGProperty SEND_BUFFER_SIZE;

  public static final org.postgresql.PGProperty ASSUME_MIN_SERVER_VERSION;

  public static final org.postgresql.PGProperty APPLICATION_NAME;

  public static final org.postgresql.PGProperty JAAS_APPLICATION_NAME;

  public static final org.postgresql.PGProperty KERBEROS_SERVER_NAME;

  public static final org.postgresql.PGProperty USE_SPNEGO;

  public static final org.postgresql.PGProperty GSS_LIB;

  public static final org.postgresql.PGProperty SSPI_SERVICE_CLASS;

  public static final org.postgresql.PGProperty CHARSET;

  public static final org.postgresql.PGProperty ALLOW_ENCODING_CHANGES;

  public static final org.postgresql.PGProperty CURRENT_SCHEMA;

  public static final org.postgresql.PGProperty TARGET_SERVER_TYPE;

  public static final org.postgresql.PGProperty LOAD_BALANCE_HOSTS;

  public static final org.postgresql.PGProperty HOST_RECHECK_SECONDS;

  private java.lang.String _name;

  private java.lang.String _defaultValue;

  private boolean _required;

  private java.lang.String _description;

  private java.lang.String[] _choices;

  private static final org.postgresql.PGProperty[] $VALUES;

  public static org.postgresql.PGProperty[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lorg/postgresql/PGProperty;
       3: invokevirtual #2                  // Method "[Lorg/postgresql/PGProperty;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lorg/postgresql/PGProperty;"
       9: areturn

  public static org.postgresql.PGProperty valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class org/postgresql/PGProperty
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class org/postgresql/PGProperty
       9: areturn

  private org.postgresql.PGProperty(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iconst_0
       9: invokespecial #6                  // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
      12: return

  private org.postgresql.PGProperty(java.lang.String, java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iload         6
      10: aconst_null
      11: checkcast     #7                  // class "[Ljava/lang/String;"
      14: invokespecial #8                  // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z[Ljava/lang/String;)V
      17: return

  private org.postgresql.PGProperty(java.lang.String, java.lang.String, java.lang.String, boolean, java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #9                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: aload_3
       8: putfield      #10                 // Field _name:Ljava/lang/String;
      11: aload_0
      12: aload         4
      14: putfield      #11                 // Field _defaultValue:Ljava/lang/String;
      17: aload_0
      18: iload         6
      20: putfield      #12                 // Field _required:Z
      23: aload_0
      24: aload         5
      26: putfield      #13                 // Field _description:Ljava/lang/String;
      29: aload_0
      30: aload         7
      32: putfield      #14                 // Field _choices:[Ljava/lang/String;
      35: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #10                 // Field _name:Ljava/lang/String;
       4: areturn

  public java.lang.String getDefaultValue();
    Code:
       0: aload_0
       1: getfield      #11                 // Field _defaultValue:Ljava/lang/String;
       4: areturn

  public java.lang.String[] getChoices();
    Code:
       0: aload_0
       1: getfield      #14                 // Field _choices:[Ljava/lang/String;
       4: areturn

  public java.lang.String get(java.util.Properties);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #10                 // Field _name:Ljava/lang/String;
       5: aload_0
       6: getfield      #11                 // Field _defaultValue:Ljava/lang/String;
       9: invokevirtual #15                 // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      12: areturn

  public void set(java.util.Properties, java.lang.String);
    Code:
       0: aload_2
       1: ifnonnull     16
       4: aload_1
       5: aload_0
       6: getfield      #10                 // Field _name:Ljava/lang/String;
       9: invokevirtual #16                 // Method java/util/Properties.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      12: pop
      13: goto          26
      16: aload_1
      17: aload_0
      18: getfield      #10                 // Field _name:Ljava/lang/String;
      21: aload_2
      22: invokevirtual #17                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      25: pop
      26: return

  public boolean getBoolean(java.util.Properties);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method get:(Ljava/util/Properties;)Ljava/lang/String;
       5: invokestatic  #19                 // Method java/lang/Boolean.valueOf:(Ljava/lang/String;)Ljava/lang/Boolean;
       8: invokevirtual #20                 // Method java/lang/Boolean.booleanValue:()Z
      11: ireturn

  public int getIntNoCheck(java.util.Properties);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method get:(Ljava/util/Properties;)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: invokestatic  #21                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      10: ireturn

  public int getInt(java.util.Properties) throws org.postgresql.util.PSQLException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method get:(Ljava/util/Properties;)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: invokestatic  #21                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      10: ireturn
      11: astore_3
      12: new           #23                 // class org/postgresql/util/PSQLException
      15: dup
      16: ldc           #24                 // String {0} parameter value must be an integer but was: {1}
      18: iconst_2
      19: anewarray     #25                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_0
      25: invokevirtual #26                 // Method getName:()Ljava/lang/String;
      28: aastore
      29: dup
      30: iconst_1
      31: aload_2
      32: aastore
      33: invokestatic  #27                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      36: getstatic     #28                 // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      39: aload_3
      40: invokespecial #29                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
      43: athrow
    Exception table:
       from    to  target type
           6    10    11   Class java/lang/NumberFormatException

  public java.lang.Integer getInteger(java.util.Properties) throws org.postgresql.util.PSQLException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method get:(Ljava/util/Properties;)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_2
      13: invokestatic  #21                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      16: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      19: areturn
      20: astore_3
      21: new           #23                 // class org/postgresql/util/PSQLException
      24: dup
      25: ldc           #24                 // String {0} parameter value must be an integer but was: {1}
      27: iconst_2
      28: anewarray     #25                 // class java/lang/Object
      31: dup
      32: iconst_0
      33: aload_0
      34: invokevirtual #26                 // Method getName:()Ljava/lang/String;
      37: aastore
      38: dup
      39: iconst_1
      40: aload_2
      41: aastore
      42: invokestatic  #27                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      45: getstatic     #28                 // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      48: aload_3
      49: invokespecial #29                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
      52: athrow
    Exception table:
       from    to  target type
          12    19    20   Class java/lang/NumberFormatException

  public void set(java.util.Properties, boolean);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #10                 // Field _name:Ljava/lang/String;
       5: iload_2
       6: invokestatic  #31                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
       9: invokevirtual #17                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      12: pop
      13: return

  public void set(java.util.Properties, int);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #10                 // Field _name:Ljava/lang/String;
       5: iload_2
       6: invokestatic  #32                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
       9: invokevirtual #17                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      12: pop
      13: return

  public boolean isPresent(java.util.Properties);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method get:(Ljava/util/Properties;)Ljava/lang/String;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public java.sql.DriverPropertyInfo toDriverPropertyInfo(java.util.Properties);
    Code:
       0: new           #33                 // class java/sql/DriverPropertyInfo
       3: dup
       4: aload_0
       5: getfield      #10                 // Field _name:Ljava/lang/String;
       8: aload_0
       9: aload_1
      10: invokevirtual #18                 // Method get:(Ljava/util/Properties;)Ljava/lang/String;
      13: invokespecial #34                 // Method java/sql/DriverPropertyInfo."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      16: astore_2
      17: aload_2
      18: aload_0
      19: getfield      #12                 // Field _required:Z
      22: putfield      #35                 // Field java/sql/DriverPropertyInfo.required:Z
      25: aload_2
      26: aload_0
      27: getfield      #13                 // Field _description:Ljava/lang/String;
      30: putfield      #36                 // Field java/sql/DriverPropertyInfo.description:Ljava/lang/String;
      33: aload_2
      34: aload_0
      35: getfield      #14                 // Field _choices:[Ljava/lang/String;
      38: putfield      #37                 // Field java/sql/DriverPropertyInfo.choices:[Ljava/lang/String;
      41: aload_2
      42: areturn

  public static org.postgresql.PGProperty forName(java.lang.String);
    Code:
       0: invokestatic  #38                 // Method values:()[Lorg/postgresql/PGProperty;
       3: astore_1
       4: aload_1
       5: arraylength
       6: istore_2
       7: iconst_0
       8: istore_3
       9: iload_3
      10: iload_2
      11: if_icmpge     40
      14: aload_1
      15: iload_3
      16: aaload
      17: astore        4
      19: aload         4
      21: invokevirtual #26                 // Method getName:()Ljava/lang/String;
      24: aload_0
      25: invokevirtual #39                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      28: ifeq          34
      31: aload         4
      33: areturn
      34: iinc          3, 1
      37: goto          9
      40: aconst_null
      41: areturn

  static {};
    Code:
       0: new           #4                  // class org/postgresql/PGProperty
       3: dup
       4: ldc           #40                 // String PG_DBNAME
       6: iconst_0
       7: ldc           #41                 // String PGDBNAME
       9: aconst_null
      10: ldc           #42                 // String Database name to connect to (may be specified directly in the JDBC URL)
      12: iconst_1
      13: invokespecial #6                  // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
      16: putstatic     #43                 // Field PG_DBNAME:Lorg/postgresql/PGProperty;
      19: new           #4                  // class org/postgresql/PGProperty
      22: dup
      23: ldc           #44                 // String PG_HOST
      25: iconst_1
      26: ldc           #45                 // String PGHOST
      28: aconst_null
      29: ldc           #46                 // String Hostname of the PostgreSQL server (may be specified directly in the JDBC URL)
      31: iconst_0
      32: invokespecial #6                  // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
      35: putstatic     #47                 // Field PG_HOST:Lorg/postgresql/PGProperty;
      38: new           #4                  // class org/postgresql/PGProperty
      41: dup
      42: ldc           #48                 // String PG_PORT
      44: iconst_2
      45: ldc           #49                 // String PGPORT
      47: aconst_null
      48: ldc           #50                 // String Port of the PostgreSQL server (may be specified directly in the JDBC URL)
      50: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      53: putstatic     #52                 // Field PG_PORT:Lorg/postgresql/PGProperty;
      56: new           #4                  // class org/postgresql/PGProperty
      59: dup
      60: ldc           #53                 // String USER
      62: iconst_3
      63: ldc           #54                 // String user
      65: aconst_null
      66: ldc           #55                 // String Username to connect to the database as.
      68: iconst_1
      69: invokespecial #6                  // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
      72: putstatic     #56                 // Field USER:Lorg/postgresql/PGProperty;
      75: new           #4                  // class org/postgresql/PGProperty
      78: dup
      79: ldc           #57                 // String PASSWORD
      81: iconst_4
      82: ldc           #58                 // String password
      84: aconst_null
      85: ldc           #59                 // String Password to use when authenticating.
      87: iconst_0
      88: invokespecial #6                  // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
      91: putstatic     #60                 // Field PASSWORD:Lorg/postgresql/PGProperty;
      94: new           #4                  // class org/postgresql/PGProperty
      97: dup
      98: ldc           #61                 // String PROTOCOL_VERSION
     100: iconst_5
     101: ldc           #62                 // String protocolVersion
     103: aconst_null
     104: ldc           #63                 // String Force use of a particular protocol version when connecting, if set, disables protocol version fallback.
     106: iconst_0
     107: iconst_2
     108: anewarray     #64                 // class java/lang/String
     111: dup
     112: iconst_0
     113: ldc           #65                 // String 2
     115: aastore
     116: dup
     117: iconst_1
     118: ldc           #66                 // String 3
     120: aastore
     121: invokespecial #8                  // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z[Ljava/lang/String;)V
     124: putstatic     #67                 // Field PROTOCOL_VERSION:Lorg/postgresql/PGProperty;
     127: new           #4                  // class org/postgresql/PGProperty
     130: dup
     131: ldc           #68                 // String LOG_LEVEL
     133: bipush        6
     135: ldc           #69                 // String loglevel
     137: ldc           #70                 // String 0
     139: ldc           #71                 // String The log level
     141: iconst_0
     142: iconst_3
     143: anewarray     #64                 // class java/lang/String
     146: dup
     147: iconst_0
     148: ldc           #70                 // String 0
     150: aastore
     151: dup
     152: iconst_1
     153: ldc           #72                 // String 1
     155: aastore
     156: dup
     157: iconst_2
     158: ldc           #65                 // String 2
     160: aastore
     161: invokespecial #8                  // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z[Ljava/lang/String;)V
     164: putstatic     #73                 // Field LOG_LEVEL:Lorg/postgresql/PGProperty;
     167: new           #4                  // class org/postgresql/PGProperty
     170: dup
     171: ldc           #74                 // String PREPARE_THRESHOLD
     173: bipush        7
     175: ldc           #75                 // String prepareThreshold
     177: ldc           #76                 // String 5
     179: ldc           #77                 // String Statement prepare threshold. A value of {@code -1} stands for forceBinary
     181: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     184: putstatic     #78                 // Field PREPARE_THRESHOLD:Lorg/postgresql/PGProperty;
     187: new           #4                  // class org/postgresql/PGProperty
     190: dup
     191: ldc           #79                 // String PREPARED_STATEMENT_CACHE_QUERIES
     193: bipush        8
     195: ldc           #80                 // String preparedStatementCacheQueries
     197: ldc           #81                 // String 256
     199: ldc           #82                 // String Specifies the maximum number of entries in per-connection cache of prepared statements. A value of {@code 0} disables the cache.
     201: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     204: putstatic     #83                 // Field PREPARED_STATEMENT_CACHE_QUERIES:Lorg/postgresql/PGProperty;
     207: new           #4                  // class org/postgresql/PGProperty
     210: dup
     211: ldc           #84                 // String PREPARED_STATEMENT_CACHE_SIZE_MIB
     213: bipush        9
     215: ldc           #85                 // String preparedStatementCacheSizeMiB
     217: ldc           #76                 // String 5
     219: ldc           #86                 // String Specifies the maximum size (in megabytes) of a per-connection prepared statement cache. A value of {@code 0} disables the cache.
     221: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     224: putstatic     #87                 // Field PREPARED_STATEMENT_CACHE_SIZE_MIB:Lorg/postgresql/PGProperty;
     227: new           #4                  // class org/postgresql/PGProperty
     230: dup
     231: ldc           #88                 // String DEFAULT_ROW_FETCH_SIZE
     233: bipush        10
     235: ldc           #89                 // String defaultRowFetchSize
     237: ldc           #70                 // String 0
     239: ldc           #90                 // String Positive number of rows that should be fetched from the database when more rows are needed for ResultSet by each fetch iteration
     241: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     244: putstatic     #91                 // Field DEFAULT_ROW_FETCH_SIZE:Lorg/postgresql/PGProperty;
     247: new           #4                  // class org/postgresql/PGProperty
     250: dup
     251: ldc           #92                 // String BINARY_TRANSFER
     253: bipush        11
     255: ldc           #93                 // String binaryTransfer
     257: ldc           #94                 // String true
     259: ldc           #95                 // String Use binary format for sending and receiving data if possible
     261: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     264: putstatic     #96                 // Field BINARY_TRANSFER:Lorg/postgresql/PGProperty;
     267: new           #4                  // class org/postgresql/PGProperty
     270: dup
     271: ldc           #97                 // String COMPATIBLE
     273: bipush        12
     275: ldc           #98                 // String compatible
     277: ldc           #100                // String 9.4
     279: ldc           #101                // String Force compatibility of some features with an older version of the driver
     281: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     284: putstatic     #102                // Field COMPATIBLE:Lorg/postgresql/PGProperty;
     287: new           #4                  // class org/postgresql/PGProperty
     290: dup
     291: ldc           #103                // String READ_ONLY
     293: bipush        13
     295: ldc           #104                // String readOnly
     297: ldc           #105                // String false
     299: ldc           #106                // String Puts this connection in read-only mode
     301: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     304: putstatic     #107                // Field READ_ONLY:Lorg/postgresql/PGProperty;
     307: new           #4                  // class org/postgresql/PGProperty
     310: dup
     311: ldc           #108                // String BINARY_TRANSFER_ENABLE
     313: bipush        14
     315: ldc           #109                // String binaryTransferEnable
     317: ldc           #110                // String
     319: ldc           #111                // String Comma separated list of types to enable binary transfer. Either OID numbers or names
     321: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     324: putstatic     #112                // Field BINARY_TRANSFER_ENABLE:Lorg/postgresql/PGProperty;
     327: new           #4                  // class org/postgresql/PGProperty
     330: dup
     331: ldc           #113                // String BINARY_TRANSFER_DISABLE
     333: bipush        15
     335: ldc           #114                // String binaryTransferDisable
     337: ldc           #110                // String
     339: ldc           #115                // String Comma separated list of types to disable binary transfer. Either OID numbers or names. Overrides values in the driver default set and values set with binaryTransferEnable.
     341: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     344: putstatic     #116                // Field BINARY_TRANSFER_DISABLE:Lorg/postgresql/PGProperty;
     347: new           #4                  // class org/postgresql/PGProperty
     350: dup
     351: ldc           #117                // String STRING_TYPE
     353: bipush        16
     355: ldc           #118                // String stringtype
     357: aconst_null
     358: ldc           #119                // String The type to bind String parameters as (usually \'varchar\', \'unspecified\' allows implicit casting to other types)
     360: iconst_0
     361: iconst_2
     362: anewarray     #64                 // class java/lang/String
     365: dup
     366: iconst_0
     367: ldc           #120                // String unspecified
     369: aastore
     370: dup
     371: iconst_1
     372: ldc           #121                // String varchar
     374: aastore
     375: invokespecial #8                  // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z[Ljava/lang/String;)V
     378: putstatic     #122                // Field STRING_TYPE:Lorg/postgresql/PGProperty;
     381: new           #4                  // class org/postgresql/PGProperty
     384: dup
     385: ldc           #123                // String UNKNOWN_LENGTH
     387: bipush        17
     389: ldc           #124                // String unknownLength
     391: ldc           #126                // int 2147483647
     393: invokestatic  #32                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
     396: ldc           #127                // String Specifies the length to return for types of unknown length
     398: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     401: putstatic     #128                // Field UNKNOWN_LENGTH:Lorg/postgresql/PGProperty;
     404: new           #4                  // class org/postgresql/PGProperty
     407: dup
     408: ldc           #129                // String LOG_UNCLOSED_CONNECTIONS
     410: bipush        18
     412: ldc           #130                // String logUnclosedConnections
     414: ldc           #105                // String false
     416: ldc           #131                // String When connections that are not explicitly closed are garbage collected, log the stacktrace from the opening of the connection to trace the leak source
     418: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     421: putstatic     #132                // Field LOG_UNCLOSED_CONNECTIONS:Lorg/postgresql/PGProperty;
     424: new           #4                  // class org/postgresql/PGProperty
     427: dup
     428: ldc           #133                // String DISABLE_COLUMN_SANITISER
     430: bipush        19
     432: ldc           #134                // String disableColumnSanitiser
     434: ldc           #105                // String false
     436: ldc           #135                // String Enable optimization that disables column name sanitiser
     438: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     441: putstatic     #136                // Field DISABLE_COLUMN_SANITISER:Lorg/postgresql/PGProperty;
     444: new           #4                  // class org/postgresql/PGProperty
     447: dup
     448: ldc           #137                // String SSL
     450: bipush        20
     452: ldc           #138                // String ssl
     454: aconst_null
     455: ldc           #139                // String Control use of SSL (any non-null value causes SSL to be required)
     457: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     460: putstatic     #140                // Field SSL:Lorg/postgresql/PGProperty;
     463: new           #4                  // class org/postgresql/PGProperty
     466: dup
     467: ldc           #141                // String SSL_MODE
     469: bipush        21
     471: ldc           #142                // String sslmode
     473: aconst_null
     474: ldc           #143                // String Parameter governing the use of SSL
     476: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     479: putstatic     #144                // Field SSL_MODE:Lorg/postgresql/PGProperty;
     482: new           #4                  // class org/postgresql/PGProperty
     485: dup
     486: ldc           #145                // String SSL_FACTORY
     488: bipush        22
     490: ldc           #146                // String sslfactory
     492: aconst_null
     493: ldc           #147                // String Provide a SSLSocketFactory class when using SSL.
     495: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     498: putstatic     #148                // Field SSL_FACTORY:Lorg/postgresql/PGProperty;
     501: new           #4                  // class org/postgresql/PGProperty
     504: dup
     505: ldc           #149                // String SSL_FACTORY_ARG
     507: bipush        23
     509: ldc           #150                // String sslfactoryarg
     511: aconst_null
     512: ldc           #151                // String Argument forwarded to constructor of SSLSocketFactory class.
     514: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     517: putstatic     #152                // Field SSL_FACTORY_ARG:Lorg/postgresql/PGProperty;
     520: new           #4                  // class org/postgresql/PGProperty
     523: dup
     524: ldc           #153                // String SSL_HOSTNAME_VERIFIER
     526: bipush        24
     528: ldc           #154                // String sslhostnameverifier
     530: aconst_null
     531: ldc           #155                // String A class, implementing javax.net.ssl.HostnameVerifier that can verify the server
     533: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     536: putstatic     #156                // Field SSL_HOSTNAME_VERIFIER:Lorg/postgresql/PGProperty;
     539: new           #4                  // class org/postgresql/PGProperty
     542: dup
     543: ldc           #157                // String SSL_CERT
     545: bipush        25
     547: ldc           #158                // String sslcert
     549: aconst_null
     550: ldc           #159                // String The location of the client\'s SSL certificate
     552: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     555: putstatic     #160                // Field SSL_CERT:Lorg/postgresql/PGProperty;
     558: new           #4                  // class org/postgresql/PGProperty
     561: dup
     562: ldc           #161                // String SSL_KEY
     564: bipush        26
     566: ldc           #162                // String sslkey
     568: aconst_null
     569: ldc           #163                // String The location of the client\'s PKCS#8 SSL key
     571: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     574: putstatic     #164                // Field SSL_KEY:Lorg/postgresql/PGProperty;
     577: new           #4                  // class org/postgresql/PGProperty
     580: dup
     581: ldc           #165                // String SSL_ROOT_CERT
     583: bipush        27
     585: ldc           #166                // String sslrootcert
     587: aconst_null
     588: ldc           #167                // String The location of the root certificate for authenticating the server.
     590: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     593: putstatic     #168                // Field SSL_ROOT_CERT:Lorg/postgresql/PGProperty;
     596: new           #4                  // class org/postgresql/PGProperty
     599: dup
     600: ldc           #169                // String SSL_PASSWORD
     602: bipush        28
     604: ldc           #170                // String sslpassword
     606: aconst_null
     607: ldc           #171                // String The password for the client\'s ssl key (ignored if sslpasswordcallback is set)
     609: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     612: putstatic     #172                // Field SSL_PASSWORD:Lorg/postgresql/PGProperty;
     615: new           #4                  // class org/postgresql/PGProperty
     618: dup
     619: ldc           #173                // String SSL_PASSWORD_CALLBACK
     621: bipush        29
     623: ldc           #174                // String sslpasswordcallback
     625: aconst_null
     626: ldc           #175                // String A class, implementing javax.security.auth.callback.CallbackHandler that can handle PassworCallback for the ssl password.
     628: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     631: putstatic     #176                // Field SSL_PASSWORD_CALLBACK:Lorg/postgresql/PGProperty;
     634: new           #4                  // class org/postgresql/PGProperty
     637: dup
     638: ldc           #177                // String TCP_KEEP_ALIVE
     640: bipush        30
     642: ldc           #178                // String tcpKeepAlive
     644: ldc           #105                // String false
     646: ldc           #179                // String Enable or disable TCP keep-alive. The default is {@code false}.
     648: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     651: putstatic     #180                // Field TCP_KEEP_ALIVE:Lorg/postgresql/PGProperty;
     654: new           #4                  // class org/postgresql/PGProperty
     657: dup
     658: ldc           #181                // String LOGIN_TIMEOUT
     660: bipush        31
     662: ldc           #182                // String loginTimeout
     664: ldc           #70                 // String 0
     666: ldc           #183                // String Specify how long to wait for establishment of a database connection.
     668: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     671: putstatic     #184                // Field LOGIN_TIMEOUT:Lorg/postgresql/PGProperty;
     674: new           #4                  // class org/postgresql/PGProperty
     677: dup
     678: ldc           #185                // String CONNECT_TIMEOUT
     680: bipush        32
     682: ldc           #186                // String connectTimeout
     684: ldc           #70                 // String 0
     686: ldc           #187                // String The timeout value used for socket connect operations.
     688: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     691: putstatic     #188                // Field CONNECT_TIMEOUT:Lorg/postgresql/PGProperty;
     694: new           #4                  // class org/postgresql/PGProperty
     697: dup
     698: ldc           #189                // String SOCKET_TIMEOUT
     700: bipush        33
     702: ldc           #190                // String socketTimeout
     704: ldc           #70                 // String 0
     706: ldc           #191                // String The timeout value used for socket read operations.
     708: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     711: putstatic     #192                // Field SOCKET_TIMEOUT:Lorg/postgresql/PGProperty;
     714: new           #4                  // class org/postgresql/PGProperty
     717: dup
     718: ldc           #193                // String RECEIVE_BUFFER_SIZE
     720: bipush        34
     722: ldc           #194                // String receiveBufferSize
     724: ldc           #195                // String -1
     726: ldc           #196                // String Socket read buffer size
     728: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     731: putstatic     #197                // Field RECEIVE_BUFFER_SIZE:Lorg/postgresql/PGProperty;
     734: new           #4                  // class org/postgresql/PGProperty
     737: dup
     738: ldc           #198                // String SEND_BUFFER_SIZE
     740: bipush        35
     742: ldc           #199                // String sendBufferSize
     744: ldc           #195                // String -1
     746: ldc           #200                // String Socket write buffer size
     748: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     751: putstatic     #201                // Field SEND_BUFFER_SIZE:Lorg/postgresql/PGProperty;
     754: new           #4                  // class org/postgresql/PGProperty
     757: dup
     758: ldc           #202                // String ASSUME_MIN_SERVER_VERSION
     760: bipush        36
     762: ldc           #203                // String assumeMinServerVersion
     764: aconst_null
     765: ldc           #204                // String Assume the server is at least that version
     767: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     770: putstatic     #205                // Field ASSUME_MIN_SERVER_VERSION:Lorg/postgresql/PGProperty;
     773: new           #4                  // class org/postgresql/PGProperty
     776: dup
     777: ldc           #206                // String APPLICATION_NAME
     779: bipush        37
     781: ldc           #207                // String ApplicationName
     783: aconst_null
     784: ldc           #208                // String name of the application (backend >= 9.0)
     786: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     789: putstatic     #209                // Field APPLICATION_NAME:Lorg/postgresql/PGProperty;
     792: new           #4                  // class org/postgresql/PGProperty
     795: dup
     796: ldc           #210                // String JAAS_APPLICATION_NAME
     798: bipush        38
     800: ldc           #211                // String jaasApplicationName
     802: aconst_null
     803: ldc           #212                // String Specifies the name of the JAAS system or application login configuration.
     805: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     808: putstatic     #213                // Field JAAS_APPLICATION_NAME:Lorg/postgresql/PGProperty;
     811: new           #4                  // class org/postgresql/PGProperty
     814: dup
     815: ldc           #214                // String KERBEROS_SERVER_NAME
     817: bipush        39
     819: ldc           #215                // String kerberosServerName
     821: aconst_null
     822: ldc           #216                // String The Kerberos service name to use when authenticating with GSSAPI.
     824: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     827: putstatic     #217                // Field KERBEROS_SERVER_NAME:Lorg/postgresql/PGProperty;
     830: new           #4                  // class org/postgresql/PGProperty
     833: dup
     834: ldc           #218                // String USE_SPNEGO
     836: bipush        40
     838: ldc           #219                // String useSpnego
     840: ldc           #105                // String false
     842: ldc           #220                // String Use SPNEGO in SSPI authentication requests
     844: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     847: putstatic     #221                // Field USE_SPNEGO:Lorg/postgresql/PGProperty;
     850: new           #4                  // class org/postgresql/PGProperty
     853: dup
     854: ldc           #222                // String GSS_LIB
     856: bipush        41
     858: ldc           #223                // String gsslib
     860: ldc           #224                // String auto
     862: ldc           #225                // String Force SSSPI or GSSAPI
     864: iconst_0
     865: iconst_3
     866: anewarray     #64                 // class java/lang/String
     869: dup
     870: iconst_0
     871: ldc           #224                // String auto
     873: aastore
     874: dup
     875: iconst_1
     876: ldc           #226                // String sspi
     878: aastore
     879: dup
     880: iconst_2
     881: ldc           #227                // String gssapi
     883: aastore
     884: invokespecial #8                  // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z[Ljava/lang/String;)V
     887: putstatic     #228                // Field GSS_LIB:Lorg/postgresql/PGProperty;
     890: new           #4                  // class org/postgresql/PGProperty
     893: dup
     894: ldc           #229                // String SSPI_SERVICE_CLASS
     896: bipush        42
     898: ldc           #230                // String sspiServiceClass
     900: ldc           #231                // String POSTGRES
     902: ldc           #232                // String The Windows SSPI service class for SPN
     904: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     907: putstatic     #233                // Field SSPI_SERVICE_CLASS:Lorg/postgresql/PGProperty;
     910: new           #4                  // class org/postgresql/PGProperty
     913: dup
     914: ldc           #234                // String CHARSET
     916: bipush        43
     918: ldc           #235                // String charSet
     920: aconst_null
     921: ldc           #236                // String The character set to use for data sent to the database or received from the database (for backend <= 7.2)
     923: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     926: putstatic     #237                // Field CHARSET:Lorg/postgresql/PGProperty;
     929: new           #4                  // class org/postgresql/PGProperty
     932: dup
     933: ldc           #238                // String ALLOW_ENCODING_CHANGES
     935: bipush        44
     937: ldc           #239                // String allowEncodingChanges
     939: ldc           #105                // String false
     941: ldc           #240                // String Allow for changes in client_encoding
     943: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     946: putstatic     #241                // Field ALLOW_ENCODING_CHANGES:Lorg/postgresql/PGProperty;
     949: new           #4                  // class org/postgresql/PGProperty
     952: dup
     953: ldc           #242                // String CURRENT_SCHEMA
     955: bipush        45
     957: ldc           #243                // String currentSchema
     959: aconst_null
     960: ldc           #244                // String Specify the schema to be set in the search-path
     962: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     965: putstatic     #245                // Field CURRENT_SCHEMA:Lorg/postgresql/PGProperty;
     968: new           #4                  // class org/postgresql/PGProperty
     971: dup
     972: ldc           #246                // String TARGET_SERVER_TYPE
     974: bipush        46
     976: ldc           #247                // String targetServerType
     978: ldc           #248                // String any
     980: ldc           #249                // String Specifies what kind of server to connect
     982: iconst_0
     983: iconst_4
     984: anewarray     #64                 // class java/lang/String
     987: dup
     988: iconst_0
     989: ldc           #248                // String any
     991: aastore
     992: dup
     993: iconst_1
     994: ldc           #250                // String master
     996: aastore
     997: dup
     998: iconst_2
     999: ldc           #251                // String slave
    1001: aastore
    1002: dup
    1003: iconst_3
    1004: ldc           #252                // String preferSlave
    1006: aastore
    1007: invokespecial #8                  // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z[Ljava/lang/String;)V
    1010: putstatic     #253                // Field TARGET_SERVER_TYPE:Lorg/postgresql/PGProperty;
    1013: new           #4                  // class org/postgresql/PGProperty
    1016: dup
    1017: ldc           #254                // String LOAD_BALANCE_HOSTS
    1019: bipush        47
    1021: ldc           #255                // String loadBalanceHosts
    1023: ldc           #105                // String false
    1025: ldc_w         #256                // String If disabled hosts are connected in the given order. If enabled hosts are chosen randomly from the set of suitable candidates
    1028: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    1031: putstatic     #257                // Field LOAD_BALANCE_HOSTS:Lorg/postgresql/PGProperty;
    1034: new           #4                  // class org/postgresql/PGProperty
    1037: dup
    1038: ldc_w         #258                // String HOST_RECHECK_SECONDS
    1041: bipush        48
    1043: ldc_w         #259                // String hostRecheckSeconds
    1046: ldc_w         #260                // String 10
    1049: ldc_w         #261                // String Specifies period (seconds) after host statuses are checked again in case they have changed
    1052: invokespecial #51                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    1055: putstatic     #262                // Field HOST_RECHECK_SECONDS:Lorg/postgresql/PGProperty;
    1058: bipush        49
    1060: anewarray     #4                  // class org/postgresql/PGProperty
    1063: dup
    1064: iconst_0
    1065: getstatic     #43                 // Field PG_DBNAME:Lorg/postgresql/PGProperty;
    1068: aastore
    1069: dup
    1070: iconst_1
    1071: getstatic     #47                 // Field PG_HOST:Lorg/postgresql/PGProperty;
    1074: aastore
    1075: dup
    1076: iconst_2
    1077: getstatic     #52                 // Field PG_PORT:Lorg/postgresql/PGProperty;
    1080: aastore
    1081: dup
    1082: iconst_3
    1083: getstatic     #56                 // Field USER:Lorg/postgresql/PGProperty;
    1086: aastore
    1087: dup
    1088: iconst_4
    1089: getstatic     #60                 // Field PASSWORD:Lorg/postgresql/PGProperty;
    1092: aastore
    1093: dup
    1094: iconst_5
    1095: getstatic     #67                 // Field PROTOCOL_VERSION:Lorg/postgresql/PGProperty;
    1098: aastore
    1099: dup
    1100: bipush        6
    1102: getstatic     #73                 // Field LOG_LEVEL:Lorg/postgresql/PGProperty;
    1105: aastore
    1106: dup
    1107: bipush        7
    1109: getstatic     #78                 // Field PREPARE_THRESHOLD:Lorg/postgresql/PGProperty;
    1112: aastore
    1113: dup
    1114: bipush        8
    1116: getstatic     #83                 // Field PREPARED_STATEMENT_CACHE_QUERIES:Lorg/postgresql/PGProperty;
    1119: aastore
    1120: dup
    1121: bipush        9
    1123: getstatic     #87                 // Field PREPARED_STATEMENT_CACHE_SIZE_MIB:Lorg/postgresql/PGProperty;
    1126: aastore
    1127: dup
    1128: bipush        10
    1130: getstatic     #91                 // Field DEFAULT_ROW_FETCH_SIZE:Lorg/postgresql/PGProperty;
    1133: aastore
    1134: dup
    1135: bipush        11
    1137: getstatic     #96                 // Field BINARY_TRANSFER:Lorg/postgresql/PGProperty;
    1140: aastore
    1141: dup
    1142: bipush        12
    1144: getstatic     #102                // Field COMPATIBLE:Lorg/postgresql/PGProperty;
    1147: aastore
    1148: dup
    1149: bipush        13
    1151: getstatic     #107                // Field READ_ONLY:Lorg/postgresql/PGProperty;
    1154: aastore
    1155: dup
    1156: bipush        14
    1158: getstatic     #112                // Field BINARY_TRANSFER_ENABLE:Lorg/postgresql/PGProperty;
    1161: aastore
    1162: dup
    1163: bipush        15
    1165: getstatic     #116                // Field BINARY_TRANSFER_DISABLE:Lorg/postgresql/PGProperty;
    1168: aastore
    1169: dup
    1170: bipush        16
    1172: getstatic     #122                // Field STRING_TYPE:Lorg/postgresql/PGProperty;
    1175: aastore
    1176: dup
    1177: bipush        17
    1179: getstatic     #128                // Field UNKNOWN_LENGTH:Lorg/postgresql/PGProperty;
    1182: aastore
    1183: dup
    1184: bipush        18
    1186: getstatic     #132                // Field LOG_UNCLOSED_CONNECTIONS:Lorg/postgresql/PGProperty;
    1189: aastore
    1190: dup
    1191: bipush        19
    1193: getstatic     #136                // Field DISABLE_COLUMN_SANITISER:Lorg/postgresql/PGProperty;
    1196: aastore
    1197: dup
    1198: bipush        20
    1200: getstatic     #140                // Field SSL:Lorg/postgresql/PGProperty;
    1203: aastore
    1204: dup
    1205: bipush        21
    1207: getstatic     #144                // Field SSL_MODE:Lorg/postgresql/PGProperty;
    1210: aastore
    1211: dup
    1212: bipush        22
    1214: getstatic     #148                // Field SSL_FACTORY:Lorg/postgresql/PGProperty;
    1217: aastore
    1218: dup
    1219: bipush        23
    1221: getstatic     #152                // Field SSL_FACTORY_ARG:Lorg/postgresql/PGProperty;
    1224: aastore
    1225: dup
    1226: bipush        24
    1228: getstatic     #156                // Field SSL_HOSTNAME_VERIFIER:Lorg/postgresql/PGProperty;
    1231: aastore
    1232: dup
    1233: bipush        25
    1235: getstatic     #160                // Field SSL_CERT:Lorg/postgresql/PGProperty;
    1238: aastore
    1239: dup
    1240: bipush        26
    1242: getstatic     #164                // Field SSL_KEY:Lorg/postgresql/PGProperty;
    1245: aastore
    1246: dup
    1247: bipush        27
    1249: getstatic     #168                // Field SSL_ROOT_CERT:Lorg/postgresql/PGProperty;
    1252: aastore
    1253: dup
    1254: bipush        28
    1256: getstatic     #172                // Field SSL_PASSWORD:Lorg/postgresql/PGProperty;
    1259: aastore
    1260: dup
    1261: bipush        29
    1263: getstatic     #176                // Field SSL_PASSWORD_CALLBACK:Lorg/postgresql/PGProperty;
    1266: aastore
    1267: dup
    1268: bipush        30
    1270: getstatic     #180                // Field TCP_KEEP_ALIVE:Lorg/postgresql/PGProperty;
    1273: aastore
    1274: dup
    1275: bipush        31
    1277: getstatic     #184                // Field LOGIN_TIMEOUT:Lorg/postgresql/PGProperty;
    1280: aastore
    1281: dup
    1282: bipush        32
    1284: getstatic     #188                // Field CONNECT_TIMEOUT:Lorg/postgresql/PGProperty;
    1287: aastore
    1288: dup
    1289: bipush        33
    1291: getstatic     #192                // Field SOCKET_TIMEOUT:Lorg/postgresql/PGProperty;
    1294: aastore
    1295: dup
    1296: bipush        34
    1298: getstatic     #197                // Field RECEIVE_BUFFER_SIZE:Lorg/postgresql/PGProperty;
    1301: aastore
    1302: dup
    1303: bipush        35
    1305: getstatic     #201                // Field SEND_BUFFER_SIZE:Lorg/postgresql/PGProperty;
    1308: aastore
    1309: dup
    1310: bipush        36
    1312: getstatic     #205                // Field ASSUME_MIN_SERVER_VERSION:Lorg/postgresql/PGProperty;
    1315: aastore
    1316: dup
    1317: bipush        37
    1319: getstatic     #209                // Field APPLICATION_NAME:Lorg/postgresql/PGProperty;
    1322: aastore
    1323: dup
    1324: bipush        38
    1326: getstatic     #213                // Field JAAS_APPLICATION_NAME:Lorg/postgresql/PGProperty;
    1329: aastore
    1330: dup
    1331: bipush        39
    1333: getstatic     #217                // Field KERBEROS_SERVER_NAME:Lorg/postgresql/PGProperty;
    1336: aastore
    1337: dup
    1338: bipush        40
    1340: getstatic     #221                // Field USE_SPNEGO:Lorg/postgresql/PGProperty;
    1343: aastore
    1344: dup
    1345: bipush        41
    1347: getstatic     #228                // Field GSS_LIB:Lorg/postgresql/PGProperty;
    1350: aastore
    1351: dup
    1352: bipush        42
    1354: getstatic     #233                // Field SSPI_SERVICE_CLASS:Lorg/postgresql/PGProperty;
    1357: aastore
    1358: dup
    1359: bipush        43
    1361: getstatic     #237                // Field CHARSET:Lorg/postgresql/PGProperty;
    1364: aastore
    1365: dup
    1366: bipush        44
    1368: getstatic     #241                // Field ALLOW_ENCODING_CHANGES:Lorg/postgresql/PGProperty;
    1371: aastore
    1372: dup
    1373: bipush        45
    1375: getstatic     #245                // Field CURRENT_SCHEMA:Lorg/postgresql/PGProperty;
    1378: aastore
    1379: dup
    1380: bipush        46
    1382: getstatic     #253                // Field TARGET_SERVER_TYPE:Lorg/postgresql/PGProperty;
    1385: aastore
    1386: dup
    1387: bipush        47
    1389: getstatic     #257                // Field LOAD_BALANCE_HOSTS:Lorg/postgresql/PGProperty;
    1392: aastore
    1393: dup
    1394: bipush        48
    1396: getstatic     #262                // Field HOST_RECHECK_SECONDS:Lorg/postgresql/PGProperty;
    1399: aastore
    1400: putstatic     #1                  // Field $VALUES:[Lorg/postgresql/PGProperty;
    1403: return
}
