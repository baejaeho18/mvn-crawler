Compiled from "AbstractJdbc2ResultSetMetaData.java"
public abstract class org.postgresql.jdbc2.AbstractJdbc2ResultSetMetaData implements org.postgresql.PGResultSetMetaData {
  protected final org.postgresql.core.BaseConnection connection;

  protected final org.postgresql.core.Field[] fields;

  private boolean fieldInfoFetched;

  private org.postgresql.jdbc2.CacheMetadata _cache;

  public org.postgresql.jdbc2.AbstractJdbc2ResultSetMetaData(org.postgresql.core.BaseConnection, org.postgresql.core.Field[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field connection:Lorg/postgresql/core/BaseConnection;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field fields:[Lorg/postgresql/core/Field;
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field fieldInfoFetched:Z
      19: aload_0
      20: new           #5                  // class org/postgresql/jdbc2/CacheMetadata
      23: dup
      24: invokespecial #6                  // Method org/postgresql/jdbc2/CacheMetadata."<init>":()V
      27: putfield      #7                  // Field _cache:Lorg/postgresql/jdbc2/CacheMetadata;
      30: return

  public int getColumnCount() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field fields:[Lorg/postgresql/core/Field;
       4: arraylength
       5: ireturn

  public boolean isAutoIncrement(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #8                  // Method fetchFieldMetaData:()V
       4: aload_0
       5: iload_1
       6: invokevirtual #9                  // Method getField:(I)Lorg/postgresql/core/Field;
       9: astore_2
      10: aload_2
      11: invokevirtual #10                 // Method org/postgresql/core/Field.getAutoIncrement:()Z
      14: ireturn

  public boolean isCaseSensitive(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #9                  // Method getField:(I)Lorg/postgresql/core/Field;
       5: astore_2
       6: aload_0
       7: getfield      #2                  // Field connection:Lorg/postgresql/core/BaseConnection;
      10: invokeinterface #11,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
      15: aload_2
      16: invokevirtual #12                 // Method org/postgresql/core/Field.getOID:()I
      19: invokeinterface #13,  2           // InterfaceMethod org/postgresql/core/TypeInfo.isCaseSensitive:(I)Z
      24: ireturn

  public boolean isSearchable(int) throws java.sql.SQLException;
    Code:
       0: iconst_1
       1: ireturn

  public boolean isCurrency(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #14                 // Method getPGType:(I)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: ldc           #15                 // String cash
       9: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      12: ifne          24
      15: aload_2
      16: ldc           #17                 // String money
      18: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public int isNullable(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #8                  // Method fetchFieldMetaData:()V
       4: aload_0
       5: iload_1
       6: invokevirtual #9                  // Method getField:(I)Lorg/postgresql/core/Field;
       9: astore_2
      10: aload_2
      11: invokevirtual #18                 // Method org/postgresql/core/Field.getNullable:()I
      14: ireturn

  public boolean isSigned(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #9                  // Method getField:(I)Lorg/postgresql/core/Field;
       5: astore_2
       6: aload_0
       7: getfield      #2                  // Field connection:Lorg/postgresql/core/BaseConnection;
      10: invokeinterface #11,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
      15: aload_2
      16: invokevirtual #12                 // Method org/postgresql/core/Field.getOID:()I
      19: invokeinterface #19,  2           // InterfaceMethod org/postgresql/core/TypeInfo.isSigned:(I)Z
      24: ireturn

  public int getColumnDisplaySize(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #9                  // Method getField:(I)Lorg/postgresql/core/Field;
       5: astore_2
       6: aload_0
       7: getfield      #2                  // Field connection:Lorg/postgresql/core/BaseConnection;
      10: invokeinterface #11,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
      15: aload_2
      16: invokevirtual #12                 // Method org/postgresql/core/Field.getOID:()I
      19: aload_2
      20: invokevirtual #20                 // Method org/postgresql/core/Field.getMod:()I
      23: invokeinterface #21,  3           // InterfaceMethod org/postgresql/core/TypeInfo.getDisplaySize:(II)I
      28: ireturn

  public java.lang.String getColumnLabel(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #9                  // Method getField:(I)Lorg/postgresql/core/Field;
       5: astore_2
       6: aload_2
       7: invokevirtual #22                 // Method org/postgresql/core/Field.getColumnLabel:()Ljava/lang/String;
      10: areturn

  public java.lang.String getColumnName(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #23                 // Method getColumnLabel:(I)Ljava/lang/String;
       5: areturn

  public java.lang.String getBaseColumnName(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #8                  // Method fetchFieldMetaData:()V
       4: aload_0
       5: iload_1
       6: invokevirtual #9                  // Method getField:(I)Lorg/postgresql/core/Field;
       9: astore_2
      10: aload_2
      11: invokevirtual #24                 // Method org/postgresql/core/Field.getColumnName:()Ljava/lang/String;
      14: areturn

  public java.lang.String getSchemaName(int) throws java.sql.SQLException;
    Code:
       0: ldc           #25                 // String
       2: areturn

  private void fetchFieldMetaData() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field fieldInfoFetched:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #7                  // Field _cache:Lorg/postgresql/jdbc2/CacheMetadata;
      12: aload_0
      13: getfield      #3                  // Field fields:[Lorg/postgresql/core/Field;
      16: invokevirtual #26                 // Method org/postgresql/jdbc2/CacheMetadata.getIdFields:([Lorg/postgresql/core/Field;)Ljava/lang/String;
      19: astore_1
      20: aload_0
      21: getfield      #7                  // Field _cache:Lorg/postgresql/jdbc2/CacheMetadata;
      24: aload_1
      25: invokevirtual #27                 // Method org/postgresql/jdbc2/CacheMetadata.isCached:(Ljava/lang/String;)Z
      28: ifeq          49
      31: aload_0
      32: getfield      #7                  // Field _cache:Lorg/postgresql/jdbc2/CacheMetadata;
      35: aload_1
      36: aload_0
      37: getfield      #3                  // Field fields:[Lorg/postgresql/core/Field;
      40: invokevirtual #28                 // Method org/postgresql/jdbc2/CacheMetadata.getCache:(Ljava/lang/String;[Lorg/postgresql/core/Field;)V
      43: aload_0
      44: iconst_1
      45: putfield      #4                  // Field fieldInfoFetched:Z
      48: return
      49: aload_0
      50: iconst_1
      51: putfield      #4                  // Field fieldInfoFetched:Z
      54: new           #29                 // class java/lang/StringBuilder
      57: dup
      58: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      61: astore_2
      62: aload_2
      63: ldc           #31                 // String SELECT c.oid, a.attnum, a.attname, c.relname, n.nspname,
      65: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: pop
      69: aload_2
      70: ldc           #33                 // String a.attnotnull OR (t.typtype = \'d\' AND t.typnotnull),
      72: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: pop
      76: aload_2
      77: ldc           #34                 // String pg_catalog.pg_get_expr(d.adbin, d.adrelid) LIKE \'%nextval(%\'
      79: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: pop
      83: aload_2
      84: ldc           #35                 // String FROM pg_catalog.pg_class c
      86: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: pop
      90: aload_2
      91: ldc           #36                 // String JOIN pg_catalog.pg_namespace n ON (c.relnamespace = n.oid)
      93: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: pop
      97: aload_2
      98: ldc           #37                 // String JOIN pg_catalog.pg_attribute a ON (c.oid = a.attrelid)
     100: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: pop
     104: aload_2
     105: ldc           #38                 // String JOIN pg_catalog.pg_type t ON (a.atttypid = t.oid)
     107: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: pop
     111: aload_2
     112: ldc           #39                 // String LEFT JOIN pg_catalog.pg_attrdef d ON (d.adrelid = a.attrelid AND d.adnum = a.attnum)
     114: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: pop
     118: aload_2
     119: ldc           #40                 // String JOIN (
     121: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: pop
     125: iconst_0
     126: istore_3
     127: aload_0
     128: getfield      #3                  // Field fields:[Lorg/postgresql/core/Field;
     131: astore        4
     133: aload         4
     135: arraylength
     136: istore        5
     138: iconst_0
     139: istore        6
     141: iload         6
     143: iload         5
     145: if_icmpge     245
     148: aload         4
     150: iload         6
     152: aaload
     153: astore        7
     155: aload         7
     157: invokevirtual #41                 // Method org/postgresql/core/Field.getTableOid:()I
     160: ifne          166
     163: goto          239
     166: iload_3
     167: ifeq          177
     170: aload_2
     171: ldc           #42                 // String  UNION ALL
     173: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     176: pop
     177: aload_2
     178: ldc           #43                 // String SELECT
     180: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     183: pop
     184: aload_2
     185: aload         7
     187: invokevirtual #41                 // Method org/postgresql/core/Field.getTableOid:()I
     190: invokevirtual #44                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     193: pop
     194: iload_3
     195: ifne          205
     198: aload_2
     199: ldc           #45                 // String  AS oid
     201: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     204: pop
     205: aload_2
     206: ldc           #46                 // String ,
     208: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     211: pop
     212: aload_2
     213: aload         7
     215: invokevirtual #47                 // Method org/postgresql/core/Field.getPositionInTable:()I
     218: invokevirtual #44                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     221: pop
     222: iload_3
     223: ifne          233
     226: aload_2
     227: ldc           #48                 // String  AS attnum
     229: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     232: pop
     233: iload_3
     234: ifne          239
     237: iconst_1
     238: istore_3
     239: iinc          6, 1
     242: goto          141
     245: aload_2
     246: ldc           #49                 // String ) vals ON (c.oid = vals.oid AND a.attnum = vals.attnum)
     248: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     251: pop
     252: iload_3
     253: ifne          257
     256: return
     257: aload_0
     258: getfield      #2                  // Field connection:Lorg/postgresql/core/BaseConnection;
     261: invokeinterface #50,  1           // InterfaceMethod org/postgresql/core/BaseConnection.createStatement:()Ljava/sql/Statement;
     266: astore        4
     268: aload         4
     270: aload_2
     271: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     274: invokeinterface #52,  2           // InterfaceMethod java/sql/Statement.executeQuery:(Ljava/lang/String;)Ljava/sql/ResultSet;
     279: astore        5
     281: aload         5
     283: invokeinterface #53,  1           // InterfaceMethod java/sql/ResultSet.next:()Z
     288: ifeq          465
     291: aload         5
     293: iconst_1
     294: invokeinterface #54,  2           // InterfaceMethod java/sql/ResultSet.getLong:(I)J
     299: l2i
     300: istore        6
     302: aload         5
     304: iconst_2
     305: invokeinterface #54,  2           // InterfaceMethod java/sql/ResultSet.getLong:(I)J
     310: l2i
     311: istore        7
     313: aload         5
     315: iconst_3
     316: invokeinterface #55,  2           // InterfaceMethod java/sql/ResultSet.getString:(I)Ljava/lang/String;
     321: astore        8
     323: aload         5
     325: iconst_4
     326: invokeinterface #55,  2           // InterfaceMethod java/sql/ResultSet.getString:(I)Ljava/lang/String;
     331: astore        9
     333: aload         5
     335: iconst_5
     336: invokeinterface #55,  2           // InterfaceMethod java/sql/ResultSet.getString:(I)Ljava/lang/String;
     341: astore        10
     343: aload         5
     345: bipush        6
     347: invokeinterface #56,  2           // InterfaceMethod java/sql/ResultSet.getBoolean:(I)Z
     352: ifeq          359
     355: iconst_0
     356: goto          360
     359: iconst_1
     360: istore        11
     362: aload         5
     364: bipush        7
     366: invokeinterface #56,  2           // InterfaceMethod java/sql/ResultSet.getBoolean:(I)Z
     371: istore        12
     373: aload_0
     374: getfield      #3                  // Field fields:[Lorg/postgresql/core/Field;
     377: astore        13
     379: aload         13
     381: arraylength
     382: istore        14
     384: iconst_0
     385: istore        15
     387: iload         15
     389: iload         14
     391: if_icmpge     462
     394: aload         13
     396: iload         15
     398: aaload
     399: astore        16
     401: aload         16
     403: invokevirtual #41                 // Method org/postgresql/core/Field.getTableOid:()I
     406: iload         6
     408: if_icmpne     456
     411: aload         16
     413: invokevirtual #47                 // Method org/postgresql/core/Field.getPositionInTable:()I
     416: iload         7
     418: if_icmpne     456
     421: aload         16
     423: aload         8
     425: invokevirtual #58                 // Method org/postgresql/core/Field.setColumnName:(Ljava/lang/String;)V
     428: aload         16
     430: aload         9
     432: invokevirtual #59                 // Method org/postgresql/core/Field.setTableName:(Ljava/lang/String;)V
     435: aload         16
     437: aload         10
     439: invokevirtual #60                 // Method org/postgresql/core/Field.setSchemaName:(Ljava/lang/String;)V
     442: aload         16
     444: iload         11
     446: invokevirtual #61                 // Method org/postgresql/core/Field.setNullable:(I)V
     449: aload         16
     451: iload         12
     453: invokevirtual #62                 // Method org/postgresql/core/Field.setAutoIncrement:(Z)V
     456: iinc          15, 1
     459: goto          387
     462: goto          281
     465: aload         4
     467: invokeinterface #63,  1           // InterfaceMethod java/sql/Statement.close:()V
     472: aload_0
     473: getfield      #7                  // Field _cache:Lorg/postgresql/jdbc2/CacheMetadata;
     476: aload_1
     477: aload_0
     478: getfield      #3                  // Field fields:[Lorg/postgresql/core/Field;
     481: invokevirtual #64                 // Method org/postgresql/jdbc2/CacheMetadata.setCache:(Ljava/lang/String;[Lorg/postgresql/core/Field;)V
     484: return

  public java.lang.String getBaseSchemaName(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #8                  // Method fetchFieldMetaData:()V
       4: aload_0
       5: iload_1
       6: invokevirtual #9                  // Method getField:(I)Lorg/postgresql/core/Field;
       9: astore_2
      10: aload_2
      11: invokevirtual #65                 // Method org/postgresql/core/Field.getSchemaName:()Ljava/lang/String;
      14: areturn

  public int getPrecision(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #9                  // Method getField:(I)Lorg/postgresql/core/Field;
       5: astore_2
       6: aload_0
       7: getfield      #2                  // Field connection:Lorg/postgresql/core/BaseConnection;
      10: invokeinterface #11,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
      15: aload_2
      16: invokevirtual #12                 // Method org/postgresql/core/Field.getOID:()I
      19: aload_2
      20: invokevirtual #20                 // Method org/postgresql/core/Field.getMod:()I
      23: invokeinterface #66,  3           // InterfaceMethod org/postgresql/core/TypeInfo.getPrecision:(II)I
      28: ireturn

  public int getScale(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #9                  // Method getField:(I)Lorg/postgresql/core/Field;
       5: astore_2
       6: aload_0
       7: getfield      #2                  // Field connection:Lorg/postgresql/core/BaseConnection;
      10: invokeinterface #11,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
      15: aload_2
      16: invokevirtual #12                 // Method org/postgresql/core/Field.getOID:()I
      19: aload_2
      20: invokevirtual #20                 // Method org/postgresql/core/Field.getMod:()I
      23: invokeinterface #67,  3           // InterfaceMethod org/postgresql/core/TypeInfo.getScale:(II)I
      28: ireturn

  public java.lang.String getTableName(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #68                 // Method getBaseTableName:(I)Ljava/lang/String;
       5: areturn

  public java.lang.String getBaseTableName(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #8                  // Method fetchFieldMetaData:()V
       4: aload_0
       5: iload_1
       6: invokevirtual #9                  // Method getField:(I)Lorg/postgresql/core/Field;
       9: astore_2
      10: aload_2
      11: invokevirtual #69                 // Method org/postgresql/core/Field.getTableName:()Ljava/lang/String;
      14: areturn

  public java.lang.String getCatalogName(int) throws java.sql.SQLException;
    Code:
       0: ldc           #25                 // String
       2: areturn

  public int getColumnType(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #70                 // Method getSQLType:(I)I
       5: ireturn

  public int getFormat(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #9                  // Method getField:(I)Lorg/postgresql/core/Field;
       5: invokevirtual #71                 // Method org/postgresql/core/Field.getFormat:()I
       8: ireturn

  public java.lang.String getColumnTypeName(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #14                 // Method getPGType:(I)Ljava/lang/String;
       5: astore_2
       6: aload_0
       7: iload_1
       8: invokevirtual #72                 // Method isAutoIncrement:(I)Z
      11: ifeq          38
      14: ldc           #73                 // String int4
      16: aload_2
      17: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      20: ifeq          26
      23: ldc           #74                 // String serial
      25: areturn
      26: ldc           #75                 // String int8
      28: aload_2
      29: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      32: ifeq          38
      35: ldc           #76                 // String bigserial
      37: areturn
      38: aload_2
      39: areturn

  public boolean isReadOnly(int) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean isWritable(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #77                 // Method isReadOnly:(I)Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isDefinitelyWritable(int) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  protected org.postgresql.core.Field getField(int) throws java.sql.SQLException;
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmplt     14
       5: iload_1
       6: aload_0
       7: getfield      #3                  // Field fields:[Lorg/postgresql/core/Field;
      10: arraylength
      11: if_icmple     52
      14: new           #78                 // class org/postgresql/util/PSQLException
      17: dup
      18: ldc           #79                 // String The column index is out of range: {0}, number of columns: {1}.
      20: iconst_2
      21: anewarray     #80                 // class java/lang/Object
      24: dup
      25: iconst_0
      26: iload_1
      27: invokestatic  #81                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      30: aastore
      31: dup
      32: iconst_1
      33: aload_0
      34: getfield      #3                  // Field fields:[Lorg/postgresql/core/Field;
      37: arraylength
      38: invokestatic  #81                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      41: aastore
      42: invokestatic  #82                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      45: getstatic     #83                 // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      48: invokespecial #84                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      51: athrow
      52: aload_0
      53: getfield      #3                  // Field fields:[Lorg/postgresql/core/Field;
      56: iload_1
      57: iconst_1
      58: isub
      59: aaload
      60: areturn

  protected java.lang.String getPGType(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field connection:Lorg/postgresql/core/BaseConnection;
       4: invokeinterface #11,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
       9: aload_0
      10: iload_1
      11: invokevirtual #9                  // Method getField:(I)Lorg/postgresql/core/Field;
      14: invokevirtual #12                 // Method org/postgresql/core/Field.getOID:()I
      17: invokeinterface #85,  2           // InterfaceMethod org/postgresql/core/TypeInfo.getPGType:(I)Ljava/lang/String;
      22: areturn

  protected int getSQLType(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field connection:Lorg/postgresql/core/BaseConnection;
       4: invokeinterface #11,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
       9: aload_0
      10: iload_1
      11: invokevirtual #9                  // Method getField:(I)Lorg/postgresql/core/Field;
      14: invokevirtual #12                 // Method org/postgresql/core/Field.getOID:()I
      17: invokeinterface #86,  2           // InterfaceMethod org/postgresql/core/TypeInfo.getSQLType:(I)I
      22: ireturn

  public java.lang.String getColumnClassName(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #9                  // Method getField:(I)Lorg/postgresql/core/Field;
       5: astore_2
       6: aload_0
       7: getfield      #2                  // Field connection:Lorg/postgresql/core/BaseConnection;
      10: invokeinterface #11,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
      15: aload_2
      16: invokevirtual #12                 // Method org/postgresql/core/Field.getOID:()I
      19: invokeinterface #87,  2           // InterfaceMethod org/postgresql/core/TypeInfo.getJavaClass:(I)Ljava/lang/String;
      24: astore_3
      25: aload_3
      26: ifnull        31
      29: aload_3
      30: areturn
      31: aload_0
      32: iload_1
      33: invokevirtual #70                 // Method getSQLType:(I)I
      36: istore        4
      38: iload         4
      40: lookupswitch  { // 1
                  2003: 60
               default: 63
          }
      60: ldc           #88                 // String java.sql.Array
      62: areturn
      63: aload_0
      64: iload_1
      65: invokevirtual #14                 // Method getPGType:(I)Ljava/lang/String;
      68: astore        5
      70: ldc           #89                 // String unknown
      72: aload         5
      74: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      77: ifeq          83
      80: ldc           #90                 // String java.lang.String
      82: areturn
      83: ldc           #91                 // String java.lang.Object
      85: areturn
}
