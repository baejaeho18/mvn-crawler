Compiled from "AbstractJdbc2Connection.java"
public abstract class org.postgresql.jdbc2.AbstractJdbc2Connection implements org.postgresql.core.BaseConnection {
  private static int nextConnectionID;

  private final org.postgresql.core.Logger logger;

  private final java.lang.String creatingURL;

  private java.lang.Throwable openStackTrace;

  private final org.postgresql.core.ProtocolConnection protoConnection;

  private final int compatibleInt;

  private final org.postgresql.core.Query commitQuery;

  private final org.postgresql.core.Query rollbackQuery;

  private org.postgresql.core.TypeInfo _typeCache;

  private boolean disableColumnSanitiser;

  protected int prepareThreshold;

  protected int defaultFetchSize;

  protected boolean forcebinary;

  private boolean autoCommit;

  private boolean readOnly;

  private final boolean bindStringAsVarchar;

  private java.sql.SQLWarning firstWarning;

  private java.util.Set<java.lang.Integer> useBinarySendForOids;

  private java.util.Set<java.lang.Integer> useBinaryReceiveForOids;

  private volatile java.util.Timer cancelTimer;

  private final org.postgresql.util.LruCache<java.lang.Object, org.postgresql.core.CachedQuery> statementCache;

  private final org.postgresql.jdbc2.TimestampUtils timestampUtils;

  protected java.util.Map typemap;

  private org.postgresql.fastpath.Fastpath fastpath;

  private org.postgresql.largeobject.LargeObjectManager largeobject;

  protected java.sql.DatabaseMetaData metadata;

  private org.postgresql.copy.CopyManager copyManager;

  public abstract java.sql.DatabaseMetaData getMetaData() throws java.sql.SQLException;

  org.postgresql.core.CachedQuery borrowQuery(java.lang.String, boolean) throws java.sql.SQLException;
    Code:
       0: iload_2
       1: ifeq          15
       4: new           #1                  // class org/postgresql/jdbc2/CallableQueryKey
       7: dup
       8: aload_1
       9: invokespecial #2                  // Method org/postgresql/jdbc2/CallableQueryKey."<init>":(Ljava/lang/String;)V
      12: goto          16
      15: aload_1
      16: astore_3
      17: aload_0
      18: getfield      #3                  // Field statementCache:Lorg/postgresql/util/LruCache;
      21: dup
      22: astore        4
      24: monitorenter
      25: aload_0
      26: getfield      #3                  // Field statementCache:Lorg/postgresql/util/LruCache;
      29: aload_3
      30: invokevirtual #4                  // Method org/postgresql/util/LruCache.borrow:(Ljava/lang/Object;)Lorg/postgresql/util/CanEstimateSize;
      33: checkcast     #5                  // class org/postgresql/core/CachedQuery
      36: aload         4
      38: monitorexit
      39: areturn
      40: astore        5
      42: aload         4
      44: monitorexit
      45: aload         5
      47: athrow
    Exception table:
       from    to  target type
          25    39    40   any
          40    45    40   any

  void releaseQuery(org.postgresql.core.CachedQuery);
    Code:
       0: aload_0
       1: getfield      #3                  // Field statementCache:Lorg/postgresql/util/LruCache;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #3                  // Field statementCache:Lorg/postgresql/util/LruCache;
      11: aload_1
      12: getfield      #6                  // Field org/postgresql/core/CachedQuery.key:Ljava/lang/Object;
      15: aload_1
      16: invokevirtual #7                  // Method org/postgresql/util/LruCache.put:(Ljava/lang/Object;Lorg/postgresql/util/CanEstimateSize;)V
      19: aload_2
      20: monitorexit
      21: goto          29
      24: astore_3
      25: aload_2
      26: monitorexit
      27: aload_3
      28: athrow
      29: return
    Exception table:
       from    to  target type
           7    21    24   any
          24    27    24   any

  protected org.postgresql.jdbc2.AbstractJdbc2Connection(org.postgresql.util.HostSpec[], java.lang.String, java.lang.String, java.util.Properties, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #9                  // Field disableColumnSanitiser:Z
       9: aload_0
      10: iconst_0
      11: putfield      #10                 // Field forcebinary:Z
      14: aload_0
      15: iconst_1
      16: putfield      #11                 // Field autoCommit:Z
      19: aload_0
      20: iconst_0
      21: putfield      #12                 // Field readOnly:Z
      24: aload_0
      25: aconst_null
      26: putfield      #13                 // Field firstWarning:Ljava/sql/SQLWarning;
      29: aload_0
      30: aconst_null
      31: putfield      #14                 // Field cancelTimer:Ljava/util/Timer;
      34: aload_0
      35: aconst_null
      36: putfield      #15                 // Field fastpath:Lorg/postgresql/fastpath/Fastpath;
      39: aload_0
      40: aconst_null
      41: putfield      #16                 // Field largeobject:Lorg/postgresql/largeobject/LargeObjectManager;
      44: aload_0
      45: aconst_null
      46: putfield      #17                 // Field copyManager:Lorg/postgresql/copy/CopyManager;
      49: aload_0
      50: aload         5
      52: putfield      #18                 // Field creatingURL:Ljava/lang/String;
      55: invokestatic  #19                 // Method org/postgresql/Driver.getLogLevel:()I
      58: istore        6
      60: ldc           #20                 // class org/postgresql/jdbc2/AbstractJdbc2Connection
      62: dup
      63: astore        7
      65: monitorenter
      66: aload_0
      67: new           #21                 // class org/postgresql/core/Logger
      70: dup
      71: getstatic     #22                 // Field nextConnectionID:I
      74: dup
      75: iconst_1
      76: iadd
      77: putstatic     #22                 // Field nextConnectionID:I
      80: invokespecial #23                 // Method org/postgresql/core/Logger."<init>":(I)V
      83: putfield      #24                 // Field logger:Lorg/postgresql/core/Logger;
      86: aload_0
      87: getfield      #24                 // Field logger:Lorg/postgresql/core/Logger;
      90: iload         6
      92: invokevirtual #25                 // Method org/postgresql/core/Logger.setLogLevel:(I)V
      95: aload         7
      97: monitorexit
      98: goto          109
     101: astore        8
     103: aload         7
     105: monitorexit
     106: aload         8
     108: athrow
     109: aload_0
     110: getstatic     #26                 // Field org/postgresql/PGProperty.DEFAULT_ROW_FETCH_SIZE:Lorg/postgresql/PGProperty;
     113: aload         4
     115: invokevirtual #27                 // Method org/postgresql/PGProperty.getInt:(Ljava/util/Properties;)I
     118: invokevirtual #28                 // Method setDefaultFetchSize:(I)V
     121: aload_0
     122: getstatic     #29                 // Field org/postgresql/PGProperty.PREPARE_THRESHOLD:Lorg/postgresql/PGProperty;
     125: aload         4
     127: invokevirtual #27                 // Method org/postgresql/PGProperty.getInt:(Ljava/util/Properties;)I
     130: putfield      #30                 // Field prepareThreshold:I
     133: aload_0
     134: getfield      #30                 // Field prepareThreshold:I
     137: iconst_m1
     138: if_icmpne     146
     141: aload_0
     142: iconst_1
     143: putfield      #10                 // Field forcebinary:Z
     146: getstatic     #31                 // Field org/postgresql/PGProperty.BINARY_TRANSFER:Lorg/postgresql/PGProperty;
     149: aload         4
     151: invokevirtual #32                 // Method org/postgresql/PGProperty.getBoolean:(Ljava/util/Properties;)Z
     154: istore        7
     156: aload_0
     157: getfield      #24                 // Field logger:Lorg/postgresql/core/Logger;
     160: invokevirtual #33                 // Method org/postgresql/core/Logger.logInfo:()Z
     163: ifeq          176
     166: aload_0
     167: getfield      #24                 // Field logger:Lorg/postgresql/core/Logger;
     170: invokestatic  #34                 // Method org/postgresql/Driver.getVersion:()Ljava/lang/String;
     173: invokevirtual #35                 // Method org/postgresql/core/Logger.info:(Ljava/lang/String;)V
     176: aload_0
     177: aload_1
     178: aload_2
     179: aload_3
     180: aload         4
     182: aload_0
     183: getfield      #24                 // Field logger:Lorg/postgresql/core/Logger;
     186: invokestatic  #36                 // Method org/postgresql/core/ConnectionFactory.openConnection:([Lorg/postgresql/util/HostSpec;Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;Lorg/postgresql/core/Logger;)Lorg/postgresql/core/ProtocolConnection;
     189: putfield      #37                 // Field protoConnection:Lorg/postgresql/core/ProtocolConnection;
     192: getstatic     #38                 // Field org/postgresql/PGProperty.COMPATIBLE:Lorg/postgresql/PGProperty;
     195: aload         4
     197: invokevirtual #39                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
     200: invokestatic  #40                 // Method org/postgresql/core/Utils.parseServerVersionStr:(Ljava/lang/String;)I
     203: istore        8
     205: iload         8
     207: ifne          214
     210: ldc           #42                 // int 90400
     212: istore        8
     214: aload_0
     215: iload         8
     217: putfield      #43                 // Field compatibleInt:I
     220: getstatic     #44                 // Field org/postgresql/PGProperty.READ_ONLY:Lorg/postgresql/PGProperty;
     223: aload         4
     225: invokevirtual #32                 // Method org/postgresql/PGProperty.getBoolean:(Ljava/util/Properties;)Z
     228: ifeq          236
     231: aload_0
     232: iconst_1
     233: invokevirtual #45                 // Method setReadOnly:(Z)V
     236: new           #46                 // class java/util/HashSet
     239: dup
     240: invokespecial #47                 // Method java/util/HashSet."<init>":()V
     243: astore        9
     245: iload         7
     247: ifeq          567
     250: aload_0
     251: getfield      #37                 // Field protoConnection:Lorg/postgresql/core/ProtocolConnection;
     254: invokeinterface #48,  1           // InterfaceMethod org/postgresql/core/ProtocolConnection.getProtocolVersion:()I
     259: iconst_3
     260: if_icmplt     567
     263: aload         9
     265: bipush        17
     267: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     270: invokeinterface #51,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     275: pop
     276: aload         9
     278: bipush        21
     280: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     283: invokeinterface #51,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     288: pop
     289: aload         9
     291: bipush        23
     293: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     296: invokeinterface #51,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     301: pop
     302: aload         9
     304: bipush        20
     306: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     309: invokeinterface #51,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     314: pop
     315: aload         9
     317: sipush        700
     320: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     323: invokeinterface #51,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     328: pop
     329: aload         9
     331: sipush        701
     334: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     337: invokeinterface #51,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     342: pop
     343: aload         9
     345: sipush        1083
     348: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     351: invokeinterface #51,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     356: pop
     357: aload         9
     359: sipush        1082
     362: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     365: invokeinterface #51,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     370: pop
     371: aload         9
     373: sipush        1266
     376: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     379: invokeinterface #51,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     384: pop
     385: aload         9
     387: sipush        1114
     390: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     393: invokeinterface #51,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     398: pop
     399: aload         9
     401: sipush        1184
     404: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     407: invokeinterface #51,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     412: pop
     413: aload         9
     415: sipush        1005
     418: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     421: invokeinterface #51,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     426: pop
     427: aload         9
     429: sipush        1007
     432: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     435: invokeinterface #51,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     440: pop
     441: aload         9
     443: sipush        1016
     446: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     449: invokeinterface #51,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     454: pop
     455: aload         9
     457: sipush        1021
     460: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     463: invokeinterface #51,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     468: pop
     469: aload         9
     471: sipush        1022
     474: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     477: invokeinterface #51,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     482: pop
     483: aload         9
     485: sipush        1022
     488: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     491: invokeinterface #51,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     496: pop
     497: aload         9
     499: sipush        1015
     502: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     505: invokeinterface #51,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     510: pop
     511: aload         9
     513: sipush        1009
     516: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     519: invokeinterface #51,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     524: pop
     525: aload         9
     527: sipush        600
     530: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     533: invokeinterface #51,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     538: pop
     539: aload         9
     541: sipush        603
     544: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     547: invokeinterface #51,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     552: pop
     553: aload         9
     555: sipush        2950
     558: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     561: invokeinterface #51,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     566: pop
     567: aload_0
     568: getstatic     #52                 // Field org/postgresql/core/ServerVersion.v8_0:Lorg/postgresql/core/ServerVersion;
     571: invokevirtual #53                 // Method haveMinimumCompatibleVersion:(Lorg/postgresql/core/Version;)Z
     574: ifne          633
     577: aload         9
     579: sipush        1083
     582: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     585: invokeinterface #54,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     590: pop
     591: aload         9
     593: sipush        1266
     596: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     599: invokeinterface #54,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     604: pop
     605: aload         9
     607: sipush        1114
     610: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     613: invokeinterface #54,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     618: pop
     619: aload         9
     621: sipush        1184
     624: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     627: invokeinterface #54,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     632: pop
     633: aload_0
     634: getstatic     #55                 // Field org/postgresql/core/ServerVersion.v8_3:Lorg/postgresql/core/ServerVersion;
     637: invokevirtual #53                 // Method haveMinimumCompatibleVersion:(Lorg/postgresql/core/Version;)Z
     640: ifne          755
     643: aload         9
     645: sipush        1005
     648: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     651: invokeinterface #54,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     656: pop
     657: aload         9
     659: sipush        1007
     662: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     665: invokeinterface #54,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     670: pop
     671: aload         9
     673: sipush        1016
     676: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     679: invokeinterface #54,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     684: pop
     685: aload         9
     687: sipush        1021
     690: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     693: invokeinterface #54,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     698: pop
     699: aload         9
     701: sipush        1022
     704: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     707: invokeinterface #54,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     712: pop
     713: aload         9
     715: sipush        1022
     718: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     721: invokeinterface #54,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     726: pop
     727: aload         9
     729: sipush        1015
     732: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     735: invokeinterface #54,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     740: pop
     741: aload         9
     743: sipush        1009
     746: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     749: invokeinterface #54,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     754: pop
     755: aload         9
     757: aload_0
     758: getstatic     #56                 // Field org/postgresql/PGProperty.BINARY_TRANSFER_ENABLE:Lorg/postgresql/PGProperty;
     761: aload         4
     763: invokevirtual #39                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
     766: invokespecial #57                 // Method getOidSet:(Ljava/lang/String;)Ljava/util/Set;
     769: invokeinterface #58,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
     774: pop
     775: aload         9
     777: aload_0
     778: getstatic     #59                 // Field org/postgresql/PGProperty.BINARY_TRANSFER_DISABLE:Lorg/postgresql/PGProperty;
     781: aload         4
     783: invokevirtual #39                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
     786: invokespecial #57                 // Method getOidSet:(Ljava/lang/String;)Ljava/util/Set;
     789: invokeinterface #60,  2           // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z
     794: pop
     795: aload_0
     796: new           #46                 // class java/util/HashSet
     799: dup
     800: invokespecial #47                 // Method java/util/HashSet."<init>":()V
     803: putfield      #61                 // Field useBinarySendForOids:Ljava/util/Set;
     806: aload_0
     807: getfield      #61                 // Field useBinarySendForOids:Ljava/util/Set;
     810: aload         9
     812: invokeinterface #58,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
     817: pop
     818: aload_0
     819: new           #46                 // class java/util/HashSet
     822: dup
     823: invokespecial #47                 // Method java/util/HashSet."<init>":()V
     826: putfield      #62                 // Field useBinaryReceiveForOids:Ljava/util/Set;
     829: aload_0
     830: getfield      #62                 // Field useBinaryReceiveForOids:Ljava/util/Set;
     833: aload         9
     835: invokeinterface #58,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
     840: pop
     841: aload_0
     842: getfield      #61                 // Field useBinarySendForOids:Ljava/util/Set;
     845: sipush        1082
     848: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     851: invokeinterface #54,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     856: pop
     857: aload_0
     858: getfield      #37                 // Field protoConnection:Lorg/postgresql/core/ProtocolConnection;
     861: aload_0
     862: getfield      #62                 // Field useBinaryReceiveForOids:Ljava/util/Set;
     865: invokeinterface #63,  2           // InterfaceMethod org/postgresql/core/ProtocolConnection.setBinaryReceiveOids:(Ljava/util/Set;)V
     870: aload_0
     871: getfield      #24                 // Field logger:Lorg/postgresql/core/Logger;
     874: invokevirtual #64                 // Method org/postgresql/core/Logger.logDebug:()Z
     877: ifeq          1065
     880: aload_0
     881: getfield      #24                 // Field logger:Lorg/postgresql/core/Logger;
     884: new           #65                 // class java/lang/StringBuilder
     887: dup
     888: invokespecial #66                 // Method java/lang/StringBuilder."<init>":()V
     891: ldc           #67                 // String     compatible =
     893: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     896: aload_0
     897: getfield      #43                 // Field compatibleInt:I
     900: invokevirtual #69                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     903: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     906: invokevirtual #71                 // Method org/postgresql/core/Logger.debug:(Ljava/lang/String;)V
     909: aload_0
     910: getfield      #24                 // Field logger:Lorg/postgresql/core/Logger;
     913: new           #65                 // class java/lang/StringBuilder
     916: dup
     917: invokespecial #66                 // Method java/lang/StringBuilder."<init>":()V
     920: ldc           #72                 // String     loglevel =
     922: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     925: iload         6
     927: invokevirtual #69                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     930: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     933: invokevirtual #71                 // Method org/postgresql/core/Logger.debug:(Ljava/lang/String;)V
     936: aload_0
     937: getfield      #24                 // Field logger:Lorg/postgresql/core/Logger;
     940: new           #65                 // class java/lang/StringBuilder
     943: dup
     944: invokespecial #66                 // Method java/lang/StringBuilder."<init>":()V
     947: ldc           #73                 // String     prepare threshold =
     949: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     952: aload_0
     953: getfield      #30                 // Field prepareThreshold:I
     956: invokevirtual #69                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     959: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     962: invokevirtual #71                 // Method org/postgresql/core/Logger.debug:(Ljava/lang/String;)V
     965: aload_0
     966: getfield      #24                 // Field logger:Lorg/postgresql/core/Logger;
     969: new           #65                 // class java/lang/StringBuilder
     972: dup
     973: invokespecial #66                 // Method java/lang/StringBuilder."<init>":()V
     976: ldc           #74                 // String     types using binary send =
     978: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     981: aload_0
     982: aload_0
     983: getfield      #61                 // Field useBinarySendForOids:Ljava/util/Set;
     986: invokespecial #75                 // Method oidsToString:(Ljava/util/Set;)Ljava/lang/String;
     989: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     992: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     995: invokevirtual #71                 // Method org/postgresql/core/Logger.debug:(Ljava/lang/String;)V
     998: aload_0
     999: getfield      #24                 // Field logger:Lorg/postgresql/core/Logger;
    1002: new           #65                 // class java/lang/StringBuilder
    1005: dup
    1006: invokespecial #66                 // Method java/lang/StringBuilder."<init>":()V
    1009: ldc           #76                 // String     types using binary receive =
    1011: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1014: aload_0
    1015: aload_0
    1016: getfield      #62                 // Field useBinaryReceiveForOids:Ljava/util/Set;
    1019: invokespecial #75                 // Method oidsToString:(Ljava/util/Set;)Ljava/lang/String;
    1022: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1025: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1028: invokevirtual #71                 // Method org/postgresql/core/Logger.debug:(Ljava/lang/String;)V
    1031: aload_0
    1032: getfield      #24                 // Field logger:Lorg/postgresql/core/Logger;
    1035: new           #65                 // class java/lang/StringBuilder
    1038: dup
    1039: invokespecial #66                 // Method java/lang/StringBuilder."<init>":()V
    1042: ldc           #77                 // String     integer date/time =
    1044: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1047: aload_0
    1048: getfield      #37                 // Field protoConnection:Lorg/postgresql/core/ProtocolConnection;
    1051: invokeinterface #78,  1           // InterfaceMethod org/postgresql/core/ProtocolConnection.getIntegerDateTimes:()Z
    1056: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
    1059: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1062: invokevirtual #71                 // Method org/postgresql/core/Logger.debug:(Ljava/lang/String;)V
    1065: getstatic     #80                 // Field org/postgresql/PGProperty.STRING_TYPE:Lorg/postgresql/PGProperty;
    1068: aload         4
    1070: invokevirtual #39                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
    1073: astore        10
    1075: aload         10
    1077: ifnull        1134
    1080: aload         10
    1082: ldc           #81                 // String unspecified
    1084: invokevirtual #82                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
    1087: ifeq          1098
    1090: aload_0
    1091: iconst_0
    1092: putfield      #83                 // Field bindStringAsVarchar:Z
    1095: goto          1145
    1098: aload         10
    1100: ldc           #84                 // String varchar
    1102: invokevirtual #82                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
    1105: ifeq          1116
    1108: aload_0
    1109: iconst_1
    1110: putfield      #83                 // Field bindStringAsVarchar:Z
    1113: goto          1145
    1116: new           #85                 // class org/postgresql/util/PSQLException
    1119: dup
    1120: ldc           #86                 // String Unsupported value for stringtype parameter: {0}
    1122: aload         10
    1124: invokestatic  #87                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
    1127: getstatic     #88                 // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
    1130: invokespecial #89                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
    1133: athrow
    1134: aload_0
    1135: aload_0
    1136: getstatic     #52                 // Field org/postgresql/core/ServerVersion.v8_0:Lorg/postgresql/core/ServerVersion;
    1139: invokevirtual #53                 // Method haveMinimumCompatibleVersion:(Lorg/postgresql/core/Version;)Z
    1142: putfield      #83                 // Field bindStringAsVarchar:Z
    1145: aload_0
    1146: new           #90                 // class org/postgresql/jdbc2/TimestampUtils
    1149: dup
    1150: aload_0
    1151: getstatic     #91                 // Field org/postgresql/core/ServerVersion.v7_4:Lorg/postgresql/core/ServerVersion;
    1154: invokevirtual #92                 // Method haveMinimumServerVersion:(Lorg/postgresql/core/Version;)Z
    1157: aload_0
    1158: getstatic     #93                 // Field org/postgresql/core/ServerVersion.v8_2:Lorg/postgresql/core/ServerVersion;
    1161: invokevirtual #92                 // Method haveMinimumServerVersion:(Lorg/postgresql/core/Version;)Z
    1164: aload_0
    1165: getfield      #37                 // Field protoConnection:Lorg/postgresql/core/ProtocolConnection;
    1168: invokeinterface #78,  1           // InterfaceMethod org/postgresql/core/ProtocolConnection.getIntegerDateTimes:()Z
    1173: ifne          1180
    1176: iconst_1
    1177: goto          1181
    1180: iconst_0
    1181: invokespecial #94                 // Method org/postgresql/jdbc2/TimestampUtils."<init>":(ZZZ)V
    1184: putfield      #95                 // Field timestampUtils:Lorg/postgresql/jdbc2/TimestampUtils;
    1187: aload_0
    1188: aload_0
    1189: invokevirtual #96                 // Method getQueryExecutor:()Lorg/postgresql/core/QueryExecutor;
    1192: ldc           #97                 // String COMMIT
    1194: invokeinterface #98,  2           // InterfaceMethod org/postgresql/core/QueryExecutor.createSimpleQuery:(Ljava/lang/String;)Lorg/postgresql/core/Query;
    1199: putfield      #99                 // Field commitQuery:Lorg/postgresql/core/Query;
    1202: aload_0
    1203: aload_0
    1204: invokevirtual #96                 // Method getQueryExecutor:()Lorg/postgresql/core/QueryExecutor;
    1207: ldc           #100                // String ROLLBACK
    1209: invokeinterface #98,  2           // InterfaceMethod org/postgresql/core/QueryExecutor.createSimpleQuery:(Ljava/lang/String;)Lorg/postgresql/core/Query;
    1214: putfield      #101                // Field rollbackQuery:Lorg/postgresql/core/Query;
    1217: getstatic     #102                // Field org/postgresql/PGProperty.UNKNOWN_LENGTH:Lorg/postgresql/PGProperty;
    1220: aload         4
    1222: invokevirtual #27                 // Method org/postgresql/PGProperty.getInt:(Ljava/util/Properties;)I
    1225: istore        11
    1227: aload_0
    1228: aload_0
    1229: aload_0
    1230: iload         11
    1232: invokevirtual #103                // Method createTypeInfo:(Lorg/postgresql/core/BaseConnection;I)Lorg/postgresql/core/TypeInfo;
    1235: putfield      #104                // Field _typeCache:Lorg/postgresql/core/TypeInfo;
    1238: aload_0
    1239: aload         4
    1241: invokespecial #105                // Method initObjectTypes:(Ljava/util/Properties;)V
    1244: getstatic     #106                // Field org/postgresql/PGProperty.LOG_UNCLOSED_CONNECTIONS:Lorg/postgresql/PGProperty;
    1247: aload         4
    1249: invokevirtual #32                 // Method org/postgresql/PGProperty.getBoolean:(Ljava/util/Properties;)Z
    1252: ifeq          1268
    1255: aload_0
    1256: new           #107                // class java/lang/Throwable
    1259: dup
    1260: ldc           #108                // String Connection was created at this point:
    1262: invokespecial #109                // Method java/lang/Throwable."<init>":(Ljava/lang/String;)V
    1265: putfield      #110                // Field openStackTrace:Ljava/lang/Throwable;
    1268: aload_0
    1269: getstatic     #111                // Field org/postgresql/PGProperty.DISABLE_COLUMN_SANITISER:Lorg/postgresql/PGProperty;
    1272: aload         4
    1274: invokevirtual #32                 // Method org/postgresql/PGProperty.getBoolean:(Ljava/util/Properties;)Z
    1277: putfield      #9                  // Field disableColumnSanitiser:Z
    1280: aload_0
    1281: new           #112                // class org/postgresql/util/LruCache
    1284: dup
    1285: iconst_0
    1286: getstatic     #113                // Field org/postgresql/PGProperty.PREPARED_STATEMENT_CACHE_QUERIES:Lorg/postgresql/PGProperty;
    1289: aload         4
    1291: invokevirtual #27                 // Method org/postgresql/PGProperty.getInt:(Ljava/util/Properties;)I
    1294: invokestatic  #114                // Method java/lang/Math.max:(II)I
    1297: iconst_0
    1298: getstatic     #115                // Field org/postgresql/PGProperty.PREPARED_STATEMENT_CACHE_SIZE_MIB:Lorg/postgresql/PGProperty;
    1301: aload         4
    1303: invokevirtual #27                 // Method org/postgresql/PGProperty.getInt:(Ljava/util/Properties;)I
    1306: sipush        1024
    1309: imul
    1310: sipush        1024
    1313: imul
    1314: invokestatic  #114                // Method java/lang/Math.max:(II)I
    1317: i2l
    1318: new           #116                // class org/postgresql/jdbc2/CachedQueryCreateAction
    1321: dup
    1322: aload_0
    1323: aload_0
    1324: getfield      #37                 // Field protoConnection:Lorg/postgresql/core/ProtocolConnection;
    1327: invokeinterface #117,  1          // InterfaceMethod org/postgresql/core/ProtocolConnection.getServerVersionNum:()I
    1332: invokespecial #118                // Method org/postgresql/jdbc2/CachedQueryCreateAction."<init>":(Lorg/postgresql/jdbc2/AbstractJdbc2Connection;I)V
    1335: new           #119                // class org/postgresql/jdbc2/AbstractJdbc2Connection$1
    1338: dup
    1339: aload_0
    1340: invokespecial #120                // Method org/postgresql/jdbc2/AbstractJdbc2Connection$1."<init>":(Lorg/postgresql/jdbc2/AbstractJdbc2Connection;)V
    1343: invokespecial #121                // Method org/postgresql/util/LruCache."<init>":(IJLorg/postgresql/util/LruCache$CreateAction;Lorg/postgresql/util/LruCache$EvictAction;)V
    1346: putfield      #3                  // Field statementCache:Lorg/postgresql/util/LruCache;
    1349: return
    Exception table:
       from    to  target type
          66    98   101   any
         101   106   101   any

  private java.util.Set<java.lang.Integer> getOidSet(java.lang.String) throws org.postgresql.util.PSQLException;
    Code:
       0: new           #46                 // class java/util/HashSet
       3: dup
       4: invokespecial #47                 // Method java/util/HashSet."<init>":()V
       7: astore_2
       8: new           #122                // class java/util/StringTokenizer
      11: dup
      12: aload_1
      13: ldc           #123                // String ,
      15: invokespecial #124                // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      18: astore_3
      19: aload_3
      20: invokevirtual #125                // Method java/util/StringTokenizer.hasMoreTokens:()Z
      23: ifeq          50
      26: aload_3
      27: invokevirtual #126                // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      30: astore        4
      32: aload_2
      33: aload         4
      35: invokestatic  #127                // Method org/postgresql/core/Oid.valueOf:(Ljava/lang/String;)I
      38: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      41: invokeinterface #51,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      46: pop
      47: goto          19
      50: aload_2
      51: areturn

  private java.lang.String oidsToString(java.util.Set<java.lang.Integer>);
    Code:
       0: new           #65                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #66                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #128,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #129,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          58
      24: aload_3
      25: invokeinterface #130,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #131                // class java/lang/Integer
      33: astore        4
      35: aload_2
      36: aload         4
      38: invokevirtual #132                // Method java/lang/Integer.intValue:()I
      41: invokestatic  #133                // Method org/postgresql/core/Oid.toString:(I)Ljava/lang/String;
      44: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: pop
      48: aload_2
      49: bipush        44
      51: invokevirtual #134                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      54: pop
      55: goto          15
      58: aload_2
      59: invokevirtual #135                // Method java/lang/StringBuilder.length:()I
      62: ifle          78
      65: aload_2
      66: aload_2
      67: invokevirtual #135                // Method java/lang/StringBuilder.length:()I
      70: iconst_1
      71: isub
      72: invokevirtual #136                // Method java/lang/StringBuilder.setLength:(I)V
      75: goto          85
      78: aload_2
      79: ldc           #137                // String  <none>
      81: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: pop
      85: aload_2
      86: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: areturn

  public org.postgresql.jdbc2.TimestampUtils getTimestampUtils();
    Code:
       0: aload_0
       1: getfield      #95                 // Field timestampUtils:Lorg/postgresql/jdbc2/TimestampUtils;
       4: areturn

  public java.sql.Statement createStatement() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: sipush        1003
       4: sipush        1007
       7: invokevirtual #139                // Method createStatement:(II)Ljava/sql/Statement;
      10: areturn

  public abstract java.sql.Statement createStatement(int, int) throws java.sql.SQLException;

  public java.sql.PreparedStatement prepareStatement(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: sipush        1003
       5: sipush        1007
       8: invokevirtual #140                // Method prepareStatement:(Ljava/lang/String;II)Ljava/sql/PreparedStatement;
      11: areturn

  public abstract java.sql.PreparedStatement prepareStatement(java.lang.String, int, int) throws java.sql.SQLException;

  public java.sql.CallableStatement prepareCall(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: sipush        1003
       5: sipush        1007
       8: invokevirtual #141                // Method prepareCall:(Ljava/lang/String;II)Ljava/sql/CallableStatement;
      11: areturn

  public abstract java.sql.CallableStatement prepareCall(java.lang.String, int, int) throws java.sql.SQLException;

  public java.util.Map getTypeMap() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #142                // Method checkClosed:()V
       4: aload_0
       5: getfield      #143                // Field typemap:Ljava/util/Map;
       8: areturn

  public org.postgresql.core.QueryExecutor getQueryExecutor();
    Code:
       0: aload_0
       1: getfield      #37                 // Field protoConnection:Lorg/postgresql/core/ProtocolConnection;
       4: invokeinterface #144,  1          // InterfaceMethod org/postgresql/core/ProtocolConnection.getQueryExecutor:()Lorg/postgresql/core/QueryExecutor;
       9: areturn

  public void addWarning(java.sql.SQLWarning);
    Code:
       0: aload_0
       1: getfield      #13                 // Field firstWarning:Ljava/sql/SQLWarning;
       4: ifnull        18
       7: aload_0
       8: getfield      #13                 // Field firstWarning:Ljava/sql/SQLWarning;
      11: aload_1
      12: invokevirtual #145                // Method java/sql/SQLWarning.setNextWarning:(Ljava/sql/SQLWarning;)V
      15: goto          23
      18: aload_0
      19: aload_1
      20: putfield      #13                 // Field firstWarning:Ljava/sql/SQLWarning;
      23: return

  public java.sql.ResultSet execSQLQuery(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: sipush        1003
       5: sipush        1007
       8: invokevirtual #146                // Method execSQLQuery:(Ljava/lang/String;II)Ljava/sql/ResultSet;
      11: areturn

  public java.sql.ResultSet execSQLQuery(java.lang.String, int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: invokevirtual #139                // Method createStatement:(II)Ljava/sql/Statement;
       6: checkcast     #147                // class org/postgresql/core/BaseStatement
       9: astore        4
      11: aload         4
      13: aload_1
      14: bipush        16
      16: invokeinterface #149,  3          // InterfaceMethod org/postgresql/core/BaseStatement.executeWithFlags:(Ljava/lang/String;I)Z
      21: istore        5
      23: iload         5
      25: ifne          51
      28: aload         4
      30: invokeinterface #150,  1          // InterfaceMethod org/postgresql/core/BaseStatement.getUpdateCount:()I
      35: iconst_m1
      36: if_icmpeq     51
      39: aload         4
      41: invokeinterface #151,  1          // InterfaceMethod org/postgresql/core/BaseStatement.getMoreResults:()Z
      46: istore        5
      48: goto          23
      51: iload         5
      53: ifne          72
      56: new           #85                 // class org/postgresql/util/PSQLException
      59: dup
      60: ldc           #152                // String No results were returned by the query.
      62: invokestatic  #153                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      65: getstatic     #154                // Field org/postgresql/util/PSQLState.NO_DATA:Lorg/postgresql/util/PSQLState;
      68: invokespecial #89                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      71: athrow
      72: aload         4
      74: invokeinterface #155,  1          // InterfaceMethod org/postgresql/core/BaseStatement.getWarnings:()Ljava/sql/SQLWarning;
      79: astore        6
      81: aload         6
      83: ifnull        92
      86: aload_0
      87: aload         6
      89: invokevirtual #156                // Method addWarning:(Ljava/sql/SQLWarning;)V
      92: aload         4
      94: invokeinterface #157,  1          // InterfaceMethod org/postgresql/core/BaseStatement.getResultSet:()Ljava/sql/ResultSet;
      99: areturn

  public void execSQLUpdate(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #158                // Method createStatement:()Ljava/sql/Statement;
       4: checkcast     #147                // class org/postgresql/core/BaseStatement
       7: astore_2
       8: aload_2
       9: aload_1
      10: bipush        22
      12: invokeinterface #149,  3          // InterfaceMethod org/postgresql/core/BaseStatement.executeWithFlags:(Ljava/lang/String;I)Z
      17: ifeq          36
      20: new           #85                 // class org/postgresql/util/PSQLException
      23: dup
      24: ldc           #159                // String A result was returned when none was expected.
      26: invokestatic  #153                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      29: getstatic     #160                // Field org/postgresql/util/PSQLState.TOO_MANY_RESULTS:Lorg/postgresql/util/PSQLState;
      32: invokespecial #89                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      35: athrow
      36: aload_2
      37: invokeinterface #155,  1          // InterfaceMethod org/postgresql/core/BaseStatement.getWarnings:()Ljava/sql/SQLWarning;
      42: astore_3
      43: aload_3
      44: ifnull        52
      47: aload_0
      48: aload_3
      49: invokevirtual #156                // Method addWarning:(Ljava/sql/SQLWarning;)V
      52: aload_2
      53: invokeinterface #161,  1          // InterfaceMethod org/postgresql/core/BaseStatement.close:()V
      58: return

  public void setCursorName(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #142                // Method checkClosed:()V
       4: return

  public java.lang.String getCursorName() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #142                // Method checkClosed:()V
       4: aconst_null
       5: areturn

  public java.lang.String getURL() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field creatingURL:Ljava/lang/String;
       4: areturn

  public java.lang.String getUserName() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #37                 // Field protoConnection:Lorg/postgresql/core/ProtocolConnection;
       4: invokeinterface #162,  1          // InterfaceMethod org/postgresql/core/ProtocolConnection.getUser:()Ljava/lang/String;
       9: areturn

  public org.postgresql.fastpath.Fastpath getFastpathAPI() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #142                // Method checkClosed:()V
       4: aload_0
       5: getfield      #15                 // Field fastpath:Lorg/postgresql/fastpath/Fastpath;
       8: ifnonnull     23
      11: aload_0
      12: new           #163                // class org/postgresql/fastpath/Fastpath
      15: dup
      16: aload_0
      17: invokespecial #164                // Method org/postgresql/fastpath/Fastpath."<init>":(Lorg/postgresql/core/BaseConnection;)V
      20: putfield      #15                 // Field fastpath:Lorg/postgresql/fastpath/Fastpath;
      23: aload_0
      24: getfield      #15                 // Field fastpath:Lorg/postgresql/fastpath/Fastpath;
      27: areturn

  public org.postgresql.largeobject.LargeObjectManager getLargeObjectAPI() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #142                // Method checkClosed:()V
       4: aload_0
       5: getfield      #16                 // Field largeobject:Lorg/postgresql/largeobject/LargeObjectManager;
       8: ifnonnull     23
      11: aload_0
      12: new           #165                // class org/postgresql/largeobject/LargeObjectManager
      15: dup
      16: aload_0
      17: invokespecial #166                // Method org/postgresql/largeobject/LargeObjectManager."<init>":(Lorg/postgresql/core/BaseConnection;)V
      20: putfield      #16                 // Field largeobject:Lorg/postgresql/largeobject/LargeObjectManager;
      23: aload_0
      24: getfield      #16                 // Field largeobject:Lorg/postgresql/largeobject/LargeObjectManager;
      27: areturn

  public java.lang.Object getObject(java.lang.String, java.lang.String, byte[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #143                // Field typemap:Ljava/util/Map;
       4: ifnull        43
       7: aload_0
       8: getfield      #143                // Field typemap:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #167,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #168                // class java/lang/Class
      20: astore        4
      22: aload         4
      24: ifnull        43
      27: new           #85                 // class org/postgresql/util/PSQLException
      30: dup
      31: ldc           #169                // String Custom type maps are not supported.
      33: invokestatic  #153                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      36: getstatic     #170                // Field org/postgresql/util/PSQLState.NOT_IMPLEMENTED:Lorg/postgresql/util/PSQLState;
      39: invokespecial #89                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      42: athrow
      43: aconst_null
      44: astore        4
      46: aload_0
      47: getfield      #24                 // Field logger:Lorg/postgresql/core/Logger;
      50: invokevirtual #64                 // Method org/postgresql/core/Logger.logDebug:()Z
      53: ifeq          96
      56: aload_0
      57: getfield      #24                 // Field logger:Lorg/postgresql/core/Logger;
      60: new           #65                 // class java/lang/StringBuilder
      63: dup
      64: invokespecial #66                 // Method java/lang/StringBuilder."<init>":()V
      67: ldc           #171                // String Constructing object from type=
      69: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_1
      73: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: ldc           #172                // String  value=<
      78: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: aload_2
      82: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: ldc           #173                // String >
      87: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: invokevirtual #71                 // Method org/postgresql/core/Logger.debug:(Ljava/lang/String;)V
      96: aload_0
      97: getfield      #104                // Field _typeCache:Lorg/postgresql/core/TypeInfo;
     100: aload_1
     101: invokeinterface #174,  2          // InterfaceMethod org/postgresql/core/TypeInfo.getPGobject:(Ljava/lang/String;)Ljava/lang/Class;
     106: astore        5
     108: aload         5
     110: ifnull        172
     113: aload         5
     115: invokevirtual #175                // Method java/lang/Class.newInstance:()Ljava/lang/Object;
     118: checkcast     #176                // class org/postgresql/util/PGobject
     121: checkcast     #176                // class org/postgresql/util/PGobject
     124: astore        4
     126: aload         4
     128: aload_1
     129: invokevirtual #177                // Method org/postgresql/util/PGobject.setType:(Ljava/lang/String;)V
     132: aload_3
     133: ifnull        163
     136: aload         4
     138: instanceof    #178                // class org/postgresql/util/PGBinaryObject
     141: ifeq          163
     144: aload         4
     146: checkcast     #178                // class org/postgresql/util/PGBinaryObject
     149: astore        6
     151: aload         6
     153: aload_3
     154: iconst_0
     155: invokeinterface #179,  3          // InterfaceMethod org/postgresql/util/PGBinaryObject.setByteValue:([BI)V
     160: goto          193
     163: aload         4
     165: aload_2
     166: invokevirtual #180                // Method org/postgresql/util/PGobject.setValue:(Ljava/lang/String;)V
     169: goto          193
     172: new           #176                // class org/postgresql/util/PGobject
     175: dup
     176: invokespecial #181                // Method org/postgresql/util/PGobject."<init>":()V
     179: astore        4
     181: aload         4
     183: aload_1
     184: invokevirtual #177                // Method org/postgresql/util/PGobject.setType:(Ljava/lang/String;)V
     187: aload         4
     189: aload_2
     190: invokevirtual #180                // Method org/postgresql/util/PGobject.setValue:(Ljava/lang/String;)V
     193: aload         4
     195: areturn
     196: astore        5
     198: aload         5
     200: athrow
     201: astore        5
     203: new           #85                 // class org/postgresql/util/PSQLException
     206: dup
     207: ldc           #184                // String Failed to create object for: {0}.
     209: aload_1
     210: invokestatic  #87                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
     213: getstatic     #185                // Field org/postgresql/util/PSQLState.CONNECTION_FAILURE:Lorg/postgresql/util/PSQLState;
     216: aload         5
     218: invokespecial #186                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
     221: athrow
    Exception table:
       from    to  target type
          96   195   196   Class java/sql/SQLException
          96   195   201   Class java/lang/Exception

  protected org.postgresql.core.TypeInfo createTypeInfo(org.postgresql.core.BaseConnection, int);
    Code:
       0: new           #187                // class org/postgresql/jdbc2/TypeInfoCache
       3: dup
       4: aload_1
       5: iload_2
       6: invokespecial #188                // Method org/postgresql/jdbc2/TypeInfoCache."<init>":(Lorg/postgresql/core/BaseConnection;I)V
       9: areturn

  public org.postgresql.core.TypeInfo getTypeInfo();
    Code:
       0: aload_0
       1: getfield      #104                // Field _typeCache:Lorg/postgresql/core/TypeInfo;
       4: areturn

  public void addDataType(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #189                // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       6: invokevirtual #190                // Method addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
       9: goto          40
      12: astore_3
      13: new           #191                // class java/lang/RuntimeException
      16: dup
      17: new           #65                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #66                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #192                // String Cannot register new type:
      26: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_3
      30: invokevirtual #193                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      33: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #194                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: return
    Exception table:
       from    to  target type
           0     9    12   Class java/lang/Exception

  public void addDataType(java.lang.String, java.lang.Class) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #142                // Method checkClosed:()V
       4: aload_0
       5: getfield      #104                // Field _typeCache:Lorg/postgresql/core/TypeInfo;
       8: aload_1
       9: aload_2
      10: invokeinterface #195,  3          // InterfaceMethod org/postgresql/core/TypeInfo.addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
      15: return

  private void initObjectTypes(java.util.Properties) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ldc           #196                // String box
       3: ldc           #197                // class org/postgresql/geometric/PGbox
       5: invokevirtual #190                // Method addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
       8: aload_0
       9: ldc           #198                // String circle
      11: ldc           #199                // class org/postgresql/geometric/PGcircle
      13: invokevirtual #190                // Method addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
      16: aload_0
      17: ldc           #200                // String line
      19: ldc           #201                // class org/postgresql/geometric/PGline
      21: invokevirtual #190                // Method addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
      24: aload_0
      25: ldc           #202                // String lseg
      27: ldc           #203                // class org/postgresql/geometric/PGlseg
      29: invokevirtual #190                // Method addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
      32: aload_0
      33: ldc           #204                // String path
      35: ldc           #205                // class org/postgresql/geometric/PGpath
      37: invokevirtual #190                // Method addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
      40: aload_0
      41: ldc           #206                // String point
      43: ldc           #207                // class org/postgresql/geometric/PGpoint
      45: invokevirtual #190                // Method addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
      48: aload_0
      49: ldc           #208                // String polygon
      51: ldc           #209                // class org/postgresql/geometric/PGpolygon
      53: invokevirtual #190                // Method addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
      56: aload_0
      57: ldc           #210                // String money
      59: ldc           #211                // class org/postgresql/util/PGmoney
      61: invokevirtual #190                // Method addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
      64: aload_0
      65: ldc           #212                // String interval
      67: ldc           #213                // class org/postgresql/util/PGInterval
      69: invokevirtual #190                // Method addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
      72: aload_1
      73: invokevirtual #214                // Method java/util/Properties.propertyNames:()Ljava/util/Enumeration;
      76: astore_2
      77: aload_2
      78: invokeinterface #215,  1          // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      83: ifeq          175
      86: aload_2
      87: invokeinterface #216,  1          // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      92: checkcast     #217                // class java/lang/String
      95: astore_3
      96: aload_3
      97: ldc           #218                // String datatype.
      99: invokevirtual #219                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     102: ifeq          172
     105: aload_3
     106: bipush        9
     108: invokevirtual #220                // Method java/lang/String.substring:(I)Ljava/lang/String;
     111: astore        4
     113: aload_1
     114: aload_3
     115: invokevirtual #221                // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
     118: astore        5
     120: aload         5
     122: invokestatic  #189                // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
     125: astore        6
     127: goto          164
     130: astore        7
     132: new           #85                 // class org/postgresql/util/PSQLException
     135: dup
     136: ldc           #223                // String Unable to load the class {0} responsible for the datatype {1}
     138: iconst_2
     139: anewarray     #224                // class java/lang/Object
     142: dup
     143: iconst_0
     144: aload         5
     146: aastore
     147: dup
     148: iconst_1
     149: aload         4
     151: aastore
     152: invokestatic  #225                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     155: getstatic     #226                // Field org/postgresql/util/PSQLState.SYSTEM_ERROR:Lorg/postgresql/util/PSQLState;
     158: aload         7
     160: invokespecial #186                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
     163: athrow
     164: aload_0
     165: aload         4
     167: aload         6
     169: invokevirtual #190                // Method addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
     172: goto          77
     175: return
    Exception table:
       from    to  target type
         120   127   130   Class java/lang/ClassNotFoundException

  public void close();
    Code:
       0: aload_0
       1: invokespecial #227                // Method releaseTimer:()V
       4: aload_0
       5: getfield      #37                 // Field protoConnection:Lorg/postgresql/core/ProtocolConnection;
       8: invokeinterface #228,  1          // InterfaceMethod org/postgresql/core/ProtocolConnection.close:()V
      13: aload_0
      14: aconst_null
      15: putfield      #110                // Field openStackTrace:Ljava/lang/Throwable;
      18: return

  public java.lang.String nativeSQL(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #142                // Method checkClosed:()V
       4: new           #65                 // class java/lang/StringBuilder
       7: dup
       8: aload_1
       9: invokevirtual #229                // Method java/lang/String.length:()I
      12: invokespecial #230                // Method java/lang/StringBuilder."<init>":(I)V
      15: astore_2
      16: aload_1
      17: iconst_0
      18: aload_2
      19: iconst_0
      20: aload_0
      21: invokevirtual #231                // Method getStandardConformingStrings:()Z
      24: invokestatic  #232                // Method org/postgresql/jdbc2/AbstractJdbc2Statement.parseSql:(Ljava/lang/String;ILjava/lang/StringBuilder;ZZ)I
      27: pop
      28: aload_2
      29: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: areturn

  public synchronized java.sql.SQLWarning getWarnings() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #142                // Method checkClosed:()V
       4: aload_0
       5: getfield      #37                 // Field protoConnection:Lorg/postgresql/core/ProtocolConnection;
       8: invokeinterface #233,  1          // InterfaceMethod org/postgresql/core/ProtocolConnection.getWarnings:()Ljava/sql/SQLWarning;
      13: astore_1
      14: aload_0
      15: getfield      #13                 // Field firstWarning:Ljava/sql/SQLWarning;
      18: ifnonnull     29
      21: aload_0
      22: aload_1
      23: putfield      #13                 // Field firstWarning:Ljava/sql/SQLWarning;
      26: goto          37
      29: aload_0
      30: getfield      #13                 // Field firstWarning:Ljava/sql/SQLWarning;
      33: aload_1
      34: invokevirtual #145                // Method java/sql/SQLWarning.setNextWarning:(Ljava/sql/SQLWarning;)V
      37: aload_0
      38: getfield      #13                 // Field firstWarning:Ljava/sql/SQLWarning;
      41: areturn

  public synchronized void clearWarnings() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #142                // Method checkClosed:()V
       4: aload_0
       5: getfield      #37                 // Field protoConnection:Lorg/postgresql/core/ProtocolConnection;
       8: invokeinterface #233,  1          // InterfaceMethod org/postgresql/core/ProtocolConnection.getWarnings:()Ljava/sql/SQLWarning;
      13: pop
      14: aload_0
      15: aconst_null
      16: putfield      #13                 // Field firstWarning:Ljava/sql/SQLWarning;
      19: return

  public void setReadOnly(boolean) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #142                // Method checkClosed:()V
       4: aload_0
       5: getfield      #37                 // Field protoConnection:Lorg/postgresql/core/ProtocolConnection;
       8: invokeinterface #234,  1          // InterfaceMethod org/postgresql/core/ProtocolConnection.getTransactionState:()I
      13: ifeq          32
      16: new           #85                 // class org/postgresql/util/PSQLException
      19: dup
      20: ldc           #235                // String Cannot change transaction read-only property in the middle of a transaction.
      22: invokestatic  #153                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      25: getstatic     #236                // Field org/postgresql/util/PSQLState.ACTIVE_SQL_TRANSACTION:Lorg/postgresql/util/PSQLState;
      28: invokespecial #89                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      31: athrow
      32: aload_0
      33: getstatic     #91                 // Field org/postgresql/core/ServerVersion.v7_4:Lorg/postgresql/core/ServerVersion;
      36: invokevirtual #92                 // Method haveMinimumServerVersion:(Lorg/postgresql/core/Version;)Z
      39: ifeq          85
      42: iload_1
      43: aload_0
      44: getfield      #12                 // Field readOnly:Z
      47: if_icmpeq     85
      50: new           #65                 // class java/lang/StringBuilder
      53: dup
      54: invokespecial #66                 // Method java/lang/StringBuilder."<init>":()V
      57: ldc           #237                // String SET SESSION CHARACTERISTICS AS TRANSACTION
      59: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: iload_1
      63: ifeq          71
      66: ldc           #238                // String READ ONLY
      68: goto          73
      71: ldc           #239                // String READ WRITE
      73: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: astore_2
      80: aload_0
      81: aload_2
      82: invokevirtual #240                // Method execSQLUpdate:(Ljava/lang/String;)V
      85: aload_0
      86: iload_1
      87: putfield      #12                 // Field readOnly:Z
      90: return

  public boolean isReadOnly() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #142                // Method checkClosed:()V
       4: aload_0
       5: getfield      #12                 // Field readOnly:Z
       8: ireturn

  public void setAutoCommit(boolean) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #142                // Method checkClosed:()V
       4: aload_0
       5: getfield      #11                 // Field autoCommit:Z
       8: iload_1
       9: if_icmpne     13
      12: return
      13: aload_0
      14: getfield      #11                 // Field autoCommit:Z
      17: ifne          24
      20: aload_0
      21: invokevirtual #241                // Method commit:()V
      24: aload_0
      25: iload_1
      26: putfield      #11                 // Field autoCommit:Z
      29: return

  public boolean getAutoCommit() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #142                // Method checkClosed:()V
       4: aload_0
       5: getfield      #11                 // Field autoCommit:Z
       8: ireturn

  private void executeTransactionCommand(org.postgresql.core.Query) throws java.sql.SQLException;
    Code:
       0: bipush        22
       2: istore_2
       3: aload_0
       4: getfield      #30                 // Field prepareThreshold:I
       7: ifne          14
      10: iload_2
      11: iconst_1
      12: ior
      13: istore_2
      14: aload_0
      15: invokevirtual #96                 // Method getQueryExecutor:()Lorg/postgresql/core/QueryExecutor;
      18: aload_1
      19: aconst_null
      20: new           #242                // class org/postgresql/jdbc2/AbstractJdbc2Connection$TransactionCommandHandler
      23: dup
      24: aload_0
      25: aconst_null
      26: invokespecial #243                // Method org/postgresql/jdbc2/AbstractJdbc2Connection$TransactionCommandHandler."<init>":(Lorg/postgresql/jdbc2/AbstractJdbc2Connection;Lorg/postgresql/jdbc2/AbstractJdbc2Connection$1;)V
      29: iconst_0
      30: iconst_0
      31: iload_2
      32: invokeinterface #244,  7          // InterfaceMethod org/postgresql/core/QueryExecutor.execute:(Lorg/postgresql/core/Query;Lorg/postgresql/core/ParameterList;Lorg/postgresql/core/ResultHandler;III)V
      37: return

  public void commit() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #142                // Method checkClosed:()V
       4: aload_0
       5: getfield      #11                 // Field autoCommit:Z
       8: ifeq          27
      11: new           #85                 // class org/postgresql/util/PSQLException
      14: dup
      15: ldc           #245                // String Cannot commit when autoCommit is enabled.
      17: invokestatic  #153                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      20: getstatic     #246                // Field org/postgresql/util/PSQLState.NO_ACTIVE_SQL_TRANSACTION:Lorg/postgresql/util/PSQLState;
      23: invokespecial #89                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      26: athrow
      27: aload_0
      28: getfield      #37                 // Field protoConnection:Lorg/postgresql/core/ProtocolConnection;
      31: invokeinterface #234,  1          // InterfaceMethod org/postgresql/core/ProtocolConnection.getTransactionState:()I
      36: ifeq          47
      39: aload_0
      40: aload_0
      41: getfield      #99                 // Field commitQuery:Lorg/postgresql/core/Query;
      44: invokespecial #247                // Method executeTransactionCommand:(Lorg/postgresql/core/Query;)V
      47: return

  protected void checkClosed() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #248                // Method isClosed:()Z
       4: ifeq          23
       7: new           #85                 // class org/postgresql/util/PSQLException
      10: dup
      11: ldc           #249                // String This connection has been closed.
      13: invokestatic  #153                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      16: getstatic     #250                // Field org/postgresql/util/PSQLState.CONNECTION_DOES_NOT_EXIST:Lorg/postgresql/util/PSQLState;
      19: invokespecial #89                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      22: athrow
      23: return

  public void rollback() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #142                // Method checkClosed:()V
       4: aload_0
       5: getfield      #11                 // Field autoCommit:Z
       8: ifeq          27
      11: new           #85                 // class org/postgresql/util/PSQLException
      14: dup
      15: ldc           #251                // String Cannot rollback when autoCommit is enabled.
      17: invokestatic  #153                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      20: getstatic     #246                // Field org/postgresql/util/PSQLState.NO_ACTIVE_SQL_TRANSACTION:Lorg/postgresql/util/PSQLState;
      23: invokespecial #89                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      26: athrow
      27: aload_0
      28: getfield      #37                 // Field protoConnection:Lorg/postgresql/core/ProtocolConnection;
      31: invokeinterface #234,  1          // InterfaceMethod org/postgresql/core/ProtocolConnection.getTransactionState:()I
      36: ifeq          47
      39: aload_0
      40: aload_0
      41: getfield      #101                // Field rollbackQuery:Lorg/postgresql/core/Query;
      44: invokespecial #247                // Method executeTransactionCommand:(Lorg/postgresql/core/Query;)V
      47: return

  public int getTransactionState();
    Code:
       0: aload_0
       1: getfield      #37                 // Field protoConnection:Lorg/postgresql/core/ProtocolConnection;
       4: invokeinterface #234,  1          // InterfaceMethod org/postgresql/core/ProtocolConnection.getTransactionState:()I
       9: ireturn

  public int getTransactionIsolation() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #142                // Method checkClosed:()V
       4: aconst_null
       5: astore_1
       6: aload_0
       7: getstatic     #252                // Field org/postgresql/core/ServerVersion.v7_3:Lorg/postgresql/core/ServerVersion;
      10: invokevirtual #92                 // Method haveMinimumServerVersion:(Lorg/postgresql/core/Version;)Z
      13: ifeq          49
      16: aload_0
      17: ldc           #253                // String SHOW TRANSACTION ISOLATION LEVEL
      19: invokevirtual #254                // Method execSQLQuery:(Ljava/lang/String;)Ljava/sql/ResultSet;
      22: astore_2
      23: aload_2
      24: invokeinterface #255,  1          // InterfaceMethod java/sql/ResultSet.next:()Z
      29: ifeq          40
      32: aload_2
      33: iconst_1
      34: invokeinterface #256,  2          // InterfaceMethod java/sql/ResultSet.getString:(I)Ljava/lang/String;
      39: astore_1
      40: aload_2
      41: invokeinterface #257,  1          // InterfaceMethod java/sql/ResultSet.close:()V
      46: goto          91
      49: aload_0
      50: invokevirtual #258                // Method getWarnings:()Ljava/sql/SQLWarning;
      53: astore_2
      54: aload_0
      55: invokevirtual #259                // Method clearWarnings:()V
      58: aload_0
      59: ldc           #253                // String SHOW TRANSACTION ISOLATION LEVEL
      61: invokevirtual #240                // Method execSQLUpdate:(Ljava/lang/String;)V
      64: aload_0
      65: invokevirtual #258                // Method getWarnings:()Ljava/sql/SQLWarning;
      68: astore_3
      69: aload_3
      70: ifnull        78
      73: aload_3
      74: invokevirtual #260                // Method java/sql/SQLWarning.getMessage:()Ljava/lang/String;
      77: astore_1
      78: aload_0
      79: invokevirtual #259                // Method clearWarnings:()V
      82: aload_2
      83: ifnull        91
      86: aload_0
      87: aload_2
      88: invokevirtual #156                // Method addWarning:(Ljava/sql/SQLWarning;)V
      91: aload_1
      92: ifnonnull     97
      95: iconst_2
      96: ireturn
      97: aload_1
      98: getstatic     #262                // Field java/util/Locale.US:Ljava/util/Locale;
     101: invokevirtual #263                // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
     104: astore_1
     105: aload_1
     106: ldc_w         #264                // String READ COMMITTED
     109: invokevirtual #265                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
     112: ifeq          117
     115: iconst_2
     116: ireturn
     117: aload_1
     118: ldc_w         #266                // String READ UNCOMMITTED
     121: invokevirtual #265                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
     124: ifeq          129
     127: iconst_1
     128: ireturn
     129: aload_1
     130: ldc_w         #267                // String REPEATABLE READ
     133: invokevirtual #265                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
     136: ifeq          141
     139: iconst_4
     140: ireturn
     141: aload_1
     142: ldc_w         #268                // String SERIALIZABLE
     145: invokevirtual #265                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
     148: ifeq          154
     151: bipush        8
     153: ireturn
     154: iconst_2
     155: ireturn

  public void setTransactionIsolation(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #142                // Method checkClosed:()V
       4: aload_0
       5: getfield      #37                 // Field protoConnection:Lorg/postgresql/core/ProtocolConnection;
       8: invokeinterface #234,  1          // InterfaceMethod org/postgresql/core/ProtocolConnection.getTransactionState:()I
      13: ifeq          33
      16: new           #85                 // class org/postgresql/util/PSQLException
      19: dup
      20: ldc_w         #269                // String Cannot change transaction isolation level in the middle of a transaction.
      23: invokestatic  #153                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      26: getstatic     #236                // Field org/postgresql/util/PSQLState.ACTIVE_SQL_TRANSACTION:Lorg/postgresql/util/PSQLState;
      29: invokespecial #89                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      32: athrow
      33: aload_0
      34: iload_1
      35: invokevirtual #270                // Method getIsolationLevelName:(I)Ljava/lang/String;
      38: astore_2
      39: aload_2
      40: ifnonnull     64
      43: new           #85                 // class org/postgresql/util/PSQLException
      46: dup
      47: ldc_w         #271                // String Transaction isolation level {0} not supported.
      50: iload_1
      51: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      54: invokestatic  #87                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
      57: getstatic     #170                // Field org/postgresql/util/PSQLState.NOT_IMPLEMENTED:Lorg/postgresql/util/PSQLState;
      60: invokespecial #89                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      63: athrow
      64: new           #65                 // class java/lang/StringBuilder
      67: dup
      68: invokespecial #66                 // Method java/lang/StringBuilder."<init>":()V
      71: ldc_w         #272                // String SET SESSION CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL
      74: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_2
      78: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: astore_3
      85: aload_0
      86: aload_3
      87: invokevirtual #240                // Method execSQLUpdate:(Ljava/lang/String;)V
      90: return

  protected java.lang.String getIsolationLevelName(int);
    Code:
       0: aload_0
       1: getstatic     #52                 // Field org/postgresql/core/ServerVersion.v8_0:Lorg/postgresql/core/ServerVersion;
       4: invokevirtual #92                 // Method haveMinimumServerVersion:(Lorg/postgresql/core/Version;)Z
       7: istore_2
       8: iload_1
       9: iconst_2
      10: if_icmpne     17
      13: ldc_w         #264                // String READ COMMITTED
      16: areturn
      17: iload_1
      18: bipush        8
      20: if_icmpne     27
      23: ldc_w         #268                // String SERIALIZABLE
      26: areturn
      27: iload_2
      28: ifeq          40
      31: iload_1
      32: iconst_1
      33: if_icmpne     40
      36: ldc_w         #266                // String READ UNCOMMITTED
      39: areturn
      40: iload_2
      41: ifeq          53
      44: iload_1
      45: iconst_4
      46: if_icmpne     53
      49: ldc_w         #267                // String REPEATABLE READ
      52: areturn
      53: aconst_null
      54: areturn

  public void setCatalog(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #142                // Method checkClosed:()V
       4: return

  public java.lang.String getCatalog() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #142                // Method checkClosed:()V
       4: aload_0
       5: getfield      #37                 // Field protoConnection:Lorg/postgresql/core/ProtocolConnection;
       8: invokeinterface #273,  1          // InterfaceMethod org/postgresql/core/ProtocolConnection.getDatabase:()Ljava/lang/String;
      13: areturn

  protected void finalize() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #110                // Field openStackTrace:Ljava/lang/Throwable;
       4: ifnull        24
       7: aload_0
       8: getfield      #24                 // Field logger:Lorg/postgresql/core/Logger;
      11: ldc_w         #274                // String Finalizing a Connection that was never closed:
      14: invokestatic  #153                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      17: aload_0
      18: getfield      #110                // Field openStackTrace:Ljava/lang/Throwable;
      21: invokevirtual #275                // Method org/postgresql/core/Logger.log:(Ljava/lang/String;Ljava/lang/Throwable;)V
      24: aload_0
      25: invokevirtual #276                // Method close:()V
      28: aload_0
      29: invokespecial #277                // Method java/lang/Object.finalize:()V
      32: goto          42
      35: astore_1
      36: aload_0
      37: invokespecial #277                // Method java/lang/Object.finalize:()V
      40: aload_1
      41: athrow
      42: return
    Exception table:
       from    to  target type
           0    28    35   any

  public java.lang.String getDBVersionNumber();
    Code:
       0: aload_0
       1: getfield      #37                 // Field protoConnection:Lorg/postgresql/core/ProtocolConnection;
       4: invokeinterface #278,  1          // InterfaceMethod org/postgresql/core/ProtocolConnection.getServerVersion:()Ljava/lang/String;
       9: areturn

  private static int integerPart(java.lang.String);
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: invokevirtual #229                // Method java/lang/String.length:()I
       7: if_icmpge     27
      10: aload_0
      11: iload_1
      12: invokevirtual #279                // Method java/lang/String.charAt:(I)C
      15: invokestatic  #280                // Method java/lang/Character.isDigit:(C)Z
      18: ifne          27
      21: iinc          1, 1
      24: goto          2
      27: iload_1
      28: istore_2
      29: iload_2
      30: aload_0
      31: invokevirtual #229                // Method java/lang/String.length:()I
      34: if_icmpge     54
      37: aload_0
      38: iload_2
      39: invokevirtual #279                // Method java/lang/String.charAt:(I)C
      42: invokestatic  #280                // Method java/lang/Character.isDigit:(C)Z
      45: ifeq          54
      48: iinc          2, 1
      51: goto          29
      54: iload_1
      55: iload_2
      56: if_icmpne     61
      59: iconst_0
      60: ireturn
      61: aload_0
      62: iload_1
      63: iload_2
      64: invokevirtual #281                // Method java/lang/String.substring:(II)Ljava/lang/String;
      67: invokestatic  #282                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      70: ireturn

  public int getServerMajorVersion();
    Code:
       0: new           #122                // class java/util/StringTokenizer
       3: dup
       4: aload_0
       5: getfield      #37                 // Field protoConnection:Lorg/postgresql/core/ProtocolConnection;
       8: invokeinterface #278,  1          // InterfaceMethod org/postgresql/core/ProtocolConnection.getServerVersion:()Ljava/lang/String;
      13: ldc_w         #283                // String .
      16: invokespecial #124                // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      19: astore_1
      20: aload_1
      21: invokevirtual #126                // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      24: invokestatic  #284                // Method integerPart:(Ljava/lang/String;)I
      27: ireturn
      28: astore_1
      29: iconst_0
      30: ireturn
    Exception table:
       from    to  target type
           0    27    28   Class java/util/NoSuchElementException

  public int getServerMinorVersion();
    Code:
       0: new           #122                // class java/util/StringTokenizer
       3: dup
       4: aload_0
       5: getfield      #37                 // Field protoConnection:Lorg/postgresql/core/ProtocolConnection;
       8: invokeinterface #278,  1          // InterfaceMethod org/postgresql/core/ProtocolConnection.getServerVersion:()Ljava/lang/String;
      13: ldc_w         #283                // String .
      16: invokespecial #124                // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      19: astore_1
      20: aload_1
      21: invokevirtual #126                // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      24: pop
      25: aload_1
      26: invokevirtual #126                // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      29: invokestatic  #284                // Method integerPart:(Ljava/lang/String;)I
      32: ireturn
      33: astore_1
      34: iconst_0
      35: ireturn
    Exception table:
       from    to  target type
           0    32    33   Class java/util/NoSuchElementException

  public boolean haveMinimumServerVersion(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #40                 // Method org/postgresql/core/Utils.parseServerVersionStr:(Ljava/lang/String;)I
       4: istore_2
       5: iload_2
       6: ifne          31
       9: aload_0
      10: getfield      #37                 // Field protoConnection:Lorg/postgresql/core/ProtocolConnection;
      13: invokeinterface #278,  1          // InterfaceMethod org/postgresql/core/ProtocolConnection.getServerVersion:()Ljava/lang/String;
      18: aload_1
      19: invokevirtual #286                // Method java/lang/String.compareTo:(Ljava/lang/String;)I
      22: iflt          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn
      31: aload_0
      32: iload_2
      33: invokevirtual #287                // Method haveMinimumServerVersion:(I)Z
      36: ireturn

  public boolean haveMinimumServerVersion(int);
    Code:
       0: aload_0
       1: getfield      #37                 // Field protoConnection:Lorg/postgresql/core/ProtocolConnection;
       4: invokeinterface #117,  1          // InterfaceMethod org/postgresql/core/ProtocolConnection.getServerVersionNum:()I
       9: iload_1
      10: if_icmplt     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public boolean haveMinimumServerVersion(org.postgresql.core.Version);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #288,  1          // InterfaceMethod org/postgresql/core/Version.getVersionNum:()I
       7: invokevirtual #287                // Method haveMinimumServerVersion:(I)Z
      10: ireturn

  public boolean haveMinimumCompatibleVersion(int);
    Code:
       0: aload_0
       1: getfield      #43                 // Field compatibleInt:I
       4: iload_1
       5: if_icmplt     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean haveMinimumCompatibleVersion(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #289                // Method org/postgresql/core/ServerVersion.from:(Ljava/lang/String;)Lorg/postgresql/core/Version;
       5: invokevirtual #53                 // Method haveMinimumCompatibleVersion:(Lorg/postgresql/core/Version;)Z
       8: ireturn

  public boolean haveMinimumCompatibleVersion(org.postgresql.core.Version);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #288,  1          // InterfaceMethod org/postgresql/core/Version.getVersionNum:()I
       7: invokevirtual #290                // Method haveMinimumCompatibleVersion:(I)Z
      10: ireturn

  public org.postgresql.core.Encoding getEncoding();
    Code:
       0: aload_0
       1: getfield      #37                 // Field protoConnection:Lorg/postgresql/core/ProtocolConnection;
       4: invokeinterface #291,  1          // InterfaceMethod org/postgresql/core/ProtocolConnection.getEncoding:()Lorg/postgresql/core/Encoding;
       9: areturn

  public byte[] encodeString(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #292                // Method getEncoding:()Lorg/postgresql/core/Encoding;
       4: aload_1
       5: invokevirtual #293                // Method org/postgresql/core/Encoding.encode:(Ljava/lang/String;)[B
       8: areturn
       9: astore_2
      10: new           #85                 // class org/postgresql/util/PSQLException
      13: dup
      14: ldc_w         #295                // String Unable to translate data into the desired encoding.
      17: invokestatic  #153                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      20: getstatic     #296                // Field org/postgresql/util/PSQLState.DATA_ERROR:Lorg/postgresql/util/PSQLState;
      23: aload_2
      24: invokespecial #186                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
      27: athrow
    Exception table:
       from    to  target type
           0     8     9   Class java/io/IOException

  public java.lang.String escapeString(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: aload_1
       2: aload_0
       3: getfield      #37                 // Field protoConnection:Lorg/postgresql/core/ProtocolConnection;
       6: invokeinterface #297,  1          // InterfaceMethod org/postgresql/core/ProtocolConnection.getStandardConformingStrings:()Z
      11: invokestatic  #298                // Method org/postgresql/core/Utils.escapeLiteral:(Ljava/lang/StringBuilder;Ljava/lang/String;Z)Ljava/lang/StringBuilder;
      14: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      17: areturn

  public boolean getStandardConformingStrings();
    Code:
       0: aload_0
       1: getfield      #37                 // Field protoConnection:Lorg/postgresql/core/ProtocolConnection;
       4: invokeinterface #297,  1          // InterfaceMethod org/postgresql/core/ProtocolConnection.getStandardConformingStrings:()Z
       9: ireturn

  public boolean isClosed() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #37                 // Field protoConnection:Lorg/postgresql/core/ProtocolConnection;
       4: invokeinterface #299,  1          // InterfaceMethod org/postgresql/core/ProtocolConnection.isClosed:()Z
       9: ireturn

  public void cancelQuery() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #142                // Method checkClosed:()V
       4: aload_0
       5: getfield      #37                 // Field protoConnection:Lorg/postgresql/core/ProtocolConnection;
       8: invokeinterface #300,  1          // InterfaceMethod org/postgresql/core/ProtocolConnection.sendQueryCancel:()V
      13: return

  public org.postgresql.PGNotification[] getNotifications() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #142                // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #96                 // Method getQueryExecutor:()Lorg/postgresql/core/QueryExecutor;
       8: invokeinterface #301,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.processNotifies:()V
      13: aload_0
      14: getfield      #37                 // Field protoConnection:Lorg/postgresql/core/ProtocolConnection;
      17: invokeinterface #302,  1          // InterfaceMethod org/postgresql/core/ProtocolConnection.getNotifications:()[Lorg/postgresql/PGNotification;
      22: astore_1
      23: aload_1
      24: arraylength
      25: ifne          32
      28: aconst_null
      29: goto          33
      32: aload_1
      33: areturn

  public int getPrepareThreshold();
    Code:
       0: aload_0
       1: getfield      #30                 // Field prepareThreshold:I
       4: ireturn

  public void setDefaultFetchSize(int) throws java.sql.SQLException;
    Code:
       0: iload_1
       1: ifge          21
       4: new           #85                 // class org/postgresql/util/PSQLException
       7: dup
       8: ldc_w         #303                // String Fetch size must be a value greater to or equal to 0.
      11: invokestatic  #153                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      14: getstatic     #88                 // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      17: invokespecial #89                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      20: athrow
      21: aload_0
      22: iload_1
      23: putfield      #304                // Field defaultFetchSize:I
      26: return

  public int getDefaultFetchSize();
    Code:
       0: aload_0
       1: getfield      #304                // Field defaultFetchSize:I
       4: ireturn

  public void setPrepareThreshold(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #30                 // Field prepareThreshold:I
       5: return

  public boolean getForceBinary();
    Code:
       0: aload_0
       1: getfield      #10                 // Field forcebinary:Z
       4: ireturn

  public void setForceBinary(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field forcebinary:Z
       5: return

  public void setTypeMapImpl(java.util.Map) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #143                // Field typemap:Ljava/util/Map;
       5: return

  public org.postgresql.core.Logger getLogger();
    Code:
       0: aload_0
       1: getfield      #24                 // Field logger:Lorg/postgresql/core/Logger;
       4: areturn

  public int getProtocolVersion();
    Code:
       0: aload_0
       1: getfield      #37                 // Field protoConnection:Lorg/postgresql/core/ProtocolConnection;
       4: invokeinterface #48,  1           // InterfaceMethod org/postgresql/core/ProtocolConnection.getProtocolVersion:()I
       9: ireturn

  public boolean getStringVarcharFlag();
    Code:
       0: aload_0
       1: getfield      #83                 // Field bindStringAsVarchar:Z
       4: ireturn

  public org.postgresql.copy.CopyManager getCopyAPI() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #142                // Method checkClosed:()V
       4: aload_0
       5: getfield      #17                 // Field copyManager:Lorg/postgresql/copy/CopyManager;
       8: ifnonnull     23
      11: aload_0
      12: new           #305                // class org/postgresql/copy/CopyManager
      15: dup
      16: aload_0
      17: invokespecial #306                // Method org/postgresql/copy/CopyManager."<init>":(Lorg/postgresql/core/BaseConnection;)V
      20: putfield      #17                 // Field copyManager:Lorg/postgresql/copy/CopyManager;
      23: aload_0
      24: getfield      #17                 // Field copyManager:Lorg/postgresql/copy/CopyManager;
      27: areturn

  public boolean binaryTransferSend(int);
    Code:
       0: aload_0
       1: getfield      #61                 // Field useBinarySendForOids:Ljava/util/Set;
       4: iload_1
       5: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #307,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      13: ireturn

  public int getBackendPID();
    Code:
       0: aload_0
       1: getfield      #37                 // Field protoConnection:Lorg/postgresql/core/ProtocolConnection;
       4: invokeinterface #308,  1          // InterfaceMethod org/postgresql/core/ProtocolConnection.getBackendPID:()I
       9: ireturn

  public boolean isColumnSanitiserDisabled();
    Code:
       0: aload_0
       1: getfield      #9                  // Field disableColumnSanitiser:Z
       4: ireturn

  public void setDisableColumnSanitiser(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field disableColumnSanitiser:Z
       5: return

  protected void abort();
    Code:
       0: aload_0
       1: getfield      #37                 // Field protoConnection:Lorg/postgresql/core/ProtocolConnection;
       4: invokeinterface #309,  1          // InterfaceMethod org/postgresql/core/ProtocolConnection.abort:()V
       9: return

  private synchronized java.util.Timer getTimer();
    Code:
       0: aload_0
       1: getfield      #14                 // Field cancelTimer:Ljava/util/Timer;
       4: ifnonnull     17
       7: aload_0
       8: invokestatic  #310                // Method org/postgresql/Driver.getSharedTimer:()Lorg/postgresql/util/SharedTimer;
      11: invokevirtual #311                // Method org/postgresql/util/SharedTimer.getTimer:()Ljava/util/Timer;
      14: putfield      #14                 // Field cancelTimer:Ljava/util/Timer;
      17: aload_0
      18: getfield      #14                 // Field cancelTimer:Ljava/util/Timer;
      21: areturn

  private synchronized void releaseTimer();
    Code:
       0: aload_0
       1: getfield      #14                 // Field cancelTimer:Ljava/util/Timer;
       4: ifnull        18
       7: aload_0
       8: aconst_null
       9: putfield      #14                 // Field cancelTimer:Ljava/util/Timer;
      12: invokestatic  #310                // Method org/postgresql/Driver.getSharedTimer:()Lorg/postgresql/util/SharedTimer;
      15: invokevirtual #312                // Method org/postgresql/util/SharedTimer.releaseTimer:()V
      18: return

  public void addTimerTask(java.util.TimerTask, long);
    Code:
       0: aload_0
       1: invokespecial #313                // Method getTimer:()Ljava/util/Timer;
       4: astore        4
       6: aload         4
       8: aload_1
       9: lload_2
      10: invokevirtual #314                // Method java/util/Timer.schedule:(Ljava/util/TimerTask;J)V
      13: return

  public void purgeTimerTasks();
    Code:
       0: aload_0
       1: getfield      #14                 // Field cancelTimer:Ljava/util/Timer;
       4: astore_1
       5: aload_1
       6: ifnull        14
       9: aload_1
      10: invokevirtual #315                // Method java/util/Timer.purge:()I
      13: pop
      14: return

  public java.lang.String escapeIdentifier(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: aload_1
       2: invokestatic  #316                // Method org/postgresql/core/Utils.escapeIdentifier:(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;
       5: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       8: areturn

  public java.lang.String escapeLiteral(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: aload_1
       2: aload_0
       3: getfield      #37                 // Field protoConnection:Lorg/postgresql/core/ProtocolConnection;
       6: invokeinterface #297,  1          // InterfaceMethod org/postgresql/core/ProtocolConnection.getStandardConformingStrings:()Z
      11: invokestatic  #298                // Method org/postgresql/core/Utils.escapeLiteral:(Ljava/lang/StringBuilder;Ljava/lang/String;Z)Ljava/lang/StringBuilder;
      14: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      17: areturn

  static {};
    Code:
       0: iconst_1
       1: putstatic     #22                 // Field nextConnectionID:I
       4: return
}
