Compiled from "AbstractJdbc2Statement.java"
public abstract class org.postgresql.jdbc2.AbstractJdbc2Statement implements org.postgresql.core.BaseStatement {
  private static final boolean DEFAULT_FORCE_BINARY_TRANSFERS;

  private boolean forceBinaryTransfers;

  protected java.util.ArrayList<org.postgresql.core.Query> batchStatements;

  protected java.util.ArrayList<org.postgresql.core.ParameterList> batchParameters;

  protected final int resultsettype;

  protected final int concurrency;

  protected int fetchdirection;

  private volatile java.util.TimerTask cancelTimerTask;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<org.postgresql.jdbc2.AbstractJdbc2Statement, java.util.TimerTask> CANCEL_TIMER_UPDATER;

  private volatile int statementState;

  private static final int STATE_IDLE;

  private static final int STATE_IN_QUERY;

  private static final int STATE_CANCELLING;

  private static final int STATE_CANCELLED;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.postgresql.jdbc2.AbstractJdbc2Statement> STATE_UPDATER;

  protected boolean wantsGeneratedKeysOnce;

  public boolean wantsGeneratedKeysAlways;

  protected final org.postgresql.core.BaseConnection connection;

  protected java.sql.SQLWarning warnings;

  protected java.sql.SQLWarning lastWarning;

  protected int maxrows;

  protected int fetchSize;

  protected int timeout;

  protected boolean replaceProcessingEnabled;

  protected org.postgresql.jdbc2.ResultWrapper result;

  protected org.postgresql.jdbc2.ResultWrapper firstUnclosedResult;

  protected org.postgresql.jdbc2.ResultWrapper generatedKeys;

  protected boolean adjustIndex;

  protected boolean outParmBeforeFunc;

  private static final short IN_SQLCODE;

  private static final short IN_STRING;

  private static final short IN_IDENTIFIER;

  private static final short BACKSLASH;

  private static final short ESC_TIMEDATE;

  private static final short ESC_FUNCTION;

  private static final short ESC_OUTERJOIN;

  private static final short ESC_ESCAPECHAR;

  protected final org.postgresql.core.CachedQuery preparedQuery;

  protected final org.postgresql.core.ParameterList preparedParameters;

  protected org.postgresql.core.Query lastSimpleQuery;

  protected int m_prepareThreshold;

  private boolean isFunction;

  private int[] functionReturnType;

  private int[] testReturn;

  private boolean returnTypeSet;

  protected java.lang.Object[] callResult;

  protected int maxfieldSize;

  protected boolean isClosed;

  private int lastIndex;

  public java.sql.ResultSet createDriverResultSet(org.postgresql.core.Field[], java.util.List) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: aload_2
       4: aconst_null
       5: invokevirtual #2                  // Method createResultSet:(Lorg/postgresql/core/Query;[Lorg/postgresql/core/Field;Ljava/util/List;Lorg/postgresql/core/ResultCursor;)Ljava/sql/ResultSet;
       8: areturn

  public org.postgresql.jdbc2.AbstractJdbc2Statement(org.postgresql.jdbc2.AbstractJdbc2Connection, int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #4                  // Field DEFAULT_FORCE_BINARY_TRANSFERS:Z
       8: putfield      #5                  // Field forceBinaryTransfers:Z
      11: aload_0
      12: aconst_null
      13: putfield      #6                  // Field batchStatements:Ljava/util/ArrayList;
      16: aload_0
      17: aconst_null
      18: putfield      #7                  // Field batchParameters:Ljava/util/ArrayList;
      21: aload_0
      22: sipush        1000
      25: putfield      #9                  // Field fetchdirection:I
      28: aload_0
      29: aconst_null
      30: putfield      #10                 // Field cancelTimerTask:Ljava/util/TimerTask;
      33: aload_0
      34: iconst_0
      35: putfield      #12                 // Field statementState:I
      38: aload_0
      39: iconst_0
      40: putfield      #13                 // Field wantsGeneratedKeysOnce:Z
      43: aload_0
      44: iconst_0
      45: putfield      #14                 // Field wantsGeneratedKeysAlways:Z
      48: aload_0
      49: aconst_null
      50: putfield      #15                 // Field warnings:Ljava/sql/SQLWarning;
      53: aload_0
      54: aconst_null
      55: putfield      #16                 // Field lastWarning:Ljava/sql/SQLWarning;
      58: aload_0
      59: iconst_0
      60: putfield      #17                 // Field maxrows:I
      63: aload_0
      64: iconst_0
      65: putfield      #18                 // Field fetchSize:I
      68: aload_0
      69: iconst_0
      70: putfield      #19                 // Field timeout:I
      73: aload_0
      74: iconst_1
      75: putfield      #20                 // Field replaceProcessingEnabled:Z
      78: aload_0
      79: aconst_null
      80: putfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
      83: aload_0
      84: aconst_null
      85: putfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc2/ResultWrapper;
      88: aload_0
      89: aconst_null
      90: putfield      #23                 // Field generatedKeys:Lorg/postgresql/jdbc2/ResultWrapper;
      93: aload_0
      94: iconst_0
      95: putfield      #24                 // Field adjustIndex:Z
      98: aload_0
      99: iconst_0
     100: putfield      #25                 // Field outParmBeforeFunc:Z
     103: aload_0
     104: iconst_0
     105: putfield      #26                 // Field maxfieldSize:I
     108: aload_0
     109: iconst_0
     110: putfield      #27                 // Field isClosed:Z
     113: aload_0
     114: iconst_0
     115: putfield      #28                 // Field lastIndex:I
     118: aload_0
     119: aload_1
     120: putfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
     123: aload_0
     124: aconst_null
     125: putfield      #30                 // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
     128: aload_0
     129: aconst_null
     130: putfield      #31                 // Field preparedParameters:Lorg/postgresql/core/ParameterList;
     133: aload_0
     134: aconst_null
     135: putfield      #32                 // Field lastSimpleQuery:Lorg/postgresql/core/Query;
     138: aload_0
     139: dup
     140: getfield      #5                  // Field forceBinaryTransfers:Z
     143: aload_1
     144: invokevirtual #33                 // Method org/postgresql/jdbc2/AbstractJdbc2Connection.getForceBinary:()Z
     147: ior
     148: putfield      #5                  // Field forceBinaryTransfers:Z
     151: aload_0
     152: iload_2
     153: putfield      #34                 // Field resultsettype:I
     156: aload_0
     157: iload_3
     158: putfield      #35                 // Field concurrency:I
     161: aload_0
     162: aload_1
     163: invokevirtual #36                 // Method org/postgresql/jdbc2/AbstractJdbc2Connection.getDefaultFetchSize:()I
     166: invokevirtual #37                 // Method setFetchSize:(I)V
     169: aload_0
     170: aload_1
     171: invokevirtual #38                 // Method org/postgresql/jdbc2/AbstractJdbc2Connection.getPrepareThreshold:()I
     174: invokevirtual #39                 // Method setPrepareThreshold:(I)V
     177: return

  public org.postgresql.jdbc2.AbstractJdbc2Statement(org.postgresql.jdbc2.AbstractJdbc2Connection, java.lang.String, boolean, int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #4                  // Field DEFAULT_FORCE_BINARY_TRANSFERS:Z
       8: putfield      #5                  // Field forceBinaryTransfers:Z
      11: aload_0
      12: aconst_null
      13: putfield      #6                  // Field batchStatements:Ljava/util/ArrayList;
      16: aload_0
      17: aconst_null
      18: putfield      #7                  // Field batchParameters:Ljava/util/ArrayList;
      21: aload_0
      22: sipush        1000
      25: putfield      #9                  // Field fetchdirection:I
      28: aload_0
      29: aconst_null
      30: putfield      #10                 // Field cancelTimerTask:Ljava/util/TimerTask;
      33: aload_0
      34: iconst_0
      35: putfield      #12                 // Field statementState:I
      38: aload_0
      39: iconst_0
      40: putfield      #13                 // Field wantsGeneratedKeysOnce:Z
      43: aload_0
      44: iconst_0
      45: putfield      #14                 // Field wantsGeneratedKeysAlways:Z
      48: aload_0
      49: aconst_null
      50: putfield      #15                 // Field warnings:Ljava/sql/SQLWarning;
      53: aload_0
      54: aconst_null
      55: putfield      #16                 // Field lastWarning:Ljava/sql/SQLWarning;
      58: aload_0
      59: iconst_0
      60: putfield      #17                 // Field maxrows:I
      63: aload_0
      64: iconst_0
      65: putfield      #18                 // Field fetchSize:I
      68: aload_0
      69: iconst_0
      70: putfield      #19                 // Field timeout:I
      73: aload_0
      74: iconst_1
      75: putfield      #20                 // Field replaceProcessingEnabled:Z
      78: aload_0
      79: aconst_null
      80: putfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
      83: aload_0
      84: aconst_null
      85: putfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc2/ResultWrapper;
      88: aload_0
      89: aconst_null
      90: putfield      #23                 // Field generatedKeys:Lorg/postgresql/jdbc2/ResultWrapper;
      93: aload_0
      94: iconst_0
      95: putfield      #24                 // Field adjustIndex:Z
      98: aload_0
      99: iconst_0
     100: putfield      #25                 // Field outParmBeforeFunc:Z
     103: aload_0
     104: iconst_0
     105: putfield      #26                 // Field maxfieldSize:I
     108: aload_0
     109: iconst_0
     110: putfield      #27                 // Field isClosed:Z
     113: aload_0
     114: iconst_0
     115: putfield      #28                 // Field lastIndex:I
     118: aload_0
     119: aload_1
     120: putfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
     123: aload_0
     124: aconst_null
     125: putfield      #32                 // Field lastSimpleQuery:Lorg/postgresql/core/Query;
     128: aload_1
     129: aload_2
     130: iload_3
     131: invokevirtual #40                 // Method org/postgresql/jdbc2/AbstractJdbc2Connection.borrowQuery:(Ljava/lang/String;Z)Lorg/postgresql/core/CachedQuery;
     134: astore        6
     136: iload_3
     137: ifeq          158
     140: aload_0
     141: aload         6
     143: getfield      #41                 // Field org/postgresql/core/CachedQuery.isFunction:Z
     146: putfield      #42                 // Field isFunction:Z
     149: aload_0
     150: aload         6
     152: getfield      #43                 // Field org/postgresql/core/CachedQuery.outParmBeforeFunc:Z
     155: putfield      #25                 // Field outParmBeforeFunc:Z
     158: aload_0
     159: aload         6
     161: putfield      #30                 // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
     164: aload_0
     165: aload_0
     166: getfield      #30                 // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
     169: getfield      #44                 // Field org/postgresql/core/CachedQuery.query:Lorg/postgresql/core/Query;
     172: invokeinterface #45,  1           // InterfaceMethod org/postgresql/core/Query.createParameterList:()Lorg/postgresql/core/ParameterList;
     177: putfield      #31                 // Field preparedParameters:Lorg/postgresql/core/ParameterList;
     180: aload_0
     181: getfield      #42                 // Field isFunction:Z
     184: ifeq          216
     187: aload_0
     188: getfield      #31                 // Field preparedParameters:Lorg/postgresql/core/ParameterList;
     191: invokeinterface #46,  1           // InterfaceMethod org/postgresql/core/ParameterList.getInParameterCount:()I
     196: iconst_1
     197: iadd
     198: istore        7
     200: aload_0
     201: iload         7
     203: newarray       int
     205: putfield      #47                 // Field testReturn:[I
     208: aload_0
     209: iload         7
     211: newarray       int
     213: putfield      #48                 // Field functionReturnType:[I
     216: aload_0
     217: dup
     218: getfield      #5                  // Field forceBinaryTransfers:Z
     221: aload_1
     222: invokevirtual #33                 // Method org/postgresql/jdbc2/AbstractJdbc2Connection.getForceBinary:()Z
     225: ior
     226: putfield      #5                  // Field forceBinaryTransfers:Z
     229: aload_0
     230: iload         4
     232: putfield      #34                 // Field resultsettype:I
     235: aload_0
     236: iload         5
     238: putfield      #35                 // Field concurrency:I
     241: aload_0
     242: aload_1
     243: invokevirtual #36                 // Method org/postgresql/jdbc2/AbstractJdbc2Connection.getDefaultFetchSize:()I
     246: invokevirtual #37                 // Method setFetchSize:(I)V
     249: aload_0
     250: aload_1
     251: invokevirtual #38                 // Method org/postgresql/jdbc2/AbstractJdbc2Connection.getPrepareThreshold:()I
     254: invokevirtual #39                 // Method setPrepareThreshold:(I)V
     257: return

  public abstract java.sql.ResultSet createResultSet(org.postgresql.core.Query, org.postgresql.core.Field[], java.util.List, org.postgresql.core.ResultCursor) throws java.sql.SQLException;

  public org.postgresql.core.BaseConnection getPGConnection();
    Code:
       0: aload_0
       1: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
       4: areturn

  public java.lang.String getFetchingCursorName();
    Code:
       0: aconst_null
       1: areturn

  public int getFetchSize();
    Code:
       0: aload_0
       1: getfield      #18                 // Field fetchSize:I
       4: ireturn

  protected boolean wantsScrollableResultSet();
    Code:
       0: aload_0
       1: getfield      #34                 // Field resultsettype:I
       4: sipush        1003
       7: if_icmpeq     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  protected boolean wantsHoldableResultSet();
    Code:
       0: iconst_0
       1: ireturn

  public java.sql.ResultSet executeQuery(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
       4: ifnull        23
       7: new           #49                 // class org/postgresql/util/PSQLException
      10: dup
      11: ldc           #50                 // String Can\'\'t use query methods that take a query string on a PreparedStatement.
      13: invokestatic  #51                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      16: getstatic     #52                 // Field org/postgresql/util/PSQLState.WRONG_OBJECT_TYPE:Lorg/postgresql/util/PSQLState;
      19: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      22: athrow
      23: aload_0
      24: getfield      #5                  // Field forceBinaryTransfers:Z
      27: ifeq          164
      30: aload_0
      31: invokevirtual #54                 // Method clearWarnings:()V
      34: aload_0
      35: getfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc2/ResultWrapper;
      38: ifnull        77
      41: aload_0
      42: getfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc2/ResultWrapper;
      45: invokevirtual #55                 // Method org/postgresql/jdbc2/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      48: ifnull        63
      51: aload_0
      52: getfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc2/ResultWrapper;
      55: invokevirtual #55                 // Method org/postgresql/jdbc2/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      58: invokeinterface #56,  1           // InterfaceMethod java/sql/ResultSet.close:()V
      63: aload_0
      64: aload_0
      65: getfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc2/ResultWrapper;
      68: invokevirtual #57                 // Method org/postgresql/jdbc2/ResultWrapper.getNext:()Lorg/postgresql/jdbc2/ResultWrapper;
      71: putfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc2/ResultWrapper;
      74: goto          34
      77: aload_0
      78: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      81: aload_1
      82: aload_0
      83: getfield      #34                 // Field resultsettype:I
      86: aload_0
      87: getfield      #35                 // Field concurrency:I
      90: aload_0
      91: invokevirtual #58                 // Method getResultSetHoldability:()I
      94: invokeinterface #59,  5           // InterfaceMethod org/postgresql/core/BaseConnection.prepareStatement:(Ljava/lang/String;III)Ljava/sql/PreparedStatement;
      99: astore_2
     100: aload_2
     101: aload_0
     102: invokevirtual #60                 // Method getMaxFieldSize:()I
     105: invokeinterface #61,  2           // InterfaceMethod java/sql/PreparedStatement.setMaxFieldSize:(I)V
     110: aload_2
     111: aload_0
     112: invokevirtual #62                 // Method getFetchSize:()I
     115: invokeinterface #63,  2           // InterfaceMethod java/sql/PreparedStatement.setFetchSize:(I)V
     120: aload_2
     121: aload_0
     122: invokevirtual #64                 // Method getFetchDirection:()I
     125: invokeinterface #65,  2           // InterfaceMethod java/sql/PreparedStatement.setFetchDirection:(I)V
     130: aload_2
     131: invokeinterface #66,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
     136: checkcast     #67                 // class org/postgresql/jdbc2/AbstractJdbc2ResultSet
     139: astore_3
     140: aload_3
     141: aload_0
     142: invokevirtual #68                 // Method org/postgresql/jdbc2/AbstractJdbc2ResultSet.registerRealStatement:(Ljava/sql/Statement;)V
     145: aload_0
     146: aload_0
     147: new           #69                 // class org/postgresql/jdbc2/ResultWrapper
     150: dup
     151: aload_3
     152: invokespecial #70                 // Method org/postgresql/jdbc2/ResultWrapper."<init>":(Ljava/sql/ResultSet;)V
     155: dup_x1
     156: putfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc2/ResultWrapper;
     159: putfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
     162: aload_3
     163: areturn
     164: aload_0
     165: aload_1
     166: iconst_0
     167: invokevirtual #71                 // Method executeWithFlags:(Ljava/lang/String;I)Z
     170: ifne          189
     173: new           #49                 // class org/postgresql/util/PSQLException
     176: dup
     177: ldc           #72                 // String No results were returned by the query.
     179: invokestatic  #51                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
     182: getstatic     #73                 // Field org/postgresql/util/PSQLState.NO_DATA:Lorg/postgresql/util/PSQLState;
     185: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     188: athrow
     189: aload_0
     190: getfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
     193: invokevirtual #57                 // Method org/postgresql/jdbc2/ResultWrapper.getNext:()Lorg/postgresql/jdbc2/ResultWrapper;
     196: ifnull        215
     199: new           #49                 // class org/postgresql/util/PSQLException
     202: dup
     203: ldc           #74                 // String Multiple ResultSets were returned by the query.
     205: invokestatic  #51                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
     208: getstatic     #75                 // Field org/postgresql/util/PSQLState.TOO_MANY_RESULTS:Lorg/postgresql/util/PSQLState;
     211: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     214: athrow
     215: aload_0
     216: getfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
     219: invokevirtual #55                 // Method org/postgresql/jdbc2/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
     222: areturn

  public java.sql.ResultSet executeQuery() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #76                 // Method executeWithFlags:(I)Z
       5: ifne          24
       8: new           #49                 // class org/postgresql/util/PSQLException
      11: dup
      12: ldc           #72                 // String No results were returned by the query.
      14: invokestatic  #51                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      17: getstatic     #73                 // Field org/postgresql/util/PSQLState.NO_DATA:Lorg/postgresql/util/PSQLState;
      20: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      23: athrow
      24: aload_0
      25: getfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
      28: invokevirtual #57                 // Method org/postgresql/jdbc2/ResultWrapper.getNext:()Lorg/postgresql/jdbc2/ResultWrapper;
      31: ifnull        50
      34: new           #49                 // class org/postgresql/util/PSQLException
      37: dup
      38: ldc           #74                 // String Multiple ResultSets were returned by the query.
      40: invokestatic  #51                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      43: getstatic     #75                 // Field org/postgresql/util/PSQLState.TOO_MANY_RESULTS:Lorg/postgresql/util/PSQLState;
      46: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      49: athrow
      50: aload_0
      51: getfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
      54: invokevirtual #55                 // Method org/postgresql/jdbc2/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      57: areturn

  public int executeUpdate(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
       4: ifnull        23
       7: new           #49                 // class org/postgresql/util/PSQLException
      10: dup
      11: ldc           #50                 // String Can\'\'t use query methods that take a query string on a PreparedStatement.
      13: invokestatic  #51                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      16: getstatic     #52                 // Field org/postgresql/util/PSQLState.WRONG_OBJECT_TYPE:Lorg/postgresql/util/PSQLState;
      19: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      22: athrow
      23: aload_0
      24: getfield      #42                 // Field isFunction:Z
      27: ifeq          39
      30: aload_0
      31: aload_1
      32: iconst_0
      33: invokevirtual #71                 // Method executeWithFlags:(Ljava/lang/String;I)Z
      36: pop
      37: iconst_0
      38: ireturn
      39: aload_0
      40: aload_1
      41: iconst_4
      42: invokevirtual #71                 // Method executeWithFlags:(Ljava/lang/String;I)Z
      45: pop
      46: aload_0
      47: getfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
      50: astore_2
      51: aload_2
      52: ifnull        86
      55: aload_2
      56: invokevirtual #55                 // Method org/postgresql/jdbc2/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      59: ifnull        78
      62: new           #49                 // class org/postgresql/util/PSQLException
      65: dup
      66: ldc           #78                 // String A result was returned when none was expected.
      68: invokestatic  #51                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      71: getstatic     #75                 // Field org/postgresql/util/PSQLState.TOO_MANY_RESULTS:Lorg/postgresql/util/PSQLState;
      74: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      77: athrow
      78: aload_2
      79: invokevirtual #57                 // Method org/postgresql/jdbc2/ResultWrapper.getNext:()Lorg/postgresql/jdbc2/ResultWrapper;
      82: astore_2
      83: goto          51
      86: aload_0
      87: invokevirtual #79                 // Method getUpdateCount:()I
      90: ireturn

  public int executeUpdate() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #42                 // Field isFunction:Z
       4: ifeq          15
       7: aload_0
       8: iconst_0
       9: invokevirtual #76                 // Method executeWithFlags:(I)Z
      12: pop
      13: iconst_0
      14: ireturn
      15: aload_0
      16: iconst_4
      17: invokevirtual #76                 // Method executeWithFlags:(I)Z
      20: pop
      21: aload_0
      22: getfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
      25: astore_1
      26: aload_1
      27: ifnull        61
      30: aload_1
      31: invokevirtual #55                 // Method org/postgresql/jdbc2/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      34: ifnull        53
      37: new           #49                 // class org/postgresql/util/PSQLException
      40: dup
      41: ldc           #78                 // String A result was returned when none was expected.
      43: invokestatic  #51                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      46: getstatic     #75                 // Field org/postgresql/util/PSQLState.TOO_MANY_RESULTS:Lorg/postgresql/util/PSQLState;
      49: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      52: athrow
      53: aload_1
      54: invokevirtual #57                 // Method org/postgresql/jdbc2/ResultWrapper.getNext:()Lorg/postgresql/jdbc2/ResultWrapper;
      57: astore_1
      58: goto          26
      61: aload_0
      62: invokevirtual #79                 // Method getUpdateCount:()I
      65: ireturn

  public boolean execute(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
       4: ifnull        23
       7: new           #49                 // class org/postgresql/util/PSQLException
      10: dup
      11: ldc           #50                 // String Can\'\'t use query methods that take a query string on a PreparedStatement.
      13: invokestatic  #51                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      16: getstatic     #52                 // Field org/postgresql/util/PSQLState.WRONG_OBJECT_TYPE:Lorg/postgresql/util/PSQLState;
      19: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      22: athrow
      23: aload_0
      24: aload_1
      25: iconst_0
      26: invokevirtual #71                 // Method executeWithFlags:(Ljava/lang/String;I)Z
      29: ireturn

  public boolean executeWithFlags(java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_1
       5: aload_0
       6: getfield      #20                 // Field replaceProcessingEnabled:Z
       9: aload_0
      10: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      13: invokeinterface #81,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getStandardConformingStrings:()Z
      18: invokestatic  #82                 // Method replaceProcessing:(Ljava/lang/String;ZZ)Ljava/lang/String;
      21: astore_1
      22: aload_0
      23: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      26: invokeinterface #83,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getQueryExecutor:()Lorg/postgresql/core/QueryExecutor;
      31: aload_1
      32: invokeinterface #84,  2           // InterfaceMethod org/postgresql/core/QueryExecutor.createSimpleQuery:(Ljava/lang/String;)Lorg/postgresql/core/Query;
      37: astore_3
      38: aload_0
      39: aload_3
      40: aconst_null
      41: iconst_1
      42: iload_2
      43: ior
      44: invokevirtual #85                 // Method execute:(Lorg/postgresql/core/Query;Lorg/postgresql/core/ParameterList;I)V
      47: aload_0
      48: aload_3
      49: putfield      #32                 // Field lastSimpleQuery:Lorg/postgresql/core/Query;
      52: aload_0
      53: getfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
      56: ifnull        73
      59: aload_0
      60: getfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
      63: invokevirtual #55                 // Method org/postgresql/jdbc2/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      66: ifnull        73
      69: iconst_1
      70: goto          74
      73: iconst_0
      74: ireturn

  public boolean execute() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #76                 // Method executeWithFlags:(I)Z
       5: ireturn

  public boolean executeWithFlags(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: aload_0
       6: getfield      #30                 // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
       9: getfield      #44                 // Field org/postgresql/core/CachedQuery.query:Lorg/postgresql/core/Query;
      12: aload_0
      13: getfield      #31                 // Field preparedParameters:Lorg/postgresql/core/ParameterList;
      16: iload_1
      17: invokevirtual #85                 // Method execute:(Lorg/postgresql/core/Query;Lorg/postgresql/core/ParameterList;I)V
      20: aload_0
      21: getfield      #42                 // Field isFunction:Z
      24: ifeq          410
      27: aload_0
      28: getfield      #86                 // Field returnTypeSet:Z
      31: ifeq          410
      34: aload_0
      35: getfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
      38: ifnull        51
      41: aload_0
      42: getfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
      45: invokevirtual #55                 // Method org/postgresql/jdbc2/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      48: ifnonnull     67
      51: new           #49                 // class org/postgresql/util/PSQLException
      54: dup
      55: ldc           #87                 // String A CallableStatement was executed with nothing returned.
      57: invokestatic  #51                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      60: getstatic     #73                 // Field org/postgresql/util/PSQLState.NO_DATA:Lorg/postgresql/util/PSQLState;
      63: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      66: athrow
      67: aload_0
      68: getfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
      71: invokevirtual #55                 // Method org/postgresql/jdbc2/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      74: astore_2
      75: aload_2
      76: invokeinterface #88,  1           // InterfaceMethod java/sql/ResultSet.next:()Z
      81: ifne          100
      84: new           #49                 // class org/postgresql/util/PSQLException
      87: dup
      88: ldc           #87                 // String A CallableStatement was executed with nothing returned.
      90: invokestatic  #51                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      93: getstatic     #73                 // Field org/postgresql/util/PSQLState.NO_DATA:Lorg/postgresql/util/PSQLState;
      96: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      99: athrow
     100: aload_2
     101: invokeinterface #89,  1           // InterfaceMethod java/sql/ResultSet.getMetaData:()Ljava/sql/ResultSetMetaData;
     106: invokeinterface #90,  1           // InterfaceMethod java/sql/ResultSetMetaData.getColumnCount:()I
     111: istore_3
     112: aload_0
     113: getfield      #31                 // Field preparedParameters:Lorg/postgresql/core/ParameterList;
     116: invokeinterface #91,  1           // InterfaceMethod org/postgresql/core/ParameterList.getOutParameterCount:()I
     121: istore        4
     123: iload_3
     124: iload         4
     126: if_icmpeq     145
     129: new           #49                 // class org/postgresql/util/PSQLException
     132: dup
     133: ldc           #92                 // String A CallableStatement was executed with an invalid number of parameters
     135: invokestatic  #51                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
     138: getstatic     #93                 // Field org/postgresql/util/PSQLState.SYNTAX_ERROR:Lorg/postgresql/util/PSQLState;
     141: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     144: athrow
     145: aload_0
     146: iconst_0
     147: putfield      #28                 // Field lastIndex:I
     150: aload_0
     151: aload_0
     152: getfield      #31                 // Field preparedParameters:Lorg/postgresql/core/ParameterList;
     155: invokeinterface #94,  1           // InterfaceMethod org/postgresql/core/ParameterList.getParameterCount:()I
     160: iconst_1
     161: iadd
     162: anewarray     #95                 // class java/lang/Object
     165: putfield      #96                 // Field callResult:[Ljava/lang/Object;
     168: iconst_0
     169: istore        5
     171: iconst_0
     172: istore        6
     174: iload         5
     176: iload_3
     177: if_icmpge     397
     180: iload         6
     182: aload_0
     183: getfield      #48                 // Field functionReturnType:[I
     186: arraylength
     187: if_icmpge     206
     190: aload_0
     191: getfield      #48                 // Field functionReturnType:[I
     194: iload         6
     196: iaload
     197: ifne          206
     200: iinc          6, 1
     203: goto          180
     206: aload_0
     207: getfield      #96                 // Field callResult:[Ljava/lang/Object;
     210: iload         6
     212: aload_2
     213: iload         5
     215: iconst_1
     216: iadd
     217: invokeinterface #97,  2           // InterfaceMethod java/sql/ResultSet.getObject:(I)Ljava/lang/Object;
     222: aastore
     223: aload_2
     224: invokeinterface #89,  1           // InterfaceMethod java/sql/ResultSet.getMetaData:()Ljava/sql/ResultSetMetaData;
     229: iload         5
     231: iconst_1
     232: iadd
     233: invokeinterface #98,  2           // InterfaceMethod java/sql/ResultSetMetaData.getColumnType:(I)I
     238: istore        7
     240: iload         7
     242: aload_0
     243: getfield      #48                 // Field functionReturnType:[I
     246: iload         6
     248: iaload
     249: if_icmpeq     388
     252: iload         7
     254: bipush        8
     256: if_icmpne     307
     259: aload_0
     260: getfield      #48                 // Field functionReturnType:[I
     263: iload         6
     265: iaload
     266: bipush        7
     268: if_icmpne     307
     271: aload_0
     272: getfield      #96                 // Field callResult:[Ljava/lang/Object;
     275: iload         6
     277: aaload
     278: ifnull        388
     281: aload_0
     282: getfield      #96                 // Field callResult:[Ljava/lang/Object;
     285: iload         6
     287: aload_0
     288: getfield      #96                 // Field callResult:[Ljava/lang/Object;
     291: iload         6
     293: aaload
     294: checkcast     #100                // class java/lang/Double
     297: invokevirtual #101                // Method java/lang/Double.floatValue:()F
     300: invokestatic  #102                // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
     303: aastore
     304: goto          388
     307: new           #49                 // class org/postgresql/util/PSQLException
     310: dup
     311: ldc           #103                // String A CallableStatement function was executed and the out parameter {0} was of type {1} however type {2} was registered.
     313: iconst_3
     314: anewarray     #95                 // class java/lang/Object
     317: dup
     318: iconst_0
     319: iload         5
     321: iconst_1
     322: iadd
     323: invokestatic  #104                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     326: aastore
     327: dup
     328: iconst_1
     329: new           #105                // class java/lang/StringBuilder
     332: dup
     333: invokespecial #106                // Method java/lang/StringBuilder."<init>":()V
     336: ldc           #107                // String java.sql.Types=
     338: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     341: iload         7
     343: invokevirtual #109                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     346: invokevirtual #110                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     349: aastore
     350: dup
     351: iconst_2
     352: new           #105                // class java/lang/StringBuilder
     355: dup
     356: invokespecial #106                // Method java/lang/StringBuilder."<init>":()V
     359: ldc           #107                // String java.sql.Types=
     361: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     364: aload_0
     365: getfield      #48                 // Field functionReturnType:[I
     368: iload         6
     370: iaload
     371: invokevirtual #109                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     374: invokevirtual #110                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     377: aastore
     378: invokestatic  #111                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     381: getstatic     #112                // Field org/postgresql/util/PSQLState.DATA_TYPE_MISMATCH:Lorg/postgresql/util/PSQLState;
     384: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     387: athrow
     388: iinc          5, 1
     391: iinc          6, 1
     394: goto          174
     397: aload_2
     398: invokeinterface #56,  1           // InterfaceMethod java/sql/ResultSet.close:()V
     403: aload_0
     404: aconst_null
     405: putfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
     408: iconst_0
     409: ireturn
     410: aload_0
     411: getfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
     414: ifnull        431
     417: aload_0
     418: getfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
     421: invokevirtual #55                 // Method org/postgresql/jdbc2/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
     424: ifnull        431
     427: iconst_1
     428: goto          432
     431: iconst_0
     432: ireturn

  protected void closeForNextExecution() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method clearWarnings:()V
       4: aload_0
       5: getfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc2/ResultWrapper;
       8: ifnull        43
      11: aload_0
      12: getfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc2/ResultWrapper;
      15: invokevirtual #55                 // Method org/postgresql/jdbc2/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      18: astore_1
      19: aload_1
      20: ifnull        29
      23: aload_1
      24: invokeinterface #56,  1           // InterfaceMethod java/sql/ResultSet.close:()V
      29: aload_0
      30: aload_0
      31: getfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc2/ResultWrapper;
      34: invokevirtual #57                 // Method org/postgresql/jdbc2/ResultWrapper.getNext:()Lorg/postgresql/jdbc2/ResultWrapper;
      37: putfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc2/ResultWrapper;
      40: goto          4
      43: aload_0
      44: aconst_null
      45: putfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
      48: aload_0
      49: getfield      #32                 // Field lastSimpleQuery:Lorg/postgresql/core/Query;
      52: ifnull        69
      55: aload_0
      56: getfield      #32                 // Field lastSimpleQuery:Lorg/postgresql/core/Query;
      59: invokeinterface #113,  1          // InterfaceMethod org/postgresql/core/Query.close:()V
      64: aload_0
      65: aconst_null
      66: putfield      #32                 // Field lastSimpleQuery:Lorg/postgresql/core/Query;
      69: aload_0
      70: getfield      #23                 // Field generatedKeys:Lorg/postgresql/jdbc2/ResultWrapper;
      73: ifnull        103
      76: aload_0
      77: getfield      #23                 // Field generatedKeys:Lorg/postgresql/jdbc2/ResultWrapper;
      80: invokevirtual #55                 // Method org/postgresql/jdbc2/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      83: ifnull        98
      86: aload_0
      87: getfield      #23                 // Field generatedKeys:Lorg/postgresql/jdbc2/ResultWrapper;
      90: invokevirtual #55                 // Method org/postgresql/jdbc2/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      93: invokeinterface #56,  1           // InterfaceMethod java/sql/ResultSet.close:()V
      98: aload_0
      99: aconst_null
     100: putfield      #23                 // Field generatedKeys:Lorg/postgresql/jdbc2/ResultWrapper;
     103: return

  protected void execute(org.postgresql.core.Query, org.postgresql.core.ParameterList, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #114                // Method closeForNextExecution:()V
       4: aload_0
       5: getfield      #18                 // Field fetchSize:I
       8: ifle          42
      11: aload_0
      12: invokevirtual #115                // Method wantsScrollableResultSet:()Z
      15: ifne          42
      18: aload_0
      19: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      22: invokeinterface #116,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getAutoCommit:()Z
      27: ifne          42
      30: aload_0
      31: invokevirtual #117                // Method wantsHoldableResultSet:()Z
      34: ifne          42
      37: iload_3
      38: bipush        8
      40: ior
      41: istore_3
      42: aload_0
      43: getfield      #13                 // Field wantsGeneratedKeysOnce:Z
      46: ifne          56
      49: aload_0
      50: getfield      #14                 // Field wantsGeneratedKeysAlways:Z
      53: ifeq          72
      56: iload_3
      57: bipush        64
      59: ior
      60: istore_3
      61: iload_3
      62: iconst_4
      63: iand
      64: ifeq          72
      67: iload_3
      68: bipush        -5
      70: iand
      71: istore_3
      72: aload_0
      73: getfield      #30                 // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
      76: ifnull        129
      79: aload_0
      80: getfield      #30                 // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
      83: getfield      #44                 // Field org/postgresql/core/CachedQuery.query:Lorg/postgresql/core/Query;
      86: aload_1
      87: if_acmpne     129
      90: aload_0
      91: getfield      #30                 // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
      94: invokevirtual #118                // Method org/postgresql/core/CachedQuery.increaseExecuteCount:()V
      97: aload_0
      98: getfield      #119                // Field m_prepareThreshold:I
     101: ifeq          118
     104: aload_0
     105: getfield      #30                 // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
     108: invokevirtual #120                // Method org/postgresql/core/CachedQuery.getExecuteCount:()I
     111: aload_0
     112: getfield      #119                // Field m_prepareThreshold:I
     115: if_icmpge     129
     118: aload_0
     119: getfield      #5                  // Field forceBinaryTransfers:Z
     122: ifne          129
     125: iload_3
     126: iconst_1
     127: ior
     128: istore_3
     129: aload_0
     130: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
     133: invokeinterface #116,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getAutoCommit:()Z
     138: ifeq          146
     141: iload_3
     142: bipush        16
     144: ior
     145: istore_3
     146: aload_0
     147: getfield      #35                 // Field concurrency:I
     150: sipush        1007
     153: if_icmpeq     162
     156: iload_3
     157: sipush        256
     160: ior
     161: istore_3
     162: aload_1
     163: invokeinterface #121,  1          // InterfaceMethod org/postgresql/core/Query.isEmpty:()Z
     168: ifeq          176
     171: iload_3
     172: bipush        16
     174: ior
     175: istore_3
     176: aload_1
     177: invokeinterface #122,  1          // InterfaceMethod org/postgresql/core/Query.isStatementDescribed:()Z
     182: ifne          252
     185: aload_0
     186: getfield      #5                  // Field forceBinaryTransfers:Z
     189: ifeq          252
     192: iload_3
     193: bipush        32
     195: ior
     196: istore        4
     198: new           #123                // class org/postgresql/jdbc2/AbstractJdbc2Statement$StatementResultHandler
     201: dup
     202: aload_0
     203: invokespecial #124                // Method org/postgresql/jdbc2/AbstractJdbc2Statement$StatementResultHandler."<init>":(Lorg/postgresql/jdbc2/AbstractJdbc2Statement;)V
     206: astore        5
     208: aload_0
     209: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
     212: invokeinterface #83,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getQueryExecutor:()Lorg/postgresql/core/QueryExecutor;
     217: aload_1
     218: aload_2
     219: aload         5
     221: iconst_0
     222: iconst_0
     223: iload         4
     225: invokeinterface #125,  7          // InterfaceMethod org/postgresql/core/QueryExecutor.execute:(Lorg/postgresql/core/Query;Lorg/postgresql/core/ParameterList;Lorg/postgresql/core/ResultHandler;III)V
     230: aload         5
     232: invokevirtual #126                // Method org/postgresql/jdbc2/AbstractJdbc2Statement$StatementResultHandler.getResults:()Lorg/postgresql/jdbc2/ResultWrapper;
     235: astore        6
     237: aload         6
     239: ifnull        252
     242: aload         6
     244: invokevirtual #55                 // Method org/postgresql/jdbc2/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
     247: invokeinterface #56,  1           // InterfaceMethod java/sql/ResultSet.close:()V
     252: new           #123                // class org/postgresql/jdbc2/AbstractJdbc2Statement$StatementResultHandler
     255: dup
     256: aload_0
     257: invokespecial #124                // Method org/postgresql/jdbc2/AbstractJdbc2Statement$StatementResultHandler."<init>":(Lorg/postgresql/jdbc2/AbstractJdbc2Statement;)V
     260: astore        4
     262: aload_0
     263: aconst_null
     264: putfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
     267: aload_0
     268: invokespecial #127                // Method startTimer:()V
     271: aload_0
     272: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
     275: invokeinterface #83,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getQueryExecutor:()Lorg/postgresql/core/QueryExecutor;
     280: aload_1
     281: aload_2
     282: aload         4
     284: aload_0
     285: getfield      #17                 // Field maxrows:I
     288: aload_0
     289: getfield      #18                 // Field fetchSize:I
     292: iload_3
     293: invokeinterface #125,  7          // InterfaceMethod org/postgresql/core/QueryExecutor.execute:(Lorg/postgresql/core/Query;Lorg/postgresql/core/ParameterList;Lorg/postgresql/core/ResultHandler;III)V
     298: aload_0
     299: invokespecial #128                // Method killTimerTask:()V
     302: goto          314
     305: astore        7
     307: aload_0
     308: invokespecial #128                // Method killTimerTask:()V
     311: aload         7
     313: athrow
     314: aload_0
     315: aload_0
     316: aload         4
     318: invokevirtual #126                // Method org/postgresql/jdbc2/AbstractJdbc2Statement$StatementResultHandler.getResults:()Lorg/postgresql/jdbc2/ResultWrapper;
     321: dup_x1
     322: putfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc2/ResultWrapper;
     325: putfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
     328: aload_0
     329: getfield      #13                 // Field wantsGeneratedKeysOnce:Z
     332: ifne          342
     335: aload_0
     336: getfield      #14                 // Field wantsGeneratedKeysAlways:Z
     339: ifeq          373
     342: aload_0
     343: aload_0
     344: getfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
     347: putfield      #23                 // Field generatedKeys:Lorg/postgresql/jdbc2/ResultWrapper;
     350: aload_0
     351: aload_0
     352: getfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
     355: invokevirtual #57                 // Method org/postgresql/jdbc2/ResultWrapper.getNext:()Lorg/postgresql/jdbc2/ResultWrapper;
     358: putfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
     361: aload_0
     362: getfield      #13                 // Field wantsGeneratedKeysOnce:Z
     365: ifeq          373
     368: aload_0
     369: iconst_0
     370: putfield      #13                 // Field wantsGeneratedKeysOnce:Z
     373: return
    Exception table:
       from    to  target type
         267   298   305   any
         305   307   305   any

  public void setCursorName(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: return

  public int getUpdateCount() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
       8: ifnull        21
      11: aload_0
      12: getfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
      15: invokevirtual #55                 // Method org/postgresql/jdbc2/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      18: ifnull        23
      21: iconst_m1
      22: ireturn
      23: aload_0
      24: getfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
      27: invokevirtual #129                // Method org/postgresql/jdbc2/ResultWrapper.getUpdateCount:()I
      30: ireturn

  public boolean getMoreResults() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: aload_0
      11: getfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
      14: invokevirtual #57                 // Method org/postgresql/jdbc2/ResultWrapper.getNext:()Lorg/postgresql/jdbc2/ResultWrapper;
      17: putfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
      20: aload_0
      21: getfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc2/ResultWrapper;
      24: aload_0
      25: getfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
      28: if_acmpeq     67
      31: aload_0
      32: getfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc2/ResultWrapper;
      35: invokevirtual #55                 // Method org/postgresql/jdbc2/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      38: ifnull        53
      41: aload_0
      42: getfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc2/ResultWrapper;
      45: invokevirtual #55                 // Method org/postgresql/jdbc2/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      48: invokeinterface #56,  1           // InterfaceMethod java/sql/ResultSet.close:()V
      53: aload_0
      54: aload_0
      55: getfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc2/ResultWrapper;
      58: invokevirtual #57                 // Method org/postgresql/jdbc2/ResultWrapper.getNext:()Lorg/postgresql/jdbc2/ResultWrapper;
      61: putfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc2/ResultWrapper;
      64: goto          20
      67: aload_0
      68: getfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
      71: ifnull        88
      74: aload_0
      75: getfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
      78: invokevirtual #55                 // Method org/postgresql/jdbc2/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      81: ifnull        88
      84: iconst_1
      85: goto          89
      88: iconst_0
      89: ireturn

  public int getMaxRows() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #17                 // Field maxrows:I
       8: ireturn

  public void setMaxRows(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: iload_1
       5: ifge          24
       8: new           #49                 // class org/postgresql/util/PSQLException
      11: dup
      12: ldc           #130                // String Maximum number of rows must be a value grater than or equal to 0.
      14: invokestatic  #51                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      17: getstatic     #131                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      20: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      23: athrow
      24: aload_0
      25: iload_1
      26: putfield      #17                 // Field maxrows:I
      29: return

  public void setEscapeProcessing(boolean) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: iload_1
       6: putfield      #20                 // Field replaceProcessingEnabled:Z
       9: return

  public int getQueryTimeout() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #132                // Method getQueryTimeoutMs:()I
       4: sipush        1000
       7: idiv
       8: ireturn

  public void setQueryTimeout(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: sipush        1000
       5: imul
       6: invokevirtual #133                // Method setQueryTimeoutMs:(I)V
       9: return

  public int getQueryTimeoutMs() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #19                 // Field timeout:I
       8: ireturn

  public void setQueryTimeoutMs(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: iload_1
       5: ifge          24
       8: new           #49                 // class org/postgresql/util/PSQLException
      11: dup
      12: ldc           #134                // String Query timeout must be a value greater than or equals to 0.
      14: invokestatic  #51                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      17: getstatic     #131                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      20: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      23: athrow
      24: aload_0
      25: iload_1
      26: putfield      #19                 // Field timeout:I
      29: return

  public void addWarning(java.sql.SQLWarning);
    Code:
       0: aload_0
       1: getfield      #15                 // Field warnings:Ljava/sql/SQLWarning;
       4: ifnonnull     20
       7: aload_0
       8: aload_1
       9: putfield      #15                 // Field warnings:Ljava/sql/SQLWarning;
      12: aload_0
      13: aload_1
      14: putfield      #16                 // Field lastWarning:Ljava/sql/SQLWarning;
      17: goto          33
      20: aload_0
      21: getfield      #16                 // Field lastWarning:Ljava/sql/SQLWarning;
      24: aload_1
      25: invokevirtual #135                // Method java/sql/SQLWarning.setNextWarning:(Ljava/sql/SQLWarning;)V
      28: aload_0
      29: aload_1
      30: putfield      #16                 // Field lastWarning:Ljava/sql/SQLWarning;
      33: return

  public java.sql.SQLWarning getWarnings() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #15                 // Field warnings:Ljava/sql/SQLWarning;
       8: areturn

  public int getMaxFieldSize() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #26                 // Field maxfieldSize:I
       4: ireturn

  public void setMaxFieldSize(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: iload_1
       5: ifge          24
       8: new           #49                 // class org/postgresql/util/PSQLException
      11: dup
      12: ldc           #136                // String The maximum field size must be a value greater than or equal to 0.
      14: invokestatic  #51                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      17: getstatic     #131                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      20: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      23: athrow
      24: aload_0
      25: iload_1
      26: putfield      #26                 // Field maxfieldSize:I
      29: return

  public void clearWarnings() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #15                 // Field warnings:Ljava/sql/SQLWarning;
       5: aload_0
       6: aconst_null
       7: putfield      #16                 // Field lastWarning:Ljava/sql/SQLWarning;
      10: return

  public java.sql.ResultSet getResultSet() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
       8: ifnonnull     13
      11: aconst_null
      12: areturn
      13: aload_0
      14: getfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
      17: invokevirtual #55                 // Method org/postgresql/jdbc2/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      20: areturn

  public void close() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #27                 // Field isClosed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: invokespecial #137                // Method cleanupTimer:()Z
      12: pop
      13: aload_0
      14: invokevirtual #114                // Method closeForNextExecution:()V
      17: aload_0
      18: getfield      #30                 // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
      21: ifnull        62
      24: aload_0
      25: getfield      #30                 // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
      28: dup
      29: astore_1
      30: monitorenter
      31: aload_0
      32: getfield      #27                 // Field isClosed:Z
      35: ifne          52
      38: aload_0
      39: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      42: checkcast     #138                // class org/postgresql/jdbc2/AbstractJdbc2Connection
      45: aload_0
      46: getfield      #30                 // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
      49: invokevirtual #139                // Method org/postgresql/jdbc2/AbstractJdbc2Connection.releaseQuery:(Lorg/postgresql/core/CachedQuery;)V
      52: aload_1
      53: monitorexit
      54: goto          62
      57: astore_2
      58: aload_1
      59: monitorexit
      60: aload_2
      61: athrow
      62: aload_0
      63: iconst_1
      64: putfield      #27                 // Field isClosed:Z
      67: return
    Exception table:
       from    to  target type
          31    54    57   any
          57    60    57   any

  static java.lang.String replaceProcessing(java.lang.String, boolean, boolean) throws java.sql.SQLException;
    Code:
       0: iload_1
       1: ifeq          70
       4: aload_0
       5: invokevirtual #140                // Method java/lang/String.length:()I
       8: istore_3
       9: new           #105                // class java/lang/StringBuilder
      12: dup
      13: iload_3
      14: invokespecial #141                // Method java/lang/StringBuilder."<init>":(I)V
      17: astore        4
      19: iconst_0
      20: istore        5
      22: iload         5
      24: iload_3
      25: if_icmpge     64
      28: aload_0
      29: iload         5
      31: aload         4
      33: iconst_0
      34: iload_2
      35: invokestatic  #142                // Method parseSql:(Ljava/lang/String;ILjava/lang/StringBuilder;ZZ)I
      38: istore        5
      40: iload         5
      42: iload_3
      43: if_icmpge     22
      46: aload         4
      48: aload_0
      49: iload         5
      51: invokevirtual #143                // Method java/lang/String.charAt:(I)C
      54: invokevirtual #144                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      57: pop
      58: iinc          5, 1
      61: goto          22
      64: aload         4
      66: invokevirtual #110                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: areturn
      70: aload_0
      71: areturn

  protected static int parseSql(java.lang.String, int, java.lang.StringBuilder, boolean, boolean) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: istore        5
       3: aload_0
       4: invokevirtual #140                // Method java/lang/String.length:()I
       7: istore        6
       9: iconst_0
      10: istore        7
      12: iconst_0
      13: istore        8
      15: iinc          1, -1
      18: iload         8
      20: ifne          622
      23: iinc          1, 1
      26: iload_1
      27: iload         6
      29: if_icmpge     622
      32: aload_0
      33: iload_1
      34: invokevirtual #143                // Method java/lang/String.charAt:(I)C
      37: istore        9
      39: iload         5
      41: tableswitch   { // 0 to 7
                     0: 88
                     1: 418
                     2: 476
                     3: 599
                     4: 489
                     5: 599
                     6: 456
                     7: 599
               default: 619
          }
      88: iload         9
      90: bipush        39
      92: if_icmpne     101
      95: iconst_1
      96: istore        5
      98: goto          408
     101: iload         9
     103: bipush        34
     105: if_icmpne     115
     108: bipush        6
     110: istore        5
     112: goto          408
     115: iload         9
     117: bipush        40
     119: if_icmpne     128
     122: iinc          7, 1
     125: goto          408
     128: iload         9
     130: bipush        41
     132: if_icmpne     149
     135: iinc          7, -1
     138: iload         7
     140: ifge          408
     143: iconst_1
     144: istore        8
     146: goto          619
     149: iload_3
     150: ifeq          171
     153: iload         9
     155: bipush        44
     157: if_icmpne     171
     160: iload         7
     162: ifne          171
     165: iconst_1
     166: istore        8
     168: goto          619
     171: iload         9
     173: bipush        123
     175: if_icmpne     408
     178: iload_1
     179: iconst_1
     180: iadd
     181: iload         6
     183: if_icmpge     408
     186: aload_0
     187: iload_1
     188: iconst_1
     189: iadd
     190: invokevirtual #143                // Method java/lang/String.charAt:(I)C
     193: istore        10
     195: iload_1
     196: iconst_2
     197: iadd
     198: iload         6
     200: if_icmpge     213
     203: aload_0
     204: iload_1
     205: iconst_2
     206: iadd
     207: invokevirtual #143                // Method java/lang/String.charAt:(I)C
     210: goto          214
     213: iconst_0
     214: istore        11
     216: iload         10
     218: bipush        100
     220: if_icmpeq     230
     223: iload         10
     225: bipush        68
     227: if_icmpne     246
     230: iconst_3
     231: istore        5
     233: iinc          1, 1
     236: aload_2
     237: ldc           #145                // String DATE
     239: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     242: pop
     243: goto          619
     246: iload         10
     248: bipush        116
     250: if_icmpeq     260
     253: iload         10
     255: bipush        84
     257: if_icmpne     303
     260: iconst_3
     261: istore        5
     263: iload         11
     265: bipush        115
     267: if_icmpeq     277
     270: iload         11
     272: bipush        83
     274: if_icmpne     290
     277: iinc          1, 2
     280: aload_2
     281: ldc           #146                // String TIMESTAMP
     283: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     286: pop
     287: goto          619
     290: iinc          1, 1
     293: aload_2
     294: ldc           #147                // String TIME
     296: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     299: pop
     300: goto          619
     303: iload         10
     305: bipush        102
     307: if_icmpeq     317
     310: iload         10
     312: bipush        70
     314: if_icmpne     345
     317: iconst_4
     318: istore        5
     320: iload_1
     321: iload         11
     323: bipush        110
     325: if_icmpeq     335
     328: iload         11
     330: bipush        78
     332: if_icmpne     339
     335: iconst_2
     336: goto          340
     339: iconst_1
     340: iadd
     341: istore_1
     342: goto          619
     345: iload         10
     347: bipush        111
     349: if_icmpeq     359
     352: iload         10
     354: bipush        79
     356: if_icmpne     387
     359: iconst_5
     360: istore        5
     362: iload_1
     363: iload         11
     365: bipush        106
     367: if_icmpeq     377
     370: iload         11
     372: bipush        74
     374: if_icmpne     381
     377: iconst_2
     378: goto          382
     381: iconst_1
     382: iadd
     383: istore_1
     384: goto          619
     387: iload         10
     389: bipush        101
     391: if_icmpeq     401
     394: iload         10
     396: bipush        69
     398: if_icmpne     408
     401: bipush        7
     403: istore        5
     405: goto          619
     408: aload_2
     409: iload         9
     411: invokevirtual #144                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     414: pop
     415: goto          619
     418: iload         9
     420: bipush        39
     422: if_icmpne     431
     425: iconst_0
     426: istore        5
     428: goto          446
     431: iload         9
     433: bipush        92
     435: if_icmpne     446
     438: iload         4
     440: ifne          446
     443: iconst_2
     444: istore        5
     446: aload_2
     447: iload         9
     449: invokevirtual #144                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     452: pop
     453: goto          619
     456: iload         9
     458: bipush        34
     460: if_icmpne     466
     463: iconst_0
     464: istore        5
     466: aload_2
     467: iload         9
     469: invokevirtual #144                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     472: pop
     473: goto          619
     476: iconst_1
     477: istore        5
     479: aload_2
     480: iload         9
     482: invokevirtual #144                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     485: pop
     486: goto          619
     489: aload_0
     490: bipush        40
     492: iload_1
     493: invokevirtual #148                // Method java/lang/String.indexOf:(II)I
     496: istore        11
     498: iload         11
     500: iconst_m1
     501: if_icmpeq     558
     504: aload_0
     505: iload_1
     506: iload         11
     508: invokevirtual #149                // Method java/lang/String.substring:(II)Ljava/lang/String;
     511: invokevirtual #150                // Method java/lang/String.trim:()Ljava/lang/String;
     514: astore        10
     516: iload         11
     518: iconst_1
     519: iadd
     520: istore_1
     521: new           #105                // class java/lang/StringBuilder
     524: dup
     525: invokespecial #106                // Method java/lang/StringBuilder."<init>":()V
     528: astore        12
     530: aload_0
     531: iload_1
     532: aload         12
     534: iconst_0
     535: iload         4
     537: invokestatic  #142                // Method parseSql:(Ljava/lang/String;ILjava/lang/StringBuilder;ZZ)I
     540: istore_1
     541: aload_2
     542: aload         10
     544: aload         12
     546: invokevirtual #110                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     549: iload         4
     551: invokestatic  #151                // Method escapeFunction:(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
     554: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     557: pop
     558: iinc          1, 1
     561: iload_1
     562: iload         6
     564: if_icmpge     593
     567: aload_0
     568: iload_1
     569: invokevirtual #143                // Method java/lang/String.charAt:(I)C
     572: bipush        125
     574: if_icmpeq     593
     577: aload_2
     578: aload_0
     579: iload_1
     580: iinc          1, 1
     583: invokevirtual #143                // Method java/lang/String.charAt:(I)C
     586: invokevirtual #144                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     589: pop
     590: goto          561
     593: iconst_0
     594: istore        5
     596: goto          619
     599: iload         9
     601: bipush        125
     603: if_icmpne     612
     606: iconst_0
     607: istore        5
     609: goto          619
     612: aload_2
     613: iload         9
     615: invokevirtual #144                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     618: pop
     619: goto          18
     622: iload_1
     623: ireturn

  protected static java.lang.String escapeFunction(java.lang.String, java.lang.String, boolean) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: invokevirtual #140                // Method java/lang/String.length:()I
       4: istore_3
       5: iconst_0
       6: istore        4
       8: new           #152                // class java/util/ArrayList
      11: dup
      12: invokespecial #153                // Method java/util/ArrayList."<init>":()V
      15: astore        5
      17: iload         4
      19: iload_3
      20: if_icmpge     69
      23: new           #105                // class java/lang/StringBuilder
      26: dup
      27: invokespecial #106                // Method java/lang/StringBuilder."<init>":()V
      30: astore        6
      32: iload         4
      34: istore        7
      36: aload_1
      37: iload         4
      39: aload         6
      41: iconst_1
      42: iload_2
      43: invokestatic  #142                // Method parseSql:(Ljava/lang/String;ILjava/lang/StringBuilder;ZZ)I
      46: istore        4
      48: iload         7
      50: iload         4
      52: if_icmpeq     63
      55: aload         5
      57: aload         6
      59: invokevirtual #154                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      62: pop
      63: iinc          4, 1
      66: goto          17
      69: aload_0
      70: invokestatic  #155                // Method org/postgresql/jdbc2/EscapedFunctions.getFunction:(Ljava/lang/String;)Ljava/lang/reflect/Method;
      73: astore        6
      75: aload         6
      77: aconst_null
      78: iconst_1
      79: anewarray     #95                 // class java/lang/Object
      82: dup
      83: iconst_0
      84: aload         5
      86: aastore
      87: invokevirtual #156                // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      90: checkcast     #157                // class java/lang/String
      93: areturn
      94: astore        6
      96: aload         6
      98: invokevirtual #159                // Method java/lang/reflect/InvocationTargetException.getTargetException:()Ljava/lang/Throwable;
     101: instanceof    #160                // class java/sql/SQLException
     104: ifeq          116
     107: aload         6
     109: invokevirtual #159                // Method java/lang/reflect/InvocationTargetException.getTargetException:()Ljava/lang/Throwable;
     112: checkcast     #160                // class java/sql/SQLException
     115: athrow
     116: new           #49                 // class org/postgresql/util/PSQLException
     119: dup
     120: aload         6
     122: invokevirtual #159                // Method java/lang/reflect/InvocationTargetException.getTargetException:()Ljava/lang/Throwable;
     125: invokevirtual #161                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     128: getstatic     #162                // Field org/postgresql/util/PSQLState.SYSTEM_ERROR:Lorg/postgresql/util/PSQLState;
     131: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     134: athrow
     135: astore        6
     137: new           #105                // class java/lang/StringBuilder
     140: dup
     141: invokespecial #106                // Method java/lang/StringBuilder."<init>":()V
     144: astore        7
     146: aload         7
     148: aload_0
     149: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: bipush        40
     154: invokevirtual #144                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     157: pop
     158: iconst_0
     159: istore        8
     161: iload         8
     163: aload         5
     165: invokevirtual #164                // Method java/util/ArrayList.size:()I
     168: if_icmpge     210
     171: aload         7
     173: aload         5
     175: iload         8
     177: invokevirtual #165                // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
     180: invokevirtual #166                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     183: pop
     184: iload         8
     186: aload         5
     188: invokevirtual #164                // Method java/util/ArrayList.size:()I
     191: iconst_1
     192: isub
     193: if_icmpeq     204
     196: aload         7
     198: bipush        44
     200: invokevirtual #144                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     203: pop
     204: iinc          8, 1
     207: goto          161
     210: aload         7
     212: bipush        41
     214: invokevirtual #144                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     217: pop
     218: aload         7
     220: invokevirtual #110                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     223: areturn
    Exception table:
       from    to  target type
          69    93    94   Class java/lang/reflect/InvocationTargetException
          69    93   135   Class java/lang/Exception

  public int getInsertedOID() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: getfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
      17: invokevirtual #167                // Method org/postgresql/jdbc2/ResultWrapper.getInsertOID:()J
      20: l2i
      21: ireturn

  public long getLastOID() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
       8: ifnonnull     13
      11: lconst_0
      12: lreturn
      13: aload_0
      14: getfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
      17: invokevirtual #167                // Method org/postgresql/jdbc2/ResultWrapper.getInsertOID:()J
      20: lreturn

  public void setNull(int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: iload_2
       5: lookupswitch  { // 26
                    -7: 305
                    -6: 230
                    -5: 236
                    -4: 311
                    -3: 311
                    -2: 311
                    -1: 270
                     0: 344
                     1: 263
                     2: 256
                     3: 256
                     4: 224
                     5: 230
                     6: 249
                     7: 242
                     8: 249
                    12: 270
                    91: 293
                    92: 300
                    93: 300
                  1111: 344
                  2001: 344
                  2002: 344
                  2003: 344
                  2004: 338
                  2005: 338
               default: 349
          }
     224: bipush        23
     226: istore_3
     227: goto          365
     230: bipush        21
     232: istore_3
     233: goto          365
     236: bipush        20
     238: istore_3
     239: goto          365
     242: sipush        700
     245: istore_3
     246: goto          365
     249: sipush        701
     252: istore_3
     253: goto          365
     256: sipush        1700
     259: istore_3
     260: goto          365
     263: sipush        1042
     266: istore_3
     267: goto          365
     270: aload_0
     271: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
     274: invokeinterface #169,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getStringVarcharFlag:()Z
     279: ifeq          288
     282: sipush        1043
     285: goto          289
     288: iconst_0
     289: istore_3
     290: goto          365
     293: sipush        1082
     296: istore_3
     297: goto          365
     300: iconst_0
     301: istore_3
     302: goto          365
     305: bipush        16
     307: istore_3
     308: goto          365
     311: aload_0
     312: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
     315: getstatic     #170                // Field org/postgresql/core/ServerVersion.v7_2:Lorg/postgresql/core/ServerVersion;
     318: invokeinterface #171,  2          // InterfaceMethod org/postgresql/core/BaseConnection.haveMinimumCompatibleVersion:(Lorg/postgresql/core/Version;)Z
     323: ifeq          332
     326: bipush        17
     328: istore_3
     329: goto          365
     332: bipush        26
     334: istore_3
     335: goto          365
     338: bipush        26
     340: istore_3
     341: goto          365
     344: iconst_0
     345: istore_3
     346: goto          365
     349: new           #49                 // class org/postgresql/util/PSQLException
     352: dup
     353: ldc           #172                // String Unknown Types value.
     355: invokestatic  #51                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
     358: getstatic     #173                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_TYPE:Lorg/postgresql/util/PSQLState;
     361: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     364: athrow
     365: aload_0
     366: getfield      #24                 // Field adjustIndex:Z
     369: ifeq          375
     372: iinc          1, -1
     375: aload_0
     376: getfield      #31                 // Field preparedParameters:Lorg/postgresql/core/ParameterList;
     379: iload_1
     380: iload_3
     381: invokeinterface #174,  3          // InterfaceMethod org/postgresql/core/ParameterList.setNull:(II)V
     386: return

  public void setBoolean(int, boolean) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: iload_1
       6: iload_2
       7: ifeq          15
      10: ldc           #175                // String 1
      12: goto          17
      15: ldc           #176                // String 0
      17: bipush        16
      19: invokespecial #177                // Method bindString:(ILjava/lang/String;I)V
      22: return

  public void setByte(int, byte) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: i2s
       4: invokevirtual #178                // Method setShort:(IS)V
       7: return

  public void setShort(int, short) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
       8: bipush        21
      10: invokeinterface #179,  2          // InterfaceMethod org/postgresql/core/BaseConnection.binaryTransferSend:(I)Z
      15: ifeq          37
      18: iconst_2
      19: newarray       byte
      21: astore_3
      22: aload_3
      23: iconst_0
      24: iload_2
      25: invokestatic  #180                // Method org/postgresql/util/ByteConverter.int2:([BII)V
      28: aload_0
      29: iload_1
      30: aload_3
      31: bipush        21
      33: invokevirtual #181                // Method bindBytes:(I[BI)V
      36: return
      37: aload_0
      38: iload_1
      39: iload_2
      40: invokestatic  #182                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      43: bipush        21
      45: invokevirtual #183                // Method bindLiteral:(ILjava/lang/String;I)V
      48: return

  public void setInt(int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
       8: bipush        23
      10: invokeinterface #179,  2          // InterfaceMethod org/postgresql/core/BaseConnection.binaryTransferSend:(I)Z
      15: ifeq          37
      18: iconst_4
      19: newarray       byte
      21: astore_3
      22: aload_3
      23: iconst_0
      24: iload_2
      25: invokestatic  #184                // Method org/postgresql/util/ByteConverter.int4:([BII)V
      28: aload_0
      29: iload_1
      30: aload_3
      31: bipush        23
      33: invokevirtual #181                // Method bindBytes:(I[BI)V
      36: return
      37: aload_0
      38: iload_1
      39: iload_2
      40: invokestatic  #182                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      43: bipush        23
      45: invokevirtual #183                // Method bindLiteral:(ILjava/lang/String;I)V
      48: return

  public void setLong(int, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
       8: bipush        20
      10: invokeinterface #179,  2          // InterfaceMethod org/postgresql/core/BaseConnection.binaryTransferSend:(I)Z
      15: ifeq          41
      18: bipush        8
      20: newarray       byte
      22: astore        4
      24: aload         4
      26: iconst_0
      27: lload_2
      28: invokestatic  #185                // Method org/postgresql/util/ByteConverter.int8:([BIJ)V
      31: aload_0
      32: iload_1
      33: aload         4
      35: bipush        20
      37: invokevirtual #181                // Method bindBytes:(I[BI)V
      40: return
      41: aload_0
      42: iload_1
      43: lload_2
      44: invokestatic  #186                // Method java/lang/Long.toString:(J)Ljava/lang/String;
      47: bipush        20
      49: invokevirtual #183                // Method bindLiteral:(ILjava/lang/String;I)V
      52: return

  public void setFloat(int, float) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
       8: sipush        700
      11: invokeinterface #179,  2          // InterfaceMethod org/postgresql/core/BaseConnection.binaryTransferSend:(I)Z
      16: ifeq          39
      19: iconst_4
      20: newarray       byte
      22: astore_3
      23: aload_3
      24: iconst_0
      25: fload_2
      26: invokestatic  #187                // Method org/postgresql/util/ByteConverter.float4:([BIF)V
      29: aload_0
      30: iload_1
      31: aload_3
      32: sipush        700
      35: invokevirtual #181                // Method bindBytes:(I[BI)V
      38: return
      39: aload_0
      40: iload_1
      41: fload_2
      42: invokestatic  #188                // Method java/lang/Float.toString:(F)Ljava/lang/String;
      45: sipush        701
      48: invokevirtual #183                // Method bindLiteral:(ILjava/lang/String;I)V
      51: return

  public void setDouble(int, double) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
       8: sipush        701
      11: invokeinterface #179,  2          // InterfaceMethod org/postgresql/core/BaseConnection.binaryTransferSend:(I)Z
      16: ifeq          43
      19: bipush        8
      21: newarray       byte
      23: astore        4
      25: aload         4
      27: iconst_0
      28: dload_2
      29: invokestatic  #189                // Method org/postgresql/util/ByteConverter.float8:([BID)V
      32: aload_0
      33: iload_1
      34: aload         4
      36: sipush        701
      39: invokevirtual #181                // Method bindBytes:(I[BI)V
      42: return
      43: aload_0
      44: iload_1
      45: dload_2
      46: invokestatic  #190                // Method java/lang/Double.toString:(D)Ljava/lang/String;
      49: sipush        701
      52: invokevirtual #183                // Method bindLiteral:(ILjava/lang/String;I)V
      55: return

  public void setBigDecimal(int, java.math.BigDecimal) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_2
       5: ifnonnull     17
       8: aload_0
       9: iload_1
      10: iconst_3
      11: invokevirtual #191                // Method setNull:(II)V
      14: goto          29
      17: aload_0
      18: iload_1
      19: aload_2
      20: invokevirtual #192                // Method java/math/BigDecimal.toString:()Ljava/lang/String;
      23: sipush        1700
      26: invokevirtual #183                // Method bindLiteral:(ILjava/lang/String;I)V
      29: return

  public void setString(int, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: iload_1
       6: aload_2
       7: aload_0
       8: invokespecial #193                // Method getStringType:()I
      11: invokevirtual #194                // Method setString:(ILjava/lang/String;I)V
      14: return

  private int getStringType();
    Code:
       0: aload_0
       1: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
       4: invokeinterface #169,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getStringVarcharFlag:()Z
       9: ifeq          18
      12: sipush        1043
      15: goto          19
      18: iconst_0
      19: ireturn

  protected void setString(int, java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_2
       5: ifnonnull     32
       8: aload_0
       9: getfield      #24                 // Field adjustIndex:Z
      12: ifeq          18
      15: iinc          1, -1
      18: aload_0
      19: getfield      #31                 // Field preparedParameters:Lorg/postgresql/core/ParameterList;
      22: iload_1
      23: iload_3
      24: invokeinterface #174,  3          // InterfaceMethod org/postgresql/core/ParameterList.setNull:(II)V
      29: goto          39
      32: aload_0
      33: iload_1
      34: aload_2
      35: iload_3
      36: invokespecial #177                // Method bindString:(ILjava/lang/String;I)V
      39: return

  public void setBytes(int, byte[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aconst_null
       5: aload_2
       6: if_acmpne     17
       9: aload_0
      10: iload_1
      11: bipush        -3
      13: invokevirtual #191                // Method setNull:(II)V
      16: return
      17: aload_0
      18: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      21: getstatic     #170                // Field org/postgresql/core/ServerVersion.v7_2:Lorg/postgresql/core/ServerVersion;
      24: invokeinterface #171,  2          // InterfaceMethod org/postgresql/core/BaseConnection.haveMinimumCompatibleVersion:(Lorg/postgresql/core/Version;)Z
      29: ifeq          63
      32: aload_2
      33: arraylength
      34: newarray       byte
      36: astore_3
      37: aload_2
      38: iconst_0
      39: aload_3
      40: iconst_0
      41: aload_2
      42: arraylength
      43: invokestatic  #195                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      46: aload_0
      47: getfield      #31                 // Field preparedParameters:Lorg/postgresql/core/ParameterList;
      50: iload_1
      51: aload_3
      52: iconst_0
      53: aload_2
      54: arraylength
      55: invokeinterface #196,  5          // InterfaceMethod org/postgresql/core/ParameterList.setBytea:(I[BII)V
      60: goto          105
      63: aload_0
      64: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      67: invokeinterface #197,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getLargeObjectAPI:()Lorg/postgresql/largeobject/LargeObjectManager;
      72: astore_3
      73: aload_3
      74: invokevirtual #198                // Method org/postgresql/largeobject/LargeObjectManager.createLO:()J
      77: lstore        4
      79: aload_3
      80: lload         4
      82: invokevirtual #199                // Method org/postgresql/largeobject/LargeObjectManager.open:(J)Lorg/postgresql/largeobject/LargeObject;
      85: astore        6
      87: aload         6
      89: aload_2
      90: invokevirtual #200                // Method org/postgresql/largeobject/LargeObject.write:([B)V
      93: aload         6
      95: invokevirtual #201                // Method org/postgresql/largeobject/LargeObject.close:()V
      98: aload_0
      99: iload_1
     100: lload         4
     102: invokevirtual #202                // Method setLong:(IJ)V
     105: return

  public void setDate(int, java.sql.Date) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #203                // Method setDate:(ILjava/sql/Date;Ljava/util/Calendar;)V
       7: return

  public void setTime(int, java.sql.Time) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #204                // Method setTime:(ILjava/sql/Time;Ljava/util/Calendar;)V
       7: return

  public void setTimestamp(int, java.sql.Timestamp) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #205                // Method setTimestamp:(ILjava/sql/Timestamp;Ljava/util/Calendar;)V
       7: return

  private void setCharacterStreamPost71(int, java.io.InputStream, int, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_2
       1: ifnonnull     12
       4: aload_0
       5: iload_1
       6: bipush        12
       8: invokevirtual #191                // Method setNull:(II)V
      11: return
      12: iload_3
      13: ifge          36
      16: new           #49                 // class org/postgresql/util/PSQLException
      19: dup
      20: ldc           #206                // String Invalid stream length {0}.
      22: iload_3
      23: invokestatic  #104                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      26: invokestatic  #207                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
      29: getstatic     #131                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      32: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      35: athrow
      36: new           #208                // class java/io/InputStreamReader
      39: dup
      40: aload_2
      41: aload         4
      43: invokespecial #209                // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/lang/String;)V
      46: astore        5
      48: iload_3
      49: newarray       char
      51: astore        6
      53: iconst_0
      54: istore        7
      56: aload         5
      58: aload         6
      60: iload         7
      62: iload_3
      63: iload         7
      65: isub
      66: invokevirtual #210                // Method java/io/InputStreamReader.read:([CII)I
      69: istore        8
      71: iload         8
      73: iconst_m1
      74: if_icmpne     80
      77: goto          99
      80: iload         7
      82: iload         8
      84: iadd
      85: istore        7
      87: iload         7
      89: iload_3
      90: if_icmpne     96
      93: goto          99
      96: goto          56
      99: aload_0
     100: iload_1
     101: new           #157                // class java/lang/String
     104: dup
     105: aload         6
     107: iconst_0
     108: iload         7
     110: invokespecial #211                // Method java/lang/String."<init>":([CII)V
     113: sipush        1043
     116: invokevirtual #194                // Method setString:(ILjava/lang/String;I)V
     119: goto          164
     122: astore        5
     124: new           #49                 // class org/postgresql/util/PSQLException
     127: dup
     128: ldc           #213                // String The JVM claims not to support the {0} encoding.
     130: aload         4
     132: invokestatic  #207                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
     135: getstatic     #214                // Field org/postgresql/util/PSQLState.UNEXPECTED_ERROR:Lorg/postgresql/util/PSQLState;
     138: aload         5
     140: invokespecial #215                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
     143: athrow
     144: astore        5
     146: new           #49                 // class org/postgresql/util/PSQLException
     149: dup
     150: ldc           #217                // String Provided InputStream failed.
     152: invokestatic  #51                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
     155: getstatic     #214                // Field org/postgresql/util/PSQLState.UNEXPECTED_ERROR:Lorg/postgresql/util/PSQLState;
     158: aload         5
     160: invokespecial #215                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
     163: athrow
     164: return
    Exception table:
       from    to  target type
          36   119   122   Class java/io/UnsupportedEncodingException
          36   119   144   Class java/io/IOException

  public void setAsciiStream(int, java.io.InputStream, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
       8: getstatic     #170                // Field org/postgresql/core/ServerVersion.v7_2:Lorg/postgresql/core/ServerVersion;
      11: invokeinterface #171,  2          // InterfaceMethod org/postgresql/core/BaseConnection.haveMinimumCompatibleVersion:(Lorg/postgresql/core/Version;)Z
      16: ifeq          31
      19: aload_0
      20: iload_1
      21: aload_2
      22: iload_3
      23: ldc           #218                // String ASCII
      25: invokespecial #219                // Method setCharacterStreamPost71:(ILjava/io/InputStream;ILjava/lang/String;)V
      28: goto          38
      31: aload_0
      32: iload_1
      33: aload_2
      34: iload_3
      35: invokevirtual #220                // Method setBinaryStream:(ILjava/io/InputStream;I)V
      38: return

  public void setUnicodeStream(int, java.io.InputStream, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
       8: getstatic     #170                // Field org/postgresql/core/ServerVersion.v7_2:Lorg/postgresql/core/ServerVersion;
      11: invokeinterface #171,  2          // InterfaceMethod org/postgresql/core/BaseConnection.haveMinimumCompatibleVersion:(Lorg/postgresql/core/Version;)Z
      16: ifeq          31
      19: aload_0
      20: iload_1
      21: aload_2
      22: iload_3
      23: ldc           #221                // String UTF-8
      25: invokespecial #219                // Method setCharacterStreamPost71:(ILjava/io/InputStream;ILjava/lang/String;)V
      28: goto          38
      31: aload_0
      32: iload_1
      33: aload_2
      34: iload_3
      35: invokevirtual #220                // Method setBinaryStream:(ILjava/io/InputStream;I)V
      38: return

  public void setBinaryStream(int, java.io.InputStream, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_2
       5: ifnonnull     16
       8: aload_0
       9: iload_1
      10: bipush        -3
      12: invokevirtual #191                // Method setNull:(II)V
      15: return
      16: iload_3
      17: ifge          40
      20: new           #49                 // class org/postgresql/util/PSQLException
      23: dup
      24: ldc           #206                // String Invalid stream length {0}.
      26: iload_3
      27: invokestatic  #104                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      30: invokestatic  #207                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
      33: getstatic     #131                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      36: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      39: athrow
      40: aload_0
      41: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      44: getstatic     #170                // Field org/postgresql/core/ServerVersion.v7_2:Lorg/postgresql/core/ServerVersion;
      47: invokeinterface #171,  2          // InterfaceMethod org/postgresql/core/BaseConnection.haveMinimumCompatibleVersion:(Lorg/postgresql/core/Version;)Z
      52: ifeq          70
      55: aload_0
      56: getfield      #31                 // Field preparedParameters:Lorg/postgresql/core/ParameterList;
      59: iload_1
      60: aload_2
      61: iload_3
      62: invokeinterface #222,  4          // InterfaceMethod org/postgresql/core/ParameterList.setBytea:(ILjava/io/InputStream;I)V
      67: goto          179
      70: aload_0
      71: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      74: invokeinterface #197,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getLargeObjectAPI:()Lorg/postgresql/largeobject/LargeObjectManager;
      79: astore        4
      81: aload         4
      83: invokevirtual #198                // Method org/postgresql/largeobject/LargeObjectManager.createLO:()J
      86: lstore        5
      88: aload         4
      90: lload         5
      92: invokevirtual #199                // Method org/postgresql/largeobject/LargeObjectManager.open:(J)Lorg/postgresql/largeobject/LargeObject;
      95: astore        7
      97: aload         7
      99: invokevirtual #223                // Method org/postgresql/largeobject/LargeObject.getOutputStream:()Ljava/io/OutputStream;
     102: astore        8
     104: aload_2
     105: invokevirtual #224                // Method java/io/InputStream.read:()I
     108: istore        9
     110: iconst_0
     111: istore        10
     113: iload         9
     115: iconst_m1
     116: if_icmple     144
     119: iload         10
     121: iload_3
     122: if_icmpge     144
     125: aload         8
     127: iload         9
     129: invokevirtual #225                // Method java/io/OutputStream.write:(I)V
     132: aload_2
     133: invokevirtual #224                // Method java/io/InputStream.read:()I
     136: istore        9
     138: iinc          10, 1
     141: goto          113
     144: aload         8
     146: invokevirtual #226                // Method java/io/OutputStream.close:()V
     149: goto          172
     152: astore        9
     154: new           #49                 // class org/postgresql/util/PSQLException
     157: dup
     158: ldc           #217                // String Provided InputStream failed.
     160: invokestatic  #51                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
     163: getstatic     #214                // Field org/postgresql/util/PSQLState.UNEXPECTED_ERROR:Lorg/postgresql/util/PSQLState;
     166: aload         9
     168: invokespecial #215                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
     171: athrow
     172: aload_0
     173: iload_1
     174: lload         5
     176: invokevirtual #202                // Method setLong:(IJ)V
     179: return
    Exception table:
       from    to  target type
         104   149   152   Class java/io/IOException

  public void clearParameters() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #31                 // Field preparedParameters:Lorg/postgresql/core/ParameterList;
       4: invokeinterface #227,  1          // InterfaceMethod org/postgresql/core/ParameterList.clear:()V
       9: return

  private void setPGobject(int, org.postgresql.util.PGobject) throws java.sql.SQLException;
    Code:
       0: aload_2
       1: invokevirtual #228                // Method org/postgresql/util/PGobject.getType:()Ljava/lang/String;
       4: astore_3
       5: aload_0
       6: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
       9: invokeinterface #229,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
      14: aload_3
      15: invokeinterface #230,  2          // InterfaceMethod org/postgresql/core/TypeInfo.getPGType:(Ljava/lang/String;)I
      20: istore        4
      22: iload         4
      24: ifne          44
      27: new           #49                 // class org/postgresql/util/PSQLException
      30: dup
      31: ldc           #231                // String Unknown type {0}.
      33: aload_3
      34: invokestatic  #207                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
      37: getstatic     #173                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_TYPE:Lorg/postgresql/util/PSQLState;
      40: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      43: athrow
      44: aload_2
      45: instanceof    #232                // class org/postgresql/util/PGBinaryObject
      48: ifeq          104
      51: aload_0
      52: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      55: iload         4
      57: invokeinterface #179,  2          // InterfaceMethod org/postgresql/core/BaseConnection.binaryTransferSend:(I)Z
      62: ifeq          104
      65: aload_2
      66: checkcast     #232                // class org/postgresql/util/PGBinaryObject
      69: astore        5
      71: aload         5
      73: invokeinterface #233,  1          // InterfaceMethod org/postgresql/util/PGBinaryObject.lengthInBytes:()I
      78: newarray       byte
      80: astore        6
      82: aload         5
      84: aload         6
      86: iconst_0
      87: invokeinterface #234,  3          // InterfaceMethod org/postgresql/util/PGBinaryObject.toBytes:([BI)V
      92: aload_0
      93: iload_1
      94: aload         6
      96: iload         4
      98: invokevirtual #181                // Method bindBytes:(I[BI)V
     101: goto          115
     104: aload_0
     105: iload_1
     106: aload_2
     107: invokevirtual #235                // Method org/postgresql/util/PGobject.getValue:()Ljava/lang/String;
     110: iload         4
     112: invokevirtual #194                // Method setString:(ILjava/lang/String;I)V
     115: return

  private void setMap(int, java.util.Map) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
       4: invokeinterface #229,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
       9: ldc           #236                // String hstore
      11: invokeinterface #230,  2          // InterfaceMethod org/postgresql/core/TypeInfo.getPGType:(Ljava/lang/String;)I
      16: istore_3
      17: iload_3
      18: ifne          37
      21: new           #49                 // class org/postgresql/util/PSQLException
      24: dup
      25: ldc           #237                // String No hstore extension installed.
      27: invokestatic  #51                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      30: getstatic     #173                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_TYPE:Lorg/postgresql/util/PSQLState;
      33: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      36: athrow
      37: aload_0
      38: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      41: iload_3
      42: invokeinterface #179,  2          // InterfaceMethod org/postgresql/core/BaseConnection.binaryTransferSend:(I)Z
      47: ifeq          76
      50: aload_2
      51: aload_0
      52: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      55: invokeinterface #238,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getEncoding:()Lorg/postgresql/core/Encoding;
      60: invokestatic  #239                // Method org/postgresql/util/HStoreConverter.toBytes:(Ljava/util/Map;Lorg/postgresql/core/Encoding;)[B
      63: astore        4
      65: aload_0
      66: iload_1
      67: aload         4
      69: iload_3
      70: invokevirtual #181                // Method bindBytes:(I[BI)V
      73: goto          86
      76: aload_0
      77: iload_1
      78: aload_2
      79: invokestatic  #240                // Method org/postgresql/util/HStoreConverter.toString:(Ljava/util/Map;)Ljava/lang/String;
      82: iload_3
      83: invokevirtual #194                // Method setString:(ILjava/lang/String;I)V
      86: return

  public void setObject(int, java.lang.Object, int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_2
       5: ifnonnull     15
       8: aload_0
       9: iload_1
      10: iload_3
      11: invokevirtual #191                // Method setNull:(II)V
      14: return
      15: iload_3
      16: lookupswitch  { // 24
                    -7: 547
                    -6: 232
                    -5: 244
                    -4: 559
                    -3: 559
                    -2: 559
                    -1: 309
                     1: 294
                     2: 280
                     3: 280
                     4: 220
                     5: 232
                     6: 268
                     7: 256
                     8: 268
                    12: 309
                    91: 325
                    92: 399
                    93: 473
                  1111: 780
                  2001: 767
                  2003: 711
                  2004: 568
                  2005: 655
               default: 812
          }
     220: aload_0
     221: iload_1
     222: aload_2
     223: invokestatic  #241                // Method castToInt:(Ljava/lang/Object;)I
     226: invokevirtual #242                // Method setInt:(II)V
     229: goto          833
     232: aload_0
     233: iload_1
     234: aload_2
     235: invokestatic  #243                // Method castToShort:(Ljava/lang/Object;)S
     238: invokevirtual #178                // Method setShort:(IS)V
     241: goto          833
     244: aload_0
     245: iload_1
     246: aload_2
     247: invokestatic  #244                // Method castToLong:(Ljava/lang/Object;)J
     250: invokevirtual #202                // Method setLong:(IJ)V
     253: goto          833
     256: aload_0
     257: iload_1
     258: aload_2
     259: invokestatic  #245                // Method castToFloat:(Ljava/lang/Object;)F
     262: invokevirtual #246                // Method setFloat:(IF)V
     265: goto          833
     268: aload_0
     269: iload_1
     270: aload_2
     271: invokestatic  #247                // Method castToDouble:(Ljava/lang/Object;)D
     274: invokevirtual #248                // Method setDouble:(ID)V
     277: goto          833
     280: aload_0
     281: iload_1
     282: aload_2
     283: iload         4
     285: invokestatic  #249                // Method castToBigDecimal:(Ljava/lang/Object;I)Ljava/math/BigDecimal;
     288: invokevirtual #250                // Method setBigDecimal:(ILjava/math/BigDecimal;)V
     291: goto          833
     294: aload_0
     295: iload_1
     296: aload_2
     297: invokestatic  #251                // Method castToString:(Ljava/lang/Object;)Ljava/lang/String;
     300: sipush        1042
     303: invokevirtual #194                // Method setString:(ILjava/lang/String;I)V
     306: goto          833
     309: aload_0
     310: iload_1
     311: aload_2
     312: invokestatic  #251                // Method castToString:(Ljava/lang/Object;)Ljava/lang/String;
     315: aload_0
     316: invokespecial #193                // Method getStringType:()I
     319: invokevirtual #194                // Method setString:(ILjava/lang/String;I)V
     322: goto          833
     325: aload_2
     326: instanceof    #252                // class java/sql/Date
     329: ifeq          344
     332: aload_0
     333: iload_1
     334: aload_2
     335: checkcast     #252                // class java/sql/Date
     338: invokevirtual #253                // Method setDate:(ILjava/sql/Date;)V
     341: goto          833
     344: aload_2
     345: instanceof    #254                // class java/util/Date
     348: ifeq          370
     351: new           #252                // class java/sql/Date
     354: dup
     355: aload_2
     356: checkcast     #254                // class java/util/Date
     359: invokevirtual #255                // Method java/util/Date.getTime:()J
     362: invokespecial #256                // Method java/sql/Date."<init>":(J)V
     365: astore        5
     367: goto          389
     370: aload_0
     371: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
     374: invokeinterface #257,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc2/TimestampUtils;
     379: aconst_null
     380: aload_2
     381: invokevirtual #258                // Method java/lang/Object.toString:()Ljava/lang/String;
     384: invokevirtual #259                // Method org/postgresql/jdbc2/TimestampUtils.toDate:(Ljava/util/Calendar;Ljava/lang/String;)Ljava/sql/Date;
     387: astore        5
     389: aload_0
     390: iload_1
     391: aload         5
     393: invokevirtual #253                // Method setDate:(ILjava/sql/Date;)V
     396: goto          833
     399: aload_2
     400: instanceof    #260                // class java/sql/Time
     403: ifeq          418
     406: aload_0
     407: iload_1
     408: aload_2
     409: checkcast     #260                // class java/sql/Time
     412: invokevirtual #261                // Method setTime:(ILjava/sql/Time;)V
     415: goto          833
     418: aload_2
     419: instanceof    #254                // class java/util/Date
     422: ifeq          444
     425: new           #260                // class java/sql/Time
     428: dup
     429: aload_2
     430: checkcast     #254                // class java/util/Date
     433: invokevirtual #255                // Method java/util/Date.getTime:()J
     436: invokespecial #262                // Method java/sql/Time."<init>":(J)V
     439: astore        5
     441: goto          463
     444: aload_0
     445: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
     448: invokeinterface #257,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc2/TimestampUtils;
     453: aconst_null
     454: aload_2
     455: invokevirtual #258                // Method java/lang/Object.toString:()Ljava/lang/String;
     458: invokevirtual #263                // Method org/postgresql/jdbc2/TimestampUtils.toTime:(Ljava/util/Calendar;Ljava/lang/String;)Ljava/sql/Time;
     461: astore        5
     463: aload_0
     464: iload_1
     465: aload         5
     467: invokevirtual #261                // Method setTime:(ILjava/sql/Time;)V
     470: goto          833
     473: aload_2
     474: instanceof    #264                // class java/sql/Timestamp
     477: ifeq          492
     480: aload_0
     481: iload_1
     482: aload_2
     483: checkcast     #264                // class java/sql/Timestamp
     486: invokevirtual #265                // Method setTimestamp:(ILjava/sql/Timestamp;)V
     489: goto          833
     492: aload_2
     493: instanceof    #254                // class java/util/Date
     496: ifeq          518
     499: new           #264                // class java/sql/Timestamp
     502: dup
     503: aload_2
     504: checkcast     #254                // class java/util/Date
     507: invokevirtual #255                // Method java/util/Date.getTime:()J
     510: invokespecial #266                // Method java/sql/Timestamp."<init>":(J)V
     513: astore        5
     515: goto          537
     518: aload_0
     519: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
     522: invokeinterface #257,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc2/TimestampUtils;
     527: aconst_null
     528: aload_2
     529: invokevirtual #258                // Method java/lang/Object.toString:()Ljava/lang/String;
     532: invokevirtual #267                // Method org/postgresql/jdbc2/TimestampUtils.toTimestamp:(Ljava/util/Calendar;Ljava/lang/String;)Ljava/sql/Timestamp;
     535: astore        5
     537: aload_0
     538: iload_1
     539: aload         5
     541: invokevirtual #265                // Method setTimestamp:(ILjava/sql/Timestamp;)V
     544: goto          833
     547: aload_0
     548: iload_1
     549: aload_2
     550: invokestatic  #268                // Method castToBoolean:(Ljava/lang/Object;)Z
     553: invokevirtual #269                // Method setBoolean:(IZ)V
     556: goto          833
     559: aload_0
     560: iload_1
     561: aload_2
     562: invokevirtual #270                // Method setObject:(ILjava/lang/Object;)V
     565: goto          833
     568: aload_2
     569: instanceof    #271                // class java/sql/Blob
     572: ifeq          587
     575: aload_0
     576: iload_1
     577: aload_2
     578: checkcast     #271                // class java/sql/Blob
     581: invokevirtual #272                // Method setBlob:(ILjava/sql/Blob;)V
     584: goto          833
     587: aload_2
     588: instanceof    #273                // class java/io/InputStream
     591: ifeq          618
     594: aload_0
     595: iload_1
     596: aload_2
     597: checkcast     #273                // class java/io/InputStream
     600: ldc2_w        #274                // long -1l
     603: invokevirtual #276                // Method createBlob:(ILjava/io/InputStream;J)J
     606: lstore        5
     608: aload_0
     609: iload_1
     610: lload         5
     612: invokevirtual #202                // Method setLong:(IJ)V
     615: goto          833
     618: new           #49                 // class org/postgresql/util/PSQLException
     621: dup
     622: ldc_w         #277                // String Cannot cast an instance of {0} to type {1}
     625: iconst_2
     626: anewarray     #95                 // class java/lang/Object
     629: dup
     630: iconst_0
     631: aload_2
     632: invokevirtual #278                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     635: invokevirtual #279                // Method java/lang/Class.getName:()Ljava/lang/String;
     638: aastore
     639: dup
     640: iconst_1
     641: ldc_w         #280                // String Types.BLOB
     644: aastore
     645: invokestatic  #111                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     648: getstatic     #173                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_TYPE:Lorg/postgresql/util/PSQLState;
     651: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     654: athrow
     655: aload_2
     656: instanceof    #281                // class java/sql/Clob
     659: ifeq          674
     662: aload_0
     663: iload_1
     664: aload_2
     665: checkcast     #281                // class java/sql/Clob
     668: invokevirtual #282                // Method setClob:(ILjava/sql/Clob;)V
     671: goto          833
     674: new           #49                 // class org/postgresql/util/PSQLException
     677: dup
     678: ldc_w         #277                // String Cannot cast an instance of {0} to type {1}
     681: iconst_2
     682: anewarray     #95                 // class java/lang/Object
     685: dup
     686: iconst_0
     687: aload_2
     688: invokevirtual #278                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     691: invokevirtual #279                // Method java/lang/Class.getName:()Ljava/lang/String;
     694: aastore
     695: dup
     696: iconst_1
     697: ldc_w         #283                // String Types.CLOB
     700: aastore
     701: invokestatic  #111                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     704: getstatic     #173                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_TYPE:Lorg/postgresql/util/PSQLState;
     707: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     710: athrow
     711: aload_2
     712: instanceof    #284                // class java/sql/Array
     715: ifeq          730
     718: aload_0
     719: iload_1
     720: aload_2
     721: checkcast     #284                // class java/sql/Array
     724: invokevirtual #285                // Method setArray:(ILjava/sql/Array;)V
     727: goto          833
     730: new           #49                 // class org/postgresql/util/PSQLException
     733: dup
     734: ldc_w         #277                // String Cannot cast an instance of {0} to type {1}
     737: iconst_2
     738: anewarray     #95                 // class java/lang/Object
     741: dup
     742: iconst_0
     743: aload_2
     744: invokevirtual #278                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     747: invokevirtual #279                // Method java/lang/Class.getName:()Ljava/lang/String;
     750: aastore
     751: dup
     752: iconst_1
     753: ldc_w         #286                // String Types.ARRAY
     756: aastore
     757: invokestatic  #111                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     760: getstatic     #173                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_TYPE:Lorg/postgresql/util/PSQLState;
     763: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     766: athrow
     767: aload_0
     768: iload_1
     769: aload_2
     770: invokevirtual #258                // Method java/lang/Object.toString:()Ljava/lang/String;
     773: iconst_0
     774: invokespecial #177                // Method bindString:(ILjava/lang/String;I)V
     777: goto          833
     780: aload_2
     781: instanceof    #287                // class org/postgresql/util/PGobject
     784: ifeq          799
     787: aload_0
     788: iload_1
     789: aload_2
     790: checkcast     #287                // class org/postgresql/util/PGobject
     793: invokespecial #288                // Method setPGobject:(ILorg/postgresql/util/PGobject;)V
     796: goto          833
     799: aload_0
     800: iload_1
     801: aload_2
     802: invokevirtual #258                // Method java/lang/Object.toString:()Ljava/lang/String;
     805: iconst_0
     806: invokespecial #177                // Method bindString:(ILjava/lang/String;I)V
     809: goto          833
     812: new           #49                 // class org/postgresql/util/PSQLException
     815: dup
     816: ldc_w         #289                // String Unsupported Types value: {0}
     819: iload_3
     820: invokestatic  #104                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     823: invokestatic  #207                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
     826: getstatic     #173                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_TYPE:Lorg/postgresql/util/PSQLState;
     829: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     832: athrow
     833: return

  private static java.lang.String asString(java.sql.Clob) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: lconst_1
       2: aload_0
       3: invokeinterface #290,  1          // InterfaceMethod java/sql/Clob.length:()J
       8: l2i
       9: invokeinterface #291,  4          // InterfaceMethod java/sql/Clob.getSubString:(JI)Ljava/lang/String;
      14: areturn

  private static int castToInt(java.lang.Object) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: instanceof    #157                // class java/lang/String
       4: ifeq          15
       7: aload_0
       8: checkcast     #157                // class java/lang/String
      11: invokestatic  #292                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      14: ireturn
      15: aload_0
      16: instanceof    #293                // class java/lang/Number
      19: ifeq          30
      22: aload_0
      23: checkcast     #293                // class java/lang/Number
      26: invokevirtual #294                // Method java/lang/Number.intValue:()I
      29: ireturn
      30: aload_0
      31: instanceof    #254                // class java/util/Date
      34: ifeq          46
      37: aload_0
      38: checkcast     #254                // class java/util/Date
      41: invokevirtual #255                // Method java/util/Date.getTime:()J
      44: l2i
      45: ireturn
      46: aload_0
      47: instanceof    #295                // class java/lang/Boolean
      50: ifeq          69
      53: aload_0
      54: checkcast     #295                // class java/lang/Boolean
      57: invokevirtual #296                // Method java/lang/Boolean.booleanValue:()Z
      60: ifeq          67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: ireturn
      69: aload_0
      70: instanceof    #281                // class java/sql/Clob
      73: ifeq          87
      76: aload_0
      77: checkcast     #281                // class java/sql/Clob
      80: invokestatic  #297                // Method asString:(Ljava/sql/Clob;)Ljava/lang/String;
      83: invokestatic  #292                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      86: ireturn
      87: aload_0
      88: instanceof    #298                // class java/lang/Character
      91: ifeq          102
      94: aload_0
      95: invokevirtual #258                // Method java/lang/Object.toString:()Ljava/lang/String;
      98: invokestatic  #292                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     101: ireturn
     102: goto          121
     105: astore_1
     106: aload_0
     107: invokevirtual #278                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     110: invokevirtual #279                // Method java/lang/Class.getName:()Ljava/lang/String;
     113: ldc_w         #299                // String int
     116: aload_1
     117: invokestatic  #300                // Method cannotCastException:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Exception;)Lorg/postgresql/util/PSQLException;
     120: athrow
     121: aload_0
     122: invokevirtual #278                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     125: invokevirtual #279                // Method java/lang/Class.getName:()Ljava/lang/String;
     128: ldc_w         #299                // String int
     131: invokestatic  #301                // Method cannotCastException:(Ljava/lang/String;Ljava/lang/String;)Lorg/postgresql/util/PSQLException;
     134: athrow
    Exception table:
       from    to  target type
           0    14   105   Class java/lang/Exception
          15    29   105   Class java/lang/Exception
          30    45   105   Class java/lang/Exception
          46    68   105   Class java/lang/Exception
          69    86   105   Class java/lang/Exception
          87   101   105   Class java/lang/Exception

  private static short castToShort(java.lang.Object) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: instanceof    #157                // class java/lang/String
       4: ifeq          15
       7: aload_0
       8: checkcast     #157                // class java/lang/String
      11: invokestatic  #302                // Method java/lang/Short.parseShort:(Ljava/lang/String;)S
      14: ireturn
      15: aload_0
      16: instanceof    #293                // class java/lang/Number
      19: ifeq          30
      22: aload_0
      23: checkcast     #293                // class java/lang/Number
      26: invokevirtual #303                // Method java/lang/Number.shortValue:()S
      29: ireturn
      30: aload_0
      31: instanceof    #254                // class java/util/Date
      34: ifeq          47
      37: aload_0
      38: checkcast     #254                // class java/util/Date
      41: invokevirtual #255                // Method java/util/Date.getTime:()J
      44: l2i
      45: i2s
      46: ireturn
      47: aload_0
      48: instanceof    #295                // class java/lang/Boolean
      51: ifeq          70
      54: aload_0
      55: checkcast     #295                // class java/lang/Boolean
      58: invokevirtual #296                // Method java/lang/Boolean.booleanValue:()Z
      61: ifeq          68
      64: iconst_1
      65: goto          69
      68: iconst_0
      69: ireturn
      70: aload_0
      71: instanceof    #281                // class java/sql/Clob
      74: ifeq          88
      77: aload_0
      78: checkcast     #281                // class java/sql/Clob
      81: invokestatic  #297                // Method asString:(Ljava/sql/Clob;)Ljava/lang/String;
      84: invokestatic  #302                // Method java/lang/Short.parseShort:(Ljava/lang/String;)S
      87: ireturn
      88: aload_0
      89: instanceof    #298                // class java/lang/Character
      92: ifeq          103
      95: aload_0
      96: invokevirtual #258                // Method java/lang/Object.toString:()Ljava/lang/String;
      99: invokestatic  #302                // Method java/lang/Short.parseShort:(Ljava/lang/String;)S
     102: ireturn
     103: goto          122
     106: astore_1
     107: aload_0
     108: invokevirtual #278                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     111: invokevirtual #279                // Method java/lang/Class.getName:()Ljava/lang/String;
     114: ldc_w         #304                // String short
     117: aload_1
     118: invokestatic  #300                // Method cannotCastException:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Exception;)Lorg/postgresql/util/PSQLException;
     121: athrow
     122: aload_0
     123: invokevirtual #278                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     126: invokevirtual #279                // Method java/lang/Class.getName:()Ljava/lang/String;
     129: ldc_w         #304                // String short
     132: invokestatic  #301                // Method cannotCastException:(Ljava/lang/String;Ljava/lang/String;)Lorg/postgresql/util/PSQLException;
     135: athrow
    Exception table:
       from    to  target type
           0    14   106   Class java/lang/Exception
          15    29   106   Class java/lang/Exception
          30    46   106   Class java/lang/Exception
          47    69   106   Class java/lang/Exception
          70    87   106   Class java/lang/Exception
          88   102   106   Class java/lang/Exception

  private static long castToLong(java.lang.Object) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: instanceof    #157                // class java/lang/String
       4: ifeq          15
       7: aload_0
       8: checkcast     #157                // class java/lang/String
      11: invokestatic  #305                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      14: lreturn
      15: aload_0
      16: instanceof    #293                // class java/lang/Number
      19: ifeq          30
      22: aload_0
      23: checkcast     #293                // class java/lang/Number
      26: invokevirtual #306                // Method java/lang/Number.longValue:()J
      29: lreturn
      30: aload_0
      31: instanceof    #254                // class java/util/Date
      34: ifeq          45
      37: aload_0
      38: checkcast     #254                // class java/util/Date
      41: invokevirtual #255                // Method java/util/Date.getTime:()J
      44: lreturn
      45: aload_0
      46: instanceof    #295                // class java/lang/Boolean
      49: ifeq          68
      52: aload_0
      53: checkcast     #295                // class java/lang/Boolean
      56: invokevirtual #296                // Method java/lang/Boolean.booleanValue:()Z
      59: ifeq          66
      62: lconst_1
      63: goto          67
      66: lconst_0
      67: lreturn
      68: aload_0
      69: instanceof    #281                // class java/sql/Clob
      72: ifeq          86
      75: aload_0
      76: checkcast     #281                // class java/sql/Clob
      79: invokestatic  #297                // Method asString:(Ljava/sql/Clob;)Ljava/lang/String;
      82: invokestatic  #305                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      85: lreturn
      86: aload_0
      87: instanceof    #298                // class java/lang/Character
      90: ifeq          101
      93: aload_0
      94: invokevirtual #258                // Method java/lang/Object.toString:()Ljava/lang/String;
      97: invokestatic  #305                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
     100: lreturn
     101: goto          120
     104: astore_1
     105: aload_0
     106: invokevirtual #278                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     109: invokevirtual #279                // Method java/lang/Class.getName:()Ljava/lang/String;
     112: ldc_w         #307                // String long
     115: aload_1
     116: invokestatic  #300                // Method cannotCastException:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Exception;)Lorg/postgresql/util/PSQLException;
     119: athrow
     120: aload_0
     121: invokevirtual #278                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     124: invokevirtual #279                // Method java/lang/Class.getName:()Ljava/lang/String;
     127: ldc_w         #307                // String long
     130: invokestatic  #301                // Method cannotCastException:(Ljava/lang/String;Ljava/lang/String;)Lorg/postgresql/util/PSQLException;
     133: athrow
    Exception table:
       from    to  target type
           0    14   104   Class java/lang/Exception
          15    29   104   Class java/lang/Exception
          30    44   104   Class java/lang/Exception
          45    67   104   Class java/lang/Exception
          68    85   104   Class java/lang/Exception
          86   100   104   Class java/lang/Exception

  private static float castToFloat(java.lang.Object) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: instanceof    #157                // class java/lang/String
       4: ifeq          15
       7: aload_0
       8: checkcast     #157                // class java/lang/String
      11: invokestatic  #308                // Method java/lang/Float.parseFloat:(Ljava/lang/String;)F
      14: freturn
      15: aload_0
      16: instanceof    #293                // class java/lang/Number
      19: ifeq          30
      22: aload_0
      23: checkcast     #293                // class java/lang/Number
      26: invokevirtual #309                // Method java/lang/Number.floatValue:()F
      29: freturn
      30: aload_0
      31: instanceof    #254                // class java/util/Date
      34: ifeq          46
      37: aload_0
      38: checkcast     #254                // class java/util/Date
      41: invokevirtual #255                // Method java/util/Date.getTime:()J
      44: l2f
      45: freturn
      46: aload_0
      47: instanceof    #295                // class java/lang/Boolean
      50: ifeq          69
      53: aload_0
      54: checkcast     #295                // class java/lang/Boolean
      57: invokevirtual #296                // Method java/lang/Boolean.booleanValue:()Z
      60: ifeq          67
      63: fconst_1
      64: goto          68
      67: fconst_0
      68: freturn
      69: aload_0
      70: instanceof    #281                // class java/sql/Clob
      73: ifeq          87
      76: aload_0
      77: checkcast     #281                // class java/sql/Clob
      80: invokestatic  #297                // Method asString:(Ljava/sql/Clob;)Ljava/lang/String;
      83: invokestatic  #308                // Method java/lang/Float.parseFloat:(Ljava/lang/String;)F
      86: freturn
      87: aload_0
      88: instanceof    #298                // class java/lang/Character
      91: ifeq          102
      94: aload_0
      95: invokevirtual #258                // Method java/lang/Object.toString:()Ljava/lang/String;
      98: invokestatic  #308                // Method java/lang/Float.parseFloat:(Ljava/lang/String;)F
     101: freturn
     102: goto          121
     105: astore_1
     106: aload_0
     107: invokevirtual #278                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     110: invokevirtual #279                // Method java/lang/Class.getName:()Ljava/lang/String;
     113: ldc_w         #310                // String float
     116: aload_1
     117: invokestatic  #300                // Method cannotCastException:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Exception;)Lorg/postgresql/util/PSQLException;
     120: athrow
     121: aload_0
     122: invokevirtual #278                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     125: invokevirtual #279                // Method java/lang/Class.getName:()Ljava/lang/String;
     128: ldc_w         #310                // String float
     131: invokestatic  #301                // Method cannotCastException:(Ljava/lang/String;Ljava/lang/String;)Lorg/postgresql/util/PSQLException;
     134: athrow
    Exception table:
       from    to  target type
           0    14   105   Class java/lang/Exception
          15    29   105   Class java/lang/Exception
          30    45   105   Class java/lang/Exception
          46    68   105   Class java/lang/Exception
          69    86   105   Class java/lang/Exception
          87   101   105   Class java/lang/Exception

  private static double castToDouble(java.lang.Object) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: instanceof    #157                // class java/lang/String
       4: ifeq          15
       7: aload_0
       8: checkcast     #157                // class java/lang/String
      11: invokestatic  #311                // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
      14: dreturn
      15: aload_0
      16: instanceof    #293                // class java/lang/Number
      19: ifeq          30
      22: aload_0
      23: checkcast     #293                // class java/lang/Number
      26: invokevirtual #312                // Method java/lang/Number.doubleValue:()D
      29: dreturn
      30: aload_0
      31: instanceof    #254                // class java/util/Date
      34: ifeq          46
      37: aload_0
      38: checkcast     #254                // class java/util/Date
      41: invokevirtual #255                // Method java/util/Date.getTime:()J
      44: l2d
      45: dreturn
      46: aload_0
      47: instanceof    #295                // class java/lang/Boolean
      50: ifeq          69
      53: aload_0
      54: checkcast     #295                // class java/lang/Boolean
      57: invokevirtual #296                // Method java/lang/Boolean.booleanValue:()Z
      60: ifeq          67
      63: dconst_1
      64: goto          68
      67: dconst_0
      68: dreturn
      69: aload_0
      70: instanceof    #281                // class java/sql/Clob
      73: ifeq          87
      76: aload_0
      77: checkcast     #281                // class java/sql/Clob
      80: invokestatic  #297                // Method asString:(Ljava/sql/Clob;)Ljava/lang/String;
      83: invokestatic  #311                // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
      86: dreturn
      87: aload_0
      88: instanceof    #298                // class java/lang/Character
      91: ifeq          102
      94: aload_0
      95: invokevirtual #258                // Method java/lang/Object.toString:()Ljava/lang/String;
      98: invokestatic  #311                // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
     101: dreturn
     102: goto          121
     105: astore_1
     106: aload_0
     107: invokevirtual #278                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     110: invokevirtual #279                // Method java/lang/Class.getName:()Ljava/lang/String;
     113: ldc_w         #313                // String double
     116: aload_1
     117: invokestatic  #300                // Method cannotCastException:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Exception;)Lorg/postgresql/util/PSQLException;
     120: athrow
     121: aload_0
     122: invokevirtual #278                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     125: invokevirtual #279                // Method java/lang/Class.getName:()Ljava/lang/String;
     128: ldc_w         #313                // String double
     131: invokestatic  #301                // Method cannotCastException:(Ljava/lang/String;Ljava/lang/String;)Lorg/postgresql/util/PSQLException;
     134: athrow
    Exception table:
       from    to  target type
           0    14   105   Class java/lang/Exception
          15    29   105   Class java/lang/Exception
          30    45   105   Class java/lang/Exception
          46    68   105   Class java/lang/Exception
          69    86   105   Class java/lang/Exception
          87   101   105   Class java/lang/Exception

  private static java.math.BigDecimal castToBigDecimal(java.lang.Object, int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: instanceof    #157                // class java/lang/String
       6: ifeq          24
       9: new           #314                // class java/math/BigDecimal
      12: dup
      13: aload_0
      14: checkcast     #157                // class java/lang/String
      17: invokespecial #315                // Method java/math/BigDecimal."<init>":(Ljava/lang/String;)V
      20: astore_2
      21: goto          235
      24: aload_0
      25: instanceof    #314                // class java/math/BigDecimal
      28: ifeq          39
      31: aload_0
      32: checkcast     #314                // class java/math/BigDecimal
      35: astore_2
      36: goto          235
      39: aload_0
      40: instanceof    #316                // class java/math/BigInteger
      43: ifeq          61
      46: new           #314                // class java/math/BigDecimal
      49: dup
      50: aload_0
      51: checkcast     #316                // class java/math/BigInteger
      54: invokespecial #317                // Method java/math/BigDecimal."<init>":(Ljava/math/BigInteger;)V
      57: astore_2
      58: goto          235
      61: aload_0
      62: instanceof    #318                // class java/lang/Long
      65: ifne          89
      68: aload_0
      69: instanceof    #319                // class java/lang/Integer
      72: ifne          89
      75: aload_0
      76: instanceof    #320                // class java/lang/Short
      79: ifne          89
      82: aload_0
      83: instanceof    #321                // class java/lang/Byte
      86: ifeq          103
      89: aload_0
      90: checkcast     #293                // class java/lang/Number
      93: invokevirtual #306                // Method java/lang/Number.longValue:()J
      96: invokestatic  #322                // Method java/math/BigDecimal.valueOf:(J)Ljava/math/BigDecimal;
      99: astore_2
     100: goto          235
     103: aload_0
     104: instanceof    #100                // class java/lang/Double
     107: ifne          117
     110: aload_0
     111: instanceof    #323                // class java/lang/Float
     114: ifeq          131
     117: aload_0
     118: checkcast     #293                // class java/lang/Number
     121: invokevirtual #312                // Method java/lang/Number.doubleValue:()D
     124: invokestatic  #324                // Method java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;
     127: astore_2
     128: goto          235
     131: aload_0
     132: instanceof    #254                // class java/util/Date
     135: ifeq          152
     138: aload_0
     139: checkcast     #254                // class java/util/Date
     142: invokevirtual #255                // Method java/util/Date.getTime:()J
     145: invokestatic  #322                // Method java/math/BigDecimal.valueOf:(J)Ljava/math/BigDecimal;
     148: astore_2
     149: goto          235
     152: aload_0
     153: instanceof    #295                // class java/lang/Boolean
     156: ifeq          182
     159: aload_0
     160: checkcast     #295                // class java/lang/Boolean
     163: invokevirtual #296                // Method java/lang/Boolean.booleanValue:()Z
     166: ifeq          175
     169: getstatic     #325                // Field java/math/BigDecimal.ONE:Ljava/math/BigDecimal;
     172: goto          178
     175: getstatic     #326                // Field java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;
     178: astore_2
     179: goto          235
     182: aload_0
     183: instanceof    #281                // class java/sql/Clob
     186: ifeq          207
     189: new           #314                // class java/math/BigDecimal
     192: dup
     193: aload_0
     194: checkcast     #281                // class java/sql/Clob
     197: invokestatic  #297                // Method asString:(Ljava/sql/Clob;)Ljava/lang/String;
     200: invokespecial #315                // Method java/math/BigDecimal."<init>":(Ljava/lang/String;)V
     203: astore_2
     204: goto          235
     207: aload_0
     208: instanceof    #298                // class java/lang/Character
     211: ifeq          235
     214: new           #314                // class java/math/BigDecimal
     217: dup
     218: iconst_1
     219: newarray       char
     221: dup
     222: iconst_0
     223: aload_0
     224: checkcast     #298                // class java/lang/Character
     227: invokevirtual #327                // Method java/lang/Character.charValue:()C
     230: castore
     231: invokespecial #328                // Method java/math/BigDecimal."<init>":([C)V
     234: astore_2
     235: aload_2
     236: ifnull        254
     239: iload_1
     240: iflt          252
     243: aload_2
     244: iload_1
     245: getstatic     #329                // Field java/math/RoundingMode.HALF_UP:Ljava/math/RoundingMode;
     248: invokevirtual #330                // Method java/math/BigDecimal.setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
     251: astore_2
     252: aload_2
     253: areturn
     254: goto          273
     257: astore_2
     258: aload_0
     259: invokevirtual #278                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     262: invokevirtual #279                // Method java/lang/Class.getName:()Ljava/lang/String;
     265: ldc_w         #331                // String BigDecimal
     268: aload_2
     269: invokestatic  #300                // Method cannotCastException:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Exception;)Lorg/postgresql/util/PSQLException;
     272: athrow
     273: aload_0
     274: invokevirtual #278                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     277: invokevirtual #279                // Method java/lang/Class.getName:()Ljava/lang/String;
     280: ldc_w         #331                // String BigDecimal
     283: invokestatic  #301                // Method cannotCastException:(Ljava/lang/String;Ljava/lang/String;)Lorg/postgresql/util/PSQLException;
     286: athrow
    Exception table:
       from    to  target type
           0   253   257   Class java/lang/Exception

  private static boolean castToBoolean(java.lang.Object) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: instanceof    #157                // class java/lang/String
       4: ifeq          51
       7: aload_0
       8: checkcast     #157                // class java/lang/String
      11: ldc_w         #332                // String true
      14: invokevirtual #333                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      17: ifne          45
      20: aload_0
      21: checkcast     #157                // class java/lang/String
      24: ldc           #175                // String 1
      26: invokevirtual #334                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      29: ifne          45
      32: aload_0
      33: checkcast     #157                // class java/lang/String
      36: ldc_w         #335                // String t
      39: invokevirtual #333                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      42: ifeq          49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: ireturn
      51: aload_0
      52: instanceof    #314                // class java/math/BigDecimal
      55: ifeq          74
      58: aload_0
      59: checkcast     #314                // class java/math/BigDecimal
      62: invokevirtual #336                // Method java/math/BigDecimal.signum:()I
      65: ifeq          72
      68: iconst_1
      69: goto          73
      72: iconst_0
      73: ireturn
      74: aload_0
      75: instanceof    #293                // class java/lang/Number
      78: ifeq          99
      81: aload_0
      82: checkcast     #293                // class java/lang/Number
      85: invokevirtual #306                // Method java/lang/Number.longValue:()J
      88: lconst_0
      89: lcmp
      90: ifeq          97
      93: iconst_1
      94: goto          98
      97: iconst_0
      98: ireturn
      99: aload_0
     100: instanceof    #254                // class java/util/Date
     103: ifeq          124
     106: aload_0
     107: checkcast     #254                // class java/util/Date
     110: invokevirtual #255                // Method java/util/Date.getTime:()J
     113: lconst_0
     114: lcmp
     115: ifeq          122
     118: iconst_1
     119: goto          123
     122: iconst_0
     123: ireturn
     124: aload_0
     125: instanceof    #295                // class java/lang/Boolean
     128: ifeq          139
     131: aload_0
     132: checkcast     #295                // class java/lang/Boolean
     135: invokevirtual #296                // Method java/lang/Boolean.booleanValue:()Z
     138: ireturn
     139: aload_0
     140: instanceof    #281                // class java/sql/Clob
     143: ifeq          189
     146: aload_0
     147: checkcast     #281                // class java/sql/Clob
     150: invokestatic  #297                // Method asString:(Ljava/sql/Clob;)Ljava/lang/String;
     153: astore_1
     154: aload_1
     155: ldc_w         #332                // String true
     158: invokevirtual #333                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     161: ifne          183
     164: aload_1
     165: ldc           #175                // String 1
     167: invokevirtual #334                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     170: ifne          183
     173: aload_1
     174: ldc_w         #335                // String t
     177: invokevirtual #333                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     180: ifeq          187
     183: iconst_1
     184: goto          188
     187: iconst_0
     188: ireturn
     189: aload_0
     190: instanceof    #298                // class java/lang/Character
     193: ifeq          238
     196: aload_0
     197: checkcast     #298                // class java/lang/Character
     200: invokevirtual #327                // Method java/lang/Character.charValue:()C
     203: bipush        49
     205: if_icmpeq     232
     208: aload_0
     209: checkcast     #298                // class java/lang/Character
     212: invokevirtual #327                // Method java/lang/Character.charValue:()C
     215: bipush        116
     217: if_icmpeq     232
     220: aload_0
     221: checkcast     #298                // class java/lang/Character
     224: invokevirtual #327                // Method java/lang/Character.charValue:()C
     227: bipush        84
     229: if_icmpne     236
     232: iconst_1
     233: goto          237
     236: iconst_0
     237: ireturn
     238: goto          257
     241: astore_1
     242: aload_0
     243: invokevirtual #278                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     246: invokevirtual #279                // Method java/lang/Class.getName:()Ljava/lang/String;
     249: ldc_w         #337                // String boolean
     252: aload_1
     253: invokestatic  #300                // Method cannotCastException:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Exception;)Lorg/postgresql/util/PSQLException;
     256: athrow
     257: aload_0
     258: invokevirtual #278                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     261: invokevirtual #279                // Method java/lang/Class.getName:()Ljava/lang/String;
     264: ldc_w         #337                // String boolean
     267: invokestatic  #301                // Method cannotCastException:(Ljava/lang/String;Ljava/lang/String;)Lorg/postgresql/util/PSQLException;
     270: athrow
    Exception table:
       from    to  target type
           0    50   241   Class java/lang/Exception
          51    73   241   Class java/lang/Exception
          74    98   241   Class java/lang/Exception
          99   123   241   Class java/lang/Exception
         124   138   241   Class java/lang/Exception
         139   188   241   Class java/lang/Exception
         189   237   241   Class java/lang/Exception

  private static java.lang.String castToString(java.lang.Object) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: instanceof    #157                // class java/lang/String
       4: ifeq          12
       7: aload_0
       8: checkcast     #157                // class java/lang/String
      11: areturn
      12: aload_0
      13: instanceof    #293                // class java/lang/Number
      16: ifne          40
      19: aload_0
      20: instanceof    #295                // class java/lang/Boolean
      23: ifne          40
      26: aload_0
      27: instanceof    #298                // class java/lang/Character
      30: ifne          40
      33: aload_0
      34: instanceof    #254                // class java/util/Date
      37: ifeq          45
      40: aload_0
      41: invokevirtual #258                // Method java/lang/Object.toString:()Ljava/lang/String;
      44: areturn
      45: aload_0
      46: instanceof    #281                // class java/sql/Clob
      49: ifeq          60
      52: aload_0
      53: checkcast     #281                // class java/sql/Clob
      56: invokestatic  #297                // Method asString:(Ljava/sql/Clob;)Ljava/lang/String;
      59: areturn
      60: goto          79
      63: astore_1
      64: aload_0
      65: invokevirtual #278                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      68: invokevirtual #279                // Method java/lang/Class.getName:()Ljava/lang/String;
      71: ldc_w         #338                // String String
      74: aload_1
      75: invokestatic  #300                // Method cannotCastException:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Exception;)Lorg/postgresql/util/PSQLException;
      78: athrow
      79: aload_0
      80: invokevirtual #278                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      83: invokevirtual #279                // Method java/lang/Class.getName:()Ljava/lang/String;
      86: ldc_w         #338                // String String
      89: invokestatic  #301                // Method cannotCastException:(Ljava/lang/String;Ljava/lang/String;)Lorg/postgresql/util/PSQLException;
      92: athrow
    Exception table:
       from    to  target type
           0    11    63   Class java/lang/Exception
          12    44    63   Class java/lang/Exception
          45    59    63   Class java/lang/Exception

  private static org.postgresql.util.PSQLException cannotCastException(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokestatic  #300                // Method cannotCastException:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Exception;)Lorg/postgresql/util/PSQLException;
       6: areturn

  private static org.postgresql.util.PSQLException cannotCastException(java.lang.String, java.lang.String, java.lang.Exception);
    Code:
       0: new           #49                 // class org/postgresql/util/PSQLException
       3: dup
       4: ldc_w         #339                // String Cannot convert an instance of {0} to type {1}
       7: iconst_2
       8: anewarray     #95                 // class java/lang/Object
      11: dup
      12: iconst_0
      13: aload_0
      14: aastore
      15: dup
      16: iconst_1
      17: aload_1
      18: aastore
      19: invokestatic  #111                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      22: getstatic     #173                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_TYPE:Lorg/postgresql/util/PSQLState;
      25: aload_2
      26: invokespecial #215                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
      29: areturn

  public void setObject(int, java.lang.Object, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: iconst_m1
       5: invokevirtual #340                // Method setObject:(ILjava/lang/Object;II)V
       8: return

  public void setObject(int, java.lang.Object) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_2
       5: ifnonnull     19
       8: aload_0
       9: iload_1
      10: sipush        1111
      13: invokevirtual #191                // Method setNull:(II)V
      16: goto          431
      19: aload_2
      20: instanceof    #157                // class java/lang/String
      23: ifeq          38
      26: aload_0
      27: iload_1
      28: aload_2
      29: checkcast     #157                // class java/lang/String
      32: invokevirtual #341                // Method setString:(ILjava/lang/String;)V
      35: goto          431
      38: aload_2
      39: instanceof    #314                // class java/math/BigDecimal
      42: ifeq          57
      45: aload_0
      46: iload_1
      47: aload_2
      48: checkcast     #314                // class java/math/BigDecimal
      51: invokevirtual #250                // Method setBigDecimal:(ILjava/math/BigDecimal;)V
      54: goto          431
      57: aload_2
      58: instanceof    #320                // class java/lang/Short
      61: ifeq          79
      64: aload_0
      65: iload_1
      66: aload_2
      67: checkcast     #320                // class java/lang/Short
      70: invokevirtual #342                // Method java/lang/Short.shortValue:()S
      73: invokevirtual #178                // Method setShort:(IS)V
      76: goto          431
      79: aload_2
      80: instanceof    #319                // class java/lang/Integer
      83: ifeq          101
      86: aload_0
      87: iload_1
      88: aload_2
      89: checkcast     #319                // class java/lang/Integer
      92: invokevirtual #343                // Method java/lang/Integer.intValue:()I
      95: invokevirtual #242                // Method setInt:(II)V
      98: goto          431
     101: aload_2
     102: instanceof    #318                // class java/lang/Long
     105: ifeq          123
     108: aload_0
     109: iload_1
     110: aload_2
     111: checkcast     #318                // class java/lang/Long
     114: invokevirtual #344                // Method java/lang/Long.longValue:()J
     117: invokevirtual #202                // Method setLong:(IJ)V
     120: goto          431
     123: aload_2
     124: instanceof    #323                // class java/lang/Float
     127: ifeq          145
     130: aload_0
     131: iload_1
     132: aload_2
     133: checkcast     #323                // class java/lang/Float
     136: invokevirtual #345                // Method java/lang/Float.floatValue:()F
     139: invokevirtual #246                // Method setFloat:(IF)V
     142: goto          431
     145: aload_2
     146: instanceof    #100                // class java/lang/Double
     149: ifeq          167
     152: aload_0
     153: iload_1
     154: aload_2
     155: checkcast     #100                // class java/lang/Double
     158: invokevirtual #346                // Method java/lang/Double.doubleValue:()D
     161: invokevirtual #248                // Method setDouble:(ID)V
     164: goto          431
     167: aload_2
     168: instanceof    #347                // class "[B"
     171: ifeq          189
     174: aload_0
     175: iload_1
     176: aload_2
     177: checkcast     #347                // class "[B"
     180: checkcast     #347                // class "[B"
     183: invokevirtual #348                // Method setBytes:(I[B)V
     186: goto          431
     189: aload_2
     190: instanceof    #252                // class java/sql/Date
     193: ifeq          208
     196: aload_0
     197: iload_1
     198: aload_2
     199: checkcast     #252                // class java/sql/Date
     202: invokevirtual #253                // Method setDate:(ILjava/sql/Date;)V
     205: goto          431
     208: aload_2
     209: instanceof    #260                // class java/sql/Time
     212: ifeq          227
     215: aload_0
     216: iload_1
     217: aload_2
     218: checkcast     #260                // class java/sql/Time
     221: invokevirtual #261                // Method setTime:(ILjava/sql/Time;)V
     224: goto          431
     227: aload_2
     228: instanceof    #264                // class java/sql/Timestamp
     231: ifeq          246
     234: aload_0
     235: iload_1
     236: aload_2
     237: checkcast     #264                // class java/sql/Timestamp
     240: invokevirtual #265                // Method setTimestamp:(ILjava/sql/Timestamp;)V
     243: goto          431
     246: aload_2
     247: instanceof    #295                // class java/lang/Boolean
     250: ifeq          268
     253: aload_0
     254: iload_1
     255: aload_2
     256: checkcast     #295                // class java/lang/Boolean
     259: invokevirtual #296                // Method java/lang/Boolean.booleanValue:()Z
     262: invokevirtual #269                // Method setBoolean:(IZ)V
     265: goto          431
     268: aload_2
     269: instanceof    #321                // class java/lang/Byte
     272: ifeq          290
     275: aload_0
     276: iload_1
     277: aload_2
     278: checkcast     #321                // class java/lang/Byte
     281: invokevirtual #349                // Method java/lang/Byte.byteValue:()B
     284: invokevirtual #350                // Method setByte:(IB)V
     287: goto          431
     290: aload_2
     291: instanceof    #271                // class java/sql/Blob
     294: ifeq          309
     297: aload_0
     298: iload_1
     299: aload_2
     300: checkcast     #271                // class java/sql/Blob
     303: invokevirtual #272                // Method setBlob:(ILjava/sql/Blob;)V
     306: goto          431
     309: aload_2
     310: instanceof    #281                // class java/sql/Clob
     313: ifeq          328
     316: aload_0
     317: iload_1
     318: aload_2
     319: checkcast     #281                // class java/sql/Clob
     322: invokevirtual #282                // Method setClob:(ILjava/sql/Clob;)V
     325: goto          431
     328: aload_2
     329: instanceof    #284                // class java/sql/Array
     332: ifeq          347
     335: aload_0
     336: iload_1
     337: aload_2
     338: checkcast     #284                // class java/sql/Array
     341: invokevirtual #285                // Method setArray:(ILjava/sql/Array;)V
     344: goto          431
     347: aload_2
     348: instanceof    #287                // class org/postgresql/util/PGobject
     351: ifeq          366
     354: aload_0
     355: iload_1
     356: aload_2
     357: checkcast     #287                // class org/postgresql/util/PGobject
     360: invokespecial #288                // Method setPGobject:(ILorg/postgresql/util/PGobject;)V
     363: goto          431
     366: aload_2
     367: instanceof    #298                // class java/lang/Character
     370: ifeq          388
     373: aload_0
     374: iload_1
     375: aload_2
     376: checkcast     #298                // class java/lang/Character
     379: invokevirtual #351                // Method java/lang/Character.toString:()Ljava/lang/String;
     382: invokevirtual #341                // Method setString:(ILjava/lang/String;)V
     385: goto          431
     388: aload_2
     389: instanceof    #352                // class java/util/Map
     392: ifeq          407
     395: aload_0
     396: iload_1
     397: aload_2
     398: checkcast     #352                // class java/util/Map
     401: invokespecial #353                // Method setMap:(ILjava/util/Map;)V
     404: goto          431
     407: new           #49                 // class org/postgresql/util/PSQLException
     410: dup
     411: ldc_w         #354                // String Can\'\'t infer the SQL type to use for an instance of {0}. Use setObject() with an explicit Types value to specify the type to use.
     414: aload_2
     415: invokevirtual #278                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     418: invokevirtual #279                // Method java/lang/Class.getName:()Ljava/lang/String;
     421: invokestatic  #207                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
     424: getstatic     #173                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_TYPE:Lorg/postgresql/util/PSQLState;
     427: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     430: athrow
     431: return

  public void registerOutParameter(int, int, boolean) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: iload_2
       5: tableswitch   { // -6 to 6
                    -6: 72
                    -5: 100
                    -4: 94
                    -3: 94
                    -2: 100
                    -1: 77
                     0: 100
                     1: 100
                     2: 100
                     3: 83
                     4: 100
                     5: 100
                     6: 88
               default: 100
          }
      72: iconst_5
      73: istore_2
      74: goto          100
      77: bipush        12
      79: istore_2
      80: goto          100
      83: iconst_2
      84: istore_2
      85: goto          100
      88: bipush        8
      90: istore_2
      91: goto          100
      94: bipush        -2
      96: istore_2
      97: goto          100
     100: aload_0
     101: getfield      #42                 // Field isFunction:Z
     104: ifne          124
     107: new           #49                 // class org/postgresql/util/PSQLException
     110: dup
     111: ldc_w         #355                // String This statement does not declare an OUT parameter.  Use \'{\' ?= call ... \'}\' to declare one.
     114: invokestatic  #51                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
     117: getstatic     #356                // Field org/postgresql/util/PSQLState.STATEMENT_NOT_ALLOWED_IN_FUNCTION_CALL:Lorg/postgresql/util/PSQLState;
     120: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     123: athrow
     124: aload_0
     125: iload_1
     126: iconst_0
     127: invokespecial #357                // Method checkIndex:(IZ)V
     130: iload_3
     131: ifeq          145
     134: aload_0
     135: getfield      #31                 // Field preparedParameters:Lorg/postgresql/core/ParameterList;
     138: iload_1
     139: iload_2
     140: invokeinterface #358,  3          // InterfaceMethod org/postgresql/core/ParameterList.registerOutParameter:(II)V
     145: aload_0
     146: getfield      #48                 // Field functionReturnType:[I
     149: iload_1
     150: iconst_1
     151: isub
     152: iload_2
     153: iastore
     154: aload_0
     155: getfield      #47                 // Field testReturn:[I
     158: iload_1
     159: iconst_1
     160: isub
     161: iload_2
     162: iastore
     163: aload_0
     164: getfield      #48                 // Field functionReturnType:[I
     167: iload_1
     168: iconst_1
     169: isub
     170: iaload
     171: iconst_1
     172: if_icmpeq     187
     175: aload_0
     176: getfield      #48                 // Field functionReturnType:[I
     179: iload_1
     180: iconst_1
     181: isub
     182: iaload
     183: iconst_m1
     184: if_icmpne     200
     187: aload_0
     188: getfield      #47                 // Field testReturn:[I
     191: iload_1
     192: iconst_1
     193: isub
     194: bipush        12
     196: iastore
     197: goto          223
     200: aload_0
     201: getfield      #48                 // Field functionReturnType:[I
     204: iload_1
     205: iconst_1
     206: isub
     207: iaload
     208: bipush        6
     210: if_icmpne     223
     213: aload_0
     214: getfield      #47                 // Field testReturn:[I
     217: iload_1
     218: iconst_1
     219: isub
     220: bipush        7
     222: iastore
     223: aload_0
     224: iconst_1
     225: putfield      #86                 // Field returnTypeSet:Z
     228: return

  public void registerOutParameter(int, int, int, boolean) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload         4
       5: invokevirtual #359                // Method registerOutParameter:(IIZ)V
       8: return

  public boolean wasNull() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field lastIndex:I
       4: ifne          24
       7: new           #49                 // class org/postgresql/util/PSQLException
      10: dup
      11: ldc_w         #360                // String wasNull cannot be call before fetching a result.
      14: invokestatic  #51                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      17: getstatic     #361                // Field org/postgresql/util/PSQLState.OBJECT_NOT_IN_STATE:Lorg/postgresql/util/PSQLState;
      20: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      23: athrow
      24: aload_0
      25: getfield      #96                 // Field callResult:[Ljava/lang/Object;
      28: aload_0
      29: getfield      #28                 // Field lastIndex:I
      32: iconst_1
      33: isub
      34: aaload
      35: ifnonnull     42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: ireturn

  public java.lang.String getString(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: iload_1
       6: bipush        12
       8: ldc_w         #338                // String String
      11: invokevirtual #362                // Method checkIndex:(IILjava/lang/String;)V
      14: aload_0
      15: getfield      #96                 // Field callResult:[Ljava/lang/Object;
      18: iload_1
      19: iconst_1
      20: isub
      21: aaload
      22: checkcast     #157                // class java/lang/String
      25: areturn

  public boolean getBoolean(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: iload_1
       6: bipush        -7
       8: ldc_w         #363                // String Boolean
      11: invokevirtual #362                // Method checkIndex:(IILjava/lang/String;)V
      14: aload_0
      15: getfield      #96                 // Field callResult:[Ljava/lang/Object;
      18: iload_1
      19: iconst_1
      20: isub
      21: aaload
      22: ifnonnull     27
      25: iconst_0
      26: ireturn
      27: aload_0
      28: getfield      #96                 // Field callResult:[Ljava/lang/Object;
      31: iload_1
      32: iconst_1
      33: isub
      34: aaload
      35: checkcast     #295                // class java/lang/Boolean
      38: invokevirtual #296                // Method java/lang/Boolean.booleanValue:()Z
      41: ireturn

  public byte getByte(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: iload_1
       6: iconst_5
       7: ldc_w         #364                // String Byte
      10: invokevirtual #362                // Method checkIndex:(IILjava/lang/String;)V
      13: aload_0
      14: getfield      #96                 // Field callResult:[Ljava/lang/Object;
      17: iload_1
      18: iconst_1
      19: isub
      20: aaload
      21: ifnonnull     26
      24: iconst_0
      25: ireturn
      26: aload_0
      27: getfield      #96                 // Field callResult:[Ljava/lang/Object;
      30: iload_1
      31: iconst_1
      32: isub
      33: aaload
      34: checkcast     #319                // class java/lang/Integer
      37: invokevirtual #365                // Method java/lang/Integer.byteValue:()B
      40: ireturn

  public short getShort(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: iload_1
       6: iconst_5
       7: ldc_w         #366                // String Short
      10: invokevirtual #362                // Method checkIndex:(IILjava/lang/String;)V
      13: aload_0
      14: getfield      #96                 // Field callResult:[Ljava/lang/Object;
      17: iload_1
      18: iconst_1
      19: isub
      20: aaload
      21: ifnonnull     26
      24: iconst_0
      25: ireturn
      26: aload_0
      27: getfield      #96                 // Field callResult:[Ljava/lang/Object;
      30: iload_1
      31: iconst_1
      32: isub
      33: aaload
      34: checkcast     #319                // class java/lang/Integer
      37: invokevirtual #367                // Method java/lang/Integer.shortValue:()S
      40: ireturn

  public int getInt(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: iload_1
       6: iconst_4
       7: ldc_w         #368                // String Int
      10: invokevirtual #362                // Method checkIndex:(IILjava/lang/String;)V
      13: aload_0
      14: getfield      #96                 // Field callResult:[Ljava/lang/Object;
      17: iload_1
      18: iconst_1
      19: isub
      20: aaload
      21: ifnonnull     26
      24: iconst_0
      25: ireturn
      26: aload_0
      27: getfield      #96                 // Field callResult:[Ljava/lang/Object;
      30: iload_1
      31: iconst_1
      32: isub
      33: aaload
      34: checkcast     #319                // class java/lang/Integer
      37: invokevirtual #343                // Method java/lang/Integer.intValue:()I
      40: ireturn

  public long getLong(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: iload_1
       6: bipush        -5
       8: ldc_w         #369                // String Long
      11: invokevirtual #362                // Method checkIndex:(IILjava/lang/String;)V
      14: aload_0
      15: getfield      #96                 // Field callResult:[Ljava/lang/Object;
      18: iload_1
      19: iconst_1
      20: isub
      21: aaload
      22: ifnonnull     27
      25: lconst_0
      26: lreturn
      27: aload_0
      28: getfield      #96                 // Field callResult:[Ljava/lang/Object;
      31: iload_1
      32: iconst_1
      33: isub
      34: aaload
      35: checkcast     #318                // class java/lang/Long
      38: invokevirtual #344                // Method java/lang/Long.longValue:()J
      41: lreturn

  public float getFloat(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: iload_1
       6: bipush        7
       8: ldc_w         #370                // String Float
      11: invokevirtual #362                // Method checkIndex:(IILjava/lang/String;)V
      14: aload_0
      15: getfield      #96                 // Field callResult:[Ljava/lang/Object;
      18: iload_1
      19: iconst_1
      20: isub
      21: aaload
      22: ifnonnull     27
      25: fconst_0
      26: freturn
      27: aload_0
      28: getfield      #96                 // Field callResult:[Ljava/lang/Object;
      31: iload_1
      32: iconst_1
      33: isub
      34: aaload
      35: checkcast     #323                // class java/lang/Float
      38: invokevirtual #345                // Method java/lang/Float.floatValue:()F
      41: freturn

  public double getDouble(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: iload_1
       6: bipush        8
       8: ldc_w         #371                // String Double
      11: invokevirtual #362                // Method checkIndex:(IILjava/lang/String;)V
      14: aload_0
      15: getfield      #96                 // Field callResult:[Ljava/lang/Object;
      18: iload_1
      19: iconst_1
      20: isub
      21: aaload
      22: ifnonnull     27
      25: dconst_0
      26: dreturn
      27: aload_0
      28: getfield      #96                 // Field callResult:[Ljava/lang/Object;
      31: iload_1
      32: iconst_1
      33: isub
      34: aaload
      35: checkcast     #100                // class java/lang/Double
      38: invokevirtual #346                // Method java/lang/Double.doubleValue:()D
      41: dreturn

  public java.math.BigDecimal getBigDecimal(int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: iload_1
       6: iconst_2
       7: ldc_w         #331                // String BigDecimal
      10: invokevirtual #362                // Method checkIndex:(IILjava/lang/String;)V
      13: aload_0
      14: getfield      #96                 // Field callResult:[Ljava/lang/Object;
      17: iload_1
      18: iconst_1
      19: isub
      20: aaload
      21: checkcast     #314                // class java/math/BigDecimal
      24: areturn

  public byte[] getBytes(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: iload_1
       6: bipush        -3
       8: bipush        -2
      10: ldc_w         #372                // String Bytes
      13: invokevirtual #373                // Method checkIndex:(IIILjava/lang/String;)V
      16: aload_0
      17: getfield      #96                 // Field callResult:[Ljava/lang/Object;
      20: iload_1
      21: iconst_1
      22: isub
      23: aaload
      24: checkcast     #347                // class "[B"
      27: checkcast     #347                // class "[B"
      30: areturn

  public java.sql.Date getDate(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: iload_1
       6: bipush        91
       8: ldc_w         #374                // String Date
      11: invokevirtual #362                // Method checkIndex:(IILjava/lang/String;)V
      14: aload_0
      15: getfield      #96                 // Field callResult:[Ljava/lang/Object;
      18: iload_1
      19: iconst_1
      20: isub
      21: aaload
      22: checkcast     #252                // class java/sql/Date
      25: areturn

  public java.sql.Time getTime(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: iload_1
       6: bipush        92
       8: ldc_w         #375                // String Time
      11: invokevirtual #362                // Method checkIndex:(IILjava/lang/String;)V
      14: aload_0
      15: getfield      #96                 // Field callResult:[Ljava/lang/Object;
      18: iload_1
      19: iconst_1
      20: isub
      21: aaload
      22: checkcast     #260                // class java/sql/Time
      25: areturn

  public java.sql.Timestamp getTimestamp(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: iload_1
       6: bipush        93
       8: ldc_w         #376                // String Timestamp
      11: invokevirtual #362                // Method checkIndex:(IILjava/lang/String;)V
      14: aload_0
      15: getfield      #96                 // Field callResult:[Ljava/lang/Object;
      18: iload_1
      19: iconst_1
      20: isub
      21: aaload
      22: checkcast     #264                // class java/sql/Timestamp
      25: areturn

  public java.lang.Object getObject(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: iload_1
       6: invokespecial #377                // Method checkIndex:(I)V
       9: aload_0
      10: getfield      #96                 // Field callResult:[Ljava/lang/Object;
      13: iload_1
      14: iconst_1
      15: isub
      16: aaload
      17: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #30                 // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
       4: ifnonnull     12
       7: aload_0
       8: invokespecial #258                // Method java/lang/Object.toString:()Ljava/lang/String;
      11: areturn
      12: aload_0
      13: getfield      #30                 // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
      16: getfield      #44                 // Field org/postgresql/core/CachedQuery.query:Lorg/postgresql/core/Query;
      19: aload_0
      20: getfield      #31                 // Field preparedParameters:Lorg/postgresql/core/ParameterList;
      23: invokeinterface #378,  2          // InterfaceMethod org/postgresql/core/Query.toString:(Lorg/postgresql/core/ParameterList;)Ljava/lang/String;
      28: areturn

  protected void bindLiteral(int, java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #24                 // Field adjustIndex:Z
       4: ifeq          10
       7: iinc          1, -1
      10: aload_0
      11: getfield      #31                 // Field preparedParameters:Lorg/postgresql/core/ParameterList;
      14: iload_1
      15: aload_2
      16: iload_3
      17: invokeinterface #379,  4          // InterfaceMethod org/postgresql/core/ParameterList.setLiteralParameter:(ILjava/lang/String;I)V
      22: return

  protected void bindBytes(int, byte[], int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #24                 // Field adjustIndex:Z
       4: ifeq          10
       7: iinc          1, -1
      10: aload_0
      11: getfield      #31                 // Field preparedParameters:Lorg/postgresql/core/ParameterList;
      14: iload_1
      15: aload_2
      16: iload_3
      17: invokeinterface #380,  4          // InterfaceMethod org/postgresql/core/ParameterList.setBinaryParameter:(I[BI)V
      22: return

  private void bindString(int, java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #24                 // Field adjustIndex:Z
       4: ifeq          10
       7: iinc          1, -1
      10: aload_0
      11: getfield      #31                 // Field preparedParameters:Lorg/postgresql/core/ParameterList;
      14: iload_1
      15: aload_2
      16: iload_3
      17: invokeinterface #381,  4          // InterfaceMethod org/postgresql/core/ParameterList.setStringParameter:(ILjava/lang/String;I)V
      22: return

  protected void checkIndex(int, int, int, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #377                // Method checkIndex:(I)V
       5: iload_2
       6: aload_0
       7: getfield      #47                 // Field testReturn:[I
      10: iload_1
      11: iconst_1
      12: isub
      13: iaload
      14: if_icmpeq     106
      17: iload_3
      18: aload_0
      19: getfield      #47                 // Field testReturn:[I
      22: iload_1
      23: iconst_1
      24: isub
      25: iaload
      26: if_icmpeq     106
      29: new           #49                 // class org/postgresql/util/PSQLException
      32: dup
      33: ldc_w         #382                // String Parameter of type {0} was registered, but call to get{1} (sqltype={2}) was made.
      36: iconst_3
      37: anewarray     #95                 // class java/lang/Object
      40: dup
      41: iconst_0
      42: new           #105                // class java/lang/StringBuilder
      45: dup
      46: invokespecial #106                // Method java/lang/StringBuilder."<init>":()V
      49: ldc           #107                // String java.sql.Types=
      51: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_0
      55: getfield      #47                 // Field testReturn:[I
      58: iload_1
      59: iconst_1
      60: isub
      61: iaload
      62: invokevirtual #109                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      65: invokevirtual #110                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: aastore
      69: dup
      70: iconst_1
      71: aload         4
      73: aastore
      74: dup
      75: iconst_2
      76: new           #105                // class java/lang/StringBuilder
      79: dup
      80: invokespecial #106                // Method java/lang/StringBuilder."<init>":()V
      83: ldc           #107                // String java.sql.Types=
      85: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: iload_2
      89: invokevirtual #109                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      92: invokevirtual #110                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      95: aastore
      96: invokestatic  #111                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      99: getstatic     #383                // Field org/postgresql/util/PSQLState.MOST_SPECIFIC_TYPE_DOES_NOT_MATCH:Lorg/postgresql/util/PSQLState;
     102: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     105: athrow
     106: return

  protected void checkIndex(int, int, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #377                // Method checkIndex:(I)V
       5: iload_2
       6: aload_0
       7: getfield      #47                 // Field testReturn:[I
      10: iload_1
      11: iconst_1
      12: isub
      13: iaload
      14: if_icmpeq     93
      17: new           #49                 // class org/postgresql/util/PSQLException
      20: dup
      21: ldc_w         #382                // String Parameter of type {0} was registered, but call to get{1} (sqltype={2}) was made.
      24: iconst_3
      25: anewarray     #95                 // class java/lang/Object
      28: dup
      29: iconst_0
      30: new           #105                // class java/lang/StringBuilder
      33: dup
      34: invokespecial #106                // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #107                // String java.sql.Types=
      39: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_0
      43: getfield      #47                 // Field testReturn:[I
      46: iload_1
      47: iconst_1
      48: isub
      49: iaload
      50: invokevirtual #109                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      53: invokevirtual #110                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: aastore
      57: dup
      58: iconst_1
      59: aload_3
      60: aastore
      61: dup
      62: iconst_2
      63: new           #105                // class java/lang/StringBuilder
      66: dup
      67: invokespecial #106                // Method java/lang/StringBuilder."<init>":()V
      70: ldc           #107                // String java.sql.Types=
      72: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: iload_2
      76: invokevirtual #109                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      79: invokevirtual #110                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: aastore
      83: invokestatic  #111                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      86: getstatic     #383                // Field org/postgresql/util/PSQLState.MOST_SPECIFIC_TYPE_DOES_NOT_MATCH:Lorg/postgresql/util/PSQLState;
      89: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      92: athrow
      93: return

  private void checkIndex(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: iconst_1
       3: invokespecial #357                // Method checkIndex:(IZ)V
       6: return

  private void checkIndex(int, boolean) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #42                 // Field isFunction:Z
       4: ifne          24
       7: new           #49                 // class org/postgresql/util/PSQLException
      10: dup
      11: ldc_w         #384                // String A CallableStatement was declared, but no call to registerOutParameter(1, <some type>) was made.
      14: invokestatic  #51                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      17: getstatic     #356                // Field org/postgresql/util/PSQLState.STATEMENT_NOT_ALLOWED_IN_FUNCTION_CALL:Lorg/postgresql/util/PSQLState;
      20: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      23: athrow
      24: iload_2
      25: ifeq          81
      28: aload_0
      29: getfield      #86                 // Field returnTypeSet:Z
      32: ifne          52
      35: new           #49                 // class org/postgresql/util/PSQLException
      38: dup
      39: ldc_w         #385                // String No function outputs were registered.
      42: invokestatic  #51                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      45: getstatic     #361                // Field org/postgresql/util/PSQLState.OBJECT_NOT_IN_STATE:Lorg/postgresql/util/PSQLState;
      48: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      51: athrow
      52: aload_0
      53: getfield      #96                 // Field callResult:[Ljava/lang/Object;
      56: ifnonnull     76
      59: new           #49                 // class org/postgresql/util/PSQLException
      62: dup
      63: ldc_w         #386                // String Results cannot be retrieved from a CallableStatement before it is executed.
      66: invokestatic  #51                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      69: getstatic     #73                 // Field org/postgresql/util/PSQLState.NO_DATA:Lorg/postgresql/util/PSQLState;
      72: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      75: athrow
      76: aload_0
      77: iload_1
      78: putfield      #28                 // Field lastIndex:I
      81: return

  public void setPrepareThreshold(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: iload_1
       5: ifge          15
       8: aload_0
       9: iconst_1
      10: putfield      #5                  // Field forceBinaryTransfers:Z
      13: iconst_1
      14: istore_1
      15: aload_0
      16: iload_1
      17: putfield      #119                // Field m_prepareThreshold:I
      20: return

  public int getPrepareThreshold();
    Code:
       0: aload_0
       1: getfield      #119                // Field m_prepareThreshold:I
       4: ireturn

  public void setUseServerPrepare(boolean) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: ifeq          9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: invokevirtual #39                 // Method setPrepareThreshold:(I)V
      13: return

  public boolean isUseServerPrepare();
    Code:
       0: aload_0
       1: getfield      #30                 // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
       4: ifnull        34
       7: aload_0
       8: getfield      #119                // Field m_prepareThreshold:I
      11: ifeq          34
      14: aload_0
      15: getfield      #30                 // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
      18: invokevirtual #120                // Method org/postgresql/core/CachedQuery.getExecuteCount:()I
      21: iconst_1
      22: iadd
      23: aload_0
      24: getfield      #119                // Field m_prepareThreshold:I
      27: if_icmplt     34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn

  protected void checkClosed() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #27                 // Field isClosed:Z
       4: ifeq          24
       7: new           #49                 // class org/postgresql/util/PSQLException
      10: dup
      11: ldc_w         #387                // String This statement has been closed.
      14: invokestatic  #51                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      17: getstatic     #361                // Field org/postgresql/util/PSQLState.OBJECT_NOT_IN_STATE:Lorg/postgresql/util/PSQLState;
      20: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      23: athrow
      24: return

  public void addBatch(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #30                 // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
       8: ifnull        27
      11: new           #49                 // class org/postgresql/util/PSQLException
      14: dup
      15: ldc           #50                 // String Can\'\'t use query methods that take a query string on a PreparedStatement.
      17: invokestatic  #51                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      20: getstatic     #52                 // Field org/postgresql/util/PSQLState.WRONG_OBJECT_TYPE:Lorg/postgresql/util/PSQLState;
      23: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      26: athrow
      27: aload_0
      28: getfield      #6                  // Field batchStatements:Ljava/util/ArrayList;
      31: ifnonnull     56
      34: aload_0
      35: new           #152                // class java/util/ArrayList
      38: dup
      39: invokespecial #153                // Method java/util/ArrayList."<init>":()V
      42: putfield      #6                  // Field batchStatements:Ljava/util/ArrayList;
      45: aload_0
      46: new           #152                // class java/util/ArrayList
      49: dup
      50: invokespecial #153                // Method java/util/ArrayList."<init>":()V
      53: putfield      #7                  // Field batchParameters:Ljava/util/ArrayList;
      56: aload_1
      57: aload_0
      58: getfield      #20                 // Field replaceProcessingEnabled:Z
      61: aload_0
      62: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      65: invokeinterface #81,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getStandardConformingStrings:()Z
      70: invokestatic  #82                 // Method replaceProcessing:(Ljava/lang/String;ZZ)Ljava/lang/String;
      73: astore_1
      74: aload_0
      75: getfield      #6                  // Field batchStatements:Ljava/util/ArrayList;
      78: aload_0
      79: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      82: invokeinterface #83,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getQueryExecutor:()Lorg/postgresql/core/QueryExecutor;
      87: aload_1
      88: invokeinterface #84,  2           // InterfaceMethod org/postgresql/core/QueryExecutor.createSimpleQuery:(Ljava/lang/String;)Lorg/postgresql/core/Query;
      93: invokevirtual #154                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      96: pop
      97: aload_0
      98: getfield      #7                  // Field batchParameters:Ljava/util/ArrayList;
     101: aconst_null
     102: invokevirtual #154                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     105: pop
     106: return

  public void clearBatch() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field batchStatements:Ljava/util/ArrayList;
       4: ifnull        21
       7: aload_0
       8: getfield      #6                  // Field batchStatements:Ljava/util/ArrayList;
      11: invokevirtual #388                // Method java/util/ArrayList.clear:()V
      14: aload_0
      15: getfield      #7                  // Field batchParameters:Ljava/util/ArrayList;
      18: invokevirtual #388                // Method java/util/ArrayList.clear:()V
      21: return

  public int[] executeBatch() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #114                // Method closeForNextExecution:()V
       8: aload_0
       9: getfield      #6                  // Field batchStatements:Ljava/util/ArrayList;
      12: ifnull        25
      15: aload_0
      16: getfield      #6                  // Field batchStatements:Ljava/util/ArrayList;
      19: invokevirtual #389                // Method java/util/ArrayList.isEmpty:()Z
      22: ifeq          29
      25: iconst_0
      26: newarray       int
      28: areturn
      29: aload_0
      30: getfield      #6                  // Field batchStatements:Ljava/util/ArrayList;
      33: invokevirtual #164                // Method java/util/ArrayList.size:()I
      36: istore_1
      37: iload_1
      38: newarray       int
      40: astore_2
      41: aload_0
      42: getfield      #6                  // Field batchStatements:Ljava/util/ArrayList;
      45: aload_0
      46: getfield      #6                  // Field batchStatements:Ljava/util/ArrayList;
      49: invokevirtual #164                // Method java/util/ArrayList.size:()I
      52: anewarray     #390                // class org/postgresql/core/Query
      55: invokevirtual #391                // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      58: checkcast     #392                // class "[Lorg/postgresql/core/Query;"
      61: astore_3
      62: aload_0
      63: getfield      #7                  // Field batchParameters:Ljava/util/ArrayList;
      66: aload_0
      67: getfield      #7                  // Field batchParameters:Ljava/util/ArrayList;
      70: invokevirtual #164                // Method java/util/ArrayList.size:()I
      73: anewarray     #393                // class org/postgresql/core/ParameterList
      76: invokevirtual #391                // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      79: checkcast     #394                // class "[Lorg/postgresql/core/ParameterList;"
      82: astore        4
      84: aload_0
      85: getfield      #6                  // Field batchStatements:Ljava/util/ArrayList;
      88: invokevirtual #388                // Method java/util/ArrayList.clear:()V
      91: aload_0
      92: getfield      #7                  // Field batchParameters:Ljava/util/ArrayList;
      95: invokevirtual #388                // Method java/util/ArrayList.clear:()V
      98: iconst_0
      99: istore        5
     101: iconst_0
     102: istore        6
     104: aload_0
     105: getfield      #14                 // Field wantsGeneratedKeysAlways:Z
     108: ifeq          119
     111: sipush        320
     114: istore        5
     116: goto          122
     119: iconst_4
     120: istore        5
     122: aload_0
     123: getfield      #30                 // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
     126: ifnull        138
     129: aload_0
     130: getfield      #30                 // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
     133: aload_3
     134: arraylength
     135: invokevirtual #395                // Method org/postgresql/core/CachedQuery.increaseExecuteCount:(I)V
     138: aload_0
     139: getfield      #119                // Field m_prepareThreshold:I
     142: ifeq          166
     145: aload_0
     146: getfield      #30                 // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
     149: ifnull        166
     152: aload_0
     153: getfield      #30                 // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
     156: invokevirtual #120                // Method org/postgresql/core/CachedQuery.getExecuteCount:()I
     159: aload_0
     160: getfield      #119                // Field m_prepareThreshold:I
     163: if_icmpge     175
     166: iload         5
     168: iconst_1
     169: ior
     170: istore        5
     172: goto          208
     175: aload_0
     176: getfield      #14                 // Field wantsGeneratedKeysAlways:Z
     179: ifeq          197
     182: aload_3
     183: iconst_0
     184: aaload
     185: invokeinterface #122,  1          // InterfaceMethod org/postgresql/core/Query.isStatementDescribed:()Z
     190: ifne          197
     193: iconst_1
     194: goto          198
     197: iconst_0
     198: istore        6
     200: iload         5
     202: sipush        512
     205: ior
     206: istore        5
     208: aload_0
     209: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
     212: invokeinterface #116,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getAutoCommit:()Z
     217: ifeq          227
     220: iload         5
     222: bipush        16
     224: ior
     225: istore        5
     227: iload         6
     229: ifne          239
     232: aload_0
     233: getfield      #5                  // Field forceBinaryTransfers:Z
     236: ifeq          305
     239: iload         5
     241: bipush        32
     243: ior
     244: istore        7
     246: new           #123                // class org/postgresql/jdbc2/AbstractJdbc2Statement$StatementResultHandler
     249: dup
     250: aload_0
     251: invokespecial #124                // Method org/postgresql/jdbc2/AbstractJdbc2Statement$StatementResultHandler."<init>":(Lorg/postgresql/jdbc2/AbstractJdbc2Statement;)V
     254: astore        8
     256: aload_0
     257: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
     260: invokeinterface #83,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getQueryExecutor:()Lorg/postgresql/core/QueryExecutor;
     265: aload_3
     266: iconst_0
     267: aaload
     268: aload         4
     270: iconst_0
     271: aaload
     272: aload         8
     274: iconst_0
     275: iconst_0
     276: iload         7
     278: invokeinterface #125,  7          // InterfaceMethod org/postgresql/core/QueryExecutor.execute:(Lorg/postgresql/core/Query;Lorg/postgresql/core/ParameterList;Lorg/postgresql/core/ResultHandler;III)V
     283: aload         8
     285: invokevirtual #126                // Method org/postgresql/jdbc2/AbstractJdbc2Statement$StatementResultHandler.getResults:()Lorg/postgresql/jdbc2/ResultWrapper;
     288: astore        9
     290: aload         9
     292: ifnull        305
     295: aload         9
     297: invokevirtual #55                 // Method org/postgresql/jdbc2/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
     300: invokeinterface #56,  1           // InterfaceMethod java/sql/ResultSet.close:()V
     305: aload_0
     306: aconst_null
     307: putfield      #21                 // Field result:Lorg/postgresql/jdbc2/ResultWrapper;
     310: aload_0
     311: getfield      #42                 // Field isFunction:Z
     314: ifeq          334
     317: new           #396                // class org/postgresql/jdbc2/AbstractJdbc2Statement$CallableBatchResultHandler
     320: dup
     321: aload_0
     322: aload_3
     323: aload         4
     325: aload_2
     326: invokespecial #397                // Method org/postgresql/jdbc2/AbstractJdbc2Statement$CallableBatchResultHandler."<init>":(Lorg/postgresql/jdbc2/AbstractJdbc2Statement;[Lorg/postgresql/core/Query;[Lorg/postgresql/core/ParameterList;[I)V
     329: astore        7
     331: goto          352
     334: new           #398                // class org/postgresql/jdbc2/AbstractJdbc2Statement$BatchResultHandler
     337: dup
     338: aload_0
     339: aload_3
     340: aload         4
     342: aload_2
     343: aload_0
     344: getfield      #14                 // Field wantsGeneratedKeysAlways:Z
     347: invokespecial #399                // Method org/postgresql/jdbc2/AbstractJdbc2Statement$BatchResultHandler."<init>":(Lorg/postgresql/jdbc2/AbstractJdbc2Statement;[Lorg/postgresql/core/Query;[Lorg/postgresql/core/ParameterList;[IZ)V
     350: astore        7
     352: aload_0
     353: invokespecial #127                // Method startTimer:()V
     356: aload_0
     357: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
     360: invokeinterface #83,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getQueryExecutor:()Lorg/postgresql/core/QueryExecutor;
     365: aload_3
     366: aload         4
     368: aload         7
     370: aload_0
     371: getfield      #17                 // Field maxrows:I
     374: aload_0
     375: getfield      #18                 // Field fetchSize:I
     378: iload         5
     380: invokeinterface #400,  7          // InterfaceMethod org/postgresql/core/QueryExecutor.execute:([Lorg/postgresql/core/Query;[Lorg/postgresql/core/ParameterList;Lorg/postgresql/core/ResultHandler;III)V
     385: aload_0
     386: invokespecial #128                // Method killTimerTask:()V
     389: goto          401
     392: astore        10
     394: aload_0
     395: invokespecial #128                // Method killTimerTask:()V
     398: aload         10
     400: athrow
     401: aload_0
     402: getfield      #14                 // Field wantsGeneratedKeysAlways:Z
     405: ifeq          427
     408: aload_0
     409: new           #69                 // class org/postgresql/jdbc2/ResultWrapper
     412: dup
     413: aload         7
     415: checkcast     #398                // class org/postgresql/jdbc2/AbstractJdbc2Statement$BatchResultHandler
     418: invokevirtual #401                // Method org/postgresql/jdbc2/AbstractJdbc2Statement$BatchResultHandler.getGeneratedKeys:()Ljava/sql/ResultSet;
     421: invokespecial #70                 // Method org/postgresql/jdbc2/ResultWrapper."<init>":(Ljava/sql/ResultSet;)V
     424: putfield      #23                 // Field generatedKeys:Lorg/postgresql/jdbc2/ResultWrapper;
     427: aload_2
     428: areturn
    Exception table:
       from    to  target type
         352   385   392   any
         392   394   392   any

  public void cancel() throws java.sql.SQLException;
    Code:
       0: getstatic     #402                // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: iconst_1
       5: iconst_2
       6: invokevirtual #403                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
       9: ifne          13
      12: return
      13: aload_0
      14: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      17: dup
      18: astore_1
      19: monitorenter
      20: aload_0
      21: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      24: invokeinterface #404,  1          // InterfaceMethod org/postgresql/core/BaseConnection.cancelQuery:()V
      29: aload_1
      30: monitorexit
      31: goto          39
      34: astore_2
      35: aload_1
      36: monitorexit
      37: aload_2
      38: athrow
      39: getstatic     #402                // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      42: aload_0
      43: iconst_3
      44: invokevirtual #405                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
      47: aload_0
      48: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      51: dup
      52: astore_1
      53: monitorenter
      54: aload_0
      55: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      58: invokevirtual #406                // Method java/lang/Object.notifyAll:()V
      61: aload_1
      62: monitorexit
      63: goto          71
      66: astore_3
      67: aload_1
      68: monitorexit
      69: aload_3
      70: athrow
      71: goto          116
      74: astore        4
      76: getstatic     #402                // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      79: aload_0
      80: iconst_3
      81: invokevirtual #405                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
      84: aload_0
      85: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      88: dup
      89: astore        5
      91: monitorenter
      92: aload_0
      93: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      96: invokevirtual #406                // Method java/lang/Object.notifyAll:()V
      99: aload         5
     101: monitorexit
     102: goto          113
     105: astore        6
     107: aload         5
     109: monitorexit
     110: aload         6
     112: athrow
     113: aload         4
     115: athrow
     116: return
    Exception table:
       from    to  target type
          20    31    34   any
          34    37    34   any
          54    63    66   any
          66    69    66   any
          13    39    74   any
          92   102   105   any
         105   110   105   any
          74    76    74   any

  public java.sql.Connection getConnection() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
       4: areturn

  public int getFetchDirection();
    Code:
       0: aload_0
       1: getfield      #9                  // Field fetchdirection:I
       4: ireturn

  public int getResultSetConcurrency();
    Code:
       0: aload_0
       1: getfield      #35                 // Field concurrency:I
       4: ireturn

  public int getResultSetType();
    Code:
       0: aload_0
       1: getfield      #34                 // Field resultsettype:I
       4: ireturn

  public void setFetchDirection(int) throws java.sql.SQLException;
    Code:
       0: iload_1
       1: tableswitch   { // 1000 to 1002
                  1000: 28
                  1001: 28
                  1002: 28
               default: 36
          }
      28: aload_0
      29: iload_1
      30: putfield      #9                  // Field fetchdirection:I
      33: goto          57
      36: new           #49                 // class org/postgresql/util/PSQLException
      39: dup
      40: ldc_w         #407                // String Invalid fetch direction constant: {0}.
      43: iload_1
      44: invokestatic  #104                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      47: invokestatic  #207                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
      50: getstatic     #131                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      53: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      56: athrow
      57: return

  public void setFetchSize(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: iload_1
       5: ifge          25
       8: new           #49                 // class org/postgresql/util/PSQLException
      11: dup
      12: ldc_w         #408                // String Fetch size must be a value greater to or equal to 0.
      15: invokestatic  #51                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
      18: getstatic     #131                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      21: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      24: athrow
      25: aload_0
      26: iload_1
      27: putfield      #18                 // Field fetchSize:I
      30: return

  public void addBatch() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #6                  // Field batchStatements:Ljava/util/ArrayList;
       8: ifnonnull     33
      11: aload_0
      12: new           #152                // class java/util/ArrayList
      15: dup
      16: invokespecial #153                // Method java/util/ArrayList."<init>":()V
      19: putfield      #6                  // Field batchStatements:Ljava/util/ArrayList;
      22: aload_0
      23: new           #152                // class java/util/ArrayList
      26: dup
      27: invokespecial #153                // Method java/util/ArrayList."<init>":()V
      30: putfield      #7                  // Field batchParameters:Ljava/util/ArrayList;
      33: aload_0
      34: getfield      #6                  // Field batchStatements:Ljava/util/ArrayList;
      37: aload_0
      38: getfield      #30                 // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
      41: getfield      #44                 // Field org/postgresql/core/CachedQuery.query:Lorg/postgresql/core/Query;
      44: invokevirtual #154                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      47: pop
      48: aload_0
      49: getfield      #7                  // Field batchParameters:Ljava/util/ArrayList;
      52: aload_0
      53: getfield      #31                 // Field preparedParameters:Lorg/postgresql/core/ParameterList;
      56: invokeinterface #409,  1          // InterfaceMethod org/postgresql/core/ParameterList.copy:()Lorg/postgresql/core/ParameterList;
      61: invokevirtual #154                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      64: pop
      65: return

  public java.sql.ResultSetMetaData getMetaData() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #410                // Method getResultSet:()Ljava/sql/ResultSet;
       8: astore_1
       9: aload_1
      10: ifnull        23
      13: aload_1
      14: checkcast     #67                 // class org/postgresql/jdbc2/AbstractJdbc2ResultSet
      17: invokevirtual #411                // Method org/postgresql/jdbc2/AbstractJdbc2ResultSet.isResultSetClosed:()Z
      20: ifeq          81
      23: bipush        49
      25: istore_2
      26: new           #123                // class org/postgresql/jdbc2/AbstractJdbc2Statement$StatementResultHandler
      29: dup
      30: aload_0
      31: invokespecial #124                // Method org/postgresql/jdbc2/AbstractJdbc2Statement$StatementResultHandler."<init>":(Lorg/postgresql/jdbc2/AbstractJdbc2Statement;)V
      34: astore_3
      35: aload_0
      36: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      39: invokeinterface #83,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getQueryExecutor:()Lorg/postgresql/core/QueryExecutor;
      44: aload_0
      45: getfield      #30                 // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
      48: getfield      #44                 // Field org/postgresql/core/CachedQuery.query:Lorg/postgresql/core/Query;
      51: aload_0
      52: getfield      #31                 // Field preparedParameters:Lorg/postgresql/core/ParameterList;
      55: aload_3
      56: iconst_0
      57: iconst_0
      58: iload_2
      59: invokeinterface #125,  7          // InterfaceMethod org/postgresql/core/QueryExecutor.execute:(Lorg/postgresql/core/Query;Lorg/postgresql/core/ParameterList;Lorg/postgresql/core/ResultHandler;III)V
      64: aload_3
      65: invokevirtual #126                // Method org/postgresql/jdbc2/AbstractJdbc2Statement$StatementResultHandler.getResults:()Lorg/postgresql/jdbc2/ResultWrapper;
      68: astore        4
      70: aload         4
      72: ifnull        81
      75: aload         4
      77: invokevirtual #55                 // Method org/postgresql/jdbc2/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      80: astore_1
      81: aload_1
      82: ifnull        92
      85: aload_1
      86: invokeinterface #89,  1           // InterfaceMethod java/sql/ResultSet.getMetaData:()Ljava/sql/ResultSetMetaData;
      91: areturn
      92: aconst_null
      93: areturn

  public void setArray(int, java.sql.Array) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aconst_null
       5: aload_2
       6: if_acmpne     18
       9: aload_0
      10: iload_1
      11: sipush        2003
      14: invokevirtual #191                // Method setNull:(II)V
      17: return
      18: new           #105                // class java/lang/StringBuilder
      21: dup
      22: invokespecial #106                // Method java/lang/StringBuilder."<init>":()V
      25: aload_2
      26: invokeinterface #412,  1          // InterfaceMethod java/sql/Array.getBaseTypeName:()Ljava/lang/String;
      31: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: ldc_w         #413                // String []
      37: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #110                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: astore_3
      44: aload_0
      45: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      48: invokeinterface #229,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
      53: aload_3
      54: invokeinterface #230,  2          // InterfaceMethod org/postgresql/core/TypeInfo.getPGType:(Ljava/lang/String;)I
      59: istore        4
      61: iload         4
      63: ifne          83
      66: new           #49                 // class org/postgresql/util/PSQLException
      69: dup
      70: ldc           #231                // String Unknown type {0}.
      72: aload_3
      73: invokestatic  #207                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
      76: getstatic     #173                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_TYPE:Lorg/postgresql/util/PSQLState;
      79: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      82: athrow
      83: aload_2
      84: instanceof    #414                // class org/postgresql/jdbc2/AbstractJdbc2Array
      87: ifeq          117
      90: aload_2
      91: checkcast     #414                // class org/postgresql/jdbc2/AbstractJdbc2Array
      94: astore        5
      96: aload         5
      98: invokevirtual #415                // Method org/postgresql/jdbc2/AbstractJdbc2Array.isBinary:()Z
     101: ifeq          117
     104: aload_0
     105: iload_1
     106: aload         5
     108: invokevirtual #416                // Method org/postgresql/jdbc2/AbstractJdbc2Array.toBytes:()[B
     111: iload         4
     113: invokevirtual #181                // Method bindBytes:(I[BI)V
     116: return
     117: aload_0
     118: iload_1
     119: aload_2
     120: invokevirtual #258                // Method java/lang/Object.toString:()Ljava/lang/String;
     123: iload         4
     125: invokevirtual #194                // Method setString:(ILjava/lang/String;I)V
     128: return

  protected long createBlob(int, java.io.InputStream, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
       4: invokeinterface #197,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getLargeObjectAPI:()Lorg/postgresql/largeobject/LargeObjectManager;
       9: astore        5
      11: aload         5
      13: invokevirtual #198                // Method org/postgresql/largeobject/LargeObjectManager.createLO:()J
      16: lstore        6
      18: aload         5
      20: lload         6
      22: invokevirtual #199                // Method org/postgresql/largeobject/LargeObjectManager.open:(J)Lorg/postgresql/largeobject/LargeObject;
      25: astore        8
      27: aload         8
      29: invokevirtual #223                // Method org/postgresql/largeobject/LargeObject.getOutputStream:()Ljava/io/OutputStream;
      32: astore        9
      34: sipush        4096
      37: newarray       byte
      39: astore        10
      41: lload_3
      42: lconst_0
      43: lcmp
      44: ifle          53
      47: lload_3
      48: lstore        11
      50: goto          58
      53: ldc2_w        #417                // long 9223372036854775807l
      56: lstore        11
      58: aload_2
      59: aload         10
      61: iconst_0
      62: lload_3
      63: lconst_0
      64: lcmp
      65: ifle          84
      68: lload         11
      70: aload         10
      72: arraylength
      73: i2l
      74: lcmp
      75: ifge          84
      78: lload         11
      80: l2i
      81: goto          87
      84: aload         10
      86: arraylength
      87: invokevirtual #419                // Method java/io/InputStream.read:([BII)I
      90: istore        13
      92: iload         13
      94: iconst_m1
      95: if_icmpeq     160
      98: lload         11
     100: lconst_0
     101: lcmp
     102: ifle          160
     105: lload         11
     107: iload         13
     109: i2l
     110: lsub
     111: lstore        11
     113: aload         9
     115: aload         10
     117: iconst_0
     118: iload         13
     120: invokevirtual #420                // Method java/io/OutputStream.write:([BII)V
     123: aload_2
     124: aload         10
     126: iconst_0
     127: lload_3
     128: lconst_0
     129: lcmp
     130: ifle          149
     133: lload         11
     135: aload         10
     137: arraylength
     138: i2l
     139: lcmp
     140: ifge          149
     143: lload         11
     145: l2i
     146: goto          152
     149: aload         10
     151: arraylength
     152: invokevirtual #419                // Method java/io/InputStream.read:([BII)I
     155: istore        13
     157: goto          92
     160: aload         9
     162: invokevirtual #226                // Method java/io/OutputStream.close:()V
     165: goto          209
     168: astore        11
     170: goto          209
     173: astore        11
     175: new           #49                 // class org/postgresql/util/PSQLException
     178: dup
     179: ldc_w         #421                // String Unexpected error writing large object to database.
     182: invokestatic  #51                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
     185: getstatic     #214                // Field org/postgresql/util/PSQLState.UNEXPECTED_ERROR:Lorg/postgresql/util/PSQLState;
     188: aload         11
     190: invokespecial #215                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
     193: athrow
     194: astore        14
     196: aload         9
     198: invokevirtual #226                // Method java/io/OutputStream.close:()V
     201: goto          206
     204: astore        15
     206: aload         14
     208: athrow
     209: lload         6
     211: lreturn
    Exception table:
       from    to  target type
         160   165   168   Class java/lang/Exception
          41   160   173   Class java/io/IOException
          41   160   194   any
         196   201   204   Class java/lang/Exception
         173   196   194   any

  public void setBlob(int, java.sql.Blob) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_2
       5: ifnonnull     17
       8: aload_0
       9: iload_1
      10: sipush        2004
      13: invokevirtual #191                // Method setNull:(II)V
      16: return
      17: aload_2
      18: invokeinterface #422,  1          // InterfaceMethod java/sql/Blob.getBinaryStream:()Ljava/io/InputStream;
      23: astore_3
      24: aload_0
      25: iload_1
      26: aload_3
      27: aload_2
      28: invokeinterface #423,  1          // InterfaceMethod java/sql/Blob.length:()J
      33: invokevirtual #276                // Method createBlob:(ILjava/io/InputStream;J)J
      36: lstore        4
      38: aload_0
      39: iload_1
      40: lload         4
      42: invokevirtual #202                // Method setLong:(IJ)V
      45: aload_3
      46: invokevirtual #424                // Method java/io/InputStream.close:()V
      49: goto          71
      52: astore        4
      54: goto          71
      57: astore        6
      59: aload_3
      60: invokevirtual #424                // Method java/io/InputStream.close:()V
      63: goto          68
      66: astore        7
      68: aload         6
      70: athrow
      71: return
    Exception table:
       from    to  target type
          45    49    52   Class java/lang/Exception
          24    45    57   any
          59    63    66   Class java/lang/Exception
          57    59    57   any

  public void setCharacterStream(int, java.io.Reader, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_2
       5: ifnonnull     42
       8: aload_0
       9: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      12: getstatic     #170                // Field org/postgresql/core/ServerVersion.v7_2:Lorg/postgresql/core/ServerVersion;
      15: invokeinterface #425,  2          // InterfaceMethod org/postgresql/core/BaseConnection.haveMinimumServerVersion:(Lorg/postgresql/core/Version;)Z
      20: ifeq          33
      23: aload_0
      24: iload_1
      25: bipush        12
      27: invokevirtual #191                // Method setNull:(II)V
      30: goto          41
      33: aload_0
      34: iload_1
      35: sipush        2005
      38: invokevirtual #191                // Method setNull:(II)V
      41: return
      42: iload_3
      43: ifge          66
      46: new           #49                 // class org/postgresql/util/PSQLException
      49: dup
      50: ldc           #206                // String Invalid stream length {0}.
      52: iload_3
      53: invokestatic  #104                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      56: invokestatic  #207                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
      59: getstatic     #131                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      62: invokespecial #53                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      65: athrow
      66: aload_0
      67: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      70: getstatic     #170                // Field org/postgresql/core/ServerVersion.v7_2:Lorg/postgresql/core/ServerVersion;
      73: invokeinterface #171,  2          // InterfaceMethod org/postgresql/core/BaseConnection.haveMinimumCompatibleVersion:(Lorg/postgresql/core/Version;)Z
      78: ifeq          175
      81: iload_3
      82: newarray       char
      84: astore        4
      86: iconst_0
      87: istore        5
      89: aload_2
      90: aload         4
      92: iload         5
      94: iload_3
      95: iload         5
      97: isub
      98: invokevirtual #426                // Method java/io/Reader.read:([CII)I
     101: istore        6
     103: iload         6
     105: iconst_m1
     106: if_icmpne     112
     109: goto          131
     112: iload         5
     114: iload         6
     116: iadd
     117: istore        5
     119: iload         5
     121: iload_3
     122: if_icmpne     128
     125: goto          131
     128: goto          89
     131: goto          155
     134: astore        6
     136: new           #49                 // class org/postgresql/util/PSQLException
     139: dup
     140: ldc_w         #427                // String Provided Reader failed.
     143: invokestatic  #51                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
     146: getstatic     #214                // Field org/postgresql/util/PSQLState.UNEXPECTED_ERROR:Lorg/postgresql/util/PSQLState;
     149: aload         6
     151: invokespecial #215                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
     154: athrow
     155: aload_0
     156: iload_1
     157: new           #157                // class java/lang/String
     160: dup
     161: aload         4
     163: iconst_0
     164: iload         5
     166: invokespecial #211                // Method java/lang/String."<init>":([CII)V
     169: invokevirtual #341                // Method setString:(ILjava/lang/String;)V
     172: goto          285
     175: aload_0
     176: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
     179: invokeinterface #197,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getLargeObjectAPI:()Lorg/postgresql/largeobject/LargeObjectManager;
     184: astore        4
     186: aload         4
     188: invokevirtual #198                // Method org/postgresql/largeobject/LargeObjectManager.createLO:()J
     191: lstore        5
     193: aload         4
     195: lload         5
     197: invokevirtual #199                // Method org/postgresql/largeobject/LargeObjectManager.open:(J)Lorg/postgresql/largeobject/LargeObject;
     200: astore        7
     202: aload         7
     204: invokevirtual #223                // Method org/postgresql/largeobject/LargeObject.getOutputStream:()Ljava/io/OutputStream;
     207: astore        8
     209: aload_2
     210: invokevirtual #428                // Method java/io/Reader.read:()I
     213: istore        9
     215: iconst_0
     216: istore        10
     218: iload         9
     220: iconst_m1
     221: if_icmple     249
     224: iload         10
     226: iload_3
     227: if_icmpge     249
     230: aload         8
     232: iload         9
     234: invokevirtual #225                // Method java/io/OutputStream.write:(I)V
     237: aload_2
     238: invokevirtual #428                // Method java/io/Reader.read:()I
     241: istore        9
     243: iinc          10, 1
     246: goto          218
     249: aload         8
     251: invokevirtual #226                // Method java/io/OutputStream.close:()V
     254: goto          278
     257: astore        9
     259: new           #49                 // class org/postgresql/util/PSQLException
     262: dup
     263: ldc_w         #421                // String Unexpected error writing large object to database.
     266: invokestatic  #51                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
     269: getstatic     #214                // Field org/postgresql/util/PSQLState.UNEXPECTED_ERROR:Lorg/postgresql/util/PSQLState;
     272: aload         9
     274: invokespecial #215                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
     277: athrow
     278: aload_0
     279: iload_1
     280: lload         5
     282: invokevirtual #202                // Method setLong:(IJ)V
     285: return
    Exception table:
       from    to  target type
          89   131   134   Class java/io/IOException
         209   254   257   Class java/io/IOException

  public void setClob(int, java.sql.Clob) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_2
       5: ifnonnull     17
       8: aload_0
       9: iload_1
      10: sipush        2005
      13: invokevirtual #191                // Method setNull:(II)V
      16: return
      17: aload_2
      18: invokeinterface #429,  1          // InterfaceMethod java/sql/Clob.getCharacterStream:()Ljava/io/Reader;
      23: astore_3
      24: aload_2
      25: invokeinterface #290,  1          // InterfaceMethod java/sql/Clob.length:()J
      30: l2i
      31: istore        4
      33: aload_0
      34: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      37: invokeinterface #197,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getLargeObjectAPI:()Lorg/postgresql/largeobject/LargeObjectManager;
      42: astore        5
      44: aload         5
      46: invokevirtual #198                // Method org/postgresql/largeobject/LargeObjectManager.createLO:()J
      49: lstore        6
      51: aload         5
      53: lload         6
      55: invokevirtual #199                // Method org/postgresql/largeobject/LargeObjectManager.open:(J)Lorg/postgresql/largeobject/LargeObject;
      58: astore        8
      60: aload_0
      61: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      64: invokeinterface #238,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getEncoding:()Lorg/postgresql/core/Encoding;
      69: invokevirtual #430                // Method org/postgresql/core/Encoding.name:()Ljava/lang/String;
      72: invokestatic  #431                // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      75: astore        9
      77: aload         8
      79: invokevirtual #223                // Method org/postgresql/largeobject/LargeObject.getOutputStream:()Ljava/io/OutputStream;
      82: astore        10
      84: new           #432                // class java/io/OutputStreamWriter
      87: dup
      88: aload         10
      90: aload         9
      92: invokespecial #433                // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V
      95: astore        11
      97: aload_3
      98: invokevirtual #428                // Method java/io/Reader.read:()I
     101: istore        12
     103: iconst_0
     104: istore        13
     106: iload         12
     108: iconst_m1
     109: if_icmple     138
     112: iload         13
     114: iload         4
     116: if_icmpge     138
     119: aload         11
     121: iload         12
     123: invokevirtual #434                // Method java/io/Writer.write:(I)V
     126: aload_3
     127: invokevirtual #428                // Method java/io/Reader.read:()I
     130: istore        12
     132: iinc          13, 1
     135: goto          106
     138: aload         11
     140: invokevirtual #435                // Method java/io/Writer.close:()V
     143: goto          167
     146: astore        12
     148: new           #49                 // class org/postgresql/util/PSQLException
     151: dup
     152: ldc_w         #421                // String Unexpected error writing large object to database.
     155: invokestatic  #51                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;)Ljava/lang/String;
     158: getstatic     #214                // Field org/postgresql/util/PSQLState.UNEXPECTED_ERROR:Lorg/postgresql/util/PSQLState;
     161: aload         12
     163: invokespecial #215                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
     166: athrow
     167: aload_0
     168: iload_1
     169: lload         6
     171: invokevirtual #202                // Method setLong:(IJ)V
     174: return
    Exception table:
       from    to  target type
          97   143   146   Class java/io/IOException

  public void setNull(int, int, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: iload_1
       6: iload_2
       7: invokevirtual #191                // Method setNull:(II)V
      10: return

  public void setRef(int, java.sql.Ref) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #278                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc_w         #436                // String setRef(int,Ref)
       7: invokestatic  #437                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      10: athrow

  public void setDate(int, java.sql.Date, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_2
       5: ifnonnull     16
       8: aload_0
       9: iload_1
      10: bipush        91
      12: invokevirtual #191                // Method setNull:(II)V
      15: return
      16: aload_0
      17: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      20: sipush        1082
      23: invokeinterface #179,  2          // InterfaceMethod org/postgresql/core/BaseConnection.binaryTransferSend:(I)Z
      28: ifeq          83
      31: iconst_4
      32: newarray       byte
      34: astore        4
      36: aload_3
      37: ifnull        47
      40: aload_3
      41: invokevirtual #438                // Method java/util/Calendar.getTimeZone:()Ljava/util/TimeZone;
      44: goto          48
      47: aconst_null
      48: astore        5
      50: aload_0
      51: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      54: invokeinterface #257,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc2/TimestampUtils;
      59: aload         5
      61: aload         4
      63: aload_2
      64: invokevirtual #439                // Method org/postgresql/jdbc2/TimestampUtils.toBinDate:(Ljava/util/TimeZone;[BLjava/sql/Date;)V
      67: aload_0
      68: getfield      #31                 // Field preparedParameters:Lorg/postgresql/core/ParameterList;
      71: iload_1
      72: aload         4
      74: sipush        1082
      77: invokeinterface #380,  4          // InterfaceMethod org/postgresql/core/ParameterList.setBinaryParameter:(I[BI)V
      82: return
      83: aload_0
      84: iload_1
      85: aload_0
      86: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      89: invokeinterface #257,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc2/TimestampUtils;
      94: aload_3
      95: aload_2
      96: invokevirtual #440                // Method org/postgresql/jdbc2/TimestampUtils.toString:(Ljava/util/Calendar;Ljava/sql/Date;)Ljava/lang/String;
      99: iconst_0
     100: invokespecial #177                // Method bindString:(ILjava/lang/String;I)V
     103: return

  public void setTime(int, java.sql.Time, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_2
       5: ifnonnull     16
       8: aload_0
       9: iload_1
      10: bipush        92
      12: invokevirtual #191                // Method setNull:(II)V
      15: return
      16: iconst_0
      17: istore        4
      19: aload_2
      20: instanceof    #441                // class org/postgresql/util/PGTime
      23: ifeq          59
      26: aload_2
      27: checkcast     #441                // class org/postgresql/util/PGTime
      30: astore        5
      32: aload         5
      34: invokevirtual #442                // Method org/postgresql/util/PGTime.getCalendar:()Ljava/util/Calendar;
      37: ifnonnull     48
      40: sipush        1083
      43: istore        4
      45: goto          59
      48: sipush        1266
      51: istore        4
      53: aload         5
      55: invokevirtual #442                // Method org/postgresql/util/PGTime.getCalendar:()Ljava/util/Calendar;
      58: astore_3
      59: aload_0
      60: iload_1
      61: aload_0
      62: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      65: invokeinterface #257,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc2/TimestampUtils;
      70: aload_3
      71: aload_2
      72: invokevirtual #443                // Method org/postgresql/jdbc2/TimestampUtils.toString:(Ljava/util/Calendar;Ljava/sql/Time;)Ljava/lang/String;
      75: iload         4
      77: invokespecial #177                // Method bindString:(ILjava/lang/String;I)V
      80: return

  public void setTimestamp(int, java.sql.Timestamp, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_2
       5: ifnonnull     16
       8: aload_0
       9: iload_1
      10: bipush        93
      12: invokevirtual #191                // Method setNull:(II)V
      15: return
      16: iconst_0
      17: istore        4
      19: aload_2
      20: instanceof    #444                // class org/postgresql/util/PGTimestamp
      23: ifeq          59
      26: aload_2
      27: checkcast     #444                // class org/postgresql/util/PGTimestamp
      30: astore        5
      32: aload         5
      34: invokevirtual #445                // Method org/postgresql/util/PGTimestamp.getCalendar:()Ljava/util/Calendar;
      37: ifnonnull     48
      40: sipush        1114
      43: istore        4
      45: goto          59
      48: sipush        1184
      51: istore        4
      53: aload         5
      55: invokevirtual #445                // Method org/postgresql/util/PGTimestamp.getCalendar:()Ljava/util/Calendar;
      58: astore_3
      59: aload_0
      60: iload_1
      61: aload_0
      62: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      65: invokeinterface #257,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc2/TimestampUtils;
      70: aload_3
      71: aload_2
      72: invokevirtual #446                // Method org/postgresql/jdbc2/TimestampUtils.toString:(Ljava/util/Calendar;Ljava/sql/Timestamp;)Ljava/lang/String;
      75: iload         4
      77: invokespecial #177                // Method bindString:(ILjava/lang/String;I)V
      80: return

  public java.sql.Array getArray(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: iload_1
       6: sipush        2003
       9: ldc_w         #447                // String Array
      12: invokevirtual #362                // Method checkIndex:(IILjava/lang/String;)V
      15: aload_0
      16: getfield      #96                 // Field callResult:[Ljava/lang/Object;
      19: iload_1
      20: iconst_1
      21: isub
      22: aaload
      23: checkcast     #284                // class java/sql/Array
      26: areturn

  public java.math.BigDecimal getBigDecimal(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: iload_1
       6: iconst_2
       7: ldc_w         #331                // String BigDecimal
      10: invokevirtual #362                // Method checkIndex:(IILjava/lang/String;)V
      13: aload_0
      14: getfield      #96                 // Field callResult:[Ljava/lang/Object;
      17: iload_1
      18: iconst_1
      19: isub
      20: aaload
      21: checkcast     #314                // class java/math/BigDecimal
      24: areturn

  public java.sql.Blob getBlob(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #278                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc_w         #448                // String getBlob(int)
       7: invokestatic  #437                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      10: athrow

  public java.sql.Clob getClob(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #278                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc_w         #449                // String getClob(int)
       7: invokestatic  #437                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      10: athrow

  public java.lang.Object getObjectImpl(int, java.util.Map) throws java.sql.SQLException;
    Code:
       0: aload_2
       1: ifnull        13
       4: aload_2
       5: invokeinterface #450,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
      10: ifeq          19
      13: aload_0
      14: iload_1
      15: invokevirtual #451                // Method getObject:(I)Ljava/lang/Object;
      18: areturn
      19: aload_0
      20: invokevirtual #278                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      23: ldc_w         #452                // String getObjectImpl(int,Map)
      26: invokestatic  #437                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      29: athrow

  public java.sql.Ref getRef(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #278                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc_w         #453                // String getRef(int)
       7: invokestatic  #437                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      10: athrow

  public java.sql.Date getDate(int, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: iload_1
       6: bipush        91
       8: ldc_w         #374                // String Date
      11: invokevirtual #362                // Method checkIndex:(IILjava/lang/String;)V
      14: aload_0
      15: getfield      #96                 // Field callResult:[Ljava/lang/Object;
      18: iload_1
      19: iconst_1
      20: isub
      21: aaload
      22: ifnonnull     27
      25: aconst_null
      26: areturn
      27: aload_0
      28: getfield      #96                 // Field callResult:[Ljava/lang/Object;
      31: iload_1
      32: iconst_1
      33: isub
      34: aaload
      35: invokevirtual #258                // Method java/lang/Object.toString:()Ljava/lang/String;
      38: astore_3
      39: aload_0
      40: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      43: invokeinterface #257,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc2/TimestampUtils;
      48: aload_2
      49: aload_3
      50: invokevirtual #259                // Method org/postgresql/jdbc2/TimestampUtils.toDate:(Ljava/util/Calendar;Ljava/lang/String;)Ljava/sql/Date;
      53: areturn

  public java.sql.Time getTime(int, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: iload_1
       6: bipush        92
       8: ldc_w         #375                // String Time
      11: invokevirtual #362                // Method checkIndex:(IILjava/lang/String;)V
      14: aload_0
      15: getfield      #96                 // Field callResult:[Ljava/lang/Object;
      18: iload_1
      19: iconst_1
      20: isub
      21: aaload
      22: ifnonnull     27
      25: aconst_null
      26: areturn
      27: aload_0
      28: getfield      #96                 // Field callResult:[Ljava/lang/Object;
      31: iload_1
      32: iconst_1
      33: isub
      34: aaload
      35: invokevirtual #258                // Method java/lang/Object.toString:()Ljava/lang/String;
      38: astore_3
      39: aload_0
      40: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      43: invokeinterface #257,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc2/TimestampUtils;
      48: aload_2
      49: aload_3
      50: invokevirtual #263                // Method org/postgresql/jdbc2/TimestampUtils.toTime:(Ljava/util/Calendar;Ljava/lang/String;)Ljava/sql/Time;
      53: areturn

  public java.sql.Timestamp getTimestamp(int, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method checkClosed:()V
       4: aload_0
       5: iload_1
       6: bipush        93
       8: ldc_w         #376                // String Timestamp
      11: invokevirtual #362                // Method checkIndex:(IILjava/lang/String;)V
      14: aload_0
      15: getfield      #96                 // Field callResult:[Ljava/lang/Object;
      18: iload_1
      19: iconst_1
      20: isub
      21: aaload
      22: ifnonnull     27
      25: aconst_null
      26: areturn
      27: aload_0
      28: getfield      #96                 // Field callResult:[Ljava/lang/Object;
      31: iload_1
      32: iconst_1
      33: isub
      34: aaload
      35: invokevirtual #258                // Method java/lang/Object.toString:()Ljava/lang/String;
      38: astore_3
      39: aload_0
      40: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      43: invokeinterface #257,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc2/TimestampUtils;
      48: aload_2
      49: aload_3
      50: invokevirtual #267                // Method org/postgresql/jdbc2/TimestampUtils.toTimestamp:(Ljava/util/Calendar;Ljava/lang/String;)Ljava/sql/Timestamp;
      53: areturn

  public void registerOutParameter(int, int, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #278                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc_w         #454                // String registerOutParameter(int,int,String)
       7: invokestatic  #437                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      10: athrow

  private void startTimer();
    Code:
       0: aload_0
       1: invokespecial #137                // Method cleanupTimer:()Z
       4: pop
       5: getstatic     #402                // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       8: aload_0
       9: iconst_1
      10: invokevirtual #405                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
      13: aload_0
      14: getfield      #19                 // Field timeout:I
      17: ifne          21
      20: return
      21: new           #455                // class org/postgresql/jdbc2/AbstractJdbc2Statement$1
      24: dup
      25: aload_0
      26: invokespecial #456                // Method org/postgresql/jdbc2/AbstractJdbc2Statement$1."<init>":(Lorg/postgresql/jdbc2/AbstractJdbc2Statement;)V
      29: astore_1
      30: getstatic     #1                  // Field CANCEL_TIMER_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      33: aload_0
      34: aload_1
      35: invokevirtual #457                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      38: aload_0
      39: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      42: aload_1
      43: aload_0
      44: getfield      #19                 // Field timeout:I
      47: i2l
      48: invokeinterface #458,  4          // InterfaceMethod org/postgresql/core/BaseConnection.addTimerTask:(Ljava/util/TimerTask;J)V
      53: return

  private boolean cleanupTimer();
    Code:
       0: getstatic     #1                  // Field CANCEL_TIMER_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: invokevirtual #459                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #460                // class java/util/TimerTask
      10: astore_1
      11: aload_1
      12: ifnonnull     28
      15: aload_0
      16: getfield      #19                 // Field timeout:I
      19: ifne          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn
      28: getstatic     #1                  // Field CANCEL_TIMER_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      31: aload_0
      32: aload_1
      33: aconst_null
      34: invokevirtual #461                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      37: ifne          42
      40: iconst_0
      41: ireturn
      42: aload_1
      43: invokevirtual #462                // Method java/util/TimerTask.cancel:()Z
      46: pop
      47: aload_0
      48: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      51: invokeinterface #463,  1          // InterfaceMethod org/postgresql/core/BaseConnection.purgeTimerTasks:()V
      56: iconst_1
      57: ireturn

  private void killTimerTask();
    Code:
       0: aload_0
       1: invokespecial #137                // Method cleanupTimer:()Z
       4: istore_1
       5: iload_1
       6: ifeq          22
       9: getstatic     #402                // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      12: aload_0
      13: iconst_1
      14: iconst_0
      15: invokevirtual #403                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      18: ifeq          22
      21: return
      22: iconst_0
      23: istore_2
      24: getstatic     #402                // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      27: aload_0
      28: iconst_3
      29: iconst_0
      30: invokevirtual #403                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      33: ifne          75
      36: aload_0
      37: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      40: dup
      41: astore_3
      42: monitorenter
      43: aload_0
      44: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      47: ldc2_w        #464                // long 10l
      50: invokevirtual #466                // Method java/lang/Object.wait:(J)V
      53: goto          60
      56: astore        4
      58: iconst_1
      59: istore_2
      60: aload_3
      61: monitorexit
      62: goto          72
      65: astore        5
      67: aload_3
      68: monitorexit
      69: aload         5
      71: athrow
      72: goto          24
      75: iload_2
      76: ifeq          85
      79: invokestatic  #468                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      82: invokevirtual #469                // Method java/lang/Thread.interrupt:()V
      85: return
    Exception table:
       from    to  target type
          43    53    56   Class java/lang/InterruptedException
          43    62    65   any
          65    69    65   any

  protected boolean getForceBinaryTransfer();
    Code:
       0: aload_0
       1: getfield      #5                  // Field forceBinaryTransfers:Z
       4: ireturn

  static java.util.concurrent.atomic.AtomicReferenceFieldUpdater access$000();
    Code:
       0: getstatic     #1                  // Field CANCEL_TIMER_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: areturn

  static {};
    Code:
       0: ldc_w         #470                // String org.postgresql.forceBinary
       3: invokestatic  #471                // Method java/lang/Boolean.getBoolean:(Ljava/lang/String;)Z
       6: putstatic     #4                  // Field DEFAULT_FORCE_BINARY_TRANSFERS:Z
       9: ldc           #11                 // class org/postgresql/jdbc2/AbstractJdbc2Statement
      11: ldc_w         #460                // class java/util/TimerTask
      14: ldc_w         #472                // String cancelTimerTask
      17: invokestatic  #473                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      20: putstatic     #1                  // Field CANCEL_TIMER_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      23: ldc           #11                 // class org/postgresql/jdbc2/AbstractJdbc2Statement
      25: ldc_w         #474                // String statementState
      28: invokestatic  #475                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      31: putstatic     #402                // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      34: return
}
