Compiled from "AbstractTypeAwareSupport.java"
public abstract class org.springframework.plugin.core.support.AbstractTypeAwareSupport<T> implements org.springframework.context.ApplicationContextAware, org.springframework.context.ApplicationListener<org.springframework.context.event.ContextRefreshedEvent>, org.springframework.beans.factory.InitializingBean {
  private org.springframework.context.ApplicationContext context;

  private java.lang.Class<T> type;

  private org.springframework.plugin.core.support.AbstractTypeAwareSupport$BeansOfTypeTargetSource targetSource;

  private java.util.Collection<java.lang.Class<?>> exclusions;

  public org.springframework.plugin.core.support.AbstractTypeAwareSupport();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void setApplicationContext(org.springframework.context.ApplicationContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field context:Lorg/springframework/context/ApplicationContext;
       5: return

  public void setType(java.lang.Class<T>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field type:Ljava/lang/Class;
       5: return

  public void setExclusions(java.lang.Class<?>[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #4                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       5: putfield      #5                  // Field exclusions:Ljava/util/Collection;
       8: return

  protected java.util.List<T> getBeans();
    Code:
       0: new           #6                  // class org/springframework/aop/framework/ProxyFactory
       3: dup
       4: ldc           #7                  // class java/util/List
       6: aload_0
       7: getfield      #8                  // Field targetSource:Lorg/springframework/plugin/core/support/AbstractTypeAwareSupport$BeansOfTypeTargetSource;
      10: invokespecial #9                  // Method org/springframework/aop/framework/ProxyFactory."<init>":(Ljava/lang/Class;Lorg/springframework/aop/TargetSource;)V
      13: astore_1
      14: aload_1
      15: invokevirtual #10                 // Method org/springframework/aop/framework/ProxyFactory.getProxy:()Ljava/lang/Object;
      18: checkcast     #7                  // class java/util/List
      21: areturn

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: new           #11                 // class org/springframework/plugin/core/support/AbstractTypeAwareSupport$BeansOfTypeTargetSource
       4: dup
       5: aload_0
       6: getfield      #2                  // Field context:Lorg/springframework/context/ApplicationContext;
       9: aload_0
      10: getfield      #3                  // Field type:Ljava/lang/Class;
      13: iconst_0
      14: aload_0
      15: getfield      #5                  // Field exclusions:Ljava/util/Collection;
      18: invokespecial #12                 // Method org/springframework/plugin/core/support/AbstractTypeAwareSupport$BeansOfTypeTargetSource."<init>":(Lorg/springframework/beans/factory/ListableBeanFactory;Ljava/lang/Class;ZLjava/util/Collection;)V
      21: putfield      #8                  // Field targetSource:Lorg/springframework/plugin/core/support/AbstractTypeAwareSupport$BeansOfTypeTargetSource;
      24: return

  public void onApplicationEvent(org.springframework.context.event.ContextRefreshedEvent);
    Code:
       0: aload_0
       1: getfield      #2                  // Field context:Lorg/springframework/context/ApplicationContext;
       4: aload_1
       5: invokevirtual #13                 // Method org/springframework/context/event/ContextRefreshedEvent.getApplicationContext:()Lorg/springframework/context/ApplicationContext;
       8: invokevirtual #14                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      11: ifeq          21
      14: aload_0
      15: getfield      #8                  // Field targetSource:Lorg/springframework/plugin/core/support/AbstractTypeAwareSupport$BeansOfTypeTargetSource;
      18: invokevirtual #15                 // Method org/springframework/plugin/core/support/AbstractTypeAwareSupport$BeansOfTypeTargetSource.freeze:()V
      21: return

  public void onApplicationEvent(org.springframework.context.ApplicationEvent);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #16                 // class org/springframework/context/event/ContextRefreshedEvent
       5: invokevirtual #17                 // Method onApplicationEvent:(Lorg/springframework/context/event/ContextRefreshedEvent;)V
       8: return
}
