Compiled from "ClassUtils.java"
public abstract class org.springframework.data.repository.util.ClassUtils {
  private org.springframework.data.repository.util.ClassUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean hasProperty(java.lang.Class<?>, java.lang.String);
    Code:
       0: aconst_null
       1: aload_0
       2: new           #2                  // class java/lang/StringBuilder
       5: dup
       6: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
       9: ldc           #4                  // String get
      11: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_1
      15: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: invokevirtual #6                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      21: invokestatic  #7                  // Method org/springframework/util/ReflectionUtils.findMethod:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Method;
      24: if_acmpeq     29
      27: iconst_1
      28: ireturn
      29: aconst_null
      30: aload_0
      31: aload_1
      32: invokestatic  #8                  // Method org/springframework/util/StringUtils.uncapitalize:(Ljava/lang/String;)Ljava/lang/String;
      35: invokestatic  #9                  // Method org/springframework/util/ReflectionUtils.findField:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
      38: if_acmpeq     45
      41: iconst_1
      42: goto          46
      45: iconst_0
      46: ireturn

  public static boolean isGenericRepositoryInterface(java.lang.Class<?>);
    Code:
       0: ldc           #10                 // class org/springframework/data/repository/Repository
       2: aload_0
       3: invokevirtual #11                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       6: ireturn

  public static boolean isGenericRepositoryInterface(java.lang.String);
    Code:
       0: ldc           #10                 // class org/springframework/data/repository/Repository
       2: invokevirtual #12                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: aload_0
       6: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ireturn

  public static int getNumberOfOccurences(java.lang.reflect.Method, java.lang.Class<?>);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: invokevirtual #14                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
       6: astore_3
       7: aload_3
       8: arraylength
       9: istore        4
      11: iconst_0
      12: istore        5
      14: iload         5
      16: iload         4
      18: if_icmpge     45
      21: aload_3
      22: iload         5
      24: aaload
      25: astore        6
      27: aload_1
      28: aload         6
      30: invokevirtual #11                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      33: ifeq          39
      36: iinc          2, 1
      39: iinc          5, 1
      42: goto          14
      45: iload_2
      46: ireturn

  public static void assertReturnTypeAssignable(java.lang.reflect.Method, java.lang.Class<?>...);
    Code:
       0: aload_0
       1: ldc           #15                 // String Method must not be null!
       3: invokestatic  #16                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #17                 // String Types must not be null or empty!
       9: invokestatic  #18                 // Method org/springframework/util/Assert.notEmpty:([Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: invokestatic  #19                 // Method getEffectivelyReturnedTypeFrom:(Ljava/lang/reflect/Method;)Lorg/springframework/data/util/TypeInformation;
      16: astore_2
      17: aload_1
      18: invokestatic  #20                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      21: aload_2
      22: invokedynamic #21,  0             // InvokeDynamic #0:test:(Lorg/springframework/data/util/TypeInformation;)Ljava/util/function/Predicate;
      27: invokeinterface #22,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      32: invokeinterface #23,  1           // InterfaceMethod java/util/stream/Stream.findAny:()Ljava/util/Optional;
      37: aload_1
      38: invokedynamic #24,  0             // InvokeDynamic #1:get:([Ljava/lang/Class;)Ljava/util/function/Supplier;
      43: invokevirtual #25                 // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      46: pop
      47: return

  public static boolean isOfType(java.lang.Object, java.util.Collection<java.lang.Class<?>>);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: invokeinterface #26,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      12: aload_0
      13: invokedynamic #27,  0             // InvokeDynamic #2:test:(Ljava/lang/Object;)Ljava/util/function/Predicate;
      18: invokeinterface #28,  2           // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      23: ireturn

  public static boolean hasParameterOfType(java.lang.reflect.Method, java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
       4: invokestatic  #29                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       7: aload_1
       8: invokeinterface #30,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      13: ireturn

  public static void unwrapReflectionException(java.lang.Exception) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: instanceof    #31                 // class java/lang/reflect/InvocationTargetException
       4: ifeq          15
       7: aload_0
       8: checkcast     #31                 // class java/lang/reflect/InvocationTargetException
      11: invokevirtual #32                 // Method java/lang/reflect/InvocationTargetException.getTargetException:()Ljava/lang/Throwable;
      14: athrow
      15: aload_0
      16: athrow

  private static org.springframework.data.util.TypeInformation<?> getEffectivelyReturnedTypeFrom(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: invokestatic  #33                 // Method org/springframework/data/util/ClassTypeInformation.fromReturnTypeOf:(Ljava/lang/reflect/Method;)Lorg/springframework/data/util/TypeInformation;
       4: astore_1
       5: aload_1
       6: invokeinterface #34,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getType:()Ljava/lang/Class;
      11: invokestatic  #35                 // Method org/springframework/data/repository/util/QueryExecutionConverters.supports:(Ljava/lang/Class;)Z
      14: ifeq          26
      17: aload_1
      18: invokeinterface #36,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getRequiredComponentType:()Lorg/springframework/data/util/TypeInformation;
      23: goto          27
      26: aload_1
      27: areturn

  private static boolean lambda$isOfType$2(java.lang.Object, java.lang.Class);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #37                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokevirtual #38                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       8: ireturn

  private static java.lang.IllegalStateException lambda$assertReturnTypeAssignable$1(java.lang.Class[]);
    Code:
       0: new           #39                 // class java/lang/IllegalStateException
       3: dup
       4: new           #2                  // class java/lang/StringBuilder
       7: dup
       8: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #40                 // String Method has to have one of the following return types!
      13: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokestatic  #41                 // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
      20: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #6                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: invokespecial #42                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      29: areturn

  private static boolean lambda$assertReturnTypeAssignable$0(org.springframework.data.util.TypeInformation, java.lang.Class);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #34,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getType:()Ljava/lang/Class;
       7: invokevirtual #38                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      10: ireturn
}
