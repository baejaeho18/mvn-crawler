Compiled from "RepositoryFactoryBeanSupport.java"
public abstract class org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport<T extends org.springframework.data.repository.Repository<S, ID>, S, ID> implements org.springframework.beans.factory.InitializingBean, org.springframework.data.repository.core.support.RepositoryFactoryInformation<S, ID>, org.springframework.beans.factory.FactoryBean<T>, org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.beans.factory.BeanFactoryAware, org.springframework.context.ApplicationEventPublisherAware {
  private final java.lang.Class<? extends T> repositoryInterface;

  private org.springframework.data.repository.core.support.RepositoryFactorySupport factory;

  private org.springframework.data.repository.query.QueryLookupStrategy$Key queryLookupStrategyKey;

  private java.util.Optional<java.lang.Class<?>> repositoryBaseClass;

  private java.util.Optional<java.lang.Object> customImplementation;

  private java.util.Optional<org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments> repositoryFragments;

  private org.springframework.data.repository.core.NamedQueries namedQueries;

  private java.util.Optional<org.springframework.data.mapping.context.MappingContext<?, ?>> mappingContext;

  private java.lang.ClassLoader classLoader;

  private org.springframework.beans.factory.BeanFactory beanFactory;

  private boolean lazyInit;

  private java.util.Optional<org.springframework.data.repository.query.QueryMethodEvaluationContextProvider> evaluationContextProvider;

  private org.springframework.context.ApplicationEventPublisher publisher;

  private org.springframework.data.util.Lazy<T> repository;

  private org.springframework.data.repository.core.RepositoryMetadata repositoryMetadata;

  protected org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport(java.lang.Class<? extends T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
       8: putfield      #3                  // Field repositoryBaseClass:Ljava/util/Optional;
      11: aload_0
      12: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      15: putfield      #4                  // Field customImplementation:Ljava/util/Optional;
      18: aload_0
      19: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      22: putfield      #5                  // Field repositoryFragments:Ljava/util/Optional;
      25: aload_0
      26: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      29: putfield      #6                  // Field mappingContext:Ljava/util/Optional;
      32: aload_0
      33: iconst_0
      34: putfield      #7                  // Field lazyInit:Z
      37: aload_0
      38: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      41: putfield      #8                  // Field evaluationContextProvider:Ljava/util/Optional;
      44: aload_1
      45: ldc           #9                  // String Repository interface must not be null!
      47: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      50: aload_0
      51: aload_1
      52: putfield      #11                 // Field repositoryInterface:Ljava/lang/Class;
      55: return

  public void setRepositoryBaseClass(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #12                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       5: putfield      #3                  // Field repositoryBaseClass:Ljava/util/Optional;
       8: return

  public void setQueryLookupStrategyKey(org.springframework.data.repository.query.QueryLookupStrategy$Key);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field queryLookupStrategyKey:Lorg/springframework/data/repository/query/QueryLookupStrategy$Key;
       5: return

  public void setCustomImplementation(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #12                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       5: putfield      #4                  // Field customImplementation:Ljava/util/Optional;
       8: return

  public void setRepositoryFragments(org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #12                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       5: putfield      #5                  // Field repositoryFragments:Ljava/util/Optional;
       8: return

  public void setNamedQueries(org.springframework.data.repository.core.NamedQueries);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field namedQueries:Lorg/springframework/data/repository/core/NamedQueries;
       5: return

  protected void setMappingContext(org.springframework.data.mapping.context.MappingContext<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #12                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       5: putfield      #6                  // Field mappingContext:Ljava/util/Optional;
       8: return

  public void setEvaluationContextProvider(org.springframework.data.repository.query.QueryMethodEvaluationContextProvider);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #15                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
       5: putfield      #8                  // Field evaluationContextProvider:Ljava/util/Optional;
       8: return

  public void setLazyInit(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field lazyInit:Z
       5: return

  public void setBeanClassLoader(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field classLoader:Ljava/lang/ClassLoader;
       5: return

  public void setBeanFactory(org.springframework.beans.factory.BeanFactory) throws org.springframework.beans.BeansException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
       5: aload_0
       6: getfield      #8                  // Field evaluationContextProvider:Ljava/util/Optional;
       9: invokevirtual #18                 // Method java/util/Optional.isPresent:()Z
      12: ifne          42
      15: ldc           #19                 // class org/springframework/beans/factory/ListableBeanFactory
      17: aload_1
      18: invokevirtual #20                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      21: ifeq          42
      24: aload_0
      25: new           #21                 // class org/springframework/data/repository/query/ExtensionAwareQueryMethodEvaluationContextProvider
      28: dup
      29: aload_1
      30: checkcast     #19                 // class org/springframework/beans/factory/ListableBeanFactory
      33: invokespecial #22                 // Method org/springframework/data/repository/query/ExtensionAwareQueryMethodEvaluationContextProvider."<init>":(Lorg/springframework/beans/factory/ListableBeanFactory;)V
      36: invokestatic  #15                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      39: putfield      #8                  // Field evaluationContextProvider:Ljava/util/Optional;
      42: return

  public void setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field publisher:Lorg/springframework/context/ApplicationEventPublisher;
       5: return

  public org.springframework.data.repository.core.EntityInformation<S, ID> getEntityInformation();
    Code:
       0: aload_0
       1: getfield      #24                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
       4: aload_0
       5: getfield      #25                 // Field repositoryMetadata:Lorg/springframework/data/repository/core/RepositoryMetadata;
       8: invokeinterface #26,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryMetadata.getDomainType:()Ljava/lang/Class;
      13: invokevirtual #27                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.getEntityInformation:(Ljava/lang/Class;)Lorg/springframework/data/repository/core/EntityInformation;
      16: areturn

  public org.springframework.data.repository.core.RepositoryInformation getRepositoryInformation();
    Code:
       0: aload_0
       1: getfield      #4                  // Field customImplementation:Ljava/util/Optional;
       4: invokedynamic #28,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
       9: invokevirtual #29                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      12: invokestatic  #30                 // Method org/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments.empty:()Lorg/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments;
      15: invokevirtual #31                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #32                 // class org/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments
      21: astore_1
      22: aload_0
      23: getfield      #24                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
      26: aload_0
      27: getfield      #25                 // Field repositoryMetadata:Lorg/springframework/data/repository/core/RepositoryMetadata;
      30: aload_1
      31: invokevirtual #33                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.getRepositoryInformation:(Lorg/springframework/data/repository/core/RepositoryMetadata;Lorg/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments;)Lorg/springframework/data/repository/core/RepositoryInformation;
      34: areturn

  public org.springframework.data.mapping.PersistentEntity<?, ?> getPersistentEntity();
    Code:
       0: aload_0
       1: getfield      #6                  // Field mappingContext:Ljava/util/Optional;
       4: invokedynamic #34,  0             // InvokeDynamic #1:get:()Ljava/util/function/Supplier;
       9: invokevirtual #35                 // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      12: checkcast     #36                 // class org/springframework/data/mapping/context/MappingContext
      15: aload_0
      16: getfield      #25                 // Field repositoryMetadata:Lorg/springframework/data/repository/core/RepositoryMetadata;
      19: invokeinterface #26,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryMetadata.getDomainType:()Ljava/lang/Class;
      24: invokeinterface #37,  2           // InterfaceMethod org/springframework/data/mapping/context/MappingContext.getRequiredPersistentEntity:(Ljava/lang/Class;)Lorg/springframework/data/mapping/PersistentEntity;
      29: areturn

  public java.util.List<org.springframework.data.repository.query.QueryMethod> getQueryMethods();
    Code:
       0: aload_0
       1: getfield      #24                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
       4: invokevirtual #38                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.getQueryMethods:()Ljava/util/List;
       7: areturn

  public T getObject();
    Code:
       0: aload_0
       1: getfield      #39                 // Field repository:Lorg/springframework/data/util/Lazy;
       4: invokevirtual #40                 // Method org/springframework/data/util/Lazy.get:()Ljava/lang/Object;
       7: checkcast     #41                 // class org/springframework/data/repository/Repository
      10: areturn

  public java.lang.Class<? extends T> getObjectType();
    Code:
       0: aload_0
       1: getfield      #11                 // Field repositoryInterface:Ljava/lang/Class;
       4: areturn

  public boolean isSingleton();
    Code:
       0: iconst_1
       1: ireturn

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #42                 // Method createRepositoryFactory:()Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
       5: putfield      #24                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
       8: aload_0
       9: getfield      #24                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
      12: aload_0
      13: getfield      #13                 // Field queryLookupStrategyKey:Lorg/springframework/data/repository/query/QueryLookupStrategy$Key;
      16: invokevirtual #43                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.setQueryLookupStrategyKey:(Lorg/springframework/data/repository/query/QueryLookupStrategy$Key;)V
      19: aload_0
      20: getfield      #24                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
      23: aload_0
      24: getfield      #14                 // Field namedQueries:Lorg/springframework/data/repository/core/NamedQueries;
      27: invokevirtual #44                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.setNamedQueries:(Lorg/springframework/data/repository/core/NamedQueries;)V
      30: aload_0
      31: getfield      #24                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
      34: aload_0
      35: getfield      #8                  // Field evaluationContextProvider:Ljava/util/Optional;
      38: invokedynamic #45,  0             // InvokeDynamic #2:get:()Ljava/util/function/Supplier;
      43: invokevirtual #46                 // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      46: checkcast     #47                 // class org/springframework/data/repository/query/QueryMethodEvaluationContextProvider
      49: invokevirtual #48                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.setEvaluationContextProvider:(Lorg/springframework/data/repository/query/QueryMethodEvaluationContextProvider;)V
      52: aload_0
      53: getfield      #24                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
      56: aload_0
      57: getfield      #16                 // Field classLoader:Ljava/lang/ClassLoader;
      60: invokevirtual #49                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.setBeanClassLoader:(Ljava/lang/ClassLoader;)V
      63: aload_0
      64: getfield      #24                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
      67: aload_0
      68: getfield      #17                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      71: invokevirtual #50                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.setBeanFactory:(Lorg/springframework/beans/factory/BeanFactory;)V
      74: aload_0
      75: getfield      #23                 // Field publisher:Lorg/springframework/context/ApplicationEventPublisher;
      78: ifnull        99
      81: aload_0
      82: getfield      #24                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
      85: new           #51                 // class org/springframework/data/repository/core/support/EventPublishingRepositoryProxyPostProcessor
      88: dup
      89: aload_0
      90: getfield      #23                 // Field publisher:Lorg/springframework/context/ApplicationEventPublisher;
      93: invokespecial #52                 // Method org/springframework/data/repository/core/support/EventPublishingRepositoryProxyPostProcessor."<init>":(Lorg/springframework/context/ApplicationEventPublisher;)V
      96: invokevirtual #53                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.addRepositoryProxyPostProcessor:(Lorg/springframework/data/repository/core/support/RepositoryProxyPostProcessor;)V
      99: aload_0
     100: getfield      #3                  // Field repositoryBaseClass:Ljava/util/Optional;
     103: aload_0
     104: getfield      #24                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
     107: dup
     108: invokevirtual #54                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     111: pop
     112: invokedynamic #55,  0             // InvokeDynamic #3:accept:(Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;)Ljava/util/function/Consumer;
     117: invokevirtual #56                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
     120: aload_0
     121: getfield      #4                  // Field customImplementation:Ljava/util/Optional;
     124: invokedynamic #57,  0             // InvokeDynamic #4:apply:()Ljava/util/function/Function;
     129: invokevirtual #29                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
     132: invokedynamic #58,  0             // InvokeDynamic #5:get:()Ljava/util/function/Supplier;
     137: invokevirtual #46                 // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
     140: checkcast     #32                 // class org/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments
     143: astore_1
     144: aload_0
     145: getfield      #5                  // Field repositoryFragments:Ljava/util/Optional;
     148: invokedynamic #58,  0             // InvokeDynamic #5:get:()Ljava/util/function/Supplier;
     153: invokevirtual #46                 // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
     156: checkcast     #32                 // class org/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments
     159: aload_1
     160: invokevirtual #59                 // Method org/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments.append:(Lorg/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments;)Lorg/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments;
     163: astore_2
     164: aload_0
     165: aload_0
     166: getfield      #24                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
     169: aload_0
     170: getfield      #11                 // Field repositoryInterface:Ljava/lang/Class;
     173: invokevirtual #60                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.getRepositoryMetadata:(Ljava/lang/Class;)Lorg/springframework/data/repository/core/RepositoryMetadata;
     176: putfield      #25                 // Field repositoryMetadata:Lorg/springframework/data/repository/core/RepositoryMetadata;
     179: aload_0
     180: getfield      #6                  // Field mappingContext:Ljava/util/Optional;
     183: aload_0
     184: invokedynamic #61,  0             // InvokeDynamic #6:accept:(Lorg/springframework/data/repository/core/support/RepositoryFactoryBeanSupport;)Ljava/util/function/Consumer;
     189: invokevirtual #56                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
     192: aload_0
     193: aload_0
     194: aload_2
     195: invokedynamic #62,  0             // InvokeDynamic #7:get:(Lorg/springframework/data/repository/core/support/RepositoryFactoryBeanSupport;Lorg/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments;)Ljava/util/function/Supplier;
     200: invokestatic  #63                 // Method org/springframework/data/util/Lazy.of:(Ljava/util/function/Supplier;)Lorg/springframework/data/util/Lazy;
     203: putfield      #39                 // Field repository:Lorg/springframework/data/util/Lazy;
     206: aload_0
     207: getfield      #7                  // Field lazyInit:Z
     210: ifne          221
     213: aload_0
     214: getfield      #39                 // Field repository:Lorg/springframework/data/util/Lazy;
     217: invokevirtual #40                 // Method org/springframework/data/util/Lazy.get:()Ljava/lang/Object;
     220: pop
     221: return

  protected abstract org.springframework.data.repository.core.support.RepositoryFactorySupport createRepositoryFactory();

  public java.lang.Object getObject() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method getObject:()Lorg/springframework/data/repository/Repository;
       4: areturn

  private org.springframework.data.repository.Repository lambda$afterPropertiesSet$5(org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments);
    Code:
       0: aload_0
       1: getfield      #24                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
       4: aload_0
       5: getfield      #11                 // Field repositoryInterface:Ljava/lang/Class;
       8: aload_1
       9: invokevirtual #65                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.getRepository:(Ljava/lang/Class;Lorg/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments;)Ljava/lang/Object;
      12: checkcast     #41                 // class org/springframework/data/repository/Repository
      15: areturn

  private void lambda$afterPropertiesSet$4(org.springframework.data.mapping.context.MappingContext);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #25                 // Field repositoryMetadata:Lorg/springframework/data/repository/core/RepositoryMetadata;
       5: invokeinterface #26,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryMetadata.getDomainType:()Ljava/lang/Class;
      10: invokeinterface #66,  2           // InterfaceMethod org/springframework/data/mapping/context/MappingContext.getPersistentEntity:(Ljava/lang/Class;)Lorg/springframework/data/mapping/PersistentEntity;
      15: pop
      16: return

  private static org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments lambda$afterPropertiesSet$3(java.lang.Object);
    Code:
       0: iconst_1
       1: anewarray     #67                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: aastore
       8: invokestatic  #68                 // Method org/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments.just:([Ljava/lang/Object;)Lorg/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments;
      11: areturn

  private static org.springframework.data.repository.query.QueryMethodEvaluationContextProvider lambda$afterPropertiesSet$2();
    Code:
       0: getstatic     #69                 // Field org/springframework/data/repository/query/QueryMethodEvaluationContextProvider.DEFAULT:Lorg/springframework/data/repository/query/QueryMethodEvaluationContextProvider;
       3: areturn

  private static java.lang.IllegalStateException lambda$getPersistentEntity$1();
    Code:
       0: new           #70                 // class java/lang/IllegalStateException
       3: dup
       4: ldc           #71                 // String No MappingContext available!
       6: invokespecial #72                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: areturn

  private static org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments lambda$getRepositoryInformation$0(java.lang.Object);
    Code:
       0: iconst_1
       1: anewarray     #67                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: aastore
       8: invokestatic  #68                 // Method org/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments.just:([Ljava/lang/Object;)Lorg/springframework/data/repository/core/support/RepositoryComposition$RepositoryFragments;
      11: areturn
}
