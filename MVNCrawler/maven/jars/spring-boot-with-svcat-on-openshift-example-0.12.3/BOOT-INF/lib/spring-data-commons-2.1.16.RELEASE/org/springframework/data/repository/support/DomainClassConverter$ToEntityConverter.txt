Compiled from "DomainClassConverter.java"
class org.springframework.data.repository.support.DomainClassConverter$ToEntityConverter implements org.springframework.core.convert.converter.ConditionalGenericConverter {
  private final org.springframework.data.repository.support.RepositoryInvokerFactory repositoryInvokerFactory;

  final org.springframework.data.repository.support.DomainClassConverter this$0;

  public org.springframework.data.repository.support.DomainClassConverter$ToEntityConverter(org.springframework.data.repository.support.DomainClassConverter, org.springframework.data.repository.support.Repositories, org.springframework.core.convert.ConversionService);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/springframework/data/repository/support/DomainClassConverter;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #3                  // class org/springframework/data/repository/support/DefaultRepositoryInvokerFactory
      13: dup
      14: aload_2
      15: aload_3
      16: invokespecial #4                  // Method org/springframework/data/repository/support/DefaultRepositoryInvokerFactory."<init>":(Lorg/springframework/data/repository/support/Repositories;Lorg/springframework/core/convert/ConversionService;)V
      19: putfield      #5                  // Field repositoryInvokerFactory:Lorg/springframework/data/repository/support/RepositoryInvokerFactory;
      22: return

  public java.util.Set<org.springframework.core.convert.converter.GenericConverter$ConvertiblePair> getConvertibleTypes();
    Code:
       0: new           #6                  // class org/springframework/core/convert/converter/GenericConverter$ConvertiblePair
       3: dup
       4: ldc           #7                  // class java/lang/Object
       6: ldc           #7                  // class java/lang/Object
       8: invokespecial #8                  // Method org/springframework/core/convert/converter/GenericConverter$ConvertiblePair."<init>":(Ljava/lang/Class;Ljava/lang/Class;)V
      11: invokestatic  #9                  // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
      14: areturn

  public java.lang.Object convert(java.lang.Object, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_1
       1: ifnull        14
       4: aload_1
       5: invokevirtual #10                 // Method java/lang/Object.toString:()Ljava/lang/String;
       8: invokestatic  #11                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      11: ifne          16
      14: aconst_null
      15: areturn
      16: aload_2
      17: aload_3
      18: invokevirtual #12                 // Method org/springframework/core/convert/TypeDescriptor.equals:(Ljava/lang/Object;)Z
      21: ifeq          26
      24: aload_1
      25: areturn
      26: aload_3
      27: invokevirtual #13                 // Method org/springframework/core/convert/TypeDescriptor.getType:()Ljava/lang/Class;
      30: astore        4
      32: aload_0
      33: getfield      #5                  // Field repositoryInvokerFactory:Lorg/springframework/data/repository/support/RepositoryInvokerFactory;
      36: aload         4
      38: invokeinterface #14,  2           // InterfaceMethod org/springframework/data/repository/support/RepositoryInvokerFactory.getInvokerFor:(Ljava/lang/Class;)Lorg/springframework/data/repository/support/RepositoryInvoker;
      43: astore        5
      45: aload_0
      46: getfield      #1                  // Field this$0:Lorg/springframework/data/repository/support/DomainClassConverter;
      49: invokestatic  #15                 // Method org/springframework/data/repository/support/DomainClassConverter.access$000:(Lorg/springframework/data/repository/support/DomainClassConverter;)Lorg/springframework/data/repository/support/Repositories;
      52: aload         4
      54: invokevirtual #16                 // Method org/springframework/data/repository/support/Repositories.getRequiredRepositoryInformation:(Ljava/lang/Class;)Lorg/springframework/data/repository/core/RepositoryInformation;
      57: astore        6
      59: aload_0
      60: getfield      #1                  // Field this$0:Lorg/springframework/data/repository/support/DomainClassConverter;
      63: invokestatic  #17                 // Method org/springframework/data/repository/support/DomainClassConverter.access$100:(Lorg/springframework/data/repository/support/DomainClassConverter;)Lorg/springframework/core/convert/ConversionService;
      66: aload_1
      67: aload         6
      69: invokeinterface #18,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryInformation.getIdType:()Ljava/lang/Class;
      74: invokeinterface #19,  3           // InterfaceMethod org/springframework/core/convert/ConversionService.convert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      79: astore        7
      81: aload         7
      83: ifnonnull     90
      86: aconst_null
      87: goto          103
      90: aload         5
      92: aload         7
      94: invokeinterface #20,  2           // InterfaceMethod org/springframework/data/repository/support/RepositoryInvoker.invokeFindById:(Ljava/lang/Object;)Ljava/util/Optional;
      99: aconst_null
     100: invokevirtual #21                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
     103: areturn

  public boolean matches(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #22                 // Method org/springframework/core/convert/TypeDescriptor.isAssignableTo:(Lorg/springframework/core/convert/TypeDescriptor;)Z
       5: ifeq          10
       8: iconst_0
       9: ireturn
      10: aload_2
      11: invokevirtual #13                 // Method org/springframework/core/convert/TypeDescriptor.getType:()Ljava/lang/Class;
      14: astore_3
      15: aload_0
      16: getfield      #1                  // Field this$0:Lorg/springframework/data/repository/support/DomainClassConverter;
      19: invokestatic  #15                 // Method org/springframework/data/repository/support/DomainClassConverter.access$000:(Lorg/springframework/data/repository/support/DomainClassConverter;)Lorg/springframework/data/repository/support/Repositories;
      22: aload_3
      23: invokevirtual #23                 // Method org/springframework/data/repository/support/Repositories.hasRepositoryFor:(Ljava/lang/Class;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: getfield      #1                  // Field this$0:Lorg/springframework/data/repository/support/DomainClassConverter;
      35: invokestatic  #15                 // Method org/springframework/data/repository/support/DomainClassConverter.access$000:(Lorg/springframework/data/repository/support/DomainClassConverter;)Lorg/springframework/data/repository/support/Repositories;
      38: aload_3
      39: invokevirtual #24                 // Method org/springframework/data/repository/support/Repositories.getRepositoryInformationFor:(Ljava/lang/Class;)Ljava/util/Optional;
      42: astore        4
      44: aload         4
      46: aload_0
      47: aload_1
      48: invokedynamic #25,  0             // InvokeDynamic #0:apply:(Lorg/springframework/data/repository/support/DomainClassConverter$ToEntityConverter;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/util/function/Function;
      53: invokevirtual #26                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      56: aload_3
      57: invokedynamic #27,  0             // InvokeDynamic #1:get:(Ljava/lang/Class;)Ljava/util/function/Supplier;
      62: invokevirtual #28                 // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      65: checkcast     #29                 // class java/lang/Boolean
      68: invokevirtual #30                 // Method java/lang/Boolean.booleanValue:()Z
      71: ireturn

  private static java.lang.IllegalStateException lambda$matches$1(java.lang.Class);
    Code:
       0: new           #31                 // class java/lang/IllegalStateException
       3: dup
       4: ldc           #32                 // String Couldn\'t find RepositoryInformation for %s!
       6: iconst_1
       7: anewarray     #7                  // class java/lang/Object
      10: dup
      11: iconst_0
      12: aload_0
      13: aastore
      14: invokestatic  #33                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      17: invokespecial #34                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      20: areturn

  private java.lang.Boolean lambda$matches$0(org.springframework.core.convert.TypeDescriptor, org.springframework.data.repository.core.RepositoryInformation);
    Code:
       0: aload_2
       1: invokeinterface #18,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryInformation.getIdType:()Ljava/lang/Class;
       6: astore_3
       7: aload_1
       8: aload_3
       9: invokestatic  #35                 // Method org/springframework/core/convert/TypeDescriptor.valueOf:(Ljava/lang/Class;)Lorg/springframework/core/convert/TypeDescriptor;
      12: invokevirtual #12                 // Method org/springframework/core/convert/TypeDescriptor.equals:(Ljava/lang/Object;)Z
      15: ifne          38
      18: aload_0
      19: getfield      #1                  // Field this$0:Lorg/springframework/data/repository/support/DomainClassConverter;
      22: invokestatic  #17                 // Method org/springframework/data/repository/support/DomainClassConverter.access$100:(Lorg/springframework/data/repository/support/DomainClassConverter;)Lorg/springframework/core/convert/ConversionService;
      25: aload_1
      26: invokevirtual #13                 // Method org/springframework/core/convert/TypeDescriptor.getType:()Ljava/lang/Class;
      29: aload_3
      30: invokeinterface #36,  3           // InterfaceMethod org/springframework/core/convert/ConversionService.canConvert:(Ljava/lang/Class;Ljava/lang/Class;)Z
      35: ifeq          42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: invokestatic  #37                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      46: areturn
}
