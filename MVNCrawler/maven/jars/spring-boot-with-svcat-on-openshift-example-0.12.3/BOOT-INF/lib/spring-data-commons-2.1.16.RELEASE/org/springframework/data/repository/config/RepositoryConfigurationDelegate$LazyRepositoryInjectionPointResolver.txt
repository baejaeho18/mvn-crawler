Compiled from "RepositoryConfigurationDelegate.java"
class org.springframework.data.repository.config.RepositoryConfigurationDelegate$LazyRepositoryInjectionPointResolver extends org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver {
  private static final org.slf4j.Logger LOG;

  private final java.util.Map<java.lang.String, org.springframework.data.repository.config.RepositoryConfiguration<?>> configurations;

  org.springframework.data.repository.config.RepositoryConfigurationDelegate$LazyRepositoryInjectionPointResolver withAdditionalConfigurations(java.util.Map<java.lang.String, org.springframework.data.repository.config.RepositoryConfiguration<?>>);
    Code:
       0: new           #1                  // class java/util/HashMap
       3: dup
       4: aload_0
       5: getfield      #2                  // Field configurations:Ljava/util/Map;
       8: invokespecial #3                  // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      11: astore_2
      12: aload_2
      13: aload_1
      14: invokeinterface #4,  2            // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      19: new           #5                  // class org/springframework/data/repository/config/RepositoryConfigurationDelegate$LazyRepositoryInjectionPointResolver
      22: dup
      23: aload_2
      24: invokespecial #6                  // Method "<init>":(Ljava/util/Map;)V
      27: areturn

  protected boolean isLazy(org.springframework.beans.factory.config.DependencyDescriptor);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method org/springframework/beans/factory/config/DependencyDescriptor.getDependencyType:()Ljava/lang/Class;
       4: astore_2
       5: aload_0
       6: getfield      #2                  // Field configurations:Ljava/util/Map;
       9: aload_2
      10: invokevirtual #8                  // Method java/lang/Class.getName:()Ljava/lang/String;
      13: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #10                 // class org/springframework/data/repository/config/RepositoryConfiguration
      21: astore_3
      22: aload_3
      23: ifnonnull     32
      26: aload_0
      27: aload_1
      28: invokespecial #11                 // Method org/springframework/context/annotation/ContextAnnotationAutowireCandidateResolver.isLazy:(Lorg/springframework/beans/factory/config/DependencyDescriptor;)Z
      31: ireturn
      32: aload_3
      33: invokeinterface #12,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.isLazyInit:()Z
      38: istore        4
      40: iload         4
      42: ifeq          61
      45: getstatic     #13                 // Field LOG:Lorg/slf4j/Logger;
      48: ldc           #14                 // String Creating lazy injection proxy for {}â€¦
      50: aload_3
      51: invokeinterface #15,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.getRepositoryInterface:()Ljava/lang/String;
      56: invokeinterface #16,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      61: iload         4
      63: ireturn

  public org.springframework.data.repository.config.RepositoryConfigurationDelegate$LazyRepositoryInjectionPointResolver(java.util.Map<java.lang.String, org.springframework.data.repository.config.RepositoryConfiguration<?>>);
    Code:
       0: aload_0
       1: invokespecial #17                 // Method org/springframework/context/annotation/ContextAnnotationAutowireCandidateResolver."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field configurations:Ljava/util/Map;
       9: return

  static {};
    Code:
       0: ldc           #5                  // class org/springframework/data/repository/config/RepositoryConfigurationDelegate$LazyRepositoryInjectionPointResolver
       2: invokestatic  #18                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #13                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
