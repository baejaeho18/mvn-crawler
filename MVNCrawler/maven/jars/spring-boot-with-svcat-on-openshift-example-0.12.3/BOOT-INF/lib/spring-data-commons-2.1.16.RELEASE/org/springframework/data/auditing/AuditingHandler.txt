Compiled from "AuditingHandler.java"
public class org.springframework.data.auditing.AuditingHandler implements org.springframework.beans.factory.InitializingBean {
  private static final org.slf4j.Logger LOGGER;

  private final org.springframework.data.auditing.DefaultAuditableBeanWrapperFactory factory;

  private org.springframework.data.auditing.DateTimeProvider dateTimeProvider;

  private java.util.Optional<org.springframework.data.domain.AuditorAware<?>> auditorAware;

  private boolean dateTimeForNow;

  private boolean modifyOnCreation;

  public org.springframework.data.auditing.AuditingHandler(org.springframework.data.mapping.context.MappingContext<? extends org.springframework.data.mapping.PersistentEntity<?, ?>, ? extends org.springframework.data.mapping.PersistentProperty<?>>);
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #1                  // class org/springframework/data/mapping/context/MappingContext
       5: dup
       6: iconst_0
       7: aload_1
       8: aastore
       9: invokestatic  #2                  // Method org/springframework/data/mapping/context/PersistentEntities.of:([Lorg/springframework/data/mapping/context/MappingContext;)Lorg/springframework/data/mapping/context/PersistentEntities;
      12: invokespecial #3                  // Method "<init>":(Lorg/springframework/data/mapping/context/PersistentEntities;)V
      15: return

  public org.springframework.data.auditing.AuditingHandler(org.springframework.data.mapping.context.PersistentEntities);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #5                  // Field org/springframework/data/auditing/CurrentDateTimeProvider.INSTANCE:Lorg/springframework/data/auditing/CurrentDateTimeProvider;
       8: putfield      #6                  // Field dateTimeProvider:Lorg/springframework/data/auditing/DateTimeProvider;
      11: aload_0
      12: iconst_1
      13: putfield      #7                  // Field dateTimeForNow:Z
      16: aload_0
      17: iconst_1
      18: putfield      #8                  // Field modifyOnCreation:Z
      21: aload_1
      22: ldc           #9                  // String PersistentEntities must not be null!
      24: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      27: aload_0
      28: new           #11                 // class org/springframework/data/auditing/MappingAuditableBeanWrapperFactory
      31: dup
      32: aload_1
      33: invokespecial #12                 // Method org/springframework/data/auditing/MappingAuditableBeanWrapperFactory."<init>":(Lorg/springframework/data/mapping/context/PersistentEntities;)V
      36: putfield      #13                 // Field factory:Lorg/springframework/data/auditing/DefaultAuditableBeanWrapperFactory;
      39: aload_0
      40: invokestatic  #14                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      43: putfield      #15                 // Field auditorAware:Ljava/util/Optional;
      46: return

  public void setAuditorAware(org.springframework.data.domain.AuditorAware<?>);
    Code:
       0: aload_1
       1: ldc           #16                 // String AuditorAware must not be null!
       3: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokestatic  #17                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      11: putfield      #15                 // Field auditorAware:Ljava/util/Optional;
      14: return

  public void setDateTimeForNow(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field dateTimeForNow:Z
       5: return

  public void setModifyOnCreation(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field modifyOnCreation:Z
       5: return

  public void setDateTimeProvider(org.springframework.data.auditing.DateTimeProvider);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     11
       5: getstatic     #5                  // Field org/springframework/data/auditing/CurrentDateTimeProvider.INSTANCE:Lorg/springframework/data/auditing/CurrentDateTimeProvider;
       8: goto          12
      11: aload_1
      12: putfield      #6                  // Field dateTimeProvider:Lorg/springframework/data/auditing/DateTimeProvider;
      15: return

  public <T> T markCreated(T);
    Code:
       0: aload_1
       1: ldc           #18                 // String Entity must not be null!
       3: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: iconst_1
       9: invokespecial #19                 // Method touch:(Ljava/lang/Object;Z)Ljava/lang/Object;
      12: areturn

  public <T> T markModified(T);
    Code:
       0: aload_1
       1: ldc           #18                 // String Entity must not be null!
       3: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: iconst_0
       9: invokespecial #19                 // Method touch:(Ljava/lang/Object;Z)Ljava/lang/Object;
      12: areturn

  protected final boolean isAuditable(java.lang.Object);
    Code:
       0: aload_1
       1: ldc           #20                 // String Source must not be null!
       3: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #13                 // Field factory:Lorg/springframework/data/auditing/DefaultAuditableBeanWrapperFactory;
      10: aload_1
      11: invokevirtual #21                 // Method org/springframework/data/auditing/DefaultAuditableBeanWrapperFactory.getBeanWrapperFor:(Ljava/lang/Object;)Ljava/util/Optional;
      14: invokevirtual #22                 // Method java/util/Optional.isPresent:()Z
      17: ireturn

  private <T> T touch(T, boolean);
    Code:
       0: aload_0
       1: getfield      #13                 // Field factory:Lorg/springframework/data/auditing/DefaultAuditableBeanWrapperFactory;
       4: aload_1
       5: invokevirtual #21                 // Method org/springframework/data/auditing/DefaultAuditableBeanWrapperFactory.getBeanWrapperFor:(Ljava/lang/Object;)Ljava/util/Optional;
       8: astore_3
       9: aload_3
      10: aload_0
      11: iload_2
      12: aload_1
      13: invokedynamic #23,  0             // InvokeDynamic #0:apply:(Lorg/springframework/data/auditing/AuditingHandler;ZLjava/lang/Object;)Ljava/util/function/Function;
      18: invokevirtual #24                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      21: aload_1
      22: invokevirtual #25                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      25: areturn

  private java.util.Optional<java.lang.Object> touchAuditor(org.springframework.data.auditing.AuditableBeanWrapper<?>, boolean);
    Code:
       0: aload_1
       1: ldc           #26                 // String AuditableBeanWrapper must not be null!
       3: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #15                 // Field auditorAware:Ljava/util/Optional;
      10: aload_0
      11: iload_2
      12: aload_1
      13: invokedynamic #27,  0             // InvokeDynamic #1:apply:(Lorg/springframework/data/auditing/AuditingHandler;ZLorg/springframework/data/auditing/AuditableBeanWrapper;)Ljava/util/function/Function;
      18: invokevirtual #24                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      21: areturn

  private java.util.Optional<java.time.temporal.TemporalAccessor> touchDate(org.springframework.data.auditing.AuditableBeanWrapper<?>, boolean);
    Code:
       0: aload_1
       1: ldc           #26                 // String AuditableBeanWrapper must not be null!
       3: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #6                  // Field dateTimeProvider:Lorg/springframework/data/auditing/DateTimeProvider;
      10: invokeinterface #28,  1           // InterfaceMethod org/springframework/data/auditing/DateTimeProvider.getNow:()Ljava/util/Optional;
      15: astore_3
      16: aload_3
      17: aload_0
      18: invokedynamic #29,  0             // InvokeDynamic #2:get:(Lorg/springframework/data/auditing/AuditingHandler;)Ljava/util/function/Supplier;
      23: invokestatic  #30                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/util/function/Supplier;)V
      26: aload_3
      27: iload_2
      28: invokedynamic #31,  0             // InvokeDynamic #3:test:(Z)Ljava/util/function/Predicate;
      33: invokevirtual #32                 // Method java/util/Optional.filter:(Ljava/util/function/Predicate;)Ljava/util/Optional;
      36: aload_1
      37: invokedynamic #33,  0             // InvokeDynamic #4:accept:(Lorg/springframework/data/auditing/AuditableBeanWrapper;)Ljava/util/function/Consumer;
      42: invokevirtual #34                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      45: aload_3
      46: aload_0
      47: iload_2
      48: invokedynamic #35,  0             // InvokeDynamic #5:test:(Lorg/springframework/data/auditing/AuditingHandler;Z)Ljava/util/function/Predicate;
      53: invokevirtual #32                 // Method java/util/Optional.filter:(Ljava/util/function/Predicate;)Ljava/util/Optional;
      56: aload_1
      57: invokedynamic #36,  0             // InvokeDynamic #6:accept:(Lorg/springframework/data/auditing/AuditableBeanWrapper;)Ljava/util/function/Consumer;
      62: invokevirtual #34                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      65: aload_3
      66: areturn

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: getfield      #15                 // Field auditorAware:Ljava/util/Optional;
       4: invokevirtual #22                 // Method java/util/Optional.isPresent:()Z
       7: ifne          20
      10: getstatic     #37                 // Field LOGGER:Lorg/slf4j/Logger;
      13: ldc           #38                 // String No AuditorAware set! Auditing will not be applied!
      15: invokeinterface #39,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      20: return

  private static void lambda$touchDate$11(org.springframework.data.auditing.AuditableBeanWrapper, java.time.temporal.TemporalAccessor);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #40,  2           // InterfaceMethod org/springframework/data/auditing/AuditableBeanWrapper.setLastModifiedDate:(Ljava/time/temporal/TemporalAccessor;)Ljava/time/temporal/TemporalAccessor;
       7: pop
       8: return

  private boolean lambda$touchDate$10(boolean, java.time.temporal.TemporalAccessor);
    Code:
       0: iload_1
       1: ifeq          11
       4: aload_0
       5: getfield      #8                  // Field modifyOnCreation:Z
       8: ifeq          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  private static void lambda$touchDate$9(org.springframework.data.auditing.AuditableBeanWrapper, java.time.temporal.TemporalAccessor);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #41,  2           // InterfaceMethod org/springframework/data/auditing/AuditableBeanWrapper.setCreatedDate:(Ljava/time/temporal/TemporalAccessor;)Ljava/time/temporal/TemporalAccessor;
       7: pop
       8: return

  private static boolean lambda$touchDate$8(boolean, java.time.temporal.TemporalAccessor);
    Code:
       0: iload_0
       1: ireturn

  private java.lang.String lambda$touchDate$7();
    Code:
       0: ldc           #42                 // String Now must not be null! Returned by: %s!
       2: iconst_1
       3: anewarray     #43                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: getfield      #6                  // Field dateTimeProvider:Lorg/springframework/data/auditing/DateTimeProvider;
      12: invokevirtual #44                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aastore
      16: invokestatic  #45                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: areturn

  private java.lang.Object lambda$touchAuditor$6(boolean, org.springframework.data.auditing.AuditableBeanWrapper, org.springframework.data.domain.AuditorAware);
    Code:
       0: aload_3
       1: invokeinterface #46,  1           // InterfaceMethod org/springframework/data/domain/AuditorAware.getCurrentAuditor:()Ljava/util/Optional;
       6: astore        4
       8: aload         4
      10: aload_3
      11: invokedynamic #47,  0             // InvokeDynamic #7:get:(Lorg/springframework/data/domain/AuditorAware;)Ljava/util/function/Supplier;
      16: invokestatic  #30                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/util/function/Supplier;)V
      19: aload         4
      21: iload_1
      22: invokedynamic #48,  0             // InvokeDynamic #8:test:(Z)Ljava/util/function/Predicate;
      27: invokevirtual #32                 // Method java/util/Optional.filter:(Ljava/util/function/Predicate;)Ljava/util/Optional;
      30: aload_2
      31: invokedynamic #49,  0             // InvokeDynamic #9:accept:(Lorg/springframework/data/auditing/AuditableBeanWrapper;)Ljava/util/function/Consumer;
      36: invokevirtual #34                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      39: aload         4
      41: aload_0
      42: iload_1
      43: invokedynamic #50,  0             // InvokeDynamic #10:test:(Lorg/springframework/data/auditing/AuditingHandler;Z)Ljava/util/function/Predicate;
      48: invokevirtual #32                 // Method java/util/Optional.filter:(Ljava/util/function/Predicate;)Ljava/util/Optional;
      51: aload_2
      52: invokedynamic #51,  0             // InvokeDynamic #11:accept:(Lorg/springframework/data/auditing/AuditableBeanWrapper;)Ljava/util/function/Consumer;
      57: invokevirtual #34                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      60: aload         4
      62: areturn

  private static void lambda$null$5(org.springframework.data.auditing.AuditableBeanWrapper, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #52,  2           // InterfaceMethod org/springframework/data/auditing/AuditableBeanWrapper.setLastModifiedBy:(Ljava/lang/Object;)Ljava/lang/Object;
       7: pop
       8: return

  private boolean lambda$null$4(boolean, java.lang.Object);
    Code:
       0: iload_1
       1: ifeq          11
       4: aload_0
       5: getfield      #8                  // Field modifyOnCreation:Z
       8: ifeq          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  private static void lambda$null$3(org.springframework.data.auditing.AuditableBeanWrapper, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #53,  2           // InterfaceMethod org/springframework/data/auditing/AuditableBeanWrapper.setCreatedBy:(Ljava/lang/Object;)Ljava/lang/Object;
       7: pop
       8: return

  private static boolean lambda$null$2(boolean, java.lang.Object);
    Code:
       0: iload_0
       1: ireturn

  private static java.lang.String lambda$null$1(org.springframework.data.domain.AuditorAware);
    Code:
       0: ldc           #54                 // String Auditor must not be null! Returned by: %s!
       2: iconst_1
       3: anewarray     #43                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: invokestatic  #55                 // Method org/springframework/aop/support/AopUtils.getTargetClass:(Ljava/lang/Object;)Ljava/lang/Class;
      12: aastore
      13: invokestatic  #45                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      16: areturn

  private java.lang.Object lambda$touch$0(boolean, java.lang.Object, org.springframework.data.auditing.AuditableBeanWrapper);
    Code:
       0: aload_0
       1: aload_3
       2: iload_1
       3: invokespecial #56                 // Method touchAuditor:(Lorg/springframework/data/auditing/AuditableBeanWrapper;Z)Ljava/util/Optional;
       6: astore        4
       8: aload_0
       9: getfield      #7                  // Field dateTimeForNow:Z
      12: ifeq          24
      15: aload_0
      16: aload_3
      17: iload_1
      18: invokespecial #57                 // Method touchDate:(Lorg/springframework/data/auditing/AuditableBeanWrapper;Z)Ljava/util/Optional;
      21: goto          27
      24: invokestatic  #14                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      27: astore        5
      29: getstatic     #37                 // Field LOGGER:Lorg/slf4j/Logger;
      32: invokeinterface #58,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      37: ifeq          102
      40: aload         5
      42: invokedynamic #59,  0             // InvokeDynamic #12:apply:()Ljava/util/function/Function;
      47: invokevirtual #24                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      50: ldc           #60                 // String not set
      52: invokevirtual #25                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      55: astore        6
      57: aload         4
      59: invokedynamic #61,  0             // InvokeDynamic #13:apply:()Ljava/util/function/Function;
      64: invokevirtual #24                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      67: ldc           #62                 // String unknown
      69: invokevirtual #25                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      72: astore        7
      74: getstatic     #37                 // Field LOGGER:Lorg/slf4j/Logger;
      77: ldc           #63                 // String Touched {} - Last modification at {} by {}
      79: iconst_3
      80: anewarray     #43                 // class java/lang/Object
      83: dup
      84: iconst_0
      85: aload_2
      86: aastore
      87: dup
      88: iconst_1
      89: aload         6
      91: aastore
      92: dup
      93: iconst_2
      94: aload         7
      96: aastore
      97: invokeinterface #64,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     102: aload_3
     103: invokeinterface #65,  1           // InterfaceMethod org/springframework/data/auditing/AuditableBeanWrapper.getBean:()Ljava/lang/Object;
     108: areturn

  static {};
    Code:
       0: ldc           #66                 // class org/springframework/data/auditing/AuditingHandler
       2: invokestatic  #67                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #37                 // Field LOGGER:Lorg/slf4j/Logger;
       8: return
}
