Compiled from "EvaluationContextExtensionInformation.java"
class org.springframework.data.spel.EvaluationContextExtensionInformation$RootObjectInformation {
  private static final org.springframework.data.spel.EvaluationContextExtensionInformation$RootObjectInformation NONE;

  private final java.util.Map<java.lang.String, java.lang.reflect.Method> accessors;

  private final java.util.Collection<java.lang.reflect.Method> methods;

  private final java.util.Collection<java.lang.reflect.Field> fields;

  public org.springframework.data.spel.EvaluationContextExtensionInformation$RootObjectInformation(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #3                  // String Type must not be null!
       7: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: new           #5                  // class java/util/HashMap
      14: dup
      15: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      18: putfield      #7                  // Field accessors:Ljava/util/Map;
      21: aload_0
      22: new           #8                  // class java/util/HashSet
      25: dup
      26: invokespecial #9                  // Method java/util/HashSet."<init>":()V
      29: putfield      #10                 // Field methods:Ljava/util/Collection;
      32: aload_0
      33: new           #11                 // class java/util/ArrayList
      36: dup
      37: invokespecial #12                 // Method java/util/ArrayList."<init>":()V
      40: putfield      #13                 // Field fields:Ljava/util/Collection;
      43: ldc           #14                 // class java/lang/Object
      45: aload_1
      46: invokevirtual #15                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      49: ifeq          53
      52: return
      53: aload_1
      54: invokestatic  #16                 // Method org/springframework/beans/BeanUtils.getPropertyDescriptors:(Ljava/lang/Class;)[Ljava/beans/PropertyDescriptor;
      57: invokestatic  #17                 // InterfaceMethod org/springframework/data/util/Streamable.of:([Ljava/lang/Object;)Lorg/springframework/data/util/Streamable;
      60: astore_2
      61: aload_1
      62: aload_0
      63: aload_2
      64: invokedynamic #18,  0             // InvokeDynamic #0:doWith:(Lorg/springframework/data/spel/EvaluationContextExtensionInformation$RootObjectInformation;Lorg/springframework/data/util/Streamable;)Lorg/springframework/util/ReflectionUtils$MethodCallback;
      69: getstatic     #19                 // Field org/springframework/data/spel/EvaluationContextExtensionInformation$ExtensionTypeInformation$PublicMethodAndFieldFilter.NON_STATIC:Lorg/springframework/data/spel/EvaluationContextExtensionInformation$ExtensionTypeInformation$PublicMethodAndFieldFilter;
      72: invokestatic  #20                 // Method org/springframework/util/ReflectionUtils.doWithMethods:(Ljava/lang/Class;Lorg/springframework/util/ReflectionUtils$MethodCallback;Lorg/springframework/util/ReflectionUtils$MethodFilter;)V
      75: aload_1
      76: aload_0
      77: getfield      #13                 // Field fields:Ljava/util/Collection;
      80: dup
      81: invokevirtual #21                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      84: pop
      85: invokedynamic #22,  0             // InvokeDynamic #1:doWith:(Ljava/util/Collection;)Lorg/springframework/util/ReflectionUtils$FieldCallback;
      90: getstatic     #19                 // Field org/springframework/data/spel/EvaluationContextExtensionInformation$ExtensionTypeInformation$PublicMethodAndFieldFilter.NON_STATIC:Lorg/springframework/data/spel/EvaluationContextExtensionInformation$ExtensionTypeInformation$PublicMethodAndFieldFilter;
      93: invokestatic  #23                 // Method org/springframework/util/ReflectionUtils.doWithFields:(Ljava/lang/Class;Lorg/springframework/util/ReflectionUtils$FieldCallback;Lorg/springframework/util/ReflectionUtils$FieldFilter;)V
      96: return

  public org.springframework.util.MultiValueMap<java.lang.String, org.springframework.data.spel.spi.Function> getFunctions(java.util.Optional<java.lang.Object>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #24,  0             // InvokeDynamic #2:apply:(Lorg/springframework/data/spel/EvaluationContextExtensionInformation$RootObjectInformation;)Ljava/util/function/Function;
       7: invokevirtual #25                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      10: invokedynamic #26,  0             // InvokeDynamic #3:get:()Ljava/util/function/Supplier;
      15: invokevirtual #27                 // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      18: checkcast     #28                 // class org/springframework/util/MultiValueMap
      21: areturn

  private org.springframework.util.MultiValueMap<java.lang.String, org.springframework.data.spel.spi.Function> getFunctions(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #10                 // Field methods:Ljava/util/Collection;
       4: invokeinterface #29,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
       9: invokedynamic #30,  0             // InvokeDynamic #4:apply:()Ljava/util/function/Function;
      14: aload_1
      15: invokedynamic #31,  0             // InvokeDynamic #5:apply:(Ljava/lang/Object;)Ljava/util/function/Function;
      20: invokestatic  #32                 // InterfaceMethod org/springframework/data/util/StreamUtils.toMultiMap:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
      23: invokeinterface #33,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      28: checkcast     #28                 // class org/springframework/util/MultiValueMap
      31: areturn

  public java.util.Map<java.lang.String, java.lang.Object> getProperties(java.util.Optional<java.lang.Object>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #34,  0             // InvokeDynamic #6:apply:(Lorg/springframework/data/spel/EvaluationContextExtensionInformation$RootObjectInformation;)Ljava/util/function/Function;
       7: invokevirtual #25                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      10: invokedynamic #35,  0             // InvokeDynamic #7:get:()Ljava/util/function/Supplier;
      15: invokevirtual #27                 // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      18: checkcast     #36                 // class java/util/Map
      21: areturn

  private java.util.Map lambda$getProperties$7(java.lang.Object);
    Code:
       0: new           #5                  // class java/util/HashMap
       3: dup
       4: invokespecial #6                  // Method java/util/HashMap."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #7                  // Field accessors:Ljava/util/Map;
      12: invokeinterface #37,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      17: invokeinterface #38,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      22: aload_2
      23: aload_1
      24: invokedynamic #39,  0             // InvokeDynamic #8:accept:(Ljava/util/Map;Ljava/lang/Object;)Ljava/util/function/Consumer;
      29: invokeinterface #40,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      34: aload_0
      35: getfield      #13                 // Field fields:Ljava/util/Collection;
      38: invokeinterface #29,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      43: aload_2
      44: aload_1
      45: invokedynamic #41,  0             // InvokeDynamic #9:accept:(Ljava/util/Map;Ljava/lang/Object;)Ljava/util/function/Consumer;
      50: invokeinterface #40,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      55: aload_2
      56: invokestatic  #42                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      59: areturn

  private static void lambda$null$6(java.util.Map, java.lang.Object, java.lang.reflect.Field);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #43                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
       5: aload_2
       6: aload_1
       7: invokestatic  #44                 // Method org/springframework/util/ReflectionUtils.getField:(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/Object;
      10: invokeinterface #45,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: return

  private static void lambda$null$5(java.util.Map, java.lang.Object, java.util.Map$Entry);
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #46,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
       7: new           #47                 // class org/springframework/data/spel/spi/Function
      10: dup
      11: aload_2
      12: invokeinterface #48,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      17: checkcast     #49                 // class java/lang/reflect/Method
      20: aload_1
      21: invokespecial #50                 // Method org/springframework/data/spel/spi/Function."<init>":(Ljava/lang/reflect/Method;Ljava/lang/Object;)V
      24: invokeinterface #45,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: return

  private static org.springframework.data.spel.spi.Function lambda$getFunctions$4(java.lang.Object, java.lang.reflect.Method);
    Code:
       0: new           #47                 // class org/springframework/data/spel/spi/Function
       3: dup
       4: aload_1
       5: aload_0
       6: invokespecial #50                 // Method org/springframework/data/spel/spi/Function."<init>":(Ljava/lang/reflect/Method;Ljava/lang/Object;)V
       9: areturn

  private static org.springframework.util.MultiValueMap lambda$getFunctions$3();
    Code:
       0: new           #51                 // class org/springframework/util/LinkedMultiValueMap
       3: dup
       4: invokespecial #52                 // Method org/springframework/util/LinkedMultiValueMap."<init>":()V
       7: areturn

  private void lambda$new$2(org.springframework.data.util.Streamable, java.lang.reflect.Method) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field methods:Ljava/util/Collection;
       4: aload_2
       5: invokeinterface #53,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_1
      12: invokeinterface #54,  1           // InterfaceMethod org/springframework/data/util/Streamable.stream:()Ljava/util/stream/Stream;
      17: aload_2
      18: invokedynamic #55,  0             // InvokeDynamic #10:test:(Ljava/lang/reflect/Method;)Ljava/util/function/Predicate;
      23: invokeinterface #56,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      28: aload_0
      29: aload_2
      30: invokedynamic #57,  0             // InvokeDynamic #11:accept:(Lorg/springframework/data/spel/EvaluationContextExtensionInformation$RootObjectInformation;Ljava/lang/reflect/Method;)Ljava/util/function/Consumer;
      35: invokeinterface #40,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      40: return

  private void lambda$null$1(java.lang.reflect.Method, java.beans.PropertyDescriptor);
    Code:
       0: aload_0
       1: getfield      #7                  // Field accessors:Ljava/util/Map;
       4: aload_2
       5: invokevirtual #58                 // Method java/beans/PropertyDescriptor.getName:()Ljava/lang/String;
       8: aload_1
       9: invokeinterface #45,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #49                 // class java/lang/reflect/Method
      17: pop
      18: return

  private static boolean lambda$null$0(java.lang.reflect.Method, java.beans.PropertyDescriptor);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #59                 // Method java/beans/PropertyDescriptor.getReadMethod:()Ljava/lang/reflect/Method;
       5: invokevirtual #60                 // Method java/lang/reflect/Method.equals:(Ljava/lang/Object;)Z
       8: ireturn

  static org.springframework.data.spel.EvaluationContextExtensionInformation$RootObjectInformation access$000();
    Code:
       0: getstatic     #1                  // Field NONE:Lorg/springframework/data/spel/EvaluationContextExtensionInformation$RootObjectInformation;
       3: areturn

  static {};
    Code:
       0: new           #61                 // class org/springframework/data/spel/EvaluationContextExtensionInformation$RootObjectInformation
       3: dup
       4: ldc           #14                 // class java/lang/Object
       6: invokespecial #62                 // Method "<init>":(Ljava/lang/Class;)V
       9: putstatic     #1                  // Field NONE:Lorg/springframework/data/spel/EvaluationContextExtensionInformation$RootObjectInformation;
      12: return
}
