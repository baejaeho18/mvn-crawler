Compiled from "RepositoryConfigurationSourceSupport.java"
public abstract class org.springframework.data.repository.config.RepositoryConfigurationSourceSupport implements org.springframework.data.repository.config.RepositoryConfigurationSource {
  protected static final java.lang.String DEFAULT_REPOSITORY_IMPL_POSTFIX;

  private final org.springframework.core.env.Environment environment;

  private final org.springframework.data.repository.config.RepositoryBeanNameGenerator beanNameGenerator;

  private final org.springframework.beans.factory.support.BeanDefinitionRegistry registry;

  public org.springframework.data.repository.config.RepositoryConfigurationSourceSupport(org.springframework.core.env.Environment, java.lang.ClassLoader, org.springframework.beans.factory.support.BeanDefinitionRegistry);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Environment must not be null!
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_2
      11: ldc           #4                  // String ClassLoader must not be null!
      13: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_3
      17: ldc           #5                  // String BeanDefinitionRegistry must not be null!
      19: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      22: aload_0
      23: aload_1
      24: putfield      #6                  // Field environment:Lorg/springframework/core/env/Environment;
      27: aload_0
      28: new           #7                  // class org/springframework/data/repository/config/RepositoryBeanNameGenerator
      31: dup
      32: aload_2
      33: invokespecial #8                  // Method org/springframework/data/repository/config/RepositoryBeanNameGenerator."<init>":(Ljava/lang/ClassLoader;)V
      36: putfield      #9                  // Field beanNameGenerator:Lorg/springframework/data/repository/config/RepositoryBeanNameGenerator;
      39: aload_0
      40: aload_3
      41: putfield      #10                 // Field registry:Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;
      44: return

  public org.springframework.data.util.Streamable<org.springframework.beans.factory.config.BeanDefinition> getCandidates(org.springframework.core.io.ResourceLoader);
    Code:
       0: new           #11                 // class org/springframework/data/repository/config/RepositoryComponentProvider
       3: dup
       4: aload_0
       5: invokevirtual #12                 // Method getIncludeFilters:()Ljava/lang/Iterable;
       8: aload_0
       9: getfield      #10                 // Field registry:Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;
      12: invokespecial #13                 // Method org/springframework/data/repository/config/RepositoryComponentProvider."<init>":(Ljava/lang/Iterable;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V
      15: astore_2
      16: aload_2
      17: aload_0
      18: invokevirtual #14                 // Method shouldConsiderNestedRepositories:()Z
      21: invokevirtual #15                 // Method org/springframework/data/repository/config/RepositoryComponentProvider.setConsiderNestedRepositoryInterfaces:(Z)V
      24: aload_2
      25: aload_0
      26: getfield      #6                  // Field environment:Lorg/springframework/core/env/Environment;
      29: invokevirtual #16                 // Method org/springframework/data/repository/config/RepositoryComponentProvider.setEnvironment:(Lorg/springframework/core/env/Environment;)V
      32: aload_2
      33: aload_1
      34: invokevirtual #17                 // Method org/springframework/data/repository/config/RepositoryComponentProvider.setResourceLoader:(Lorg/springframework/core/io/ResourceLoader;)V
      37: aload_0
      38: invokevirtual #18                 // Method getExcludeFilters:()Lorg/springframework/data/util/Streamable;
      41: aload_2
      42: invokedynamic #19,  0             // InvokeDynamic #0:accept:(Lorg/springframework/data/repository/config/RepositoryComponentProvider;)Ljava/util/function/Consumer;
      47: invokeinterface #20,  2           // InterfaceMethod org/springframework/data/util/Streamable.forEach:(Ljava/util/function/Consumer;)V
      52: aload_0
      53: aload_2
      54: invokedynamic #21,  0             // InvokeDynamic #1:get:(Lorg/springframework/data/repository/config/RepositoryConfigurationSourceSupport;Lorg/springframework/data/repository/config/RepositoryComponentProvider;)Ljava/util/function/Supplier;
      59: invokestatic  #22                 // InterfaceMethod org/springframework/data/util/Streamable.of:(Ljava/util/function/Supplier;)Lorg/springframework/data/util/Streamable;
      62: areturn

  public org.springframework.data.util.Streamable<org.springframework.core.type.filter.TypeFilter> getExcludeFilters();
    Code:
       0: invokestatic  #23                 // InterfaceMethod org/springframework/data/util/Streamable.empty:()Lorg/springframework/data/util/Streamable;
       3: areturn

  public java.lang.String generateBeanName(org.springframework.beans.factory.config.BeanDefinition);
    Code:
       0: aload_0
       1: getfield      #9                  // Field beanNameGenerator:Lorg/springframework/data/repository/config/RepositoryBeanNameGenerator;
       4: aload_1
       5: invokevirtual #24                 // Method org/springframework/data/repository/config/RepositoryBeanNameGenerator.generateBeanName:(Lorg/springframework/beans/factory/config/BeanDefinition;)Ljava/lang/String;
       8: areturn

  protected java.lang.Iterable<org.springframework.core.type.filter.TypeFilter> getIncludeFilters();
    Code:
       0: invokestatic  #25                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
       3: areturn

  public boolean shouldConsiderNestedRepositories();
    Code:
       0: iconst_0
       1: ireturn

  public org.springframework.data.repository.config.ImplementationDetectionConfiguration toImplementationDetectionConfiguration(org.springframework.core.type.classreading.MetadataReaderFactory);
    Code:
       0: new           #26                 // class org/springframework/data/repository/config/RepositoryConfigurationSourceSupport$SpringImplementationDetectionConfiguration
       3: dup
       4: aload_0
       5: aload_0
       6: aload_1
       7: invokespecial #27                 // Method org/springframework/data/repository/config/RepositoryConfigurationSourceSupport$SpringImplementationDetectionConfiguration."<init>":(Lorg/springframework/data/repository/config/RepositoryConfigurationSourceSupport;Lorg/springframework/data/repository/config/RepositoryConfigurationSource;Lorg/springframework/core/type/classreading/MetadataReaderFactory;)V
      10: areturn

  private java.util.stream.Stream lambda$getCandidates$2(org.springframework.data.repository.config.RepositoryComponentProvider);
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method getBasePackages:()Lorg/springframework/data/util/Streamable;
       4: invokeinterface #29,  1           // InterfaceMethod org/springframework/data/util/Streamable.stream:()Ljava/util/stream/Stream;
       9: aload_1
      10: invokedynamic #30,  0             // InvokeDynamic #2:apply:(Lorg/springframework/data/repository/config/RepositoryComponentProvider;)Ljava/util/function/Function;
      15: invokeinterface #31,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      20: areturn

  private static java.util.stream.Stream lambda$null$1(org.springframework.data.repository.config.RepositoryComponentProvider, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #32                 // Method org/springframework/data/repository/config/RepositoryComponentProvider.findCandidateComponents:(Ljava/lang/String;)Ljava/util/Set;
       5: invokeinterface #33,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      10: areturn

  private static void lambda$getCandidates$0(org.springframework.data.repository.config.RepositoryComponentProvider, org.springframework.core.type.filter.TypeFilter);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #34                 // Method org/springframework/data/repository/config/RepositoryComponentProvider.addExcludeFilter:(Lorg/springframework/core/type/filter/TypeFilter;)V
       5: return
}
