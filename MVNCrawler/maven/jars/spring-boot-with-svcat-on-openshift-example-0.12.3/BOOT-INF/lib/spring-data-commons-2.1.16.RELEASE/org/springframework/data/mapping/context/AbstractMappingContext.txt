Compiled from "AbstractMappingContext.java"
public abstract class org.springframework.data.mapping.context.AbstractMappingContext<E extends org.springframework.data.mapping.model.MutablePersistentEntity<?, P>, P extends org.springframework.data.mapping.PersistentProperty<P>> implements org.springframework.data.mapping.context.MappingContext<E, P>, org.springframework.context.ApplicationEventPublisherAware, org.springframework.context.ApplicationContextAware, org.springframework.beans.factory.InitializingBean {
  private final java.util.Optional<E> NONE;

  private final java.util.Map<org.springframework.data.util.TypeInformation<?>, java.util.Optional<E>> persistentEntities;

  private final org.springframework.data.mapping.model.PersistentPropertyAccessorFactory persistentPropertyAccessorFactory;

  private final org.springframework.data.mapping.context.PersistentPropertyPathFactory<E, P> persistentPropertyPathFactory;

  private org.springframework.context.ApplicationEventPublisher applicationEventPublisher;

  private org.springframework.data.spel.EvaluationContextProvider evaluationContextProvider;

  private java.util.Set<? extends java.lang.Class<?>> initialEntitySet;

  private boolean strict;

  private org.springframework.data.mapping.model.SimpleTypeHolder simpleTypeHolder;

  private final java.util.concurrent.locks.ReentrantReadWriteLock lock;

  private final java.util.concurrent.locks.Lock read;

  private final java.util.concurrent.locks.Lock write;

  protected org.springframework.data.mapping.context.AbstractMappingContext();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #3                  // Method java/util/Optional.empty:()Ljava/util/Optional;
       8: putfield      #4                  // Field NONE:Ljava/util/Optional;
      11: aload_0
      12: new           #5                  // class java/util/HashMap
      15: dup
      16: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      19: putfield      #7                  // Field persistentEntities:Ljava/util/Map;
      22: aload_0
      23: new           #8                  // class org/springframework/data/mapping/model/ClassGeneratingPropertyAccessorFactory
      26: dup
      27: invokespecial #9                  // Method org/springframework/data/mapping/model/ClassGeneratingPropertyAccessorFactory."<init>":()V
      30: putfield      #10                 // Field persistentPropertyAccessorFactory:Lorg/springframework/data/mapping/model/PersistentPropertyAccessorFactory;
      33: aload_0
      34: getstatic     #11                 // Field org/springframework/data/spel/EvaluationContextProvider.DEFAULT:Lorg/springframework/data/spel/EvaluationContextProvider;
      37: putfield      #12                 // Field evaluationContextProvider:Lorg/springframework/data/spel/EvaluationContextProvider;
      40: aload_0
      41: new           #13                 // class java/util/HashSet
      44: dup
      45: invokespecial #14                 // Method java/util/HashSet."<init>":()V
      48: putfield      #15                 // Field initialEntitySet:Ljava/util/Set;
      51: aload_0
      52: iconst_0
      53: putfield      #16                 // Field strict:Z
      56: aload_0
      57: getstatic     #17                 // Field org/springframework/data/mapping/model/SimpleTypeHolder.DEFAULT:Lorg/springframework/data/mapping/model/SimpleTypeHolder;
      60: putfield      #1                  // Field simpleTypeHolder:Lorg/springframework/data/mapping/model/SimpleTypeHolder;
      63: aload_0
      64: new           #18                 // class java/util/concurrent/locks/ReentrantReadWriteLock
      67: dup
      68: invokespecial #19                 // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
      71: putfield      #20                 // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      74: aload_0
      75: aload_0
      76: getfield      #20                 // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      79: invokevirtual #21                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      82: putfield      #22                 // Field read:Ljava/util/concurrent/locks/Lock;
      85: aload_0
      86: aload_0
      87: getfield      #20                 // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      90: invokevirtual #23                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      93: putfield      #24                 // Field write:Ljava/util/concurrent/locks/Lock;
      96: aload_0
      97: new           #25                 // class org/springframework/data/mapping/context/PersistentPropertyPathFactory
     100: dup
     101: aload_0
     102: invokespecial #26                 // Method org/springframework/data/mapping/context/PersistentPropertyPathFactory."<init>":(Lorg/springframework/data/mapping/context/MappingContext;)V
     105: putfield      #27                 // Field persistentPropertyPathFactory:Lorg/springframework/data/mapping/context/PersistentPropertyPathFactory;
     108: return

  public void setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field applicationEventPublisher:Lorg/springframework/context/ApplicationEventPublisher;
       5: return

  public void setApplicationContext(org.springframework.context.ApplicationContext) throws org.springframework.beans.BeansException;
    Code:
       0: aload_0
       1: new           #29                 // class org/springframework/data/spel/ExtensionAwareEvaluationContextProvider
       4: dup
       5: aload_1
       6: invokespecial #30                 // Method org/springframework/data/spel/ExtensionAwareEvaluationContextProvider."<init>":(Lorg/springframework/beans/factory/ListableBeanFactory;)V
       9: putfield      #12                 // Field evaluationContextProvider:Lorg/springframework/data/spel/EvaluationContextProvider;
      12: aload_0
      13: getfield      #28                 // Field applicationEventPublisher:Lorg/springframework/context/ApplicationEventPublisher;
      16: ifnonnull     24
      19: aload_0
      20: aload_1
      21: putfield      #28                 // Field applicationEventPublisher:Lorg/springframework/context/ApplicationEventPublisher;
      24: return

  public void setInitialEntitySet(java.util.Set<? extends java.lang.Class<?>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field initialEntitySet:Ljava/util/Set;
       5: return

  public void setStrict(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #16                 // Field strict:Z
       5: return

  public void setSimpleTypeHolder(org.springframework.data.mapping.model.SimpleTypeHolder);
    Code:
       0: aload_1
       1: ldc           #31                 // String SimpleTypeHolder must not be null!
       3: invokestatic  #32                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #1                  // Field simpleTypeHolder:Lorg/springframework/data/mapping/model/SimpleTypeHolder;
      11: return

  public java.util.Collection<E> getPersistentEntities();
    Code:
       0: aload_0
       1: getfield      #22                 // Field read:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #33,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #7                  // Field persistentEntities:Ljava/util/Map;
      13: invokeinterface #34,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      18: invokeinterface #35,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      23: invokedynamic #36,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      28: invokeinterface #37,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      33: invokestatic  #38                 // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
      36: invokeinterface #39,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      41: checkcast     #40                 // class java/util/Collection
      44: astore_1
      45: aload_0
      46: getfield      #22                 // Field read:Ljava/util/concurrent/locks/Lock;
      49: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      54: aload_1
      55: areturn
      56: astore_2
      57: aload_0
      58: getfield      #22                 // Field read:Ljava/util/concurrent/locks/Lock;
      61: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      66: aload_2
      67: athrow
    Exception table:
       from    to  target type
           0    45    56   any

  public E getPersistentEntity(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #42                 // Method org/springframework/data/util/ClassTypeInformation.from:(Ljava/lang/Class;)Lorg/springframework/data/util/ClassTypeInformation;
       5: invokevirtual #43                 // Method getPersistentEntity:(Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/model/MutablePersistentEntity;
       8: areturn

  public boolean hasPersistentEntityFor(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #44                 // String Type must not be null!
       3: invokestatic  #32                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #7                  // Field persistentEntities:Ljava/util/Map;
      10: aload_1
      11: invokestatic  #42                 // Method org/springframework/data/util/ClassTypeInformation.from:(Ljava/lang/Class;)Lorg/springframework/data/util/ClassTypeInformation;
      14: invokeinterface #45,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #46                 // class java/util/Optional
      22: astore_2
      23: aload_2
      24: ifnonnull     31
      27: iconst_0
      28: goto          35
      31: aload_2
      32: invokevirtual #47                 // Method java/util/Optional.isPresent:()Z
      35: ireturn

  public E getPersistentEntity(org.springframework.data.util.TypeInformation<?>);
    Code:
       0: aload_1
       1: ldc           #44                 // String Type must not be null!
       3: invokestatic  #32                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #22                 // Field read:Ljava/util/concurrent/locks/Lock;
      10: invokeinterface #33,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      15: aload_0
      16: getfield      #7                  // Field persistentEntities:Ljava/util/Map;
      19: aload_1
      20: invokeinterface #45,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #46                 // class java/util/Optional
      28: astore_2
      29: aload_2
      30: ifnull        53
      33: aload_2
      34: aconst_null
      35: invokevirtual #48                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      38: checkcast     #49                 // class org/springframework/data/mapping/model/MutablePersistentEntity
      41: astore_3
      42: aload_0
      43: getfield      #22                 // Field read:Ljava/util/concurrent/locks/Lock;
      46: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      51: aload_3
      52: areturn
      53: aload_0
      54: getfield      #22                 // Field read:Ljava/util/concurrent/locks/Lock;
      57: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      62: goto          79
      65: astore        4
      67: aload_0
      68: getfield      #22                 // Field read:Ljava/util/concurrent/locks/Lock;
      71: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      76: aload         4
      78: athrow
      79: aload_0
      80: aload_1
      81: invokevirtual #50                 // Method shouldCreatePersistentEntityFor:(Lorg/springframework/data/util/TypeInformation;)Z
      84: ifne          139
      87: aload_0
      88: getfield      #24                 // Field write:Ljava/util/concurrent/locks/Lock;
      91: invokeinterface #33,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      96: aload_0
      97: getfield      #7                  // Field persistentEntities:Ljava/util/Map;
     100: aload_1
     101: aload_0
     102: getfield      #4                  // Field NONE:Ljava/util/Optional;
     105: invokeinterface #51,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     110: pop
     111: aload_0
     112: getfield      #24                 // Field write:Ljava/util/concurrent/locks/Lock;
     115: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     120: goto          137
     123: astore        5
     125: aload_0
     126: getfield      #24                 // Field write:Ljava/util/concurrent/locks/Lock;
     129: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     134: aload         5
     136: athrow
     137: aconst_null
     138: areturn
     139: aload_0
     140: getfield      #16                 // Field strict:Z
     143: ifeq          173
     146: new           #52                 // class org/springframework/data/mapping/MappingException
     149: dup
     150: new           #53                 // class java/lang/StringBuilder
     153: dup
     154: invokespecial #54                 // Method java/lang/StringBuilder."<init>":()V
     157: ldc           #55                 // String Unknown persistent entity
     159: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     162: aload_1
     163: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     166: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     169: invokespecial #59                 // Method org/springframework/data/mapping/MappingException."<init>":(Ljava/lang/String;)V
     172: athrow
     173: aload_0
     174: aload_1
     175: invokevirtual #60                 // Method addPersistentEntity:(Lorg/springframework/data/util/TypeInformation;)Ljava/util/Optional;
     178: aconst_null
     179: invokevirtual #48                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
     182: checkcast     #49                 // class org/springframework/data/mapping/model/MutablePersistentEntity
     185: areturn
    Exception table:
       from    to  target type
           6    42    65   any
          65    67    65   any
          87   111   123   any
         123   125   123   any

  public E getPersistentEntity(P);
    Code:
       0: aload_1
       1: ldc           #61                 // String PersistentProperty must not be null!
       3: invokestatic  #32                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokeinterface #62,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.isEntity:()Z
      12: ifne          17
      15: aconst_null
      16: areturn
      17: aload_1
      18: invokeinterface #63,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getTypeInformation:()Lorg/springframework/data/util/TypeInformation;
      23: astore_2
      24: aload_0
      25: aload_2
      26: invokeinterface #64,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getRequiredActualType:()Lorg/springframework/data/util/TypeInformation;
      31: invokevirtual #43                 // Method getPersistentEntity:(Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/model/MutablePersistentEntity;
      34: areturn

  public org.springframework.data.mapping.PersistentPropertyPath<P> getPersistentPropertyPath(org.springframework.data.mapping.PropertyPath);
    Code:
       0: aload_0
       1: getfield      #27                 // Field persistentPropertyPathFactory:Lorg/springframework/data/mapping/context/PersistentPropertyPathFactory;
       4: aload_1
       5: invokevirtual #65                 // Method org/springframework/data/mapping/context/PersistentPropertyPathFactory.from:(Lorg/springframework/data/mapping/PropertyPath;)Lorg/springframework/data/mapping/PersistentPropertyPath;
       8: areturn

  public org.springframework.data.mapping.PersistentPropertyPath<P> getPersistentPropertyPath(java.lang.String, java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #27                 // Field persistentPropertyPathFactory:Lorg/springframework/data/mapping/context/PersistentPropertyPathFactory;
       4: aload_2
       5: aload_1
       6: invokevirtual #66                 // Method org/springframework/data/mapping/context/PersistentPropertyPathFactory.from:(Ljava/lang/Class;Ljava/lang/String;)Lorg/springframework/data/mapping/PersistentPropertyPath;
       9: areturn

  public org.springframework.data.mapping.PersistentPropertyPath<P> getPersistentPropertyPath(org.springframework.data.mapping.context.InvalidPersistentPropertyPath);
    Code:
       0: aload_0
       1: getfield      #27                 // Field persistentPropertyPathFactory:Lorg/springframework/data/mapping/context/PersistentPropertyPathFactory;
       4: aload_1
       5: invokevirtual #67                 // Method org/springframework/data/mapping/context/InvalidPersistentPropertyPath.getType:()Lorg/springframework/data/util/TypeInformation;
       8: aload_1
       9: invokevirtual #68                 // Method org/springframework/data/mapping/context/InvalidPersistentPropertyPath.getResolvedPath:()Ljava/lang/String;
      12: invokevirtual #69                 // Method org/springframework/data/mapping/context/PersistentPropertyPathFactory.from:(Lorg/springframework/data/util/TypeInformation;Ljava/lang/String;)Lorg/springframework/data/mapping/PersistentPropertyPath;
      15: areturn

  public <T> org.springframework.data.mapping.PersistentPropertyPaths<T, P> findPersistentPropertyPaths(java.lang.Class<T>, java.util.function.Predicate<? super P>);
    Code:
       0: aload_1
       1: ldc           #44                 // String Type must not be null!
       3: invokestatic  #32                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #70                 // String Selection predicate must not be null!
       9: invokestatic  #32                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokedynamic #71,  0             // InvokeDynamic #1:test:()Ljava/util/function/Predicate;
      20: invokevirtual #72                 // Method doFindPersistentPropertyPaths:(Ljava/lang/Class;Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Lorg/springframework/data/mapping/PersistentPropertyPaths;
      23: areturn

  protected final <T> org.springframework.data.mapping.PersistentPropertyPaths<T, P> doFindPersistentPropertyPaths(java.lang.Class<T>, java.util.function.Predicate<? super P>, java.util.function.Predicate<P>);
    Code:
       0: aload_0
       1: getfield      #27                 // Field persistentPropertyPathFactory:Lorg/springframework/data/mapping/context/PersistentPropertyPathFactory;
       4: aload_1
       5: invokestatic  #42                 // Method org/springframework/data/util/ClassTypeInformation.from:(Ljava/lang/Class;)Lorg/springframework/data/util/ClassTypeInformation;
       8: aload_2
       9: aload_3
      10: invokevirtual #73                 // Method org/springframework/data/mapping/context/PersistentPropertyPathFactory.from:(Lorg/springframework/data/util/TypeInformation;Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Lorg/springframework/data/mapping/PersistentPropertyPaths;
      13: areturn

  protected java.util.Optional<E> addPersistentEntity(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #42                 // Method org/springframework/data/util/ClassTypeInformation.from:(Ljava/lang/Class;)Lorg/springframework/data/util/ClassTypeInformation;
       5: invokevirtual #60                 // Method addPersistentEntity:(Lorg/springframework/data/util/TypeInformation;)Ljava/util/Optional;
       8: areturn

  protected java.util.Optional<E> addPersistentEntity(org.springframework.data.util.TypeInformation<?>);
    Code:
       0: aload_1
       1: ldc           #74                 // String TypeInformation must not be null!
       3: invokestatic  #32                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #22                 // Field read:Ljava/util/concurrent/locks/Lock;
      10: invokeinterface #33,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      15: aload_0
      16: getfield      #7                  // Field persistentEntities:Ljava/util/Map;
      19: aload_1
      20: invokeinterface #45,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #46                 // class java/util/Optional
      28: astore_2
      29: aload_2
      30: ifnull        46
      33: aload_2
      34: astore_3
      35: aload_0
      36: getfield      #22                 // Field read:Ljava/util/concurrent/locks/Lock;
      39: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      44: aload_3
      45: areturn
      46: aload_0
      47: getfield      #22                 // Field read:Ljava/util/concurrent/locks/Lock;
      50: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      55: goto          72
      58: astore        4
      60: aload_0
      61: getfield      #22                 // Field read:Ljava/util/concurrent/locks/Lock;
      64: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      69: aload         4
      71: athrow
      72: aload_1
      73: invokeinterface #75,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getType:()Ljava/lang/Class;
      78: astore_2
      79: aconst_null
      80: astore_3
      81: aload_0
      82: getfield      #24                 // Field write:Ljava/util/concurrent/locks/Lock;
      85: invokeinterface #33,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      90: aload_0
      91: aload_1
      92: invokevirtual #76                 // Method createPersistentEntity:(Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/model/MutablePersistentEntity;
      95: astore_3
      96: aload_3
      97: aload_0
      98: getfield      #12                 // Field evaluationContextProvider:Lorg/springframework/data/spel/EvaluationContextProvider;
     101: invokeinterface #77,  2           // InterfaceMethod org/springframework/data/mapping/model/MutablePersistentEntity.setEvaluationContextProvider:(Lorg/springframework/data/spel/EvaluationContextProvider;)V
     106: aload_0
     107: getfield      #7                  // Field persistentEntities:Ljava/util/Map;
     110: aload_1
     111: aload_3
     112: invokestatic  #78                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
     115: invokeinterface #51,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     120: pop
     121: aload_2
     122: invokestatic  #79                 // Method org/springframework/beans/BeanUtils.getPropertyDescriptors:(Ljava/lang/Class;)[Ljava/beans/PropertyDescriptor;
     125: astore        4
     127: new           #5                  // class java/util/HashMap
     130: dup
     131: invokespecial #6                  // Method java/util/HashMap."<init>":()V
     134: astore        5
     136: aload         4
     138: astore        6
     140: aload         6
     142: arraylength
     143: istore        7
     145: iconst_0
     146: istore        8
     148: iload         8
     150: iload         7
     152: if_icmpge     183
     155: aload         6
     157: iload         8
     159: aaload
     160: astore        9
     162: aload         5
     164: aload         9
     166: invokevirtual #80                 // Method java/beans/PropertyDescriptor.getName:()Ljava/lang/String;
     169: aload         9
     171: invokeinterface #51,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     176: pop
     177: iinc          8, 1
     180: goto          148
     183: new           #81                 // class org/springframework/data/mapping/context/AbstractMappingContext$PersistentPropertyCreator
     186: dup
     187: aload_0
     188: aload_3
     189: aload         5
     191: invokespecial #82                 // Method org/springframework/data/mapping/context/AbstractMappingContext$PersistentPropertyCreator."<init>":(Lorg/springframework/data/mapping/context/AbstractMappingContext;Lorg/springframework/data/mapping/model/MutablePersistentEntity;Ljava/util/Map;)V
     194: astore        6
     196: aload_2
     197: aload         6
     199: getstatic     #83                 // Field org/springframework/data/mapping/context/AbstractMappingContext$PersistentPropertyFilter.INSTANCE:Lorg/springframework/data/mapping/context/AbstractMappingContext$PersistentPropertyFilter;
     202: invokestatic  #84                 // Method org/springframework/util/ReflectionUtils.doWithFields:(Ljava/lang/Class;Lorg/springframework/util/ReflectionUtils$FieldCallback;Lorg/springframework/util/ReflectionUtils$FieldFilter;)V
     205: aload         6
     207: invokevirtual #85                 // Method org/springframework/data/mapping/context/AbstractMappingContext$PersistentPropertyCreator.addPropertiesForRemainingDescriptors:()V
     210: aload_3
     211: invokeinterface #86,  1           // InterfaceMethod org/springframework/data/mapping/model/MutablePersistentEntity.verify:()V
     216: aload_0
     217: getfield      #10                 // Field persistentPropertyAccessorFactory:Lorg/springframework/data/mapping/model/PersistentPropertyAccessorFactory;
     220: aload_3
     221: invokeinterface #87,  2           // InterfaceMethod org/springframework/data/mapping/model/PersistentPropertyAccessorFactory.isSupported:(Lorg/springframework/data/mapping/PersistentEntity;)Z
     226: ifeq          239
     229: aload_3
     230: aload_0
     231: getfield      #10                 // Field persistentPropertyAccessorFactory:Lorg/springframework/data/mapping/model/PersistentPropertyAccessorFactory;
     234: invokeinterface #88,  2           // InterfaceMethod org/springframework/data/mapping/model/MutablePersistentEntity.setPersistentPropertyAccessorFactory:(Lorg/springframework/data/mapping/model/PersistentPropertyAccessorFactory;)V
     239: goto          258
     242: astore        6
     244: aload_0
     245: getfield      #7                  // Field persistentEntities:Ljava/util/Map;
     248: aload_1
     249: invokeinterface #90,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     254: pop
     255: aload         6
     257: athrow
     258: aload_0
     259: getfield      #24                 // Field write:Ljava/util/concurrent/locks/Lock;
     262: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     267: goto          301
     270: astore        4
     272: new           #52                 // class org/springframework/data/mapping/MappingException
     275: dup
     276: aload         4
     278: invokevirtual #92                 // Method org/springframework/beans/BeansException.getMessage:()Ljava/lang/String;
     281: aload         4
     283: invokespecial #93                 // Method org/springframework/data/mapping/MappingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     286: athrow
     287: astore        10
     289: aload_0
     290: getfield      #24                 // Field write:Ljava/util/concurrent/locks/Lock;
     293: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     298: aload         10
     300: athrow
     301: aload_0
     302: getfield      #28                 // Field applicationEventPublisher:Lorg/springframework/context/ApplicationEventPublisher;
     305: ifnull        330
     308: aload_3
     309: ifnull        330
     312: aload_0
     313: getfield      #28                 // Field applicationEventPublisher:Lorg/springframework/context/ApplicationEventPublisher;
     316: new           #94                 // class org/springframework/data/mapping/context/MappingContextEvent
     319: dup
     320: aload_0
     321: aload_3
     322: invokespecial #95                 // Method org/springframework/data/mapping/context/MappingContextEvent."<init>":(Lorg/springframework/data/mapping/context/MappingContext;Lorg/springframework/data/mapping/PersistentEntity;)V
     325: invokeinterface #96,  2           // InterfaceMethod org/springframework/context/ApplicationEventPublisher.publishEvent:(Lorg/springframework/context/ApplicationEvent;)V
     330: aload_3
     331: invokestatic  #78                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
     334: areturn
    Exception table:
       from    to  target type
           6    35    58   any
          58    60    58   any
         183   239   242   Class java/lang/RuntimeException
          81   258   270   Class org/springframework/beans/BeansException
          81   258   287   any
         270   289   287   any

  public java.util.Collection<org.springframework.data.util.TypeInformation<?>> getManagedTypes();
    Code:
       0: aload_0
       1: getfield      #22                 // Field read:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #33,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: new           #13                 // class java/util/HashSet
      12: dup
      13: aload_0
      14: getfield      #7                  // Field persistentEntities:Ljava/util/Map;
      17: invokeinterface #97,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      22: invokespecial #98                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      25: invokestatic  #99                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      28: astore_1
      29: aload_0
      30: getfield      #22                 // Field read:Ljava/util/concurrent/locks/Lock;
      33: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      38: aload_1
      39: areturn
      40: astore_2
      41: aload_0
      42: getfield      #22                 // Field read:Ljava/util/concurrent/locks/Lock;
      45: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      50: aload_2
      51: athrow
    Exception table:
       from    to  target type
           0    29    40   any

  protected abstract <T> E createPersistentEntity(org.springframework.data.util.TypeInformation<T>);

  protected abstract P createPersistentProperty(org.springframework.data.mapping.model.Property, E, org.springframework.data.mapping.model.SimpleTypeHolder);

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: invokevirtual #100                // Method initialize:()V
       4: return

  public void initialize();
    Code:
       0: aload_0
       1: getfield      #15                 // Field initialEntitySet:Ljava/util/Set;
       4: aload_0
       5: invokedynamic #101,  0            // InvokeDynamic #2:accept:(Lorg/springframework/data/mapping/context/AbstractMappingContext;)Ljava/util/function/Consumer;
      10: invokeinterface #102,  2          // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V
      15: return

  protected boolean shouldCreatePersistentEntityFor(org.springframework.data.util.TypeInformation<?>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field simpleTypeHolder:Lorg/springframework/data/mapping/model/SimpleTypeHolder;
       4: aload_1
       5: invokeinterface #75,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getType:()Ljava/lang/Class;
      10: invokevirtual #103                // Method org/springframework/data/mapping/model/SimpleTypeHolder.isSimpleType:(Ljava/lang/Class;)Z
      13: ifeq          18
      16: iconst_0
      17: ireturn
      18: aload_1
      19: invokeinterface #75,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getType:()Ljava/lang/Class;
      24: invokestatic  #104                // Method org/springframework/data/util/ReflectionUtils.isKotlinClass:(Ljava/lang/Class;)Z
      27: ifeq          42
      30: aload_1
      31: invokeinterface #75,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getType:()Ljava/lang/Class;
      36: invokestatic  #105                // Method org/springframework/data/util/ReflectionUtils.isSupportedKotlinClass:(Ljava/lang/Class;)Z
      39: ifeq          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ireturn

  public org.springframework.data.mapping.PersistentEntity getPersistentEntity(org.springframework.data.mapping.PersistentProperty);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #106                // Method getPersistentEntity:(Lorg/springframework/data/mapping/PersistentProperty;)Lorg/springframework/data/mapping/model/MutablePersistentEntity;
       5: areturn

  public org.springframework.data.mapping.PersistentEntity getPersistentEntity(org.springframework.data.util.TypeInformation);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #43                 // Method getPersistentEntity:(Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/model/MutablePersistentEntity;
       5: areturn

  public org.springframework.data.mapping.PersistentEntity getPersistentEntity(java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #107                // Method getPersistentEntity:(Ljava/lang/Class;)Lorg/springframework/data/mapping/model/MutablePersistentEntity;
       5: areturn

  private static boolean lambda$findPersistentPropertyPaths$1(org.springframework.data.mapping.PersistentProperty);
    Code:
       0: aload_0
       1: invokeinterface #108,  1          // InterfaceMethod org/springframework/data/mapping/PersistentProperty.isAssociation:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  private static java.util.stream.Stream lambda$getPersistentEntities$0(java.util.Optional);
    Code:
       0: iconst_1
       1: anewarray     #46                 // class java/util/Optional
       4: dup
       5: iconst_0
       6: aload_0
       7: aastore
       8: invokestatic  #109                // InterfaceMethod org/springframework/data/util/Optionals.toStream:([Ljava/util/Optional;)Ljava/util/stream/Stream;
      11: areturn

  static org.springframework.data.mapping.model.SimpleTypeHolder access$000(org.springframework.data.mapping.context.AbstractMappingContext);
    Code:
       0: aload_0
       1: getfield      #1                  // Field simpleTypeHolder:Lorg/springframework/data/mapping/model/SimpleTypeHolder;
       4: areturn
}
