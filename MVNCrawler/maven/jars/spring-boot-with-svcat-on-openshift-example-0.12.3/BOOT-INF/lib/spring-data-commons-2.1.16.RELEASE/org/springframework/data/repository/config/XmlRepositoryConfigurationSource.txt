Compiled from "XmlRepositoryConfigurationSource.java"
public class org.springframework.data.repository.config.XmlRepositoryConfigurationSource extends org.springframework.data.repository.config.RepositoryConfigurationSourceSupport {
  private static final java.lang.String QUERY_LOOKUP_STRATEGY;

  private static final java.lang.String BASE_PACKAGE;

  private static final java.lang.String NAMED_QUERIES_LOCATION;

  private static final java.lang.String REPOSITORY_IMPL_POSTFIX;

  private static final java.lang.String REPOSITORY_FACTORY_BEAN_CLASS_NAME;

  private static final java.lang.String REPOSITORY_BASE_CLASS_NAME;

  private static final java.lang.String CONSIDER_NESTED_REPOSITORIES;

  private static final java.lang.String BOOTSTRAP_MODE;

  private final org.w3c.dom.Element element;

  private final org.springframework.beans.factory.xml.ParserContext context;

  private final java.util.Collection<org.springframework.core.type.filter.TypeFilter> includeFilters;

  private final java.util.Collection<org.springframework.core.type.filter.TypeFilter> excludeFilters;

  public org.springframework.data.repository.config.XmlRepositoryConfigurationSource(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, org.springframework.core.env.Environment);
    Code:
       0: aload_0
       1: aload_3
       2: aload_2
       3: invokevirtual #1                  // Method org/springframework/beans/factory/xml/ParserContext.getReaderContext:()Lorg/springframework/beans/factory/xml/XmlReaderContext;
       6: invokestatic  #2                  // InterfaceMethod org/springframework/data/config/ConfigurationUtils.getRequiredClassLoader:(Lorg/springframework/beans/factory/xml/XmlReaderContext;)Ljava/lang/ClassLoader;
       9: aload_2
      10: invokevirtual #3                  // Method org/springframework/beans/factory/xml/ParserContext.getRegistry:()Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;
      13: invokespecial #4                  // Method org/springframework/data/repository/config/RepositoryConfigurationSourceSupport."<init>":(Lorg/springframework/core/env/Environment;Ljava/lang/ClassLoader;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V
      16: aload_1
      17: ldc           #5                  // String Element must not be null!
      19: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      22: aload_0
      23: aload_1
      24: putfield      #7                  // Field element:Lorg/w3c/dom/Element;
      27: aload_0
      28: aload_2
      29: putfield      #8                  // Field context:Lorg/springframework/beans/factory/xml/ParserContext;
      32: new           #9                  // class org/springframework/data/config/TypeFilterParser
      35: dup
      36: aload_2
      37: invokevirtual #1                  // Method org/springframework/beans/factory/xml/ParserContext.getReaderContext:()Lorg/springframework/beans/factory/xml/XmlReaderContext;
      40: invokespecial #10                 // Method org/springframework/data/config/TypeFilterParser."<init>":(Lorg/springframework/beans/factory/xml/XmlReaderContext;)V
      43: astore        4
      45: aload_0
      46: aload         4
      48: aload_1
      49: getstatic     #11                 // Field org/springframework/data/config/TypeFilterParser$Type.INCLUDE:Lorg/springframework/data/config/TypeFilterParser$Type;
      52: invokevirtual #12                 // Method org/springframework/data/config/TypeFilterParser.parseTypeFilters:(Lorg/w3c/dom/Element;Lorg/springframework/data/config/TypeFilterParser$Type;)Ljava/util/Collection;
      55: putfield      #13                 // Field includeFilters:Ljava/util/Collection;
      58: aload_0
      59: aload         4
      61: aload_1
      62: getstatic     #14                 // Field org/springframework/data/config/TypeFilterParser$Type.EXCLUDE:Lorg/springframework/data/config/TypeFilterParser$Type;
      65: invokevirtual #12                 // Method org/springframework/data/config/TypeFilterParser.parseTypeFilters:(Lorg/w3c/dom/Element;Lorg/springframework/data/config/TypeFilterParser$Type;)Ljava/util/Collection;
      68: putfield      #15                 // Field excludeFilters:Ljava/util/Collection;
      71: return

  public java.lang.Object getSource();
    Code:
       0: aload_0
       1: getfield      #8                  // Field context:Lorg/springframework/beans/factory/xml/ParserContext;
       4: aload_0
       5: getfield      #7                  // Field element:Lorg/w3c/dom/Element;
       8: invokevirtual #16                 // Method org/springframework/beans/factory/xml/ParserContext.extractSource:(Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public org.springframework.data.util.Streamable<java.lang.String> getBasePackages();
    Code:
       0: aload_0
       1: getfield      #7                  // Field element:Lorg/w3c/dom/Element;
       4: ldc           #18                 // String base-package
       6: invokeinterface #19,  2           // InterfaceMethod org/w3c/dom/Element.getAttribute:(Ljava/lang/String;)Ljava/lang/String;
      11: astore_1
      12: aload_1
      13: ldc           #20                 // String ,
      15: ldc           #21                 // String
      17: invokestatic  #22                 // Method org/springframework/util/StringUtils.delimitedListToStringArray:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
      20: invokestatic  #23                 // InterfaceMethod org/springframework/data/util/Streamable.of:([Ljava/lang/Object;)Lorg/springframework/data/util/Streamable;
      23: areturn

  public java.util.Optional<java.lang.Object> getQueryLookupStrategyKey();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field element:Lorg/w3c/dom/Element;
       5: ldc           #24                 // String query-lookup-strategy
       7: invokespecial #25                 // Method getNullDefaultedAttribute:(Lorg/w3c/dom/Element;Ljava/lang/String;)Ljava/util/Optional;
      10: invokedynamic #26,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      15: invokevirtual #27                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      18: areturn

  public java.util.Optional<java.lang.String> getNamedQueryLocation();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field element:Lorg/w3c/dom/Element;
       5: ldc           #28                 // String named-queries-location
       7: invokespecial #25                 // Method getNullDefaultedAttribute:(Lorg/w3c/dom/Element;Ljava/lang/String;)Ljava/util/Optional;
      10: areturn

  public org.w3c.dom.Element getElement();
    Code:
       0: aload_0
       1: getfield      #7                  // Field element:Lorg/w3c/dom/Element;
       4: areturn

  public org.springframework.data.util.Streamable<org.springframework.core.type.filter.TypeFilter> getExcludeFilters();
    Code:
       0: aload_0
       1: getfield      #15                 // Field excludeFilters:Ljava/util/Collection;
       4: invokestatic  #29                 // InterfaceMethod org/springframework/data/util/Streamable.of:(Ljava/lang/Iterable;)Lorg/springframework/data/util/Streamable;
       7: areturn

  protected java.lang.Iterable<org.springframework.core.type.filter.TypeFilter> getIncludeFilters();
    Code:
       0: aload_0
       1: getfield      #13                 // Field includeFilters:Ljava/util/Collection;
       4: areturn

  public java.util.Optional<java.lang.String> getRepositoryImplementationPostfix();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field element:Lorg/w3c/dom/Element;
       5: ldc           #30                 // String repository-impl-postfix
       7: invokespecial #25                 // Method getNullDefaultedAttribute:(Lorg/w3c/dom/Element;Ljava/lang/String;)Ljava/util/Optional;
      10: areturn

  public java.util.Optional<java.lang.String> getRepositoryFactoryBeanName();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field element:Lorg/w3c/dom/Element;
       5: ldc           #31                 // String factory-class
       7: invokespecial #25                 // Method getNullDefaultedAttribute:(Lorg/w3c/dom/Element;Ljava/lang/String;)Ljava/util/Optional;
      10: areturn

  public java.util.Optional<java.lang.String> getRepositoryBaseClassName();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field element:Lorg/w3c/dom/Element;
       5: ldc           #32                 // String base-class
       7: invokespecial #25                 // Method getNullDefaultedAttribute:(Lorg/w3c/dom/Element;Ljava/lang/String;)Ljava/util/Optional;
      10: areturn

  public java.util.Optional<java.lang.String> getRepositoryFactoryBeanClassName();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field element:Lorg/w3c/dom/Element;
       5: ldc           #31                 // String factory-class
       7: invokespecial #25                 // Method getNullDefaultedAttribute:(Lorg/w3c/dom/Element;Ljava/lang/String;)Ljava/util/Optional;
      10: areturn

  private java.util.Optional<java.lang.String> getNullDefaultedAttribute(org.w3c.dom.Element, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #19,  2           // InterfaceMethod org/w3c/dom/Element.getAttribute:(Ljava/lang/String;)Ljava/lang/String;
       7: astore_3
       8: aload_3
       9: invokestatic  #33                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      12: ifeq          22
      15: aload_3
      16: invokestatic  #34                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      19: goto          25
      22: invokestatic  #35                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      25: areturn

  public boolean shouldConsiderNestedRepositories();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field element:Lorg/w3c/dom/Element;
       5: ldc           #36                 // String consider-nested-repositories
       7: invokespecial #25                 // Method getNullDefaultedAttribute:(Lorg/w3c/dom/Element;Ljava/lang/String;)Ljava/util/Optional;
      10: invokedynamic #37,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      15: invokevirtual #27                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      18: iconst_0
      19: invokestatic  #38                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      22: invokevirtual #39                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #40                 // class java/lang/Boolean
      28: invokevirtual #41                 // Method java/lang/Boolean.booleanValue:()Z
      31: ireturn

  public java.util.Optional<java.lang.String> getAttribute(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #42                 // String -
       3: invokestatic  #43                 // Method org/springframework/data/util/ParsingUtils.reconcatenateCamelCase:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       6: astore_2
       7: aload_0
       8: getfield      #7                  // Field element:Lorg/w3c/dom/Element;
      11: aload_2
      12: invokeinterface #19,  2           // InterfaceMethod org/w3c/dom/Element.getAttribute:(Ljava/lang/String;)Ljava/lang/String;
      17: astore_3
      18: aload_3
      19: invokestatic  #33                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      22: ifeq          32
      25: aload_3
      26: invokestatic  #34                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      29: goto          35
      32: invokestatic  #35                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      35: areturn

  public boolean usesExplicitFilters();
    Code:
       0: aload_0
       1: getfield      #13                 // Field includeFilters:Ljava/util/Collection;
       4: invokeinterface #44,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
       9: ifeq          24
      12: aload_0
      13: getfield      #15                 // Field excludeFilters:Ljava/util/Collection;
      16: invokeinterface #44,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      21: ifne          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public org.springframework.data.repository.config.BootstrapMode getBootstrapMode();
    Code:
       0: aload_0
       1: getfield      #7                  // Field element:Lorg/w3c/dom/Element;
       4: ldc           #45                 // String bootstrap-mode
       6: invokeinterface #19,  2           // InterfaceMethod org/w3c/dom/Element.getAttribute:(Ljava/lang/String;)Ljava/lang/String;
      11: astore_1
      12: aload_1
      13: invokestatic  #33                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      16: ifeq          32
      19: aload_1
      20: getstatic     #46                 // Field java/util/Locale.US:Ljava/util/Locale;
      23: invokevirtual #47                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
      26: invokestatic  #48                 // Method org/springframework/data/repository/config/BootstrapMode.valueOf:(Ljava/lang/String;)Lorg/springframework/data/repository/config/BootstrapMode;
      29: goto          35
      32: getstatic     #49                 // Field org/springframework/data/repository/config/BootstrapMode.DEFAULT:Lorg/springframework/data/repository/config/BootstrapMode;
      35: areturn
}
