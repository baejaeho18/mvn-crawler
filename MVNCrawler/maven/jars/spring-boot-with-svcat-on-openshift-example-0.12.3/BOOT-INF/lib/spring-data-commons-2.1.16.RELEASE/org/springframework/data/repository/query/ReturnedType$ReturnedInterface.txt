Compiled from "ReturnedType.java"
final class org.springframework.data.repository.query.ReturnedType$ReturnedInterface extends org.springframework.data.repository.query.ReturnedType {
  private final org.springframework.data.projection.ProjectionInformation information;

  private final java.lang.Class<?> domainType;

  public org.springframework.data.repository.query.ReturnedType$ReturnedInterface(org.springframework.data.projection.ProjectionInformation, java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_2
       2: aconst_null
       3: invokespecial #1                  // Method org/springframework/data/repository/query/ReturnedType."<init>":(Ljava/lang/Class;Lorg/springframework/data/repository/query/ReturnedType$1;)V
       6: aload_1
       7: ldc           #2                  // String Projection information must not be null!
       9: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: aload_1
      14: putfield      #4                  // Field information:Lorg/springframework/data/projection/ProjectionInformation;
      17: aload_0
      18: aload_2
      19: putfield      #5                  // Field domainType:Ljava/lang/Class;
      22: return

  public java.lang.Class<?> getReturnedType();
    Code:
       0: aload_0
       1: getfield      #4                  // Field information:Lorg/springframework/data/projection/ProjectionInformation;
       4: invokeinterface #6,  1            // InterfaceMethod org/springframework/data/projection/ProjectionInformation.getType:()Ljava/lang/Class;
       9: areturn

  public boolean needsCustomConstruction();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method isProjecting:()Z
       4: ifeq          23
       7: aload_0
       8: getfield      #4                  // Field information:Lorg/springframework/data/projection/ProjectionInformation;
      11: invokeinterface #8,  1            // InterfaceMethod org/springframework/data/projection/ProjectionInformation.isClosed:()Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public boolean isProjecting();
    Code:
       0: aload_0
       1: getfield      #4                  // Field information:Lorg/springframework/data/projection/ProjectionInformation;
       4: invokeinterface #6,  1            // InterfaceMethod org/springframework/data/projection/ProjectionInformation.getType:()Ljava/lang/Class;
       9: aload_0
      10: getfield      #5                  // Field domainType:Ljava/lang/Class;
      13: invokevirtual #9                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public java.lang.Class<?> getTypeToRead();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method isProjecting:()Z
       4: ifeq          23
       7: aload_0
       8: getfield      #4                  // Field information:Lorg/springframework/data/projection/ProjectionInformation;
      11: invokeinterface #8,  1            // InterfaceMethod org/springframework/data/projection/ProjectionInformation.isClosed:()Z
      16: ifeq          23
      19: aconst_null
      20: goto          27
      23: aload_0
      24: getfield      #5                  // Field domainType:Ljava/lang/Class;
      27: areturn

  public java.util.List<java.lang.String> getInputProperties();
    Code:
       0: new           #10                 // class java/util/ArrayList
       3: dup
       4: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #4                  // Field information:Lorg/springframework/data/projection/ProjectionInformation;
      12: invokeinterface #12,  1           // InterfaceMethod org/springframework/data/projection/ProjectionInformation.getInputProperties:()Ljava/util/List;
      17: invokeinterface #13,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          69
      32: aload_2
      33: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #16                 // class java/beans/PropertyDescriptor
      41: astore_3
      42: aload_1
      43: aload_3
      44: invokevirtual #17                 // Method java/beans/PropertyDescriptor.getName:()Ljava/lang/String;
      47: invokeinterface #18,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      52: ifne          66
      55: aload_1
      56: aload_3
      57: invokevirtual #17                 // Method java/beans/PropertyDescriptor.getName:()Ljava/lang/String;
      60: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      65: pop
      66: goto          23
      69: aload_1
      70: areturn
}
