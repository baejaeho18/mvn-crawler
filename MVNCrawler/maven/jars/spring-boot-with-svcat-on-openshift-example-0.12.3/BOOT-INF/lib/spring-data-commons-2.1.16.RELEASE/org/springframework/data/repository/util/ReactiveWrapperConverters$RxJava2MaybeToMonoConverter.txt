Compiled from "ReactiveWrapperConverters.java"
final class org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava2MaybeToMonoConverter extends java.lang.Enum<org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava2MaybeToMonoConverter> implements org.springframework.core.convert.converter.Converter<io.reactivex.Maybe<?>, reactor.core.publisher.Mono<?>> {
  public static final org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava2MaybeToMonoConverter INSTANCE;

  private static final org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava2MaybeToMonoConverter[] $VALUES;

  public static org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava2MaybeToMonoConverter[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lorg/springframework/data/repository/util/ReactiveWrapperConverters$RxJava2MaybeToMonoConverter;
       3: invokevirtual #2                  // Method "[Lorg/springframework/data/repository/util/ReactiveWrapperConverters$RxJava2MaybeToMonoConverter;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lorg/springframework/data/repository/util/ReactiveWrapperConverters$RxJava2MaybeToMonoConverter;"
       9: areturn

  public static org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava2MaybeToMonoConverter valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class org/springframework/data/repository/util/ReactiveWrapperConverters$RxJava2MaybeToMonoConverter
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class org/springframework/data/repository/util/ReactiveWrapperConverters$RxJava2MaybeToMonoConverter
       9: areturn

  private org.springframework.data.repository.util.ReactiveWrapperConverters$RxJava2MaybeToMonoConverter();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  public reactor.core.publisher.Mono<?> convert(io.reactivex.Maybe<?>);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method io/reactivex/Maybe.toFlowable:()Lio/reactivex/Flowable;
       4: invokestatic  #8                  // Method reactor/core/publisher/Mono.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
       7: areturn

  public java.lang.Object convert(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #9                  // class io/reactivex/Maybe
       5: invokevirtual #10                 // Method convert:(Lio/reactivex/Maybe;)Lreactor/core/publisher/Mono;
       8: areturn

  static {};
    Code:
       0: new           #4                  // class org/springframework/data/repository/util/ReactiveWrapperConverters$RxJava2MaybeToMonoConverter
       3: dup
       4: ldc           #11                 // String INSTANCE
       6: iconst_0
       7: invokespecial #12                 // Method "<init>":(Ljava/lang/String;I)V
      10: putstatic     #13                 // Field INSTANCE:Lorg/springframework/data/repository/util/ReactiveWrapperConverters$RxJava2MaybeToMonoConverter;
      13: iconst_1
      14: anewarray     #4                  // class org/springframework/data/repository/util/ReactiveWrapperConverters$RxJava2MaybeToMonoConverter
      17: dup
      18: iconst_0
      19: getstatic     #13                 // Field INSTANCE:Lorg/springframework/data/repository/util/ReactiveWrapperConverters$RxJava2MaybeToMonoConverter;
      22: aastore
      23: putstatic     #1                  // Field $VALUES:[Lorg/springframework/data/repository/util/ReactiveWrapperConverters$RxJava2MaybeToMonoConverter;
      26: return
}
