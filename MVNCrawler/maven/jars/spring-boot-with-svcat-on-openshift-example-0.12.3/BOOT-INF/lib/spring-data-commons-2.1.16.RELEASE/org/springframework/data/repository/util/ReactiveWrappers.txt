Compiled from "ReactiveWrappers.java"
public final class org.springframework.data.repository.util.ReactiveWrappers {
  private static final boolean PROJECT_REACTOR_PRESENT;

  private static final boolean RXJAVA1_PRESENT;

  private static final boolean RXJAVA2_PRESENT;

  private static final java.util.Collection<org.springframework.core.ReactiveTypeDescriptor> REACTIVE_WRAPPERS;

  public static boolean isAvailable();
    Code:
       0: invokestatic  #1                  // Method org/springframework/data/repository/util/ReactiveWrappers$ReactiveLibrary.values:()[Lorg/springframework/data/repository/util/ReactiveWrappers$ReactiveLibrary;
       3: invokestatic  #2                  // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
       6: invokedynamic #3,  0              // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      11: invokeinterface #4,  2            // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      16: ireturn

  public static boolean isAvailable(org.springframework.data.repository.util.ReactiveWrappers$ReactiveLibrary);
    Code:
       0: aload_0
       1: ldc           #5                  // String Reactive library must not be null!
       3: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: getstatic     #7                  // Field org/springframework/data/repository/util/ReactiveWrappers$1.$SwitchMap$org$springframework$data$repository$util$ReactiveWrappers$ReactiveLibrary:[I
       9: aload_0
      10: invokevirtual #8                  // Method org/springframework/data/repository/util/ReactiveWrappers$ReactiveLibrary.ordinal:()I
      13: iaload
      14: tableswitch   { // 1 to 3
                     1: 40
                     2: 44
                     3: 48
               default: 52
          }
      40: getstatic     #9                  // Field PROJECT_REACTOR_PRESENT:Z
      43: ireturn
      44: getstatic     #10                 // Field RXJAVA1_PRESENT:Z
      47: ireturn
      48: getstatic     #11                 // Field RXJAVA2_PRESENT:Z
      51: ireturn
      52: new           #12                 // class java/lang/IllegalArgumentException
      55: dup
      56: ldc           #13                 // String Reactive library %s not supported
      58: iconst_1
      59: anewarray     #14                 // class java/lang/Object
      62: dup
      63: iconst_0
      64: aload_0
      65: aastore
      66: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      69: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      72: athrow

  public static boolean supports(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokestatic  #17                 // Method org/springframework/data/util/ProxyUtils.getUserClass:(Ljava/lang/Class;)Ljava/lang/Class;
       4: invokestatic  #18                 // Method isWrapper:(Ljava/lang/Class;)Z
       7: ireturn

  public static boolean usesReactiveType(java.lang.Class<?>);
    Code:
       0: aload_0
       1: ldc           #19                 // String Type must not be null!
       3: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokevirtual #20                 // Method java/lang/Class.getMethods:()[Ljava/lang/reflect/Method;
      10: invokestatic  #2                  // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      13: invokedynamic #21,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      18: invokeinterface #22,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      23: invokedynamic #23,  0             // InvokeDynamic #2:test:()Ljava/util/function/Predicate;
      28: invokeinterface #4,  2            // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      33: ireturn

  public static boolean isNoValueType(java.lang.Class<?>);
    Code:
       0: aload_0
       1: ldc           #24                 // String Candidate type must not be null!
       3: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokestatic  #25                 // Method findDescriptor:(Ljava/lang/Class;)Ljava/util/Optional;
      10: invokedynamic #26,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      15: invokevirtual #27                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      18: iconst_0
      19: invokestatic  #28                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      22: invokevirtual #29                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #30                 // class java/lang/Boolean
      28: invokevirtual #31                 // Method java/lang/Boolean.booleanValue:()Z
      31: ireturn

  public static boolean isSingleValueType(java.lang.Class<?>);
    Code:
       0: aload_0
       1: ldc           #24                 // String Candidate type must not be null!
       3: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokestatic  #25                 // Method findDescriptor:(Ljava/lang/Class;)Ljava/util/Optional;
      10: invokedynamic #32,  0             // InvokeDynamic #4:apply:()Ljava/util/function/Function;
      15: invokevirtual #27                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      18: iconst_0
      19: invokestatic  #28                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      22: invokevirtual #29                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #30                 // class java/lang/Boolean
      28: invokevirtual #31                 // Method java/lang/Boolean.booleanValue:()Z
      31: ireturn

  public static boolean isMultiValueType(java.lang.Class<?>);
    Code:
       0: aload_0
       1: ldc           #24                 // String Candidate type must not be null!
       3: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokestatic  #33                 // Method isSingleValueType:(Ljava/lang/Class;)Z
      10: ifeq          17
      13: iconst_0
      14: goto          42
      17: aload_0
      18: invokestatic  #25                 // Method findDescriptor:(Ljava/lang/Class;)Ljava/util/Optional;
      21: invokedynamic #34,  0             // InvokeDynamic #5:apply:()Ljava/util/function/Function;
      26: invokevirtual #27                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      29: iconst_0
      30: invokestatic  #28                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      33: invokevirtual #29                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #30                 // class java/lang/Boolean
      39: invokevirtual #31                 // Method java/lang/Boolean.booleanValue:()Z
      42: ireturn

  public static java.util.Collection<java.lang.Class<?>> getNoValueTypes();
    Code:
       0: getstatic     #35                 // Field REACTIVE_WRAPPERS:Ljava/util/Collection;
       3: invokeinterface #36,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
       8: invokedynamic #37,  0             // InvokeDynamic #6:test:()Ljava/util/function/Predicate;
      13: invokeinterface #38,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      18: invokedynamic #39,  0             // InvokeDynamic #7:apply:()Ljava/util/function/Function;
      23: invokeinterface #40,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      28: invokestatic  #41                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      31: invokeinterface #42,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      36: checkcast     #43                 // class java/util/Collection
      39: areturn

  public static java.util.Collection<java.lang.Class<?>> getSingleValueTypes();
    Code:
       0: getstatic     #35                 // Field REACTIVE_WRAPPERS:Ljava/util/Collection;
       3: invokeinterface #36,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
       8: invokedynamic #44,  0             // InvokeDynamic #8:test:()Ljava/util/function/Predicate;
      13: invokeinterface #38,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      18: invokedynamic #39,  0             // InvokeDynamic #7:apply:()Ljava/util/function/Function;
      23: invokeinterface #40,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      28: invokestatic  #41                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      31: invokeinterface #42,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      36: checkcast     #43                 // class java/util/Collection
      39: areturn

  public static java.util.Collection<java.lang.Class<?>> getMultiValueTypes();
    Code:
       0: getstatic     #35                 // Field REACTIVE_WRAPPERS:Ljava/util/Collection;
       3: invokeinterface #36,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
       8: invokedynamic #45,  0             // InvokeDynamic #9:test:()Ljava/util/function/Predicate;
      13: invokeinterface #38,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      18: invokedynamic #39,  0             // InvokeDynamic #7:apply:()Ljava/util/function/Function;
      23: invokeinterface #40,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      28: invokestatic  #41                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      31: invokeinterface #42,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      36: checkcast     #43                 // class java/util/Collection
      39: areturn

  private static boolean isWrapper(java.lang.Class<?>);
    Code:
       0: aload_0
       1: ldc           #24                 // String Candidate type must not be null!
       3: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokestatic  #46                 // Method isNoValueType:(Ljava/lang/Class;)Z
      10: ifne          27
      13: aload_0
      14: invokestatic  #33                 // Method isSingleValueType:(Ljava/lang/Class;)Z
      17: ifne          27
      20: aload_0
      21: invokestatic  #47                 // Method isMultiValueType:(Ljava/lang/Class;)Z
      24: ifeq          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  private static java.util.Optional<org.springframework.core.ReactiveTypeDescriptor> findDescriptor(java.lang.Class<?>);
    Code:
       0: aload_0
       1: ldc           #48                 // String Wrapper type must not be null!
       3: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: getstatic     #35                 // Field REACTIVE_WRAPPERS:Ljava/util/Collection;
       9: invokeinterface #36,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      14: aload_0
      15: invokedynamic #49,  0             // InvokeDynamic #10:test:(Ljava/lang/Class;)Ljava/util/function/Predicate;
      20: invokeinterface #38,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      25: invokeinterface #50,  1           // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      30: areturn

  private org.springframework.data.repository.util.ReactiveWrappers();
    Code:
       0: aload_0
       1: invokespecial #51                 // Method java/lang/Object."<init>":()V
       4: new           #52                 // class java/lang/UnsupportedOperationException
       7: dup
       8: ldc           #53                 // String This is a utility class and cannot be instantiated
      10: invokespecial #54                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      13: athrow

  private static boolean lambda$findDescriptor$2(java.lang.Class, org.springframework.core.ReactiveTypeDescriptor);
    Code:
       0: aload_1
       1: invokevirtual #55                 // Method org/springframework/core/ReactiveTypeDescriptor.getReactiveType:()Ljava/lang/Class;
       4: aload_0
       5: invokestatic  #56                 // Method org/springframework/util/ClassUtils.isAssignable:(Ljava/lang/Class;Ljava/lang/Class;)Z
       8: ireturn

  private static boolean lambda$getSingleValueTypes$1(org.springframework.core.ReactiveTypeDescriptor);
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method org/springframework/core/ReactiveTypeDescriptor.isMultiValue:()Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private static java.lang.Boolean lambda$isSingleValueType$0(org.springframework.core.ReactiveTypeDescriptor);
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method org/springframework/core/ReactiveTypeDescriptor.isMultiValue:()Z
       4: ifne          18
       7: aload_0
       8: invokevirtual #58                 // Method org/springframework/core/ReactiveTypeDescriptor.isNoValue:()Z
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: invokestatic  #28                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      22: areturn

  static {};
    Code:
       0: ldc           #59                 // String reactor.core.publisher.Mono
       2: ldc           #60                 // class org/springframework/data/repository/util/ReactiveWrappers
       4: invokevirtual #61                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       7: invokestatic  #62                 // Method org/springframework/util/ClassUtils.isPresent:(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
      10: putstatic     #9                  // Field PROJECT_REACTOR_PRESENT:Z
      13: ldc           #63                 // String rx.Completable
      15: ldc           #60                 // class org/springframework/data/repository/util/ReactiveWrappers
      17: invokevirtual #61                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      20: invokestatic  #62                 // Method org/springframework/util/ClassUtils.isPresent:(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
      23: putstatic     #10                 // Field RXJAVA1_PRESENT:Z
      26: ldc           #64                 // String io.reactivex.Flowable
      28: ldc           #60                 // class org/springframework/data/repository/util/ReactiveWrappers
      30: invokevirtual #61                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      33: invokestatic  #62                 // Method org/springframework/util/ClassUtils.isPresent:(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
      36: putstatic     #11                 // Field RXJAVA2_PRESENT:Z
      39: new           #65                 // class java/util/ArrayList
      42: dup
      43: iconst_5
      44: invokespecial #66                 // Method java/util/ArrayList."<init>":(I)V
      47: astore_0
      48: getstatic     #10                 // Field RXJAVA1_PRESENT:Z
      51: ifeq          100
      54: aload_0
      55: ldc           #67                 // class rx/Single
      57: invokestatic  #68                 // Method org/springframework/core/ReactiveTypeDescriptor.singleRequiredValue:(Ljava/lang/Class;)Lorg/springframework/core/ReactiveTypeDescriptor;
      60: invokeinterface #69,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      65: pop
      66: aload_0
      67: ldc           #70                 // class rx/Completable
      69: invokedynamic #71,  0             // InvokeDynamic #11:get:()Ljava/util/function/Supplier;
      74: invokestatic  #72                 // Method org/springframework/core/ReactiveTypeDescriptor.noValue:(Ljava/lang/Class;Ljava/util/function/Supplier;)Lorg/springframework/core/ReactiveTypeDescriptor;
      77: invokeinterface #69,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      82: pop
      83: aload_0
      84: ldc           #73                 // class rx/Observable
      86: invokedynamic #74,  0             // InvokeDynamic #12:get:()Ljava/util/function/Supplier;
      91: invokestatic  #75                 // Method org/springframework/core/ReactiveTypeDescriptor.multiValue:(Ljava/lang/Class;Ljava/util/function/Supplier;)Lorg/springframework/core/ReactiveTypeDescriptor;
      94: invokeinterface #69,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      99: pop
     100: getstatic     #11                 // Field RXJAVA2_PRESENT:Z
     103: ifeq          186
     106: aload_0
     107: ldc           #76                 // class io/reactivex/Single
     109: invokestatic  #68                 // Method org/springframework/core/ReactiveTypeDescriptor.singleRequiredValue:(Ljava/lang/Class;)Lorg/springframework/core/ReactiveTypeDescriptor;
     112: invokeinterface #69,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     117: pop
     118: aload_0
     119: ldc           #77                 // class io/reactivex/Maybe
     121: invokedynamic #78,  0             // InvokeDynamic #13:get:()Ljava/util/function/Supplier;
     126: invokestatic  #79                 // Method org/springframework/core/ReactiveTypeDescriptor.singleOptionalValue:(Ljava/lang/Class;Ljava/util/function/Supplier;)Lorg/springframework/core/ReactiveTypeDescriptor;
     129: invokeinterface #69,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     134: pop
     135: aload_0
     136: ldc           #80                 // class io/reactivex/Completable
     138: invokedynamic #81,  0             // InvokeDynamic #14:get:()Ljava/util/function/Supplier;
     143: invokestatic  #72                 // Method org/springframework/core/ReactiveTypeDescriptor.noValue:(Ljava/lang/Class;Ljava/util/function/Supplier;)Lorg/springframework/core/ReactiveTypeDescriptor;
     146: invokeinterface #69,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     151: pop
     152: aload_0
     153: ldc           #82                 // class io/reactivex/Flowable
     155: invokedynamic #83,  0             // InvokeDynamic #15:get:()Ljava/util/function/Supplier;
     160: invokestatic  #75                 // Method org/springframework/core/ReactiveTypeDescriptor.multiValue:(Ljava/lang/Class;Ljava/util/function/Supplier;)Lorg/springframework/core/ReactiveTypeDescriptor;
     163: invokeinterface #69,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     168: pop
     169: aload_0
     170: ldc           #84                 // class io/reactivex/Observable
     172: invokedynamic #85,  0             // InvokeDynamic #16:get:()Ljava/util/function/Supplier;
     177: invokestatic  #75                 // Method org/springframework/core/ReactiveTypeDescriptor.multiValue:(Ljava/lang/Class;Ljava/util/function/Supplier;)Lorg/springframework/core/ReactiveTypeDescriptor;
     180: invokeinterface #69,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     185: pop
     186: getstatic     #9                  // Field PROJECT_REACTOR_PRESENT:Z
     189: ifeq          243
     192: aload_0
     193: ldc           #86                 // class reactor/core/publisher/Mono
     195: invokedynamic #87,  0             // InvokeDynamic #17:get:()Ljava/util/function/Supplier;
     200: invokestatic  #79                 // Method org/springframework/core/ReactiveTypeDescriptor.singleOptionalValue:(Ljava/lang/Class;Ljava/util/function/Supplier;)Lorg/springframework/core/ReactiveTypeDescriptor;
     203: invokeinterface #69,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     208: pop
     209: aload_0
     210: ldc           #88                 // class reactor/core/publisher/Flux
     212: invokedynamic #89,  0             // InvokeDynamic #18:get:()Ljava/util/function/Supplier;
     217: invokestatic  #75                 // Method org/springframework/core/ReactiveTypeDescriptor.multiValue:(Ljava/lang/Class;Ljava/util/function/Supplier;)Lorg/springframework/core/ReactiveTypeDescriptor;
     220: invokeinterface #69,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     225: pop
     226: aload_0
     227: ldc           #90                 // class org/reactivestreams/Publisher
     229: invokedynamic #89,  0             // InvokeDynamic #18:get:()Ljava/util/function/Supplier;
     234: invokestatic  #75                 // Method org/springframework/core/ReactiveTypeDescriptor.multiValue:(Ljava/lang/Class;Ljava/util/function/Supplier;)Lorg/springframework/core/ReactiveTypeDescriptor;
     237: invokeinterface #69,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     242: pop
     243: aload_0
     244: invokestatic  #91                 // Method java/util/Collections.unmodifiableCollection:(Ljava/util/Collection;)Ljava/util/Collection;
     247: putstatic     #35                 // Field REACTIVE_WRAPPERS:Ljava/util/Collection;
     250: return
}
