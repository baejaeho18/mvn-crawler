Compiled from "RepositoryConfigurationSource.java"
public interface org.springframework.data.repository.config.RepositoryConfigurationSource {
  public abstract java.lang.Object getSource();

  public abstract org.springframework.data.util.Streamable<java.lang.String> getBasePackages();

  public abstract java.util.Optional<java.lang.Object> getQueryLookupStrategyKey();

  public abstract java.util.Optional<java.lang.String> getRepositoryImplementationPostfix();

  public abstract java.util.Optional<java.lang.String> getNamedQueryLocation();

  public abstract java.util.Optional<java.lang.String> getRepositoryBaseClassName();

  public abstract java.util.Optional<java.lang.String> getRepositoryFactoryBeanClassName();

  public abstract org.springframework.data.util.Streamable<org.springframework.beans.factory.config.BeanDefinition> getCandidates(org.springframework.core.io.ResourceLoader);

  public abstract java.util.Optional<java.lang.String> getAttribute(java.lang.String);

  public abstract boolean usesExplicitFilters();

  public abstract org.springframework.data.util.Streamable<org.springframework.core.type.filter.TypeFilter> getExcludeFilters();

  public abstract java.lang.String generateBeanName(org.springframework.beans.factory.config.BeanDefinition);

  public abstract org.springframework.data.repository.config.ImplementationDetectionConfiguration toImplementationDetectionConfiguration(org.springframework.core.type.classreading.MetadataReaderFactory);

  public abstract org.springframework.data.repository.config.BootstrapMode getBootstrapMode();
}
