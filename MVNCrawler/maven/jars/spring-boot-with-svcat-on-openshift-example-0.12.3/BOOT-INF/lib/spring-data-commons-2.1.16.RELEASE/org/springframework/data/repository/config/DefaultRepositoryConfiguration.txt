Compiled from "DefaultRepositoryConfiguration.java"
public class org.springframework.data.repository.config.DefaultRepositoryConfiguration<T extends org.springframework.data.repository.config.RepositoryConfigurationSource> implements org.springframework.data.repository.config.RepositoryConfiguration<T> {
  public static final java.lang.String DEFAULT_REPOSITORY_IMPLEMENTATION_POSTFIX;

  public static final org.springframework.data.repository.query.QueryLookupStrategy$Key DEFAULT_QUERY_LOOKUP_STRATEGY;

  private final T configurationSource;

  private final org.springframework.beans.factory.config.BeanDefinition definition;

  private final org.springframework.data.repository.config.RepositoryConfigurationExtension extension;

  public java.lang.String getBeanId();
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method getRepositoryBaseClassName:()Ljava/util/Optional;
       4: invokedynamic #2,  0              // InvokeDynamic #0:get:()Ljava/util/function/Supplier;
       9: invokevirtual #3                  // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      12: checkcast     #4                  // class java/lang/String
      15: invokestatic  #5                  // Method org/springframework/util/ClassUtils.getShortName:(Ljava/lang/String;)Ljava/lang/String;
      18: invokestatic  #6                  // Method org/springframework/util/StringUtils.uncapitalize:(Ljava/lang/String;)Ljava/lang/String;
      21: areturn

  public java.lang.Object getQueryLookupStrategyKey();
    Code:
       0: aload_0
       1: getfield      #7                  // Field configurationSource:Lorg/springframework/data/repository/config/RepositoryConfigurationSource;
       4: invokeinterface #8,  1            // InterfaceMethod org/springframework/data/repository/config/RepositoryConfigurationSource.getQueryLookupStrategyKey:()Ljava/util/Optional;
       9: getstatic     #9                  // Field DEFAULT_QUERY_LOOKUP_STRATEGY:Lorg/springframework/data/repository/query/QueryLookupStrategy$Key;
      12: invokevirtual #10                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn

  public org.springframework.data.util.Streamable<java.lang.String> getBasePackages();
    Code:
       0: aload_0
       1: getfield      #7                  // Field configurationSource:Lorg/springframework/data/repository/config/RepositoryConfigurationSource;
       4: invokeinterface #11,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfigurationSource.getBasePackages:()Lorg/springframework/data/util/Streamable;
       9: areturn

  public org.springframework.data.util.Streamable<java.lang.String> getImplementationBasePackages();
    Code:
       0: iconst_1
       1: anewarray     #4                  // class java/lang/String
       4: dup
       5: iconst_0
       6: aload_0
       7: invokevirtual #12                 // Method getRepositoryInterface:()Ljava/lang/String;
      10: invokestatic  #13                 // Method org/springframework/util/ClassUtils.getPackageName:(Ljava/lang/String;)Ljava/lang/String;
      13: aastore
      14: invokestatic  #14                 // InterfaceMethod org/springframework/data/util/Streamable.of:([Ljava/lang/Object;)Lorg/springframework/data/util/Streamable;
      17: areturn

  public java.lang.String getRepositoryInterface();
    Code:
       0: aload_0
       1: getfield      #15                 // Field definition:Lorg/springframework/beans/factory/config/BeanDefinition;
       4: invokestatic  #16                 // InterfaceMethod org/springframework/data/config/ConfigurationUtils.getRequiredBeanClassName:(Lorg/springframework/beans/factory/config/BeanDefinition;)Ljava/lang/String;
       7: areturn

  public org.springframework.data.repository.config.RepositoryConfigurationSource getConfigSource();
    Code:
       0: aload_0
       1: getfield      #7                  // Field configurationSource:Lorg/springframework/data/repository/config/RepositoryConfigurationSource;
       4: areturn

  public java.util.Optional<java.lang.String> getNamedQueriesLocation();
    Code:
       0: aload_0
       1: getfield      #7                  // Field configurationSource:Lorg/springframework/data/repository/config/RepositoryConfigurationSource;
       4: invokeinterface #17,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfigurationSource.getNamedQueryLocation:()Ljava/util/Optional;
       9: areturn

  public java.lang.String getImplementationClassName();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method getRepositoryInterface:()Ljava/lang/String;
       4: invokestatic  #5                  // Method org/springframework/util/ClassUtils.getShortName:(Ljava/lang/String;)Ljava/lang/String;
       7: aload_0
       8: getfield      #7                  // Field configurationSource:Lorg/springframework/data/repository/config/RepositoryConfigurationSource;
      11: invokeinterface #18,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfigurationSource.getRepositoryImplementationPostfix:()Ljava/util/Optional;
      16: ldc           #20                 // String Impl
      18: invokevirtual #10                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #4                  // class java/lang/String
      24: invokevirtual #21                 // Method java/lang/String.concat:(Ljava/lang/String;)Ljava/lang/String;
      27: areturn

  public java.lang.String getImplementationBeanName();
    Code:
       0: new           #22                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #7                  // Field configurationSource:Lorg/springframework/data/repository/config/RepositoryConfigurationSource;
      11: aload_0
      12: getfield      #15                 // Field definition:Lorg/springframework/beans/factory/config/BeanDefinition;
      15: invokeinterface #24,  2           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfigurationSource.generateBeanName:(Lorg/springframework/beans/factory/config/BeanDefinition;)Ljava/lang/String;
      20: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: getfield      #7                  // Field configurationSource:Lorg/springframework/data/repository/config/RepositoryConfigurationSource;
      27: invokeinterface #18,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfigurationSource.getRepositoryImplementationPostfix:()Ljava/util/Optional;
      32: ldc           #20                 // String Impl
      34: invokevirtual #10                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #4                  // class java/lang/String
      40: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: areturn

  public java.lang.Object getSource();
    Code:
       0: aload_0
       1: getfield      #7                  // Field configurationSource:Lorg/springframework/data/repository/config/RepositoryConfigurationSource;
       4: invokeinterface #27,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfigurationSource.getSource:()Ljava/lang/Object;
       9: areturn

  public T getConfigurationSource();
    Code:
       0: aload_0
       1: getfield      #7                  // Field configurationSource:Lorg/springframework/data/repository/config/RepositoryConfigurationSource;
       4: areturn

  public java.util.Optional<java.lang.String> getRepositoryBaseClassName();
    Code:
       0: aload_0
       1: getfield      #7                  // Field configurationSource:Lorg/springframework/data/repository/config/RepositoryConfigurationSource;
       4: invokeinterface #28,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfigurationSource.getRepositoryBaseClassName:()Ljava/util/Optional;
       9: areturn

  public java.lang.String getRepositoryFactoryBeanClassName();
    Code:
       0: aload_0
       1: getfield      #7                  // Field configurationSource:Lorg/springframework/data/repository/config/RepositoryConfigurationSource;
       4: invokeinterface #29,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfigurationSource.getRepositoryFactoryBeanClassName:()Ljava/util/Optional;
       9: aload_0
      10: invokedynamic #30,  0             // InvokeDynamic #1:get:(Lorg/springframework/data/repository/config/DefaultRepositoryConfiguration;)Ljava/util/function/Supplier;
      15: invokevirtual #31                 // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      18: checkcast     #4                  // class java/lang/String
      21: areturn

  public boolean isLazyInit();
    Code:
       0: aload_0
       1: getfield      #15                 // Field definition:Lorg/springframework/beans/factory/config/BeanDefinition;
       4: invokeinterface #32,  1           // InterfaceMethod org/springframework/beans/factory/config/BeanDefinition.isLazyInit:()Z
       9: ifne          30
      12: aload_0
      13: getfield      #7                  // Field configurationSource:Lorg/springframework/data/repository/config/RepositoryConfigurationSource;
      16: invokeinterface #33,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfigurationSource.getBootstrapMode:()Lorg/springframework/data/repository/config/BootstrapMode;
      21: getstatic     #34                 // Field org/springframework/data/repository/config/BootstrapMode.DEFAULT:Lorg/springframework/data/repository/config/BootstrapMode;
      24: invokevirtual #35                 // Method org/springframework/data/repository/config/BootstrapMode.equals:(Ljava/lang/Object;)Z
      27: ifne          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn

  public org.springframework.data.util.Streamable<org.springframework.core.type.filter.TypeFilter> getExcludeFilters();
    Code:
       0: aload_0
       1: getfield      #7                  // Field configurationSource:Lorg/springframework/data/repository/config/RepositoryConfigurationSource;
       4: invokeinterface #36,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfigurationSource.getExcludeFilters:()Lorg/springframework/data/util/Streamable;
       9: areturn

  public org.springframework.data.repository.config.ImplementationDetectionConfiguration toImplementationDetectionConfiguration(org.springframework.core.type.classreading.MetadataReaderFactory);
    Code:
       0: aload_1
       1: ldc           #37                 // String MetadataReaderFactory must not be null!
       3: invokestatic  #38                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #7                  // Field configurationSource:Lorg/springframework/data/repository/config/RepositoryConfigurationSource;
      10: aload_1
      11: invokeinterface #39,  2           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfigurationSource.toImplementationDetectionConfiguration:(Lorg/springframework/core/type/classreading/MetadataReaderFactory;)Lorg/springframework/data/repository/config/ImplementationDetectionConfiguration;
      16: areturn

  public org.springframework.data.repository.config.ImplementationLookupConfiguration toLookupConfiguration(org.springframework.core.type.classreading.MetadataReaderFactory);
    Code:
       0: aload_1
       1: ldc           #37                 // String MetadataReaderFactory must not be null!
       3: invokestatic  #38                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokevirtual #40                 // Method toImplementationDetectionConfiguration:(Lorg/springframework/core/type/classreading/MetadataReaderFactory;)Lorg/springframework/data/repository/config/ImplementationDetectionConfiguration;
      11: aload_0
      12: invokeinterface #41,  2           // InterfaceMethod org/springframework/data/repository/config/ImplementationDetectionConfiguration.forRepositoryConfiguration:(Lorg/springframework/data/repository/config/RepositoryConfiguration;)Lorg/springframework/data/repository/config/ImplementationLookupConfiguration;
      17: areturn

  public org.springframework.data.repository.config.DefaultRepositoryConfiguration(T, org.springframework.beans.factory.config.BeanDefinition, org.springframework.data.repository.config.RepositoryConfigurationExtension);
    Code:
       0: aload_0
       1: invokespecial #42                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #43                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #44                 // String configurationSource is marked non-null but is null
      14: invokespecial #45                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_2
      19: ifnonnull     32
      22: new           #43                 // class java/lang/IllegalArgumentException
      25: dup
      26: ldc           #46                 // String definition is marked non-null but is null
      28: invokespecial #45                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload_3
      33: ifnonnull     46
      36: new           #43                 // class java/lang/IllegalArgumentException
      39: dup
      40: ldc           #47                 // String extension is marked non-null but is null
      42: invokespecial #45                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload_0
      47: aload_1
      48: putfield      #7                  // Field configurationSource:Lorg/springframework/data/repository/config/RepositoryConfigurationSource;
      51: aload_0
      52: aload_2
      53: putfield      #15                 // Field definition:Lorg/springframework/beans/factory/config/BeanDefinition;
      56: aload_0
      57: aload_3
      58: putfield      #48                 // Field extension:Lorg/springframework/data/repository/config/RepositoryConfigurationExtension;
      61: return

  private java.lang.String lambda$getRepositoryFactoryBeanClassName$1();
    Code:
       0: aload_0
       1: getfield      #48                 // Field extension:Lorg/springframework/data/repository/config/RepositoryConfigurationExtension;
       4: invokeinterface #49,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfigurationExtension.getRepositoryFactoryBeanClassName:()Ljava/lang/String;
       9: areturn

  private static java.lang.IllegalStateException lambda$getBeanId$0();
    Code:
       0: new           #50                 // class java/lang/IllegalStateException
       3: dup
       4: ldc           #51                 // String Can\'t create bean identifier without a repository base class defined!
       6: invokespecial #52                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: areturn

  static {};
    Code:
       0: getstatic     #53                 // Field org/springframework/data/repository/query/QueryLookupStrategy$Key.CREATE_IF_NOT_FOUND:Lorg/springframework/data/repository/query/QueryLookupStrategy$Key;
       3: putstatic     #9                  // Field DEFAULT_QUERY_LOOKUP_STRATEGY:Lorg/springframework/data/repository/query/QueryLookupStrategy$Key;
       6: return
}
