Compiled from "ReactiveWrapperConverters.java"
final class org.springframework.data.repository.util.ReactiveWrapperConverters$PublisherWrapper extends java.lang.Enum<org.springframework.data.repository.util.ReactiveWrapperConverters$PublisherWrapper> implements org.springframework.data.repository.util.ReactiveWrapperConverters$ReactiveTypeWrapper<org.reactivestreams.Publisher<?>> {
  public static final org.springframework.data.repository.util.ReactiveWrapperConverters$PublisherWrapper INSTANCE;

  private static final org.springframework.data.repository.util.ReactiveWrapperConverters$PublisherWrapper[] $VALUES;

  public static org.springframework.data.repository.util.ReactiveWrapperConverters$PublisherWrapper[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lorg/springframework/data/repository/util/ReactiveWrapperConverters$PublisherWrapper;
       3: invokevirtual #2                  // Method "[Lorg/springframework/data/repository/util/ReactiveWrapperConverters$PublisherWrapper;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lorg/springframework/data/repository/util/ReactiveWrapperConverters$PublisherWrapper;"
       9: areturn

  public static org.springframework.data.repository.util.ReactiveWrapperConverters$PublisherWrapper valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class org/springframework/data/repository/util/ReactiveWrapperConverters$PublisherWrapper
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class org/springframework/data/repository/util/ReactiveWrapperConverters$PublisherWrapper
       9: areturn

  private org.springframework.data.repository.util.ReactiveWrapperConverters$PublisherWrapper();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  public java.lang.Class<? super org.reactivestreams.Publisher<?>> getWrapperClass();
    Code:
       0: ldc           #7                  // class org/reactivestreams/Publisher
       2: areturn

  public org.reactivestreams.Publisher<?> map(java.lang.Object, java.util.function.Function<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_1
       1: instanceof    #8                  // class reactor/core/publisher/Mono
       4: ifeq          16
       7: getstatic     #9                  // Field org/springframework/data/repository/util/ReactiveWrapperConverters$MonoWrapper.INSTANCE:Lorg/springframework/data/repository/util/ReactiveWrapperConverters$MonoWrapper;
      10: aload_1
      11: aload_2
      12: invokevirtual #10                 // Method org/springframework/data/repository/util/ReactiveWrapperConverters$MonoWrapper.map:(Ljava/lang/Object;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      15: areturn
      16: aload_1
      17: instanceof    #11                 // class reactor/core/publisher/Flux
      20: ifeq          32
      23: getstatic     #12                 // Field org/springframework/data/repository/util/ReactiveWrapperConverters$FluxWrapper.INSTANCE:Lorg/springframework/data/repository/util/ReactiveWrapperConverters$FluxWrapper;
      26: aload_1
      27: aload_2
      28: invokevirtual #13                 // Method org/springframework/data/repository/util/ReactiveWrapperConverters$FluxWrapper.map:(Ljava/lang/Object;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      31: areturn
      32: getstatic     #12                 // Field org/springframework/data/repository/util/ReactiveWrapperConverters$FluxWrapper.INSTANCE:Lorg/springframework/data/repository/util/ReactiveWrapperConverters$FluxWrapper;
      35: aload_1
      36: checkcast     #7                  // class org/reactivestreams/Publisher
      39: invokestatic  #14                 // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      42: aload_2
      43: invokevirtual #13                 // Method org/springframework/data/repository/util/ReactiveWrapperConverters$FluxWrapper.map:(Ljava/lang/Object;Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      46: areturn

  public java.lang.Object map(java.lang.Object, java.util.function.Function);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #15                 // Method map:(Ljava/lang/Object;Ljava/util/function/Function;)Lorg/reactivestreams/Publisher;
       6: areturn

  static {};
    Code:
       0: new           #4                  // class org/springframework/data/repository/util/ReactiveWrapperConverters$PublisherWrapper
       3: dup
       4: ldc           #16                 // String INSTANCE
       6: iconst_0
       7: invokespecial #17                 // Method "<init>":(Ljava/lang/String;I)V
      10: putstatic     #18                 // Field INSTANCE:Lorg/springframework/data/repository/util/ReactiveWrapperConverters$PublisherWrapper;
      13: iconst_1
      14: anewarray     #4                  // class org/springframework/data/repository/util/ReactiveWrapperConverters$PublisherWrapper
      17: dup
      18: iconst_0
      19: getstatic     #18                 // Field INSTANCE:Lorg/springframework/data/repository/util/ReactiveWrapperConverters$PublisherWrapper;
      22: aastore
      23: putstatic     #1                  // Field $VALUES:[Lorg/springframework/data/repository/util/ReactiveWrapperConverters$PublisherWrapper;
      26: return
}
