Compiled from "RepositoryConfigurationSourceSupport.java"
class org.springframework.data.repository.config.RepositoryConfigurationSourceSupport$SpringImplementationDetectionConfiguration implements org.springframework.data.repository.config.ImplementationDetectionConfiguration {
  private final org.springframework.data.repository.config.RepositoryConfigurationSource source;

  private final org.springframework.core.type.classreading.MetadataReaderFactory metadataReaderFactory;

  final org.springframework.data.repository.config.RepositoryConfigurationSourceSupport this$0;

  public java.lang.String getImplementationPostfix();
    Code:
       0: aload_0
       1: getfield      #1                  // Field source:Lorg/springframework/data/repository/config/RepositoryConfigurationSource;
       4: invokeinterface #2,  1            // InterfaceMethod org/springframework/data/repository/config/RepositoryConfigurationSource.getRepositoryImplementationPostfix:()Ljava/util/Optional;
       9: ldc           #4                  // String Impl
      11: invokevirtual #5                  // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #6                  // class java/lang/String
      17: areturn

  public org.springframework.data.util.Streamable<java.lang.String> getBasePackages();
    Code:
       0: aload_0
       1: getfield      #1                  // Field source:Lorg/springframework/data/repository/config/RepositoryConfigurationSource;
       4: invokeinterface #7,  1            // InterfaceMethod org/springframework/data/repository/config/RepositoryConfigurationSource.getBasePackages:()Lorg/springframework/data/util/Streamable;
       9: areturn

  public org.springframework.data.util.Streamable<org.springframework.core.type.filter.TypeFilter> getExcludeFilters();
    Code:
       0: aload_0
       1: getfield      #1                  // Field source:Lorg/springframework/data/repository/config/RepositoryConfigurationSource;
       4: invokeinterface #8,  1            // InterfaceMethod org/springframework/data/repository/config/RepositoryConfigurationSource.getExcludeFilters:()Lorg/springframework/data/util/Streamable;
       9: areturn

  public java.lang.String generateBeanName(org.springframework.beans.factory.config.BeanDefinition);
    Code:
       0: aload_0
       1: getfield      #1                  // Field source:Lorg/springframework/data/repository/config/RepositoryConfigurationSource;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod org/springframework/data/repository/config/RepositoryConfigurationSource.generateBeanName:(Lorg/springframework/beans/factory/config/BeanDefinition;)Ljava/lang/String;
      10: areturn

  public org.springframework.data.repository.config.RepositoryConfigurationSourceSupport$SpringImplementationDetectionConfiguration(org.springframework.data.repository.config.RepositoryConfigurationSourceSupport, org.springframework.data.repository.config.RepositoryConfigurationSource, org.springframework.core.type.classreading.MetadataReaderFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field this$0:Lorg/springframework/data/repository/config/RepositoryConfigurationSourceSupport;
       5: aload_0
       6: invokespecial #11                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #1                  // Field source:Lorg/springframework/data/repository/config/RepositoryConfigurationSource;
      14: aload_0
      15: aload_3
      16: putfield      #12                 // Field metadataReaderFactory:Lorg/springframework/core/type/classreading/MetadataReaderFactory;
      19: return

  public org.springframework.core.type.classreading.MetadataReaderFactory getMetadataReaderFactory();
    Code:
       0: aload_0
       1: getfield      #12                 // Field metadataReaderFactory:Lorg/springframework/core/type/classreading/MetadataReaderFactory;
       4: areturn
}
