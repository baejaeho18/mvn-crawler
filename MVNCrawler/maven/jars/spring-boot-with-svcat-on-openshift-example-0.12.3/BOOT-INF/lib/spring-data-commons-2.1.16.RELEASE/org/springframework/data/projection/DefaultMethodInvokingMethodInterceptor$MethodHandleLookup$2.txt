Compiled from "DefaultMethodInvokingMethodInterceptor.java"
final class org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor$MethodHandleLookup$2 extends org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor$MethodHandleLookup {
  private final org.springframework.data.util.Lazy<java.lang.reflect.Constructor<java.lang.invoke.MethodHandles$Lookup>> constructor;

  org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor$MethodHandleLookup$2(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aconst_null
       4: invokespecial #1                  // Method org/springframework/data/projection/DefaultMethodInvokingMethodInterceptor$MethodHandleLookup."<init>":(Ljava/lang/String;ILorg/springframework/data/projection/DefaultMethodInvokingMethodInterceptor$1;)V
       7: aload_0
       8: invokedynamic #2,  0              // InvokeDynamic #0:get:()Ljava/util/function/Supplier;
      13: invokestatic  #3                  // Method org/springframework/data/util/Lazy.of:(Ljava/util/function/Supplier;)Lorg/springframework/data/util/Lazy;
      16: putfield      #4                  // Field constructor:Lorg/springframework/data/util/Lazy;
      19: return

  java.lang.invoke.MethodHandle lookup(java.lang.reflect.Method) throws java.lang.ReflectiveOperationException;
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method isAvailable:()Z
       4: ifne          17
       7: new           #6                  // class java/lang/IllegalStateException
      10: dup
      11: ldc           #7                  // String Could not obtain MethodHandles.lookup constructor!
      13: invokespecial #8                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #4                  // Field constructor:Lorg/springframework/data/util/Lazy;
      21: invokevirtual #9                  // Method org/springframework/data/util/Lazy.get:()Ljava/lang/Object;
      24: checkcast     #10                 // class java/lang/reflect/Constructor
      27: astore_2
      28: aload_2
      29: iconst_1
      30: anewarray     #11                 // class java/lang/Object
      33: dup
      34: iconst_0
      35: aload_1
      36: invokevirtual #12                 // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
      39: aastore
      40: invokevirtual #13                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #14                 // class java/lang/invoke/MethodHandles$Lookup
      46: aload_1
      47: aload_1
      48: invokevirtual #12                 // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
      51: invokevirtual #15                 // Method java/lang/invoke/MethodHandles$Lookup.unreflectSpecial:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;
      54: areturn

  boolean isAvailable();
    Code:
       0: aload_0
       1: getfield      #4                  // Field constructor:Lorg/springframework/data/util/Lazy;
       4: aconst_null
       5: invokevirtual #16                 // Method org/springframework/data/util/Lazy.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
       8: ifnull        15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  private static java.lang.reflect.Constructor lambda$$0();
    Code:
       0: invokestatic  #17                 // Method org/springframework/data/projection/DefaultMethodInvokingMethodInterceptor$MethodHandleLookup.access$200:()Ljava/lang/reflect/Constructor;
       3: areturn
}
