Compiled from "AnnotationDetectionFieldCallback.java"
public class org.springframework.data.util.AnnotationDetectionFieldCallback implements org.springframework.util.ReflectionUtils$FieldCallback {
  private final java.lang.Class<? extends java.lang.annotation.Annotation> annotationType;

  private java.lang.reflect.Field field;

  public org.springframework.data.util.AnnotationDetectionFieldCallback(java.lang.Class<? extends java.lang.annotation.Annotation>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String AnnotationType must not be null!
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field annotationType:Ljava/lang/Class;
      15: return

  public void doWith(java.lang.reflect.Field) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field field:Ljava/lang/reflect/Field;
       4: ifnull        8
       7: return
       8: aload_1
       9: aload_0
      10: getfield      #4                  // Field annotationType:Ljava/lang/Class;
      13: invokestatic  #6                  // Method org/springframework/core/annotation/AnnotatedElementUtils.findMergedAnnotation:(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      16: ifnull        28
      19: aload_1
      20: invokestatic  #7                  // Method org/springframework/util/ReflectionUtils.makeAccessible:(Ljava/lang/reflect/Field;)V
      23: aload_0
      24: aload_1
      25: putfield      #5                  // Field field:Ljava/lang/reflect/Field;
      28: return

  public java.lang.reflect.Field getField();
    Code:
       0: aload_0
       1: getfield      #5                  // Field field:Ljava/lang/reflect/Field;
       4: areturn

  public java.lang.reflect.Field getRequiredField();
    Code:
       0: aload_0
       1: getfield      #5                  // Field field:Ljava/lang/reflect/Field;
       4: astore_1
       5: aload_1
       6: ifnonnull     33
       9: new           #8                  // class java/lang/IllegalStateException
      12: dup
      13: ldc           #9                  // String No field found for annotation %s!
      15: iconst_1
      16: anewarray     #10                 // class java/lang/Object
      19: dup
      20: iconst_0
      21: aload_0
      22: getfield      #4                  // Field annotationType:Ljava/lang/Class;
      25: aastore
      26: invokestatic  #11                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      29: invokespecial #12                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: aload_1
      34: areturn

  public java.lang.Class<?> getType();
    Code:
       0: aload_0
       1: getfield      #5                  // Field field:Ljava/lang/reflect/Field;
       4: astore_1
       5: aload_1
       6: ifnonnull     13
       9: aconst_null
      10: goto          17
      13: aload_1
      14: invokevirtual #13                 // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
      17: areturn

  public java.lang.Class<?> getRequiredType();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getRequiredField:()Ljava/lang/reflect/Field;
       4: invokevirtual #13                 // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
       7: areturn

  public <T> T getValue(java.lang.Object);
    Code:
       0: aload_1
       1: ldc           #15                 // String Source object must not be null!
       3: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #5                  // Field field:Ljava/lang/reflect/Field;
      10: astore_2
      11: aload_2
      12: ifnonnull     17
      15: aconst_null
      16: areturn
      17: aload_2
      18: aload_1
      19: invokestatic  #16                 // Method org/springframework/util/ReflectionUtils.getField:(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/Object;
      22: areturn
}
