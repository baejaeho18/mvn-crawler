Compiled from "Revision.java"
public final class org.springframework.data.history.Revision<N extends java.lang.Number & java.lang.Comparable<N>, T> implements java.lang.Comparable<org.springframework.data.history.Revision<N, ?>> {
  private final org.springframework.data.history.RevisionMetadata<N> metadata;

  private final T entity;

  public static <N extends java.lang.Number & java.lang.Comparable<N>, T> org.springframework.data.history.Revision<N, T> of(org.springframework.data.history.RevisionMetadata<N>, T);
    Code:
       0: new           #1                  // class org/springframework/data/history/Revision
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #2                  // Method "<init>":(Lorg/springframework/data/history/RevisionMetadata;Ljava/lang/Object;)V
       9: areturn

  public java.util.Optional<N> getRevisionNumber();
    Code:
       0: aload_0
       1: getfield      #3                  // Field metadata:Lorg/springframework/data/history/RevisionMetadata;
       4: invokeinterface #4,  1            // InterfaceMethod org/springframework/data/history/RevisionMetadata.getRevisionNumber:()Ljava/util/Optional;
       9: areturn

  public N getRequiredRevisionNumber();
    Code:
       0: aload_0
       1: getfield      #3                  // Field metadata:Lorg/springframework/data/history/RevisionMetadata;
       4: invokeinterface #5,  1            // InterfaceMethod org/springframework/data/history/RevisionMetadata.getRequiredRevisionNumber:()Ljava/lang/Number;
       9: areturn

  public java.util.Optional<java.time.LocalDateTime> getRevisionDate();
    Code:
       0: aload_0
       1: getfield      #3                  // Field metadata:Lorg/springframework/data/history/RevisionMetadata;
       4: invokeinterface #6,  1            // InterfaceMethod org/springframework/data/history/RevisionMetadata.getRevisionDate:()Ljava/util/Optional;
       9: areturn

  public java.util.Optional<java.time.Instant> getRevisionInstant();
    Code:
       0: aload_0
       1: getfield      #3                  // Field metadata:Lorg/springframework/data/history/RevisionMetadata;
       4: invokeinterface #7,  1            // InterfaceMethod org/springframework/data/history/RevisionMetadata.getRevisionInstant:()Ljava/util/Optional;
       9: areturn

  public java.time.LocalDateTime getRequiredRevisionDate();
    Code:
       0: aload_0
       1: getfield      #3                  // Field metadata:Lorg/springframework/data/history/RevisionMetadata;
       4: invokeinterface #8,  1            // InterfaceMethod org/springframework/data/history/RevisionMetadata.getRequiredRevisionDate:()Ljava/time/LocalDateTime;
       9: areturn

  public java.time.Instant getRequiredRevisionInstant();
    Code:
       0: aload_0
       1: getfield      #3                  // Field metadata:Lorg/springframework/data/history/RevisionMetadata;
       4: invokeinterface #9,  1            // InterfaceMethod org/springframework/data/history/RevisionMetadata.getRequiredRevisionInstant:()Ljava/time/Instant;
       9: areturn

  public int compareTo(org.springframework.data.history.Revision<N, ?>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_1
       5: ireturn
       6: aload_0
       7: invokevirtual #10                 // Method getRevisionNumber:()Ljava/util/Optional;
      10: aload_1
      11: invokevirtual #10                 // Method getRevisionNumber:()Ljava/util/Optional;
      14: invokedynamic #11,  0             // InvokeDynamic #0:apply:()Ljava/util/function/BiFunction;
      19: invokestatic  #12                 // InterfaceMethod org/springframework/data/util/Optionals.mapIfAllPresent:(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/function/BiFunction;)Ljava/util/Optional;
      22: iconst_m1
      23: invokestatic  #13                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      26: invokevirtual #14                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #15                 // class java/lang/Integer
      32: invokevirtual #16                 // Method java/lang/Integer.intValue:()I
      35: ireturn

  public java.lang.String toString();
    Code:
       0: ldc           #17                 // String Revision %s of entity %s - Revision metadata %s
       2: iconst_3
       3: anewarray     #18                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: invokevirtual #10                 // Method getRevisionNumber:()Ljava/util/Optional;
      12: invokedynamic #19,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      17: invokevirtual #20                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      20: ldc           #21                 // String <unknown>
      22: invokevirtual #14                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      25: aastore
      26: dup
      27: iconst_1
      28: aload_0
      29: getfield      #22                 // Field entity:Ljava/lang/Object;
      32: aastore
      33: dup
      34: iconst_2
      35: aload_0
      36: getfield      #3                  // Field metadata:Lorg/springframework/data/history/RevisionMetadata;
      39: aastore
      40: invokestatic  #23                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      43: areturn

  public org.springframework.data.history.RevisionMetadata<N> getMetadata();
    Code:
       0: aload_0
       1: getfield      #3                  // Field metadata:Lorg/springframework/data/history/RevisionMetadata;
       4: areturn

  public T getEntity();
    Code:
       0: aload_0
       1: getfield      #22                 // Field entity:Ljava/lang/Object;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #1                  // class org/springframework/data/history/Revision
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #1                  // class org/springframework/data/history/Revision
      20: astore_2
      21: aload_0
      22: invokevirtual #24                 // Method getMetadata:()Lorg/springframework/data/history/RevisionMetadata;
      25: astore_3
      26: aload_2
      27: invokevirtual #24                 // Method getMetadata:()Lorg/springframework/data/history/RevisionMetadata;
      30: astore        4
      32: aload_3
      33: ifnonnull     44
      36: aload         4
      38: ifnull        55
      41: goto          53
      44: aload_3
      45: aload         4
      47: invokevirtual #25                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      50: ifne          55
      53: iconst_0
      54: ireturn
      55: aload_0
      56: invokevirtual #26                 // Method getEntity:()Ljava/lang/Object;
      59: astore        5
      61: aload_2
      62: invokevirtual #26                 // Method getEntity:()Ljava/lang/Object;
      65: astore        6
      67: aload         5
      69: ifnonnull     80
      72: aload         6
      74: ifnull        92
      77: goto          90
      80: aload         5
      82: aload         6
      84: invokevirtual #25                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      87: ifne          92
      90: iconst_0
      91: ireturn
      92: iconst_1
      93: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: aload_0
       6: invokevirtual #24                 // Method getMetadata:()Lorg/springframework/data/history/RevisionMetadata;
       9: astore_3
      10: iload_2
      11: bipush        59
      13: imul
      14: aload_3
      15: ifnonnull     23
      18: bipush        43
      20: goto          27
      23: aload_3
      24: invokevirtual #27                 // Method java/lang/Object.hashCode:()I
      27: iadd
      28: istore_2
      29: aload_0
      30: invokevirtual #26                 // Method getEntity:()Ljava/lang/Object;
      33: astore        4
      35: iload_2
      36: bipush        59
      38: imul
      39: aload         4
      41: ifnonnull     49
      44: bipush        43
      46: goto          54
      49: aload         4
      51: invokevirtual #27                 // Method java/lang/Object.hashCode:()I
      54: iadd
      55: istore_2
      56: iload_2
      57: ireturn

  private org.springframework.data.history.Revision(org.springframework.data.history.RevisionMetadata<N>, T);
    Code:
       0: aload_0
       1: invokespecial #28                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #29                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #30                 // String metadata is marked non-null but is null
      14: invokespecial #31                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_2
      19: ifnonnull     32
      22: new           #29                 // class java/lang/IllegalArgumentException
      25: dup
      26: ldc           #32                 // String entity is marked non-null but is null
      28: invokespecial #31                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload_0
      33: aload_1
      34: putfield      #3                  // Field metadata:Lorg/springframework/data/history/RevisionMetadata;
      37: aload_0
      38: aload_2
      39: putfield      #22                 // Field entity:Ljava/lang/Object;
      42: return

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1                  // class org/springframework/data/history/Revision
       5: invokevirtual #33                 // Method compareTo:(Lorg/springframework/data/history/Revision;)I
       8: ireturn

  private static java.lang.Integer lambda$compareTo$0(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: checkcast     #34                 // class java/lang/Comparable
       4: aload_1
       5: invokeinterface #35,  2           // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I
      10: invokestatic  #13                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      13: areturn
}
