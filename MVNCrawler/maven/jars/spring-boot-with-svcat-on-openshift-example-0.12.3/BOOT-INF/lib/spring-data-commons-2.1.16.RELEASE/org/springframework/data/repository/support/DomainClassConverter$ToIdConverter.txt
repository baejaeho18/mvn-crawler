Compiled from "DomainClassConverter.java"
class org.springframework.data.repository.support.DomainClassConverter$ToIdConverter implements org.springframework.core.convert.converter.ConditionalGenericConverter {
  final org.springframework.data.repository.support.DomainClassConverter this$0;

  org.springframework.data.repository.support.DomainClassConverter$ToIdConverter(org.springframework.data.repository.support.DomainClassConverter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/springframework/data/repository/support/DomainClassConverter;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public java.util.Set<org.springframework.core.convert.converter.GenericConverter$ConvertiblePair> getConvertibleTypes();
    Code:
       0: new           #3                  // class org/springframework/core/convert/converter/GenericConverter$ConvertiblePair
       3: dup
       4: ldc           #4                  // class java/lang/Object
       6: ldc           #4                  // class java/lang/Object
       8: invokespecial #5                  // Method org/springframework/core/convert/converter/GenericConverter$ConvertiblePair."<init>":(Ljava/lang/Class;Ljava/lang/Class;)V
      11: invokestatic  #6                  // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
      14: areturn

  public java.lang.Object convert(java.lang.Object, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_1
       1: ifnull        14
       4: aload_1
       5: invokevirtual #7                  // Method java/lang/Object.toString:()Ljava/lang/String;
       8: invokestatic  #8                  // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      11: ifne          16
      14: aconst_null
      15: areturn
      16: aload_2
      17: aload_3
      18: invokevirtual #9                  // Method org/springframework/core/convert/TypeDescriptor.equals:(Ljava/lang/Object;)Z
      21: ifeq          26
      24: aload_1
      25: areturn
      26: aload_2
      27: invokevirtual #10                 // Method org/springframework/core/convert/TypeDescriptor.getType:()Ljava/lang/Class;
      30: astore        4
      32: aload_0
      33: getfield      #1                  // Field this$0:Lorg/springframework/data/repository/support/DomainClassConverter;
      36: invokestatic  #11                 // Method org/springframework/data/repository/support/DomainClassConverter.access$000:(Lorg/springframework/data/repository/support/DomainClassConverter;)Lorg/springframework/data/repository/support/Repositories;
      39: aload         4
      41: invokevirtual #12                 // Method org/springframework/data/repository/support/Repositories.getEntityInformationFor:(Ljava/lang/Class;)Lorg/springframework/data/repository/core/EntityInformation;
      44: astore        5
      46: aload_0
      47: getfield      #1                  // Field this$0:Lorg/springframework/data/repository/support/DomainClassConverter;
      50: invokestatic  #13                 // Method org/springframework/data/repository/support/DomainClassConverter.access$100:(Lorg/springframework/data/repository/support/DomainClassConverter;)Lorg/springframework/core/convert/ConversionService;
      53: aload         5
      55: aload_1
      56: invokeinterface #14,  2           // InterfaceMethod org/springframework/data/repository/core/EntityInformation.getId:(Ljava/lang/Object;)Ljava/lang/Object;
      61: aload_3
      62: invokevirtual #10                 // Method org/springframework/core/convert/TypeDescriptor.getType:()Ljava/lang/Class;
      65: invokeinterface #15,  3           // InterfaceMethod org/springframework/core/convert/ConversionService.convert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      70: areturn

  public boolean matches(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #16                 // Method org/springframework/core/convert/TypeDescriptor.isAssignableTo:(Lorg/springframework/core/convert/TypeDescriptor;)Z
       5: ifeq          10
       8: iconst_0
       9: ireturn
      10: aload_1
      11: invokevirtual #10                 // Method org/springframework/core/convert/TypeDescriptor.getType:()Ljava/lang/Class;
      14: astore_3
      15: aload_0
      16: getfield      #1                  // Field this$0:Lorg/springframework/data/repository/support/DomainClassConverter;
      19: invokestatic  #11                 // Method org/springframework/data/repository/support/DomainClassConverter.access$000:(Lorg/springframework/data/repository/support/DomainClassConverter;)Lorg/springframework/data/repository/support/Repositories;
      22: aload_3
      23: invokevirtual #17                 // Method org/springframework/data/repository/support/Repositories.hasRepositoryFor:(Ljava/lang/Class;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: getfield      #1                  // Field this$0:Lorg/springframework/data/repository/support/DomainClassConverter;
      35: invokestatic  #11                 // Method org/springframework/data/repository/support/DomainClassConverter.access$000:(Lorg/springframework/data/repository/support/DomainClassConverter;)Lorg/springframework/data/repository/support/Repositories;
      38: aload_3
      39: invokevirtual #18                 // Method org/springframework/data/repository/support/Repositories.getRepositoryInformationFor:(Ljava/lang/Class;)Ljava/util/Optional;
      42: astore        4
      44: aload         4
      46: aload_0
      47: aload_2
      48: invokedynamic #19,  0             // InvokeDynamic #0:apply:(Lorg/springframework/data/repository/support/DomainClassConverter$ToIdConverter;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/util/function/Function;
      53: invokevirtual #20                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      56: aload_3
      57: invokedynamic #21,  0             // InvokeDynamic #1:get:(Ljava/lang/Class;)Ljava/util/function/Supplier;
      62: invokevirtual #22                 // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      65: checkcast     #23                 // class java/lang/Boolean
      68: invokevirtual #24                 // Method java/lang/Boolean.booleanValue:()Z
      71: ireturn

  private static java.lang.IllegalStateException lambda$matches$1(java.lang.Class);
    Code:
       0: new           #25                 // class java/lang/IllegalStateException
       3: dup
       4: ldc           #26                 // String Couldn\'t find RepositoryInformation for %s!
       6: iconst_1
       7: anewarray     #4                  // class java/lang/Object
      10: dup
      11: iconst_0
      12: aload_0
      13: aastore
      14: invokestatic  #27                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      17: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      20: areturn

  private java.lang.Boolean lambda$matches$0(org.springframework.core.convert.TypeDescriptor, org.springframework.data.repository.core.RepositoryInformation);
    Code:
       0: aload_2
       1: invokeinterface #29,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryInformation.getIdType:()Ljava/lang/Class;
       6: astore_3
       7: aload_1
       8: aload_3
       9: invokestatic  #30                 // Method org/springframework/core/convert/TypeDescriptor.valueOf:(Ljava/lang/Class;)Lorg/springframework/core/convert/TypeDescriptor;
      12: invokevirtual #9                  // Method org/springframework/core/convert/TypeDescriptor.equals:(Ljava/lang/Object;)Z
      15: ifne          38
      18: aload_0
      19: getfield      #1                  // Field this$0:Lorg/springframework/data/repository/support/DomainClassConverter;
      22: invokestatic  #13                 // Method org/springframework/data/repository/support/DomainClassConverter.access$100:(Lorg/springframework/data/repository/support/DomainClassConverter;)Lorg/springframework/core/convert/ConversionService;
      25: aload_3
      26: aload_1
      27: invokevirtual #10                 // Method org/springframework/core/convert/TypeDescriptor.getType:()Ljava/lang/Class;
      30: invokeinterface #31,  3           // InterfaceMethod org/springframework/core/convert/ConversionService.canConvert:(Ljava/lang/Class;Ljava/lang/Class;)Z
      35: ifeq          42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: invokestatic  #32                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      46: areturn
}
