Compiled from "RepositoryBeanDefinitionBuilder.java"
class org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder {
  private static final org.slf4j.Logger LOGGER;

  private final org.springframework.beans.factory.support.BeanDefinitionRegistry registry;

  private final org.springframework.data.repository.config.RepositoryConfigurationExtension extension;

  private final org.springframework.core.io.ResourceLoader resourceLoader;

  private final org.springframework.core.type.classreading.MetadataReaderFactory metadataReaderFactory;

  private final org.springframework.data.repository.config.FragmentMetadata fragmentMetadata;

  private final org.springframework.data.repository.config.CustomRepositoryImplementationDetector implementationDetector;

  public org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder(org.springframework.beans.factory.support.BeanDefinitionRegistry, org.springframework.data.repository.config.RepositoryConfigurationExtension, org.springframework.data.repository.config.RepositoryConfigurationSource, org.springframework.core.io.ResourceLoader, org.springframework.core.env.Environment);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_2
       5: ldc           #2                  // String RepositoryConfigurationExtension must not be null!
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload         4
      12: ldc           #4                  // String ResourceLoader must not be null!
      14: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      17: aload         5
      19: ldc           #5                  // String Environment must not be null!
      21: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      24: aload_0
      25: aload_1
      26: putfield      #6                  // Field registry:Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;
      29: aload_0
      30: aload_2
      31: putfield      #7                  // Field extension:Lorg/springframework/data/repository/config/RepositoryConfigurationExtension;
      34: aload_0
      35: aload         4
      37: putfield      #8                  // Field resourceLoader:Lorg/springframework/core/io/ResourceLoader;
      40: aload_0
      41: new           #9                  // class org/springframework/core/type/classreading/CachingMetadataReaderFactory
      44: dup
      45: aload         4
      47: invokespecial #10                 // Method org/springframework/core/type/classreading/CachingMetadataReaderFactory."<init>":(Lorg/springframework/core/io/ResourceLoader;)V
      50: putfield      #11                 // Field metadataReaderFactory:Lorg/springframework/core/type/classreading/MetadataReaderFactory;
      53: aload_0
      54: new           #12                 // class org/springframework/data/repository/config/FragmentMetadata
      57: dup
      58: aload_0
      59: getfield      #11                 // Field metadataReaderFactory:Lorg/springframework/core/type/classreading/MetadataReaderFactory;
      62: invokespecial #13                 // Method org/springframework/data/repository/config/FragmentMetadata."<init>":(Lorg/springframework/core/type/classreading/MetadataReaderFactory;)V
      65: putfield      #14                 // Field fragmentMetadata:Lorg/springframework/data/repository/config/FragmentMetadata;
      68: aload_0
      69: new           #15                 // class org/springframework/data/repository/config/CustomRepositoryImplementationDetector
      72: dup
      73: aload         5
      75: aload         4
      77: aload_3
      78: aload_0
      79: getfield      #11                 // Field metadataReaderFactory:Lorg/springframework/core/type/classreading/MetadataReaderFactory;
      82: invokeinterface #16,  2           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfigurationSource.toImplementationDetectionConfiguration:(Lorg/springframework/core/type/classreading/MetadataReaderFactory;)Lorg/springframework/data/repository/config/ImplementationDetectionConfiguration;
      87: invokespecial #17                 // Method org/springframework/data/repository/config/CustomRepositoryImplementationDetector."<init>":(Lorg/springframework/core/env/Environment;Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/data/repository/config/ImplementationDetectionConfiguration;)V
      90: putfield      #18                 // Field implementationDetector:Lorg/springframework/data/repository/config/CustomRepositoryImplementationDetector;
      93: return

  public org.springframework.beans.factory.support.BeanDefinitionBuilder build(org.springframework.data.repository.config.RepositoryConfiguration<?>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field registry:Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;
       4: ldc           #19                 // String BeanDefinitionRegistry must not be null!
       6: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       9: aload_0
      10: getfield      #8                  // Field resourceLoader:Lorg/springframework/core/io/ResourceLoader;
      13: ldc           #4                  // String ResourceLoader must not be null!
      15: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_1
      19: invokeinterface #20,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.getRepositoryFactoryBeanClassName:()Ljava/lang/String;
      24: invokestatic  #21                 // Method org/springframework/beans/factory/support/BeanDefinitionBuilder.rootBeanDefinition:(Ljava/lang/String;)Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;
      27: astore_2
      28: aload_2
      29: invokevirtual #22                 // Method org/springframework/beans/factory/support/BeanDefinitionBuilder.getRawBeanDefinition:()Lorg/springframework/beans/factory/support/AbstractBeanDefinition;
      32: aload_1
      33: invokeinterface #23,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.getSource:()Ljava/lang/Object;
      38: invokevirtual #24                 // Method org/springframework/beans/factory/support/AbstractBeanDefinition.setSource:(Ljava/lang/Object;)V
      41: aload_2
      42: aload_1
      43: invokeinterface #25,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.getRepositoryInterface:()Ljava/lang/String;
      48: invokevirtual #26                 // Method org/springframework/beans/factory/support/BeanDefinitionBuilder.addConstructorArgValue:(Ljava/lang/Object;)Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;
      51: pop
      52: aload_2
      53: ldc           #27                 // String queryLookupStrategyKey
      55: aload_1
      56: invokeinterface #28,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.getQueryLookupStrategyKey:()Ljava/lang/Object;
      61: invokevirtual #29                 // Method org/springframework/beans/factory/support/BeanDefinitionBuilder.addPropertyValue:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;
      64: pop
      65: aload_2
      66: ldc           #30                 // String lazyInit
      68: aload_1
      69: invokeinterface #31,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.isLazyInit:()Z
      74: invokestatic  #32                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      77: invokevirtual #29                 // Method org/springframework/beans/factory/support/BeanDefinitionBuilder.addPropertyValue:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;
      80: pop
      81: aload_2
      82: aload_1
      83: invokeinterface #31,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.isLazyInit:()Z
      88: invokevirtual #33                 // Method org/springframework/beans/factory/support/BeanDefinitionBuilder.setLazyInit:(Z)Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;
      91: pop
      92: aload_1
      93: invokeinterface #34,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.getRepositoryBaseClassName:()Ljava/util/Optional;
      98: aload_2
      99: invokedynamic #35,  0             // InvokeDynamic #0:accept:(Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)Ljava/util/function/Consumer;
     104: invokevirtual #36                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
     107: new           #37                 // class org/springframework/data/repository/config/NamedQueriesBeanDefinitionBuilder
     110: dup
     111: aload_0
     112: getfield      #7                  // Field extension:Lorg/springframework/data/repository/config/RepositoryConfigurationExtension;
     115: invokeinterface #38,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfigurationExtension.getDefaultNamedQueryLocation:()Ljava/lang/String;
     120: invokespecial #39                 // Method org/springframework/data/repository/config/NamedQueriesBeanDefinitionBuilder."<init>":(Ljava/lang/String;)V
     123: astore_3
     124: aload_1
     125: invokeinterface #40,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.getNamedQueriesLocation:()Ljava/util/Optional;
     130: aload_3
     131: dup
     132: invokevirtual #41                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     135: pop
     136: invokedynamic #42,  0             // InvokeDynamic #1:accept:(Lorg/springframework/data/repository/config/NamedQueriesBeanDefinitionBuilder;)Ljava/util/function/Consumer;
     141: invokevirtual #36                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
     144: aload_2
     145: ldc           #43                 // String namedQueries
     147: aload_3
     148: aload_1
     149: invokeinterface #23,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.getSource:()Ljava/lang/Object;
     154: invokevirtual #44                 // Method org/springframework/data/repository/config/NamedQueriesBeanDefinitionBuilder.build:(Ljava/lang/Object;)Lorg/springframework/beans/factory/config/BeanDefinition;
     157: invokevirtual #29                 // Method org/springframework/beans/factory/support/BeanDefinitionBuilder.addPropertyValue:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;
     160: pop
     161: aload_0
     162: aload_1
     163: invokespecial #45                 // Method registerCustomImplementation:(Lorg/springframework/data/repository/config/RepositoryConfiguration;)Ljava/util/Optional;
     166: aload_2
     167: invokedynamic #46,  0             // InvokeDynamic #2:accept:(Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;)Ljava/util/function/Consumer;
     172: invokevirtual #36                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
     175: ldc           #47                 // class org/springframework/data/repository/core/support/RepositoryFragmentsFactoryBean
     177: invokestatic  #48                 // Method org/springframework/beans/factory/support/BeanDefinitionBuilder.rootBeanDefinition:(Ljava/lang/Class;)Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;
     180: astore        4
     182: aload_0
     183: aload_1
     184: invokespecial #49                 // Method registerRepositoryFragmentsImplementation:(Lorg/springframework/data/repository/config/RepositoryConfiguration;)Ljava/util/stream/Stream;
     187: invokedynamic #50,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
     192: invokeinterface #51,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     197: invokestatic  #52                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
     200: invokeinterface #53,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
     205: checkcast     #54                 // class java/util/List
     208: astore        5
     210: aload         4
     212: aload         5
     214: invokevirtual #26                 // Method org/springframework/beans/factory/support/BeanDefinitionBuilder.addConstructorArgValue:(Ljava/lang/Object;)Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;
     217: pop
     218: aload_2
     219: ldc           #55                 // String repositoryFragments
     221: aload         4
     223: aload_1
     224: invokeinterface #23,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.getSource:()Ljava/lang/Object;
     229: invokestatic  #56                 // Method org/springframework/data/config/ParsingUtils.getSourceBeanDefinition:(Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;Ljava/lang/Object;)Lorg/springframework/beans/factory/support/AbstractBeanDefinition;
     232: invokevirtual #29                 // Method org/springframework/beans/factory/support/BeanDefinitionBuilder.addPropertyValue:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;
     235: pop
     236: aload_2
     237: areturn

  private java.util.Optional<java.lang.String> registerCustomImplementation(org.springframework.data.repository.config.RepositoryConfiguration<?>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #11                 // Field metadataReaderFactory:Lorg/springframework/core/type/classreading/MetadataReaderFactory;
       5: invokeinterface #57,  2           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.toLookupConfiguration:(Lorg/springframework/core/type/classreading/MetadataReaderFactory;)Lorg/springframework/data/repository/config/ImplementationLookupConfiguration;
      10: astore_2
      11: aload_2
      12: invokeinterface #58,  1           // InterfaceMethod org/springframework/data/repository/config/ImplementationLookupConfiguration.getImplementationBeanName:()Ljava/lang/String;
      17: astore_3
      18: aload_0
      19: getfield      #6                  // Field registry:Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;
      22: aload_3
      23: invokeinterface #59,  2           // InterfaceMethod org/springframework/beans/factory/support/BeanDefinitionRegistry.containsBeanDefinition:(Ljava/lang/String;)Z
      28: ifeq          36
      31: aload_3
      32: invokestatic  #60                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      35: areturn
      36: aload_0
      37: getfield      #18                 // Field implementationDetector:Lorg/springframework/data/repository/config/CustomRepositoryImplementationDetector;
      40: aload_2
      41: invokevirtual #61                 // Method org/springframework/data/repository/config/CustomRepositoryImplementationDetector.detectCustomImplementation:(Lorg/springframework/data/repository/config/ImplementationLookupConfiguration;)Ljava/util/Optional;
      44: astore        4
      46: aload         4
      48: aload_0
      49: aload_2
      50: aload_1
      51: aload_3
      52: invokedynamic #62,  0             // InvokeDynamic #4:apply:(Lorg/springframework/data/repository/config/RepositoryBeanDefinitionBuilder;Lorg/springframework/data/repository/config/ImplementationLookupConfiguration;Lorg/springframework/data/repository/config/RepositoryConfiguration;Ljava/lang/String;)Ljava/util/function/Function;
      57: invokevirtual #63                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      60: areturn

  private java.util.stream.Stream<org.springframework.data.repository.config.RepositoryFragmentConfiguration> registerRepositoryFragmentsImplementation(org.springframework.data.repository.config.RepositoryConfiguration<?>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #11                 // Field metadataReaderFactory:Lorg/springframework/core/type/classreading/MetadataReaderFactory;
       5: invokeinterface #64,  2           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.toImplementationDetectionConfiguration:(Lorg/springframework/core/type/classreading/MetadataReaderFactory;)Lorg/springframework/data/repository/config/ImplementationDetectionConfiguration;
      10: astore_2
      11: aload_0
      12: getfield      #14                 // Field fragmentMetadata:Lorg/springframework/data/repository/config/FragmentMetadata;
      15: aload_1
      16: invokeinterface #25,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.getRepositoryInterface:()Ljava/lang/String;
      21: invokevirtual #65                 // Method org/springframework/data/repository/config/FragmentMetadata.getFragmentInterfaces:(Ljava/lang/String;)Ljava/util/stream/Stream;
      24: aload_0
      25: aload_2
      26: invokedynamic #66,  0             // InvokeDynamic #5:apply:(Lorg/springframework/data/repository/config/RepositoryBeanDefinitionBuilder;Lorg/springframework/data/repository/config/ImplementationDetectionConfiguration;)Ljava/util/function/Function;
      31: invokeinterface #51,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      36: invokedynamic #67,  0             // InvokeDynamic #6:apply:()Ljava/util/function/Function;
      41: invokeinterface #68,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      46: aload_0
      47: aload_1
      48: invokedynamic #69,  0             // InvokeDynamic #7:accept:(Lorg/springframework/data/repository/config/RepositoryBeanDefinitionBuilder;Lorg/springframework/data/repository/config/RepositoryConfiguration;)Ljava/util/function/Consumer;
      53: invokeinterface #70,  2           // InterfaceMethod java/util/stream/Stream.peek:(Ljava/util/function/Consumer;)Ljava/util/stream/Stream;
      58: aload_0
      59: aload_1
      60: invokedynamic #71,  0             // InvokeDynamic #8:accept:(Lorg/springframework/data/repository/config/RepositoryBeanDefinitionBuilder;Lorg/springframework/data/repository/config/RepositoryConfiguration;)Ljava/util/function/Consumer;
      65: invokeinterface #70,  2           // InterfaceMethod java/util/stream/Stream.peek:(Ljava/util/function/Consumer;)Ljava/util/stream/Stream;
      70: areturn

  private java.util.Optional<org.springframework.data.repository.config.RepositoryFragmentConfiguration> detectRepositoryFragmentConfiguration(java.lang.String, org.springframework.data.repository.config.ImplementationDetectionConfiguration);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #72,  2           // InterfaceMethod org/springframework/data/repository/config/ImplementationDetectionConfiguration.forFragment:(Ljava/lang/String;)Lorg/springframework/data/repository/config/ImplementationLookupConfiguration;
       7: astore_3
       8: aload_0
       9: getfield      #18                 // Field implementationDetector:Lorg/springframework/data/repository/config/CustomRepositoryImplementationDetector;
      12: aload_3
      13: invokevirtual #61                 // Method org/springframework/data/repository/config/CustomRepositoryImplementationDetector.detectCustomImplementation:(Lorg/springframework/data/repository/config/ImplementationLookupConfiguration;)Ljava/util/Optional;
      16: astore        4
      18: aload         4
      20: aload_1
      21: invokedynamic #73,  0             // InvokeDynamic #9:apply:(Ljava/lang/String;)Ljava/util/function/Function;
      26: invokevirtual #63                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      29: areturn

  private void potentiallyRegisterFragmentImplementation(org.springframework.data.repository.config.RepositoryConfiguration<?>, org.springframework.data.repository.config.RepositoryFragmentConfiguration);
    Code:
       0: aload_2
       1: invokevirtual #74                 // Method org/springframework/data/repository/config/RepositoryFragmentConfiguration.getImplementationBeanName:()Ljava/lang/String;
       4: astore_3
       5: aload_0
       6: getfield      #6                  // Field registry:Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;
       9: aload_3
      10: invokeinterface #59,  2           // InterfaceMethod org/springframework/beans/factory/support/BeanDefinitionRegistry.containsBeanDefinition:(Ljava/lang/String;)Z
      15: ifeq          19
      18: return
      19: getstatic     #75                 // Field LOGGER:Lorg/slf4j/Logger;
      22: invokeinterface #76,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      27: ifeq          58
      30: getstatic     #75                 // Field LOGGER:Lorg/slf4j/Logger;
      33: ldc           #77                 // String Registering repository fragment implementation: %s %s
      35: iconst_2
      36: anewarray     #78                 // class java/lang/Object
      39: dup
      40: iconst_0
      41: aload_3
      42: aastore
      43: dup
      44: iconst_1
      45: aload_2
      46: invokevirtual #79                 // Method org/springframework/data/repository/config/RepositoryFragmentConfiguration.getClassName:()Ljava/lang/String;
      49: aastore
      50: invokestatic  #80                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      53: invokeinterface #81,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      58: aload_2
      59: invokevirtual #82                 // Method org/springframework/data/repository/config/RepositoryFragmentConfiguration.getBeanDefinition:()Ljava/util/Optional;
      62: aload_0
      63: aload_1
      64: aload_3
      65: invokedynamic #83,  0             // InvokeDynamic #10:accept:(Lorg/springframework/data/repository/config/RepositoryBeanDefinitionBuilder;Lorg/springframework/data/repository/config/RepositoryConfiguration;Ljava/lang/String;)Ljava/util/function/Consumer;
      70: invokevirtual #36                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      73: return

  private void potentiallyRegisterRepositoryFragment(org.springframework.data.repository.config.RepositoryConfiguration<?>, org.springframework.data.repository.config.RepositoryFragmentConfiguration);
    Code:
       0: aload_2
       1: invokevirtual #84                 // Method org/springframework/data/repository/config/RepositoryFragmentConfiguration.getFragmentBeanName:()Ljava/lang/String;
       4: astore_3
       5: aload_0
       6: getfield      #6                  // Field registry:Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;
       9: aload_3
      10: invokeinterface #59,  2           // InterfaceMethod org/springframework/beans/factory/support/BeanDefinitionRegistry.containsBeanDefinition:(Ljava/lang/String;)Z
      15: ifeq          19
      18: return
      19: getstatic     #75                 // Field LOGGER:Lorg/slf4j/Logger;
      22: invokeinterface #76,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      27: ifeq          57
      30: getstatic     #75                 // Field LOGGER:Lorg/slf4j/Logger;
      33: new           #85                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #86                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #87                 // String Registering repository fragment:
      42: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_3
      46: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #89                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokeinterface #81,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      57: ldc           #90                 // class org/springframework/data/repository/core/support/RepositoryFragment
      59: ldc           #91                 // String implemented
      61: invokestatic  #92                 // Method org/springframework/beans/factory/support/BeanDefinitionBuilder.rootBeanDefinition:(Ljava/lang/Class;Ljava/lang/String;)Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;
      64: astore        4
      66: aload         4
      68: aload_2
      69: invokevirtual #93                 // Method org/springframework/data/repository/config/RepositoryFragmentConfiguration.getInterfaceName:()Ljava/lang/String;
      72: invokevirtual #26                 // Method org/springframework/beans/factory/support/BeanDefinitionBuilder.addConstructorArgValue:(Ljava/lang/Object;)Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;
      75: pop
      76: aload         4
      78: aload_2
      79: invokevirtual #74                 // Method org/springframework/data/repository/config/RepositoryFragmentConfiguration.getImplementationBeanName:()Ljava/lang/String;
      82: invokevirtual #94                 // Method org/springframework/beans/factory/support/BeanDefinitionBuilder.addConstructorArgReference:(Ljava/lang/String;)Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;
      85: pop
      86: aload_0
      87: getfield      #6                  // Field registry:Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;
      90: aload_3
      91: aload         4
      93: aload_1
      94: invokeinterface #23,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.getSource:()Ljava/lang/Object;
      99: invokestatic  #56                 // Method org/springframework/data/config/ParsingUtils.getSourceBeanDefinition:(Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;Ljava/lang/Object;)Lorg/springframework/beans/factory/support/AbstractBeanDefinition;
     102: invokeinterface #95,  3           // InterfaceMethod org/springframework/beans/factory/support/BeanDefinitionRegistry.registerBeanDefinition:(Ljava/lang/String;Lorg/springframework/beans/factory/config/BeanDefinition;)V
     107: return

  private void lambda$potentiallyRegisterFragmentImplementation$8(org.springframework.data.repository.config.RepositoryConfiguration, java.lang.String, org.springframework.beans.factory.support.AbstractBeanDefinition);
    Code:
       0: aload_3
       1: aload_1
       2: invokeinterface #23,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.getSource:()Ljava/lang/Object;
       7: invokevirtual #24                 // Method org/springframework/beans/factory/support/AbstractBeanDefinition.setSource:(Ljava/lang/Object;)V
      10: aload_0
      11: getfield      #6                  // Field registry:Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;
      14: aload_2
      15: aload_3
      16: invokeinterface #95,  3           // InterfaceMethod org/springframework/beans/factory/support/BeanDefinitionRegistry.registerBeanDefinition:(Ljava/lang/String;Lorg/springframework/beans/factory/config/BeanDefinition;)V
      21: return

  private static org.springframework.data.repository.config.RepositoryFragmentConfiguration lambda$detectRepositoryFragmentConfiguration$7(java.lang.String, org.springframework.beans.factory.support.AbstractBeanDefinition);
    Code:
       0: new           #96                 // class org/springframework/data/repository/config/RepositoryFragmentConfiguration
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #97                 // Method org/springframework/data/repository/config/RepositoryFragmentConfiguration."<init>":(Ljava/lang/String;Lorg/springframework/beans/factory/support/AbstractBeanDefinition;)V
       9: areturn

  private void lambda$registerRepositoryFragmentsImplementation$6(org.springframework.data.repository.config.RepositoryConfiguration, org.springframework.data.repository.config.RepositoryFragmentConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #98                 // Method potentiallyRegisterRepositoryFragment:(Lorg/springframework/data/repository/config/RepositoryConfiguration;Lorg/springframework/data/repository/config/RepositoryFragmentConfiguration;)V
       6: return

  private void lambda$registerRepositoryFragmentsImplementation$5(org.springframework.data.repository.config.RepositoryConfiguration, org.springframework.data.repository.config.RepositoryFragmentConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #99                 // Method potentiallyRegisterFragmentImplementation:(Lorg/springframework/data/repository/config/RepositoryConfiguration;Lorg/springframework/data/repository/config/RepositoryFragmentConfiguration;)V
       6: return

  private static java.util.stream.Stream lambda$registerRepositoryFragmentsImplementation$4(java.util.Optional);
    Code:
       0: iconst_1
       1: anewarray     #100                // class java/util/Optional
       4: dup
       5: iconst_0
       6: aload_0
       7: aastore
       8: invokestatic  #101                // InterfaceMethod org/springframework/data/util/Optionals.toStream:([Ljava/util/Optional;)Ljava/util/stream/Stream;
      11: areturn

  private java.util.Optional lambda$registerRepositoryFragmentsImplementation$3(org.springframework.data.repository.config.ImplementationDetectionConfiguration, java.lang.String);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokespecial #102                // Method detectRepositoryFragmentConfiguration:(Ljava/lang/String;Lorg/springframework/data/repository/config/ImplementationDetectionConfiguration;)Ljava/util/Optional;
       6: areturn

  private java.lang.String lambda$registerCustomImplementation$2(org.springframework.data.repository.config.ImplementationLookupConfiguration, org.springframework.data.repository.config.RepositoryConfiguration, java.lang.String, org.springframework.beans.factory.support.AbstractBeanDefinition);
    Code:
       0: getstatic     #75                 // Field LOGGER:Lorg/slf4j/Logger;
       3: invokeinterface #76,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
       8: ifeq          56
      11: getstatic     #75                 // Field LOGGER:Lorg/slf4j/Logger;
      14: new           #85                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #86                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #103                // String Registering custom repository implementation:
      23: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_1
      27: invokeinterface #58,  1           // InterfaceMethod org/springframework/data/repository/config/ImplementationLookupConfiguration.getImplementationBeanName:()Ljava/lang/String;
      32: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #104                // String
      37: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload         4
      42: invokevirtual #105                // Method org/springframework/beans/factory/support/AbstractBeanDefinition.getBeanClassName:()Ljava/lang/String;
      45: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #89                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokeinterface #81,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      56: aload         4
      58: aload_2
      59: invokeinterface #23,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.getSource:()Ljava/lang/Object;
      64: invokevirtual #24                 // Method org/springframework/beans/factory/support/AbstractBeanDefinition.setSource:(Ljava/lang/Object;)V
      67: aload_0
      68: getfield      #6                  // Field registry:Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;
      71: aload_3
      72: aload         4
      74: invokeinterface #95,  3           // InterfaceMethod org/springframework/beans/factory/support/BeanDefinitionRegistry.registerBeanDefinition:(Ljava/lang/String;Lorg/springframework/beans/factory/config/BeanDefinition;)V
      79: aload_3
      80: areturn

  private static void lambda$build$1(org.springframework.beans.factory.support.BeanDefinitionBuilder, java.lang.String);
    Code:
       0: aload_0
       1: ldc           #106                // String customImplementation
       3: aload_1
       4: invokevirtual #107                // Method org/springframework/beans/factory/support/BeanDefinitionBuilder.addPropertyReference:(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;
       7: pop
       8: aload_0
       9: aload_1
      10: invokevirtual #108                // Method org/springframework/beans/factory/support/BeanDefinitionBuilder.addDependsOn:(Ljava/lang/String;)Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;
      13: pop
      14: return

  private static void lambda$build$0(org.springframework.beans.factory.support.BeanDefinitionBuilder, java.lang.String);
    Code:
       0: aload_0
       1: ldc           #109                // String repositoryBaseClass
       3: aload_1
       4: invokevirtual #29                 // Method org/springframework/beans/factory/support/BeanDefinitionBuilder.addPropertyValue:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/beans/factory/support/BeanDefinitionBuilder;
       7: pop
       8: return

  static {};
    Code:
       0: ldc           #110                // class org/springframework/data/repository/config/RepositoryBeanDefinitionBuilder
       2: invokestatic  #111                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #75                 // Field LOGGER:Lorg/slf4j/Logger;
       8: return
}
