Compiled from "Slice.java"
public interface org.springframework.data.domain.Slice<T> extends org.springframework.data.util.Streamable<T> {
  public abstract int getNumber();

  public abstract int getSize();

  public abstract int getNumberOfElements();

  public abstract java.util.List<T> getContent();

  public abstract boolean hasContent();

  public abstract org.springframework.data.domain.Sort getSort();

  public abstract boolean isFirst();

  public abstract boolean isLast();

  public abstract boolean hasNext();

  public abstract boolean hasPrevious();

  public default org.springframework.data.domain.Pageable getPageable();
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod getNumber:()I
       6: aload_0
       7: invokeinterface #2,  1            // InterfaceMethod getSize:()I
      12: aload_0
      13: invokeinterface #3,  1            // InterfaceMethod getSort:()Lorg/springframework/data/domain/Sort;
      18: invokestatic  #4                  // Method org/springframework/data/domain/PageRequest.of:(IILorg/springframework/data/domain/Sort;)Lorg/springframework/data/domain/PageRequest;
      21: areturn

  public abstract org.springframework.data.domain.Pageable nextPageable();

  public abstract org.springframework.data.domain.Pageable previousPageable();

  public abstract <U> org.springframework.data.domain.Slice<U> map(java.util.function.Function<? super T, ? extends U>);

  public default org.springframework.data.util.Streamable map(java.util.function.Function);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #5,  2            // InterfaceMethod map:(Ljava/util/function/Function;)Lorg/springframework/data/domain/Slice;
       7: areturn
}
