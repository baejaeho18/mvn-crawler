Compiled from "DomainClassConverter.java"
public class org.springframework.data.repository.support.DomainClassConverter<T extends org.springframework.core.convert.ConversionService & org.springframework.core.convert.converter.ConverterRegistry> implements org.springframework.core.convert.converter.ConditionalGenericConverter, org.springframework.context.ApplicationContextAware {
  private final T conversionService;

  private org.springframework.data.repository.support.Repositories repositories;

  private java.util.Optional<org.springframework.data.repository.support.DomainClassConverter<T>.ToEntityConverter> toEntityConverter;

  private java.util.Optional<org.springframework.data.repository.support.DomainClassConverter<T>.ToIdConverter> toIdConverter;

  public org.springframework.data.repository.support.DomainClassConverter(T);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #4                  // Field org/springframework/data/repository/support/Repositories.NONE:Lorg/springframework/data/repository/support/Repositories;
       8: putfield      #2                  // Field repositories:Lorg/springframework/data/repository/support/Repositories;
      11: aload_0
      12: invokestatic  #5                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      15: putfield      #6                  // Field toEntityConverter:Ljava/util/Optional;
      18: aload_0
      19: invokestatic  #5                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      22: putfield      #7                  // Field toIdConverter:Ljava/util/Optional;
      25: aload_1
      26: ldc           #8                  // String ConversionService must not be null!
      28: invokestatic  #9                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      31: aload_0
      32: aload_1
      33: putfield      #1                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      36: return

  public java.util.Set<org.springframework.core.convert.converter.GenericConverter$ConvertiblePair> getConvertibleTypes();
    Code:
       0: new           #10                 // class org/springframework/core/convert/converter/GenericConverter$ConvertiblePair
       3: dup
       4: ldc           #11                 // class java/lang/Object
       6: ldc           #11                 // class java/lang/Object
       8: invokespecial #12                 // Method org/springframework/core/convert/converter/GenericConverter$ConvertiblePair."<init>":(Ljava/lang/Class;Ljava/lang/Class;)V
      11: invokestatic  #13                 // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
      14: areturn

  public java.lang.Object convert(java.lang.Object, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_0
       1: aload_3
       2: invokespecial #14                 // Method getConverter:(Lorg/springframework/core/convert/TypeDescriptor;)Ljava/util/Optional;
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokedynamic #15,  0             // InvokeDynamic #0:apply:(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/util/function/Function;
      13: invokevirtual #16                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      16: aload_1
      17: invokevirtual #17                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      20: areturn

  public boolean matches(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #14                 // Method getConverter:(Lorg/springframework/core/convert/TypeDescriptor;)Ljava/util/Optional;
       5: aload_1
       6: aload_2
       7: invokedynamic #18,  0             // InvokeDynamic #1:apply:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/util/function/Function;
      12: invokevirtual #16                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      15: iconst_0
      16: invokestatic  #19                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      19: invokevirtual #17                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #20                 // class java/lang/Boolean
      25: invokevirtual #21                 // Method java/lang/Boolean.booleanValue:()Z
      28: ireturn

  private java.util.Optional<? extends org.springframework.core.convert.converter.ConditionalGenericConverter> getConverter(org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_0
       1: getfield      #2                  // Field repositories:Lorg/springframework/data/repository/support/Repositories;
       4: aload_1
       5: invokevirtual #22                 // Method org/springframework/core/convert/TypeDescriptor.getType:()Ljava/lang/Class;
       8: invokevirtual #23                 // Method org/springframework/data/repository/support/Repositories.hasRepositoryFor:(Ljava/lang/Class;)Z
      11: ifeq          21
      14: aload_0
      15: getfield      #6                  // Field toEntityConverter:Ljava/util/Optional;
      18: goto          25
      21: aload_0
      22: getfield      #7                  // Field toIdConverter:Ljava/util/Optional;
      25: areturn

  public void setApplicationContext(org.springframework.context.ApplicationContext);
    Code:
       0: aload_0
       1: new           #24                 // class org/springframework/data/repository/support/Repositories
       4: dup
       5: aload_1
       6: invokespecial #25                 // Method org/springframework/data/repository/support/Repositories."<init>":(Lorg/springframework/beans/factory/ListableBeanFactory;)V
       9: putfield      #2                  // Field repositories:Lorg/springframework/data/repository/support/Repositories;
      12: aload_0
      13: new           #26                 // class org/springframework/data/repository/support/DomainClassConverter$ToEntityConverter
      16: dup
      17: aload_0
      18: aload_0
      19: getfield      #2                  // Field repositories:Lorg/springframework/data/repository/support/Repositories;
      22: aload_0
      23: getfield      #1                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      26: invokespecial #27                 // Method org/springframework/data/repository/support/DomainClassConverter$ToEntityConverter."<init>":(Lorg/springframework/data/repository/support/DomainClassConverter;Lorg/springframework/data/repository/support/Repositories;Lorg/springframework/core/convert/ConversionService;)V
      29: invokestatic  #28                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      32: putfield      #6                  // Field toEntityConverter:Ljava/util/Optional;
      35: aload_0
      36: getfield      #6                  // Field toEntityConverter:Ljava/util/Optional;
      39: aload_0
      40: invokedynamic #29,  0             // InvokeDynamic #2:accept:(Lorg/springframework/data/repository/support/DomainClassConverter;)Ljava/util/function/Consumer;
      45: invokevirtual #30                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      48: aload_0
      49: new           #31                 // class org/springframework/data/repository/support/DomainClassConverter$ToIdConverter
      52: dup
      53: aload_0
      54: invokespecial #32                 // Method org/springframework/data/repository/support/DomainClassConverter$ToIdConverter."<init>":(Lorg/springframework/data/repository/support/DomainClassConverter;)V
      57: invokestatic  #28                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      60: putfield      #7                  // Field toIdConverter:Ljava/util/Optional;
      63: aload_0
      64: getfield      #7                  // Field toIdConverter:Ljava/util/Optional;
      67: aload_0
      68: invokedynamic #33,  0             // InvokeDynamic #3:accept:(Lorg/springframework/data/repository/support/DomainClassConverter;)Ljava/util/function/Consumer;
      73: invokevirtual #30                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      76: return

  private void lambda$setApplicationContext$3(org.springframework.data.repository.support.DomainClassConverter$ToIdConverter);
    Code:
       0: aload_0
       1: getfield      #1                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
       4: checkcast     #34                 // class org/springframework/core/convert/converter/ConverterRegistry
       7: aload_1
       8: invokeinterface #35,  2           // InterfaceMethod org/springframework/core/convert/converter/ConverterRegistry.addConverter:(Lorg/springframework/core/convert/converter/GenericConverter;)V
      13: return

  private void lambda$setApplicationContext$2(org.springframework.data.repository.support.DomainClassConverter$ToEntityConverter);
    Code:
       0: aload_0
       1: getfield      #1                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
       4: checkcast     #34                 // class org/springframework/core/convert/converter/ConverterRegistry
       7: aload_1
       8: invokeinterface #35,  2           // InterfaceMethod org/springframework/core/convert/converter/ConverterRegistry.addConverter:(Lorg/springframework/core/convert/converter/GenericConverter;)V
      13: return

  private static java.lang.Boolean lambda$matches$1(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.converter.ConditionalGenericConverter);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokeinterface #36,  3           // InterfaceMethod org/springframework/core/convert/converter/ConditionalGenericConverter.matches:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z
       8: invokestatic  #19                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      11: areturn

  private static java.lang.Object lambda$convert$0(java.lang.Object, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.converter.ConditionalGenericConverter);
    Code:
       0: aload_3
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokeinterface #37,  4           // InterfaceMethod org/springframework/core/convert/converter/ConditionalGenericConverter.convert:(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;
       9: areturn

  static org.springframework.data.repository.support.Repositories access$000(org.springframework.data.repository.support.DomainClassConverter);
    Code:
       0: aload_0
       1: getfield      #2                  // Field repositories:Lorg/springframework/data/repository/support/Repositories;
       4: areturn

  static org.springframework.core.convert.ConversionService access$100(org.springframework.data.repository.support.DomainClassConverter);
    Code:
       0: aload_0
       1: getfield      #1                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
       4: areturn
}
