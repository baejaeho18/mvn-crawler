Compiled from "SliceImpl.java"
public class org.springframework.data.domain.SliceImpl<T> extends org.springframework.data.domain.Chunk<T> {
  private static final long serialVersionUID;

  private final boolean hasNext;

  private final org.springframework.data.domain.Pageable pageable;

  public org.springframework.data.domain.SliceImpl(java.util.List<T>, org.springframework.data.domain.Pageable, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/springframework/data/domain/Chunk."<init>":(Ljava/util/List;Lorg/springframework/data/domain/Pageable;)V
       6: aload_0
       7: iload_3
       8: putfield      #2                  // Field hasNext:Z
      11: aload_0
      12: aload_2
      13: putfield      #3                  // Field pageable:Lorg/springframework/data/domain/Pageable;
      16: return

  public org.springframework.data.domain.SliceImpl(java.util.List<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #4                  // InterfaceMethod org/springframework/data/domain/Pageable.unpaged:()Lorg/springframework/data/domain/Pageable;
       5: iconst_0
       6: invokespecial #5                  // Method "<init>":(Ljava/util/List;Lorg/springframework/data/domain/Pageable;Z)V
       9: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field hasNext:Z
       4: ireturn

  public <U> org.springframework.data.domain.Slice<U> map(java.util.function.Function<? super T, ? extends U>);
    Code:
       0: new           #6                  // class org/springframework/data/domain/SliceImpl
       3: dup
       4: aload_0
       5: aload_1
       6: invokevirtual #7                  // Method getConvertedContent:(Ljava/util/function/Function;)Ljava/util/List;
       9: aload_0
      10: getfield      #3                  // Field pageable:Lorg/springframework/data/domain/Pageable;
      13: aload_0
      14: getfield      #2                  // Field hasNext:Z
      17: invokespecial #5                  // Method "<init>":(Ljava/util/List;Lorg/springframework/data/domain/Pageable;Z)V
      20: areturn

  public java.lang.String toString();
    Code:
       0: ldc           #8                  // String UNKNOWN
       2: astore_1
       3: aload_0
       4: invokevirtual #9                  // Method getContent:()Ljava/util/List;
       7: astore_2
       8: aload_2
       9: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
      14: ifle          31
      17: aload_2
      18: iconst_0
      19: invokeinterface #11,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      24: invokevirtual #12                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: invokevirtual #13                 // Method java/lang/Class.getName:()Ljava/lang/String;
      30: astore_1
      31: ldc           #14                 // String Slice %d containing %s instances
      33: iconst_2
      34: anewarray     #15                 // class java/lang/Object
      37: dup
      38: iconst_0
      39: aload_0
      40: invokevirtual #16                 // Method getNumber:()I
      43: invokestatic  #17                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      46: aastore
      47: dup
      48: iconst_1
      49: aload_1
      50: aastore
      51: invokestatic  #18                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      54: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #6                  // class org/springframework/data/domain/SliceImpl
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #6                  // class org/springframework/data/domain/SliceImpl
      20: astore_2
      21: aload_0
      22: getfield      #2                  // Field hasNext:Z
      25: aload_2
      26: getfield      #2                  // Field hasNext:Z
      29: if_icmpne     44
      32: aload_0
      33: aload_1
      34: invokespecial #19                 // Method org/springframework/data/domain/Chunk.equals:(Ljava/lang/Object;)Z
      37: ifeq          44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: ireturn

  public int hashCode();
    Code:
       0: bipush        17
       2: istore_1
       3: iload_1
       4: bipush        31
       6: aload_0
       7: getfield      #2                  // Field hasNext:Z
      10: ifeq          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: imul
      19: iadd
      20: istore_1
      21: iload_1
      22: bipush        31
      24: aload_0
      25: invokespecial #20                 // Method org/springframework/data/domain/Chunk.hashCode:()I
      28: imul
      29: iadd
      30: istore_1
      31: iload_1
      32: ireturn

  public org.springframework.data.domain.Pageable getPageable();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method org/springframework/data/domain/Chunk.getPageable:()Lorg/springframework/data/domain/Pageable;
       4: areturn

  public java.util.Iterator iterator();
    Code:
       0: aload_0
       1: invokespecial #22                 // Method org/springframework/data/domain/Chunk.iterator:()Ljava/util/Iterator;
       4: areturn

  public org.springframework.data.domain.Sort getSort();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method org/springframework/data/domain/Chunk.getSort:()Lorg/springframework/data/domain/Sort;
       4: areturn

  public java.util.List getContent();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method org/springframework/data/domain/Chunk.getContent:()Ljava/util/List;
       4: areturn

  public boolean hasContent();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method org/springframework/data/domain/Chunk.hasContent:()Z
       4: ireturn

  public org.springframework.data.domain.Pageable previousPageable();
    Code:
       0: aload_0
       1: invokespecial #26                 // Method org/springframework/data/domain/Chunk.previousPageable:()Lorg/springframework/data/domain/Pageable;
       4: areturn

  public org.springframework.data.domain.Pageable nextPageable();
    Code:
       0: aload_0
       1: invokespecial #27                 // Method org/springframework/data/domain/Chunk.nextPageable:()Lorg/springframework/data/domain/Pageable;
       4: areturn

  public boolean isLast();
    Code:
       0: aload_0
       1: invokespecial #28                 // Method org/springframework/data/domain/Chunk.isLast:()Z
       4: ireturn

  public boolean isFirst();
    Code:
       0: aload_0
       1: invokespecial #29                 // Method org/springframework/data/domain/Chunk.isFirst:()Z
       4: ireturn

  public boolean hasPrevious();
    Code:
       0: aload_0
       1: invokespecial #30                 // Method org/springframework/data/domain/Chunk.hasPrevious:()Z
       4: ireturn

  public int getNumberOfElements();
    Code:
       0: aload_0
       1: invokespecial #31                 // Method org/springframework/data/domain/Chunk.getNumberOfElements:()I
       4: ireturn

  public int getSize();
    Code:
       0: aload_0
       1: invokespecial #32                 // Method org/springframework/data/domain/Chunk.getSize:()I
       4: ireturn

  public int getNumber();
    Code:
       0: aload_0
       1: invokespecial #33                 // Method org/springframework/data/domain/Chunk.getNumber:()I
       4: ireturn

  public org.springframework.data.util.Streamable map(java.util.function.Function);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #34                 // Method map:(Ljava/util/function/Function;)Lorg/springframework/data/domain/Slice;
       5: areturn
}
