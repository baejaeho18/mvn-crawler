Compiled from "RepositoryConfigurationExtensionSupport.java"
public abstract class org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport implements org.springframework.data.repository.config.RepositoryConfigurationExtension {
  private static final org.slf4j.Logger LOGGER;

  private static final java.lang.String CLASS_LOADING_ERROR;

  private static final java.lang.String MULTI_STORE_DROPPED;

  private boolean noMultiStoreSupport;

  public org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #3                  // Field noMultiStoreSupport:Z
       9: return

  public java.lang.String getModuleName();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getModulePrefix:()Ljava/lang/String;
       4: invokestatic  #5                  // Method org/springframework/util/StringUtils.capitalize:(Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public <T extends org.springframework.data.repository.config.RepositoryConfigurationSource> java.util.Collection<org.springframework.data.repository.config.RepositoryConfiguration<T>> getRepositoryConfigurations(T, org.springframework.core.io.ResourceLoader);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokevirtual #6                  // Method getRepositoryConfigurations:(Lorg/springframework/data/repository/config/RepositoryConfigurationSource;Lorg/springframework/core/io/ResourceLoader;Z)Ljava/util/Collection;
       7: areturn

  public <T extends org.springframework.data.repository.config.RepositoryConfigurationSource> java.util.Collection<org.springframework.data.repository.config.RepositoryConfiguration<T>> getRepositoryConfigurations(T, org.springframework.core.io.ResourceLoader, boolean);
    Code:
       0: aload_1
       1: ldc           #7                  // String ConfigSource must not be null!
       3: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #9                  // String Loader must not be null!
       9: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: new           #10                 // class java/util/HashSet
      15: dup
      16: invokespecial #11                 // Method java/util/HashSet."<init>":()V
      19: astore        4
      21: aload_1
      22: aload_2
      23: invokeinterface #12,  2           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfigurationSource.getCandidates:(Lorg/springframework/core/io/ResourceLoader;)Lorg/springframework/data/util/Streamable;
      28: invokeinterface #13,  1           // InterfaceMethod org/springframework/data/util/Streamable.iterator:()Ljava/util/Iterator;
      33: astore        5
      35: aload         5
      37: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      42: ifeq          160
      45: aload         5
      47: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      52: checkcast     #16                 // class org/springframework/beans/factory/config/BeanDefinition
      55: astore        6
      57: aload_0
      58: aload         6
      60: aload_1
      61: invokevirtual #17                 // Method getRepositoryConfiguration:(Lorg/springframework/beans/factory/config/BeanDefinition;Lorg/springframework/data/repository/config/RepositoryConfigurationSource;)Lorg/springframework/data/repository/config/RepositoryConfiguration;
      64: astore        7
      66: aload_0
      67: aload         7
      69: aload_0
      70: aload_2
      71: invokevirtual #18                 // Method getConfigurationInspectionClassLoader:(Lorg/springframework/core/io/ResourceLoader;)Ljava/lang/ClassLoader;
      74: invokespecial #19                 // Method loadRepositoryInterface:(Lorg/springframework/data/repository/config/RepositoryConfiguration;Ljava/lang/ClassLoader;)Ljava/lang/Class;
      77: astore        8
      79: aload         8
      81: ifnonnull     97
      84: aload         4
      86: aload         7
      88: invokeinterface #20,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      93: pop
      94: goto          35
      97: aload         8
      99: invokestatic  #21                 // Method org/springframework/data/repository/core/support/AbstractRepositoryMetadata.getMetadata:(Ljava/lang/Class;)Lorg/springframework/data/repository/core/RepositoryMetadata;
     102: astore        9
     104: iload_3
     105: ifeq          126
     108: aload_1
     109: invokeinterface #22,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfigurationSource.usesExplicitFilters:()Z
     114: ifne          126
     117: aload_0
     118: aload         9
     120: invokevirtual #23                 // Method isStrictRepositoryCandidate:(Lorg/springframework/data/repository/core/RepositoryMetadata;)Z
     123: ifeq          130
     126: iconst_1
     127: goto          131
     130: iconst_0
     131: istore        10
     133: iload         10
     135: ifeq          157
     138: aload_0
     139: aload         9
     141: invokevirtual #24                 // Method useRepositoryConfiguration:(Lorg/springframework/data/repository/core/RepositoryMetadata;)Z
     144: ifeq          157
     147: aload         4
     149: aload         7
     151: invokeinterface #20,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     156: pop
     157: goto          35
     160: aload         4
     162: areturn

  public java.lang.String getDefaultNamedQueryLocation();
    Code:
       0: ldc           #25                 // String classpath*:META-INF/%s-named-queries.properties
       2: iconst_1
       3: anewarray     #26                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: invokevirtual #4                  // Method getModulePrefix:()Ljava/lang/String;
      12: aastore
      13: invokestatic  #27                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      16: areturn

  public void registerBeansForRoot(org.springframework.beans.factory.support.BeanDefinitionRegistry, org.springframework.data.repository.config.RepositoryConfigurationSource);
    Code:
       0: return

  protected abstract java.lang.String getModulePrefix();

  public void postProcess(org.springframework.beans.factory.support.BeanDefinitionBuilder, org.springframework.data.repository.config.RepositoryConfigurationSource);
    Code:
       0: return

  public void postProcess(org.springframework.beans.factory.support.BeanDefinitionBuilder, org.springframework.data.repository.config.AnnotationRepositoryConfigurationSource);
    Code:
       0: return

  public void postProcess(org.springframework.beans.factory.support.BeanDefinitionBuilder, org.springframework.data.repository.config.XmlRepositoryConfigurationSource);
    Code:
       0: return

  protected java.util.Collection<java.lang.Class<? extends java.lang.annotation.Annotation>> getIdentifyingAnnotations();
    Code:
       0: invokestatic  #28                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
       3: areturn

  protected java.util.Collection<java.lang.Class<?>> getIdentifyingTypes();
    Code:
       0: invokestatic  #28                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
       3: areturn

  protected java.lang.ClassLoader getConfigurationInspectionClassLoader(org.springframework.core.io.ResourceLoader);
    Code:
       0: aload_1
       1: invokeinterface #29,  1           // InterfaceMethod org/springframework/core/io/ResourceLoader.getClassLoader:()Ljava/lang/ClassLoader;
       6: areturn

  public static java.lang.String registerWithSourceAndGeneratedBeanName(org.springframework.beans.factory.support.BeanDefinitionRegistry, org.springframework.beans.factory.support.AbstractBeanDefinition, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #30                 // Method org/springframework/beans/factory/support/AbstractBeanDefinition.setSource:(Ljava/lang/Object;)V
       5: aload_1
       6: aload_0
       7: invokestatic  #31                 // Method org/springframework/beans/factory/support/BeanDefinitionReaderUtils.generateBeanName:(Lorg/springframework/beans/factory/config/BeanDefinition;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)Ljava/lang/String;
      10: astore_3
      11: aload_0
      12: aload_3
      13: aload_1
      14: invokeinterface #32,  3           // InterfaceMethod org/springframework/beans/factory/support/BeanDefinitionRegistry.registerBeanDefinition:(Ljava/lang/String;Lorg/springframework/beans/factory/config/BeanDefinition;)V
      19: aload_3
      20: areturn

  public static java.lang.String registerWithSourceAndGeneratedBeanName(org.springframework.beans.factory.support.AbstractBeanDefinition, org.springframework.beans.factory.support.BeanDefinitionRegistry, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #30                 // Method org/springframework/beans/factory/support/AbstractBeanDefinition.setSource:(Ljava/lang/Object;)V
       5: aload_0
       6: aload_1
       7: invokestatic  #31                 // Method org/springframework/beans/factory/support/BeanDefinitionReaderUtils.generateBeanName:(Lorg/springframework/beans/factory/config/BeanDefinition;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)Ljava/lang/String;
      10: astore_3
      11: aload_1
      12: aload_3
      13: aload_0
      14: invokeinterface #32,  3           // InterfaceMethod org/springframework/beans/factory/support/BeanDefinitionRegistry.registerBeanDefinition:(Ljava/lang/String;Lorg/springframework/beans/factory/config/BeanDefinition;)V
      19: aload_3
      20: areturn

  public static void registerIfNotAlreadyRegistered(org.springframework.beans.factory.support.AbstractBeanDefinition, org.springframework.beans.factory.support.BeanDefinitionRegistry, java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: invokedynamic #33,  0             // InvokeDynamic #0:get:(Lorg/springframework/beans/factory/support/AbstractBeanDefinition;)Ljava/util/function/Supplier;
       6: aload_1
       7: aload_2
       8: aload_3
       9: invokestatic  #34                 // Method registerIfNotAlreadyRegistered:(Ljava/util/function/Supplier;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;Ljava/lang/String;Ljava/lang/Object;)V
      12: return

  public static void registerIfNotAlreadyRegistered(java.util.function.Supplier<org.springframework.beans.factory.support.AbstractBeanDefinition>, org.springframework.beans.factory.support.BeanDefinitionRegistry, java.lang.String, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #35,  2           // InterfaceMethod org/springframework/beans/factory/support/BeanDefinitionRegistry.containsBeanDefinition:(Ljava/lang/String;)Z
       7: ifeq          11
      10: return
      11: aload_0
      12: invokeinterface #36,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      17: checkcast     #37                 // class org/springframework/beans/factory/support/AbstractBeanDefinition
      20: astore        4
      22: aload         4
      24: aload_3
      25: invokevirtual #30                 // Method org/springframework/beans/factory/support/AbstractBeanDefinition.setSource:(Ljava/lang/Object;)V
      28: aload_1
      29: aload_2
      30: aload         4
      32: invokeinterface #32,  3           // InterfaceMethod org/springframework/beans/factory/support/BeanDefinitionRegistry.registerBeanDefinition:(Ljava/lang/String;Lorg/springframework/beans/factory/config/BeanDefinition;)V
      37: return

  public static void registerLazyIfNotAlreadyRegistered(java.util.function.Supplier<org.springframework.beans.factory.support.AbstractBeanDefinition>, org.springframework.beans.factory.support.BeanDefinitionRegistry, java.lang.String, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #35,  2           // InterfaceMethod org/springframework/beans/factory/support/BeanDefinitionRegistry.containsBeanDefinition:(Ljava/lang/String;)Z
       7: ifeq          11
      10: return
      11: aload_0
      12: invokeinterface #36,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      17: checkcast     #37                 // class org/springframework/beans/factory/support/AbstractBeanDefinition
      20: astore        4
      22: aload         4
      24: aload_3
      25: invokevirtual #30                 // Method org/springframework/beans/factory/support/AbstractBeanDefinition.setSource:(Ljava/lang/Object;)V
      28: aload         4
      30: iconst_1
      31: invokevirtual #38                 // Method org/springframework/beans/factory/support/AbstractBeanDefinition.setLazyInit:(Z)V
      34: aload_1
      35: aload_2
      36: aload         4
      38: invokeinterface #32,  3           // InterfaceMethod org/springframework/beans/factory/support/BeanDefinitionRegistry.registerBeanDefinition:(Ljava/lang/String;Lorg/springframework/beans/factory/config/BeanDefinition;)V
      43: return

  public static boolean hasBean(java.lang.Class<?>, org.springframework.beans.factory.support.BeanDefinitionRegistry);
    Code:
       0: ldc           #39                 // String %s%s0
       2: iconst_2
       3: anewarray     #26                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: invokevirtual #40                 // Method java/lang/Class.getName:()Ljava/lang/String;
      12: aastore
      13: dup
      14: iconst_1
      15: ldc           #41                 // String #
      17: aastore
      18: invokestatic  #27                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      21: astore_2
      22: aload_1
      23: aload_2
      24: invokeinterface #35,  2           // InterfaceMethod org/springframework/beans/factory/support/BeanDefinitionRegistry.containsBeanDefinition:(Ljava/lang/String;)Z
      29: ireturn

  protected <T extends org.springframework.data.repository.config.RepositoryConfigurationSource> org.springframework.data.repository.config.RepositoryConfiguration<T> getRepositoryConfiguration(org.springframework.beans.factory.config.BeanDefinition, T);
    Code:
       0: new           #42                 // class org/springframework/data/repository/config/DefaultRepositoryConfiguration
       3: dup
       4: aload_2
       5: aload_1
       6: aload_0
       7: invokespecial #43                 // Method org/springframework/data/repository/config/DefaultRepositoryConfiguration."<init>":(Lorg/springframework/data/repository/config/RepositoryConfigurationSource;Lorg/springframework/beans/factory/config/BeanDefinition;Lorg/springframework/data/repository/config/RepositoryConfigurationExtension;)V
      10: areturn

  protected boolean isStrictRepositoryCandidate(org.springframework.data.repository.core.RepositoryMetadata);
    Code:
       0: aload_0
       1: getfield      #3                  // Field noMultiStoreSupport:Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: invokevirtual #44                 // Method getIdentifyingTypes:()Ljava/util/Collection;
      13: astore_2
      14: aload_0
      15: invokevirtual #45                 // Method getIdentifyingAnnotations:()Ljava/util/Collection;
      18: astore_3
      19: aload_0
      20: invokevirtual #46                 // Method getModuleName:()Ljava/lang/String;
      23: astore        4
      25: aload_2
      26: invokeinterface #47,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      31: ifeq          69
      34: aload_3
      35: invokeinterface #47,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      40: ifeq          69
      43: aload_0
      44: getfield      #3                  // Field noMultiStoreSupport:Z
      47: ifne          69
      50: getstatic     #48                 // Field LOGGER:Lorg/slf4j/Logger;
      53: ldc           #49                 // String Spring Data {} does not support multi-store setups!
      55: aload         4
      57: invokeinterface #50,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      62: aload_0
      63: iconst_1
      64: putfield      #3                  // Field noMultiStoreSupport:Z
      67: iconst_0
      68: ireturn
      69: aload_1
      70: invokeinterface #51,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryMetadata.getRepositoryInterface:()Ljava/lang/Class;
      75: astore        5
      77: aload_2
      78: invokeinterface #52,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      83: astore        6
      85: aload         6
      87: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      92: ifeq          122
      95: aload         6
      97: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     102: checkcast     #53                 // class java/lang/Class
     105: astore        7
     107: aload         7
     109: aload         5
     111: invokevirtual #54                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     114: ifeq          119
     117: iconst_1
     118: ireturn
     119: goto          85
     122: aload_1
     123: invokeinterface #55,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryMetadata.getDomainType:()Ljava/lang/Class;
     128: astore        6
     130: aload_3
     131: invokeinterface #52,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     136: astore        7
     138: aload         7
     140: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     145: ifeq          175
     148: aload         7
     150: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     155: checkcast     #53                 // class java/lang/Class
     158: astore        8
     160: aload         6
     162: aload         8
     164: invokestatic  #56                 // Method org/springframework/core/annotation/AnnotationUtils.findAnnotation:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
     167: ifnull        172
     170: iconst_1
     171: ireturn
     172: goto          138
     175: ldc           #58                 // String Spring Data %s - Could not safely identify store assignment for repository candidate %s. If you want this repository to be a %s repository,
     177: iconst_3
     178: anewarray     #26                 // class java/lang/Object
     181: dup
     182: iconst_0
     183: aload         4
     185: aastore
     186: dup
     187: iconst_1
     188: aload         5
     190: aastore
     191: dup
     192: iconst_2
     193: aload         4
     195: aastore
     196: invokestatic  #27                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     199: astore        7
     201: aload_3
     202: invokeinterface #47,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
     207: ifne          245
     210: aload         7
     212: ldc           #59                 // String  consider annotating your entities with one of these annotations:
     214: invokevirtual #60                 // Method java/lang/String.concat:(Ljava/lang/String;)Ljava/lang/String;
     217: aload_3
     218: invokestatic  #61                 // Method toString:(Ljava/util/Collection;)Ljava/lang/String;
     221: invokevirtual #60                 // Method java/lang/String.concat:(Ljava/lang/String;)Ljava/lang/String;
     224: aload_2
     225: invokeinterface #47,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
     230: ifeq          238
     233: ldc           #62                 // String .
     235: goto          240
     238: ldc           #63                 // String  (preferred)
     240: invokevirtual #60                 // Method java/lang/String.concat:(Ljava/lang/String;)Ljava/lang/String;
     243: astore        7
     245: aload_2
     246: invokeinterface #47,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
     251: ifne          294
     254: aload         7
     256: aload_3
     257: invokeinterface #47,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
     262: ifeq          270
     265: ldc           #64                 // String  consider
     267: goto          272
     270: ldc           #65                 // String , or consider
     272: invokevirtual #60                 // Method java/lang/String.concat:(Ljava/lang/String;)Ljava/lang/String;
     275: ldc           #66                 // String  extending one of the following types with your repository:
     277: invokevirtual #60                 // Method java/lang/String.concat:(Ljava/lang/String;)Ljava/lang/String;
     280: aload_2
     281: invokestatic  #61                 // Method toString:(Ljava/util/Collection;)Ljava/lang/String;
     284: invokevirtual #60                 // Method java/lang/String.concat:(Ljava/lang/String;)Ljava/lang/String;
     287: ldc           #62                 // String .
     289: invokevirtual #60                 // Method java/lang/String.concat:(Ljava/lang/String;)Ljava/lang/String;
     292: astore        7
     294: getstatic     #48                 // Field LOGGER:Lorg/slf4j/Logger;
     297: aload         7
     299: invokeinterface #67,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     304: iconst_0
     305: ireturn

  protected boolean useRepositoryConfiguration(org.springframework.data.repository.core.RepositoryMetadata);
    Code:
       0: aload_1
       1: invokeinterface #68,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryMetadata.isReactiveRepository:()Z
       6: ifeq          45
       9: new           #69                 // class org/springframework/dao/InvalidDataAccessApiUsageException
      12: dup
      13: ldc           #70                 // String Reactive Repositories are not supported by %s. Offending repository is %s!
      15: iconst_2
      16: anewarray     #26                 // class java/lang/Object
      19: dup
      20: iconst_0
      21: aload_0
      22: invokevirtual #46                 // Method getModuleName:()Ljava/lang/String;
      25: aastore
      26: dup
      27: iconst_1
      28: aload_1
      29: invokeinterface #51,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryMetadata.getRepositoryInterface:()Ljava/lang/Class;
      34: invokevirtual #40                 // Method java/lang/Class.getName:()Ljava/lang/String;
      37: aastore
      38: invokestatic  #27                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      41: invokespecial #71                 // Method org/springframework/dao/InvalidDataAccessApiUsageException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: iconst_1
      46: ireturn

  private java.lang.Class<?> loadRepositoryInterface(org.springframework.data.repository.config.RepositoryConfiguration<?>, java.lang.ClassLoader);
    Code:
       0: aload_1
       1: invokeinterface #72,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.getRepositoryInterface:()Ljava/lang/String;
       6: astore_3
       7: aload_3
       8: aload_2
       9: invokestatic  #73                 // Method org/springframework/util/ClassUtils.forName:(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;
      12: areturn
      13: astore        4
      15: getstatic     #48                 // Field LOGGER:Lorg/slf4j/Logger;
      18: ldc           #76                 // String %s - Could not load type %s using class loader %s.
      20: iconst_3
      21: anewarray     #26                 // class java/lang/Object
      24: dup
      25: iconst_0
      26: aload_0
      27: invokevirtual #46                 // Method getModuleName:()Ljava/lang/String;
      30: aastore
      31: dup
      32: iconst_1
      33: aload_3
      34: aastore
      35: dup
      36: iconst_2
      37: aload_2
      38: aastore
      39: invokestatic  #27                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      42: aload         4
      44: invokeinterface #77,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      49: aconst_null
      50: areturn
    Exception table:
       from    to  target type
           7    12    13   Class java/lang/ClassNotFoundException
           7    12    13   Class java/lang/LinkageError

  private static java.lang.String toString(java.util.Collection<? extends java.lang.Class<?>>);
    Code:
       0: aload_0
       1: invokeinterface #78,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #79,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      11: invokeinterface #80,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      16: ldc           #81                 // String ,
      18: invokestatic  #82                 // Method java/util/stream/Collectors.joining:(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;
      21: invokeinterface #83,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      26: checkcast     #84                 // class java/lang/String
      29: areturn

  private static org.springframework.beans.factory.support.AbstractBeanDefinition lambda$registerIfNotAlreadyRegistered$0(org.springframework.beans.factory.support.AbstractBeanDefinition);
    Code:
       0: aload_0
       1: areturn

  static {};
    Code:
       0: ldc           #57                 // class org/springframework/data/repository/config/RepositoryConfigurationExtensionSupport
       2: invokestatic  #85                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #48                 // Field LOGGER:Lorg/slf4j/Logger;
       8: return
}
