Compiled from "PersistentEntityIsNewStrategy.java"
class org.springframework.data.mapping.model.PersistentEntityIsNewStrategy implements org.springframework.data.support.IsNewStrategy {
  private final java.util.function.Function<java.lang.Object, java.lang.Object> valueLookup;

  private final java.lang.Class<?> valueType;

  private org.springframework.data.mapping.model.PersistentEntityIsNewStrategy(org.springframework.data.mapping.PersistentEntity<?, ?>, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String PersistentEntity must not be null!
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: invokeinterface #4,  1            // InterfaceMethod org/springframework/data/mapping/PersistentEntity.hasVersionProperty:()Z
      17: ifeq          33
      20: iload_2
      21: ifne          33
      24: aload_1
      25: invokedynamic #5,  0              // InvokeDynamic #0:apply:(Lorg/springframework/data/mapping/PersistentEntity;)Ljava/util/function/Function;
      30: goto          39
      33: aload_1
      34: invokedynamic #6,  0              // InvokeDynamic #1:apply:(Lorg/springframework/data/mapping/PersistentEntity;)Ljava/util/function/Function;
      39: putfield      #7                  // Field valueLookup:Ljava/util/function/Function;
      42: aload_0
      43: aload_1
      44: invokeinterface #4,  1            // InterfaceMethod org/springframework/data/mapping/PersistentEntity.hasVersionProperty:()Z
      49: ifeq          70
      52: iload_2
      53: ifne          70
      56: aload_1
      57: invokeinterface #8,  1            // InterfaceMethod org/springframework/data/mapping/PersistentEntity.getRequiredVersionProperty:()Lorg/springframework/data/mapping/PersistentProperty;
      62: invokeinterface #9,  1            // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getType:()Ljava/lang/Class;
      67: goto          94
      70: aload_1
      71: invokeinterface #10,  1           // InterfaceMethod org/springframework/data/mapping/PersistentEntity.hasIdProperty:()Z
      76: ifeq          93
      79: aload_1
      80: invokeinterface #11,  1           // InterfaceMethod org/springframework/data/mapping/PersistentEntity.getRequiredIdProperty:()Lorg/springframework/data/mapping/PersistentProperty;
      85: invokeinterface #9,  1            // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getType:()Ljava/lang/Class;
      90: goto          94
      93: aconst_null
      94: putfield      #12                 // Field valueType:Ljava/lang/Class;
      97: aload_0
      98: getfield      #12                 // Field valueType:Ljava/lang/Class;
     101: astore_3
     102: aload_3
     103: ifnull        146
     106: aload_3
     107: invokevirtual #13                 // Method java/lang/Class.isPrimitive:()Z
     110: ifeq          146
     113: ldc           #14                 // class java/lang/Number
     115: aload_3
     116: invokestatic  #15                 // Method org/springframework/util/ClassUtils.isAssignable:(Ljava/lang/Class;Ljava/lang/Class;)Z
     119: ifne          146
     122: new           #16                 // class java/lang/IllegalArgumentException
     125: dup
     126: ldc           #17                 // String Only numeric primitives are supported as identifier / version field types! Got: %s.
     128: iconst_1
     129: anewarray     #18                 // class java/lang/Object
     132: dup
     133: iconst_0
     134: aload_0
     135: getfield      #12                 // Field valueType:Ljava/lang/Class;
     138: aastore
     139: invokestatic  #19                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     142: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     145: athrow
     146: return

  public static org.springframework.data.mapping.model.PersistentEntityIsNewStrategy forIdOnly(org.springframework.data.mapping.PersistentEntity<?, ?>);
    Code:
       0: new           #21                 // class org/springframework/data/mapping/model/PersistentEntityIsNewStrategy
       3: dup
       4: aload_0
       5: iconst_1
       6: invokespecial #22                 // Method "<init>":(Lorg/springframework/data/mapping/PersistentEntity;Z)V
       9: areturn

  public static org.springframework.data.mapping.model.PersistentEntityIsNewStrategy of(org.springframework.data.mapping.PersistentEntity<?, ?>);
    Code:
       0: new           #21                 // class org/springframework/data/mapping/model/PersistentEntityIsNewStrategy
       3: dup
       4: aload_0
       5: iconst_0
       6: invokespecial #22                 // Method "<init>":(Lorg/springframework/data/mapping/PersistentEntity;Z)V
       9: areturn

  public boolean isNew(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #7                  // Field valueLookup:Ljava/util/function/Function;
       4: aload_1
       5: invokeinterface #23,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore_2
      11: aload_2
      12: ifnonnull     17
      15: iconst_1
      16: ireturn
      17: aload_0
      18: getfield      #12                 // Field valueType:Ljava/lang/Class;
      21: ifnull        44
      24: aload_0
      25: getfield      #12                 // Field valueType:Ljava/lang/Class;
      28: invokevirtual #13                 // Method java/lang/Class.isPrimitive:()Z
      31: ifne          44
      34: aload_2
      35: ifnonnull     42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: ireturn
      44: ldc           #14                 // class java/lang/Number
      46: aload_2
      47: invokevirtual #24                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      50: ifeq          71
      53: aload_2
      54: checkcast     #14                 // class java/lang/Number
      57: invokevirtual #25                 // Method java/lang/Number.longValue:()J
      60: lconst_0
      61: lcmp
      62: ifne          69
      65: iconst_1
      66: goto          70
      69: iconst_0
      70: ireturn
      71: new           #16                 // class java/lang/IllegalArgumentException
      74: dup
      75: ldc           #26                 // String Could not determine whether %s is new! Unsupported identifier or version property!
      77: iconst_1
      78: anewarray     #18                 // class java/lang/Object
      81: dup
      82: iconst_0
      83: aload_1
      84: aastore
      85: invokestatic  #19                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      88: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      91: athrow

  private static java.lang.Object lambda$new$1(org.springframework.data.mapping.PersistentEntity, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #27,  2           // InterfaceMethod org/springframework/data/mapping/PersistentEntity.getIdentifierAccessor:(Ljava/lang/Object;)Lorg/springframework/data/mapping/IdentifierAccessor;
       7: invokeinterface #28,  1           // InterfaceMethod org/springframework/data/mapping/IdentifierAccessor.getIdentifier:()Ljava/lang/Object;
      12: areturn

  private static java.lang.Object lambda$new$0(org.springframework.data.mapping.PersistentEntity, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #29,  2           // InterfaceMethod org/springframework/data/mapping/PersistentEntity.getPropertyAccessor:(Ljava/lang/Object;)Lorg/springframework/data/mapping/PersistentPropertyAccessor;
       7: aload_0
       8: invokeinterface #8,  1            // InterfaceMethod org/springframework/data/mapping/PersistentEntity.getRequiredVersionProperty:()Lorg/springframework/data/mapping/PersistentProperty;
      13: invokeinterface #30,  2           // InterfaceMethod org/springframework/data/mapping/PersistentPropertyAccessor.getProperty:(Lorg/springframework/data/mapping/PersistentProperty;)Ljava/lang/Object;
      18: areturn
}
