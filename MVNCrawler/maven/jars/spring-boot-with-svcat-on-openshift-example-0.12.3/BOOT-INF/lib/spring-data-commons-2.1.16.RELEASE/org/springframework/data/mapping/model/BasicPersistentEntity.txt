Compiled from "BasicPersistentEntity.java"
public class org.springframework.data.mapping.model.BasicPersistentEntity<T, P extends org.springframework.data.mapping.PersistentProperty<P>> implements org.springframework.data.mapping.model.MutablePersistentEntity<T, P> {
  private static final java.lang.String TYPE_MISMATCH;

  private final org.springframework.data.mapping.PreferredConstructor<T, P> constructor;

  private final org.springframework.data.util.TypeInformation<T> information;

  private final java.util.List<P> properties;

  private final java.util.List<P> persistentPropertiesCache;

  private final java.util.Comparator<P> comparator;

  private final java.util.Set<org.springframework.data.mapping.Association<P>> associations;

  private final java.util.Map<java.lang.String, P> propertyCache;

  private final java.util.Map<java.lang.Class<? extends java.lang.annotation.Annotation>, java.util.Optional<java.lang.annotation.Annotation>> annotationCache;

  private final org.springframework.util.MultiValueMap<java.lang.Class<? extends java.lang.annotation.Annotation>, P> propertyAnnotationCache;

  private P idProperty;

  private P versionProperty;

  private org.springframework.data.mapping.model.PersistentPropertyAccessorFactory propertyAccessorFactory;

  private org.springframework.data.spel.EvaluationContextProvider evaluationContextProvider;

  private final org.springframework.data.util.Lazy<org.springframework.data.mapping.Alias> typeAlias;

  private final org.springframework.data.util.Lazy<org.springframework.data.support.IsNewStrategy> isNewStrategy;

  private final org.springframework.data.util.Lazy<java.lang.Boolean> isImmutable;

  private final org.springframework.data.util.Lazy<java.lang.Boolean> requiresPropertyPopulation;

  public org.springframework.data.mapping.model.BasicPersistentEntity(org.springframework.data.util.TypeInformation<T>);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #1                  // Method "<init>":(Lorg/springframework/data/util/TypeInformation;Ljava/util/Comparator;)V
       6: return

  public org.springframework.data.mapping.model.BasicPersistentEntity(org.springframework.data.util.TypeInformation<T>, java.util.Comparator<P>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #3                  // Field org/springframework/data/spel/EvaluationContextProvider.DEFAULT:Lorg/springframework/data/spel/EvaluationContextProvider;
       8: putfield      #4                  // Field evaluationContextProvider:Lorg/springframework/data/spel/EvaluationContextProvider;
      11: aload_1
      12: ldc           #5                  // String Information must not be null!
      14: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      17: aload_0
      18: aload_1
      19: putfield      #7                  // Field information:Lorg/springframework/data/util/TypeInformation;
      22: aload_0
      23: new           #8                  // class java/util/ArrayList
      26: dup
      27: invokespecial #9                  // Method java/util/ArrayList."<init>":()V
      30: putfield      #10                 // Field properties:Ljava/util/List;
      33: aload_0
      34: new           #8                  // class java/util/ArrayList
      37: dup
      38: invokespecial #9                  // Method java/util/ArrayList."<init>":()V
      41: putfield      #11                 // Field persistentPropertiesCache:Ljava/util/List;
      44: aload_0
      45: aload_2
      46: putfield      #12                 // Field comparator:Ljava/util/Comparator;
      49: aload_0
      50: aload_0
      51: invokestatic  #13                 // InterfaceMethod org/springframework/data/mapping/model/PreferredConstructorDiscoverer.discover:(Lorg/springframework/data/mapping/PersistentEntity;)Lorg/springframework/data/mapping/PreferredConstructor;
      54: putfield      #14                 // Field constructor:Lorg/springframework/data/mapping/PreferredConstructor;
      57: aload_0
      58: aload_2
      59: ifnonnull     72
      62: new           #15                 // class java/util/HashSet
      65: dup
      66: invokespecial #16                 // Method java/util/HashSet."<init>":()V
      69: goto          87
      72: new           #17                 // class java/util/TreeSet
      75: dup
      76: new           #18                 // class org/springframework/data/mapping/model/BasicPersistentEntity$AssociationComparator
      79: dup
      80: aload_2
      81: invokespecial #19                 // Method org/springframework/data/mapping/model/BasicPersistentEntity$AssociationComparator."<init>":(Ljava/util/Comparator;)V
      84: invokespecial #20                 // Method java/util/TreeSet."<init>":(Ljava/util/Comparator;)V
      87: putfield      #21                 // Field associations:Ljava/util/Set;
      90: aload_0
      91: new           #22                 // class java/util/HashMap
      94: dup
      95: bipush        16
      97: fconst_1
      98: invokespecial #23                 // Method java/util/HashMap."<init>":(IF)V
     101: putfield      #24                 // Field propertyCache:Ljava/util/Map;
     104: aload_0
     105: new           #25                 // class org/springframework/util/ConcurrentReferenceHashMap
     108: dup
     109: bipush        16
     111: getstatic     #26                 // Field org/springframework/util/ConcurrentReferenceHashMap$ReferenceType.WEAK:Lorg/springframework/util/ConcurrentReferenceHashMap$ReferenceType;
     114: invokespecial #27                 // Method org/springframework/util/ConcurrentReferenceHashMap."<init>":(ILorg/springframework/util/ConcurrentReferenceHashMap$ReferenceType;)V
     117: putfield      #28                 // Field annotationCache:Ljava/util/Map;
     120: aload_0
     121: new           #25                 // class org/springframework/util/ConcurrentReferenceHashMap
     124: dup
     125: bipush        16
     127: getstatic     #26                 // Field org/springframework/util/ConcurrentReferenceHashMap$ReferenceType.WEAK:Lorg/springframework/util/ConcurrentReferenceHashMap$ReferenceType;
     130: invokespecial #27                 // Method org/springframework/util/ConcurrentReferenceHashMap."<init>":(ILorg/springframework/util/ConcurrentReferenceHashMap$ReferenceType;)V
     133: invokestatic  #29                 // Method org/springframework/util/CollectionUtils.toMultiValueMap:(Ljava/util/Map;)Lorg/springframework/util/MultiValueMap;
     136: putfield      #30                 // Field propertyAnnotationCache:Lorg/springframework/util/MultiValueMap;
     139: aload_0
     140: getstatic     #31                 // Field org/springframework/data/mapping/model/BeanWrapperPropertyAccessorFactory.INSTANCE:Lorg/springframework/data/mapping/model/BeanWrapperPropertyAccessorFactory;
     143: putfield      #32                 // Field propertyAccessorFactory:Lorg/springframework/data/mapping/model/PersistentPropertyAccessorFactory;
     146: aload_0
     147: aload_0
     148: invokedynamic #33,  0             // InvokeDynamic #0:get:(Lorg/springframework/data/mapping/model/BasicPersistentEntity;)Ljava/util/function/Supplier;
     153: invokestatic  #34                 // Method org/springframework/data/util/Lazy.of:(Ljava/util/function/Supplier;)Lorg/springframework/data/util/Lazy;
     156: putfield      #35                 // Field typeAlias:Lorg/springframework/data/util/Lazy;
     159: aload_0
     160: aload_0
     161: aload_1
     162: invokedynamic #36,  0             // InvokeDynamic #1:get:(Lorg/springframework/data/mapping/model/BasicPersistentEntity;Lorg/springframework/data/util/TypeInformation;)Ljava/util/function/Supplier;
     167: invokestatic  #34                 // Method org/springframework/data/util/Lazy.of:(Ljava/util/function/Supplier;)Lorg/springframework/data/util/Lazy;
     170: putfield      #37                 // Field isNewStrategy:Lorg/springframework/data/util/Lazy;
     173: aload_0
     174: aload_0
     175: invokedynamic #38,  0             // InvokeDynamic #2:get:(Lorg/springframework/data/mapping/model/BasicPersistentEntity;)Ljava/util/function/Supplier;
     180: invokestatic  #34                 // Method org/springframework/data/util/Lazy.of:(Ljava/util/function/Supplier;)Lorg/springframework/data/util/Lazy;
     183: putfield      #39                 // Field isImmutable:Lorg/springframework/data/util/Lazy;
     186: aload_0
     187: aload_0
     188: invokedynamic #40,  0             // InvokeDynamic #3:get:(Lorg/springframework/data/mapping/model/BasicPersistentEntity;)Ljava/util/function/Supplier;
     193: invokestatic  #34                 // Method org/springframework/data/util/Lazy.of:(Ljava/util/function/Supplier;)Lorg/springframework/data/util/Lazy;
     196: putfield      #41                 // Field requiresPropertyPopulation:Lorg/springframework/data/util/Lazy;
     199: return

  public org.springframework.data.mapping.PreferredConstructor<T, P> getPersistenceConstructor();
    Code:
       0: aload_0
       1: getfield      #14                 // Field constructor:Lorg/springframework/data/mapping/PreferredConstructor;
       4: areturn

  public boolean isConstructorArgument(org.springframework.data.mapping.PersistentProperty<?>);
    Code:
       0: aload_0
       1: getfield      #14                 // Field constructor:Lorg/springframework/data/mapping/PreferredConstructor;
       4: ifnull        22
       7: aload_0
       8: getfield      #14                 // Field constructor:Lorg/springframework/data/mapping/PreferredConstructor;
      11: aload_1
      12: invokevirtual #42                 // Method org/springframework/data/mapping/PreferredConstructor.isConstructorParameter:(Lorg/springframework/data/mapping/PersistentProperty;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public boolean isIdProperty(org.springframework.data.mapping.PersistentProperty<?>);
    Code:
       0: aload_0
       1: getfield      #43                 // Field idProperty:Lorg/springframework/data/mapping/PersistentProperty;
       4: ifnull        22
       7: aload_0
       8: getfield      #43                 // Field idProperty:Lorg/springframework/data/mapping/PersistentProperty;
      11: aload_1
      12: invokevirtual #44                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public boolean isVersionProperty(org.springframework.data.mapping.PersistentProperty<?>);
    Code:
       0: aload_0
       1: getfield      #45                 // Field versionProperty:Lorg/springframework/data/mapping/PersistentProperty;
       4: ifnull        22
       7: aload_0
       8: getfield      #45                 // Field versionProperty:Lorg/springframework/data/mapping/PersistentProperty;
      11: aload_1
      12: invokevirtual #44                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method getType:()Ljava/lang/Class;
       4: invokevirtual #47                 // Method java/lang/Class.getName:()Ljava/lang/String;
       7: areturn

  public P getIdProperty();
    Code:
       0: aload_0
       1: getfield      #43                 // Field idProperty:Lorg/springframework/data/mapping/PersistentProperty;
       4: areturn

  public P getVersionProperty();
    Code:
       0: aload_0
       1: getfield      #45                 // Field versionProperty:Lorg/springframework/data/mapping/PersistentProperty;
       4: areturn

  public boolean hasIdProperty();
    Code:
       0: aload_0
       1: getfield      #43                 // Field idProperty:Lorg/springframework/data/mapping/PersistentProperty;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean hasVersionProperty();
    Code:
       0: aload_0
       1: getfield      #45                 // Field versionProperty:Lorg/springframework/data/mapping/PersistentProperty;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void addPersistentProperty(P);
    Code:
       0: aload_1
       1: ldc           #48                 // String Property must not be null!
       3: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #10                 // Field properties:Ljava/util/List;
      10: aload_1
      11: invokeinterface #49,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      16: ifeq          20
      19: return
      20: aload_0
      21: getfield      #10                 // Field properties:Ljava/util/List;
      24: aload_1
      25: invokeinterface #50,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      30: pop
      31: aload_1
      32: invokeinterface #51,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.isTransient:()Z
      37: ifne          60
      40: aload_1
      41: invokeinterface #52,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.isAssociation:()Z
      46: ifne          60
      49: aload_0
      50: getfield      #11                 // Field persistentPropertiesCache:Ljava/util/List;
      53: aload_1
      54: invokeinterface #50,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      59: pop
      60: aload_0
      61: getfield      #24                 // Field propertyCache:Ljava/util/Map;
      64: aload_1
      65: invokeinterface #53,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getName:()Ljava/lang/String;
      70: aload_1
      71: invokedynamic #54,  0             // InvokeDynamic #4:apply:(Lorg/springframework/data/mapping/PersistentProperty;)Ljava/util/function/Function;
      76: invokeinterface #55,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      81: pop
      82: aload_0
      83: aload_1
      84: invokevirtual #56                 // Method returnPropertyIfBetterIdPropertyCandidateOrNull:(Lorg/springframework/data/mapping/PersistentProperty;)Lorg/springframework/data/mapping/PersistentProperty;
      87: astore_2
      88: aload_2
      89: ifnull        97
      92: aload_0
      93: aload_2
      94: putfield      #43                 // Field idProperty:Lorg/springframework/data/mapping/PersistentProperty;
      97: aload_1
      98: invokeinterface #57,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.isVersionProperty:()Z
     103: ifeq          155
     106: aload_0
     107: getfield      #45                 // Field versionProperty:Lorg/springframework/data/mapping/PersistentProperty;
     110: astore_3
     111: aload_3
     112: ifnull        150
     115: new           #58                 // class org/springframework/data/mapping/MappingException
     118: dup
     119: ldc           #59                 // String Attempt to add version property %s but already have property %s registered as version. Check your mapping configuration!
     121: iconst_2
     122: anewarray     #60                 // class java/lang/Object
     125: dup
     126: iconst_0
     127: aload_1
     128: invokeinterface #61,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getField:()Ljava/lang/reflect/Field;
     133: aastore
     134: dup
     135: iconst_1
     136: aload_3
     137: invokeinterface #61,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getField:()Ljava/lang/reflect/Field;
     142: aastore
     143: invokestatic  #62                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     146: invokespecial #63                 // Method org/springframework/data/mapping/MappingException."<init>":(Ljava/lang/String;)V
     149: athrow
     150: aload_0
     151: aload_1
     152: putfield      #45                 // Field versionProperty:Lorg/springframework/data/mapping/PersistentProperty;
     155: return

  public void setEvaluationContextProvider(org.springframework.data.spel.EvaluationContextProvider);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field evaluationContextProvider:Lorg/springframework/data/spel/EvaluationContextProvider;
       5: return

  protected P returnPropertyIfBetterIdPropertyCandidateOrNull(P);
    Code:
       0: aload_1
       1: invokeinterface #64,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.isIdProperty:()Z
       6: ifne          11
       9: aconst_null
      10: areturn
      11: aload_0
      12: getfield      #43                 // Field idProperty:Lorg/springframework/data/mapping/PersistentProperty;
      15: astore_2
      16: aload_2
      17: ifnull        55
      20: new           #58                 // class org/springframework/data/mapping/MappingException
      23: dup
      24: ldc           #65                 // String Attempt to add id property %s but already have property %s registered as id. Check your mapping configuration!
      26: iconst_2
      27: anewarray     #60                 // class java/lang/Object
      30: dup
      31: iconst_0
      32: aload_1
      33: invokeinterface #61,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getField:()Ljava/lang/reflect/Field;
      38: aastore
      39: dup
      40: iconst_1
      41: aload_2
      42: invokeinterface #61,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getField:()Ljava/lang/reflect/Field;
      47: aastore
      48: invokestatic  #62                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      51: invokespecial #63                 // Method org/springframework/data/mapping/MappingException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_1
      56: areturn

  public void addAssociation(org.springframework.data.mapping.Association<P>);
    Code:
       0: aload_1
       1: ldc           #66                 // String Association must not be null!
       3: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #21                 // Field associations:Ljava/util/Set;
      10: aload_1
      11: invokeinterface #67,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      16: pop
      17: return

  public P getPersistentProperty(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #24                 // Field propertyCache:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #68,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #69                 // class org/springframework/data/mapping/PersistentProperty
      13: areturn

  public java.lang.Iterable<P> getPersistentProperties(java.lang.Class<? extends java.lang.annotation.Annotation>);
    Code:
       0: aload_1
       1: ldc           #70                 // String Annotation type must not be null!
       3: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #30                 // Field propertyAnnotationCache:Lorg/springframework/util/MultiValueMap;
      10: aload_1
      11: aload_0
      12: invokedynamic #71,  0             // InvokeDynamic #5:apply:(Lorg/springframework/data/mapping/model/BasicPersistentEntity;)Ljava/util/function/Function;
      17: invokeinterface #72,  3           // InterfaceMethod org/springframework/util/MultiValueMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      22: checkcast     #73                 // class java/lang/Iterable
      25: areturn

  private java.util.List<P> doFindPersistentProperty(java.lang.Class<? extends java.lang.annotation.Annotation>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field properties:Ljava/util/List;
       4: invokeinterface #74,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: aload_1
      10: invokedynamic #75,  0             // InvokeDynamic #6:test:(Ljava/lang/Class;)Ljava/util/function/Predicate;
      15: invokeinterface #76,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      20: invokestatic  #77                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      23: invokeinterface #78,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      28: checkcast     #79                 // class java/util/List
      31: astore_2
      32: aload_2
      33: invokeinterface #80,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      38: ifne          43
      41: aload_2
      42: areturn
      43: aload_0
      44: getfield      #21                 // Field associations:Ljava/util/Set;
      47: invokeinterface #81,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      52: invokedynamic #82,  0             // InvokeDynamic #7:apply:()Ljava/util/function/Function;
      57: invokeinterface #83,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      62: aload_1
      63: invokedynamic #84,  0             // InvokeDynamic #8:test:(Ljava/lang/Class;)Ljava/util/function/Predicate;
      68: invokeinterface #76,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      73: invokestatic  #77                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      76: invokeinterface #78,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      81: checkcast     #79                 // class java/util/List
      84: areturn

  public java.lang.Class<T> getType();
    Code:
       0: aload_0
       1: getfield      #7                  // Field information:Lorg/springframework/data/util/TypeInformation;
       4: invokeinterface #85,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getType:()Ljava/lang/Class;
       9: areturn

  public org.springframework.data.mapping.Alias getTypeAlias();
    Code:
       0: aload_0
       1: getfield      #35                 // Field typeAlias:Lorg/springframework/data/util/Lazy;
       4: invokevirtual #86                 // Method org/springframework/data/util/Lazy.get:()Ljava/lang/Object;
       7: checkcast     #87                 // class org/springframework/data/mapping/Alias
      10: areturn

  public org.springframework.data.util.TypeInformation<T> getTypeInformation();
    Code:
       0: aload_0
       1: getfield      #7                  // Field information:Lorg/springframework/data/util/TypeInformation;
       4: areturn

  public void doWithProperties(org.springframework.data.mapping.PropertyHandler<P>);
    Code:
       0: aload_1
       1: ldc           #88                 // String PropertyHandler must not be null!
       3: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #11                 // Field persistentPropertiesCache:Ljava/util/List;
      10: invokeinterface #89,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #90,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          45
      25: aload_2
      26: invokeinterface #91,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #69                 // class org/springframework/data/mapping/PersistentProperty
      34: astore_3
      35: aload_1
      36: aload_3
      37: invokeinterface #92,  2           // InterfaceMethod org/springframework/data/mapping/PropertyHandler.doWithPersistentProperty:(Lorg/springframework/data/mapping/PersistentProperty;)V
      42: goto          16
      45: return

  public void doWithProperties(org.springframework.data.mapping.SimplePropertyHandler);
    Code:
       0: aload_1
       1: ldc           #93                 // String Handler must not be null!
       3: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #11                 // Field persistentPropertiesCache:Ljava/util/List;
      10: invokeinterface #89,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #90,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          45
      25: aload_2
      26: invokeinterface #91,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #69                 // class org/springframework/data/mapping/PersistentProperty
      34: astore_3
      35: aload_1
      36: aload_3
      37: invokeinterface #94,  2           // InterfaceMethod org/springframework/data/mapping/SimplePropertyHandler.doWithPersistentProperty:(Lorg/springframework/data/mapping/PersistentProperty;)V
      42: goto          16
      45: return

  public void doWithAssociations(org.springframework.data.mapping.AssociationHandler<P>);
    Code:
       0: aload_1
       1: ldc           #93                 // String Handler must not be null!
       3: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #21                 // Field associations:Ljava/util/Set;
      10: invokeinterface #95,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #90,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          45
      25: aload_2
      26: invokeinterface #91,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #96                 // class org/springframework/data/mapping/Association
      34: astore_3
      35: aload_1
      36: aload_3
      37: invokeinterface #97,  2           // InterfaceMethod org/springframework/data/mapping/AssociationHandler.doWithAssociation:(Lorg/springframework/data/mapping/Association;)V
      42: goto          16
      45: return

  public void doWithAssociations(org.springframework.data.mapping.SimpleAssociationHandler);
    Code:
       0: aload_1
       1: ldc           #93                 // String Handler must not be null!
       3: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #21                 // Field associations:Ljava/util/Set;
      10: invokeinterface #95,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #90,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          45
      25: aload_2
      26: invokeinterface #91,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #96                 // class org/springframework/data/mapping/Association
      34: astore_3
      35: aload_1
      36: aload_3
      37: invokeinterface #98,  2           // InterfaceMethod org/springframework/data/mapping/SimpleAssociationHandler.doWithAssociation:(Lorg/springframework/data/mapping/Association;)V
      42: goto          16
      45: return

  public <A extends java.lang.annotation.Annotation> A findAnnotation(java.lang.Class<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #99                 // Method doFindAnnotation:(Ljava/lang/Class;)Ljava/util/Optional;
       5: aconst_null
       6: invokevirtual #100                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #101                // class java/lang/annotation/Annotation
      12: areturn

  public <A extends java.lang.annotation.Annotation> boolean isAnnotationPresent(java.lang.Class<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #99                 // Method doFindAnnotation:(Ljava/lang/Class;)Ljava/util/Optional;
       5: invokevirtual #102                // Method java/util/Optional.isPresent:()Z
       8: ireturn

  private <A extends java.lang.annotation.Annotation> java.util.Optional<A> doFindAnnotation(java.lang.Class<A>);
    Code:
       0: aload_0
       1: getfield      #28                 // Field annotationCache:Ljava/util/Map;
       4: aload_1
       5: aload_0
       6: invokedynamic #103,  0            // InvokeDynamic #9:apply:(Lorg/springframework/data/mapping/model/BasicPersistentEntity;)Ljava/util/function/Function;
      11: invokeinterface #55,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      16: checkcast     #104                // class java/util/Optional
      19: areturn

  public void verify();
    Code:
       0: aload_0
       1: getfield      #12                 // Field comparator:Ljava/util/Comparator;
       4: ifnull        33
       7: aload_0
       8: getfield      #10                 // Field properties:Ljava/util/List;
      11: aload_0
      12: getfield      #12                 // Field comparator:Ljava/util/Comparator;
      15: invokeinterface #105,  2          // InterfaceMethod java/util/List.sort:(Ljava/util/Comparator;)V
      20: aload_0
      21: getfield      #11                 // Field persistentPropertiesCache:Ljava/util/List;
      24: aload_0
      25: getfield      #12                 // Field comparator:Ljava/util/Comparator;
      28: invokeinterface #105,  2          // InterfaceMethod java/util/List.sort:(Ljava/util/Comparator;)V
      33: return

  public void setPersistentPropertyAccessorFactory(org.springframework.data.mapping.model.PersistentPropertyAccessorFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field propertyAccessorFactory:Lorg/springframework/data/mapping/model/PersistentPropertyAccessorFactory;
       5: return

  public <B> org.springframework.data.mapping.PersistentPropertyAccessor<B> getPropertyAccessor(B);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #106                // Method verifyBeanType:(Ljava/lang/Object;)V
       5: aload_0
       6: getfield      #32                 // Field propertyAccessorFactory:Lorg/springframework/data/mapping/model/PersistentPropertyAccessorFactory;
       9: aload_0
      10: aload_1
      11: invokeinterface #107,  3          // InterfaceMethod org/springframework/data/mapping/model/PersistentPropertyAccessorFactory.getPropertyAccessor:(Lorg/springframework/data/mapping/PersistentEntity;Ljava/lang/Object;)Lorg/springframework/data/mapping/PersistentPropertyAccessor;
      16: areturn

  public org.springframework.data.mapping.IdentifierAccessor getIdentifierAccessor(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #106                // Method verifyBeanType:(Ljava/lang/Object;)V
       5: ldc           #108                // class org/springframework/data/domain/Persistable
       7: aload_0
       8: invokevirtual #46                 // Method getType:()Ljava/lang/Class;
      11: invokevirtual #109                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      14: ifeq          29
      17: new           #110                // class org/springframework/data/mapping/model/PersistableIdentifierAccessor
      20: dup
      21: aload_1
      22: checkcast     #108                // class org/springframework/data/domain/Persistable
      25: invokespecial #111                // Method org/springframework/data/mapping/model/PersistableIdentifierAccessor."<init>":(Lorg/springframework/data/domain/Persistable;)V
      28: areturn
      29: aload_0
      30: invokevirtual #112                // Method hasIdProperty:()Z
      33: ifeq          48
      36: new           #113                // class org/springframework/data/mapping/model/IdPropertyIdentifierAccessor
      39: dup
      40: aload_0
      41: aload_1
      42: invokespecial #114                // Method org/springframework/data/mapping/model/IdPropertyIdentifierAccessor."<init>":(Lorg/springframework/data/mapping/PersistentEntity;Ljava/lang/Object;)V
      45: goto          56
      48: new           #115                // class org/springframework/data/mapping/model/BasicPersistentEntity$AbsentIdentifierAccessor
      51: dup
      52: aload_1
      53: invokespecial #116                // Method org/springframework/data/mapping/model/BasicPersistentEntity$AbsentIdentifierAccessor."<init>":(Ljava/lang/Object;)V
      56: areturn

  public boolean isNew(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #106                // Method verifyBeanType:(Ljava/lang/Object;)V
       5: aload_0
       6: getfield      #37                 // Field isNewStrategy:Lorg/springframework/data/util/Lazy;
       9: invokevirtual #86                 // Method org/springframework/data/util/Lazy.get:()Ljava/lang/Object;
      12: checkcast     #117                // class org/springframework/data/support/IsNewStrategy
      15: aload_1
      16: invokeinterface #118,  2          // InterfaceMethod org/springframework/data/support/IsNewStrategy.isNew:(Ljava/lang/Object;)Z
      21: ireturn

  public boolean isImmutable();
    Code:
       0: aload_0
       1: getfield      #39                 // Field isImmutable:Lorg/springframework/data/util/Lazy;
       4: invokevirtual #86                 // Method org/springframework/data/util/Lazy.get:()Ljava/lang/Object;
       7: checkcast     #119                // class java/lang/Boolean
      10: invokevirtual #120                // Method java/lang/Boolean.booleanValue:()Z
      13: ireturn

  public boolean requiresPropertyPopulation();
    Code:
       0: aload_0
       1: getfield      #41                 // Field requiresPropertyPopulation:Lorg/springframework/data/util/Lazy;
       4: invokevirtual #86                 // Method org/springframework/data/util/Lazy.get:()Ljava/lang/Object;
       7: checkcast     #119                // class java/lang/Boolean
      10: invokevirtual #120                // Method java/lang/Boolean.booleanValue:()Z
      13: ireturn

  public java.util.Iterator<P> iterator();
    Code:
       0: aload_0
       1: getfield      #10                 // Field properties:Ljava/util/List;
       4: invokeinterface #89,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: new           #121                // class org/springframework/data/mapping/model/BasicPersistentEntity$1
      13: dup
      14: aload_0
      15: aload_1
      16: invokespecial #122                // Method org/springframework/data/mapping/model/BasicPersistentEntity$1."<init>":(Lorg/springframework/data/mapping/model/BasicPersistentEntity;Ljava/util/Iterator;)V
      19: areturn

  protected org.springframework.expression.EvaluationContext getEvaluationContext(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field evaluationContextProvider:Lorg/springframework/data/spel/EvaluationContextProvider;
       4: aload_1
       5: invokeinterface #123,  2          // InterfaceMethod org/springframework/data/spel/EvaluationContextProvider.getEvaluationContext:(Ljava/lang/Object;)Lorg/springframework/expression/EvaluationContext;
      10: areturn

  protected org.springframework.data.support.IsNewStrategy getFallbackIsNewStrategy();
    Code:
       0: aload_0
       1: invokestatic  #124                // Method org/springframework/data/mapping/model/PersistentEntityIsNewStrategy.of:(Lorg/springframework/data/mapping/PersistentEntity;)Lorg/springframework/data/mapping/model/PersistentEntityIsNewStrategy;
       4: areturn

  private final void verifyBeanType(java.lang.Object);
    Code:
       0: aload_1
       1: ldc           #125                // String Target bean must not be null!
       3: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokevirtual #46                 // Method getType:()Ljava/lang/Class;
      10: aload_1
      11: aload_0
      12: aload_1
      13: invokedynamic #126,  0            // InvokeDynamic #10:get:(Lorg/springframework/data/mapping/model/BasicPersistentEntity;Ljava/lang/Object;)Ljava/util/function/Supplier;
      18: invokestatic  #127                // Method org/springframework/util/Assert.isInstanceOf:(Ljava/lang/Class;Ljava/lang/Object;Ljava/util/function/Supplier;)V
      21: return

  private static org.springframework.data.mapping.Alias getAliasFromAnnotation(java.lang.Class<?>);
    Code:
       0: aload_0
       1: ldc           #128                // class org/springframework/data/annotation/TypeAlias
       3: invokestatic  #129                // Method org/springframework/core/annotation/AnnotatedElementUtils.findMergedAnnotation:(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       6: invokestatic  #130                // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       9: invokedynamic #131,  0            // InvokeDynamic #11:apply:()Ljava/util/function/Function;
      14: invokevirtual #132                // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      17: invokedynamic #133,  0            // InvokeDynamic #12:test:()Ljava/util/function/Predicate;
      22: invokevirtual #134                // Method java/util/Optional.filter:(Ljava/util/function/Predicate;)Ljava/util/Optional;
      25: astore_1
      26: aload_1
      27: aconst_null
      28: invokevirtual #100                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      31: invokestatic  #135                // Method org/springframework/data/mapping/Alias.ofNullable:(Ljava/lang/Object;)Lorg/springframework/data/mapping/Alias;
      34: areturn

  private java.lang.String lambda$verifyBeanType$9(java.lang.Object);
    Code:
       0: ldc           #137                // String Target bean of type %s is not of type of the persistent entity (%s)!
       2: iconst_2
       3: anewarray     #60                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_1
       9: invokevirtual #138                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      12: invokevirtual #47                 // Method java/lang/Class.getName:()Ljava/lang/String;
      15: aastore
      16: dup
      17: iconst_1
      18: aload_0
      19: invokevirtual #46                 // Method getType:()Ljava/lang/Class;
      22: invokevirtual #47                 // Method java/lang/Class.getName:()Ljava/lang/String;
      25: aastore
      26: invokestatic  #62                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      29: areturn

  private java.util.Optional lambda$doFindAnnotation$8(java.lang.Class);
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method getType:()Ljava/lang/Class;
       4: aload_1
       5: invokestatic  #129                // Method org/springframework/core/annotation/AnnotatedElementUtils.findMergedAnnotation:(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       8: invokestatic  #130                // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      11: areturn

  private static boolean lambda$doFindPersistentProperty$7(java.lang.Class, org.springframework.data.mapping.PersistentProperty);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #139,  2          // InterfaceMethod org/springframework/data/mapping/PersistentProperty.isAnnotationPresent:(Ljava/lang/Class;)Z
       7: ireturn

  private static boolean lambda$doFindPersistentProperty$6(java.lang.Class, org.springframework.data.mapping.PersistentProperty);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #139,  2          // InterfaceMethod org/springframework/data/mapping/PersistentProperty.isAnnotationPresent:(Ljava/lang/Class;)Z
       7: ireturn

  private static org.springframework.data.mapping.PersistentProperty lambda$addPersistentProperty$5(org.springframework.data.mapping.PersistentProperty, java.lang.String);
    Code:
       0: aload_0
       1: areturn

  private java.lang.Boolean lambda$new$4();
    Code:
       0: aload_0
       1: invokevirtual #140                // Method isImmutable:()Z
       4: ifne          34
       7: aload_0
       8: getfield      #10                 // Field properties:Ljava/util/List;
      11: invokeinterface #74,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      16: aload_0
      17: invokedynamic #141,  0            // InvokeDynamic #13:test:(Lorg/springframework/data/mapping/model/BasicPersistentEntity;)Ljava/util/function/Predicate;
      22: invokeinterface #142,  2          // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      27: ifeq          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: invokestatic  #143                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      38: areturn

  private boolean lambda$null$3(org.springframework.data.mapping.PersistentProperty);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #144                // Method isConstructorArgument:(Lorg/springframework/data/mapping/PersistentProperty;)Z
       5: ifne          21
       8: aload_1
       9: invokeinterface #51,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.isTransient:()Z
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  private java.lang.Boolean lambda$new$2();
    Code:
       0: aload_0
       1: ldc           #145                // class org/springframework/data/annotation/Immutable
       3: invokevirtual #146                // Method isAnnotationPresent:(Ljava/lang/Class;)Z
       6: invokestatic  #143                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       9: areturn

  private org.springframework.data.support.IsNewStrategy lambda$new$1(org.springframework.data.util.TypeInformation);
    Code:
       0: ldc           #108                // class org/springframework/data/domain/Persistable
       2: aload_1
       3: invokeinterface #85,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getType:()Ljava/lang/Class;
       8: invokevirtual #109                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      11: ifeq          20
      14: getstatic     #147                // Field org/springframework/data/support/PersistableIsNewStrategy.INSTANCE:Lorg/springframework/data/support/PersistableIsNewStrategy;
      17: goto          24
      20: aload_0
      21: invokevirtual #148                // Method getFallbackIsNewStrategy:()Lorg/springframework/data/support/IsNewStrategy;
      24: areturn

  private org.springframework.data.mapping.Alias lambda$new$0();
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method getType:()Ljava/lang/Class;
       4: invokestatic  #149                // Method getAliasFromAnnotation:(Ljava/lang/Class;)Lorg/springframework/data/mapping/Alias;
       7: areturn
}
