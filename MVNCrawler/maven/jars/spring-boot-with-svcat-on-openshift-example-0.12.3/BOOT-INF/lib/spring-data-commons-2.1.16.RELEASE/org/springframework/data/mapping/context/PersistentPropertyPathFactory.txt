Compiled from "PersistentPropertyPathFactory.java"
class org.springframework.data.mapping.context.PersistentPropertyPathFactory<E extends org.springframework.data.mapping.PersistentEntity<?, P>, P extends org.springframework.data.mapping.PersistentProperty<P>> {
  private static final java.util.function.Predicate<org.springframework.data.mapping.PersistentProperty<?>> IS_ENTITY;

  private final java.util.Map<org.springframework.data.mapping.context.PersistentPropertyPathFactory$TypeAndPath, org.springframework.data.mapping.PersistentPropertyPath<P>> propertyPaths;

  private final org.springframework.data.mapping.context.MappingContext<E, P> context;

  public org.springframework.data.mapping.PersistentPropertyPath<P> from(java.lang.Class<?>, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #1                  // String Type must not be null!
       3: invokestatic  #2                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #3                  // String Property path must not be null!
       9: invokestatic  #2                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: aload_1
      14: invokestatic  #4                  // Method org/springframework/data/util/ClassTypeInformation.from:(Ljava/lang/Class;)Lorg/springframework/data/util/ClassTypeInformation;
      17: aload_2
      18: invokespecial #5                  // Method getPersistentPropertyPath:(Lorg/springframework/data/util/TypeInformation;Ljava/lang/String;)Lorg/springframework/data/mapping/PersistentPropertyPath;
      21: areturn

  public org.springframework.data.mapping.PersistentPropertyPath<P> from(org.springframework.data.util.TypeInformation<?>, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #1                  // String Type must not be null!
       3: invokestatic  #2                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #3                  // String Property path must not be null!
       9: invokestatic  #2                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokespecial #5                  // Method getPersistentPropertyPath:(Lorg/springframework/data/util/TypeInformation;Ljava/lang/String;)Lorg/springframework/data/mapping/PersistentPropertyPath;
      18: areturn

  public org.springframework.data.mapping.PersistentPropertyPath<P> from(org.springframework.data.mapping.PropertyPath);
    Code:
       0: aload_1
       1: ldc           #3                  // String Property path must not be null!
       3: invokestatic  #2                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokevirtual #6                  // Method org/springframework/data/mapping/PropertyPath.getOwningType:()Lorg/springframework/data/util/TypeInformation;
      11: aload_1
      12: invokevirtual #7                  // Method org/springframework/data/mapping/PropertyPath.toDotPath:()Ljava/lang/String;
      15: invokevirtual #8                  // Method from:(Lorg/springframework/data/util/TypeInformation;Ljava/lang/String;)Lorg/springframework/data/mapping/PersistentPropertyPath;
      18: areturn

  public <T> org.springframework.data.mapping.PersistentPropertyPaths<T, P> from(java.lang.Class<T>, java.util.function.Predicate<? super P>);
    Code:
       0: aload_1
       1: ldc           #1                  // String Type must not be null!
       3: invokestatic  #2                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #9                  // String Property filter must not be null!
       9: invokestatic  #2                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: aload_1
      14: invokestatic  #4                  // Method org/springframework/data/util/ClassTypeInformation.from:(Ljava/lang/Class;)Lorg/springframework/data/util/ClassTypeInformation;
      17: aload_2
      18: invokevirtual #10                 // Method from:(Lorg/springframework/data/util/TypeInformation;Ljava/util/function/Predicate;)Lorg/springframework/data/mapping/PersistentPropertyPaths;
      21: areturn

  public <T> org.springframework.data.mapping.PersistentPropertyPaths<T, P> from(java.lang.Class<T>, java.util.function.Predicate<? super P>, java.util.function.Predicate<P>);
    Code:
       0: aload_1
       1: ldc           #1                  // String Type must not be null!
       3: invokestatic  #2                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #9                  // String Property filter must not be null!
       9: invokestatic  #2                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_3
      13: ldc           #11                 // String Traversal guard must not be null!
      15: invokestatic  #2                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_0
      19: aload_1
      20: invokestatic  #4                  // Method org/springframework/data/util/ClassTypeInformation.from:(Ljava/lang/Class;)Lorg/springframework/data/util/ClassTypeInformation;
      23: aload_2
      24: aload_3
      25: invokevirtual #12                 // Method from:(Lorg/springframework/data/util/TypeInformation;Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Lorg/springframework/data/mapping/PersistentPropertyPaths;
      28: areturn

  public <T> org.springframework.data.mapping.PersistentPropertyPaths<T, P> from(org.springframework.data.util.TypeInformation<T>, java.util.function.Predicate<? super P>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #13,  0             // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
       8: invokevirtual #12                 // Method from:(Lorg/springframework/data/util/TypeInformation;Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Lorg/springframework/data/mapping/PersistentPropertyPaths;
      11: areturn

  public <T> org.springframework.data.mapping.PersistentPropertyPaths<T, P> from(org.springframework.data.util.TypeInformation<T>, java.util.function.Predicate<? super P>, java.util.function.Predicate<P>);
    Code:
       0: aload_1
       1: ldc           #1                  // String Type must not be null!
       3: invokestatic  #2                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #9                  // String Property filter must not be null!
       9: invokestatic  #2                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_3
      13: ldc           #11                 // String Traversal guard must not be null!
      15: invokestatic  #2                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_1
      19: aload_0
      20: aload_1
      21: aload_2
      22: aload_3
      23: invokestatic  #14                 // Method org/springframework/data/mapping/context/DefaultPersistentPropertyPath.empty:()Lorg/springframework/data/mapping/context/DefaultPersistentPropertyPath;
      26: invokespecial #15                 // Method from:(Lorg/springframework/data/util/TypeInformation;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lorg/springframework/data/mapping/context/DefaultPersistentPropertyPath;)Ljava/util/Collection;
      29: invokestatic  #16                 // Method org/springframework/data/mapping/context/PersistentPropertyPathFactory$DefaultPersistentPropertyPaths.of:(Lorg/springframework/data/util/TypeInformation;Ljava/util/Collection;)Lorg/springframework/data/mapping/PersistentPropertyPaths;
      32: areturn

  private org.springframework.data.mapping.PersistentPropertyPath<P> getPersistentPropertyPath(org.springframework.data.util.TypeInformation<?>, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #17                 // Field propertyPaths:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokestatic  #18                 // Method org/springframework/data/mapping/context/PersistentPropertyPathFactory$TypeAndPath.of:(Lorg/springframework/data/util/TypeInformation;Ljava/lang/String;)Lorg/springframework/data/mapping/context/PersistentPropertyPathFactory$TypeAndPath;
       9: aload_0
      10: invokedynamic #19,  0             // InvokeDynamic #1:apply:(Lorg/springframework/data/mapping/context/PersistentPropertyPathFactory;)Ljava/util/function/Function;
      15: invokeinterface #20,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      20: checkcast     #21                 // class org/springframework/data/mapping/PersistentPropertyPath
      23: areturn

  private org.springframework.data.mapping.PersistentPropertyPath<P> createPersistentPropertyPath(java.lang.String, org.springframework.data.util.TypeInformation<?>);
    Code:
       0: aload_1
       1: invokevirtual #22                 // Method java/lang/String.trim:()Ljava/lang/String;
       4: astore_3
       5: aload_3
       6: invokevirtual #23                 // Method java/lang/String.isEmpty:()Z
       9: ifeq          18
      12: invokestatic  #24                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      15: goto          27
      18: aload_3
      19: ldc           #25                 // String \\.
      21: invokevirtual #26                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      24: invokestatic  #27                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      27: astore        4
      29: invokestatic  #14                 // Method org/springframework/data/mapping/context/DefaultPersistentPropertyPath.empty:()Lorg/springframework/data/mapping/context/DefaultPersistentPropertyPath;
      32: astore        5
      34: aload         4
      36: invokeinterface #28,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      41: astore        6
      43: aload_0
      44: getfield      #29                 // Field context:Lorg/springframework/data/mapping/context/MappingContext;
      47: aload_2
      48: invokeinterface #30,  2           // InterfaceMethod org/springframework/data/mapping/context/MappingContext.getRequiredPersistentEntity:(Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/PersistentEntity;
      53: astore        7
      55: aload         6
      57: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      62: ifeq          147
      65: aload         6
      67: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      72: checkcast     #33                 // class java/lang/String
      75: astore        8
      77: aload         5
      79: astore        9
      81: aload_0
      82: aload         5
      84: aload         6
      86: aload         8
      88: aload         7
      90: invokespecial #34                 // Method getPair:(Lorg/springframework/data/mapping/context/DefaultPersistentPropertyPath;Ljava/util/Iterator;Ljava/lang/String;Lorg/springframework/data/mapping/PersistentEntity;)Lorg/springframework/data/util/Pair;
      93: astore        10
      95: aload         10
      97: ifnonnull     124
     100: aload         4
     102: ldc           #35                 // String .
     104: invokestatic  #36                 // Method org/springframework/util/StringUtils.collectionToDelimitedString:(Ljava/util/Collection;Ljava/lang/String;)Ljava/lang/String;
     107: astore        11
     109: new           #37                 // class org/springframework/data/mapping/context/InvalidPersistentPropertyPath
     112: dup
     113: aload         11
     115: aload_2
     116: aload         8
     118: aload         9
     120: invokespecial #38                 // Method org/springframework/data/mapping/context/InvalidPersistentPropertyPath."<init>":(Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;Ljava/lang/String;Lorg/springframework/data/mapping/PersistentPropertyPath;)V
     123: athrow
     124: aload         10
     126: invokevirtual #39                 // Method org/springframework/data/util/Pair.getFirst:()Ljava/lang/Object;
     129: checkcast     #40                 // class org/springframework/data/mapping/context/DefaultPersistentPropertyPath
     132: astore        5
     134: aload         10
     136: invokevirtual #41                 // Method org/springframework/data/util/Pair.getSecond:()Ljava/lang/Object;
     139: checkcast     #42                 // class org/springframework/data/mapping/PersistentEntity
     142: astore        7
     144: goto          55
     147: aload         5
     149: areturn

  private org.springframework.data.util.Pair<org.springframework.data.mapping.context.DefaultPersistentPropertyPath<P>, E> getPair(org.springframework.data.mapping.context.DefaultPersistentPropertyPath<P>, java.util.Iterator<java.lang.String>, java.lang.String, E);
    Code:
       0: aload         4
       2: aload_3
       3: invokeinterface #43,  2           // InterfaceMethod org/springframework/data/mapping/PersistentEntity.getPersistentProperty:(Ljava/lang/String;)Lorg/springframework/data/mapping/PersistentProperty;
       8: astore        5
      10: aload         5
      12: ifnonnull     17
      15: aconst_null
      16: areturn
      17: aload         5
      19: invokeinterface #44,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getTypeInformation:()Lorg/springframework/data/util/TypeInformation;
      24: invokeinterface #45,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getRequiredActualType:()Lorg/springframework/data/util/TypeInformation;
      29: astore        6
      31: aload_1
      32: aload         5
      34: invokevirtual #46                 // Method org/springframework/data/mapping/context/DefaultPersistentPropertyPath.append:(Lorg/springframework/data/mapping/PersistentProperty;)Lorg/springframework/data/mapping/context/DefaultPersistentPropertyPath;
      37: aload_2
      38: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      43: ifeq          60
      46: aload_0
      47: getfield      #29                 // Field context:Lorg/springframework/data/mapping/context/MappingContext;
      50: aload         6
      52: invokeinterface #30,  2           // InterfaceMethod org/springframework/data/mapping/context/MappingContext.getRequiredPersistentEntity:(Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/PersistentEntity;
      57: goto          62
      60: aload         4
      62: invokestatic  #47                 // Method org/springframework/data/util/Pair.of:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/data/util/Pair;
      65: areturn

  private <T> java.util.Collection<org.springframework.data.mapping.PersistentPropertyPath<P>> from(org.springframework.data.util.TypeInformation<T>, java.util.function.Predicate<? super P>, java.util.function.Predicate<P>, org.springframework.data.mapping.context.DefaultPersistentPropertyPath<P>);
    Code:
       0: aload_1
       1: invokeinterface #48,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getActualType:()Lorg/springframework/data/util/TypeInformation;
       6: astore        5
       8: aload         5
      10: ifnonnull     17
      13: invokestatic  #24                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      16: areturn
      17: aload_0
      18: getfield      #29                 // Field context:Lorg/springframework/data/mapping/context/MappingContext;
      21: aload         5
      23: invokeinterface #30,  2           // InterfaceMethod org/springframework/data/mapping/context/MappingContext.getRequiredPersistentEntity:(Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/PersistentEntity;
      28: astore        6
      30: new           #49                 // class java/util/HashSet
      33: dup
      34: invokespecial #50                 // Method java/util/HashSet."<init>":()V
      37: astore        7
      39: aload_0
      40: aload         4
      42: aload_2
      43: aload         7
      45: aload_3
      46: invokedynamic #51,  0             // InvokeDynamic #2:doWithPersistentProperty:(Lorg/springframework/data/mapping/context/PersistentPropertyPathFactory;Lorg/springframework/data/mapping/context/DefaultPersistentPropertyPath;Ljava/util/function/Predicate;Ljava/util/Set;Ljava/util/function/Predicate;)Lorg/springframework/data/mapping/PropertyHandler;
      51: astore        8
      53: aload         6
      55: aload         8
      57: invokeinterface #52,  2           // InterfaceMethod org/springframework/data/mapping/PersistentEntity.doWithProperties:(Lorg/springframework/data/mapping/PropertyHandler;)V
      62: aload         8
      64: invokedynamic #53,  0             // InvokeDynamic #3:doWithAssociation:(Lorg/springframework/data/mapping/PropertyHandler;)Lorg/springframework/data/mapping/AssociationHandler;
      69: astore        9
      71: aload         6
      73: aload         9
      75: invokeinterface #54,  2           // InterfaceMethod org/springframework/data/mapping/PersistentEntity.doWithAssociations:(Lorg/springframework/data/mapping/AssociationHandler;)V
      80: aload         7
      82: areturn

  public org.springframework.data.mapping.context.PersistentPropertyPathFactory(org.springframework.data.mapping.context.MappingContext<E, P>);
    Code:
       0: aload_0
       1: invokespecial #55                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #56                 // class org/springframework/util/ConcurrentReferenceHashMap
       8: dup
       9: invokespecial #57                 // Method org/springframework/util/ConcurrentReferenceHashMap."<init>":()V
      12: putfield      #17                 // Field propertyPaths:Ljava/util/Map;
      15: aload_0
      16: aload_1
      17: putfield      #29                 // Field context:Lorg/springframework/data/mapping/context/MappingContext;
      20: return

  private static void lambda$from$4(org.springframework.data.mapping.PropertyHandler, org.springframework.data.mapping.Association);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #58                 // Method org/springframework/data/mapping/Association.getInverse:()Lorg/springframework/data/mapping/PersistentProperty;
       5: invokeinterface #59,  2           // InterfaceMethod org/springframework/data/mapping/PropertyHandler.doWithPersistentProperty:(Lorg/springframework/data/mapping/PersistentProperty;)V
      10: return

  private void lambda$from$3(org.springframework.data.mapping.context.DefaultPersistentPropertyPath, java.util.function.Predicate, java.util.Set, java.util.function.Predicate, org.springframework.data.mapping.PersistentProperty);
    Code:
       0: aload         5
       2: invokeinterface #44,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getTypeInformation:()Lorg/springframework/data/util/TypeInformation;
       7: astore        6
       9: aload         6
      11: invokeinterface #48,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getActualType:()Lorg/springframework/data/util/TypeInformation;
      16: astore        7
      18: aload_1
      19: aload         7
      21: invokevirtual #60                 // Method org/springframework/data/mapping/context/DefaultPersistentPropertyPath.containsPropertyOfType:(Lorg/springframework/data/util/TypeInformation;)Z
      24: ifeq          28
      27: return
      28: aload_1
      29: aload         5
      31: invokevirtual #46                 // Method org/springframework/data/mapping/context/DefaultPersistentPropertyPath.append:(Lorg/springframework/data/mapping/PersistentProperty;)Lorg/springframework/data/mapping/context/DefaultPersistentPropertyPath;
      34: astore        8
      36: aload_2
      37: aload         5
      39: invokeinterface #61,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      44: ifeq          56
      47: aload_3
      48: aload         8
      50: invokeinterface #62,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      55: pop
      56: aload         4
      58: getstatic     #63                 // Field IS_ENTITY:Ljava/util/function/Predicate;
      61: invokeinterface #64,  2           // InterfaceMethod java/util/function/Predicate.and:(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;
      66: aload         5
      68: invokeinterface #61,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      73: ifeq          94
      76: aload_3
      77: aload_0
      78: aload         6
      80: aload_2
      81: aload         4
      83: aload         8
      85: invokespecial #15                 // Method from:(Lorg/springframework/data/util/TypeInformation;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lorg/springframework/data/mapping/context/DefaultPersistentPropertyPath;)Ljava/util/Collection;
      88: invokeinterface #65,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      93: pop
      94: return

  private org.springframework.data.mapping.PersistentPropertyPath lambda$getPersistentPropertyPath$2(org.springframework.data.mapping.context.PersistentPropertyPathFactory$TypeAndPath);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #66                 // Method org/springframework/data/mapping/context/PersistentPropertyPathFactory$TypeAndPath.getPath:()Ljava/lang/String;
       5: aload_1
       6: invokevirtual #67                 // Method org/springframework/data/mapping/context/PersistentPropertyPathFactory$TypeAndPath.getType:()Lorg/springframework/data/util/TypeInformation;
       9: invokespecial #68                 // Method createPersistentPropertyPath:(Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/PersistentPropertyPath;
      12: areturn

  private static boolean lambda$from$1(org.springframework.data.mapping.PersistentProperty);
    Code:
       0: aload_0
       1: invokeinterface #69,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.isAssociation:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  private static boolean lambda$static$0(org.springframework.data.mapping.PersistentProperty);
    Code:
       0: aload_0
       1: invokeinterface #70,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.isEntity:()Z
       6: ireturn

  static {};
    Code:
       0: invokedynamic #71,  0             // InvokeDynamic #4:test:()Ljava/util/function/Predicate;
       5: putstatic     #63                 // Field IS_ENTITY:Ljava/util/function/Predicate;
       8: return
}
