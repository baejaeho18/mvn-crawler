Compiled from "PartTree.java"
class org.springframework.data.repository.query.parser.PartTree$Predicate implements org.springframework.data.util.Streamable<org.springframework.data.repository.query.parser.PartTree$OrPart> {
  private static final java.util.regex.Pattern ALL_IGNORE_CASE;

  private static final java.lang.String ORDER_BY;

  private final java.util.List<org.springframework.data.repository.query.parser.PartTree$OrPart> nodes;

  private final org.springframework.data.repository.query.parser.OrderBySource orderBySource;

  private boolean alwaysIgnoreCase;

  public org.springframework.data.repository.query.parser.PartTree$Predicate(java.lang.String, java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokespecial #3                  // Method detectAndSetAllIgnoreCase:(Ljava/lang/String;)Ljava/lang/String;
       9: ldc           #5                  // String OrderBy
      11: invokestatic  #6                  // Method org/springframework/data/repository/query/parser/PartTree.access$100:(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
      14: astore_3
      15: aload_3
      16: arraylength
      17: iconst_2
      18: if_icmple     31
      21: new           #7                  // class java/lang/IllegalArgumentException
      24: dup
      25: ldc           #8                  // String OrderBy must not be used more than once in a method name!
      27: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: aload_3
      33: iconst_0
      34: aaload
      35: ldc           #10                 // String Or
      37: invokestatic  #6                  // Method org/springframework/data/repository/query/parser/PartTree.access$100:(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
      40: invokestatic  #11                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      43: invokedynamic #12,  0             // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      48: invokeinterface #13,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      53: aload_0
      54: aload_2
      55: invokedynamic #14,  0             // InvokeDynamic #1:apply:(Lorg/springframework/data/repository/query/parser/PartTree$Predicate;Ljava/lang/Class;)Ljava/util/function/Function;
      60: invokeinterface #15,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      65: invokestatic  #16                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      68: invokeinterface #17,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      73: checkcast     #18                 // class java/util/List
      76: putfield      #1                  // Field nodes:Ljava/util/List;
      79: aload_0
      80: aload_3
      81: arraylength
      82: iconst_2
      83: if_icmpne     103
      86: new           #19                 // class org/springframework/data/repository/query/parser/OrderBySource
      89: dup
      90: aload_3
      91: iconst_1
      92: aaload
      93: aload_2
      94: invokestatic  #20                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      97: invokespecial #21                 // Method org/springframework/data/repository/query/parser/OrderBySource."<init>":(Ljava/lang/String;Ljava/util/Optional;)V
     100: goto          106
     103: getstatic     #22                 // Field org/springframework/data/repository/query/parser/OrderBySource.EMPTY:Lorg/springframework/data/repository/query/parser/OrderBySource;
     106: putfield      #23                 // Field orderBySource:Lorg/springframework/data/repository/query/parser/OrderBySource;
     109: return

  private java.lang.String detectAndSetAllIgnoreCase(java.lang.String);
    Code:
       0: getstatic     #24                 // Field ALL_IGNORE_CASE:Ljava/util/regex/Pattern;
       3: aload_1
       4: invokevirtual #25                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       7: astore_2
       8: aload_2
       9: invokevirtual #26                 // Method java/util/regex/Matcher.find:()Z
      12: ifeq          58
      15: aload_0
      16: iconst_1
      17: putfield      #27                 // Field alwaysIgnoreCase:Z
      20: new           #28                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      27: aload_1
      28: iconst_0
      29: aload_2
      30: invokevirtual #30                 // Method java/util/regex/Matcher.start:()I
      33: invokevirtual #31                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      36: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_1
      40: aload_2
      41: invokevirtual #33                 // Method java/util/regex/Matcher.end:()I
      44: aload_1
      45: invokevirtual #34                 // Method java/lang/String.length:()I
      48: invokevirtual #31                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      51: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: astore_1
      58: aload_1
      59: areturn

  public java.util.Iterator<org.springframework.data.repository.query.parser.PartTree$OrPart> iterator();
    Code:
       0: aload_0
       1: getfield      #1                  // Field nodes:Ljava/util/List;
       4: invokeinterface #36,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: areturn

  public org.springframework.data.repository.query.parser.OrderBySource getOrderBySource();
    Code:
       0: aload_0
       1: getfield      #23                 // Field orderBySource:Lorg/springframework/data/repository/query/parser/OrderBySource;
       4: areturn

  private org.springframework.data.repository.query.parser.PartTree$OrPart lambda$new$0(java.lang.Class, java.lang.String);
    Code:
       0: new           #37                 // class org/springframework/data/repository/query/parser/PartTree$OrPart
       3: dup
       4: aload_2
       5: aload_1
       6: aload_0
       7: getfield      #27                 // Field alwaysIgnoreCase:Z
      10: invokespecial #38                 // Method org/springframework/data/repository/query/parser/PartTree$OrPart."<init>":(Ljava/lang/String;Ljava/lang/Class;Z)V
      13: areturn

  static java.util.List access$000(org.springframework.data.repository.query.parser.PartTree$Predicate);
    Code:
       0: aload_0
       1: getfield      #1                  // Field nodes:Ljava/util/List;
       4: areturn

  static {};
    Code:
       0: ldc           #39                 // String AllIgnor(ing|e)Case
       2: invokestatic  #40                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #24                 // Field ALL_IGNORE_CASE:Ljava/util/regex/Pattern;
       8: return
}
