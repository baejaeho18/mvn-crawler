Compiled from "PreferredConstructor.java"
public class org.springframework.data.mapping.PreferredConstructor<T, P extends org.springframework.data.mapping.PersistentProperty<P>> {
  private final java.lang.reflect.Constructor<T> constructor;

  private final java.util.List<org.springframework.data.mapping.PreferredConstructor$Parameter<java.lang.Object, P>> parameters;

  private final java.util.Map<org.springframework.data.mapping.PersistentProperty<?>, java.lang.Boolean> isPropertyParameterCache;

  private final java.util.concurrent.locks.ReentrantReadWriteLock lock;

  private final java.util.concurrent.locks.Lock read;

  private final java.util.concurrent.locks.Lock write;

  public org.springframework.data.mapping.PreferredConstructor(java.lang.reflect.Constructor<T>, org.springframework.data.mapping.PreferredConstructor$Parameter<java.lang.Object, P>...);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field isPropertyParameterCache:Ljava/util/Map;
      15: aload_0
      16: new           #5                  // class java/util/concurrent/locks/ReentrantReadWriteLock
      19: dup
      20: invokespecial #6                  // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
      23: putfield      #7                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      26: aload_0
      27: aload_0
      28: getfield      #7                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      31: invokevirtual #8                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      34: putfield      #9                  // Field read:Ljava/util/concurrent/locks/Lock;
      37: aload_0
      38: aload_0
      39: getfield      #7                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      42: invokevirtual #10                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      45: putfield      #11                 // Field write:Ljava/util/concurrent/locks/Lock;
      48: aload_1
      49: ldc           #12                 // String Constructor must not be null!
      51: invokestatic  #13                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      54: aload_2
      55: ldc           #14                 // String Parameters must not be null!
      57: invokestatic  #13                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      60: aload_1
      61: invokestatic  #15                 // Method org/springframework/util/ReflectionUtils.makeAccessible:(Ljava/lang/reflect/Constructor;)V
      64: aload_0
      65: aload_1
      66: putfield      #16                 // Field constructor:Ljava/lang/reflect/Constructor;
      69: aload_0
      70: aload_2
      71: invokestatic  #17                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      74: putfield      #18                 // Field parameters:Ljava/util/List;
      77: return

  public java.lang.reflect.Constructor<T> getConstructor();
    Code:
       0: aload_0
       1: getfield      #16                 // Field constructor:Ljava/lang/reflect/Constructor;
       4: areturn

  public java.util.List<org.springframework.data.mapping.PreferredConstructor$Parameter<java.lang.Object, P>> getParameters();
    Code:
       0: aload_0
       1: getfield      #18                 // Field parameters:Ljava/util/List;
       4: areturn

  public boolean hasParameters();
    Code:
       0: aload_0
       1: getfield      #18                 // Field parameters:Ljava/util/List;
       4: invokeinterface #19,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public boolean isNoArgConstructor();
    Code:
       0: aload_0
       1: getfield      #18                 // Field parameters:Ljava/util/List;
       4: invokeinterface #19,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ireturn

  public boolean isExplicitlyAnnotated();
    Code:
       0: aload_0
       1: getfield      #16                 // Field constructor:Ljava/lang/reflect/Constructor;
       4: ldc           #20                 // class org/springframework/data/annotation/PersistenceConstructor
       6: invokevirtual #21                 // Method java/lang/reflect/Constructor.isAnnotationPresent:(Ljava/lang/Class;)Z
       9: ireturn

  public boolean isConstructorParameter(org.springframework.data.mapping.PersistentProperty<?>);
    Code:
       0: aload_1
       1: ldc           #22                 // String Property must not be null!
       3: invokestatic  #13                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #9                  // Field read:Ljava/util/concurrent/locks/Lock;
      10: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      15: aload_0
      16: getfield      #4                  // Field isPropertyParameterCache:Ljava/util/Map;
      19: aload_1
      20: invokeinterface #24,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #25                 // class java/lang/Boolean
      28: astore_2
      29: aload_2
      30: ifnull        49
      33: aload_2
      34: invokevirtual #26                 // Method java/lang/Boolean.booleanValue:()Z
      37: istore_3
      38: aload_0
      39: getfield      #9                  // Field read:Ljava/util/concurrent/locks/Lock;
      42: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      47: iload_3
      48: ireturn
      49: aload_0
      50: getfield      #9                  // Field read:Ljava/util/concurrent/locks/Lock;
      53: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      58: goto          75
      61: astore        4
      63: aload_0
      64: getfield      #9                  // Field read:Ljava/util/concurrent/locks/Lock;
      67: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      72: aload         4
      74: athrow
      75: aload_0
      76: getfield      #11                 // Field write:Ljava/util/concurrent/locks/Lock;
      79: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      84: aload_0
      85: getfield      #18                 // Field parameters:Ljava/util/List;
      88: invokeinterface #28,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      93: astore_2
      94: aload_2
      95: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     100: ifeq          154
     103: aload_2
     104: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     109: checkcast     #31                 // class org/springframework/data/mapping/PreferredConstructor$Parameter
     112: astore_3
     113: aload_3
     114: aload_1
     115: invokevirtual #32                 // Method org/springframework/data/mapping/PreferredConstructor$Parameter.maps:(Lorg/springframework/data/mapping/PersistentProperty;)Z
     118: ifeq          151
     121: aload_0
     122: getfield      #4                  // Field isPropertyParameterCache:Ljava/util/Map;
     125: aload_1
     126: iconst_1
     127: invokestatic  #33                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     130: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     135: pop
     136: iconst_1
     137: istore        4
     139: aload_0
     140: getfield      #11                 // Field write:Ljava/util/concurrent/locks/Lock;
     143: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     148: iload         4
     150: ireturn
     151: goto          94
     154: aload_0
     155: getfield      #4                  // Field isPropertyParameterCache:Ljava/util/Map;
     158: aload_1
     159: iconst_0
     160: invokestatic  #33                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     163: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     168: pop
     169: iconst_0
     170: istore_2
     171: aload_0
     172: getfield      #11                 // Field write:Ljava/util/concurrent/locks/Lock;
     175: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     180: iload_2
     181: ireturn
     182: astore        5
     184: aload_0
     185: getfield      #11                 // Field write:Ljava/util/concurrent/locks/Lock;
     188: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     193: aload         5
     195: athrow
    Exception table:
       from    to  target type
           6    38    61   any
          61    63    61   any
          75   139   182   any
         151   171   182   any
         182   184   182   any

  public boolean isEnclosingClassParameter(org.springframework.data.mapping.PreferredConstructor$Parameter<?, P>);
    Code:
       0: aload_1
       1: ldc           #35                 // String Parameter must not be null!
       3: invokestatic  #13                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #18                 // Field parameters:Ljava/util/List;
      10: invokeinterface #19,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      15: ifne          25
      18: aload_1
      19: invokestatic  #36                 // Method org/springframework/data/mapping/PreferredConstructor$Parameter.access$000:(Lorg/springframework/data/mapping/PreferredConstructor$Parameter;)Z
      22: ifne          27
      25: iconst_0
      26: ireturn
      27: aload_0
      28: getfield      #18                 // Field parameters:Ljava/util/List;
      31: iconst_0
      32: invokeinterface #37,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      37: checkcast     #31                 // class org/springframework/data/mapping/PreferredConstructor$Parameter
      40: aload_1
      41: invokevirtual #38                 // Method org/springframework/data/mapping/PreferredConstructor$Parameter.equals:(Ljava/lang/Object;)Z
      44: ireturn
}
