Compiled from "ParameterTypes.java"
public class org.springframework.data.util.ParameterTypes {
  private static final org.springframework.core.convert.TypeDescriptor OBJECT_DESCRIPTOR;

  private static final java.util.concurrent.ConcurrentMap<java.util.List<org.springframework.core.convert.TypeDescriptor>, org.springframework.data.util.ParameterTypes> CACHE;

  private final java.util.List<org.springframework.core.convert.TypeDescriptor> types;

  private final org.springframework.data.util.Lazy<java.util.Collection<org.springframework.data.util.ParameterTypes>> alternatives;

  private org.springframework.data.util.ParameterTypes(java.util.List<org.springframework.core.convert.TypeDescriptor>);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field types:Ljava/util/List;
       9: aload_0
      10: aload_0
      11: invokedynamic #5,  0              // InvokeDynamic #0:get:(Lorg/springframework/data/util/ParameterTypes;)Ljava/util/function/Supplier;
      16: invokestatic  #6                  // Method org/springframework/data/util/Lazy.of:(Ljava/util/function/Supplier;)Lorg/springframework/data/util/Lazy;
      19: putfield      #7                  // Field alternatives:Lorg/springframework/data/util/Lazy;
      22: return

  public static org.springframework.data.util.ParameterTypes of(java.util.List<org.springframework.core.convert.TypeDescriptor>);
    Code:
       0: aload_0
       1: ldc           #8                  // String Types must not be null!
       3: invokestatic  #9                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: getstatic     #10                 // Field CACHE:Ljava/util/concurrent/ConcurrentMap;
       9: aload_0
      10: invokedynamic #11,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      15: invokeinterface #12,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      20: checkcast     #13                 // class org/springframework/data/util/ParameterTypes
      23: areturn

  static org.springframework.data.util.ParameterTypes of(java.lang.Class<?>...);
    Code:
       0: aload_0
       1: ldc           #8                  // String Types must not be null!
       3: invokestatic  #9                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: ldc           #14                 // String Types must not have null elements!
       9: invokestatic  #15                 // Method org/springframework/util/Assert.noNullElements:([Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: invokestatic  #16                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      16: invokedynamic #17,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      21: invokeinterface #18,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      26: invokestatic  #19                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      29: invokeinterface #20,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      34: checkcast     #21                 // class java/util/List
      37: invokestatic  #22                 // Method of:(Ljava/util/List;)Lorg/springframework/data/util/ParameterTypes;
      40: areturn

  public boolean areValidFor(java.lang.reflect.Method);
    Code:
       0: aload_1
       1: ldc           #23                 // String Method must not be null!
       3: invokestatic  #9                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokespecial #24                 // Method areValidTypes:(Ljava/lang/reflect/Method;)Z
      11: ifeq          16
      14: iconst_1
      15: ireturn
      16: aload_0
      17: aload_1
      18: invokespecial #25                 // Method hasValidAlternativeFor:(Ljava/lang/reflect/Method;)Z
      21: ireturn

  private boolean hasValidAlternativeFor(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: getfield      #7                  // Field alternatives:Lorg/springframework/data/util/Lazy;
       4: invokevirtual #26                 // Method org/springframework/data/util/Lazy.get:()Ljava/lang/Object;
       7: checkcast     #27                 // class java/util/Collection
      10: invokeinterface #28,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      15: aload_1
      16: invokedynamic #29,  0             // InvokeDynamic #3:test:(Ljava/lang/reflect/Method;)Ljava/util/function/Predicate;
      21: invokeinterface #30,  2           // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      26: ifne          58
      29: aload_0
      30: invokevirtual #31                 // Method getParent:()Ljava/util/Optional;
      33: aload_1
      34: invokedynamic #32,  0             // InvokeDynamic #4:apply:(Ljava/lang/reflect/Method;)Ljava/util/function/Function;
      39: invokevirtual #33                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      42: iconst_0
      43: invokestatic  #34                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      46: invokevirtual #35                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      49: checkcast     #36                 // class java/lang/Boolean
      52: invokevirtual #37                 // Method java/lang/Boolean.booleanValue:()Z
      55: ifeq          62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: ireturn

  java.util.List<org.springframework.data.util.ParameterTypes> getAllAlternatives();
    Code:
       0: new           #38                 // class java/util/ArrayList
       3: dup
       4: invokespecial #39                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #7                  // Field alternatives:Lorg/springframework/data/util/Lazy;
      13: invokevirtual #26                 // Method org/springframework/data/util/Lazy.get:()Ljava/lang/Object;
      16: checkcast     #27                 // class java/util/Collection
      19: invokeinterface #40,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      24: pop
      25: aload_0
      26: invokevirtual #31                 // Method getParent:()Ljava/util/Optional;
      29: aload_1
      30: invokedynamic #41,  0             // InvokeDynamic #5:accept:(Ljava/util/List;)Ljava/util/function/Consumer;
      35: invokevirtual #42                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      38: aload_1
      39: areturn

  boolean hasTypes(java.lang.Class<?>...);
    Code:
       0: aload_1
       1: ldc           #8                  // String Types must not be null!
       3: invokestatic  #9                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokestatic  #16                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      10: invokedynamic #17,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      15: invokeinterface #18,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      20: invokestatic  #19                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      23: invokeinterface #20,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      28: checkcast     #21                 // class java/util/List
      31: aload_0
      32: getfield      #4                  // Field types:Ljava/util/List;
      35: invokeinterface #43,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
      40: ireturn

  public boolean exactlyMatchParametersOf(java.lang.reflect.Method);
    Code:
       0: aload_1
       1: invokevirtual #44                 // Method java/lang/reflect/Method.getParameterCount:()I
       4: aload_0
       5: getfield      #4                  // Field types:Ljava/util/List;
       8: invokeinterface #45,  1           // InterfaceMethod java/util/List.size:()I
      13: if_icmpeq     18
      16: iconst_0
      17: ireturn
      18: aload_1
      19: invokevirtual #46                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      22: astore_2
      23: iconst_0
      24: istore_3
      25: iload_3
      26: aload_2
      27: arraylength
      28: if_icmpge     61
      31: aload_2
      32: iload_3
      33: aaload
      34: aload_0
      35: getfield      #4                  // Field types:Ljava/util/List;
      38: iload_3
      39: invokeinterface #47,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      44: checkcast     #48                 // class org/springframework/core/convert/TypeDescriptor
      47: invokevirtual #49                 // Method org/springframework/core/convert/TypeDescriptor.getType:()Ljava/lang/Class;
      50: if_acmpeq     55
      53: iconst_0
      54: ireturn
      55: iinc          3, 1
      58: goto          25
      61: iconst_1
      62: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #4                  // Field types:Ljava/util/List;
       4: invokeinterface #50,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: invokedynamic #51,  0             // InvokeDynamic #6:apply:()Ljava/util/function/Function;
      14: invokeinterface #18,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      19: invokedynamic #52,  0             // InvokeDynamic #7:apply:()Ljava/util/function/Function;
      24: invokeinterface #18,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      29: ldc           #53                 // String ,
      31: ldc           #54                 // String (
      33: ldc           #55                 // String )
      35: invokestatic  #56                 // Method java/util/stream/Collectors.joining:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/util/stream/Collector;
      38: invokeinterface #20,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      43: checkcast     #57                 // class java/lang/String
      46: areturn

  protected java.util.Optional<org.springframework.data.util.ParameterTypes> getParent();
    Code:
       0: aload_0
       1: getfield      #4                  // Field types:Ljava/util/List;
       4: invokeinterface #58,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifeq          18
      12: invokestatic  #59                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      15: goto          26
      18: aload_0
      19: aload_0
      20: invokespecial #1                  // Method getTail:()Lorg/springframework/core/convert/TypeDescriptor;
      23: invokevirtual #60                 // Method getParent:(Lorg/springframework/core/convert/TypeDescriptor;)Ljava/util/Optional;
      26: areturn

  protected final java.util.Optional<org.springframework.data.util.ParameterTypes> getParent(org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_0
       1: getfield      #4                  // Field types:Ljava/util/List;
       4: invokeinterface #45,  1           // InterfaceMethod java/util/List.size:()I
       9: iconst_1
      10: if_icmpgt     19
      13: invokestatic  #59                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      16: goto          47
      19: aload_0
      20: getfield      #4                  // Field types:Ljava/util/List;
      23: iconst_0
      24: aload_0
      25: getfield      #4                  // Field types:Ljava/util/List;
      28: invokeinterface #45,  1           // InterfaceMethod java/util/List.size:()I
      33: iconst_1
      34: isub
      35: invokeinterface #61,  3           // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
      40: aload_1
      41: invokestatic  #62                 // Method org/springframework/data/util/ParameterTypes$ParentParameterTypes.of:(Ljava/util/List;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/data/util/ParameterTypes$ParentParameterTypes;
      44: invokestatic  #63                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      47: areturn

  protected java.util.Optional<org.springframework.data.util.ParameterTypes> withLastVarArgs();
    Code:
       0: aload_0
       1: getfield      #4                  // Field types:Ljava/util/List;
       4: aload_0
       5: getfield      #4                  // Field types:Ljava/util/List;
       8: invokeinterface #45,  1           // InterfaceMethod java/util/List.size:()I
      13: iconst_1
      14: isub
      15: invokeinterface #47,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      20: checkcast     #48                 // class org/springframework/core/convert/TypeDescriptor
      23: astore_1
      24: aload_1
      25: invokevirtual #64                 // Method org/springframework/core/convert/TypeDescriptor.isArray:()Z
      28: ifeq          37
      31: invokestatic  #59                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      34: goto          45
      37: aload_0
      38: aload_1
      39: invokespecial #65                 // Method withVarArgs:(Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/data/util/ParameterTypes;
      42: invokestatic  #66                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      45: areturn

  private org.springframework.data.util.ParameterTypes withVarArgs(org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_0
       1: getfield      #4                  // Field types:Ljava/util/List;
       4: aload_0
       5: getfield      #4                  // Field types:Ljava/util/List;
       8: invokeinterface #45,  1           // InterfaceMethod java/util/List.size:()I
      13: iconst_1
      14: isub
      15: invokeinterface #47,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      20: checkcast     #48                 // class org/springframework/core/convert/TypeDescriptor
      23: astore_2
      24: aload_2
      25: invokevirtual #64                 // Method org/springframework/core/convert/TypeDescriptor.isArray:()Z
      28: ifeq          44
      31: aload_2
      32: invokevirtual #67                 // Method org/springframework/core/convert/TypeDescriptor.getElementTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
      35: aload_1
      36: invokevirtual #68                 // Method org/springframework/core/convert/TypeDescriptor.equals:(Ljava/lang/Object;)Z
      39: ifeq          44
      42: aload_0
      43: areturn
      44: new           #38                 // class java/util/ArrayList
      47: dup
      48: aload_0
      49: getfield      #4                  // Field types:Ljava/util/List;
      52: iconst_0
      53: aload_0
      54: getfield      #4                  // Field types:Ljava/util/List;
      57: invokeinterface #45,  1           // InterfaceMethod java/util/List.size:()I
      62: iconst_1
      63: isub
      64: invokeinterface #61,  3           // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
      69: invokespecial #69                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      72: astore_3
      73: aload_3
      74: aload_1
      75: invokestatic  #70                 // Method org/springframework/core/convert/TypeDescriptor.array:(Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/TypeDescriptor;
      78: invokeinterface #71,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      83: pop
      84: aload_3
      85: invokestatic  #22                 // Method of:(Ljava/util/List;)Lorg/springframework/data/util/ParameterTypes;
      88: areturn

  private java.util.Collection<org.springframework.data.util.ParameterTypes> getAlternatives();
    Code:
       0: aload_0
       1: getfield      #4                  // Field types:Ljava/util/List;
       4: invokeinterface #58,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifeq          16
      12: invokestatic  #72                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      15: areturn
      16: new           #38                 // class java/util/ArrayList
      19: dup
      20: invokespecial #39                 // Method java/util/ArrayList."<init>":()V
      23: astore_1
      24: aload_0
      25: invokevirtual #73                 // Method withLastVarArgs:()Ljava/util/Optional;
      28: aload_1
      29: dup
      30: invokevirtual #74                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      33: pop
      34: invokedynamic #75,  0             // InvokeDynamic #8:accept:(Ljava/util/List;)Ljava/util/function/Consumer;
      39: invokevirtual #42                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      42: aload_0
      43: getstatic     #76                 // Field OBJECT_DESCRIPTOR:Lorg/springframework/core/convert/TypeDescriptor;
      46: invokespecial #65                 // Method withVarArgs:(Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/data/util/ParameterTypes;
      49: astore_2
      50: aload_1
      51: aload_2
      52: invokeinterface #77,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      57: ifne          68
      60: aload_1
      61: aload_2
      62: invokeinterface #71,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      67: pop
      68: aload_1
      69: areturn

  private boolean areValidTypes(java.lang.reflect.Method);
    Code:
       0: aload_1
       1: ldc           #23                 // String Method must not be null!
       3: invokestatic  #9                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokevirtual #44                 // Method java/lang/reflect/Method.getParameterCount:()I
      10: aload_0
      11: getfield      #4                  // Field types:Ljava/util/List;
      14: invokeinterface #45,  1           // InterfaceMethod java/util/List.size:()I
      19: if_icmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: invokevirtual #46                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      28: astore_2
      29: iconst_0
      30: istore_3
      31: iload_3
      32: aload_2
      33: arraylength
      34: if_icmpge     70
      37: aload_2
      38: iload_3
      39: aaload
      40: aload_0
      41: getfield      #4                  // Field types:Ljava/util/List;
      44: iload_3
      45: invokeinterface #47,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      50: checkcast     #48                 // class org/springframework/core/convert/TypeDescriptor
      53: invokevirtual #49                 // Method org/springframework/core/convert/TypeDescriptor.getType:()Ljava/lang/Class;
      56: invokestatic  #78                 // Method org/springframework/util/TypeUtils.isAssignable:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z
      59: ifne          64
      62: iconst_0
      63: ireturn
      64: iinc          3, 1
      67: goto          31
      70: iconst_1
      71: ireturn

  private org.springframework.core.convert.TypeDescriptor getTail();
    Code:
       0: aload_0
       1: getfield      #4                  // Field types:Ljava/util/List;
       4: aload_0
       5: getfield      #4                  // Field types:Ljava/util/List;
       8: invokeinterface #45,  1           // InterfaceMethod java/util/List.size:()I
      13: iconst_1
      14: isub
      15: invokeinterface #47,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      20: checkcast     #48                 // class org/springframework/core/convert/TypeDescriptor
      23: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #13                 // class org/springframework/data/util/ParameterTypes
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #13                 // class org/springframework/data/util/ParameterTypes
      20: astore_2
      21: aload_2
      22: aload_0
      23: invokevirtual #79                 // Method canEqual:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: getfield      #4                  // Field types:Ljava/util/List;
      35: astore_3
      36: aload_2
      37: getfield      #4                  // Field types:Ljava/util/List;
      40: astore        4
      42: aload_3
      43: ifnonnull     54
      46: aload         4
      48: ifnull        65
      51: goto          63
      54: aload_3
      55: aload         4
      57: invokevirtual #80                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifne          65
      63: iconst_0
      64: ireturn
      65: iconst_1
      66: ireturn

  protected boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #13                 // class org/springframework/data/util/ParameterTypes
       4: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: aload_0
       6: getfield      #4                  // Field types:Ljava/util/List;
       9: astore_3
      10: iload_2
      11: bipush        59
      13: imul
      14: aload_3
      15: ifnonnull     23
      18: bipush        43
      20: goto          27
      23: aload_3
      24: invokevirtual #81                 // Method java/lang/Object.hashCode:()I
      27: iadd
      28: istore_2
      29: iload_2
      30: ireturn

  public org.springframework.data.util.ParameterTypes(java.util.List<org.springframework.core.convert.TypeDescriptor>, org.springframework.data.util.Lazy<java.util.Collection<org.springframework.data.util.ParameterTypes>>);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field types:Ljava/util/List;
       9: aload_0
      10: aload_2
      11: putfield      #7                  // Field alternatives:Lorg/springframework/data/util/Lazy;
      14: return

  private static void lambda$getAllAlternatives$3(java.util.List, org.springframework.data.util.ParameterTypes);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #82                 // Method getAllAlternatives:()Ljava/util/List;
       5: invokeinterface #40,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      10: pop
      11: return

  private static java.lang.Boolean lambda$hasValidAlternativeFor$2(java.lang.reflect.Method, org.springframework.data.util.ParameterTypes);
    Code:
       0: aload_1
       1: aload_0
       2: invokespecial #25                 // Method hasValidAlternativeFor:(Ljava/lang/reflect/Method;)Z
       5: invokestatic  #34                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       8: areturn

  private static boolean lambda$hasValidAlternativeFor$1(java.lang.reflect.Method, org.springframework.data.util.ParameterTypes);
    Code:
       0: aload_1
       1: aload_0
       2: invokespecial #24                 // Method areValidTypes:(Ljava/lang/reflect/Method;)Z
       5: ireturn

  private java.util.Collection lambda$new$0();
    Code:
       0: aload_0
       1: invokespecial #83                 // Method getAlternatives:()Ljava/util/Collection;
       4: areturn

  org.springframework.data.util.ParameterTypes(java.util.List, org.springframework.data.util.ParameterTypes$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method "<init>":(Ljava/util/List;)V
       5: return

  static org.springframework.core.convert.TypeDescriptor access$100(org.springframework.data.util.ParameterTypes);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method getTail:()Lorg/springframework/core/convert/TypeDescriptor;
       4: areturn

  static {};
    Code:
       0: ldc           #84                 // class java/lang/Object
       2: invokestatic  #85                 // Method org/springframework/core/convert/TypeDescriptor.valueOf:(Ljava/lang/Class;)Lorg/springframework/core/convert/TypeDescriptor;
       5: putstatic     #76                 // Field OBJECT_DESCRIPTOR:Lorg/springframework/core/convert/TypeDescriptor;
       8: new           #86                 // class org/springframework/util/ConcurrentReferenceHashMap
      11: dup
      12: invokespecial #87                 // Method org/springframework/util/ConcurrentReferenceHashMap."<init>":()V
      15: putstatic     #10                 // Field CACHE:Ljava/util/concurrent/ConcurrentMap;
      18: return
}
