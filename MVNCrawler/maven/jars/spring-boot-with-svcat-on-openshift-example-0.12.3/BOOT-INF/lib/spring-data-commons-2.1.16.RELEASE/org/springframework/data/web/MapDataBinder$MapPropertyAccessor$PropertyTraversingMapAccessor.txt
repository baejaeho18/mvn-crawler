Compiled from "MapDataBinder.java"
final class org.springframework.data.web.MapDataBinder$MapPropertyAccessor$PropertyTraversingMapAccessor extends org.springframework.context.expression.MapAccessor {
  private final org.springframework.core.convert.ConversionService conversionService;

  private java.lang.Class<?> type;

  public org.springframework.data.web.MapDataBinder$MapPropertyAccessor$PropertyTraversingMapAccessor(java.lang.Class<?>, org.springframework.core.convert.ConversionService);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/context/expression/MapAccessor."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Type must not be null!
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_2
      11: ldc           #4                  // String ConversionService must not be null!
      13: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_0
      17: aload_1
      18: putfield      #5                  // Field type:Ljava/lang/Class;
      21: aload_0
      22: aload_2
      23: putfield      #6                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      26: return

  public boolean canRead(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String) throws org.springframework.expression.AccessException;
    Code:
       0: iconst_1
       1: ireturn

  public org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String) throws org.springframework.expression.AccessException;
    Code:
       0: aload_2
       1: ifnonnull     8
       4: getstatic     #7                  // Field org/springframework/expression/TypedValue.NULL:Lorg/springframework/expression/TypedValue;
       7: areturn
       8: aload_3
       9: aload_0
      10: getfield      #5                  // Field type:Ljava/lang/Class;
      13: invokestatic  #8                  // Method org/springframework/data/mapping/PropertyPath.from:(Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/data/mapping/PropertyPath;
      16: astore        4
      18: aload_0
      19: aload_1
      20: aload_2
      21: aload_3
      22: invokespecial #9                  // Method org/springframework/context/expression/MapAccessor.read:(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/expression/TypedValue;
      25: astore        5
      27: aload_0
      28: aload         4
      30: invokevirtual #10                 // Method org/springframework/data/mapping/PropertyPath.getType:()Ljava/lang/Class;
      33: putfield      #5                  // Field type:Ljava/lang/Class;
      36: aload         5
      38: areturn
      39: astore        5
      41: aload         4
      43: invokevirtual #12                 // Method org/springframework/data/mapping/PropertyPath.isCollection:()Z
      46: ifeq          58
      49: ldc           #13                 // class java/util/List
      51: iconst_0
      52: invokestatic  #14                 // Method org/springframework/core/CollectionFactory.createCollection:(Ljava/lang/Class;I)Ljava/util/Collection;
      55: goto          64
      58: ldc           #15                 // class java/util/Map
      60: iconst_0
      61: invokestatic  #16                 // Method org/springframework/core/CollectionFactory.createMap:(Ljava/lang/Class;I)Ljava/util/Map;
      64: astore        6
      66: aload_2
      67: checkcast     #15                 // class java/util/Map
      70: aload_3
      71: aload         6
      73: invokeinterface #17,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: new           #18                 // class org/springframework/expression/TypedValue
      82: dup
      83: aload         6
      85: aload_0
      86: aload         4
      88: aload         6
      90: invokespecial #19                 // Method getDescriptor:(Lorg/springframework/data/mapping/PropertyPath;Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;
      93: invokespecial #20                 // Method org/springframework/expression/TypedValue."<init>":(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;)V
      96: astore        7
      98: aload_0
      99: aload         4
     101: invokevirtual #10                 // Method org/springframework/data/mapping/PropertyPath.getType:()Ljava/lang/Class;
     104: putfield      #5                  // Field type:Ljava/lang/Class;
     107: aload         7
     109: areturn
     110: astore        8
     112: aload_0
     113: aload         4
     115: invokevirtual #10                 // Method org/springframework/data/mapping/PropertyPath.getType:()Ljava/lang/Class;
     118: putfield      #5                  // Field type:Ljava/lang/Class;
     121: aload         8
     123: athrow
    Exception table:
       from    to  target type
          18    27    39   Class org/springframework/expression/AccessException
          18    27   110   any
          39    98   110   any
         110   112   110   any

  private org.springframework.core.convert.TypeDescriptor getDescriptor(org.springframework.data.mapping.PropertyPath, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #10                 // Method org/springframework/data/mapping/PropertyPath.getType:()Ljava/lang/Class;
       4: astore_3
       5: aload_0
       6: getfield      #6                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
       9: ldc           #21                 // class java/lang/String
      11: aload_3
      12: invokeinterface #22,  3           // InterfaceMethod org/springframework/core/convert/ConversionService.canConvert:(Ljava/lang/Class;Ljava/lang/Class;)Z
      17: ifeq          28
      20: ldc           #21                 // class java/lang/String
      22: invokestatic  #23                 // Method org/springframework/core/convert/TypeDescriptor.valueOf:(Ljava/lang/Class;)Lorg/springframework/core/convert/TypeDescriptor;
      25: goto          33
      28: ldc           #24                 // class java/util/HashMap
      30: invokestatic  #23                 // Method org/springframework/core/convert/TypeDescriptor.valueOf:(Ljava/lang/Class;)Lorg/springframework/core/convert/TypeDescriptor;
      33: astore        4
      35: aload_1
      36: invokevirtual #12                 // Method org/springframework/data/mapping/PropertyPath.isCollection:()Z
      39: ifeq          54
      42: aload_2
      43: invokevirtual #25                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      46: aload         4
      48: invokestatic  #26                 // Method org/springframework/core/convert/TypeDescriptor.collection:(Ljava/lang/Class;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/TypeDescriptor;
      51: goto          68
      54: aload_2
      55: invokevirtual #25                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      58: ldc           #21                 // class java/lang/String
      60: invokestatic  #23                 // Method org/springframework/core/convert/TypeDescriptor.valueOf:(Ljava/lang/Class;)Lorg/springframework/core/convert/TypeDescriptor;
      63: aload         4
      65: invokestatic  #27                 // Method org/springframework/core/convert/TypeDescriptor.map:(Ljava/lang/Class;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/TypeDescriptor;
      68: areturn
}
