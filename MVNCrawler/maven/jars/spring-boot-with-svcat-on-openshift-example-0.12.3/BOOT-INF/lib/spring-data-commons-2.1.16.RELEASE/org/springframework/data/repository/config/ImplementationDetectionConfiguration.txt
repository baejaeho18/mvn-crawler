Compiled from "ImplementationDetectionConfiguration.java"
public interface org.springframework.data.repository.config.ImplementationDetectionConfiguration {
  public abstract java.lang.String getImplementationPostfix();

  public abstract org.springframework.data.util.Streamable<java.lang.String> getBasePackages();

  public abstract org.springframework.data.util.Streamable<org.springframework.core.type.filter.TypeFilter> getExcludeFilters();

  public abstract org.springframework.core.type.classreading.MetadataReaderFactory getMetadataReaderFactory();

  public default java.lang.String generateBeanName(org.springframework.beans.factory.config.BeanDefinition);
    Code:
       0: aload_1
       1: ldc           #1                  // String BeanDefinition must not be null!
       3: invokestatic  #2                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokeinterface #3,  1            // InterfaceMethod org/springframework/beans/factory/config/BeanDefinition.getBeanClassName:()Ljava/lang/String;
      12: astore_2
      13: aload_2
      14: ifnonnull     27
      17: new           #4                  // class java/lang/IllegalStateException
      20: dup
      21: ldc           #5                  // String Cannot generate bean name for BeanDefinition without bean class name!
      23: invokespecial #6                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_2
      28: invokestatic  #7                  // Method org/springframework/util/ClassUtils.getShortName:(Ljava/lang/String;)Ljava/lang/String;
      31: invokestatic  #8                  // Method org/springframework/util/StringUtils.uncapitalize:(Ljava/lang/String;)Ljava/lang/String;
      34: areturn

  public default org.springframework.data.repository.config.ImplementationLookupConfiguration forFragment(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #9                  // String Fragment interface name must not be null or empty!
       3: invokestatic  #10                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: new           #11                 // class org/springframework/data/repository/config/DefaultImplementationLookupConfiguration
       9: dup
      10: aload_0
      11: aload_1
      12: invokespecial #12                 // Method org/springframework/data/repository/config/DefaultImplementationLookupConfiguration."<init>":(Lorg/springframework/data/repository/config/ImplementationDetectionConfiguration;Ljava/lang/String;)V
      15: areturn

  public default org.springframework.data.repository.config.ImplementationLookupConfiguration forRepositoryConfiguration(org.springframework.data.repository.config.RepositoryConfiguration<?>);
    Code:
       0: aload_1
       1: ldc           #13                 // String RepositoryConfiguration must not be null!
       3: invokestatic  #2                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #14                 // class org/springframework/data/repository/config/ImplementationDetectionConfiguration$1
       9: dup
      10: aload_0
      11: aload_0
      12: aload_1
      13: invokeinterface #15,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.getRepositoryInterface:()Ljava/lang/String;
      18: aload_1
      19: invokespecial #16                 // Method org/springframework/data/repository/config/ImplementationDetectionConfiguration$1."<init>":(Lorg/springframework/data/repository/config/ImplementationDetectionConfiguration;Lorg/springframework/data/repository/config/ImplementationDetectionConfiguration;Ljava/lang/String;Lorg/springframework/data/repository/config/RepositoryConfiguration;)V
      22: areturn
}
