Compiled from "ClassGeneratingPropertyAccessorFactory.java"
public class org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory implements org.springframework.data.mapping.model.PersistentPropertyAccessorFactory {
  private final java.lang.ThreadLocal<java.lang.Object[]> argumentCache;

  private volatile java.util.Map<org.springframework.data.mapping.PersistentEntity<?, ?>, java.lang.reflect.Constructor<?>> constructorMap;

  private volatile java.util.Map<org.springframework.data.util.TypeInformation<?>, java.lang.Class<org.springframework.data.mapping.PersistentPropertyAccessor<?>>> propertyAccessorClasses;

  public org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokedynamic #7,  0              // InvokeDynamic #0:get:()Ljava/util/function/Supplier;
      10: invokestatic  #8                  // Method java/lang/ThreadLocal.withInitial:(Ljava/util/function/Supplier;)Ljava/lang/ThreadLocal;
      13: putfield      #9                  // Field argumentCache:Ljava/lang/ThreadLocal;
      16: aload_0
      17: new           #10                 // class java/util/HashMap
      20: dup
      21: bipush        32
      23: invokespecial #11                 // Method java/util/HashMap."<init>":(I)V
      26: putfield      #12                 // Field constructorMap:Ljava/util/Map;
      29: aload_0
      30: new           #10                 // class java/util/HashMap
      33: dup
      34: bipush        32
      36: invokespecial #11                 // Method java/util/HashMap."<init>":(I)V
      39: putfield      #13                 // Field propertyAccessorClasses:Ljava/util/Map;
      42: return

  public <T> org.springframework.data.mapping.PersistentPropertyAccessor<T> getPropertyAccessor(org.springframework.data.mapping.PersistentEntity<?, ?>, T);
    Code:
       0: aload_0
       1: getfield      #12                 // Field constructorMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #15                 // class java/lang/reflect/Constructor
      13: astore_3
      14: aload_3
      15: ifnonnull     62
      18: aload_0
      19: aload_1
      20: invokespecial #16                 // Method potentiallyCreateAndRegisterPersistentPropertyAccessorClass:(Lorg/springframework/data/mapping/PersistentEntity;)Ljava/lang/Class;
      23: astore        4
      25: aload         4
      27: invokevirtual #17                 // Method java/lang/Class.getConstructors:()[Ljava/lang/reflect/Constructor;
      30: iconst_0
      31: aaload
      32: astore_3
      33: new           #10                 // class java/util/HashMap
      36: dup
      37: aload_0
      38: getfield      #12                 // Field constructorMap:Ljava/util/Map;
      41: invokespecial #18                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      44: astore        5
      46: aload         5
      48: aload_1
      49: aload_3
      50: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      55: pop
      56: aload_0
      57: aload         5
      59: putfield      #12                 // Field constructorMap:Ljava/util/Map;
      62: aload_0
      63: getfield      #9                  // Field argumentCache:Ljava/lang/ThreadLocal;
      66: invokevirtual #20                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      69: checkcast     #21                 // class "[Ljava/lang/Object;"
      72: astore        4
      74: aload         4
      76: iconst_0
      77: aload_2
      78: aastore
      79: aload_3
      80: aload         4
      82: invokevirtual #22                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      85: checkcast     #23                 // class org/springframework/data/mapping/PersistentPropertyAccessor
      88: astore        5
      90: aload         4
      92: iconst_0
      93: aconst_null
      94: aastore
      95: aload         5
      97: areturn
      98: astore        5
     100: new           #25                 // class java/lang/IllegalArgumentException
     103: dup
     104: ldc           #26                 // String Cannot create persistent property accessor for %s
     106: iconst_1
     107: anewarray     #27                 // class java/lang/Object
     110: dup
     111: iconst_0
     112: aload_1
     113: aastore
     114: invokestatic  #28                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     117: aload         5
     119: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     122: athrow
     123: astore        6
     125: aload         4
     127: iconst_0
     128: aconst_null
     129: aastore
     130: aload         6
     132: athrow
    Exception table:
       from    to  target type
          79    90    98   Class java/lang/Exception
          79    90   123   any
          98   125   123   any

  public boolean isSupported(org.springframework.data.mapping.PersistentEntity<?, ?>);
    Code:
       0: aload_1
       1: ldc           #30                 // String PersistentEntity must not be null!
       3: invokestatic  #31                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokestatic  #32                 // Method isClassLoaderDefineClassAvailable:(Lorg/springframework/data/mapping/PersistentEntity;)Z
      10: ifeq          32
      13: aload_1
      14: invokestatic  #33                 // Method isTypeInjectable:(Lorg/springframework/data/mapping/PersistentEntity;)Z
      17: ifeq          32
      20: aload_0
      21: aload_1
      22: invokespecial #34                 // Method hasUniquePropertyHashCodes:(Lorg/springframework/data/mapping/PersistentEntity;)Z
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  private static boolean isClassLoaderDefineClassAvailable(org.springframework.data.mapping.PersistentEntity<?, ?>);
    Code:
       0: aload_0
       1: invokeinterface #35,  1           // InterfaceMethod org/springframework/data/mapping/PersistentEntity.getType:()Ljava/lang/Class;
       6: invokevirtual #36                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       9: invokevirtual #37                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      12: ldc           #38                 // String defineClass
      14: iconst_5
      15: anewarray     #39                 // class java/lang/Class
      18: dup
      19: iconst_0
      20: ldc           #40                 // class java/lang/String
      22: aastore
      23: dup
      24: iconst_1
      25: ldc           #41                 // class "[B"
      27: aastore
      28: dup
      29: iconst_2
      30: getstatic     #42                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      33: aastore
      34: dup
      35: iconst_3
      36: getstatic     #42                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      39: aastore
      40: dup
      41: iconst_4
      42: ldc           #43                 // class java/security/ProtectionDomain
      44: aastore
      45: invokestatic  #44                 // Method org/springframework/util/ReflectionUtils.findMethod:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      48: ifnull        55
      51: iconst_1
      52: goto          56
      55: iconst_0
      56: ireturn
      57: astore_1
      58: iconst_0
      59: ireturn
    Exception table:
       from    to  target type
           0    56    57   Class java/lang/Exception

  private static boolean isTypeInjectable(org.springframework.data.mapping.PersistentEntity<?, ?>);
    Code:
       0: aload_0
       1: invokeinterface #35,  1           // InterfaceMethod org/springframework/data/mapping/PersistentEntity.getType:()Ljava/lang/Class;
       6: astore_1
       7: aload_1
       8: invokevirtual #36                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      11: ifnull        70
      14: aload_1
      15: invokevirtual #45                 // Method java/lang/Class.getPackage:()Ljava/lang/Package;
      18: ifnull        36
      21: aload_1
      22: invokevirtual #45                 // Method java/lang/Class.getPackage:()Ljava/lang/Package;
      25: invokevirtual #46                 // Method java/lang/Package.getName:()Ljava/lang/String;
      28: ldc           #47                 // String java
      30: invokevirtual #48                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      33: ifne          70
      36: ldc           #23                 // class org/springframework/data/mapping/PersistentPropertyAccessor
      38: invokevirtual #49                 // Method java/lang/Class.getName:()Ljava/lang/String;
      41: aload_1
      42: invokevirtual #36                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      45: invokestatic  #50                 // Method org/springframework/util/ClassUtils.isPresent:(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
      48: ifeq          70
      51: ldc           #51                 // class org/springframework/util/Assert
      53: invokevirtual #49                 // Method java/lang/Class.getName:()Ljava/lang/String;
      56: aload_1
      57: invokevirtual #36                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      60: invokestatic  #50                 // Method org/springframework/util/ClassUtils.isPresent:(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
      63: ifeq          70
      66: iconst_1
      67: goto          71
      70: iconst_0
      71: ireturn

  private boolean hasUniquePropertyHashCodes(org.springframework.data.mapping.PersistentEntity<?, ?>);
    Code:
       0: new           #52                 // class java/util/HashSet
       3: dup
       4: invokespecial #53                 // Method java/util/HashSet."<init>":()V
       7: astore_2
       8: new           #54                 // class java/util/concurrent/atomic/AtomicInteger
      11: dup
      12: invokespecial #55                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      15: astore_3
      16: aload_1
      17: aload_2
      18: aload_3
      19: invokedynamic #56,  0             // InvokeDynamic #1:doWithPersistentProperty:(Ljava/util/Set;Ljava/util/concurrent/atomic/AtomicInteger;)Lorg/springframework/data/mapping/SimplePropertyHandler;
      24: invokeinterface #57,  2           // InterfaceMethod org/springframework/data/mapping/PersistentEntity.doWithProperties:(Lorg/springframework/data/mapping/SimplePropertyHandler;)V
      29: aload_1
      30: aload_2
      31: aload_3
      32: invokedynamic #58,  0             // InvokeDynamic #2:doWithAssociation:(Ljava/util/Set;Ljava/util/concurrent/atomic/AtomicInteger;)Lorg/springframework/data/mapping/SimpleAssociationHandler;
      37: invokeinterface #59,  2           // InterfaceMethod org/springframework/data/mapping/PersistentEntity.doWithAssociations:(Lorg/springframework/data/mapping/SimpleAssociationHandler;)V
      42: aload_2
      43: invokeinterface #60,  1           // InterfaceMethod java/util/Set.size:()I
      48: aload_3
      49: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      52: if_icmpne     59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: ireturn

  private synchronized java.lang.Class<org.springframework.data.mapping.PersistentPropertyAccessor<?>> potentiallyCreateAndRegisterPersistentPropertyAccessorClass(org.springframework.data.mapping.PersistentEntity<?, ?>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field propertyAccessorClasses:Ljava/util/Map;
       4: astore_2
       5: aload_2
       6: aload_1
       7: invokeinterface #62,  1           // InterfaceMethod org/springframework/data/mapping/PersistentEntity.getTypeInformation:()Lorg/springframework/data/util/TypeInformation;
      12: invokeinterface #14,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #39                 // class java/lang/Class
      20: astore_3
      21: aload_3
      22: ifnull        27
      25: aload_3
      26: areturn
      27: aload_0
      28: aload_1
      29: invokespecial #63                 // Method createAccessorClass:(Lorg/springframework/data/mapping/PersistentEntity;)Ljava/lang/Class;
      32: astore_3
      33: new           #10                 // class java/util/HashMap
      36: dup
      37: aload_2
      38: invokespecial #18                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      41: astore_2
      42: aload_2
      43: aload_1
      44: invokeinterface #62,  1           // InterfaceMethod org/springframework/data/mapping/PersistentEntity.getTypeInformation:()Lorg/springframework/data/util/TypeInformation;
      49: aload_3
      50: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      55: pop
      56: aload_0
      57: aload_2
      58: putfield      #13                 // Field propertyAccessorClasses:Ljava/util/Map;
      61: aload_3
      62: areturn

  private java.lang.Class<org.springframework.data.mapping.PersistentPropertyAccessor<?>> createAccessorClass(org.springframework.data.mapping.PersistentEntity<?, ?>);
    Code:
       0: aload_1
       1: invokestatic  #64                 // Method org/springframework/data/mapping/model/ClassGeneratingPropertyAccessorFactory$PropertyAccessorClassGenerator.generateCustomAccessorClass:(Lorg/springframework/data/mapping/PersistentEntity;)Ljava/lang/Class;
       4: areturn
       5: astore_2
       6: new           #65                 // class java/lang/RuntimeException
       9: dup
      10: aload_2
      11: invokespecial #66                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      14: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/Exception

  private static void visitInvokeMethodSingleArg(org.springframework.asm.MethodVisitor, java.lang.reflect.Method);
    Code:
       0: aload_1
       1: invokevirtual #67                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
       4: astore_2
       5: aload_2
       6: iconst_0
       7: aaload
       8: astore_3
       9: aload_1
      10: invokevirtual #68                 // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
      13: astore        4
      15: aload         4
      17: invokevirtual #69                 // Method java/lang/Class.isInterface:()Z
      20: istore        5
      22: aload_0
      23: sipush        192
      26: aload_3
      27: invokestatic  #70                 // Method org/springframework/data/mapping/model/BytecodeUtil.autoboxType:(Ljava/lang/Class;)Ljava/lang/Class;
      30: invokestatic  #71                 // Method org/springframework/asm/Type.getInternalName:(Ljava/lang/Class;)Ljava/lang/String;
      33: invokevirtual #72                 // Method org/springframework/asm/MethodVisitor.visitTypeInsn:(ILjava/lang/String;)V
      36: aload_3
      37: invokestatic  #70                 // Method org/springframework/data/mapping/model/BytecodeUtil.autoboxType:(Ljava/lang/Class;)Ljava/lang/Class;
      40: aload_3
      41: aload_0
      42: invokestatic  #73                 // Method org/springframework/data/mapping/model/BytecodeUtil.autoboxIfNeeded:(Ljava/lang/Class;Ljava/lang/Class;Lorg/springframework/asm/MethodVisitor;)V
      45: aload_1
      46: iload         5
      48: invokestatic  #2                  // Method getInvokeOp:(Ljava/lang/reflect/Method;Z)I
      51: istore        6
      53: aload_0
      54: iload         6
      56: aload_1
      57: invokevirtual #68                 // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
      60: invokestatic  #71                 // Method org/springframework/asm/Type.getInternalName:(Ljava/lang/Class;)Ljava/lang/String;
      63: aload_1
      64: invokevirtual #74                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
      67: ldc           #75                 // String (%s)%s
      69: iconst_2
      70: anewarray     #27                 // class java/lang/Object
      73: dup
      74: iconst_0
      75: aload_3
      76: invokestatic  #76                 // Method org/springframework/data/mapping/model/BytecodeUtil.signatureTypeName:(Ljava/lang/Class;)Ljava/lang/String;
      79: aastore
      80: dup
      81: iconst_1
      82: aload_1
      83: invokevirtual #77                 // Method java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;
      86: invokestatic  #76                 // Method org/springframework/data/mapping/model/BytecodeUtil.signatureTypeName:(Ljava/lang/Class;)Ljava/lang/String;
      89: aastore
      90: invokestatic  #28                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      93: iload         5
      95: invokevirtual #78                 // Method org/springframework/asm/MethodVisitor.visitMethodInsn:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
      98: return

  private static int getInvokeOp(java.lang.reflect.Method, boolean);
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method java/lang/reflect/Method.getModifiers:()I
       4: invokestatic  #80                 // Method java/lang/reflect/Modifier.isStatic:(I)Z
       7: ifeq          16
      10: sipush        184
      13: goto          19
      16: sipush        182
      19: istore_2
      20: iload_1
      21: ifeq          28
      24: sipush        185
      27: istore_2
      28: iload_2
      29: ireturn

  private static java.util.Map<java.lang.String, org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory$PropertyStackAddress> createPropertyStackMap(java.util.List<org.springframework.data.mapping.PersistentProperty<?>>);
    Code:
       0: new           #10                 // class java/util/HashMap
       3: dup
       4: invokespecial #81                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: invokeinterface #82,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #83,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          73
      24: aload_2
      25: invokeinterface #84,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #85                 // class org/springframework/data/mapping/PersistentProperty
      33: astore_3
      34: aload_1
      35: aload_3
      36: invokeinterface #86,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getName:()Ljava/lang/String;
      41: new           #87                 // class org/springframework/data/mapping/model/ClassGeneratingPropertyAccessorFactory$PropertyStackAddress
      44: dup
      45: new           #88                 // class org/springframework/asm/Label
      48: dup
      49: invokespecial #89                 // Method org/springframework/asm/Label."<init>":()V
      52: aload_3
      53: invokeinterface #86,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getName:()Ljava/lang/String;
      58: invokevirtual #90                 // Method java/lang/String.hashCode:()I
      61: invokespecial #91                 // Method org/springframework/data/mapping/model/ClassGeneratingPropertyAccessorFactory$PropertyStackAddress."<init>":(Lorg/springframework/asm/Label;I)V
      64: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      69: pop
      70: goto          15
      73: aload_1
      74: areturn

  static boolean supportsMutation(org.springframework.data.mapping.PersistentProperty<?>);
    Code:
       0: aload_0
       1: invokeinterface #92,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.isImmutable:()Z
       6: ifeq          29
       9: aload_0
      10: invokeinterface #93,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getWither:()Ljava/lang/reflect/Method;
      15: ifnull        20
      18: iconst_1
      19: ireturn
      20: aload_0
      21: invokestatic  #4                  // Method hasKotlinCopyMethod:(Lorg/springframework/data/mapping/PersistentProperty;)Z
      24: ifeq          29
      27: iconst_1
      28: ireturn
      29: aload_0
      30: invokeinterface #94,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.usePropertyAccess:()Z
      35: ifeq          47
      38: aload_0
      39: invokeinterface #95,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getSetter:()Ljava/lang/reflect/Method;
      44: ifnonnull     71
      47: aload_0
      48: invokeinterface #96,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getField:()Ljava/lang/reflect/Field;
      53: ifnull        75
      56: aload_0
      57: invokeinterface #96,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getField:()Ljava/lang/reflect/Field;
      62: invokevirtual #97                 // Method java/lang/reflect/Field.getModifiers:()I
      65: invokestatic  #98                 // Method java/lang/reflect/Modifier.isFinal:(I)Z
      68: ifne          75
      71: iconst_1
      72: goto          76
      75: iconst_0
      76: ireturn

  private static boolean hasKotlinCopyMethod(org.springframework.data.mapping.PersistentProperty<?>);
    Code:
       0: aload_0
       1: invokeinterface #99,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getOwner:()Lorg/springframework/data/mapping/PersistentEntity;
       6: invokeinterface #35,  1           // InterfaceMethod org/springframework/data/mapping/PersistentEntity.getType:()Ljava/lang/Class;
      11: astore_1
      12: aload_1
      13: invokestatic  #100                // Method org/springframework/data/mapping/model/BytecodeUtil.isAccessible:(Ljava/lang/Class;)Z
      16: ifeq          43
      19: aload_1
      20: invokestatic  #101                // Method org/springframework/data/util/ReflectionUtils.isKotlinClass:(Ljava/lang/Class;)Z
      23: ifeq          43
      26: aload_1
      27: invokestatic  #102                // Method org/springframework/data/mapping/model/KotlinCopyMethod.findCopyMethod:(Ljava/lang/Class;)Ljava/util/Optional;
      30: aload_0
      31: invokedynamic #103,  0            // InvokeDynamic #3:test:(Lorg/springframework/data/mapping/PersistentProperty;)Ljava/util/function/Predicate;
      36: invokevirtual #104                // Method java/util/Optional.filter:(Ljava/util/function/Predicate;)Ljava/util/Optional;
      39: invokevirtual #105                // Method java/util/Optional.isPresent:()Z
      42: ireturn
      43: iconst_0
      44: ireturn

  private static boolean lambda$hasKotlinCopyMethod$3(org.springframework.data.mapping.PersistentProperty, org.springframework.data.mapping.model.KotlinCopyMethod);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #106                // Method org/springframework/data/mapping/model/KotlinCopyMethod.supportsProperty:(Lorg/springframework/data/mapping/PersistentProperty;)Z
       5: ireturn

  private static void lambda$hasUniquePropertyHashCodes$2(java.util.Set, java.util.concurrent.atomic.AtomicInteger, org.springframework.data.mapping.Association);
    Code:
       0: aload_2
       1: invokevirtual #107                // Method org/springframework/data/mapping/Association.getInverse:()Lorg/springframework/data/mapping/PersistentProperty;
       4: ifnull        34
       7: aload_0
       8: aload_2
       9: invokevirtual #107                // Method org/springframework/data/mapping/Association.getInverse:()Lorg/springframework/data/mapping/PersistentProperty;
      12: invokeinterface #86,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getName:()Ljava/lang/String;
      17: invokevirtual #90                 // Method java/lang/String.hashCode:()I
      20: invokestatic  #108                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      23: invokeinterface #109,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      28: pop
      29: aload_1
      30: invokevirtual #110                // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      33: pop
      34: return

  private static void lambda$hasUniquePropertyHashCodes$1(java.util.Set, java.util.concurrent.atomic.AtomicInteger, org.springframework.data.mapping.PersistentProperty);
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #86,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getName:()Ljava/lang/String;
       7: invokevirtual #90                 // Method java/lang/String.hashCode:()I
      10: invokestatic  #108                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      13: invokeinterface #109,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      18: pop
      19: aload_1
      20: invokevirtual #110                // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      23: pop
      24: return

  private static java.lang.Object[] lambda$new$0();
    Code:
       0: iconst_1
       1: anewarray     #27                 // class java/lang/Object
       4: areturn

  static java.util.Map access$000(java.util.List);
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method createPropertyStackMap:(Ljava/util/List;)Ljava/util/Map;
       4: areturn

  static boolean access$300(org.springframework.data.mapping.PersistentProperty);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method hasKotlinCopyMethod:(Lorg/springframework/data/mapping/PersistentProperty;)Z
       4: ireturn

  static void access$400(org.springframework.asm.MethodVisitor, java.lang.reflect.Method);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3                  // Method visitInvokeMethodSingleArg:(Lorg/springframework/asm/MethodVisitor;Ljava/lang/reflect/Method;)V
       5: return

  static int access$500(java.lang.reflect.Method, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #2                  // Method getInvokeOp:(Ljava/lang/reflect/Method;Z)I
       5: ireturn
}
