Compiled from "BeanWrapper.java"
class org.springframework.data.mapping.model.BeanWrapper$KotlinCopyUtil {
  private static final java.util.Map<java.lang.Class<?>, kotlin.reflect.KCallable<?>> COPY_METHOD_CACHE;

  org.springframework.data.mapping.model.BeanWrapper$KotlinCopyUtil();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static <T> java.lang.Object setProperty(org.springframework.data.mapping.PersistentProperty<?>, T, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #2,  1            // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getOwner:()Lorg/springframework/data/mapping/PersistentEntity;
       6: invokeinterface #3,  1            // InterfaceMethod org/springframework/data/mapping/PersistentEntity.getType:()Ljava/lang/Class;
      11: astore_3
      12: getstatic     #4                  // Field COPY_METHOD_CACHE:Ljava/util/Map;
      15: aload_3
      16: aload_0
      17: invokedynamic #5,  0              // InvokeDynamic #0:apply:(Lorg/springframework/data/mapping/PersistentProperty;)Ljava/util/function/Function;
      22: invokeinterface #6,  3            // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      27: checkcast     #7                  // class kotlin/reflect/KCallable
      30: astore        4
      32: aload         4
      34: ifnonnull     70
      37: new           #8                  // class java/lang/UnsupportedOperationException
      40: dup
      41: ldc           #9                  // String Kotlin class %s has no .copy(â€¦) method for property %s!
      43: iconst_2
      44: anewarray     #10                 // class java/lang/Object
      47: dup
      48: iconst_0
      49: aload_3
      50: invokevirtual #11                 // Method java/lang/Class.getName:()Ljava/lang/String;
      53: aastore
      54: dup
      55: iconst_1
      56: aload_0
      57: invokeinterface #12,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getName:()Ljava/lang/String;
      62: aastore
      63: invokestatic  #13                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      66: invokespecial #14                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      69: athrow
      70: aload         4
      72: aload         4
      74: aload_0
      75: aload_1
      76: aload_2
      77: invokestatic  #15                 // Method getCallArgs:(Lkotlin/reflect/KCallable;Lorg/springframework/data/mapping/PersistentProperty;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;
      80: invokeinterface #16,  2           // InterfaceMethod kotlin/reflect/KCallable.callBy:(Ljava/util/Map;)Ljava/lang/Object;
      85: areturn

  private static <T> java.util.Map<kotlin.reflect.KParameter, java.lang.Object> getCallArgs(kotlin.reflect.KCallable<?>, org.springframework.data.mapping.PersistentProperty<?>, T, java.lang.Object);
    Code:
       0: new           #17                 // class java/util/LinkedHashMap
       3: dup
       4: iconst_2
       5: fconst_1
       6: invokespecial #18                 // Method java/util/LinkedHashMap."<init>":(IF)V
       9: astore        4
      11: aload_0
      12: invokeinterface #19,  1           // InterfaceMethod kotlin/reflect/KCallable.getParameters:()Ljava/util/List;
      17: astore        5
      19: aload         5
      21: invokeinterface #20,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      26: astore        6
      28: aload         6
      30: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          130
      38: aload         6
      40: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #23                 // class kotlin/reflect/KParameter
      48: astore        7
      50: aload         7
      52: invokeinterface #24,  1           // InterfaceMethod kotlin/reflect/KParameter.getKind:()Lkotlin/reflect/KParameter$Kind;
      57: getstatic     #25                 // Field kotlin/reflect/KParameter$Kind.INSTANCE:Lkotlin/reflect/KParameter$Kind;
      60: if_acmpne     74
      63: aload         4
      65: aload         7
      67: aload_2
      68: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      73: pop
      74: aload         7
      76: invokeinterface #24,  1           // InterfaceMethod kotlin/reflect/KParameter.getKind:()Lkotlin/reflect/KParameter$Kind;
      81: getstatic     #27                 // Field kotlin/reflect/KParameter$Kind.VALUE:Lkotlin/reflect/KParameter$Kind;
      84: if_acmpne     127
      87: aload         7
      89: invokeinterface #28,  1           // InterfaceMethod kotlin/reflect/KParameter.getName:()Ljava/lang/String;
      94: ifnull        127
      97: aload         7
      99: invokeinterface #28,  1           // InterfaceMethod kotlin/reflect/KParameter.getName:()Ljava/lang/String;
     104: aload_1
     105: invokeinterface #12,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getName:()Ljava/lang/String;
     110: invokevirtual #29                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     113: ifeq          127
     116: aload         4
     118: aload         7
     120: aload_3
     121: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     126: pop
     127: goto          28
     130: aload         4
     132: areturn

  private static kotlin.reflect.KCallable<?> getCopyMethod(java.lang.Class<?>, org.springframework.data.mapping.PersistentProperty<?>);
    Code:
       0: aload_0
       1: invokestatic  #30                 // Method org/springframework/data/mapping/model/KotlinCopyMethod.findCopyMethod:(Ljava/lang/Class;)Ljava/util/Optional;
       4: aload_1
       5: invokedynamic #31,  0             // InvokeDynamic #1:test:(Lorg/springframework/data/mapping/PersistentProperty;)Ljava/util/function/Predicate;
      10: invokevirtual #32                 // Method java/util/Optional.filter:(Ljava/util/function/Predicate;)Ljava/util/Optional;
      13: invokedynamic #33,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      18: invokevirtual #34                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      21: aconst_null
      22: invokevirtual #35                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #7                  // class kotlin/reflect/KCallable
      28: areturn

  private static boolean lambda$getCopyMethod$1(org.springframework.data.mapping.PersistentProperty, org.springframework.data.mapping.model.KotlinCopyMethod);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #36                 // Method org/springframework/data/mapping/model/KotlinCopyMethod.supportsProperty:(Lorg/springframework/data/mapping/PersistentProperty;)Z
       5: ireturn

  private static kotlin.reflect.KCallable lambda$setProperty$0(org.springframework.data.mapping.PersistentProperty, java.lang.Class);
    Code:
       0: aload_1
       1: aload_0
       2: invokestatic  #37                 // Method getCopyMethod:(Ljava/lang/Class;Lorg/springframework/data/mapping/PersistentProperty;)Lkotlin/reflect/KCallable;
       5: areturn

  static {};
    Code:
       0: new           #38                 // class org/springframework/util/ConcurrentReferenceHashMap
       3: dup
       4: invokespecial #39                 // Method org/springframework/util/ConcurrentReferenceHashMap."<init>":()V
       7: putstatic     #4                  // Field COPY_METHOD_CACHE:Ljava/util/Map;
      10: return
}
