Compiled from "PersistenceProviderResolverHolder.java"
class javax.persistence.spi.PersistenceProviderResolverHolder$DefaultPersistenceProviderResolver implements javax.persistence.spi.PersistenceProviderResolver {
  private volatile java.util.HashMap<javax.persistence.spi.PersistenceProviderResolverHolder$DefaultPersistenceProviderResolver$CacheKey, javax.persistence.spi.PersistenceProviderResolverHolder$DefaultPersistenceProviderResolver$PersistenceProviderReference> providers;

  private static final java.lang.ref.ReferenceQueue referenceQueue;

  private static final java.lang.String LOGGER_SUBSYSTEM;

  private java.util.logging.Logger logger;

  private javax.persistence.spi.PersistenceProviderResolverHolder$DefaultPersistenceProviderResolver();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/HashMap
       8: dup
       9: invokespecial #5                  // Method java/util/HashMap."<init>":()V
      12: putfield      #6                  // Field providers:Ljava/util/HashMap;
      15: return

  public java.util.List<javax.persistence.spi.PersistenceProvider> getPersistenceProviders();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method processQueue:()V
       4: invokestatic  #8                  // Method getContextClassLoader:()Ljava/lang/ClassLoader;
       7: astore_1
       8: new           #9                  // class javax/persistence/spi/PersistenceProviderResolverHolder$DefaultPersistenceProviderResolver$CacheKey
      11: dup
      12: aload_0
      13: aload_1
      14: invokespecial #10                 // Method javax/persistence/spi/PersistenceProviderResolverHolder$DefaultPersistenceProviderResolver$CacheKey."<init>":(Ljavax/persistence/spi/PersistenceProviderResolverHolder$DefaultPersistenceProviderResolver;Ljava/lang/ClassLoader;)V
      17: astore_2
      18: aload_0
      19: getfield      #6                  // Field providers:Ljava/util/HashMap;
      22: aload_2
      23: invokevirtual #11                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #12                 // class javax/persistence/spi/PersistenceProviderResolverHolder$DefaultPersistenceProviderResolver$PersistenceProviderReference
      29: astore_3
      30: aconst_null
      31: astore        4
      33: aload_3
      34: ifnull        46
      37: aload_3
      38: invokevirtual #13                 // Method javax/persistence/spi/PersistenceProviderResolverHolder$DefaultPersistenceProviderResolver$PersistenceProviderReference.get:()Ljava/lang/Object;
      41: checkcast     #14                 // class java/util/List
      44: astore        4
      46: aload         4
      48: ifnonnull     184
      51: new           #15                 // class java/util/ArrayList
      54: dup
      55: invokespecial #16                 // Method java/util/ArrayList."<init>":()V
      58: astore        4
      60: ldc           #17                 // class javax/persistence/spi/PersistenceProvider
      62: aload_1
      63: invokestatic  #18                 // Method java/util/ServiceLoader.load:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/ServiceLoader;
      66: invokevirtual #19                 // Method java/util/ServiceLoader.iterator:()Ljava/util/Iterator;
      69: astore        5
      71: aload         5
      73: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      78: ifeq          123
      81: aload         5
      83: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      88: checkcast     #17                 // class javax/persistence/spi/PersistenceProvider
      91: astore        6
      93: aload         4
      95: aload         6
      97: invokeinterface #22,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     102: pop
     103: goto          71
     106: astore        6
     108: aload_0
     109: getstatic     #24                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
     112: aload         6
     114: invokevirtual #25                 // Method java/util/ServiceConfigurationError.toString:()Ljava/lang/String;
     117: invokespecial #26                 // Method log:(Ljava/util/logging/Level;Ljava/lang/String;)V
     120: goto          71
     123: goto          140
     126: astore        6
     128: aload_0
     129: getstatic     #24                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
     132: aload         6
     134: invokevirtual #25                 // Method java/util/ServiceConfigurationError.toString:()Ljava/lang/String;
     137: invokespecial #26                 // Method log:(Ljava/util/logging/Level;Ljava/lang/String;)V
     140: aload         4
     142: invokeinterface #27,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     147: ifeq          159
     150: aload_0
     151: getstatic     #28                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
     154: ldc           #29                 // String No valid providers found.
     156: invokespecial #26                 // Method log:(Ljava/util/logging/Level;Ljava/lang/String;)V
     159: new           #12                 // class javax/persistence/spi/PersistenceProviderResolverHolder$DefaultPersistenceProviderResolver$PersistenceProviderReference
     162: dup
     163: aload_0
     164: aload         4
     166: getstatic     #1                  // Field referenceQueue:Ljava/lang/ref/ReferenceQueue;
     169: aload_2
     170: invokespecial #30                 // Method javax/persistence/spi/PersistenceProviderResolverHolder$DefaultPersistenceProviderResolver$PersistenceProviderReference."<init>":(Ljavax/persistence/spi/PersistenceProviderResolverHolder$DefaultPersistenceProviderResolver;Ljava/util/List;Ljava/lang/ref/ReferenceQueue;Ljavax/persistence/spi/PersistenceProviderResolverHolder$DefaultPersistenceProviderResolver$CacheKey;)V
     173: astore_3
     174: aload_0
     175: getfield      #6                  // Field providers:Ljava/util/HashMap;
     178: aload_2
     179: aload_3
     180: invokevirtual #31                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     183: pop
     184: aload         4
     186: areturn
    Exception table:
       from    to  target type
          81   103   106   Class java/util/ServiceConfigurationError
          71   123   126   Class java/util/ServiceConfigurationError

  private void processQueue();
    Code:
       0: getstatic     #1                  // Field referenceQueue:Ljava/lang/ref/ReferenceQueue;
       3: invokevirtual #32                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
       6: checkcast     #33                 // class javax/persistence/spi/PersistenceProviderResolverHolder$DefaultPersistenceProviderResolver$CacheKeyReference
       9: dup
      10: astore_1
      11: ifnull        31
      14: aload_0
      15: getfield      #6                  // Field providers:Ljava/util/HashMap;
      18: aload_1
      19: invokeinterface #34,  1           // InterfaceMethod javax/persistence/spi/PersistenceProviderResolverHolder$DefaultPersistenceProviderResolver$CacheKeyReference.getCacheKey:()Ljavax/persistence/spi/PersistenceProviderResolverHolder$DefaultPersistenceProviderResolver$CacheKey;
      24: invokevirtual #35                 // Method java/util/HashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      27: pop
      28: goto          0
      31: return

  private static java.lang.ClassLoader getContextClassLoader();
    Code:
       0: invokestatic  #36                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: ifnonnull     13
       6: invokestatic  #37                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       9: invokevirtual #38                 // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
      12: areturn
      13: new           #39                 // class javax/persistence/spi/PersistenceProviderResolverHolder$DefaultPersistenceProviderResolver$1
      16: dup
      17: invokespecial #40                 // Method javax/persistence/spi/PersistenceProviderResolverHolder$DefaultPersistenceProviderResolver$1."<init>":()V
      20: invokestatic  #41                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      23: checkcast     #42                 // class java/lang/ClassLoader
      26: areturn

  private void log(java.util.logging.Level, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #43                 // Field logger:Ljava/util/logging/Logger;
       4: ifnonnull     16
       7: aload_0
       8: ldc           #45                 // String javax.persistence.spi
      10: invokestatic  #46                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      13: putfield      #43                 // Field logger:Ljava/util/logging/Logger;
      16: aload_0
      17: getfield      #43                 // Field logger:Ljava/util/logging/Logger;
      20: aload_1
      21: new           #47                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #48                 // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #49                 // String javax.persistence.spi::
      30: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_2
      34: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokevirtual #52                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
      43: return

  public void clearCachedProviders();
    Code:
       0: aload_0
       1: getfield      #6                  // Field providers:Ljava/util/HashMap;
       4: invokevirtual #53                 // Method java/util/HashMap.clear:()V
       7: return

  javax.persistence.spi.PersistenceProviderResolverHolder$DefaultPersistenceProviderResolver(javax.persistence.spi.PersistenceProviderResolverHolder$1);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method "<init>":()V
       4: return

  static java.lang.ref.ReferenceQueue access$100();
    Code:
       0: getstatic     #1                  // Field referenceQueue:Ljava/lang/ref/ReferenceQueue;
       3: areturn

  static {};
    Code:
       0: new           #54                 // class java/lang/ref/ReferenceQueue
       3: dup
       4: invokespecial #55                 // Method java/lang/ref/ReferenceQueue."<init>":()V
       7: putstatic     #1                  // Field referenceQueue:Ljava/lang/ref/ReferenceQueue;
      10: return
}
