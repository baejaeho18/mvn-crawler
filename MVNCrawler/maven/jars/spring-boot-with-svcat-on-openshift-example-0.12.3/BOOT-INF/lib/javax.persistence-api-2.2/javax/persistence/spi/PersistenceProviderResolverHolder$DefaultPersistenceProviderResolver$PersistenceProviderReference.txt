Compiled from "PersistenceProviderResolverHolder.java"
class javax.persistence.spi.PersistenceProviderResolverHolder$DefaultPersistenceProviderResolver$PersistenceProviderReference extends java.lang.ref.SoftReference<java.util.List<javax.persistence.spi.PersistenceProvider>> implements javax.persistence.spi.PersistenceProviderResolverHolder$DefaultPersistenceProviderResolver$CacheKeyReference {
  private javax.persistence.spi.PersistenceProviderResolverHolder$DefaultPersistenceProviderResolver$CacheKey cacheKey;

  final javax.persistence.spi.PersistenceProviderResolverHolder$DefaultPersistenceProviderResolver this$0;

  javax.persistence.spi.PersistenceProviderResolverHolder$DefaultPersistenceProviderResolver$PersistenceProviderReference(java.util.List<javax.persistence.spi.PersistenceProvider>, java.lang.ref.ReferenceQueue, javax.persistence.spi.PersistenceProviderResolverHolder$DefaultPersistenceProviderResolver$CacheKey);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Ljavax/persistence/spi/PersistenceProviderResolverHolder$DefaultPersistenceProviderResolver;
       5: aload_0
       6: aload_2
       7: aload_3
       8: invokespecial #2                  // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      11: aload_0
      12: aload         4
      14: putfield      #3                  // Field cacheKey:Ljavax/persistence/spi/PersistenceProviderResolverHolder$DefaultPersistenceProviderResolver$CacheKey;
      17: return

  public javax.persistence.spi.PersistenceProviderResolverHolder$DefaultPersistenceProviderResolver$CacheKey getCacheKey();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheKey:Ljavax/persistence/spi/PersistenceProviderResolverHolder$DefaultPersistenceProviderResolver$CacheKey;
       4: areturn
}
