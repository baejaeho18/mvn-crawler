Compiled from "CriteriaQuery.java"
public interface javax.persistence.criteria.CriteriaQuery<T> extends javax.persistence.criteria.AbstractQuery<T> {
  public abstract javax.persistence.criteria.CriteriaQuery<T> select(javax.persistence.criteria.Selection<? extends T>);

  public abstract javax.persistence.criteria.CriteriaQuery<T> multiselect(javax.persistence.criteria.Selection<?>...);

  public abstract javax.persistence.criteria.CriteriaQuery<T> multiselect(java.util.List<javax.persistence.criteria.Selection<?>>);

  public abstract javax.persistence.criteria.CriteriaQuery<T> where(javax.persistence.criteria.Expression<java.lang.Boolean>);

  public abstract javax.persistence.criteria.CriteriaQuery<T> where(javax.persistence.criteria.Predicate...);

  public abstract javax.persistence.criteria.CriteriaQuery<T> groupBy(javax.persistence.criteria.Expression<?>...);

  public abstract javax.persistence.criteria.CriteriaQuery<T> groupBy(java.util.List<javax.persistence.criteria.Expression<?>>);

  public abstract javax.persistence.criteria.CriteriaQuery<T> having(javax.persistence.criteria.Expression<java.lang.Boolean>);

  public abstract javax.persistence.criteria.CriteriaQuery<T> having(javax.persistence.criteria.Predicate...);

  public abstract javax.persistence.criteria.CriteriaQuery<T> orderBy(javax.persistence.criteria.Order...);

  public abstract javax.persistence.criteria.CriteriaQuery<T> orderBy(java.util.List<javax.persistence.criteria.Order>);

  public abstract javax.persistence.criteria.CriteriaQuery<T> distinct(boolean);

  public abstract java.util.List<javax.persistence.criteria.Order> getOrderList();

  public abstract java.util.Set<javax.persistence.criteria.ParameterExpression<?>> getParameters();

  public default javax.persistence.criteria.AbstractQuery distinct(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokeinterface #1,  2            // InterfaceMethod distinct:(Z)Ljavax/persistence/criteria/CriteriaQuery;
       7: areturn

  public default javax.persistence.criteria.AbstractQuery having(javax.persistence.criteria.Predicate[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #2,  2            // InterfaceMethod having:([Ljavax/persistence/criteria/Predicate;)Ljavax/persistence/criteria/CriteriaQuery;
       7: areturn

  public default javax.persistence.criteria.AbstractQuery having(javax.persistence.criteria.Expression);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #3,  2            // InterfaceMethod having:(Ljavax/persistence/criteria/Expression;)Ljavax/persistence/criteria/CriteriaQuery;
       7: areturn

  public default javax.persistence.criteria.AbstractQuery groupBy(java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #4,  2            // InterfaceMethod groupBy:(Ljava/util/List;)Ljavax/persistence/criteria/CriteriaQuery;
       7: areturn

  public default javax.persistence.criteria.AbstractQuery groupBy(javax.persistence.criteria.Expression[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #5,  2            // InterfaceMethod groupBy:([Ljavax/persistence/criteria/Expression;)Ljavax/persistence/criteria/CriteriaQuery;
       7: areturn

  public default javax.persistence.criteria.AbstractQuery where(javax.persistence.criteria.Predicate[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #6,  2            // InterfaceMethod where:([Ljavax/persistence/criteria/Predicate;)Ljavax/persistence/criteria/CriteriaQuery;
       7: areturn

  public default javax.persistence.criteria.AbstractQuery where(javax.persistence.criteria.Expression);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #7,  2            // InterfaceMethod where:(Ljavax/persistence/criteria/Expression;)Ljavax/persistence/criteria/CriteriaQuery;
       7: areturn
}
