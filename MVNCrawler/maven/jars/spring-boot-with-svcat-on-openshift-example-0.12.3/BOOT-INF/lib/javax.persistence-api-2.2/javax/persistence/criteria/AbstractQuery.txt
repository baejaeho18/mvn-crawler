Compiled from "AbstractQuery.java"
public interface javax.persistence.criteria.AbstractQuery<T> extends javax.persistence.criteria.CommonAbstractCriteria {
  public abstract <X> javax.persistence.criteria.Root<X> from(java.lang.Class<X>);

  public abstract <X> javax.persistence.criteria.Root<X> from(javax.persistence.metamodel.EntityType<X>);

  public abstract javax.persistence.criteria.AbstractQuery<T> where(javax.persistence.criteria.Expression<java.lang.Boolean>);

  public abstract javax.persistence.criteria.AbstractQuery<T> where(javax.persistence.criteria.Predicate...);

  public abstract javax.persistence.criteria.AbstractQuery<T> groupBy(javax.persistence.criteria.Expression<?>...);

  public abstract javax.persistence.criteria.AbstractQuery<T> groupBy(java.util.List<javax.persistence.criteria.Expression<?>>);

  public abstract javax.persistence.criteria.AbstractQuery<T> having(javax.persistence.criteria.Expression<java.lang.Boolean>);

  public abstract javax.persistence.criteria.AbstractQuery<T> having(javax.persistence.criteria.Predicate...);

  public abstract javax.persistence.criteria.AbstractQuery<T> distinct(boolean);

  public abstract java.util.Set<javax.persistence.criteria.Root<?>> getRoots();

  public abstract javax.persistence.criteria.Selection<T> getSelection();

  public abstract java.util.List<javax.persistence.criteria.Expression<?>> getGroupList();

  public abstract javax.persistence.criteria.Predicate getGroupRestriction();

  public abstract boolean isDistinct();

  public abstract java.lang.Class<T> getResultType();
}
