Compiled from "HibernateValidatorContext.java"
public interface org.hibernate.validator.HibernateValidatorContext extends javax.validation.ValidatorContext {
  public abstract org.hibernate.validator.HibernateValidatorContext messageInterpolator(javax.validation.MessageInterpolator);

  public abstract org.hibernate.validator.HibernateValidatorContext traversableResolver(javax.validation.TraversableResolver);

  public abstract org.hibernate.validator.HibernateValidatorContext constraintValidatorFactory(javax.validation.ConstraintValidatorFactory);

  public abstract org.hibernate.validator.HibernateValidatorContext parameterNameProvider(javax.validation.ParameterNameProvider);

  public abstract org.hibernate.validator.HibernateValidatorContext clockProvider(javax.validation.ClockProvider);

  public abstract org.hibernate.validator.HibernateValidatorContext addValueExtractor(javax.validation.valueextraction.ValueExtractor<?>);

  public abstract org.hibernate.validator.HibernateValidatorContext failFast(boolean);

  public abstract org.hibernate.validator.HibernateValidatorContext allowOverridingMethodAlterParameterConstraint(boolean);

  public abstract org.hibernate.validator.HibernateValidatorContext allowMultipleCascadedValidationOnReturnValues(boolean);

  public abstract org.hibernate.validator.HibernateValidatorContext allowParallelMethodsDefineParameterConstraints(boolean);

  public abstract org.hibernate.validator.HibernateValidatorContext enableTraversableResolverResultCache(boolean);

  public abstract org.hibernate.validator.HibernateValidatorContext temporalValidationTolerance(java.time.Duration);

  public abstract org.hibernate.validator.HibernateValidatorContext constraintValidatorPayload(java.lang.Object);

  public default javax.validation.ValidatorContext addValueExtractor(javax.validation.valueextraction.ValueExtractor);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1,  2            // InterfaceMethod addValueExtractor:(Ljavax/validation/valueextraction/ValueExtractor;)Lorg/hibernate/validator/HibernateValidatorContext;
       7: areturn

  public default javax.validation.ValidatorContext clockProvider(javax.validation.ClockProvider);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #2,  2            // InterfaceMethod clockProvider:(Ljavax/validation/ClockProvider;)Lorg/hibernate/validator/HibernateValidatorContext;
       7: areturn

  public default javax.validation.ValidatorContext parameterNameProvider(javax.validation.ParameterNameProvider);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #3,  2            // InterfaceMethod parameterNameProvider:(Ljavax/validation/ParameterNameProvider;)Lorg/hibernate/validator/HibernateValidatorContext;
       7: areturn

  public default javax.validation.ValidatorContext constraintValidatorFactory(javax.validation.ConstraintValidatorFactory);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #4,  2            // InterfaceMethod constraintValidatorFactory:(Ljavax/validation/ConstraintValidatorFactory;)Lorg/hibernate/validator/HibernateValidatorContext;
       7: areturn

  public default javax.validation.ValidatorContext traversableResolver(javax.validation.TraversableResolver);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #5,  2            // InterfaceMethod traversableResolver:(Ljavax/validation/TraversableResolver;)Lorg/hibernate/validator/HibernateValidatorContext;
       7: areturn

  public default javax.validation.ValidatorContext messageInterpolator(javax.validation.MessageInterpolator);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #6,  2            // InterfaceMethod messageInterpolator:(Ljavax/validation/MessageInterpolator;)Lorg/hibernate/validator/HibernateValidatorContext;
       7: areturn
}
