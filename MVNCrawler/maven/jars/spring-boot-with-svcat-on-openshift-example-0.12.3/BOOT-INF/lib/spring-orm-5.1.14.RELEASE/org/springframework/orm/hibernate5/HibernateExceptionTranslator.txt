Compiled from "HibernateExceptionTranslator.java"
public class org.springframework.orm.hibernate5.HibernateExceptionTranslator implements org.springframework.dao.support.PersistenceExceptionTranslator {
  private org.springframework.jdbc.support.SQLExceptionTranslator jdbcExceptionTranslator;

  public org.springframework.orm.hibernate5.HibernateExceptionTranslator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void setJdbcExceptionTranslator(org.springframework.jdbc.support.SQLExceptionTranslator);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field jdbcExceptionTranslator:Lorg/springframework/jdbc/support/SQLExceptionTranslator;
       5: return

  public org.springframework.dao.DataAccessException translateExceptionIfPossible(java.lang.RuntimeException);
    Code:
       0: aload_1
       1: instanceof    #3                  // class org/hibernate/HibernateException
       4: ifeq          16
       7: aload_0
       8: aload_1
       9: checkcast     #3                  // class org/hibernate/HibernateException
      12: invokevirtual #4                  // Method convertHibernateAccessException:(Lorg/hibernate/HibernateException;)Lorg/springframework/dao/DataAccessException;
      15: areturn
      16: aload_1
      17: instanceof    #5                  // class javax/persistence/PersistenceException
      20: ifeq          50
      23: aload_1
      24: invokevirtual #6                  // Method java/lang/RuntimeException.getCause:()Ljava/lang/Throwable;
      27: instanceof    #3                  // class org/hibernate/HibernateException
      30: ifeq          45
      33: aload_0
      34: aload_1
      35: invokevirtual #6                  // Method java/lang/RuntimeException.getCause:()Ljava/lang/Throwable;
      38: checkcast     #3                  // class org/hibernate/HibernateException
      41: invokevirtual #4                  // Method convertHibernateAccessException:(Lorg/hibernate/HibernateException;)Lorg/springframework/dao/DataAccessException;
      44: areturn
      45: aload_1
      46: invokestatic  #7                  // Method org/springframework/orm/jpa/EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible:(Ljava/lang/RuntimeException;)Lorg/springframework/dao/DataAccessException;
      49: areturn
      50: aconst_null
      51: areturn

  protected org.springframework.dao.DataAccessException convertHibernateAccessException(org.hibernate.HibernateException);
    Code:
       0: aload_0
       1: getfield      #2                  // Field jdbcExceptionTranslator:Lorg/springframework/jdbc/support/SQLExceptionTranslator;
       4: ifnull        65
       7: aload_1
       8: instanceof    #8                  // class org/hibernate/JDBCException
      11: ifeq          65
      14: aload_1
      15: checkcast     #8                  // class org/hibernate/JDBCException
      18: astore_2
      19: aload_0
      20: getfield      #2                  // Field jdbcExceptionTranslator:Lorg/springframework/jdbc/support/SQLExceptionTranslator;
      23: new           #9                  // class java/lang/StringBuilder
      26: dup
      27: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #11                 // String Hibernate operation:
      32: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_2
      36: invokevirtual #13                 // Method org/hibernate/JDBCException.getMessage:()Ljava/lang/String;
      39: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: aload_2
      46: invokevirtual #15                 // Method org/hibernate/JDBCException.getSQL:()Ljava/lang/String;
      49: aload_2
      50: invokevirtual #16                 // Method org/hibernate/JDBCException.getSQLException:()Ljava/sql/SQLException;
      53: invokeinterface #17,  4           // InterfaceMethod org/springframework/jdbc/support/SQLExceptionTranslator.translate:(Ljava/lang/String;Ljava/lang/String;Ljava/sql/SQLException;)Lorg/springframework/dao/DataAccessException;
      58: astore_3
      59: aload_3
      60: ifnull        65
      63: aload_3
      64: athrow
      65: aload_1
      66: invokestatic  #18                 // Method org/springframework/orm/hibernate5/SessionFactoryUtils.convertHibernateAccessException:(Lorg/hibernate/HibernateException;)Lorg/springframework/dao/DataAccessException;
      69: areturn
}
