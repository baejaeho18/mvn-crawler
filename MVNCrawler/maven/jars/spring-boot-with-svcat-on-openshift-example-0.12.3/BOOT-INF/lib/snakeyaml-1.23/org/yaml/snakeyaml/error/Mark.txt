Compiled from "Mark.java"
public final class org.yaml.snakeyaml.error.Mark implements java.io.Serializable {
  private java.lang.String name;

  private int index;

  private int line;

  private int column;

  private int[] buffer;

  private int pointer;

  private static int[] toCodePoints(char[]);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: arraylength
       4: invokestatic  #1                  // Method java/lang/Character.codePointCount:([CII)I
       7: newarray       int
       9: astore_1
      10: iconst_0
      11: istore_2
      12: iconst_0
      13: istore_3
      14: iload_2
      15: aload_0
      16: arraylength
      17: if_icmpge     46
      20: aload_0
      21: iload_2
      22: invokestatic  #2                  // Method java/lang/Character.codePointAt:([CI)I
      25: istore        4
      27: aload_1
      28: iload_3
      29: iload         4
      31: iastore
      32: iload_2
      33: iload         4
      35: invokestatic  #3                  // Method java/lang/Character.charCount:(I)I
      38: iadd
      39: istore_2
      40: iinc          3, 1
      43: goto          14
      46: aload_1
      47: areturn

  public org.yaml.snakeyaml.error.Mark(java.lang.String, int, int, int, char[], int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: aload         5
       8: invokestatic  #4                  // Method toCodePoints:([C)[I
      11: iload         6
      13: invokespecial #5                  // Method "<init>":(Ljava/lang/String;III[II)V
      16: return

  public org.yaml.snakeyaml.error.Mark(java.lang.String, int, int, int, java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: aload         5
       8: invokevirtual #6                  // Method java/lang/String.toCharArray:()[C
      11: iload         6
      13: invokespecial #7                  // Method "<init>":(Ljava/lang/String;III[CI)V
      16: return

  public org.yaml.snakeyaml.error.Mark(java.lang.String, int, int, int, int[], int);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #9                  // Field name:Ljava/lang/String;
       9: aload_0
      10: iload_2
      11: putfield      #10                 // Field index:I
      14: aload_0
      15: iload_3
      16: putfield      #11                 // Field line:I
      19: aload_0
      20: iload         4
      22: putfield      #12                 // Field column:I
      25: aload_0
      26: aload         5
      28: putfield      #13                 // Field buffer:[I
      31: aload_0
      32: iload         6
      34: putfield      #14                 // Field pointer:I
      37: return

  private boolean isLineBreak(int);
    Code:
       0: getstatic     #15                 // Field org/yaml/snakeyaml/scanner/Constant.NULL_OR_LINEBR:Lorg/yaml/snakeyaml/scanner/Constant;
       3: iload_1
       4: invokevirtual #16                 // Method org/yaml/snakeyaml/scanner/Constant.has:(I)Z
       7: ireturn

  public java.lang.String get_snippet(int, int);
    Code:
       0: iload_2
       1: iconst_2
       2: idiv
       3: iconst_1
       4: isub
       5: i2f
       6: fstore_3
       7: aload_0
       8: getfield      #14                 // Field pointer:I
      11: istore        4
      13: ldc           #17                 // String
      15: astore        5
      17: iload         4
      19: ifle          64
      22: aload_0
      23: aload_0
      24: getfield      #13                 // Field buffer:[I
      27: iload         4
      29: iconst_1
      30: isub
      31: iaload
      32: invokespecial #18                 // Method isLineBreak:(I)Z
      35: ifne          64
      38: iinc          4, -1
      41: aload_0
      42: getfield      #14                 // Field pointer:I
      45: iload         4
      47: isub
      48: i2f
      49: fload_3
      50: fcmpl
      51: ifle          17
      54: ldc           #19                 // String  ...
      56: astore        5
      58: iinc          4, 5
      61: goto          64
      64: ldc           #17                 // String
      66: astore        6
      68: aload_0
      69: getfield      #14                 // Field pointer:I
      72: istore        7
      74: iload         7
      76: aload_0
      77: getfield      #13                 // Field buffer:[I
      80: arraylength
      81: if_icmpge     124
      84: aload_0
      85: aload_0
      86: getfield      #13                 // Field buffer:[I
      89: iload         7
      91: iaload
      92: invokespecial #18                 // Method isLineBreak:(I)Z
      95: ifne          124
      98: iinc          7, 1
     101: iload         7
     103: aload_0
     104: getfield      #14                 // Field pointer:I
     107: isub
     108: i2f
     109: fload_3
     110: fcmpl
     111: ifle          74
     114: ldc           #19                 // String  ...
     116: astore        6
     118: iinc          7, -5
     121: goto          124
     124: new           #20                 // class java/lang/StringBuilder
     127: dup
     128: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
     131: astore        8
     133: iconst_0
     134: istore        9
     136: iload         9
     138: iload_1
     139: if_icmpge     156
     142: aload         8
     144: ldc           #22                 // String
     146: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: pop
     150: iinc          9, 1
     153: goto          136
     156: aload         8
     158: aload         5
     160: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     163: pop
     164: iload         4
     166: istore        9
     168: iload         9
     170: iload         7
     172: if_icmpge     194
     175: aload         8
     177: aload_0
     178: getfield      #13                 // Field buffer:[I
     181: iload         9
     183: iaload
     184: invokevirtual #24                 // Method java/lang/StringBuilder.appendCodePoint:(I)Ljava/lang/StringBuilder;
     187: pop
     188: iinc          9, 1
     191: goto          168
     194: aload         8
     196: aload         6
     198: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     201: pop
     202: aload         8
     204: ldc           #25                 // String \n
     206: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: pop
     210: iconst_0
     211: istore        9
     213: iload         9
     215: iload_1
     216: aload_0
     217: getfield      #14                 // Field pointer:I
     220: iadd
     221: iload         4
     223: isub
     224: aload         5
     226: invokevirtual #26                 // Method java/lang/String.length:()I
     229: iadd
     230: if_icmpge     247
     233: aload         8
     235: ldc           #22                 // String
     237: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     240: pop
     241: iinc          9, 1
     244: goto          213
     247: aload         8
     249: ldc           #27                 // String ^
     251: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     254: pop
     255: aload         8
     257: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     260: areturn

  public java.lang.String get_snippet();
    Code:
       0: aload_0
       1: iconst_4
       2: bipush        75
       4: invokevirtual #29                 // Method get_snippet:(II)Ljava/lang/String;
       7: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method get_snippet:()Ljava/lang/String;
       4: astore_1
       5: new           #20                 // class java/lang/StringBuilder
       8: dup
       9: ldc           #31                 // String  in
      11: invokespecial #32                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      14: astore_2
      15: aload_2
      16: aload_0
      17: getfield      #9                  // Field name:Ljava/lang/String;
      20: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_2
      25: ldc           #33                 // String , line
      27: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: pop
      31: aload_2
      32: aload_0
      33: getfield      #11                 // Field line:I
      36: iconst_1
      37: iadd
      38: invokevirtual #34                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      41: pop
      42: aload_2
      43: ldc           #35                 // String , column
      45: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: pop
      49: aload_2
      50: aload_0
      51: getfield      #12                 // Field column:I
      54: iconst_1
      55: iadd
      56: invokevirtual #34                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      59: pop
      60: aload_2
      61: ldc           #36                 // String :\n
      63: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: pop
      67: aload_2
      68: aload_1
      69: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: pop
      73: aload_2
      74: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #9                  // Field name:Ljava/lang/String;
       4: areturn

  public int getLine();
    Code:
       0: aload_0
       1: getfield      #11                 // Field line:I
       4: ireturn

  public int getColumn();
    Code:
       0: aload_0
       1: getfield      #12                 // Field column:I
       4: ireturn

  public int getIndex();
    Code:
       0: aload_0
       1: getfield      #10                 // Field index:I
       4: ireturn

  public int[] getBuffer();
    Code:
       0: aload_0
       1: getfield      #13                 // Field buffer:[I
       4: areturn

  public int getPointer();
    Code:
       0: aload_0
       1: getfield      #14                 // Field pointer:I
       4: ireturn
}
