Compiled from "TokenStreamSelector.java"
public class antlr.TokenStreamSelector implements antlr.TokenStream,antlr.ASdebug.IASDebugStream {
  protected java.util.Hashtable inputStreamNames;

  protected antlr.TokenStream input;

  protected antlr.collections.Stack streamStack;

  public antlr.TokenStreamSelector();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class antlr/collections/impl/LList
       8: dup
       9: invokespecial #3                  // Method antlr/collections/impl/LList."<init>":()V
      12: putfield      #4                  // Field streamStack:Lantlr/collections/Stack;
      15: aload_0
      16: new           #5                  // class java/util/Hashtable
      19: dup
      20: invokespecial #6                  // Method java/util/Hashtable."<init>":()V
      23: putfield      #7                  // Field inputStreamNames:Ljava/util/Hashtable;
      26: return

  public void addInputStream(antlr.TokenStream, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field inputStreamNames:Ljava/util/Hashtable;
       4: aload_2
       5: aload_1
       6: invokevirtual #8                  // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: return

  public antlr.TokenStream getCurrentStream();
    Code:
       0: aload_0
       1: getfield      #9                  // Field input:Lantlr/TokenStream;
       4: areturn

  public antlr.TokenStream getStream(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field inputStreamNames:Ljava/util/Hashtable;
       4: aload_1
       5: invokevirtual #10                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #11                 // class antlr/TokenStream
      11: astore_2
      12: aload_2
      13: ifnonnull     48
      16: new           #12                 // class java/lang/IllegalArgumentException
      19: dup
      20: new           #13                 // class java/lang/StringBuffer
      23: dup
      24: invokespecial #14                 // Method java/lang/StringBuffer."<init>":()V
      27: ldc           #15                 // String TokenStream
      29: invokevirtual #16                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      32: aload_1
      33: invokevirtual #16                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      36: ldc           #17                 // String  not found
      38: invokevirtual #16                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      41: invokevirtual #18                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      44: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_2
      49: areturn

  public antlr.Token nextToken() throws antlr.TokenStreamException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field input:Lantlr/TokenStream;
       4: invokeinterface #20,  1           // InterfaceMethod antlr/TokenStream.nextToken:()Lantlr/Token;
       9: areturn
      10: astore_1
      11: goto          0
    Exception table:
       from    to  target type
           0     9    10   Class antlr/TokenStreamRetryException

  public antlr.TokenStream pop();
    Code:
       0: aload_0
       1: getfield      #4                  // Field streamStack:Lantlr/collections/Stack;
       4: invokeinterface #22,  1           // InterfaceMethod antlr/collections/Stack.pop:()Ljava/lang/Object;
       9: checkcast     #11                 // class antlr/TokenStream
      12: astore_1
      13: aload_0
      14: aload_1
      15: invokevirtual #23                 // Method select:(Lantlr/TokenStream;)V
      18: aload_1
      19: areturn

  public void push(antlr.TokenStream);
    Code:
       0: aload_0
       1: getfield      #4                  // Field streamStack:Lantlr/collections/Stack;
       4: aload_0
       5: getfield      #9                  // Field input:Lantlr/TokenStream;
       8: invokeinterface #24,  2           // InterfaceMethod antlr/collections/Stack.push:(Ljava/lang/Object;)V
      13: aload_0
      14: aload_1
      15: invokevirtual #23                 // Method select:(Lantlr/TokenStream;)V
      18: return

  public void push(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field streamStack:Lantlr/collections/Stack;
       4: aload_0
       5: getfield      #9                  // Field input:Lantlr/TokenStream;
       8: invokeinterface #24,  2           // InterfaceMethod antlr/collections/Stack.push:(Ljava/lang/Object;)V
      13: aload_0
      14: aload_1
      15: invokevirtual #25                 // Method select:(Ljava/lang/String;)V
      18: return

  public void retry() throws antlr.TokenStreamRetryException;
    Code:
       0: new           #21                 // class antlr/TokenStreamRetryException
       3: dup
       4: invokespecial #26                 // Method antlr/TokenStreamRetryException."<init>":()V
       7: athrow

  public void select(antlr.TokenStream);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field input:Lantlr/TokenStream;
       5: return

  public void select(java.lang.String) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #27                 // Method getStream:(Ljava/lang/String;)Lantlr/TokenStream;
       6: putfield      #9                  // Field input:Lantlr/TokenStream;
       9: return

  public java.lang.String getEntireText();
    Code:
       0: aload_0
       1: getfield      #9                  // Field input:Lantlr/TokenStream;
       4: invokestatic  #28                 // Method antlr/ASdebug/ASDebugStream.getEntireText:(Lantlr/TokenStream;)Ljava/lang/String;
       7: areturn

  public antlr.ASdebug.TokenOffsetInfo getOffsetInfo(antlr.Token);
    Code:
       0: aload_0
       1: getfield      #9                  // Field input:Lantlr/TokenStream;
       4: aload_1
       5: invokestatic  #29                 // Method antlr/ASdebug/ASDebugStream.getOffsetInfo:(Lantlr/TokenStream;Lantlr/Token;)Lantlr/ASdebug/TokenOffsetInfo;
       8: areturn
}
