Compiled from "StreamCompressor.java"
public abstract class io.dekorate.deps.commons.compress.archivers.zip.StreamCompressor implements java.io.Closeable {
  private static final int DEFLATER_BLOCK_SIZE;

  private final java.util.zip.Deflater def;

  private final java.util.zip.CRC32 crc;

  private long writtenToOutputStreamForLastEntry;

  private long sourcePayloadLength;

  private long totalWrittenToOutputStream;

  private static final int BUFFER_SIZE;

  private final byte[] outputBuffer;

  private final byte[] readerBuf;

  io.dekorate.deps.commons.compress.archivers.zip.StreamCompressor(java.util.zip.Deflater);
    Code:
       0: aload_0
       1: invokespecial #40                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #42                 // class java/util/zip/CRC32
       8: dup
       9: invokespecial #43                 // Method java/util/zip/CRC32."<init>":()V
      12: putfield      #45                 // Field crc:Ljava/util/zip/CRC32;
      15: aload_0
      16: lconst_0
      17: putfield      #47                 // Field writtenToOutputStreamForLastEntry:J
      20: aload_0
      21: lconst_0
      22: putfield      #49                 // Field sourcePayloadLength:J
      25: aload_0
      26: lconst_0
      27: putfield      #51                 // Field totalWrittenToOutputStream:J
      30: aload_0
      31: sipush        4096
      34: newarray       byte
      36: putfield      #53                 // Field outputBuffer:[B
      39: aload_0
      40: sipush        4096
      43: newarray       byte
      45: putfield      #55                 // Field readerBuf:[B
      48: aload_0
      49: aload_1
      50: putfield      #57                 // Field def:Ljava/util/zip/Deflater;
      53: return

  static io.dekorate.deps.commons.compress.archivers.zip.StreamCompressor create(java.io.OutputStream, java.util.zip.Deflater);
    Code:
       0: new           #15                 // class io/dekorate/deps/commons/compress/archivers/zip/StreamCompressor$OutputStreamCompressor
       3: dup
       4: aload_1
       5: aload_0
       6: invokespecial #65                 // Method io/dekorate/deps/commons/compress/archivers/zip/StreamCompressor$OutputStreamCompressor."<init>":(Ljava/util/zip/Deflater;Ljava/io/OutputStream;)V
       9: areturn

  static io.dekorate.deps.commons.compress.archivers.zip.StreamCompressor create(java.io.OutputStream);
    Code:
       0: aload_0
       1: new           #70                 // class java/util/zip/Deflater
       4: dup
       5: iconst_m1
       6: iconst_1
       7: invokespecial #73                 // Method java/util/zip/Deflater."<init>":(IZ)V
      10: invokestatic  #75                 // Method create:(Ljava/io/OutputStream;Ljava/util/zip/Deflater;)Lio/dekorate/deps/commons/compress/archivers/zip/StreamCompressor;
      13: areturn

  static io.dekorate.deps.commons.compress.archivers.zip.StreamCompressor create(java.io.DataOutput, java.util.zip.Deflater);
    Code:
       0: new           #12                 // class io/dekorate/deps/commons/compress/archivers/zip/StreamCompressor$DataOutputCompressor
       3: dup
       4: aload_1
       5: aload_0
       6: invokespecial #79                 // Method io/dekorate/deps/commons/compress/archivers/zip/StreamCompressor$DataOutputCompressor."<init>":(Ljava/util/zip/Deflater;Ljava/io/DataOutput;)V
       9: areturn

  static io.dekorate.deps.commons.compress.archivers.zip.StreamCompressor create(java.nio.channels.SeekableByteChannel, java.util.zip.Deflater);
    Code:
       0: new           #9                  // class io/dekorate/deps/commons/compress/archivers/zip/StreamCompressor$SeekableByteChannelCompressor
       3: dup
       4: aload_1
       5: aload_0
       6: invokespecial #84                 // Method io/dekorate/deps/commons/compress/archivers/zip/StreamCompressor$SeekableByteChannelCompressor."<init>":(Ljava/util/zip/Deflater;Ljava/nio/channels/SeekableByteChannel;)V
       9: areturn

  public static io.dekorate.deps.commons.compress.archivers.zip.StreamCompressor create(int, io.dekorate.deps.commons.compress.parallel.ScatterGatherBackingStore);
    Code:
       0: new           #70                 // class java/util/zip/Deflater
       3: dup
       4: iload_0
       5: iconst_1
       6: invokespecial #73                 // Method java/util/zip/Deflater."<init>":(IZ)V
       9: astore_2
      10: new           #18                 // class io/dekorate/deps/commons/compress/archivers/zip/StreamCompressor$ScatterGatherBackingStoreCompressor
      13: dup
      14: aload_2
      15: aload_1
      16: invokespecial #89                 // Method io/dekorate/deps/commons/compress/archivers/zip/StreamCompressor$ScatterGatherBackingStoreCompressor."<init>":(Ljava/util/zip/Deflater;Lio/dekorate/deps/commons/compress/parallel/ScatterGatherBackingStore;)V
      19: areturn

  public static io.dekorate.deps.commons.compress.archivers.zip.StreamCompressor create(io.dekorate.deps.commons.compress.parallel.ScatterGatherBackingStore);
    Code:
       0: iconst_m1
       1: aload_0
       2: invokestatic  #95                 // Method create:(ILio/dekorate/deps/commons/compress/parallel/ScatterGatherBackingStore;)Lio/dekorate/deps/commons/compress/archivers/zip/StreamCompressor;
       5: areturn

  public long getCrc32();
    Code:
       0: aload_0
       1: getfield      #45                 // Field crc:Ljava/util/zip/CRC32;
       4: invokevirtual #100                // Method java/util/zip/CRC32.getValue:()J
       7: lreturn

  public long getBytesRead();
    Code:
       0: aload_0
       1: getfield      #49                 // Field sourcePayloadLength:J
       4: lreturn

  public long getBytesWrittenForLastEntry();
    Code:
       0: aload_0
       1: getfield      #47                 // Field writtenToOutputStreamForLastEntry:J
       4: lreturn

  public long getTotalBytesWritten();
    Code:
       0: aload_0
       1: getfield      #51                 // Field totalWrittenToOutputStream:J
       4: lreturn

  public void deflate(java.io.InputStream, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #110                // Method reset:()V
       4: aload_1
       5: aload_0
       6: getfield      #55                 // Field readerBuf:[B
       9: iconst_0
      10: aload_0
      11: getfield      #55                 // Field readerBuf:[B
      14: arraylength
      15: invokevirtual #116                // Method java/io/InputStream.read:([BII)I
      18: dup
      19: istore_3
      20: iflt          38
      23: aload_0
      24: aload_0
      25: getfield      #55                 // Field readerBuf:[B
      28: iconst_0
      29: iload_3
      30: iload_2
      31: invokevirtual #120                // Method write:([BIII)J
      34: pop2
      35: goto          4
      38: iload_2
      39: bipush        8
      41: if_icmpne     48
      44: aload_0
      45: invokevirtual #123                // Method flushDeflater:()V
      48: return

  long write(byte[], int, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #47                 // Field writtenToOutputStreamForLastEntry:J
       4: lstore        5
       6: aload_0
       7: getfield      #45                 // Field crc:Ljava/util/zip/CRC32;
      10: aload_1
      11: iload_2
      12: iload_3
      13: invokevirtual #131                // Method java/util/zip/CRC32.update:([BII)V
      16: iload         4
      18: bipush        8
      20: if_icmpne     33
      23: aload_0
      24: aload_1
      25: iload_2
      26: iload_3
      27: invokespecial #134                // Method writeDeflated:([BII)V
      30: goto          40
      33: aload_0
      34: aload_1
      35: iload_2
      36: iload_3
      37: invokevirtual #137                // Method writeCounted:([BII)V
      40: aload_0
      41: dup
      42: getfield      #49                 // Field sourcePayloadLength:J
      45: iload_3
      46: i2l
      47: ladd
      48: putfield      #49                 // Field sourcePayloadLength:J
      51: aload_0
      52: getfield      #47                 // Field writtenToOutputStreamForLastEntry:J
      55: lload         5
      57: lsub
      58: lreturn

  void reset();
    Code:
       0: aload_0
       1: getfield      #45                 // Field crc:Ljava/util/zip/CRC32;
       4: invokevirtual #141                // Method java/util/zip/CRC32.reset:()V
       7: aload_0
       8: getfield      #57                 // Field def:Ljava/util/zip/Deflater;
      11: invokevirtual #142                // Method java/util/zip/Deflater.reset:()V
      14: aload_0
      15: lconst_0
      16: putfield      #49                 // Field sourcePayloadLength:J
      19: aload_0
      20: lconst_0
      21: putfield      #47                 // Field writtenToOutputStreamForLastEntry:J
      24: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #57                 // Field def:Ljava/util/zip/Deflater;
       4: invokevirtual #146                // Method java/util/zip/Deflater.end:()V
       7: return

  void flushDeflater() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #57                 // Field def:Ljava/util/zip/Deflater;
       4: invokevirtual #149                // Method java/util/zip/Deflater.finish:()V
       7: aload_0
       8: getfield      #57                 // Field def:Ljava/util/zip/Deflater;
      11: invokevirtual #153                // Method java/util/zip/Deflater.finished:()Z
      14: ifne          24
      17: aload_0
      18: invokevirtual #155                // Method deflate:()V
      21: goto          7
      24: return

  private void writeDeflated(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifle          118
       4: aload_0
       5: getfield      #57                 // Field def:Ljava/util/zip/Deflater;
       8: invokevirtual #153                // Method java/util/zip/Deflater.finished:()Z
      11: ifne          118
      14: iload_3
      15: sipush        8192
      18: if_icmpgt     38
      21: aload_0
      22: getfield      #57                 // Field def:Ljava/util/zip/Deflater;
      25: aload_1
      26: iload_2
      27: iload_3
      28: invokevirtual #158                // Method java/util/zip/Deflater.setInput:([BII)V
      31: aload_0
      32: invokespecial #161                // Method deflateUntilInputIsNeeded:()V
      35: goto          118
      38: iload_3
      39: sipush        8192
      42: idiv
      43: istore        4
      45: iconst_0
      46: istore        5
      48: iload         5
      50: iload         4
      52: if_icmpge     84
      55: aload_0
      56: getfield      #57                 // Field def:Ljava/util/zip/Deflater;
      59: aload_1
      60: iload_2
      61: iload         5
      63: sipush        8192
      66: imul
      67: iadd
      68: sipush        8192
      71: invokevirtual #158                // Method java/util/zip/Deflater.setInput:([BII)V
      74: aload_0
      75: invokespecial #161                // Method deflateUntilInputIsNeeded:()V
      78: iinc          5, 1
      81: goto          48
      84: iload         4
      86: sipush        8192
      89: imul
      90: istore        5
      92: iload         5
      94: iload_3
      95: if_icmpge     118
      98: aload_0
      99: getfield      #57                 // Field def:Ljava/util/zip/Deflater;
     102: aload_1
     103: iload_2
     104: iload         5
     106: iadd
     107: iload_3
     108: iload         5
     110: isub
     111: invokevirtual #158                // Method java/util/zip/Deflater.setInput:([BII)V
     114: aload_0
     115: invokespecial #161                // Method deflateUntilInputIsNeeded:()V
     118: return

  private void deflateUntilInputIsNeeded() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #57                 // Field def:Ljava/util/zip/Deflater;
       4: invokevirtual #167                // Method java/util/zip/Deflater.needsInput:()Z
       7: ifne          17
      10: aload_0
      11: invokevirtual #155                // Method deflate:()V
      14: goto          0
      17: return

  void deflate() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #57                 // Field def:Ljava/util/zip/Deflater;
       4: aload_0
       5: getfield      #53                 // Field outputBuffer:[B
       8: iconst_0
       9: aload_0
      10: getfield      #53                 // Field outputBuffer:[B
      13: arraylength
      14: invokevirtual #169                // Method java/util/zip/Deflater.deflate:([BII)I
      17: istore_1
      18: iload_1
      19: ifle          32
      22: aload_0
      23: aload_0
      24: getfield      #53                 // Field outputBuffer:[B
      27: iconst_0
      28: iload_1
      29: invokevirtual #137                // Method writeCounted:([BII)V
      32: return

  public void writeCounted(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #137                // Method writeCounted:([BII)V
       8: return

  public void writeCounted(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #175                // Method writeOut:([BII)V
       7: aload_0
       8: dup
       9: getfield      #47                 // Field writtenToOutputStreamForLastEntry:J
      12: iload_3
      13: i2l
      14: ladd
      15: putfield      #47                 // Field writtenToOutputStreamForLastEntry:J
      18: aload_0
      19: dup
      20: getfield      #51                 // Field totalWrittenToOutputStream:J
      23: iload_3
      24: i2l
      25: ladd
      26: putfield      #51                 // Field totalWrittenToOutputStream:J
      29: return

  protected abstract void writeOut(byte[], int, int) throws java.io.IOException;
}
