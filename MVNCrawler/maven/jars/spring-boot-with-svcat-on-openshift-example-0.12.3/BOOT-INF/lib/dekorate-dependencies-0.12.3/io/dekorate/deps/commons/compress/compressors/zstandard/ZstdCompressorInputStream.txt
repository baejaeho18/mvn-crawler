Compiled from "ZstdCompressorInputStream.java"
public class io.dekorate.deps.commons.compress.compressors.zstandard.ZstdCompressorInputStream extends io.dekorate.deps.commons.compress.compressors.CompressorInputStream implements io.dekorate.deps.commons.compress.utils.InputStreamStatistics {
  private final io.dekorate.deps.commons.compress.utils.CountingInputStream countingStream;

  private final com.github.luben.zstd.ZstdInputStream decIS;

  public io.dekorate.deps.commons.compress.compressors.zstandard.ZstdCompressorInputStream(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #18                 // Method io/dekorate/deps/commons/compress/compressors/CompressorInputStream."<init>":()V
       4: aload_0
       5: new           #20                 // class com/github/luben/zstd/ZstdInputStream
       8: dup
       9: aload_0
      10: new           #22                 // class io/dekorate/deps/commons/compress/utils/CountingInputStream
      13: dup
      14: aload_1
      15: invokespecial #24                 // Method io/dekorate/deps/commons/compress/utils/CountingInputStream."<init>":(Ljava/io/InputStream;)V
      18: dup_x1
      19: putfield      #26                 // Field countingStream:Lio/dekorate/deps/commons/compress/utils/CountingInputStream;
      22: invokespecial #27                 // Method com/github/luben/zstd/ZstdInputStream."<init>":(Ljava/io/InputStream;)V
      25: putfield      #29                 // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;
      28: return

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;
       4: invokevirtual #37                 // Method com/github/luben/zstd/ZstdInputStream.available:()I
       7: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;
       4: invokevirtual #40                 // Method com/github/luben/zstd/ZstdInputStream.close:()V
       7: return

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;
       4: aload_1
       5: invokevirtual #44                 // Method com/github/luben/zstd/ZstdInputStream.read:([B)I
       8: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;
       4: lload_1
       5: invokestatic  #53                 // Method io/dekorate/deps/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J
       8: lreturn

  public void mark(int);
    Code:
       0: aload_0
       1: getfield      #29                 // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;
       4: iload_1
       5: invokevirtual #59                 // Method com/github/luben/zstd/ZstdInputStream.mark:(I)V
       8: return

  public boolean markSupported();
    Code:
       0: aload_0
       1: getfield      #29                 // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;
       4: invokevirtual #65                 // Method com/github/luben/zstd/ZstdInputStream.markSupported:()Z
       7: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;
       4: invokevirtual #67                 // Method com/github/luben/zstd/ZstdInputStream.read:()I
       7: istore_1
       8: aload_0
       9: iload_1
      10: iconst_m1
      11: if_icmpne     18
      14: iconst_0
      15: goto          19
      18: iconst_1
      19: invokevirtual #70                 // Method count:(I)V
      22: iload_1
      23: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #74                 // Method com/github/luben/zstd/ZstdInputStream.read:([BII)I
      10: istore        4
      12: aload_0
      13: iload         4
      15: invokevirtual #70                 // Method count:(I)V
      18: iload         4
      20: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #29                 // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;
       4: invokevirtual #83                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn

  public void reset() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;
       4: invokevirtual #86                 // Method com/github/luben/zstd/ZstdInputStream.reset:()V
       7: return

  public long getCompressedCount();
    Code:
       0: aload_0
       1: getfield      #26                 // Field countingStream:Lio/dekorate/deps/commons/compress/utils/CountingInputStream;
       4: invokevirtual #91                 // Method io/dekorate/deps/commons/compress/utils/CountingInputStream.getBytesRead:()J
       7: lreturn
}
