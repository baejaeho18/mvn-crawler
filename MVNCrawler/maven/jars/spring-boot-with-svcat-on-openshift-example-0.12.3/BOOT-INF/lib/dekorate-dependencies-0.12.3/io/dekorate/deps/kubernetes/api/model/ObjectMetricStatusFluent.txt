Compiled from "ObjectMetricStatusFluent.java"
public interface io.dekorate.deps.kubernetes.api.model.ObjectMetricStatusFluent<A extends io.dekorate.deps.kubernetes.api.model.ObjectMetricStatusFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract io.dekorate.deps.kubernetes.api.model.MetricValueStatus getCurrent();

  public abstract io.dekorate.deps.kubernetes.api.model.MetricValueStatus buildCurrent();

  public abstract A withCurrent(io.dekorate.deps.kubernetes.api.model.MetricValueStatus);

  public abstract java.lang.Boolean hasCurrent();

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectMetricStatusFluent$CurrentNested<A> withNewCurrent();

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectMetricStatusFluent$CurrentNested<A> withNewCurrentLike(io.dekorate.deps.kubernetes.api.model.MetricValueStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectMetricStatusFluent$CurrentNested<A> editCurrent();

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectMetricStatusFluent$CurrentNested<A> editOrNewCurrent();

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectMetricStatusFluent$CurrentNested<A> editOrNewCurrentLike(io.dekorate.deps.kubernetes.api.model.MetricValueStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.CrossVersionObjectReference getDescribedObject();

  public abstract io.dekorate.deps.kubernetes.api.model.CrossVersionObjectReference buildDescribedObject();

  public abstract A withDescribedObject(io.dekorate.deps.kubernetes.api.model.CrossVersionObjectReference);

  public abstract java.lang.Boolean hasDescribedObject();

  public abstract A withNewDescribedObject(java.lang.String, java.lang.String, java.lang.String);

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectMetricStatusFluent$DescribedObjectNested<A> withNewDescribedObject();

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectMetricStatusFluent$DescribedObjectNested<A> withNewDescribedObjectLike(io.dekorate.deps.kubernetes.api.model.CrossVersionObjectReference);

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectMetricStatusFluent$DescribedObjectNested<A> editDescribedObject();

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectMetricStatusFluent$DescribedObjectNested<A> editOrNewDescribedObject();

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectMetricStatusFluent$DescribedObjectNested<A> editOrNewDescribedObjectLike(io.dekorate.deps.kubernetes.api.model.CrossVersionObjectReference);

  public abstract io.dekorate.deps.kubernetes.api.model.MetricIdentifier getMetric();

  public abstract io.dekorate.deps.kubernetes.api.model.MetricIdentifier buildMetric();

  public abstract A withMetric(io.dekorate.deps.kubernetes.api.model.MetricIdentifier);

  public abstract java.lang.Boolean hasMetric();

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectMetricStatusFluent$MetricNested<A> withNewMetric();

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectMetricStatusFluent$MetricNested<A> withNewMetricLike(io.dekorate.deps.kubernetes.api.model.MetricIdentifier);

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectMetricStatusFluent$MetricNested<A> editMetric();

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectMetricStatusFluent$MetricNested<A> editOrNewMetric();

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectMetricStatusFluent$MetricNested<A> editOrNewMetricLike(io.dekorate.deps.kubernetes.api.model.MetricIdentifier);
}
