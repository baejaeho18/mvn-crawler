Compiled from "NodeMetricsFluent.java"
public interface io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.NodeMetricsFluent<A extends io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.NodeMetricsFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getApiVersion();

  public abstract A withApiVersion(java.lang.String);

  public abstract java.lang.Boolean hasApiVersion();

  public abstract A withNewApiVersion(java.lang.String);

  public abstract A withNewApiVersion(java.lang.StringBuilder);

  public abstract A withNewApiVersion(java.lang.StringBuffer);

  public abstract java.lang.String getKind();

  public abstract A withKind(java.lang.String);

  public abstract java.lang.Boolean hasKind();

  public abstract A withNewKind(java.lang.String);

  public abstract A withNewKind(java.lang.StringBuilder);

  public abstract A withNewKind(java.lang.StringBuffer);

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectMeta getMetadata();

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectMeta buildMetadata();

  public abstract A withMetadata(io.dekorate.deps.kubernetes.api.model.ObjectMeta);

  public abstract java.lang.Boolean hasMetadata();

  public abstract io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.NodeMetricsFluent$MetadataNested<A> withNewMetadata();

  public abstract io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.NodeMetricsFluent$MetadataNested<A> withNewMetadataLike(io.dekorate.deps.kubernetes.api.model.ObjectMeta);

  public abstract io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.NodeMetricsFluent$MetadataNested<A> editMetadata();

  public abstract io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.NodeMetricsFluent$MetadataNested<A> editOrNewMetadata();

  public abstract io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.NodeMetricsFluent$MetadataNested<A> editOrNewMetadataLike(io.dekorate.deps.kubernetes.api.model.ObjectMeta);

  public abstract java.lang.String getTimestamp();

  public abstract A withTimestamp(java.lang.String);

  public abstract java.lang.Boolean hasTimestamp();

  public abstract A withNewTimestamp(java.lang.String);

  public abstract A withNewTimestamp(java.lang.StringBuilder);

  public abstract A withNewTimestamp(java.lang.StringBuffer);

  public abstract A addToUsage(java.lang.String, io.dekorate.deps.kubernetes.api.model.Quantity);

  public abstract A addToUsage(java.util.Map<java.lang.String, io.dekorate.deps.kubernetes.api.model.Quantity>);

  public abstract A removeFromUsage(java.lang.String);

  public abstract A removeFromUsage(java.util.Map<java.lang.String, io.dekorate.deps.kubernetes.api.model.Quantity>);

  public abstract java.util.Map<java.lang.String, io.dekorate.deps.kubernetes.api.model.Quantity> getUsage();

  public abstract A withUsage(java.util.Map<java.lang.String, io.dekorate.deps.kubernetes.api.model.Quantity>);

  public abstract java.lang.Boolean hasUsage();

  public abstract io.dekorate.deps.kubernetes.api.model.Duration getWindow();

  public abstract A withWindow(io.dekorate.deps.kubernetes.api.model.Duration);

  public abstract java.lang.Boolean hasWindow();
}
