Compiled from "HuffmanDecoder.java"
class io.dekorate.deps.commons.compress.compressors.deflate64.HuffmanDecoder$HuffmanCodes extends io.dekorate.deps.commons.compress.compressors.deflate64.HuffmanDecoder$DecoderState {
  private boolean endOfBlock;

  private final io.dekorate.deps.commons.compress.compressors.deflate64.HuffmanState state;

  private final io.dekorate.deps.commons.compress.compressors.deflate64.HuffmanDecoder$BinaryTreeNode lengthTree;

  private final io.dekorate.deps.commons.compress.compressors.deflate64.HuffmanDecoder$BinaryTreeNode distanceTree;

  private int runBufferPos;

  private byte[] runBuffer;

  private int runBufferLength;

  final io.dekorate.deps.commons.compress.compressors.deflate64.HuffmanDecoder this$0;

  io.dekorate.deps.commons.compress.compressors.deflate64.HuffmanDecoder$HuffmanCodes(io.dekorate.deps.commons.compress.compressors.deflate64.HuffmanDecoder, io.dekorate.deps.commons.compress.compressors.deflate64.HuffmanState, int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #35                 // Field this$0:Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder;
       5: aload_0
       6: aconst_null
       7: invokespecial #38                 // Method io/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState."<init>":(Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder$1;)V
      10: aload_0
      11: iconst_0
      12: putfield      #40                 // Field endOfBlock:Z
      15: aload_0
      16: iconst_0
      17: putfield      #42                 // Field runBufferPos:I
      20: aload_0
      21: iconst_0
      22: newarray       byte
      24: putfield      #44                 // Field runBuffer:[B
      27: aload_0
      28: iconst_0
      29: putfield      #46                 // Field runBufferLength:I
      32: aload_0
      33: aload_2
      34: putfield      #48                 // Field state:Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanState;
      37: aload_0
      38: aload_3
      39: invokestatic  #52                 // Method io/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder.access$800:([I)Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;
      42: putfield      #54                 // Field lengthTree:Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;
      45: aload_0
      46: aload         4
      48: invokestatic  #52                 // Method io/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder.access$800:([I)Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;
      51: putfield      #56                 // Field distanceTree:Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;
      54: return

  io.dekorate.deps.commons.compress.compressors.deflate64.HuffmanState state();
    Code:
       0: aload_0
       1: getfield      #40                 // Field endOfBlock:Z
       4: ifeq          13
       7: getstatic     #67                 // Field io/dekorate/deps/commons/compress/compressors/deflate64/HuffmanState.INITIAL:Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanState;
      10: goto          17
      13: aload_0
      14: getfield      #48                 // Field state:Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanState;
      17: areturn

  int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokespecial #74                 // Method decodeNext:([BII)I
       7: ireturn

  private int decodeNext(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #40                 // Field endOfBlock:Z
       4: ifeq          9
       7: iconst_m1
       8: ireturn
       9: aload_0
      10: aload_1
      11: iload_2
      12: iload_3
      13: invokespecial #80                 // Method copyFromRunBuffer:([BII)I
      16: istore        4
      18: iload         4
      20: iload_3
      21: if_icmpge     254
      24: aload_0
      25: getfield      #35                 // Field this$0:Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder;
      28: invokestatic  #84                 // Method io/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder.access$400:(Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder;)Lio/dekorate/deps/commons/compress/utils/BitInputStream;
      31: aload_0
      32: getfield      #54                 // Field lengthTree:Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;
      35: invokestatic  #88                 // Method io/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder.access$900:(Lio/dekorate/deps/commons/compress/utils/BitInputStream;Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;)I
      38: istore        5
      40: iload         5
      42: sipush        256
      45: if_icmpge     73
      48: aload_1
      49: iload_2
      50: iload         4
      52: iinc          4, 1
      55: iadd
      56: aload_0
      57: getfield      #35                 // Field this$0:Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder;
      60: invokestatic  #92                 // Method io/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder.access$600:(Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder;)Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;
      63: iload         5
      65: i2b
      66: invokevirtual #96                 // Method io/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.add:(B)B
      69: bastore
      70: goto          251
      73: iload         5
      75: sipush        256
      78: if_icmple     243
      81: invokestatic  #100                // Method io/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder.access$1000:()[S
      84: iload         5
      86: sipush        257
      89: isub
      90: saload
      91: istore        6
      93: iload         6
      95: iconst_5
      96: iushr
      97: istore        7
      99: iload         6
     101: bipush        31
     103: iand
     104: istore        8
     106: iload         7
     108: i2l
     109: aload_0
     110: getfield      #35                 // Field this$0:Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder;
     113: iload         8
     115: invokestatic  #104                // Method io/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder.access$500:(Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder;I)J
     118: ladd
     119: l2i
     120: istore        7
     122: aload_0
     123: getfield      #35                 // Field this$0:Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder;
     126: invokestatic  #84                 // Method io/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder.access$400:(Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder;)Lio/dekorate/deps/commons/compress/utils/BitInputStream;
     129: aload_0
     130: getfield      #56                 // Field distanceTree:Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;
     133: invokestatic  #88                 // Method io/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder.access$900:(Lio/dekorate/deps/commons/compress/utils/BitInputStream;Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;)I
     136: istore        9
     138: invokestatic  #108                // Method io/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder.access$1100:()[I
     141: iload         9
     143: iaload
     144: istore        10
     146: iload         10
     148: iconst_4
     149: iushr
     150: istore        11
     152: iload         10
     154: bipush        15
     156: iand
     157: istore        12
     159: iload         11
     161: i2l
     162: aload_0
     163: getfield      #35                 // Field this$0:Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder;
     166: iload         12
     168: invokestatic  #104                // Method io/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder.access$500:(Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder;I)J
     171: ladd
     172: l2i
     173: istore        11
     175: aload_0
     176: getfield      #44                 // Field runBuffer:[B
     179: arraylength
     180: iload         7
     182: if_icmpge     193
     185: aload_0
     186: iload         7
     188: newarray       byte
     190: putfield      #44                 // Field runBuffer:[B
     193: aload_0
     194: iload         7
     196: putfield      #46                 // Field runBufferLength:I
     199: aload_0
     200: iconst_0
     201: putfield      #42                 // Field runBufferPos:I
     204: aload_0
     205: getfield      #35                 // Field this$0:Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder;
     208: invokestatic  #92                 // Method io/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder.access$600:(Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder;)Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;
     211: iload         11
     213: iload         7
     215: aload_0
     216: getfield      #44                 // Field runBuffer:[B
     219: invokevirtual #113                // Method io/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.recordToBuffer:(II[B)V
     222: iload         4
     224: aload_0
     225: aload_1
     226: iload_2
     227: iload         4
     229: iadd
     230: iload_3
     231: iload         4
     233: isub
     234: invokespecial #80                 // Method copyFromRunBuffer:([BII)I
     237: iadd
     238: istore        4
     240: goto          251
     243: aload_0
     244: iconst_1
     245: putfield      #40                 // Field endOfBlock:Z
     248: iload         4
     250: ireturn
     251: goto          18
     254: iload         4
     256: ireturn

  private int copyFromRunBuffer(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #46                 // Field runBufferLength:I
       4: aload_0
       5: getfield      #42                 // Field runBufferPos:I
       8: isub
       9: istore        4
      11: iconst_0
      12: istore        5
      14: iload         4
      16: ifle          53
      19: iload_3
      20: iload         4
      22: invokestatic  #128                // Method java/lang/Math.min:(II)I
      25: istore        5
      27: aload_0
      28: getfield      #44                 // Field runBuffer:[B
      31: aload_0
      32: getfield      #42                 // Field runBufferPos:I
      35: aload_1
      36: iload_2
      37: iload         5
      39: invokestatic  #134                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      42: aload_0
      43: dup
      44: getfield      #42                 // Field runBufferPos:I
      47: iload         5
      49: iadd
      50: putfield      #42                 // Field runBufferPos:I
      53: iload         5
      55: ireturn

  boolean hasData();
    Code:
       0: aload_0
       1: getfield      #40                 // Field endOfBlock:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  int available();
    Code:
       0: aload_0
       1: getfield      #46                 // Field runBufferLength:I
       4: aload_0
       5: getfield      #42                 // Field runBufferPos:I
       8: isub
       9: ireturn
}
