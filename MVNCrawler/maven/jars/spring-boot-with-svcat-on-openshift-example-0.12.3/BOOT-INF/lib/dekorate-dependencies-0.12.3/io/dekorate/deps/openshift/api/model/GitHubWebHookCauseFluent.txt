Compiled from "GitHubWebHookCauseFluent.java"
public interface io.dekorate.deps.openshift.api.model.GitHubWebHookCauseFluent<A extends io.dekorate.deps.openshift.api.model.GitHubWebHookCauseFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract io.dekorate.deps.openshift.api.model.SourceRevision getRevision();

  public abstract io.dekorate.deps.openshift.api.model.SourceRevision buildRevision();

  public abstract A withRevision(io.dekorate.deps.openshift.api.model.SourceRevision);

  public abstract java.lang.Boolean hasRevision();

  public abstract io.dekorate.deps.openshift.api.model.GitHubWebHookCauseFluent$RevisionNested<A> withNewRevision();

  public abstract io.dekorate.deps.openshift.api.model.GitHubWebHookCauseFluent$RevisionNested<A> withNewRevisionLike(io.dekorate.deps.openshift.api.model.SourceRevision);

  public abstract io.dekorate.deps.openshift.api.model.GitHubWebHookCauseFluent$RevisionNested<A> editRevision();

  public abstract io.dekorate.deps.openshift.api.model.GitHubWebHookCauseFluent$RevisionNested<A> editOrNewRevision();

  public abstract io.dekorate.deps.openshift.api.model.GitHubWebHookCauseFluent$RevisionNested<A> editOrNewRevisionLike(io.dekorate.deps.openshift.api.model.SourceRevision);

  public abstract java.lang.String getSecret();

  public abstract A withSecret(java.lang.String);

  public abstract java.lang.Boolean hasSecret();

  public abstract A withNewSecret(java.lang.String);

  public abstract A withNewSecret(java.lang.StringBuilder);

  public abstract A withNewSecret(java.lang.StringBuffer);
}
