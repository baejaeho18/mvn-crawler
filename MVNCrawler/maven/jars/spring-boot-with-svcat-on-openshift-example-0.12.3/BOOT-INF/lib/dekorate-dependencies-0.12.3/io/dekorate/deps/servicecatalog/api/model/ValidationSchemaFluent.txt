Compiled from "ValidationSchemaFluent.java"
public interface io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent<A extends io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract io.dekorate.deps.servicecatalog.api.model.ClusterServiceBroker getClusterServiceBroker();

  public abstract io.dekorate.deps.servicecatalog.api.model.ClusterServiceBroker buildClusterServiceBroker();

  public abstract A withClusterServiceBroker(io.dekorate.deps.servicecatalog.api.model.ClusterServiceBroker);

  public abstract java.lang.Boolean hasClusterServiceBroker();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ClusterServiceBrokerNested<A> withNewClusterServiceBroker();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ClusterServiceBrokerNested<A> withNewClusterServiceBrokerLike(io.dekorate.deps.servicecatalog.api.model.ClusterServiceBroker);

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ClusterServiceBrokerNested<A> editClusterServiceBroker();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ClusterServiceBrokerNested<A> editOrNewClusterServiceBroker();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ClusterServiceBrokerNested<A> editOrNewClusterServiceBrokerLike(io.dekorate.deps.servicecatalog.api.model.ClusterServiceBroker);

  public abstract io.dekorate.deps.servicecatalog.api.model.ClusterServiceBrokerList getClusterServiceBrokerList();

  public abstract io.dekorate.deps.servicecatalog.api.model.ClusterServiceBrokerList buildClusterServiceBrokerList();

  public abstract A withClusterServiceBrokerList(io.dekorate.deps.servicecatalog.api.model.ClusterServiceBrokerList);

  public abstract java.lang.Boolean hasClusterServiceBrokerList();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ClusterServiceBrokerListNested<A> withNewClusterServiceBrokerList();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ClusterServiceBrokerListNested<A> withNewClusterServiceBrokerListLike(io.dekorate.deps.servicecatalog.api.model.ClusterServiceBrokerList);

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ClusterServiceBrokerListNested<A> editClusterServiceBrokerList();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ClusterServiceBrokerListNested<A> editOrNewClusterServiceBrokerList();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ClusterServiceBrokerListNested<A> editOrNewClusterServiceBrokerListLike(io.dekorate.deps.servicecatalog.api.model.ClusterServiceBrokerList);

  public abstract io.dekorate.deps.servicecatalog.api.model.ClusterServiceClass getClusterServiceClass();

  public abstract io.dekorate.deps.servicecatalog.api.model.ClusterServiceClass buildClusterServiceClass();

  public abstract A withClusterServiceClass(io.dekorate.deps.servicecatalog.api.model.ClusterServiceClass);

  public abstract java.lang.Boolean hasClusterServiceClass();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ClusterServiceClassNested<A> withNewClusterServiceClass();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ClusterServiceClassNested<A> withNewClusterServiceClassLike(io.dekorate.deps.servicecatalog.api.model.ClusterServiceClass);

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ClusterServiceClassNested<A> editClusterServiceClass();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ClusterServiceClassNested<A> editOrNewClusterServiceClass();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ClusterServiceClassNested<A> editOrNewClusterServiceClassLike(io.dekorate.deps.servicecatalog.api.model.ClusterServiceClass);

  public abstract io.dekorate.deps.servicecatalog.api.model.ClusterServiceClassList getClusterServiceClassList();

  public abstract io.dekorate.deps.servicecatalog.api.model.ClusterServiceClassList buildClusterServiceClassList();

  public abstract A withClusterServiceClassList(io.dekorate.deps.servicecatalog.api.model.ClusterServiceClassList);

  public abstract java.lang.Boolean hasClusterServiceClassList();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ClusterServiceClassListNested<A> withNewClusterServiceClassList();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ClusterServiceClassListNested<A> withNewClusterServiceClassListLike(io.dekorate.deps.servicecatalog.api.model.ClusterServiceClassList);

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ClusterServiceClassListNested<A> editClusterServiceClassList();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ClusterServiceClassListNested<A> editOrNewClusterServiceClassList();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ClusterServiceClassListNested<A> editOrNewClusterServiceClassListLike(io.dekorate.deps.servicecatalog.api.model.ClusterServiceClassList);

  public abstract io.dekorate.deps.servicecatalog.api.model.ClusterServicePlan getClusterServicePlan();

  public abstract io.dekorate.deps.servicecatalog.api.model.ClusterServicePlan buildClusterServicePlan();

  public abstract A withClusterServicePlan(io.dekorate.deps.servicecatalog.api.model.ClusterServicePlan);

  public abstract java.lang.Boolean hasClusterServicePlan();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ClusterServicePlanNested<A> withNewClusterServicePlan();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ClusterServicePlanNested<A> withNewClusterServicePlanLike(io.dekorate.deps.servicecatalog.api.model.ClusterServicePlan);

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ClusterServicePlanNested<A> editClusterServicePlan();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ClusterServicePlanNested<A> editOrNewClusterServicePlan();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ClusterServicePlanNested<A> editOrNewClusterServicePlanLike(io.dekorate.deps.servicecatalog.api.model.ClusterServicePlan);

  public abstract io.dekorate.deps.servicecatalog.api.model.ClusterServicePlanList getClusterServicePlanList();

  public abstract io.dekorate.deps.servicecatalog.api.model.ClusterServicePlanList buildClusterServicePlanList();

  public abstract A withClusterServicePlanList(io.dekorate.deps.servicecatalog.api.model.ClusterServicePlanList);

  public abstract java.lang.Boolean hasClusterServicePlanList();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ClusterServicePlanListNested<A> withNewClusterServicePlanList();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ClusterServicePlanListNested<A> withNewClusterServicePlanListLike(io.dekorate.deps.servicecatalog.api.model.ClusterServicePlanList);

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ClusterServicePlanListNested<A> editClusterServicePlanList();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ClusterServicePlanListNested<A> editOrNewClusterServicePlanList();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ClusterServicePlanListNested<A> editOrNewClusterServicePlanListLike(io.dekorate.deps.servicecatalog.api.model.ClusterServicePlanList);

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceBinding getServiceBinding();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceBinding buildServiceBinding();

  public abstract A withServiceBinding(io.dekorate.deps.servicecatalog.api.model.ServiceBinding);

  public abstract java.lang.Boolean hasServiceBinding();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ServiceBindingNested<A> withNewServiceBinding();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ServiceBindingNested<A> withNewServiceBindingLike(io.dekorate.deps.servicecatalog.api.model.ServiceBinding);

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ServiceBindingNested<A> editServiceBinding();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ServiceBindingNested<A> editOrNewServiceBinding();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ServiceBindingNested<A> editOrNewServiceBindingLike(io.dekorate.deps.servicecatalog.api.model.ServiceBinding);

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceBindingList getServiceBindingList();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceBindingList buildServiceBindingList();

  public abstract A withServiceBindingList(io.dekorate.deps.servicecatalog.api.model.ServiceBindingList);

  public abstract java.lang.Boolean hasServiceBindingList();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ServiceBindingListNested<A> withNewServiceBindingList();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ServiceBindingListNested<A> withNewServiceBindingListLike(io.dekorate.deps.servicecatalog.api.model.ServiceBindingList);

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ServiceBindingListNested<A> editServiceBindingList();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ServiceBindingListNested<A> editOrNewServiceBindingList();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ServiceBindingListNested<A> editOrNewServiceBindingListLike(io.dekorate.deps.servicecatalog.api.model.ServiceBindingList);

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceBroker getServiceBroker();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceBroker buildServiceBroker();

  public abstract A withServiceBroker(io.dekorate.deps.servicecatalog.api.model.ServiceBroker);

  public abstract java.lang.Boolean hasServiceBroker();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ServiceBrokerNested<A> withNewServiceBroker();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ServiceBrokerNested<A> withNewServiceBrokerLike(io.dekorate.deps.servicecatalog.api.model.ServiceBroker);

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ServiceBrokerNested<A> editServiceBroker();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ServiceBrokerNested<A> editOrNewServiceBroker();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ServiceBrokerNested<A> editOrNewServiceBrokerLike(io.dekorate.deps.servicecatalog.api.model.ServiceBroker);

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceBrokerList getServiceBrokerList();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceBrokerList buildServiceBrokerList();

  public abstract A withServiceBrokerList(io.dekorate.deps.servicecatalog.api.model.ServiceBrokerList);

  public abstract java.lang.Boolean hasServiceBrokerList();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ServiceBrokerListNested<A> withNewServiceBrokerList();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ServiceBrokerListNested<A> withNewServiceBrokerListLike(io.dekorate.deps.servicecatalog.api.model.ServiceBrokerList);

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ServiceBrokerListNested<A> editServiceBrokerList();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ServiceBrokerListNested<A> editOrNewServiceBrokerList();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ServiceBrokerListNested<A> editOrNewServiceBrokerListLike(io.dekorate.deps.servicecatalog.api.model.ServiceBrokerList);

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstance getServiceInstance();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstance buildServiceInstance();

  public abstract A withServiceInstance(io.dekorate.deps.servicecatalog.api.model.ServiceInstance);

  public abstract java.lang.Boolean hasServiceInstance();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ServiceInstanceNested<A> withNewServiceInstance();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ServiceInstanceNested<A> withNewServiceInstanceLike(io.dekorate.deps.servicecatalog.api.model.ServiceInstance);

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ServiceInstanceNested<A> editServiceInstance();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ServiceInstanceNested<A> editOrNewServiceInstance();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ServiceInstanceNested<A> editOrNewServiceInstanceLike(io.dekorate.deps.servicecatalog.api.model.ServiceInstance);

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceList getServiceInstanceList();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceList buildServiceInstanceList();

  public abstract A withServiceInstanceList(io.dekorate.deps.servicecatalog.api.model.ServiceInstanceList);

  public abstract java.lang.Boolean hasServiceInstanceList();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ServiceInstanceListNested<A> withNewServiceInstanceList();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ServiceInstanceListNested<A> withNewServiceInstanceListLike(io.dekorate.deps.servicecatalog.api.model.ServiceInstanceList);

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ServiceInstanceListNested<A> editServiceInstanceList();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ServiceInstanceListNested<A> editOrNewServiceInstanceList();

  public abstract io.dekorate.deps.servicecatalog.api.model.ValidationSchemaFluent$ServiceInstanceListNested<A> editOrNewServiceInstanceListLike(io.dekorate.deps.servicecatalog.api.model.ServiceInstanceList);
}
