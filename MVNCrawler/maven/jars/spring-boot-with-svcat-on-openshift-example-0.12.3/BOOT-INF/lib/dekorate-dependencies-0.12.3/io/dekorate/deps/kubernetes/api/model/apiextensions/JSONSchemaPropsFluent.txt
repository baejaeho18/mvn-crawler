Compiled from "JSONSchemaPropsFluent.java"
public interface io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent<A extends io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getRef();

  public abstract A withRef(java.lang.String);

  public abstract java.lang.Boolean hasRef();

  public abstract A withNewRef(java.lang.String);

  public abstract A withNewRef(java.lang.StringBuilder);

  public abstract A withNewRef(java.lang.StringBuffer);

  public abstract java.lang.String getSchema();

  public abstract A withSchema(java.lang.String);

  public abstract java.lang.Boolean hasSchema();

  public abstract A withNewSchema(java.lang.String);

  public abstract A withNewSchema(java.lang.StringBuilder);

  public abstract A withNewSchema(java.lang.StringBuffer);

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsOrBool getAdditionalItems();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsOrBool buildAdditionalItems();

  public abstract A withAdditionalItems(io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsOrBool);

  public abstract java.lang.Boolean hasAdditionalItems();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$AdditionalItemsNested<A> withNewAdditionalItems();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$AdditionalItemsNested<A> withNewAdditionalItemsLike(io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsOrBool);

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$AdditionalItemsNested<A> editAdditionalItems();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$AdditionalItemsNested<A> editOrNewAdditionalItems();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$AdditionalItemsNested<A> editOrNewAdditionalItemsLike(io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsOrBool);

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsOrBool getAdditionalProperties();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsOrBool buildAdditionalProperties();

  public abstract A withAdditionalProperties(io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsOrBool);

  public abstract java.lang.Boolean hasAdditionalProperties();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$AdditionalPropertiesNested<A> withNewAdditionalProperties();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$AdditionalPropertiesNested<A> withNewAdditionalPropertiesLike(io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsOrBool);

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$AdditionalPropertiesNested<A> editAdditionalProperties();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$AdditionalPropertiesNested<A> editOrNewAdditionalProperties();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$AdditionalPropertiesNested<A> editOrNewAdditionalPropertiesLike(io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsOrBool);

  public abstract A addToAllOf(int, io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps);

  public abstract A setToAllOf(int, io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps);

  public abstract A addToAllOf(io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps...);

  public abstract A addAllToAllOf(java.util.Collection<io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps>);

  public abstract A removeFromAllOf(io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps...);

  public abstract A removeAllFromAllOf(java.util.Collection<io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps>);

  public abstract A removeMatchingFromAllOf(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsBuilder>);

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps> getAllOf();

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps> buildAllOf();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps buildAllOf(int);

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps buildFirstAllOf();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps buildLastAllOf();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps buildMatchingAllOf(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsBuilder>);

  public abstract java.lang.Boolean hasMatchingAllOf(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsBuilder>);

  public abstract A withAllOf(java.util.List<io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps>);

  public abstract A withAllOf(io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps...);

  public abstract java.lang.Boolean hasAllOf();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$AllOfNested<A> addNewAllOf();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$AllOfNested<A> addNewAllOfLike(io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps);

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$AllOfNested<A> setNewAllOfLike(int, io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps);

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$AllOfNested<A> editAllOf(int);

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$AllOfNested<A> editFirstAllOf();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$AllOfNested<A> editLastAllOf();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$AllOfNested<A> editMatchingAllOf(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsBuilder>);

  public abstract A addToAnyOf(int, io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps);

  public abstract A setToAnyOf(int, io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps);

  public abstract A addToAnyOf(io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps...);

  public abstract A addAllToAnyOf(java.util.Collection<io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps>);

  public abstract A removeFromAnyOf(io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps...);

  public abstract A removeAllFromAnyOf(java.util.Collection<io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps>);

  public abstract A removeMatchingFromAnyOf(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsBuilder>);

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps> getAnyOf();

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps> buildAnyOf();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps buildAnyOf(int);

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps buildFirstAnyOf();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps buildLastAnyOf();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps buildMatchingAnyOf(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsBuilder>);

  public abstract java.lang.Boolean hasMatchingAnyOf(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsBuilder>);

  public abstract A withAnyOf(java.util.List<io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps>);

  public abstract A withAnyOf(io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps...);

  public abstract java.lang.Boolean hasAnyOf();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$AnyOfNested<A> addNewAnyOf();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$AnyOfNested<A> addNewAnyOfLike(io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps);

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$AnyOfNested<A> setNewAnyOfLike(int, io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps);

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$AnyOfNested<A> editAnyOf(int);

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$AnyOfNested<A> editFirstAnyOf();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$AnyOfNested<A> editLastAnyOf();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$AnyOfNested<A> editMatchingAnyOf(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsBuilder>);

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSON getDefault();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSON buildDefault();

  public abstract A withDefault(io.dekorate.deps.kubernetes.api.model.apiextensions.JSON);

  public abstract java.lang.Boolean hasDefault();

  public abstract A withNewDefault(java.lang.String);

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$DefaultNested<A> withNewDefault();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$DefaultNested<A> withNewDefaultLike(io.dekorate.deps.kubernetes.api.model.apiextensions.JSON);

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$DefaultNested<A> editDefault();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$DefaultNested<A> editOrNewDefault();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$DefaultNested<A> editOrNewDefaultLike(io.dekorate.deps.kubernetes.api.model.apiextensions.JSON);

  public abstract A addToDefinitions(java.lang.String, io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps);

  public abstract A addToDefinitions(java.util.Map<java.lang.String, io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps>);

  public abstract A removeFromDefinitions(java.lang.String);

  public abstract A removeFromDefinitions(java.util.Map<java.lang.String, io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps>);

  public abstract java.util.Map<java.lang.String, io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps> getDefinitions();

  public abstract A withDefinitions(java.util.Map<java.lang.String, io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps>);

  public abstract java.lang.Boolean hasDefinitions();

  public abstract A addToDependencies(java.lang.String, io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsOrStringArray);

  public abstract A addToDependencies(java.util.Map<java.lang.String, io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsOrStringArray>);

  public abstract A removeFromDependencies(java.lang.String);

  public abstract A removeFromDependencies(java.util.Map<java.lang.String, io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsOrStringArray>);

  public abstract java.util.Map<java.lang.String, io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsOrStringArray> getDependencies();

  public abstract A withDependencies(java.util.Map<java.lang.String, io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsOrStringArray>);

  public abstract java.lang.Boolean hasDependencies();

  public abstract java.lang.String getDescription();

  public abstract A withDescription(java.lang.String);

  public abstract java.lang.Boolean hasDescription();

  public abstract A withNewDescription(java.lang.String);

  public abstract A withNewDescription(java.lang.StringBuilder);

  public abstract A withNewDescription(java.lang.StringBuffer);

  public abstract A addToEnum(int, java.lang.String);

  public abstract A setToEnum(int, java.lang.String);

  public abstract A addToEnum(java.lang.String...);

  public abstract A addAllToEnum(java.util.Collection<java.lang.String>);

  public abstract A removeFromEnum(java.lang.String...);

  public abstract A removeAllFromEnum(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getEnum();

  public abstract java.lang.String getEnum(int);

  public abstract java.lang.String getFirstEnum();

  public abstract java.lang.String getLastEnum();

  public abstract java.lang.String getMatchingEnum(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingEnum(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract A withEnum(java.util.List<java.lang.String>);

  public abstract A withEnum(java.lang.String...);

  public abstract java.lang.Boolean hasEnum();

  public abstract A addNewEnum(java.lang.String);

  public abstract A addNewEnum(java.lang.StringBuilder);

  public abstract A addNewEnum(java.lang.StringBuffer);

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSON getExample();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSON buildExample();

  public abstract A withExample(io.dekorate.deps.kubernetes.api.model.apiextensions.JSON);

  public abstract java.lang.Boolean hasExample();

  public abstract A withNewExample(java.lang.String);

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$ExampleNested<A> withNewExample();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$ExampleNested<A> withNewExampleLike(io.dekorate.deps.kubernetes.api.model.apiextensions.JSON);

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$ExampleNested<A> editExample();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$ExampleNested<A> editOrNewExample();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$ExampleNested<A> editOrNewExampleLike(io.dekorate.deps.kubernetes.api.model.apiextensions.JSON);

  public abstract java.lang.Boolean isExclusiveMaximum();

  public abstract A withExclusiveMaximum(java.lang.Boolean);

  public abstract java.lang.Boolean hasExclusiveMaximum();

  public abstract A withNewExclusiveMaximum(java.lang.String);

  public abstract A withNewExclusiveMaximum(boolean);

  public abstract java.lang.Boolean isExclusiveMinimum();

  public abstract A withExclusiveMinimum(java.lang.Boolean);

  public abstract java.lang.Boolean hasExclusiveMinimum();

  public abstract A withNewExclusiveMinimum(java.lang.String);

  public abstract A withNewExclusiveMinimum(boolean);

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.ExternalDocumentation getExternalDocs();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.ExternalDocumentation buildExternalDocs();

  public abstract A withExternalDocs(io.dekorate.deps.kubernetes.api.model.apiextensions.ExternalDocumentation);

  public abstract java.lang.Boolean hasExternalDocs();

  public abstract A withNewExternalDocs(java.lang.String, java.lang.String);

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$ExternalDocsNested<A> withNewExternalDocs();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$ExternalDocsNested<A> withNewExternalDocsLike(io.dekorate.deps.kubernetes.api.model.apiextensions.ExternalDocumentation);

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$ExternalDocsNested<A> editExternalDocs();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$ExternalDocsNested<A> editOrNewExternalDocs();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$ExternalDocsNested<A> editOrNewExternalDocsLike(io.dekorate.deps.kubernetes.api.model.apiextensions.ExternalDocumentation);

  public abstract java.lang.String getFormat();

  public abstract A withFormat(java.lang.String);

  public abstract java.lang.Boolean hasFormat();

  public abstract A withNewFormat(java.lang.String);

  public abstract A withNewFormat(java.lang.StringBuilder);

  public abstract A withNewFormat(java.lang.StringBuffer);

  public abstract java.lang.String getId();

  public abstract A withId(java.lang.String);

  public abstract java.lang.Boolean hasId();

  public abstract A withNewId(java.lang.String);

  public abstract A withNewId(java.lang.StringBuilder);

  public abstract A withNewId(java.lang.StringBuffer);

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsOrArray getItems();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsOrArray buildItems();

  public abstract A withItems(io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsOrArray);

  public abstract java.lang.Boolean hasItems();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$ItemsNested<A> withNewItems();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$ItemsNested<A> withNewItemsLike(io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsOrArray);

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$ItemsNested<A> editItems();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$ItemsNested<A> editOrNewItems();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$ItemsNested<A> editOrNewItemsLike(io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsOrArray);

  public abstract java.lang.Long getMaxItems();

  public abstract A withMaxItems(java.lang.Long);

  public abstract java.lang.Boolean hasMaxItems();

  public abstract java.lang.Long getMaxLength();

  public abstract A withMaxLength(java.lang.Long);

  public abstract java.lang.Boolean hasMaxLength();

  public abstract java.lang.Long getMaxProperties();

  public abstract A withMaxProperties(java.lang.Long);

  public abstract java.lang.Boolean hasMaxProperties();

  public abstract java.lang.Double getMaximum();

  public abstract A withMaximum(java.lang.Double);

  public abstract java.lang.Boolean hasMaximum();

  public abstract java.lang.Long getMinItems();

  public abstract A withMinItems(java.lang.Long);

  public abstract java.lang.Boolean hasMinItems();

  public abstract java.lang.Long getMinLength();

  public abstract A withMinLength(java.lang.Long);

  public abstract java.lang.Boolean hasMinLength();

  public abstract java.lang.Long getMinProperties();

  public abstract A withMinProperties(java.lang.Long);

  public abstract java.lang.Boolean hasMinProperties();

  public abstract java.lang.Double getMinimum();

  public abstract A withMinimum(java.lang.Double);

  public abstract java.lang.Boolean hasMinimum();

  public abstract java.lang.Double getMultipleOf();

  public abstract A withMultipleOf(java.lang.Double);

  public abstract java.lang.Boolean hasMultipleOf();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps getNot();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps buildNot();

  public abstract A withNot(io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps);

  public abstract java.lang.Boolean hasNot();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$NotNested<A> withNewNot();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$NotNested<A> withNewNotLike(io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps);

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$NotNested<A> editNot();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$NotNested<A> editOrNewNot();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$NotNested<A> editOrNewNotLike(io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps);

  public abstract java.lang.Boolean isNullable();

  public abstract A withNullable(java.lang.Boolean);

  public abstract java.lang.Boolean hasNullable();

  public abstract A withNewNullable(java.lang.String);

  public abstract A withNewNullable(boolean);

  public abstract A addToOneOf(int, io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps);

  public abstract A setToOneOf(int, io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps);

  public abstract A addToOneOf(io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps...);

  public abstract A addAllToOneOf(java.util.Collection<io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps>);

  public abstract A removeFromOneOf(io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps...);

  public abstract A removeAllFromOneOf(java.util.Collection<io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps>);

  public abstract A removeMatchingFromOneOf(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsBuilder>);

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps> getOneOf();

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps> buildOneOf();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps buildOneOf(int);

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps buildFirstOneOf();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps buildLastOneOf();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps buildMatchingOneOf(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsBuilder>);

  public abstract java.lang.Boolean hasMatchingOneOf(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsBuilder>);

  public abstract A withOneOf(java.util.List<io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps>);

  public abstract A withOneOf(io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps...);

  public abstract java.lang.Boolean hasOneOf();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$OneOfNested<A> addNewOneOf();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$OneOfNested<A> addNewOneOfLike(io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps);

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$OneOfNested<A> setNewOneOfLike(int, io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps);

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$OneOfNested<A> editOneOf(int);

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$OneOfNested<A> editFirstOneOf();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$OneOfNested<A> editLastOneOf();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsFluent$OneOfNested<A> editMatchingOneOf(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsBuilder>);

  public abstract java.lang.String getPattern();

  public abstract A withPattern(java.lang.String);

  public abstract java.lang.Boolean hasPattern();

  public abstract A withNewPattern(java.lang.String);

  public abstract A withNewPattern(java.lang.StringBuilder);

  public abstract A withNewPattern(java.lang.StringBuffer);

  public abstract A addToPatternProperties(java.lang.String, io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps);

  public abstract A addToPatternProperties(java.util.Map<java.lang.String, io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps>);

  public abstract A removeFromPatternProperties(java.lang.String);

  public abstract A removeFromPatternProperties(java.util.Map<java.lang.String, io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps>);

  public abstract java.util.Map<java.lang.String, io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps> getPatternProperties();

  public abstract A withPatternProperties(java.util.Map<java.lang.String, io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps>);

  public abstract java.lang.Boolean hasPatternProperties();

  public abstract A addToProperties(java.lang.String, io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps);

  public abstract A addToProperties(java.util.Map<java.lang.String, io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps>);

  public abstract A removeFromProperties(java.lang.String);

  public abstract A removeFromProperties(java.util.Map<java.lang.String, io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps>);

  public abstract java.util.Map<java.lang.String, io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps> getProperties();

  public abstract A withProperties(java.util.Map<java.lang.String, io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps>);

  public abstract java.lang.Boolean hasProperties();

  public abstract A addToRequired(int, java.lang.String);

  public abstract A setToRequired(int, java.lang.String);

  public abstract A addToRequired(java.lang.String...);

  public abstract A addAllToRequired(java.util.Collection<java.lang.String>);

  public abstract A removeFromRequired(java.lang.String...);

  public abstract A removeAllFromRequired(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getRequired();

  public abstract java.lang.String getRequired(int);

  public abstract java.lang.String getFirstRequired();

  public abstract java.lang.String getLastRequired();

  public abstract java.lang.String getMatchingRequired(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingRequired(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract A withRequired(java.util.List<java.lang.String>);

  public abstract A withRequired(java.lang.String...);

  public abstract java.lang.Boolean hasRequired();

  public abstract A addNewRequired(java.lang.String);

  public abstract A addNewRequired(java.lang.StringBuilder);

  public abstract A addNewRequired(java.lang.StringBuffer);

  public abstract java.lang.String getTitle();

  public abstract A withTitle(java.lang.String);

  public abstract java.lang.Boolean hasTitle();

  public abstract A withNewTitle(java.lang.String);

  public abstract A withNewTitle(java.lang.StringBuilder);

  public abstract A withNewTitle(java.lang.StringBuffer);

  public abstract java.lang.String getType();

  public abstract A withType(java.lang.String);

  public abstract java.lang.Boolean hasType();

  public abstract A withNewType(java.lang.String);

  public abstract A withNewType(java.lang.StringBuilder);

  public abstract A withNewType(java.lang.StringBuffer);

  public abstract java.lang.Boolean isUniqueItems();

  public abstract A withUniqueItems(java.lang.Boolean);

  public abstract java.lang.Boolean hasUniqueItems();

  public abstract A withNewUniqueItems(java.lang.String);

  public abstract A withNewUniqueItems(boolean);

  public abstract java.lang.Boolean isXKubernetesEmbeddedResource();

  public abstract A withXKubernetesEmbeddedResource(java.lang.Boolean);

  public abstract java.lang.Boolean hasXKubernetesEmbeddedResource();

  public abstract A withNewXKubernetesEmbeddedResource(java.lang.String);

  public abstract A withNewXKubernetesEmbeddedResource(boolean);

  public abstract java.lang.Boolean isXKubernetesIntOrString();

  public abstract A withXKubernetesIntOrString(java.lang.Boolean);

  public abstract java.lang.Boolean hasXKubernetesIntOrString();

  public abstract A withNewXKubernetesIntOrString(java.lang.String);

  public abstract A withNewXKubernetesIntOrString(boolean);

  public abstract A addToXKubernetesListMapKeys(int, java.lang.String);

  public abstract A setToXKubernetesListMapKeys(int, java.lang.String);

  public abstract A addToXKubernetesListMapKeys(java.lang.String...);

  public abstract A addAllToXKubernetesListMapKeys(java.util.Collection<java.lang.String>);

  public abstract A removeFromXKubernetesListMapKeys(java.lang.String...);

  public abstract A removeAllFromXKubernetesListMapKeys(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getXKubernetesListMapKeys();

  public abstract java.lang.String getXKubernetesListMapKey(int);

  public abstract java.lang.String getFirstXKubernetesListMapKey();

  public abstract java.lang.String getLastXKubernetesListMapKey();

  public abstract java.lang.String getMatchingXKubernetesListMapKey(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingXKubernetesListMapKey(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract A withXKubernetesListMapKeys(java.util.List<java.lang.String>);

  public abstract A withXKubernetesListMapKeys(java.lang.String...);

  public abstract java.lang.Boolean hasXKubernetesListMapKeys();

  public abstract A addNewXKubernetesListMapKey(java.lang.String);

  public abstract A addNewXKubernetesListMapKey(java.lang.StringBuilder);

  public abstract A addNewXKubernetesListMapKey(java.lang.StringBuffer);

  public abstract java.lang.String getXKubernetesListType();

  public abstract A withXKubernetesListType(java.lang.String);

  public abstract java.lang.Boolean hasXKubernetesListType();

  public abstract A withNewXKubernetesListType(java.lang.String);

  public abstract A withNewXKubernetesListType(java.lang.StringBuilder);

  public abstract A withNewXKubernetesListType(java.lang.StringBuffer);

  public abstract java.lang.String getXKubernetesMapType();

  public abstract A withXKubernetesMapType(java.lang.String);

  public abstract java.lang.Boolean hasXKubernetesMapType();

  public abstract A withNewXKubernetesMapType(java.lang.String);

  public abstract A withNewXKubernetesMapType(java.lang.StringBuilder);

  public abstract A withNewXKubernetesMapType(java.lang.StringBuffer);

  public abstract java.lang.Boolean isXKubernetesPreserveUnknownFields();

  public abstract A withXKubernetesPreserveUnknownFields(java.lang.Boolean);

  public abstract java.lang.Boolean hasXKubernetesPreserveUnknownFields();

  public abstract A withNewXKubernetesPreserveUnknownFields(java.lang.String);

  public abstract A withNewXKubernetesPreserveUnknownFields(boolean);
}
