Compiled from "ZipUtil.java"
public abstract class io.dekorate.deps.commons.compress.archivers.zip.ZipUtil {
  private static final byte[] DOS_TIME_MIN;

  public io.dekorate.deps.commons.compress.archivers.zip.ZipUtil();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method java/lang/Object."<init>":()V
       4: return

  public static io.dekorate.deps.commons.compress.archivers.zip.ZipLong toDosTime(java.util.Date);
    Code:
       0: new           #30                 // class io/dekorate/deps/commons/compress/archivers/zip/ZipLong
       3: dup
       4: aload_0
       5: invokevirtual #36                 // Method java/util/Date.getTime:()J
       8: invokestatic  #39                 // Method toDosTime:(J)[B
      11: invokespecial #42                 // Method io/dekorate/deps/commons/compress/archivers/zip/ZipLong."<init>":([B)V
      14: areturn

  public static byte[] toDosTime(long);
    Code:
       0: iconst_4
       1: newarray       byte
       3: astore_2
       4: lload_0
       5: aload_2
       6: iconst_0
       7: invokestatic  #47                 // Method toDosTime:(J[BI)V
      10: aload_2
      11: areturn

  public static void toDosTime(long, byte[], int);
    Code:
       0: invokestatic  #56                 // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
       3: lload_0
       4: aload_2
       5: iload_3
       6: invokestatic  #59                 // Method toDosTime:(Ljava/util/Calendar;J[BI)V
       9: return

  static void toDosTime(java.util.Calendar, long, byte[], int);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #66                 // Method java/util/Calendar.setTimeInMillis:(J)V
       5: aload_0
       6: iconst_1
       7: invokevirtual #70                 // Method java/util/Calendar.get:(I)I
      10: istore        5
      12: iload         5
      14: sipush        1980
      17: if_icmpge     35
      20: getstatic     #72                 // Field DOS_TIME_MIN:[B
      23: iconst_0
      24: aload_3
      25: iload         4
      27: getstatic     #72                 // Field DOS_TIME_MIN:[B
      30: arraylength
      31: invokestatic  #78                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      34: return
      35: aload_0
      36: iconst_2
      37: invokevirtual #70                 // Method java/util/Calendar.get:(I)I
      40: iconst_1
      41: iadd
      42: istore        6
      44: iload         5
      46: sipush        1980
      49: isub
      50: bipush        25
      52: ishl
      53: iload         6
      55: bipush        21
      57: ishl
      58: ior
      59: aload_0
      60: iconst_5
      61: invokevirtual #70                 // Method java/util/Calendar.get:(I)I
      64: bipush        16
      66: ishl
      67: ior
      68: aload_0
      69: bipush        11
      71: invokevirtual #70                 // Method java/util/Calendar.get:(I)I
      74: bipush        11
      76: ishl
      77: ior
      78: aload_0
      79: bipush        12
      81: invokevirtual #70                 // Method java/util/Calendar.get:(I)I
      84: iconst_5
      85: ishl
      86: ior
      87: aload_0
      88: bipush        13
      90: invokevirtual #70                 // Method java/util/Calendar.get:(I)I
      93: iconst_1
      94: ishr
      95: ior
      96: i2l
      97: lstore        7
      99: lload         7
     101: aload_3
     102: iload         4
     104: invokestatic  #81                 // Method io/dekorate/deps/commons/compress/archivers/zip/ZipLong.putLong:(J[BI)V
     107: return

  public static long adjustToLong(int);
    Code:
       0: iload_0
       1: ifge          11
       4: ldc2_w        #89                 // long 4294967296l
       7: iload_0
       8: i2l
       9: ladd
      10: lreturn
      11: iload_0
      12: i2l
      13: lreturn

  public static byte[] reverse(byte[]);
    Code:
       0: aload_0
       1: arraylength
       2: iconst_1
       3: isub
       4: istore_1
       5: iconst_0
       6: istore_2
       7: iload_2
       8: aload_0
       9: arraylength
      10: iconst_2
      11: idiv
      12: if_icmpge     39
      15: aload_0
      16: iload_2
      17: baload
      18: istore_3
      19: aload_0
      20: iload_2
      21: aload_0
      22: iload_1
      23: iload_2
      24: isub
      25: baload
      26: bastore
      27: aload_0
      28: iload_1
      29: iload_2
      30: isub
      31: iload_3
      32: bastore
      33: iinc          2, 1
      36: goto          7
      39: aload_0
      40: areturn

  static long bigToLong(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokevirtual #105                // Method java/math/BigInteger.bitLength:()I
       4: bipush        63
       6: if_icmpgt     14
       9: aload_0
      10: invokevirtual #108                // Method java/math/BigInteger.longValue:()J
      13: lreturn
      14: new           #110                // class java/lang/NumberFormatException
      17: dup
      18: new           #112                // class java/lang/StringBuilder
      21: dup
      22: invokespecial #113                // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #115                // String The BigInteger cannot fit inside a 64 bit java long: [
      27: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_0
      31: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      34: ldc           #124                // String ]
      36: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #128                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokespecial #131                // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
      45: athrow

  static java.math.BigInteger longToBig(long);
    Code:
       0: lload_0
       1: ldc2_w        #136                // long -2147483648l
       4: lcmp
       5: ifge          40
       8: new           #139                // class java/lang/IllegalArgumentException
      11: dup
      12: new           #112                // class java/lang/StringBuilder
      15: dup
      16: invokespecial #113                // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #141                // String Negative longs < -2^31 not permitted: [
      21: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: lload_0
      25: invokevirtual #144                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      28: ldc           #124                // String ]
      30: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #128                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #145                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: lload_0
      41: lconst_0
      42: lcmp
      43: ifge          60
      46: lload_0
      47: ldc2_w        #136                // long -2147483648l
      50: lcmp
      51: iflt          60
      54: lload_0
      55: l2i
      56: invokestatic  #147                // Method adjustToLong:(I)J
      59: lstore_0
      60: lload_0
      61: invokestatic  #150                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      64: areturn

  public static int signedByteToUnsignedInt(byte);
    Code:
       0: iload_0
       1: iflt          6
       4: iload_0
       5: ireturn
       6: sipush        256
       9: iload_0
      10: iadd
      11: ireturn

  public static byte unsignedIntToSignedByte(int);
    Code:
       0: iload_0
       1: sipush        255
       4: if_icmpgt     11
       7: iload_0
       8: ifge          43
      11: new           #139                // class java/lang/IllegalArgumentException
      14: dup
      15: new           #112                // class java/lang/StringBuilder
      18: dup
      19: invokespecial #113                // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #158                // String Can only convert non-negative integers between [0,255] to byte: [
      24: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: iload_0
      28: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: ldc           #124                // String ]
      33: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #128                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokespecial #145                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: iload_0
      44: sipush        128
      47: if_icmpge     53
      50: iload_0
      51: i2b
      52: ireturn
      53: iload_0
      54: sipush        256
      57: isub
      58: i2b
      59: ireturn

  public static java.util.Date fromDosTime(io.dekorate.deps.commons.compress.archivers.zip.ZipLong);
    Code:
       0: aload_0
       1: invokevirtual #166                // Method io/dekorate/deps/commons/compress/archivers/zip/ZipLong.getValue:()J
       4: lstore_1
       5: new           #32                 // class java/util/Date
       8: dup
       9: lload_1
      10: invokestatic  #170                // Method dosToJavaTime:(J)J
      13: invokespecial #172                // Method java/util/Date."<init>":(J)V
      16: areturn

  public static long dosToJavaTime(long);
    Code:
       0: invokestatic  #56                 // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
       3: astore_2
       4: aload_2
       5: iconst_1
       6: lload_0
       7: bipush        25
       9: lshr
      10: ldc2_w        #176                // long 127l
      13: land
      14: l2i
      15: sipush        1980
      18: iadd
      19: invokevirtual #181                // Method java/util/Calendar.set:(II)V
      22: aload_2
      23: iconst_2
      24: lload_0
      25: bipush        21
      27: lshr
      28: ldc2_w        #182                // long 15l
      31: land
      32: l2i
      33: iconst_1
      34: isub
      35: invokevirtual #181                // Method java/util/Calendar.set:(II)V
      38: aload_2
      39: iconst_5
      40: lload_0
      41: bipush        16
      43: lshr
      44: l2i
      45: bipush        31
      47: iand
      48: invokevirtual #181                // Method java/util/Calendar.set:(II)V
      51: aload_2
      52: bipush        11
      54: lload_0
      55: bipush        11
      57: lshr
      58: l2i
      59: bipush        31
      61: iand
      62: invokevirtual #181                // Method java/util/Calendar.set:(II)V
      65: aload_2
      66: bipush        12
      68: lload_0
      69: iconst_5
      70: lshr
      71: l2i
      72: bipush        63
      74: iand
      75: invokevirtual #181                // Method java/util/Calendar.set:(II)V
      78: aload_2
      79: bipush        13
      81: lload_0
      82: iconst_1
      83: lshl
      84: l2i
      85: bipush        62
      87: iand
      88: invokevirtual #181                // Method java/util/Calendar.set:(II)V
      91: aload_2
      92: bipush        14
      94: iconst_0
      95: invokevirtual #181                // Method java/util/Calendar.set:(II)V
      98: aload_2
      99: invokevirtual #186                // Method java/util/Calendar.getTime:()Ljava/util/Date;
     102: invokevirtual #36                 // Method java/util/Date.getTime:()J
     105: lreturn

  static void setNameAndCommentFromExtraFields(io.dekorate.deps.commons.compress.archivers.zip.ZipArchiveEntry, byte[], byte[]);
    Code:
       0: aload_0
       1: getstatic     #195                // Field io/dekorate/deps/commons/compress/archivers/zip/UnicodePathExtraField.UPATH_ID:Lio/dekorate/deps/commons/compress/archivers/zip/ZipShort;
       4: invokevirtual #199                // Method io/dekorate/deps/commons/compress/archivers/zip/ZipArchiveEntry.getExtraField:(Lio/dekorate/deps/commons/compress/archivers/zip/ZipShort;)Lio/dekorate/deps/commons/compress/archivers/zip/ZipExtraField;
       7: checkcast     #191                // class io/dekorate/deps/commons/compress/archivers/zip/UnicodePathExtraField
      10: astore_3
      11: aload_3
      12: aload_1
      13: invokestatic  #203                // Method getUnicodeStringIfOriginalMatches:(Lio/dekorate/deps/commons/compress/archivers/zip/AbstractUnicodeExtraField;[B)Ljava/lang/String;
      16: astore        4
      18: aload         4
      20: ifnull        36
      23: aload_0
      24: aload         4
      26: invokevirtual #206                // Method io/dekorate/deps/commons/compress/archivers/zip/ZipArchiveEntry.setName:(Ljava/lang/String;)V
      29: aload_0
      30: getstatic     #210                // Field io/dekorate/deps/commons/compress/archivers/zip/ZipArchiveEntry$NameSource.UNICODE_EXTRA_FIELD:Lio/dekorate/deps/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;
      33: invokevirtual #214                // Method io/dekorate/deps/commons/compress/archivers/zip/ZipArchiveEntry.setNameSource:(Lio/dekorate/deps/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;)V
      36: aload_2
      37: ifnull        83
      40: aload_2
      41: arraylength
      42: ifle          83
      45: aload_0
      46: getstatic     #221                // Field io/dekorate/deps/commons/compress/archivers/zip/UnicodeCommentExtraField.UCOM_ID:Lio/dekorate/deps/commons/compress/archivers/zip/ZipShort;
      49: invokevirtual #199                // Method io/dekorate/deps/commons/compress/archivers/zip/ZipArchiveEntry.getExtraField:(Lio/dekorate/deps/commons/compress/archivers/zip/ZipShort;)Lio/dekorate/deps/commons/compress/archivers/zip/ZipExtraField;
      52: checkcast     #218                // class io/dekorate/deps/commons/compress/archivers/zip/UnicodeCommentExtraField
      55: astore        5
      57: aload         5
      59: aload_2
      60: invokestatic  #203                // Method getUnicodeStringIfOriginalMatches:(Lio/dekorate/deps/commons/compress/archivers/zip/AbstractUnicodeExtraField;[B)Ljava/lang/String;
      63: astore        6
      65: aload         6
      67: ifnull        83
      70: aload_0
      71: aload         6
      73: invokevirtual #224                // Method io/dekorate/deps/commons/compress/archivers/zip/ZipArchiveEntry.setComment:(Ljava/lang/String;)V
      76: aload_0
      77: getstatic     #227                // Field io/dekorate/deps/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource.UNICODE_EXTRA_FIELD:Lio/dekorate/deps/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;
      80: invokevirtual #231                // Method io/dekorate/deps/commons/compress/archivers/zip/ZipArchiveEntry.setCommentSource:(Lio/dekorate/deps/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;)V
      83: return

  private static java.lang.String getUnicodeStringIfOriginalMatches(io.dekorate.deps.commons.compress.archivers.zip.AbstractUnicodeExtraField, byte[]);
    Code:
       0: aload_0
       1: ifnull        48
       4: new           #246                // class java/util/zip/CRC32
       7: dup
       8: invokespecial #247                // Method java/util/zip/CRC32."<init>":()V
      11: astore_2
      12: aload_2
      13: aload_1
      14: invokevirtual #250                // Method java/util/zip/CRC32.update:([B)V
      17: aload_2
      18: invokevirtual #251                // Method java/util/zip/CRC32.getValue:()J
      21: lstore_3
      22: lload_3
      23: aload_0
      24: invokevirtual #256                // Method io/dekorate/deps/commons/compress/archivers/zip/AbstractUnicodeExtraField.getNameCRC32:()J
      27: lcmp
      28: ifne          48
      31: getstatic     #262                // Field io/dekorate/deps/commons/compress/archivers/zip/ZipEncodingHelper.UTF8_ZIP_ENCODING:Lio/dekorate/deps/commons/compress/archivers/zip/ZipEncoding;
      34: aload_0
      35: invokevirtual #266                // Method io/dekorate/deps/commons/compress/archivers/zip/AbstractUnicodeExtraField.getUnicodeName:()[B
      38: invokeinterface #272,  2          // InterfaceMethod io/dekorate/deps/commons/compress/archivers/zip/ZipEncoding.decode:([B)Ljava/lang/String;
      43: areturn
      44: astore        5
      46: aconst_null
      47: areturn
      48: aconst_null
      49: areturn
    Exception table:
       from    to  target type
          31    43    44   Class java/io/IOException

  static byte[] copy(byte[]);
    Code:
       0: aload_0
       1: ifnull        20
       4: aload_0
       5: arraylength
       6: newarray       byte
       8: astore_1
       9: aload_0
      10: iconst_0
      11: aload_1
      12: iconst_0
      13: aload_1
      14: arraylength
      15: invokestatic  #78                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      18: aload_1
      19: areturn
      20: aconst_null
      21: areturn

  static void copy(byte[], byte[], int);
    Code:
       0: aload_0
       1: ifnull        13
       4: aload_0
       5: iconst_0
       6: aload_1
       7: iload_2
       8: aload_0
       9: arraylength
      10: invokestatic  #78                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      13: return

  static boolean canHandleEntryData(io.dekorate.deps.commons.compress.archivers.zip.ZipArchiveEntry);
    Code:
       0: aload_0
       1: invokestatic  #290                // Method supportsEncryptionOf:(Lio/dekorate/deps/commons/compress/archivers/zip/ZipArchiveEntry;)Z
       4: ifeq          18
       7: aload_0
       8: invokestatic  #293                // Method supportsMethodOf:(Lio/dekorate/deps/commons/compress/archivers/zip/ZipArchiveEntry;)Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  private static boolean supportsEncryptionOf(io.dekorate.deps.commons.compress.archivers.zip.ZipArchiveEntry);
    Code:
       0: aload_0
       1: invokevirtual #298                // Method io/dekorate/deps/commons/compress/archivers/zip/ZipArchiveEntry.getGeneralPurposeBit:()Lio/dekorate/deps/commons/compress/archivers/zip/GeneralPurposeBit;
       4: invokevirtual #304                // Method io/dekorate/deps/commons/compress/archivers/zip/GeneralPurposeBit.usesEncryption:()Z
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  private static boolean supportsMethodOf(io.dekorate.deps.commons.compress.archivers.zip.ZipArchiveEntry);
    Code:
       0: aload_0
       1: invokevirtual #307                // Method io/dekorate/deps/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
       4: ifeq          68
       7: aload_0
       8: invokevirtual #307                // Method io/dekorate/deps/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
      11: getstatic     #313                // Field io/dekorate/deps/commons/compress/archivers/zip/ZipMethod.UNSHRINKING:Lio/dekorate/deps/commons/compress/archivers/zip/ZipMethod;
      14: invokevirtual #316                // Method io/dekorate/deps/commons/compress/archivers/zip/ZipMethod.getCode:()I
      17: if_icmpeq     68
      20: aload_0
      21: invokevirtual #307                // Method io/dekorate/deps/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
      24: getstatic     #319                // Field io/dekorate/deps/commons/compress/archivers/zip/ZipMethod.IMPLODING:Lio/dekorate/deps/commons/compress/archivers/zip/ZipMethod;
      27: invokevirtual #316                // Method io/dekorate/deps/commons/compress/archivers/zip/ZipMethod.getCode:()I
      30: if_icmpeq     68
      33: aload_0
      34: invokevirtual #307                // Method io/dekorate/deps/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
      37: bipush        8
      39: if_icmpeq     68
      42: aload_0
      43: invokevirtual #307                // Method io/dekorate/deps/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
      46: getstatic     #322                // Field io/dekorate/deps/commons/compress/archivers/zip/ZipMethod.ENHANCED_DEFLATED:Lio/dekorate/deps/commons/compress/archivers/zip/ZipMethod;
      49: invokevirtual #316                // Method io/dekorate/deps/commons/compress/archivers/zip/ZipMethod.getCode:()I
      52: if_icmpeq     68
      55: aload_0
      56: invokevirtual #307                // Method io/dekorate/deps/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
      59: getstatic     #325                // Field io/dekorate/deps/commons/compress/archivers/zip/ZipMethod.BZIP2:Lio/dekorate/deps/commons/compress/archivers/zip/ZipMethod;
      62: invokevirtual #316                // Method io/dekorate/deps/commons/compress/archivers/zip/ZipMethod.getCode:()I
      65: if_icmpne     72
      68: iconst_1
      69: goto          73
      72: iconst_0
      73: ireturn

  static void checkRequestedFeatures(io.dekorate.deps.commons.compress.archivers.zip.ZipArchiveEntry) throws io.dekorate.deps.commons.compress.archivers.zip.UnsupportedZipFeatureException;
    Code:
       0: aload_0
       1: invokestatic  #290                // Method supportsEncryptionOf:(Lio/dekorate/deps/commons/compress/archivers/zip/ZipArchiveEntry;)Z
       4: ifne          19
       7: new           #17                 // class io/dekorate/deps/commons/compress/archivers/zip/UnsupportedZipFeatureException
      10: dup
      11: getstatic     #331                // Field io/dekorate/deps/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature.ENCRYPTION:Lio/dekorate/deps/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;
      14: aload_0
      15: invokespecial #334                // Method io/dekorate/deps/commons/compress/archivers/zip/UnsupportedZipFeatureException."<init>":(Lio/dekorate/deps/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;Lio/dekorate/deps/commons/compress/archivers/zip/ZipArchiveEntry;)V
      18: athrow
      19: aload_0
      20: invokestatic  #293                // Method supportsMethodOf:(Lio/dekorate/deps/commons/compress/archivers/zip/ZipArchiveEntry;)Z
      23: ifne          60
      26: aload_0
      27: invokevirtual #307                // Method io/dekorate/deps/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I
      30: invokestatic  #338                // Method io/dekorate/deps/commons/compress/archivers/zip/ZipMethod.getMethodByCode:(I)Lio/dekorate/deps/commons/compress/archivers/zip/ZipMethod;
      33: astore_1
      34: aload_1
      35: ifnonnull     50
      38: new           #17                 // class io/dekorate/deps/commons/compress/archivers/zip/UnsupportedZipFeatureException
      41: dup
      42: getstatic     #341                // Field io/dekorate/deps/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature.METHOD:Lio/dekorate/deps/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;
      45: aload_0
      46: invokespecial #334                // Method io/dekorate/deps/commons/compress/archivers/zip/UnsupportedZipFeatureException."<init>":(Lio/dekorate/deps/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;Lio/dekorate/deps/commons/compress/archivers/zip/ZipArchiveEntry;)V
      49: athrow
      50: new           #17                 // class io/dekorate/deps/commons/compress/archivers/zip/UnsupportedZipFeatureException
      53: dup
      54: aload_1
      55: aload_0
      56: invokespecial #344                // Method io/dekorate/deps/commons/compress/archivers/zip/UnsupportedZipFeatureException."<init>":(Lio/dekorate/deps/commons/compress/archivers/zip/ZipMethod;Lio/dekorate/deps/commons/compress/archivers/zip/ZipArchiveEntry;)V
      59: athrow
      60: return

  static {};
    Code:
       0: ldc2_w        #347                // long 8448l
       3: invokestatic  #351                // Method io/dekorate/deps/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B
       6: putstatic     #72                 // Field DOS_TIME_MIN:[B
       9: return
}
