Compiled from "GroupRestrictionFluent.java"
public interface io.dekorate.deps.openshift.api.model.GroupRestrictionFluent<A extends io.dekorate.deps.openshift.api.model.GroupRestrictionFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract A addToGroups(int, java.lang.String);

  public abstract A setToGroups(int, java.lang.String);

  public abstract A addToGroups(java.lang.String...);

  public abstract A addAllToGroups(java.util.Collection<java.lang.String>);

  public abstract A removeFromGroups(java.lang.String...);

  public abstract A removeAllFromGroups(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getGroups();

  public abstract java.lang.String getGroup(int);

  public abstract java.lang.String getFirstGroup();

  public abstract java.lang.String getLastGroup();

  public abstract java.lang.String getMatchingGroup(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingGroup(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract A withGroups(java.util.List<java.lang.String>);

  public abstract A withGroups(java.lang.String...);

  public abstract java.lang.Boolean hasGroups();

  public abstract A addNewGroup(java.lang.String);

  public abstract A addNewGroup(java.lang.StringBuilder);

  public abstract A addNewGroup(java.lang.StringBuffer);

  public abstract A addToLabels(int, io.dekorate.deps.kubernetes.api.model.LabelSelector);

  public abstract A setToLabels(int, io.dekorate.deps.kubernetes.api.model.LabelSelector);

  public abstract A addToLabels(io.dekorate.deps.kubernetes.api.model.LabelSelector...);

  public abstract A addAllToLabels(java.util.Collection<io.dekorate.deps.kubernetes.api.model.LabelSelector>);

  public abstract A removeFromLabels(io.dekorate.deps.kubernetes.api.model.LabelSelector...);

  public abstract A removeAllFromLabels(java.util.Collection<io.dekorate.deps.kubernetes.api.model.LabelSelector>);

  public abstract A removeMatchingFromLabels(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.LabelSelectorBuilder>);

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.LabelSelector> getLabels();

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.LabelSelector> buildLabels();

  public abstract io.dekorate.deps.kubernetes.api.model.LabelSelector buildLabel(int);

  public abstract io.dekorate.deps.kubernetes.api.model.LabelSelector buildFirstLabel();

  public abstract io.dekorate.deps.kubernetes.api.model.LabelSelector buildLastLabel();

  public abstract io.dekorate.deps.kubernetes.api.model.LabelSelector buildMatchingLabel(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.LabelSelectorBuilder>);

  public abstract java.lang.Boolean hasMatchingLabel(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.LabelSelectorBuilder>);

  public abstract A withLabels(java.util.List<io.dekorate.deps.kubernetes.api.model.LabelSelector>);

  public abstract A withLabels(io.dekorate.deps.kubernetes.api.model.LabelSelector...);

  public abstract java.lang.Boolean hasLabels();

  public abstract io.dekorate.deps.openshift.api.model.GroupRestrictionFluent$LabelsNested<A> addNewLabel();

  public abstract io.dekorate.deps.openshift.api.model.GroupRestrictionFluent$LabelsNested<A> addNewLabelLike(io.dekorate.deps.kubernetes.api.model.LabelSelector);

  public abstract io.dekorate.deps.openshift.api.model.GroupRestrictionFluent$LabelsNested<A> setNewLabelLike(int, io.dekorate.deps.kubernetes.api.model.LabelSelector);

  public abstract io.dekorate.deps.openshift.api.model.GroupRestrictionFluent$LabelsNested<A> editLabel(int);

  public abstract io.dekorate.deps.openshift.api.model.GroupRestrictionFluent$LabelsNested<A> editFirstLabel();

  public abstract io.dekorate.deps.openshift.api.model.GroupRestrictionFluent$LabelsNested<A> editLastLabel();

  public abstract io.dekorate.deps.openshift.api.model.GroupRestrictionFluent$LabelsNested<A> editMatchingLabel(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.LabelSelectorBuilder>);
}
