Compiled from "ApiServerSourceSpecFluent.java"
public interface io.dekorate.deps.knative.legacysources.v1alpha1.ApiServerSourceSpecFluent<A extends io.dekorate.deps.knative.legacysources.v1alpha1.ApiServerSourceSpecFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getMode();

  public abstract A withMode(java.lang.String);

  public abstract java.lang.Boolean hasMode();

  public abstract A withNewMode(java.lang.String);

  public abstract A withNewMode(java.lang.StringBuilder);

  public abstract A withNewMode(java.lang.StringBuffer);

  public abstract A addToResources(int, io.dekorate.deps.knative.legacysources.v1alpha1.ApiServerResource);

  public abstract A setToResources(int, io.dekorate.deps.knative.legacysources.v1alpha1.ApiServerResource);

  public abstract A addToResources(io.dekorate.deps.knative.legacysources.v1alpha1.ApiServerResource...);

  public abstract A addAllToResources(java.util.Collection<io.dekorate.deps.knative.legacysources.v1alpha1.ApiServerResource>);

  public abstract A removeFromResources(io.dekorate.deps.knative.legacysources.v1alpha1.ApiServerResource...);

  public abstract A removeAllFromResources(java.util.Collection<io.dekorate.deps.knative.legacysources.v1alpha1.ApiServerResource>);

  public abstract A removeMatchingFromResources(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.knative.legacysources.v1alpha1.ApiServerResourceBuilder>);

  public abstract java.util.List<io.dekorate.deps.knative.legacysources.v1alpha1.ApiServerResource> getResources();

  public abstract java.util.List<io.dekorate.deps.knative.legacysources.v1alpha1.ApiServerResource> buildResources();

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.ApiServerResource buildResource(int);

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.ApiServerResource buildFirstResource();

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.ApiServerResource buildLastResource();

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.ApiServerResource buildMatchingResource(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.knative.legacysources.v1alpha1.ApiServerResourceBuilder>);

  public abstract java.lang.Boolean hasMatchingResource(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.knative.legacysources.v1alpha1.ApiServerResourceBuilder>);

  public abstract A withResources(java.util.List<io.dekorate.deps.knative.legacysources.v1alpha1.ApiServerResource>);

  public abstract A withResources(io.dekorate.deps.knative.legacysources.v1alpha1.ApiServerResource...);

  public abstract java.lang.Boolean hasResources();

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.ApiServerSourceSpecFluent$ResourcesNested<A> addNewResource();

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.ApiServerSourceSpecFluent$ResourcesNested<A> addNewResourceLike(io.dekorate.deps.knative.legacysources.v1alpha1.ApiServerResource);

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.ApiServerSourceSpecFluent$ResourcesNested<A> setNewResourceLike(int, io.dekorate.deps.knative.legacysources.v1alpha1.ApiServerResource);

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.ApiServerSourceSpecFluent$ResourcesNested<A> editResource(int);

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.ApiServerSourceSpecFluent$ResourcesNested<A> editFirstResource();

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.ApiServerSourceSpecFluent$ResourcesNested<A> editLastResource();

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.ApiServerSourceSpecFluent$ResourcesNested<A> editMatchingResource(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.knative.legacysources.v1alpha1.ApiServerResourceBuilder>);

  public abstract java.lang.String getServiceAccountName();

  public abstract A withServiceAccountName(java.lang.String);

  public abstract java.lang.Boolean hasServiceAccountName();

  public abstract A withNewServiceAccountName(java.lang.String);

  public abstract A withNewServiceAccountName(java.lang.StringBuilder);

  public abstract A withNewServiceAccountName(java.lang.StringBuffer);

  public abstract io.dekorate.deps.knative.duck.v1beta1.Destination getSink();

  public abstract io.dekorate.deps.knative.duck.v1beta1.Destination buildSink();

  public abstract A withSink(io.dekorate.deps.knative.duck.v1beta1.Destination);

  public abstract java.lang.Boolean hasSink();

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.ApiServerSourceSpecFluent$V1beta1SinkNested<A> withNewV1beta1Sink();

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.ApiServerSourceSpecFluent$V1beta1SinkNested<A> withNewSinkLike(io.dekorate.deps.knative.duck.v1beta1.Destination);

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.ApiServerSourceSpecFluent$V1beta1SinkNested<A> editV1beta1Sink();

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.ApiServerSourceSpecFluent$V1beta1SinkNested<A> editOrNewSink();

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.ApiServerSourceSpecFluent$V1beta1SinkNested<A> editOrNewSinkLike(io.dekorate.deps.knative.duck.v1beta1.Destination);
}
