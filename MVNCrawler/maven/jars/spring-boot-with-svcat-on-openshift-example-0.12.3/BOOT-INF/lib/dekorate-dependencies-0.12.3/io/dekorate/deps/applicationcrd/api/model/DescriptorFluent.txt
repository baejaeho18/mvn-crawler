Compiled from "DescriptorFluent.java"
public interface io.dekorate.deps.applicationcrd.api.model.DescriptorFluent<A extends io.dekorate.deps.applicationcrd.api.model.DescriptorFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getDescription();

  public abstract A withDescription(java.lang.String);

  public abstract java.lang.Boolean hasDescription();

  public abstract A withNewDescription(java.lang.String);

  public abstract A withNewDescription(java.lang.StringBuilder);

  public abstract A withNewDescription(java.lang.StringBuffer);

  public abstract A addToIcons(int, io.dekorate.deps.applicationcrd.api.model.ImageSpec);

  public abstract A setToIcons(int, io.dekorate.deps.applicationcrd.api.model.ImageSpec);

  public abstract A addToIcons(io.dekorate.deps.applicationcrd.api.model.ImageSpec...);

  public abstract A addAllToIcons(java.util.Collection<io.dekorate.deps.applicationcrd.api.model.ImageSpec>);

  public abstract A removeFromIcons(io.dekorate.deps.applicationcrd.api.model.ImageSpec...);

  public abstract A removeAllFromIcons(java.util.Collection<io.dekorate.deps.applicationcrd.api.model.ImageSpec>);

  public abstract java.util.List<io.dekorate.deps.applicationcrd.api.model.ImageSpec> getIcons();

  public abstract java.util.List<io.dekorate.deps.applicationcrd.api.model.ImageSpec> buildIcons();

  public abstract io.dekorate.deps.applicationcrd.api.model.ImageSpec buildIcon(int);

  public abstract io.dekorate.deps.applicationcrd.api.model.ImageSpec buildFirstIcon();

  public abstract io.dekorate.deps.applicationcrd.api.model.ImageSpec buildLastIcon();

  public abstract io.dekorate.deps.applicationcrd.api.model.ImageSpec buildMatchingIcon(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.applicationcrd.api.model.ImageSpecBuilder>);

  public abstract java.lang.Boolean hasMatchingIcon(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.applicationcrd.api.model.ImageSpecBuilder>);

  public abstract A withIcons(java.util.List<io.dekorate.deps.applicationcrd.api.model.ImageSpec>);

  public abstract A withIcons(io.dekorate.deps.applicationcrd.api.model.ImageSpec...);

  public abstract java.lang.Boolean hasIcons();

  public abstract A addNewIcon(java.lang.String, java.lang.String, java.lang.String);

  public abstract io.dekorate.deps.applicationcrd.api.model.DescriptorFluent$IconsNested<A> addNewIcon();

  public abstract io.dekorate.deps.applicationcrd.api.model.DescriptorFluent$IconsNested<A> addNewIconLike(io.dekorate.deps.applicationcrd.api.model.ImageSpec);

  public abstract io.dekorate.deps.applicationcrd.api.model.DescriptorFluent$IconsNested<A> setNewIconLike(int, io.dekorate.deps.applicationcrd.api.model.ImageSpec);

  public abstract io.dekorate.deps.applicationcrd.api.model.DescriptorFluent$IconsNested<A> editIcon(int);

  public abstract io.dekorate.deps.applicationcrd.api.model.DescriptorFluent$IconsNested<A> editFirstIcon();

  public abstract io.dekorate.deps.applicationcrd.api.model.DescriptorFluent$IconsNested<A> editLastIcon();

  public abstract io.dekorate.deps.applicationcrd.api.model.DescriptorFluent$IconsNested<A> editMatchingIcon(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.applicationcrd.api.model.ImageSpecBuilder>);

  public abstract A addToKeywords(int, java.lang.String);

  public abstract A setToKeywords(int, java.lang.String);

  public abstract A addToKeywords(java.lang.String...);

  public abstract A addAllToKeywords(java.util.Collection<java.lang.String>);

  public abstract A removeFromKeywords(java.lang.String...);

  public abstract A removeAllFromKeywords(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getKeywords();

  public abstract java.lang.String getKeyword(int);

  public abstract java.lang.String getFirstKeyword();

  public abstract java.lang.String getLastKeyword();

  public abstract java.lang.String getMatchingKeyword(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingKeyword(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract A withKeywords(java.util.List<java.lang.String>);

  public abstract A withKeywords(java.lang.String...);

  public abstract java.lang.Boolean hasKeywords();

  public abstract A addNewKeyword(java.lang.String);

  public abstract A addNewKeyword(java.lang.StringBuilder);

  public abstract A addNewKeyword(java.lang.StringBuffer);

  public abstract A addToLinks(int, io.dekorate.deps.applicationcrd.api.model.Link);

  public abstract A setToLinks(int, io.dekorate.deps.applicationcrd.api.model.Link);

  public abstract A addToLinks(io.dekorate.deps.applicationcrd.api.model.Link...);

  public abstract A addAllToLinks(java.util.Collection<io.dekorate.deps.applicationcrd.api.model.Link>);

  public abstract A removeFromLinks(io.dekorate.deps.applicationcrd.api.model.Link...);

  public abstract A removeAllFromLinks(java.util.Collection<io.dekorate.deps.applicationcrd.api.model.Link>);

  public abstract java.util.List<io.dekorate.deps.applicationcrd.api.model.Link> getLinks();

  public abstract java.util.List<io.dekorate.deps.applicationcrd.api.model.Link> buildLinks();

  public abstract io.dekorate.deps.applicationcrd.api.model.Link buildLink(int);

  public abstract io.dekorate.deps.applicationcrd.api.model.Link buildFirstLink();

  public abstract io.dekorate.deps.applicationcrd.api.model.Link buildLastLink();

  public abstract io.dekorate.deps.applicationcrd.api.model.Link buildMatchingLink(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.applicationcrd.api.model.LinkBuilder>);

  public abstract java.lang.Boolean hasMatchingLink(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.applicationcrd.api.model.LinkBuilder>);

  public abstract A withLinks(java.util.List<io.dekorate.deps.applicationcrd.api.model.Link>);

  public abstract A withLinks(io.dekorate.deps.applicationcrd.api.model.Link...);

  public abstract java.lang.Boolean hasLinks();

  public abstract A addNewLink(java.lang.String, java.lang.String);

  public abstract io.dekorate.deps.applicationcrd.api.model.DescriptorFluent$LinksNested<A> addNewLink();

  public abstract io.dekorate.deps.applicationcrd.api.model.DescriptorFluent$LinksNested<A> addNewLinkLike(io.dekorate.deps.applicationcrd.api.model.Link);

  public abstract io.dekorate.deps.applicationcrd.api.model.DescriptorFluent$LinksNested<A> setNewLinkLike(int, io.dekorate.deps.applicationcrd.api.model.Link);

  public abstract io.dekorate.deps.applicationcrd.api.model.DescriptorFluent$LinksNested<A> editLink(int);

  public abstract io.dekorate.deps.applicationcrd.api.model.DescriptorFluent$LinksNested<A> editFirstLink();

  public abstract io.dekorate.deps.applicationcrd.api.model.DescriptorFluent$LinksNested<A> editLastLink();

  public abstract io.dekorate.deps.applicationcrd.api.model.DescriptorFluent$LinksNested<A> editMatchingLink(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.applicationcrd.api.model.LinkBuilder>);

  public abstract A addToMaintainers(int, io.dekorate.deps.applicationcrd.api.model.ContactData);

  public abstract A setToMaintainers(int, io.dekorate.deps.applicationcrd.api.model.ContactData);

  public abstract A addToMaintainers(io.dekorate.deps.applicationcrd.api.model.ContactData...);

  public abstract A addAllToMaintainers(java.util.Collection<io.dekorate.deps.applicationcrd.api.model.ContactData>);

  public abstract A removeFromMaintainers(io.dekorate.deps.applicationcrd.api.model.ContactData...);

  public abstract A removeAllFromMaintainers(java.util.Collection<io.dekorate.deps.applicationcrd.api.model.ContactData>);

  public abstract java.util.List<io.dekorate.deps.applicationcrd.api.model.ContactData> getMaintainers();

  public abstract java.util.List<io.dekorate.deps.applicationcrd.api.model.ContactData> buildMaintainers();

  public abstract io.dekorate.deps.applicationcrd.api.model.ContactData buildMaintainer(int);

  public abstract io.dekorate.deps.applicationcrd.api.model.ContactData buildFirstMaintainer();

  public abstract io.dekorate.deps.applicationcrd.api.model.ContactData buildLastMaintainer();

  public abstract io.dekorate.deps.applicationcrd.api.model.ContactData buildMatchingMaintainer(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.applicationcrd.api.model.ContactDataBuilder>);

  public abstract java.lang.Boolean hasMatchingMaintainer(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.applicationcrd.api.model.ContactDataBuilder>);

  public abstract A withMaintainers(java.util.List<io.dekorate.deps.applicationcrd.api.model.ContactData>);

  public abstract A withMaintainers(io.dekorate.deps.applicationcrd.api.model.ContactData...);

  public abstract java.lang.Boolean hasMaintainers();

  public abstract A addNewMaintainer(java.lang.String, java.lang.String, java.lang.String);

  public abstract io.dekorate.deps.applicationcrd.api.model.DescriptorFluent$MaintainersNested<A> addNewMaintainer();

  public abstract io.dekorate.deps.applicationcrd.api.model.DescriptorFluent$MaintainersNested<A> addNewMaintainerLike(io.dekorate.deps.applicationcrd.api.model.ContactData);

  public abstract io.dekorate.deps.applicationcrd.api.model.DescriptorFluent$MaintainersNested<A> setNewMaintainerLike(int, io.dekorate.deps.applicationcrd.api.model.ContactData);

  public abstract io.dekorate.deps.applicationcrd.api.model.DescriptorFluent$MaintainersNested<A> editMaintainer(int);

  public abstract io.dekorate.deps.applicationcrd.api.model.DescriptorFluent$MaintainersNested<A> editFirstMaintainer();

  public abstract io.dekorate.deps.applicationcrd.api.model.DescriptorFluent$MaintainersNested<A> editLastMaintainer();

  public abstract io.dekorate.deps.applicationcrd.api.model.DescriptorFluent$MaintainersNested<A> editMatchingMaintainer(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.applicationcrd.api.model.ContactDataBuilder>);

  public abstract java.lang.String getNotes();

  public abstract A withNotes(java.lang.String);

  public abstract java.lang.Boolean hasNotes();

  public abstract A withNewNotes(java.lang.String);

  public abstract A withNewNotes(java.lang.StringBuilder);

  public abstract A withNewNotes(java.lang.StringBuffer);

  public abstract A addToOwners(int, io.dekorate.deps.applicationcrd.api.model.ContactData);

  public abstract A setToOwners(int, io.dekorate.deps.applicationcrd.api.model.ContactData);

  public abstract A addToOwners(io.dekorate.deps.applicationcrd.api.model.ContactData...);

  public abstract A addAllToOwners(java.util.Collection<io.dekorate.deps.applicationcrd.api.model.ContactData>);

  public abstract A removeFromOwners(io.dekorate.deps.applicationcrd.api.model.ContactData...);

  public abstract A removeAllFromOwners(java.util.Collection<io.dekorate.deps.applicationcrd.api.model.ContactData>);

  public abstract java.util.List<io.dekorate.deps.applicationcrd.api.model.ContactData> getOwners();

  public abstract java.util.List<io.dekorate.deps.applicationcrd.api.model.ContactData> buildOwners();

  public abstract io.dekorate.deps.applicationcrd.api.model.ContactData buildOwner(int);

  public abstract io.dekorate.deps.applicationcrd.api.model.ContactData buildFirstOwner();

  public abstract io.dekorate.deps.applicationcrd.api.model.ContactData buildLastOwner();

  public abstract io.dekorate.deps.applicationcrd.api.model.ContactData buildMatchingOwner(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.applicationcrd.api.model.ContactDataBuilder>);

  public abstract java.lang.Boolean hasMatchingOwner(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.applicationcrd.api.model.ContactDataBuilder>);

  public abstract A withOwners(java.util.List<io.dekorate.deps.applicationcrd.api.model.ContactData>);

  public abstract A withOwners(io.dekorate.deps.applicationcrd.api.model.ContactData...);

  public abstract java.lang.Boolean hasOwners();

  public abstract A addNewOwner(java.lang.String, java.lang.String, java.lang.String);

  public abstract io.dekorate.deps.applicationcrd.api.model.DescriptorFluent$OwnersNested<A> addNewOwner();

  public abstract io.dekorate.deps.applicationcrd.api.model.DescriptorFluent$OwnersNested<A> addNewOwnerLike(io.dekorate.deps.applicationcrd.api.model.ContactData);

  public abstract io.dekorate.deps.applicationcrd.api.model.DescriptorFluent$OwnersNested<A> setNewOwnerLike(int, io.dekorate.deps.applicationcrd.api.model.ContactData);

  public abstract io.dekorate.deps.applicationcrd.api.model.DescriptorFluent$OwnersNested<A> editOwner(int);

  public abstract io.dekorate.deps.applicationcrd.api.model.DescriptorFluent$OwnersNested<A> editFirstOwner();

  public abstract io.dekorate.deps.applicationcrd.api.model.DescriptorFluent$OwnersNested<A> editLastOwner();

  public abstract io.dekorate.deps.applicationcrd.api.model.DescriptorFluent$OwnersNested<A> editMatchingOwner(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.applicationcrd.api.model.ContactDataBuilder>);

  public abstract java.lang.String getType();

  public abstract A withType(java.lang.String);

  public abstract java.lang.Boolean hasType();

  public abstract A withNewType(java.lang.String);

  public abstract A withNewType(java.lang.StringBuilder);

  public abstract A withNewType(java.lang.StringBuffer);

  public abstract java.lang.String getVersion();

  public abstract A withVersion(java.lang.String);

  public abstract java.lang.Boolean hasVersion();

  public abstract A withNewVersion(java.lang.String);

  public abstract A withNewVersion(java.lang.StringBuilder);

  public abstract A withNewVersion(java.lang.StringBuffer);
}
