Compiled from "PersistentVolumeClaimStatusFluentImpl.java"
public class io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimStatusFluentImpl<A extends io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimStatusFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.BaseFluent<A> implements io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimStatusFluent<A> {
  private java.util.List<java.lang.String> accessModes;

  private java.util.Map<java.lang.String, io.dekorate.deps.kubernetes.api.model.Quantity> capacity;

  private java.util.List<io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimConditionBuilder> conditions;

  private java.lang.String phase;

  public io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimStatusFluentImpl();
    Code:
       0: aload_0
       1: invokespecial #28                 // Method io/dekorate/deps/kubernetes/api/builder/BaseFluent."<init>":()V
       4: aload_0
       5: new           #30                 // class java/util/ArrayList
       8: dup
       9: invokespecial #31                 // Method java/util/ArrayList."<init>":()V
      12: putfield      #33                 // Field accessModes:Ljava/util/List;
      15: aload_0
      16: new           #30                 // class java/util/ArrayList
      19: dup
      20: invokespecial #31                 // Method java/util/ArrayList."<init>":()V
      23: putfield      #35                 // Field conditions:Ljava/util/List;
      26: return

  public io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimStatusFluentImpl(io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimStatus);
    Code:
       0: aload_0
       1: invokespecial #28                 // Method io/dekorate/deps/kubernetes/api/builder/BaseFluent."<init>":()V
       4: aload_0
       5: new           #30                 // class java/util/ArrayList
       8: dup
       9: invokespecial #31                 // Method java/util/ArrayList."<init>":()V
      12: putfield      #33                 // Field accessModes:Ljava/util/List;
      15: aload_0
      16: new           #30                 // class java/util/ArrayList
      19: dup
      20: invokespecial #31                 // Method java/util/ArrayList."<init>":()V
      23: putfield      #35                 // Field conditions:Ljava/util/List;
      26: aload_0
      27: aload_1
      28: invokevirtual #45                 // Method io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimStatus.getAccessModes:()Ljava/util/List;
      31: invokevirtual #49                 // Method withAccessModes:(Ljava/util/List;)Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimStatusFluent;
      34: pop
      35: aload_0
      36: aload_1
      37: invokevirtual #53                 // Method io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimStatus.getCapacity:()Ljava/util/Map;
      40: invokevirtual #57                 // Method withCapacity:(Ljava/util/Map;)Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimStatusFluent;
      43: pop
      44: aload_0
      45: aload_1
      46: invokevirtual #60                 // Method io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimStatus.getConditions:()Ljava/util/List;
      49: invokevirtual #63                 // Method withConditions:(Ljava/util/List;)Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimStatusFluent;
      52: pop
      53: aload_0
      54: aload_1
      55: invokevirtual #67                 // Method io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimStatus.getPhase:()Ljava/lang/String;
      58: invokevirtual #71                 // Method withPhase:(Ljava/lang/String;)Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimStatusFluent;
      61: pop
      62: return

  public A addToAccessModes(int, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #33                 // Field accessModes:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #30                 // class java/util/ArrayList
      11: dup
      12: invokespecial #31                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #33                 // Field accessModes:Ljava/util/List;
      18: aload_0
      19: getfield      #33                 // Field accessModes:Ljava/util/List;
      22: iload_1
      23: aload_2
      24: invokeinterface #82,  3           // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      29: aload_0
      30: areturn

  public A setToAccessModes(int, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #33                 // Field accessModes:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #30                 // class java/util/ArrayList
      11: dup
      12: invokespecial #31                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #33                 // Field accessModes:Ljava/util/List;
      18: aload_0
      19: getfield      #33                 // Field accessModes:Ljava/util/List;
      22: iload_1
      23: aload_2
      24: invokeinterface #90,  3           // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: aload_0
      31: areturn

  public A addToAccessModes(java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #33                 // Field accessModes:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #30                 // class java/util/ArrayList
      11: dup
      12: invokespecial #31                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #33                 // Field accessModes:Ljava/util/List;
      18: aload_1
      19: astore_2
      20: aload_2
      21: arraylength
      22: istore_3
      23: iconst_0
      24: istore        4
      26: iload         4
      28: iload_3
      29: if_icmpge     56
      32: aload_2
      33: iload         4
      35: aaload
      36: astore        5
      38: aload_0
      39: getfield      #33                 // Field accessModes:Ljava/util/List;
      42: aload         5
      44: invokeinterface #97,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          26
      56: aload_0
      57: areturn

  public A addAllToAccessModes(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #33                 // Field accessModes:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #30                 // class java/util/ArrayList
      11: dup
      12: invokespecial #31                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #33                 // Field accessModes:Ljava/util/List;
      18: aload_1
      19: invokeinterface #107,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      24: astore_2
      25: aload_2
      26: invokeinterface #113,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          58
      34: aload_2
      35: invokeinterface #117,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #119                // class java/lang/String
      43: astore_3
      44: aload_0
      45: getfield      #33                 // Field accessModes:Ljava/util/List;
      48: aload_3
      49: invokeinterface #97,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      54: pop
      55: goto          25
      58: aload_0
      59: areturn

  public A removeFromAccessModes(java.lang.String...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     45
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload_0
      21: getfield      #33                 // Field accessModes:Ljava/util/List;
      24: ifnull        39
      27: aload_0
      28: getfield      #33                 // Field accessModes:Ljava/util/List;
      31: aload         5
      33: invokeinterface #125,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      38: pop
      39: iinc          4, 1
      42: goto          8
      45: aload_0
      46: areturn

  public A removeAllFromAccessModes(java.util.Collection<java.lang.String>);
    Code:
       0: aload_1
       1: invokeinterface #107,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #113,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          47
      16: aload_2
      17: invokeinterface #117,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #119                // class java/lang/String
      25: astore_3
      26: aload_0
      27: getfield      #33                 // Field accessModes:Ljava/util/List;
      30: ifnull        44
      33: aload_0
      34: getfield      #33                 // Field accessModes:Ljava/util/List;
      37: aload_3
      38: invokeinterface #125,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      43: pop
      44: goto          7
      47: aload_0
      48: areturn

  public java.util.List<java.lang.String> getAccessModes();
    Code:
       0: aload_0
       1: getfield      #33                 // Field accessModes:Ljava/util/List;
       4: areturn

  public java.lang.String getAccessMode(int);
    Code:
       0: aload_0
       1: getfield      #33                 // Field accessModes:Ljava/util/List;
       4: iload_1
       5: invokeinterface #133,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #119                // class java/lang/String
      13: areturn

  public java.lang.String getFirstAccessMode();
    Code:
       0: aload_0
       1: getfield      #33                 // Field accessModes:Ljava/util/List;
       4: iconst_0
       5: invokeinterface #133,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #119                // class java/lang/String
      13: areturn

  public java.lang.String getLastAccessMode();
    Code:
       0: aload_0
       1: getfield      #33                 // Field accessModes:Ljava/util/List;
       4: aload_0
       5: getfield      #33                 // Field accessModes:Ljava/util/List;
       8: invokeinterface #139,  1          // InterfaceMethod java/util/List.size:()I
      13: iconst_1
      14: isub
      15: invokeinterface #133,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      20: checkcast     #119                // class java/lang/String
      23: areturn

  public java.lang.String getMatchingAccessMode(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #33                 // Field accessModes:Ljava/util/List;
       4: invokeinterface #143,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #113,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          47
      19: aload_2
      20: invokeinterface #117,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #119                // class java/lang/String
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokeinterface #149,  2          // InterfaceMethod io/dekorate/deps/kubernetes/api/builder/Predicate.apply:(Ljava/lang/Object;)Ljava/lang/Boolean;
      36: invokevirtual #154                // Method java/lang/Boolean.booleanValue:()Z
      39: ifeq          44
      42: aload_3
      43: areturn
      44: goto          10
      47: aconst_null
      48: areturn

  public java.lang.Boolean hasMatchingAccessMode(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #33                 // Field accessModes:Ljava/util/List;
       4: invokeinterface #143,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #113,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          50
      19: aload_2
      20: invokeinterface #117,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #119                // class java/lang/String
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokeinterface #149,  2          // InterfaceMethod io/dekorate/deps/kubernetes/api/builder/Predicate.apply:(Ljava/lang/Object;)Ljava/lang/Boolean;
      36: invokevirtual #154                // Method java/lang/Boolean.booleanValue:()Z
      39: ifeq          47
      42: iconst_1
      43: invokestatic  #164                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      46: areturn
      47: goto          10
      50: iconst_0
      51: invokestatic  #164                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      54: areturn

  public A withAccessModes(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #33                 // Field accessModes:Ljava/util/List;
       4: ifnull        26
       7: aload_0
       8: getfield      #169                // Field _visitables:Lio/dekorate/deps/kubernetes/api/builder/VisitableMap;
      11: ldc           #170                // String accessModes
      13: invokevirtual #175                // Method io/dekorate/deps/kubernetes/api/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      16: aload_0
      17: getfield      #33                 // Field accessModes:Ljava/util/List;
      20: invokeinterface #179,  2          // InterfaceMethod java/util/List.removeAll:(Ljava/util/Collection;)Z
      25: pop
      26: aload_1
      27: ifnull        86
      30: aload_0
      31: new           #30                 // class java/util/ArrayList
      34: dup
      35: invokespecial #31                 // Method java/util/ArrayList."<init>":()V
      38: putfield      #33                 // Field accessModes:Ljava/util/List;
      41: aload_1
      42: invokeinterface #143,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      47: astore_2
      48: aload_2
      49: invokeinterface #113,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      54: ifeq          83
      57: aload_2
      58: invokeinterface #117,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      63: checkcast     #119                // class java/lang/String
      66: astore_3
      67: aload_0
      68: iconst_1
      69: anewarray     #119                // class java/lang/String
      72: dup
      73: iconst_0
      74: aload_3
      75: aastore
      76: invokevirtual #181                // Method addToAccessModes:([Ljava/lang/String;)Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimStatusFluent;
      79: pop
      80: goto          48
      83: goto          91
      86: aload_0
      87: aconst_null
      88: putfield      #33                 // Field accessModes:Ljava/util/List;
      91: aload_0
      92: areturn

  public A withAccessModes(java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #33                 // Field accessModes:Ljava/util/List;
       4: ifnull        16
       7: aload_0
       8: getfield      #33                 // Field accessModes:Ljava/util/List;
      11: invokeinterface #184,  1          // InterfaceMethod java/util/List.clear:()V
      16: aload_1
      17: ifnull        60
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     60
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: iconst_1
      42: anewarray     #119                // class java/lang/String
      45: dup
      46: iconst_0
      47: aload         5
      49: aastore
      50: invokevirtual #181                // Method addToAccessModes:([Ljava/lang/String;)Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimStatusFluent;
      53: pop
      54: iinc          4, 1
      57: goto          28
      60: aload_0
      61: areturn

  public java.lang.Boolean hasAccessModes();
    Code:
       0: aload_0
       1: getfield      #33                 // Field accessModes:Ljava/util/List;
       4: ifnull        23
       7: aload_0
       8: getfield      #33                 // Field accessModes:Ljava/util/List;
      11: invokeinterface #189,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: invokestatic  #164                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      27: areturn

  public A addNewAccessMode(java.lang.String);
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #119                // class java/lang/String
       5: dup
       6: iconst_0
       7: new           #119                // class java/lang/String
      10: dup
      11: aload_1
      12: invokespecial #194                // Method java/lang/String."<init>":(Ljava/lang/String;)V
      15: aastore
      16: invokevirtual #181                // Method addToAccessModes:([Ljava/lang/String;)Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimStatusFluent;
      19: areturn

  public A addNewAccessMode(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #119                // class java/lang/String
       5: dup
       6: iconst_0
       7: new           #119                // class java/lang/String
      10: dup
      11: aload_1
      12: invokespecial #200                // Method java/lang/String."<init>":(Ljava/lang/StringBuilder;)V
      15: aastore
      16: invokevirtual #181                // Method addToAccessModes:([Ljava/lang/String;)Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimStatusFluent;
      19: areturn

  public A addNewAccessMode(java.lang.StringBuffer);
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #119                // class java/lang/String
       5: dup
       6: iconst_0
       7: new           #119                // class java/lang/String
      10: dup
      11: aload_1
      12: invokespecial #206                // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
      15: aastore
      16: invokevirtual #181                // Method addToAccessModes:([Ljava/lang/String;)Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimStatusFluent;
      19: areturn

  public A addToCapacity(java.lang.String, io.dekorate.deps.kubernetes.api.model.Quantity);
    Code:
       0: aload_0
       1: getfield      #212                // Field capacity:Ljava/util/Map;
       4: ifnonnull     26
       7: aload_1
       8: ifnull        26
      11: aload_2
      12: ifnull        26
      15: aload_0
      16: new           #214                // class java/util/LinkedHashMap
      19: dup
      20: invokespecial #215                // Method java/util/LinkedHashMap."<init>":()V
      23: putfield      #212                // Field capacity:Ljava/util/Map;
      26: aload_1
      27: ifnull        46
      30: aload_2
      31: ifnull        46
      34: aload_0
      35: getfield      #212                // Field capacity:Ljava/util/Map;
      38: aload_1
      39: aload_2
      40: invokeinterface #221,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: aload_0
      47: areturn

  public A addToCapacity(java.util.Map<java.lang.String, io.dekorate.deps.kubernetes.api.model.Quantity>);
    Code:
       0: aload_0
       1: getfield      #212                // Field capacity:Ljava/util/Map;
       4: ifnonnull     22
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: new           #214                // class java/util/LinkedHashMap
      15: dup
      16: invokespecial #215                // Method java/util/LinkedHashMap."<init>":()V
      19: putfield      #212                // Field capacity:Ljava/util/Map;
      22: aload_1
      23: ifnull        36
      26: aload_0
      27: getfield      #212                // Field capacity:Ljava/util/Map;
      30: aload_1
      31: invokeinterface #229,  2          // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      36: aload_0
      37: areturn

  public A removeFromCapacity(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #212                // Field capacity:Ljava/util/Map;
       4: ifnonnull     9
       7: aload_0
       8: areturn
       9: aload_1
      10: ifnull        31
      13: aload_0
      14: getfield      #212                // Field capacity:Ljava/util/Map;
      17: ifnull        31
      20: aload_0
      21: getfield      #212                // Field capacity:Ljava/util/Map;
      24: aload_1
      25: invokeinterface #234,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      30: pop
      31: aload_0
      32: areturn

  public A removeFromCapacity(java.util.Map<java.lang.String, io.dekorate.deps.kubernetes.api.model.Quantity>);
    Code:
       0: aload_0
       1: getfield      #212                // Field capacity:Ljava/util/Map;
       4: ifnonnull     9
       7: aload_0
       8: areturn
       9: aload_1
      10: ifnull        62
      13: aload_1
      14: invokeinterface #238,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      19: invokeinterface #241,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      24: astore_2
      25: aload_2
      26: invokeinterface #113,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          62
      34: aload_2
      35: invokeinterface #117,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: astore_3
      41: aload_0
      42: getfield      #212                // Field capacity:Ljava/util/Map;
      45: ifnull        59
      48: aload_0
      49: getfield      #212                // Field capacity:Ljava/util/Map;
      52: aload_3
      53: invokeinterface #234,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      58: pop
      59: goto          25
      62: aload_0
      63: areturn

  public java.util.Map<java.lang.String, io.dekorate.deps.kubernetes.api.model.Quantity> getCapacity();
    Code:
       0: aload_0
       1: getfield      #212                // Field capacity:Ljava/util/Map;
       4: areturn

  public A withCapacity(java.util.Map<java.lang.String, io.dekorate.deps.kubernetes.api.model.Quantity>);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: aload_0
       5: aconst_null
       6: putfield      #212                // Field capacity:Ljava/util/Map;
       9: goto          24
      12: aload_0
      13: new           #214                // class java/util/LinkedHashMap
      16: dup
      17: aload_1
      18: invokespecial #245                // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
      21: putfield      #212                // Field capacity:Ljava/util/Map;
      24: aload_0
      25: areturn

  public java.lang.Boolean hasCapacity();
    Code:
       0: aload_0
       1: getfield      #212                // Field capacity:Ljava/util/Map;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #164                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A addToConditions(int, io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimCondition);
    Code:
       0: aload_0
       1: getfield      #35                 // Field conditions:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #30                 // class java/util/ArrayList
      11: dup
      12: invokespecial #31                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #35                 // Field conditions:Ljava/util/List;
      18: new           #251                // class io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimConditionBuilder
      21: dup
      22: aload_2
      23: invokespecial #254                // Method io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimConditionBuilder."<init>":(Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimCondition;)V
      26: astore_3
      27: aload_0
      28: getfield      #169                // Field _visitables:Lio/dekorate/deps/kubernetes/api/builder/VisitableMap;
      31: ldc           #255                // String conditions
      33: invokevirtual #175                // Method io/dekorate/deps/kubernetes/api/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      36: iload_1
      37: iflt          44
      40: iload_1
      41: goto          58
      44: aload_0
      45: getfield      #169                // Field _visitables:Lio/dekorate/deps/kubernetes/api/builder/VisitableMap;
      48: ldc           #255                // String conditions
      50: invokevirtual #175                // Method io/dekorate/deps/kubernetes/api/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      53: invokeinterface #139,  1          // InterfaceMethod java/util/List.size:()I
      58: aload_3
      59: invokeinterface #82,  3           // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      64: aload_0
      65: getfield      #35                 // Field conditions:Ljava/util/List;
      68: iload_1
      69: iflt          76
      72: iload_1
      73: goto          85
      76: aload_0
      77: getfield      #35                 // Field conditions:Ljava/util/List;
      80: invokeinterface #139,  1          // InterfaceMethod java/util/List.size:()I
      85: aload_3
      86: invokeinterface #82,  3           // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      91: aload_0
      92: areturn

  public A setToConditions(int, io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimCondition);
    Code:
       0: aload_0
       1: getfield      #35                 // Field conditions:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #30                 // class java/util/ArrayList
      11: dup
      12: invokespecial #31                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #35                 // Field conditions:Ljava/util/List;
      18: new           #251                // class io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimConditionBuilder
      21: dup
      22: aload_2
      23: invokespecial #254                // Method io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimConditionBuilder."<init>":(Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimCondition;)V
      26: astore_3
      27: iload_1
      28: iflt          49
      31: iload_1
      32: aload_0
      33: getfield      #169                // Field _visitables:Lio/dekorate/deps/kubernetes/api/builder/VisitableMap;
      36: ldc           #255                // String conditions
      38: invokevirtual #175                // Method io/dekorate/deps/kubernetes/api/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      41: invokeinterface #139,  1          // InterfaceMethod java/util/List.size:()I
      46: if_icmplt     68
      49: aload_0
      50: getfield      #169                // Field _visitables:Lio/dekorate/deps/kubernetes/api/builder/VisitableMap;
      53: ldc           #255                // String conditions
      55: invokevirtual #175                // Method io/dekorate/deps/kubernetes/api/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      58: aload_3
      59: invokeinterface #97,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      64: pop
      65: goto          85
      68: aload_0
      69: getfield      #169                // Field _visitables:Lio/dekorate/deps/kubernetes/api/builder/VisitableMap;
      72: ldc           #255                // String conditions
      74: invokevirtual #175                // Method io/dekorate/deps/kubernetes/api/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      77: iload_1
      78: aload_3
      79: invokeinterface #90,  3           // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
      84: pop
      85: iload_1
      86: iflt          102
      89: iload_1
      90: aload_0
      91: getfield      #35                 // Field conditions:Ljava/util/List;
      94: invokeinterface #139,  1          // InterfaceMethod java/util/List.size:()I
      99: if_icmplt     116
     102: aload_0
     103: getfield      #35                 // Field conditions:Ljava/util/List;
     106: aload_3
     107: invokeinterface #97,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     112: pop
     113: goto          128
     116: aload_0
     117: getfield      #35                 // Field conditions:Ljava/util/List;
     120: iload_1
     121: aload_3
     122: invokeinterface #90,  3           // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
     127: pop
     128: aload_0
     129: areturn

  public A addToConditions(io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimCondition...);
    Code:
       0: aload_0
       1: getfield      #35                 // Field conditions:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #30                 // class java/util/ArrayList
      11: dup
      12: invokespecial #31                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #35                 // Field conditions:Ljava/util/List;
      18: aload_1
      19: astore_2
      20: aload_2
      21: arraylength
      22: istore_3
      23: iconst_0
      24: istore        4
      26: iload         4
      28: iload_3
      29: if_icmpge     84
      32: aload_2
      33: iload         4
      35: aaload
      36: astore        5
      38: new           #251                // class io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimConditionBuilder
      41: dup
      42: aload         5
      44: invokespecial #254                // Method io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimConditionBuilder."<init>":(Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimCondition;)V
      47: astore        6
      49: aload_0
      50: getfield      #169                // Field _visitables:Lio/dekorate/deps/kubernetes/api/builder/VisitableMap;
      53: ldc           #255                // String conditions
      55: invokevirtual #175                // Method io/dekorate/deps/kubernetes/api/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      58: aload         6
      60: invokeinterface #97,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      65: pop
      66: aload_0
      67: getfield      #35                 // Field conditions:Ljava/util/List;
      70: aload         6
      72: invokeinterface #97,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      77: pop
      78: iinc          4, 1
      81: goto          26
      84: aload_0
      85: areturn

  public A addAllToConditions(java.util.Collection<io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimCondition>);
    Code:
       0: aload_0
       1: getfield      #35                 // Field conditions:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #30                 // class java/util/ArrayList
      11: dup
      12: invokespecial #31                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #35                 // Field conditions:Ljava/util/List;
      18: aload_1
      19: invokeinterface #107,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      24: astore_2
      25: aload_2
      26: invokeinterface #113,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          86
      34: aload_2
      35: invokeinterface #117,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #257                // class io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimCondition
      43: astore_3
      44: new           #251                // class io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimConditionBuilder
      47: dup
      48: aload_3
      49: invokespecial #254                // Method io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimConditionBuilder."<init>":(Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimCondition;)V
      52: astore        4
      54: aload_0
      55: getfield      #169                // Field _visitables:Lio/dekorate/deps/kubernetes/api/builder/VisitableMap;
      58: ldc           #255                // String conditions
      60: invokevirtual #175                // Method io/dekorate/deps/kubernetes/api/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      63: aload         4
      65: invokeinterface #97,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      70: pop
      71: aload_0
      72: getfield      #35                 // Field conditions:Ljava/util/List;
      75: aload         4
      77: invokeinterface #97,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      82: pop
      83: goto          25
      86: aload_0
      87: areturn

  public A removeFromConditions(io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimCondition...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     73
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: new           #251                // class io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimConditionBuilder
      23: dup
      24: aload         5
      26: invokespecial #254                // Method io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimConditionBuilder."<init>":(Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimCondition;)V
      29: astore        6
      31: aload_0
      32: getfield      #169                // Field _visitables:Lio/dekorate/deps/kubernetes/api/builder/VisitableMap;
      35: ldc           #255                // String conditions
      37: invokevirtual #175                // Method io/dekorate/deps/kubernetes/api/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      40: aload         6
      42: invokeinterface #125,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      47: pop
      48: aload_0
      49: getfield      #35                 // Field conditions:Ljava/util/List;
      52: ifnull        67
      55: aload_0
      56: getfield      #35                 // Field conditions:Ljava/util/List;
      59: aload         6
      61: invokeinterface #125,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      66: pop
      67: iinc          4, 1
      70: goto          8
      73: aload_0
      74: areturn

  public A removeAllFromConditions(java.util.Collection<io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimCondition>);
    Code:
       0: aload_1
       1: invokeinterface #107,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #113,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          75
      16: aload_2
      17: invokeinterface #117,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #257                // class io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimCondition
      25: astore_3
      26: new           #251                // class io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimConditionBuilder
      29: dup
      30: aload_3
      31: invokespecial #254                // Method io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimConditionBuilder."<init>":(Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimCondition;)V
      34: astore        4
      36: aload_0
      37: getfield      #169                // Field _visitables:Lio/dekorate/deps/kubernetes/api/builder/VisitableMap;
      40: ldc           #255                // String conditions
      42: invokevirtual #175                // Method io/dekorate/deps/kubernetes/api/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      45: aload         4
      47: invokeinterface #125,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      52: pop
      53: aload_0
      54: getfield      #35                 // Field conditions:Ljava/util/List;
      57: ifnull        72
      60: aload_0
      61: getfield      #35                 // Field conditions:Ljava/util/List;
      64: aload         4
      66: invokeinterface #125,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      71: pop
      72: goto          7
      75: aload_0
      76: areturn

  public A removeMatchingFromConditions(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimConditionBuilder>);
    Code:
       0: aload_0
       1: getfield      #35                 // Field conditions:Ljava/util/List;
       4: ifnonnull     9
       7: aload_0
       8: areturn
       9: aload_0
      10: getfield      #35                 // Field conditions:Ljava/util/List;
      13: invokeinterface #143,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      18: astore_2
      19: aload_0
      20: getfield      #169                // Field _visitables:Lio/dekorate/deps/kubernetes/api/builder/VisitableMap;
      23: ldc           #255                // String conditions
      25: invokevirtual #175                // Method io/dekorate/deps/kubernetes/api/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      28: astore_3
      29: aload_2
      30: invokeinterface #113,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          81
      38: aload_2
      39: invokeinterface #117,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #251                // class io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimConditionBuilder
      47: astore        4
      49: aload_1
      50: aload         4
      52: invokeinterface #149,  2          // InterfaceMethod io/dekorate/deps/kubernetes/api/builder/Predicate.apply:(Ljava/lang/Object;)Ljava/lang/Boolean;
      57: invokevirtual #154                // Method java/lang/Boolean.booleanValue:()Z
      60: ifeq          78
      63: aload_3
      64: aload         4
      66: invokeinterface #125,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      71: pop
      72: aload_2
      73: invokeinterface #275,  1          // InterfaceMethod java/util/Iterator.remove:()V
      78: goto          29
      81: aload_0
      82: areturn

  public java.util.List<io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimCondition> getConditions();
    Code:
       0: aload_0
       1: getfield      #35                 // Field conditions:Ljava/util/List;
       4: invokestatic  #286                // Method build:(Ljava/util/List;)Ljava/util/ArrayList;
       7: areturn

  public java.util.List<io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimCondition> buildConditions();
    Code:
       0: aload_0
       1: getfield      #35                 // Field conditions:Ljava/util/List;
       4: invokestatic  #286                // Method build:(Ljava/util/List;)Ljava/util/ArrayList;
       7: areturn

  public io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimCondition buildCondition(int);
    Code:
       0: aload_0
       1: getfield      #35                 // Field conditions:Ljava/util/List;
       4: iload_1
       5: invokeinterface #133,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #251                // class io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimConditionBuilder
      13: invokevirtual #292                // Method io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimConditionBuilder.build:()Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimCondition;
      16: areturn

  public io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimCondition buildFirstCondition();
    Code:
       0: aload_0
       1: getfield      #35                 // Field conditions:Ljava/util/List;
       4: iconst_0
       5: invokeinterface #133,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #251                // class io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimConditionBuilder
      13: invokevirtual #292                // Method io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimConditionBuilder.build:()Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimCondition;
      16: areturn

  public io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimCondition buildLastCondition();
    Code:
       0: aload_0
       1: getfield      #35                 // Field conditions:Ljava/util/List;
       4: aload_0
       5: getfield      #35                 // Field conditions:Ljava/util/List;
       8: invokeinterface #139,  1          // InterfaceMethod java/util/List.size:()I
      13: iconst_1
      14: isub
      15: invokeinterface #133,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      20: checkcast     #251                // class io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimConditionBuilder
      23: invokevirtual #292                // Method io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimConditionBuilder.build:()Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimCondition;
      26: areturn

  public io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimCondition buildMatchingCondition(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimConditionBuilder>);
    Code:
       0: aload_0
       1: getfield      #35                 // Field conditions:Ljava/util/List;
       4: invokeinterface #143,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #113,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          50
      19: aload_2
      20: invokeinterface #117,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #251                // class io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimConditionBuilder
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokeinterface #149,  2          // InterfaceMethod io/dekorate/deps/kubernetes/api/builder/Predicate.apply:(Ljava/lang/Object;)Ljava/lang/Boolean;
      36: invokevirtual #154                // Method java/lang/Boolean.booleanValue:()Z
      39: ifeq          47
      42: aload_3
      43: invokevirtual #292                // Method io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimConditionBuilder.build:()Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimCondition;
      46: areturn
      47: goto          10
      50: aconst_null
      51: areturn

  public java.lang.Boolean hasMatchingCondition(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimConditionBuilder>);
    Code:
       0: aload_0
       1: getfield      #35                 // Field conditions:Ljava/util/List;
       4: invokeinterface #143,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #113,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          50
      19: aload_2
      20: invokeinterface #117,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #251                // class io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimConditionBuilder
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokeinterface #149,  2          // InterfaceMethod io/dekorate/deps/kubernetes/api/builder/Predicate.apply:(Ljava/lang/Object;)Ljava/lang/Boolean;
      36: invokevirtual #154                // Method java/lang/Boolean.booleanValue:()Z
      39: ifeq          47
      42: iconst_1
      43: invokestatic  #164                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      46: areturn
      47: goto          10
      50: iconst_0
      51: invokestatic  #164                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      54: areturn

  public A withConditions(java.util.List<io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimCondition>);
    Code:
       0: aload_0
       1: getfield      #35                 // Field conditions:Ljava/util/List;
       4: ifnull        26
       7: aload_0
       8: getfield      #169                // Field _visitables:Lio/dekorate/deps/kubernetes/api/builder/VisitableMap;
      11: ldc           #255                // String conditions
      13: invokevirtual #175                // Method io/dekorate/deps/kubernetes/api/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      16: aload_0
      17: getfield      #35                 // Field conditions:Ljava/util/List;
      20: invokeinterface #179,  2          // InterfaceMethod java/util/List.removeAll:(Ljava/util/Collection;)Z
      25: pop
      26: aload_1
      27: ifnull        86
      30: aload_0
      31: new           #30                 // class java/util/ArrayList
      34: dup
      35: invokespecial #31                 // Method java/util/ArrayList."<init>":()V
      38: putfield      #35                 // Field conditions:Ljava/util/List;
      41: aload_1
      42: invokeinterface #143,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      47: astore_2
      48: aload_2
      49: invokeinterface #113,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      54: ifeq          83
      57: aload_2
      58: invokeinterface #117,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      63: checkcast     #257                // class io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimCondition
      66: astore_3
      67: aload_0
      68: iconst_1
      69: anewarray     #257                // class io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimCondition
      72: dup
      73: iconst_0
      74: aload_3
      75: aastore
      76: invokevirtual #302                // Method addToConditions:([Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimCondition;)Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimStatusFluent;
      79: pop
      80: goto          48
      83: goto          91
      86: aload_0
      87: aconst_null
      88: putfield      #35                 // Field conditions:Ljava/util/List;
      91: aload_0
      92: areturn

  public A withConditions(io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimCondition...);
    Code:
       0: aload_0
       1: getfield      #35                 // Field conditions:Ljava/util/List;
       4: ifnull        16
       7: aload_0
       8: getfield      #35                 // Field conditions:Ljava/util/List;
      11: invokeinterface #184,  1          // InterfaceMethod java/util/List.clear:()V
      16: aload_1
      17: ifnull        60
      20: aload_1
      21: astore_2
      22: aload_2
      23: arraylength
      24: istore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: iload_3
      31: if_icmpge     60
      34: aload_2
      35: iload         4
      37: aaload
      38: astore        5
      40: aload_0
      41: iconst_1
      42: anewarray     #257                // class io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimCondition
      45: dup
      46: iconst_0
      47: aload         5
      49: aastore
      50: invokevirtual #302                // Method addToConditions:([Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimCondition;)Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimStatusFluent;
      53: pop
      54: iinc          4, 1
      57: goto          28
      60: aload_0
      61: areturn

  public java.lang.Boolean hasConditions();
    Code:
       0: aload_0
       1: getfield      #35                 // Field conditions:Ljava/util/List;
       4: ifnull        23
       7: aload_0
       8: getfield      #35                 // Field conditions:Ljava/util/List;
      11: invokeinterface #189,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: invokestatic  #164                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      27: areturn

  public io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimStatusFluent$ConditionsNested<A> addNewCondition();
    Code:
       0: new           #10                 // class io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimStatusFluentImpl$ConditionsNestedImpl
       3: dup
       4: aload_0
       5: invokespecial #310                // Method io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimStatusFluentImpl$ConditionsNestedImpl."<init>":(Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimStatusFluentImpl;)V
       8: areturn

  public io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimStatusFluent$ConditionsNested<A> addNewConditionLike(io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimCondition);
    Code:
       0: new           #10                 // class io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimStatusFluentImpl$ConditionsNestedImpl
       3: dup
       4: aload_0
       5: iconst_m1
       6: aload_1
       7: invokespecial #316                // Method io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimStatusFluentImpl$ConditionsNestedImpl."<init>":(Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimStatusFluentImpl;ILio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimCondition;)V
      10: areturn

  public io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimStatusFluent$ConditionsNested<A> setNewConditionLike(int, io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimCondition);
    Code:
       0: new           #10                 // class io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimStatusFluentImpl$ConditionsNestedImpl
       3: dup
       4: aload_0
       5: iload_1
       6: aload_2
       7: invokespecial #316                // Method io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimStatusFluentImpl$ConditionsNestedImpl."<init>":(Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimStatusFluentImpl;ILio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimCondition;)V
      10: areturn

  public io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimStatusFluent$ConditionsNested<A> editCondition(int);
    Code:
       0: aload_0
       1: getfield      #35                 // Field conditions:Ljava/util/List;
       4: invokeinterface #139,  1          // InterfaceMethod java/util/List.size:()I
       9: iload_1
      10: if_icmpgt     24
      13: new           #324                // class java/lang/RuntimeException
      16: dup
      17: ldc_w         #326                // String Can\'t edit conditions. Index exceeds size.
      20: invokespecial #327                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: iload_1
      26: aload_0
      27: iload_1
      28: invokevirtual #329                // Method buildCondition:(I)Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimCondition;
      31: invokevirtual #331                // Method setNewConditionLike:(ILio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimCondition;)Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimStatusFluent$ConditionsNested;
      34: areturn

  public io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimStatusFluent$ConditionsNested<A> editFirstCondition();
    Code:
       0: aload_0
       1: getfield      #35                 // Field conditions:Ljava/util/List;
       4: invokeinterface #139,  1          // InterfaceMethod java/util/List.size:()I
       9: ifne          23
      12: new           #324                // class java/lang/RuntimeException
      15: dup
      16: ldc_w         #334                // String Can\'t edit first conditions. The list is empty.
      19: invokespecial #327                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_0
      24: iconst_0
      25: aload_0
      26: iconst_0
      27: invokevirtual #329                // Method buildCondition:(I)Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimCondition;
      30: invokevirtual #331                // Method setNewConditionLike:(ILio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimCondition;)Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimStatusFluent$ConditionsNested;
      33: areturn

  public io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimStatusFluent$ConditionsNested<A> editLastCondition();
    Code:
       0: aload_0
       1: getfield      #35                 // Field conditions:Ljava/util/List;
       4: invokeinterface #139,  1          // InterfaceMethod java/util/List.size:()I
       9: iconst_1
      10: isub
      11: istore_1
      12: iload_1
      13: ifge          27
      16: new           #324                // class java/lang/RuntimeException
      19: dup
      20: ldc_w         #337                // String Can\'t edit last conditions. The list is empty.
      23: invokespecial #327                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: iload_1
      29: aload_0
      30: iload_1
      31: invokevirtual #329                // Method buildCondition:(I)Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimCondition;
      34: invokevirtual #331                // Method setNewConditionLike:(ILio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimCondition;)Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimStatusFluent$ConditionsNested;
      37: areturn

  public io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimStatusFluent$ConditionsNested<A> editMatchingCondition(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimConditionBuilder>);
    Code:
       0: iconst_m1
       1: istore_2
       2: iconst_0
       3: istore_3
       4: iload_3
       5: aload_0
       6: getfield      #35                 // Field conditions:Ljava/util/List;
       9: invokeinterface #139,  1          // InterfaceMethod java/util/List.size:()I
      14: if_icmpge     50
      17: aload_1
      18: aload_0
      19: getfield      #35                 // Field conditions:Ljava/util/List;
      22: iload_3
      23: invokeinterface #133,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      28: invokeinterface #149,  2          // InterfaceMethod io/dekorate/deps/kubernetes/api/builder/Predicate.apply:(Ljava/lang/Object;)Ljava/lang/Boolean;
      33: invokevirtual #154                // Method java/lang/Boolean.booleanValue:()Z
      36: ifeq          44
      39: iload_3
      40: istore_2
      41: goto          50
      44: iinc          3, 1
      47: goto          4
      50: iload_2
      51: ifge          65
      54: new           #324                // class java/lang/RuntimeException
      57: dup
      58: ldc_w         #342                // String Can\'t edit matching conditions. No match found.
      61: invokespecial #327                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      64: athrow
      65: aload_0
      66: iload_2
      67: aload_0
      68: iload_2
      69: invokevirtual #329                // Method buildCondition:(I)Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimCondition;
      72: invokevirtual #331                // Method setNewConditionLike:(ILio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimCondition;)Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimStatusFluent$ConditionsNested;
      75: areturn

  public java.lang.String getPhase();
    Code:
       0: aload_0
       1: getfield      #345                // Field phase:Ljava/lang/String;
       4: areturn

  public A withPhase(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #345                // Field phase:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasPhase();
    Code:
       0: aload_0
       1: getfield      #345                // Field phase:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #164                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withNewPhase(java.lang.String);
    Code:
       0: aload_0
       1: new           #119                // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #194                // Method java/lang/String."<init>":(Ljava/lang/String;)V
       9: invokevirtual #71                 // Method withPhase:(Ljava/lang/String;)Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimStatusFluent;
      12: areturn

  public A withNewPhase(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: new           #119                // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #200                // Method java/lang/String."<init>":(Ljava/lang/StringBuilder;)V
       9: invokevirtual #71                 // Method withPhase:(Ljava/lang/String;)Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimStatusFluent;
      12: areturn

  public A withNewPhase(java.lang.StringBuffer);
    Code:
       0: aload_0
       1: new           #119                // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #206                // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
       9: invokevirtual #71                 // Method withPhase:(Ljava/lang/String;)Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimStatusFluent;
      12: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #354                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #354                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #2                  // class io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimStatusFluentImpl
      28: astore_2
      29: aload_0
      30: getfield      #33                 // Field accessModes:Ljava/util/List;
      33: ifnull        55
      36: aload_0
      37: getfield      #33                 // Field accessModes:Ljava/util/List;
      40: aload_2
      41: getfield      #33                 // Field accessModes:Ljava/util/List;
      44: invokeinterface #356,  2          // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
      49: ifne          64
      52: goto          62
      55: aload_2
      56: getfield      #33                 // Field accessModes:Ljava/util/List;
      59: ifnull        64
      62: iconst_0
      63: ireturn
      64: aload_0
      65: getfield      #212                // Field capacity:Ljava/util/Map;
      68: ifnull        90
      71: aload_0
      72: getfield      #212                // Field capacity:Ljava/util/Map;
      75: aload_2
      76: getfield      #212                // Field capacity:Ljava/util/Map;
      79: invokeinterface #357,  2          // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
      84: ifne          99
      87: goto          97
      90: aload_2
      91: getfield      #212                // Field capacity:Ljava/util/Map;
      94: ifnull        99
      97: iconst_0
      98: ireturn
      99: aload_0
     100: getfield      #35                 // Field conditions:Ljava/util/List;
     103: ifnull        125
     106: aload_0
     107: getfield      #35                 // Field conditions:Ljava/util/List;
     110: aload_2
     111: getfield      #35                 // Field conditions:Ljava/util/List;
     114: invokeinterface #356,  2          // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
     119: ifne          134
     122: goto          132
     125: aload_2
     126: getfield      #35                 // Field conditions:Ljava/util/List;
     129: ifnull        134
     132: iconst_0
     133: ireturn
     134: aload_0
     135: getfield      #345                // Field phase:Ljava/lang/String;
     138: ifnull        158
     141: aload_0
     142: getfield      #345                // Field phase:Ljava/lang/String;
     145: aload_2
     146: getfield      #345                // Field phase:Ljava/lang/String;
     149: invokevirtual #358                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     152: ifne          167
     155: goto          165
     158: aload_2
     159: getfield      #345                // Field phase:Ljava/lang/String;
     162: ifnull        167
     165: iconst_0
     166: ireturn
     167: iconst_1
     168: ireturn
}
