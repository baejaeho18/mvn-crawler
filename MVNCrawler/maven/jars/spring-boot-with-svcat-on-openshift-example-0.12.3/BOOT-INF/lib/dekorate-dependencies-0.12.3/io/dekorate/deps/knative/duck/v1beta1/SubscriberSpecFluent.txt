Compiled from "SubscriberSpecFluent.java"
public interface io.dekorate.deps.knative.duck.v1beta1.SubscriberSpecFluent<A extends io.dekorate.deps.knative.duck.v1beta1.SubscriberSpecFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract io.dekorate.deps.knative.duck.v1beta1.DeliverySpec getDelivery();

  public abstract io.dekorate.deps.knative.duck.v1beta1.DeliverySpec buildDelivery();

  public abstract A withDelivery(io.dekorate.deps.knative.duck.v1beta1.DeliverySpec);

  public abstract java.lang.Boolean hasDelivery();

  public abstract io.dekorate.deps.knative.duck.v1beta1.SubscriberSpecFluent$DeliveryNested<A> withNewDelivery();

  public abstract io.dekorate.deps.knative.duck.v1beta1.SubscriberSpecFluent$DeliveryNested<A> withNewDeliveryLike(io.dekorate.deps.knative.duck.v1beta1.DeliverySpec);

  public abstract io.dekorate.deps.knative.duck.v1beta1.SubscriberSpecFluent$DeliveryNested<A> editDelivery();

  public abstract io.dekorate.deps.knative.duck.v1beta1.SubscriberSpecFluent$DeliveryNested<A> editOrNewDelivery();

  public abstract io.dekorate.deps.knative.duck.v1beta1.SubscriberSpecFluent$DeliveryNested<A> editOrNewDeliveryLike(io.dekorate.deps.knative.duck.v1beta1.DeliverySpec);

  public abstract java.lang.Long getGeneration();

  public abstract A withGeneration(java.lang.Long);

  public abstract java.lang.Boolean hasGeneration();

  public abstract java.lang.String getReplyUri();

  public abstract A withReplyUri(java.lang.String);

  public abstract java.lang.Boolean hasReplyUri();

  public abstract A withNewReplyUri(java.lang.String);

  public abstract A withNewReplyUri(java.lang.StringBuilder);

  public abstract A withNewReplyUri(java.lang.StringBuffer);

  public abstract java.lang.String getSubscriberUri();

  public abstract A withSubscriberUri(java.lang.String);

  public abstract java.lang.Boolean hasSubscriberUri();

  public abstract A withNewSubscriberUri(java.lang.String);

  public abstract A withNewSubscriberUri(java.lang.StringBuilder);

  public abstract A withNewSubscriberUri(java.lang.StringBuffer);

  public abstract java.lang.String getUid();

  public abstract A withUid(java.lang.String);

  public abstract java.lang.Boolean hasUid();

  public abstract A withNewUid(java.lang.String);

  public abstract A withNewUid(java.lang.StringBuilder);

  public abstract A withNewUid(java.lang.StringBuffer);
}
