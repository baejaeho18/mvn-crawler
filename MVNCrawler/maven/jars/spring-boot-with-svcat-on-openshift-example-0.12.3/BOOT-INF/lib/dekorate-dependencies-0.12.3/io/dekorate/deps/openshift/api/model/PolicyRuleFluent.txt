Compiled from "PolicyRuleFluent.java"
public interface io.dekorate.deps.openshift.api.model.PolicyRuleFluent<A extends io.dekorate.deps.openshift.api.model.PolicyRuleFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract A addToApiGroups(int, java.lang.String);

  public abstract A setToApiGroups(int, java.lang.String);

  public abstract A addToApiGroups(java.lang.String...);

  public abstract A addAllToApiGroups(java.util.Collection<java.lang.String>);

  public abstract A removeFromApiGroups(java.lang.String...);

  public abstract A removeAllFromApiGroups(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getApiGroups();

  public abstract java.lang.String getApiGroup(int);

  public abstract java.lang.String getFirstApiGroup();

  public abstract java.lang.String getLastApiGroup();

  public abstract java.lang.String getMatchingApiGroup(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingApiGroup(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract A withApiGroups(java.util.List<java.lang.String>);

  public abstract A withApiGroups(java.lang.String...);

  public abstract java.lang.Boolean hasApiGroups();

  public abstract A addNewApiGroup(java.lang.String);

  public abstract A addNewApiGroup(java.lang.StringBuilder);

  public abstract A addNewApiGroup(java.lang.StringBuffer);

  public abstract io.dekorate.deps.kubernetes.api.model.HasMetadata getAttributeRestrictions();

  public abstract io.dekorate.deps.kubernetes.api.model.HasMetadata buildAttributeRestrictions();

  public abstract A withAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.HasMetadata);

  public abstract java.lang.Boolean hasAttributeRestrictions();

  public abstract A withValidatingWebhookConfigurationAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.admissionregistration.ValidatingWebhookConfiguration);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ValidatingWebhookConfigurationAttributeRestrictionsNested<A> withNewValidatingWebhookConfigurationAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ValidatingWebhookConfigurationAttributeRestrictionsNested<A> withNewValidatingWebhookConfigurationAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.admissionregistration.ValidatingWebhookConfiguration);

  public abstract A withStorageClassAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.storage.StorageClass);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$StorageClassAttributeRestrictionsNested<A> withNewStorageClassAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$StorageClassAttributeRestrictionsNested<A> withNewStorageClassAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.storage.StorageClass);

  public abstract A withClusterRoleBindingAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBinding);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ClusterRoleBindingAttributeRestrictionsNested<A> withNewClusterRoleBindingAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ClusterRoleBindingAttributeRestrictionsNested<A> withNewClusterRoleBindingAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBinding);

  public abstract A withCSINodeAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSINode);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$CSINodeAttributeRestrictionsNested<A> withNewCSINodeAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$CSINodeAttributeRestrictionsNested<A> withNewCSINodeAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSINode);

  public abstract A withOpenshiftRoleBindingAttributeRestrictions(io.dekorate.deps.openshift.api.model.OpenshiftRoleBinding);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$OpenshiftRoleBindingAttributeRestrictionsNested<A> withNewOpenshiftRoleBindingAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$OpenshiftRoleBindingAttributeRestrictionsNested<A> withNewOpenshiftRoleBindingAttributeRestrictionsLike(io.dekorate.deps.openshift.api.model.OpenshiftRoleBinding);

  public abstract A withPodDisruptionBudgetAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.policy.PodDisruptionBudget);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$PodDisruptionBudgetAttributeRestrictionsNested<A> withNewPodDisruptionBudgetAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$PodDisruptionBudgetAttributeRestrictionsNested<A> withNewPodDisruptionBudgetAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.policy.PodDisruptionBudget);

  public abstract A withOpenshiftClusterRoleBindingAttributeRestrictions(io.dekorate.deps.openshift.api.model.OpenshiftClusterRoleBinding);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$OpenshiftClusterRoleBindingAttributeRestrictionsNested<A> withNewOpenshiftClusterRoleBindingAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$OpenshiftClusterRoleBindingAttributeRestrictionsNested<A> withNewOpenshiftClusterRoleBindingAttributeRestrictionsLike(io.dekorate.deps.openshift.api.model.OpenshiftClusterRoleBinding);

  public abstract A withNetworkPolicyAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.networking.NetworkPolicy);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$NetworkPolicyAttributeRestrictionsNested<A> withNewNetworkPolicyAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$NetworkPolicyAttributeRestrictionsNested<A> withNewNetworkPolicyAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.networking.NetworkPolicy);

  public abstract A withRouteAttributeRestrictions(io.dekorate.deps.openshift.api.model.Route);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$RouteAttributeRestrictionsNested<A> withNewRouteAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$RouteAttributeRestrictionsNested<A> withNewRouteAttributeRestrictionsLike(io.dekorate.deps.openshift.api.model.Route);

  public abstract A withNamespaceAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.Namespace);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$NamespaceAttributeRestrictionsNested<A> withNewNamespaceAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$NamespaceAttributeRestrictionsNested<A> withNewNamespaceAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.Namespace);

  public abstract A withLocalSubjectAccessReviewAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.authorization.LocalSubjectAccessReview);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$LocalSubjectAccessReviewAttributeRestrictionsNested<A> withNewLocalSubjectAccessReviewAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$LocalSubjectAccessReviewAttributeRestrictionsNested<A> withNewLocalSubjectAccessReviewAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.authorization.LocalSubjectAccessReview);

  public abstract A withLeaseAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.coordination.v1.Lease);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$LeaseAttributeRestrictionsNested<A> withNewLeaseAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$LeaseAttributeRestrictionsNested<A> withNewLeaseAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.coordination.v1.Lease);

  public abstract A withServiceAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.Service);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ServiceAttributeRestrictionsNested<A> withNewServiceAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ServiceAttributeRestrictionsNested<A> withNewServiceAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.Service);

  public abstract A withReplicationControllerAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.ReplicationController);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ReplicationControllerAttributeRestrictionsNested<A> withNewReplicationControllerAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ReplicationControllerAttributeRestrictionsNested<A> withNewReplicationControllerAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.ReplicationController);

  public abstract A withSubjectAccessReviewAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.authorization.SubjectAccessReview);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$SubjectAccessReviewAttributeRestrictionsNested<A> withNewSubjectAccessReviewAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$SubjectAccessReviewAttributeRestrictionsNested<A> withNewSubjectAccessReviewAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.authorization.SubjectAccessReview);

  public abstract A withMutatingWebhookConfigurationAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.admissionregistration.MutatingWebhookConfiguration);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$MutatingWebhookConfigurationAttributeRestrictionsNested<A> withNewMutatingWebhookConfigurationAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$MutatingWebhookConfigurationAttributeRestrictionsNested<A> withNewMutatingWebhookConfigurationAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.admissionregistration.MutatingWebhookConfiguration);

  public abstract A withPodMetricsAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.PodMetrics);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$PodMetricsAttributeRestrictionsNested<A> withNewPodMetricsAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$PodMetricsAttributeRestrictionsNested<A> withNewPodMetricsAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.PodMetrics);

  public abstract A withHorizontalPodAutoscalerAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.HorizontalPodAutoscaler);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$HorizontalPodAutoscalerAttributeRestrictionsNested<A> withNewHorizontalPodAutoscalerAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$HorizontalPodAutoscalerAttributeRestrictionsNested<A> withNewHorizontalPodAutoscalerAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.HorizontalPodAutoscaler);

  public abstract A withImageAttributeRestrictions(io.dekorate.deps.openshift.api.model.Image);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ImageAttributeRestrictionsNested<A> withNewImageAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ImageAttributeRestrictionsNested<A> withNewImageAttributeRestrictionsLike(io.dekorate.deps.openshift.api.model.Image);

  public abstract A withReplicaSetAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.apps.ReplicaSet);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ReplicaSetAttributeRestrictionsNested<A> withNewReplicaSetAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ReplicaSetAttributeRestrictionsNested<A> withNewReplicaSetAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.apps.ReplicaSet);

  public abstract A withEndpointSliceAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.discovery.EndpointSlice);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$EndpointSliceAttributeRestrictionsNested<A> withNewEndpointSliceAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$EndpointSliceAttributeRestrictionsNested<A> withNewEndpointSliceAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.discovery.EndpointSlice);

  public abstract A withCronJobAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.batch.CronJob);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$CronJobAttributeRestrictionsNested<A> withNewCronJobAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$CronJobAttributeRestrictionsNested<A> withNewCronJobAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.batch.CronJob);

  public abstract A withEndpointsAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.Endpoints);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$EndpointsAttributeRestrictionsNested<A> withNewEndpointsAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$EndpointsAttributeRestrictionsNested<A> withNewEndpointsAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.Endpoints);

  public abstract A withPodAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.Pod);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$PodAttributeRestrictionsNested<A> withNewPodAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$PodAttributeRestrictionsNested<A> withNewPodAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.Pod);

  public abstract A withConfigMapAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.ConfigMap);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ConfigMapAttributeRestrictionsNested<A> withNewConfigMapAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ConfigMapAttributeRestrictionsNested<A> withNewConfigMapAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.ConfigMap);

  public abstract A withCustomResourceDefinitionAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceDefinition);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$CustomResourceDefinitionAttributeRestrictionsNested<A> withNewCustomResourceDefinitionAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$CustomResourceDefinitionAttributeRestrictionsNested<A> withNewCustomResourceDefinitionAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceDefinition);

  public abstract A withBuildAttributeRestrictions(io.dekorate.deps.openshift.api.model.Build);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$BuildAttributeRestrictionsNested<A> withNewBuildAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$BuildAttributeRestrictionsNested<A> withNewBuildAttributeRestrictionsLike(io.dekorate.deps.openshift.api.model.Build);

  public abstract A withImageStreamTagAttributeRestrictions(io.dekorate.deps.openshift.api.model.ImageStreamTag);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ImageStreamTagAttributeRestrictionsNested<A> withNewImageStreamTagAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ImageStreamTagAttributeRestrictionsNested<A> withNewImageStreamTagAttributeRestrictionsLike(io.dekorate.deps.openshift.api.model.ImageStreamTag);

  public abstract A withGroupAttributeRestrictions(io.dekorate.deps.openshift.api.model.Group);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$GroupAttributeRestrictionsNested<A> withNewGroupAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$GroupAttributeRestrictionsNested<A> withNewGroupAttributeRestrictionsLike(io.dekorate.deps.openshift.api.model.Group);

  public abstract A withImageSignatureAttributeRestrictions(io.dekorate.deps.openshift.api.model.ImageSignature);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ImageSignatureAttributeRestrictionsNested<A> withNewImageSignatureAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ImageSignatureAttributeRestrictionsNested<A> withNewImageSignatureAttributeRestrictionsLike(io.dekorate.deps.openshift.api.model.ImageSignature);

  public abstract A withScaleAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.v1.Scale);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ScaleAttributeRestrictionsNested<A> withNewScaleAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ScaleAttributeRestrictionsNested<A> withNewScaleAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.v1.Scale);

  public abstract A withResourceQuotaAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.ResourceQuota);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ResourceQuotaAttributeRestrictionsNested<A> withNewResourceQuotaAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ResourceQuotaAttributeRestrictionsNested<A> withNewResourceQuotaAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.ResourceQuota);

  public abstract A withBuildRequestAttributeRestrictions(io.dekorate.deps.openshift.api.model.BuildRequest);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$BuildRequestAttributeRestrictionsNested<A> withNewBuildRequestAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$BuildRequestAttributeRestrictionsNested<A> withNewBuildRequestAttributeRestrictionsLike(io.dekorate.deps.openshift.api.model.BuildRequest);

  public abstract A withDaemonSetAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.apps.DaemonSet);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$DaemonSetAttributeRestrictionsNested<A> withNewDaemonSetAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$DaemonSetAttributeRestrictionsNested<A> withNewDaemonSetAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.apps.DaemonSet);

  public abstract A withImageStreamAttributeRestrictions(io.dekorate.deps.openshift.api.model.ImageStream);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ImageStreamAttributeRestrictionsNested<A> withNewImageStreamAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ImageStreamAttributeRestrictionsNested<A> withNewImageStreamAttributeRestrictionsLike(io.dekorate.deps.openshift.api.model.ImageStream);

  public abstract A withOpenshiftRoleAttributeRestrictions(io.dekorate.deps.openshift.api.model.OpenshiftRole);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$OpenshiftRoleAttributeRestrictionsNested<A> withNewOpenshiftRoleAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$OpenshiftRoleAttributeRestrictionsNested<A> withNewOpenshiftRoleAttributeRestrictionsLike(io.dekorate.deps.openshift.api.model.OpenshiftRole);

  public abstract A withOAuthClientAttributeRestrictions(io.dekorate.deps.openshift.api.model.OAuthClient);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$OAuthClientAttributeRestrictionsNested<A> withNewOAuthClientAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$OAuthClientAttributeRestrictionsNested<A> withNewOAuthClientAttributeRestrictionsLike(io.dekorate.deps.openshift.api.model.OAuthClient);

  public abstract A withIdentityAttributeRestrictions(io.dekorate.deps.openshift.api.model.Identity);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$IdentityAttributeRestrictionsNested<A> withNewIdentityAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$IdentityAttributeRestrictionsNested<A> withNewIdentityAttributeRestrictionsLike(io.dekorate.deps.openshift.api.model.Identity);

  public abstract A withLimitRangeAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.LimitRange);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$LimitRangeAttributeRestrictionsNested<A> withNewLimitRangeAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$LimitRangeAttributeRestrictionsNested<A> withNewLimitRangeAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.LimitRange);

  public abstract A withClusterVersionAttributeRestrictions(io.dekorate.deps.openshift.api.model.ClusterVersion);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ClusterVersionAttributeRestrictionsNested<A> withNewClusterVersionAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ClusterVersionAttributeRestrictionsNested<A> withNewClusterVersionAttributeRestrictionsLike(io.dekorate.deps.openshift.api.model.ClusterVersion);

  public abstract A withCSIDriverAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSIDriver);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$CSIDriverAttributeRestrictionsNested<A> withNewCSIDriverAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$CSIDriverAttributeRestrictionsNested<A> withNewCSIDriverAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSIDriver);

  public abstract A withImageStreamImportAttributeRestrictions(io.dekorate.deps.openshift.api.model.ImageStreamImport);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ImageStreamImportAttributeRestrictionsNested<A> withNewImageStreamImportAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ImageStreamImportAttributeRestrictionsNested<A> withNewImageStreamImportAttributeRestrictionsLike(io.dekorate.deps.openshift.api.model.ImageStreamImport);

  public abstract A withControllerRevisionAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.apps.ControllerRevision);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ControllerRevisionAttributeRestrictionsNested<A> withNewControllerRevisionAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ControllerRevisionAttributeRestrictionsNested<A> withNewControllerRevisionAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.apps.ControllerRevision);

  public abstract A withOpenshiftRoleBindingRestrictionAttributeRestrictions(io.dekorate.deps.openshift.api.model.OpenshiftRoleBindingRestriction);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$OpenshiftRoleBindingRestrictionAttributeRestrictionsNested<A> withNewOpenshiftRoleBindingRestrictionAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$OpenshiftRoleBindingRestrictionAttributeRestrictionsNested<A> withNewOpenshiftRoleBindingRestrictionAttributeRestrictionsLike(io.dekorate.deps.openshift.api.model.OpenshiftRoleBindingRestriction);

  public abstract A withRoleBindingAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.rbac.RoleBinding);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$RoleBindingAttributeRestrictionsNested<A> withNewRoleBindingAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$RoleBindingAttributeRestrictionsNested<A> withNewRoleBindingAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.rbac.RoleBinding);

  public abstract A withPodPresetAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.settings.PodPreset);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$PodPresetAttributeRestrictionsNested<A> withNewPodPresetAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$PodPresetAttributeRestrictionsNested<A> withNewPodPresetAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.settings.PodPreset);

  public abstract A withProjectAttributeRestrictions(io.dekorate.deps.openshift.api.model.Project);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ProjectAttributeRestrictionsNested<A> withNewProjectAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ProjectAttributeRestrictionsNested<A> withNewProjectAttributeRestrictionsLike(io.dekorate.deps.openshift.api.model.Project);

  public abstract A withNodeMetricsAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.NodeMetrics);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$NodeMetricsAttributeRestrictionsNested<A> withNewNodeMetricsAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$NodeMetricsAttributeRestrictionsNested<A> withNewNodeMetricsAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.NodeMetrics);

  public abstract A withBuildConfigAttributeRestrictions(io.dekorate.deps.openshift.api.model.BuildConfig);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$BuildConfigAttributeRestrictionsNested<A> withNewBuildConfigAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$BuildConfigAttributeRestrictionsNested<A> withNewBuildConfigAttributeRestrictionsLike(io.dekorate.deps.openshift.api.model.BuildConfig);

  public abstract A withClusterRoleAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.rbac.ClusterRole);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ClusterRoleAttributeRestrictionsNested<A> withNewClusterRoleAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ClusterRoleAttributeRestrictionsNested<A> withNewClusterRoleAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.rbac.ClusterRole);

  public abstract A withVolumeAttachmentAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.storage.VolumeAttachment);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$VolumeAttachmentAttributeRestrictionsNested<A> withNewVolumeAttachmentAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$VolumeAttachmentAttributeRestrictionsNested<A> withNewVolumeAttachmentAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.storage.VolumeAttachment);

  public abstract A withOAuthAuthorizeTokenAttributeRestrictions(io.dekorate.deps.openshift.api.model.OAuthAuthorizeToken);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$OAuthAuthorizeTokenAttributeRestrictionsNested<A> withNewOAuthAuthorizeTokenAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$OAuthAuthorizeTokenAttributeRestrictionsNested<A> withNewOAuthAuthorizeTokenAttributeRestrictionsLike(io.dekorate.deps.openshift.api.model.OAuthAuthorizeToken);

  public abstract A withSelfSubjectAccessReviewAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectAccessReview);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$SelfSubjectAccessReviewAttributeRestrictionsNested<A> withNewSelfSubjectAccessReviewAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$SelfSubjectAccessReviewAttributeRestrictionsNested<A> withNewSelfSubjectAccessReviewAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectAccessReview);

  public abstract A withProjectRequestAttributeRestrictions(io.dekorate.deps.openshift.api.model.ProjectRequest);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ProjectRequestAttributeRestrictionsNested<A> withNewProjectRequestAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ProjectRequestAttributeRestrictionsNested<A> withNewProjectRequestAttributeRestrictionsLike(io.dekorate.deps.openshift.api.model.ProjectRequest);

  public abstract A withTemplateAttributeRestrictions(io.dekorate.deps.openshift.api.model.Template);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$TemplateAttributeRestrictionsNested<A> withNewTemplateAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$TemplateAttributeRestrictionsNested<A> withNewTemplateAttributeRestrictionsLike(io.dekorate.deps.openshift.api.model.Template);

  public abstract A withPriorityClassAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.scheduling.PriorityClass);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$PriorityClassAttributeRestrictionsNested<A> withNewPriorityClassAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$PriorityClassAttributeRestrictionsNested<A> withNewPriorityClassAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.scheduling.PriorityClass);

  public abstract A withOAuthClientAuthorizationAttributeRestrictions(io.dekorate.deps.openshift.api.model.OAuthClientAuthorization);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$OAuthClientAuthorizationAttributeRestrictionsNested<A> withNewOAuthClientAuthorizationAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$OAuthClientAuthorizationAttributeRestrictionsNested<A> withNewOAuthClientAuthorizationAttributeRestrictionsLike(io.dekorate.deps.openshift.api.model.OAuthClientAuthorization);

  public abstract A withDeploymentAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.apps.Deployment);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$DeploymentAttributeRestrictionsNested<A> withNewDeploymentAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$DeploymentAttributeRestrictionsNested<A> withNewDeploymentAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.apps.Deployment);

  public abstract A withPodTemplateAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.PodTemplate);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$PodTemplateAttributeRestrictionsNested<A> withNewPodTemplateAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$PodTemplateAttributeRestrictionsNested<A> withNewPodTemplateAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.PodTemplate);

  public abstract A withEventAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.Event);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$EventAttributeRestrictionsNested<A> withNewEventAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$EventAttributeRestrictionsNested<A> withNewEventAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.Event);

  public abstract A withIngressAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.extensions.Ingress);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$IngressAttributeRestrictionsNested<A> withNewIngressAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$IngressAttributeRestrictionsNested<A> withNewIngressAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.extensions.Ingress);

  public abstract A withDeploymentConfigAttributeRestrictions(io.dekorate.deps.openshift.api.model.DeploymentConfig);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$DeploymentConfigAttributeRestrictionsNested<A> withNewDeploymentConfigAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$DeploymentConfigAttributeRestrictionsNested<A> withNewDeploymentConfigAttributeRestrictionsLike(io.dekorate.deps.openshift.api.model.DeploymentConfig);

  public abstract A withOAuthAccessTokenAttributeRestrictions(io.dekorate.deps.openshift.api.model.OAuthAccessToken);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$OAuthAccessTokenAttributeRestrictionsNested<A> withNewOAuthAccessTokenAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$OAuthAccessTokenAttributeRestrictionsNested<A> withNewOAuthAccessTokenAttributeRestrictionsLike(io.dekorate.deps.openshift.api.model.OAuthAccessToken);

  public abstract A withPersistentVolumeAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.PersistentVolume);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$PersistentVolumeAttributeRestrictionsNested<A> withNewPersistentVolumeAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$PersistentVolumeAttributeRestrictionsNested<A> withNewPersistentVolumeAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.PersistentVolume);

  public abstract A withPersistentVolumeClaimAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaim);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$PersistentVolumeClaimAttributeRestrictionsNested<A> withNewPersistentVolumeClaimAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$PersistentVolumeClaimAttributeRestrictionsNested<A> withNewPersistentVolumeClaimAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaim);

  public abstract A withPodSecurityPolicyAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.policy.PodSecurityPolicy);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$PodSecurityPolicyAttributeRestrictionsNested<A> withNewPodSecurityPolicyAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$PodSecurityPolicyAttributeRestrictionsNested<A> withNewPodSecurityPolicyAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.policy.PodSecurityPolicy);

  public abstract A withEventAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.events.Event);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$EventsEventAttributeRestrictionsNested<A> withNewEventsEventAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$EventsEventAttributeRestrictionsNested<A> withNewEventAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.events.Event);

  public abstract A withStatefulSetAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.apps.StatefulSet);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$StatefulSetAttributeRestrictionsNested<A> withNewStatefulSetAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$StatefulSetAttributeRestrictionsNested<A> withNewStatefulSetAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.apps.StatefulSet);

  public abstract A withOpenshiftClusterRoleAttributeRestrictions(io.dekorate.deps.openshift.api.model.OpenshiftClusterRole);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$OpenshiftClusterRoleAttributeRestrictionsNested<A> withNewOpenshiftClusterRoleAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$OpenshiftClusterRoleAttributeRestrictionsNested<A> withNewOpenshiftClusterRoleAttributeRestrictionsLike(io.dekorate.deps.openshift.api.model.OpenshiftClusterRole);

  public abstract A withSelfSubjectRulesReviewAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectRulesReview);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$SelfSubjectRulesReviewAttributeRestrictionsNested<A> withNewSelfSubjectRulesReviewAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$SelfSubjectRulesReviewAttributeRestrictionsNested<A> withNewSelfSubjectRulesReviewAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectRulesReview);

  public abstract A withRoleAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.rbac.Role);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$RoleAttributeRestrictionsNested<A> withNewRoleAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$RoleAttributeRestrictionsNested<A> withNewRoleAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.rbac.Role);

  public abstract A withUserAttributeRestrictions(io.dekorate.deps.openshift.api.model.User);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$UserAttributeRestrictionsNested<A> withNewUserAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$UserAttributeRestrictionsNested<A> withNewUserAttributeRestrictionsLike(io.dekorate.deps.openshift.api.model.User);

  public abstract A withComponentStatusAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.ComponentStatus);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ComponentStatusAttributeRestrictionsNested<A> withNewComponentStatusAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ComponentStatusAttributeRestrictionsNested<A> withNewComponentStatusAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.ComponentStatus);

  public abstract A withTokenReviewAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.authentication.TokenReview);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$TokenReviewAttributeRestrictionsNested<A> withNewTokenReviewAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$TokenReviewAttributeRestrictionsNested<A> withNewTokenReviewAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.authentication.TokenReview);

  public abstract A withBindingAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.Binding);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$BindingAttributeRestrictionsNested<A> withNewBindingAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$BindingAttributeRestrictionsNested<A> withNewBindingAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.Binding);

  public abstract A withSecretAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.Secret);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$SecretAttributeRestrictionsNested<A> withNewSecretAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$SecretAttributeRestrictionsNested<A> withNewSecretAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.Secret);

  public abstract A withSecurityContextConstraintsAttributeRestrictions(io.dekorate.deps.openshift.api.model.SecurityContextConstraints);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$SecurityContextConstraintsAttributeRestrictionsNested<A> withNewSecurityContextConstraintsAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$SecurityContextConstraintsAttributeRestrictionsNested<A> withNewSecurityContextConstraintsAttributeRestrictionsLike(io.dekorate.deps.openshift.api.model.SecurityContextConstraints);

  public abstract A withNetNamespaceAttributeRestrictions(io.dekorate.deps.openshift.api.model.NetNamespace);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$NetNamespaceAttributeRestrictionsNested<A> withNewNetNamespaceAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$NetNamespaceAttributeRestrictionsNested<A> withNewNetNamespaceAttributeRestrictionsLike(io.dekorate.deps.openshift.api.model.NetNamespace);

  public abstract A withNodeAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.Node);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$NodeAttributeRestrictionsNested<A> withNewNodeAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$NodeAttributeRestrictionsNested<A> withNewNodeAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.Node);

  public abstract A withJobAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.batch.Job);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$JobAttributeRestrictionsNested<A> withNewJobAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$JobAttributeRestrictionsNested<A> withNewJobAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.batch.Job);

  public abstract A withCertificateSigningRequestAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.certificates.CertificateSigningRequest);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$CertificateSigningRequestAttributeRestrictionsNested<A> withNewCertificateSigningRequestAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$CertificateSigningRequestAttributeRestrictionsNested<A> withNewCertificateSigningRequestAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.certificates.CertificateSigningRequest);

  public abstract A withServiceAccountAttributeRestrictions(io.dekorate.deps.kubernetes.api.model.ServiceAccount);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ServiceAccountAttributeRestrictionsNested<A> withNewServiceAccountAttributeRestrictions();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRuleFluent$ServiceAccountAttributeRestrictionsNested<A> withNewServiceAccountAttributeRestrictionsLike(io.dekorate.deps.kubernetes.api.model.ServiceAccount);

  public abstract A addToNonResourceURLs(int, java.lang.String);

  public abstract A setToNonResourceURLs(int, java.lang.String);

  public abstract A addToNonResourceURLs(java.lang.String...);

  public abstract A addAllToNonResourceURLs(java.util.Collection<java.lang.String>);

  public abstract A removeFromNonResourceURLs(java.lang.String...);

  public abstract A removeAllFromNonResourceURLs(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getNonResourceURLs();

  public abstract java.lang.String getNonResourceURL(int);

  public abstract java.lang.String getFirstNonResourceURL();

  public abstract java.lang.String getLastNonResourceURL();

  public abstract java.lang.String getMatchingNonResourceURL(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingNonResourceURL(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract A withNonResourceURLs(java.util.List<java.lang.String>);

  public abstract A withNonResourceURLs(java.lang.String...);

  public abstract java.lang.Boolean hasNonResourceURLs();

  public abstract A addNewNonResourceURL(java.lang.String);

  public abstract A addNewNonResourceURL(java.lang.StringBuilder);

  public abstract A addNewNonResourceURL(java.lang.StringBuffer);

  public abstract A addToResourceNames(int, java.lang.String);

  public abstract A setToResourceNames(int, java.lang.String);

  public abstract A addToResourceNames(java.lang.String...);

  public abstract A addAllToResourceNames(java.util.Collection<java.lang.String>);

  public abstract A removeFromResourceNames(java.lang.String...);

  public abstract A removeAllFromResourceNames(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getResourceNames();

  public abstract java.lang.String getResourceName(int);

  public abstract java.lang.String getFirstResourceName();

  public abstract java.lang.String getLastResourceName();

  public abstract java.lang.String getMatchingResourceName(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingResourceName(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract A withResourceNames(java.util.List<java.lang.String>);

  public abstract A withResourceNames(java.lang.String...);

  public abstract java.lang.Boolean hasResourceNames();

  public abstract A addNewResourceName(java.lang.String);

  public abstract A addNewResourceName(java.lang.StringBuilder);

  public abstract A addNewResourceName(java.lang.StringBuffer);

  public abstract A addToResources(int, java.lang.String);

  public abstract A setToResources(int, java.lang.String);

  public abstract A addToResources(java.lang.String...);

  public abstract A addAllToResources(java.util.Collection<java.lang.String>);

  public abstract A removeFromResources(java.lang.String...);

  public abstract A removeAllFromResources(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getResources();

  public abstract java.lang.String getResource(int);

  public abstract java.lang.String getFirstResource();

  public abstract java.lang.String getLastResource();

  public abstract java.lang.String getMatchingResource(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingResource(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract A withResources(java.util.List<java.lang.String>);

  public abstract A withResources(java.lang.String...);

  public abstract java.lang.Boolean hasResources();

  public abstract A addNewResource(java.lang.String);

  public abstract A addNewResource(java.lang.StringBuilder);

  public abstract A addNewResource(java.lang.StringBuffer);

  public abstract A addToVerbs(int, java.lang.String);

  public abstract A setToVerbs(int, java.lang.String);

  public abstract A addToVerbs(java.lang.String...);

  public abstract A addAllToVerbs(java.util.Collection<java.lang.String>);

  public abstract A removeFromVerbs(java.lang.String...);

  public abstract A removeAllFromVerbs(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getVerbs();

  public abstract java.lang.String getVerb(int);

  public abstract java.lang.String getFirstVerb();

  public abstract java.lang.String getLastVerb();

  public abstract java.lang.String getMatchingVerb(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingVerb(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract A withVerbs(java.util.List<java.lang.String>);

  public abstract A withVerbs(java.lang.String...);

  public abstract java.lang.Boolean hasVerbs();

  public abstract A addNewVerb(java.lang.String);

  public abstract A addNewVerb(java.lang.StringBuilder);

  public abstract A addNewVerb(java.lang.StringBuffer);
}
