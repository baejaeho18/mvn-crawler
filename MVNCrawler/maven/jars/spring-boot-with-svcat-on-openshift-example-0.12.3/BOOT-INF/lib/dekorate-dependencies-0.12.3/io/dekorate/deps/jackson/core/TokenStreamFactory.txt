Compiled from "TokenStreamFactory.java"
public abstract class io.dekorate.deps.jackson.core.TokenStreamFactory implements io.dekorate.deps.jackson.core.Versioned,java.io.Serializable {
  private static final long serialVersionUID;

  public io.dekorate.deps.jackson.core.TokenStreamFactory();
    Code:
       0: aload_0
       1: invokespecial #26                 // Method java/lang/Object."<init>":()V
       4: return

  public abstract boolean requiresPropertyOrdering();

  public abstract boolean canHandleBinaryNatively();

  public abstract boolean canParseAsync();

  public abstract java.lang.Class<? extends io.dekorate.deps.jackson.core.FormatFeature> getFormatReadFeatureType();

  public abstract java.lang.Class<? extends io.dekorate.deps.jackson.core.FormatFeature> getFormatWriteFeatureType();

  public abstract boolean canUseSchema(io.dekorate.deps.jackson.core.FormatSchema);

  public abstract java.lang.String getFormatName();

  public abstract boolean isEnabled(io.dekorate.deps.jackson.core.JsonParser$Feature);

  public abstract boolean isEnabled(io.dekorate.deps.jackson.core.JsonGenerator$Feature);

  public abstract int getParserFeatures();

  public abstract int getGeneratorFeatures();

  public abstract int getFormatParserFeatures();

  public abstract int getFormatGeneratorFeatures();

  public abstract io.dekorate.deps.jackson.core.JsonParser createParser(byte[]) throws java.io.IOException;

  public abstract io.dekorate.deps.jackson.core.JsonParser createParser(byte[], int, int) throws java.io.IOException;

  public abstract io.dekorate.deps.jackson.core.JsonParser createParser(char[]) throws java.io.IOException;

  public abstract io.dekorate.deps.jackson.core.JsonParser createParser(char[], int, int) throws java.io.IOException;

  public abstract io.dekorate.deps.jackson.core.JsonParser createParser(java.io.DataInput) throws java.io.IOException;

  public abstract io.dekorate.deps.jackson.core.JsonParser createParser(java.io.File) throws java.io.IOException;

  public abstract io.dekorate.deps.jackson.core.JsonParser createParser(java.io.InputStream) throws java.io.IOException;

  public abstract io.dekorate.deps.jackson.core.JsonParser createParser(java.io.Reader) throws java.io.IOException;

  public abstract io.dekorate.deps.jackson.core.JsonParser createParser(java.lang.String) throws java.io.IOException;

  public abstract io.dekorate.deps.jackson.core.JsonParser createParser(java.net.URL) throws java.io.IOException;

  public abstract io.dekorate.deps.jackson.core.JsonParser createNonBlockingByteArrayParser() throws java.io.IOException;

  public abstract io.dekorate.deps.jackson.core.JsonGenerator createGenerator(java.io.DataOutput, io.dekorate.deps.jackson.core.JsonEncoding) throws java.io.IOException;

  public abstract io.dekorate.deps.jackson.core.JsonGenerator createGenerator(java.io.DataOutput) throws java.io.IOException;

  public abstract io.dekorate.deps.jackson.core.JsonGenerator createGenerator(java.io.File, io.dekorate.deps.jackson.core.JsonEncoding) throws java.io.IOException;

  public abstract io.dekorate.deps.jackson.core.JsonGenerator createGenerator(java.io.OutputStream) throws java.io.IOException;

  public abstract io.dekorate.deps.jackson.core.JsonGenerator createGenerator(java.io.OutputStream, io.dekorate.deps.jackson.core.JsonEncoding) throws java.io.IOException;

  public abstract io.dekorate.deps.jackson.core.JsonGenerator createGenerator(java.io.Writer) throws java.io.IOException;

  protected java.io.OutputStream _createDataOutputWrapper(java.io.DataOutput);
    Code:
       0: new           #74                 // class io/dekorate/deps/jackson/core/io/DataOutputAsStream
       3: dup
       4: aload_1
       5: invokespecial #77                 // Method io/dekorate/deps/jackson/core/io/DataOutputAsStream."<init>":(Ljava/io/DataOutput;)V
       8: areturn

  protected java.io.InputStream _optimizedStreamFromURL(java.net.URL) throws java.io.IOException;
    Code:
       0: ldc           #83                 // String file
       2: aload_1
       3: invokevirtual #88                 // Method java/net/URL.getProtocol:()Ljava/lang/String;
       6: invokevirtual #94                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifeq          54
      12: aload_1
      13: invokevirtual #97                 // Method java/net/URL.getHost:()Ljava/lang/String;
      16: astore_2
      17: aload_2
      18: ifnull        28
      21: aload_2
      22: invokevirtual #100                // Method java/lang/String.length:()I
      25: ifne          54
      28: aload_1
      29: invokevirtual #103                // Method java/net/URL.getPath:()Ljava/lang/String;
      32: astore_3
      33: aload_3
      34: bipush        37
      36: invokevirtual #107                // Method java/lang/String.indexOf:(I)I
      39: ifge          54
      42: new           #109                // class java/io/FileInputStream
      45: dup
      46: aload_1
      47: invokevirtual #103                // Method java/net/URL.getPath:()Ljava/lang/String;
      50: invokespecial #112                // Method java/io/FileInputStream."<init>":(Ljava/lang/String;)V
      53: areturn
      54: aload_1
      55: invokevirtual #116                // Method java/net/URL.openStream:()Ljava/io/InputStream;
      58: areturn
}
