Compiled from "ServiceInstanceStatusFluent.java"
public interface io.dekorate.deps.servicecatalog.api.model.ServiceInstanceStatusFluent<A extends io.dekorate.deps.servicecatalog.api.model.ServiceInstanceStatusFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.Boolean isAsyncOpInProgress();

  public abstract A withAsyncOpInProgress(java.lang.Boolean);

  public abstract java.lang.Boolean hasAsyncOpInProgress();

  public abstract A withNewAsyncOpInProgress(java.lang.String);

  public abstract A withNewAsyncOpInProgress(boolean);

  public abstract A addToConditions(int, io.dekorate.deps.servicecatalog.api.model.ServiceInstanceCondition);

  public abstract A setToConditions(int, io.dekorate.deps.servicecatalog.api.model.ServiceInstanceCondition);

  public abstract A addToConditions(io.dekorate.deps.servicecatalog.api.model.ServiceInstanceCondition...);

  public abstract A addAllToConditions(java.util.Collection<io.dekorate.deps.servicecatalog.api.model.ServiceInstanceCondition>);

  public abstract A removeFromConditions(io.dekorate.deps.servicecatalog.api.model.ServiceInstanceCondition...);

  public abstract A removeAllFromConditions(java.util.Collection<io.dekorate.deps.servicecatalog.api.model.ServiceInstanceCondition>);

  public abstract A removeMatchingFromConditions(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.servicecatalog.api.model.ServiceInstanceConditionBuilder>);

  public abstract java.util.List<io.dekorate.deps.servicecatalog.api.model.ServiceInstanceCondition> getConditions();

  public abstract java.util.List<io.dekorate.deps.servicecatalog.api.model.ServiceInstanceCondition> buildConditions();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceCondition buildCondition(int);

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceCondition buildFirstCondition();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceCondition buildLastCondition();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceCondition buildMatchingCondition(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.servicecatalog.api.model.ServiceInstanceConditionBuilder>);

  public abstract java.lang.Boolean hasMatchingCondition(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.servicecatalog.api.model.ServiceInstanceConditionBuilder>);

  public abstract A withConditions(java.util.List<io.dekorate.deps.servicecatalog.api.model.ServiceInstanceCondition>);

  public abstract A withConditions(io.dekorate.deps.servicecatalog.api.model.ServiceInstanceCondition...);

  public abstract java.lang.Boolean hasConditions();

  public abstract A addNewCondition(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceStatusFluent$ConditionsNested<A> addNewCondition();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceStatusFluent$ConditionsNested<A> addNewConditionLike(io.dekorate.deps.servicecatalog.api.model.ServiceInstanceCondition);

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceStatusFluent$ConditionsNested<A> setNewConditionLike(int, io.dekorate.deps.servicecatalog.api.model.ServiceInstanceCondition);

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceStatusFluent$ConditionsNested<A> editCondition(int);

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceStatusFluent$ConditionsNested<A> editFirstCondition();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceStatusFluent$ConditionsNested<A> editLastCondition();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceStatusFluent$ConditionsNested<A> editMatchingCondition(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.servicecatalog.api.model.ServiceInstanceConditionBuilder>);

  public abstract java.lang.String getCurrentOperation();

  public abstract A withCurrentOperation(java.lang.String);

  public abstract java.lang.Boolean hasCurrentOperation();

  public abstract A withNewCurrentOperation(java.lang.String);

  public abstract A withNewCurrentOperation(java.lang.StringBuilder);

  public abstract A withNewCurrentOperation(java.lang.StringBuffer);

  public abstract java.lang.String getDashboardURL();

  public abstract A withDashboardURL(java.lang.String);

  public abstract java.lang.Boolean hasDashboardURL();

  public abstract A withNewDashboardURL(java.lang.String);

  public abstract A withNewDashboardURL(java.lang.StringBuilder);

  public abstract A withNewDashboardURL(java.lang.StringBuffer);

  public abstract java.lang.String getDeprovisionStatus();

  public abstract A withDeprovisionStatus(java.lang.String);

  public abstract java.lang.Boolean hasDeprovisionStatus();

  public abstract A withNewDeprovisionStatus(java.lang.String);

  public abstract A withNewDeprovisionStatus(java.lang.StringBuilder);

  public abstract A withNewDeprovisionStatus(java.lang.StringBuffer);

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstancePropertiesState getExternalProperties();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstancePropertiesState buildExternalProperties();

  public abstract A withExternalProperties(io.dekorate.deps.servicecatalog.api.model.ServiceInstancePropertiesState);

  public abstract java.lang.Boolean hasExternalProperties();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceStatusFluent$ExternalPropertiesNested<A> withNewExternalProperties();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceStatusFluent$ExternalPropertiesNested<A> withNewExternalPropertiesLike(io.dekorate.deps.servicecatalog.api.model.ServiceInstancePropertiesState);

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceStatusFluent$ExternalPropertiesNested<A> editExternalProperties();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceStatusFluent$ExternalPropertiesNested<A> editOrNewExternalProperties();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceStatusFluent$ExternalPropertiesNested<A> editOrNewExternalPropertiesLike(io.dekorate.deps.servicecatalog.api.model.ServiceInstancePropertiesState);

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstancePropertiesState getInProgressProperties();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstancePropertiesState buildInProgressProperties();

  public abstract A withInProgressProperties(io.dekorate.deps.servicecatalog.api.model.ServiceInstancePropertiesState);

  public abstract java.lang.Boolean hasInProgressProperties();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceStatusFluent$InProgressPropertiesNested<A> withNewInProgressProperties();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceStatusFluent$InProgressPropertiesNested<A> withNewInProgressPropertiesLike(io.dekorate.deps.servicecatalog.api.model.ServiceInstancePropertiesState);

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceStatusFluent$InProgressPropertiesNested<A> editInProgressProperties();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceStatusFluent$InProgressPropertiesNested<A> editOrNewInProgressProperties();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceStatusFluent$InProgressPropertiesNested<A> editOrNewInProgressPropertiesLike(io.dekorate.deps.servicecatalog.api.model.ServiceInstancePropertiesState);

  public abstract java.lang.String getLastOperation();

  public abstract A withLastOperation(java.lang.String);

  public abstract java.lang.Boolean hasLastOperation();

  public abstract A withNewLastOperation(java.lang.String);

  public abstract A withNewLastOperation(java.lang.StringBuilder);

  public abstract A withNewLastOperation(java.lang.StringBuffer);

  public abstract java.lang.Long getObservedGeneration();

  public abstract A withObservedGeneration(java.lang.Long);

  public abstract java.lang.Boolean hasObservedGeneration();

  public abstract java.lang.String getOperationStartTime();

  public abstract A withOperationStartTime(java.lang.String);

  public abstract java.lang.Boolean hasOperationStartTime();

  public abstract A withNewOperationStartTime(java.lang.String);

  public abstract A withNewOperationStartTime(java.lang.StringBuilder);

  public abstract A withNewOperationStartTime(java.lang.StringBuffer);

  public abstract java.lang.Boolean isOrphanMitigationInProgress();

  public abstract A withOrphanMitigationInProgress(java.lang.Boolean);

  public abstract java.lang.Boolean hasOrphanMitigationInProgress();

  public abstract A withNewOrphanMitigationInProgress(java.lang.String);

  public abstract A withNewOrphanMitigationInProgress(boolean);

  public abstract java.lang.String getProvisionStatus();

  public abstract A withProvisionStatus(java.lang.String);

  public abstract java.lang.Boolean hasProvisionStatus();

  public abstract A withNewProvisionStatus(java.lang.String);

  public abstract A withNewProvisionStatus(java.lang.StringBuilder);

  public abstract A withNewProvisionStatus(java.lang.StringBuffer);

  public abstract java.lang.Long getReconciledGeneration();

  public abstract A withReconciledGeneration(java.lang.Long);

  public abstract java.lang.Boolean hasReconciledGeneration();
}
