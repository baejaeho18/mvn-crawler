Compiled from "ServiceInstanceSpecFluent.java"
public interface io.dekorate.deps.servicecatalog.api.model.ServiceInstanceSpecFluent<A extends io.dekorate.deps.servicecatalog.api.model.ServiceInstanceSpecFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getClusterServiceClassExternalID();

  public abstract A withClusterServiceClassExternalID(java.lang.String);

  public abstract java.lang.Boolean hasClusterServiceClassExternalID();

  public abstract A withNewClusterServiceClassExternalID(java.lang.String);

  public abstract A withNewClusterServiceClassExternalID(java.lang.StringBuilder);

  public abstract A withNewClusterServiceClassExternalID(java.lang.StringBuffer);

  public abstract java.lang.String getClusterServiceClassExternalName();

  public abstract A withClusterServiceClassExternalName(java.lang.String);

  public abstract java.lang.Boolean hasClusterServiceClassExternalName();

  public abstract A withNewClusterServiceClassExternalName(java.lang.String);

  public abstract A withNewClusterServiceClassExternalName(java.lang.StringBuilder);

  public abstract A withNewClusterServiceClassExternalName(java.lang.StringBuffer);

  public abstract java.lang.String getClusterServiceClassName();

  public abstract A withClusterServiceClassName(java.lang.String);

  public abstract java.lang.Boolean hasClusterServiceClassName();

  public abstract A withNewClusterServiceClassName(java.lang.String);

  public abstract A withNewClusterServiceClassName(java.lang.StringBuilder);

  public abstract A withNewClusterServiceClassName(java.lang.StringBuffer);

  public abstract io.dekorate.deps.servicecatalog.api.model.ClusterObjectReference getClusterServiceClassRef();

  public abstract io.dekorate.deps.servicecatalog.api.model.ClusterObjectReference buildClusterServiceClassRef();

  public abstract A withClusterServiceClassRef(io.dekorate.deps.servicecatalog.api.model.ClusterObjectReference);

  public abstract java.lang.Boolean hasClusterServiceClassRef();

  public abstract A withNewClusterServiceClassRef(java.lang.String);

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceSpecFluent$ClusterServiceClassRefNested<A> withNewClusterServiceClassRef();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceSpecFluent$ClusterServiceClassRefNested<A> withNewClusterServiceClassRefLike(io.dekorate.deps.servicecatalog.api.model.ClusterObjectReference);

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceSpecFluent$ClusterServiceClassRefNested<A> editClusterServiceClassRef();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceSpecFluent$ClusterServiceClassRefNested<A> editOrNewClusterServiceClassRef();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceSpecFluent$ClusterServiceClassRefNested<A> editOrNewClusterServiceClassRefLike(io.dekorate.deps.servicecatalog.api.model.ClusterObjectReference);

  public abstract java.lang.String getClusterServicePlanExternalID();

  public abstract A withClusterServicePlanExternalID(java.lang.String);

  public abstract java.lang.Boolean hasClusterServicePlanExternalID();

  public abstract A withNewClusterServicePlanExternalID(java.lang.String);

  public abstract A withNewClusterServicePlanExternalID(java.lang.StringBuilder);

  public abstract A withNewClusterServicePlanExternalID(java.lang.StringBuffer);

  public abstract java.lang.String getClusterServicePlanExternalName();

  public abstract A withClusterServicePlanExternalName(java.lang.String);

  public abstract java.lang.Boolean hasClusterServicePlanExternalName();

  public abstract A withNewClusterServicePlanExternalName(java.lang.String);

  public abstract A withNewClusterServicePlanExternalName(java.lang.StringBuilder);

  public abstract A withNewClusterServicePlanExternalName(java.lang.StringBuffer);

  public abstract java.lang.String getClusterServicePlanName();

  public abstract A withClusterServicePlanName(java.lang.String);

  public abstract java.lang.Boolean hasClusterServicePlanName();

  public abstract A withNewClusterServicePlanName(java.lang.String);

  public abstract A withNewClusterServicePlanName(java.lang.StringBuilder);

  public abstract A withNewClusterServicePlanName(java.lang.StringBuffer);

  public abstract io.dekorate.deps.servicecatalog.api.model.ClusterObjectReference getClusterServicePlanRef();

  public abstract io.dekorate.deps.servicecatalog.api.model.ClusterObjectReference buildClusterServicePlanRef();

  public abstract A withClusterServicePlanRef(io.dekorate.deps.servicecatalog.api.model.ClusterObjectReference);

  public abstract java.lang.Boolean hasClusterServicePlanRef();

  public abstract A withNewClusterServicePlanRef(java.lang.String);

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceSpecFluent$ClusterServicePlanRefNested<A> withNewClusterServicePlanRef();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceSpecFluent$ClusterServicePlanRefNested<A> withNewClusterServicePlanRefLike(io.dekorate.deps.servicecatalog.api.model.ClusterObjectReference);

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceSpecFluent$ClusterServicePlanRefNested<A> editClusterServicePlanRef();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceSpecFluent$ClusterServicePlanRefNested<A> editOrNewClusterServicePlanRef();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceSpecFluent$ClusterServicePlanRefNested<A> editOrNewClusterServicePlanRefLike(io.dekorate.deps.servicecatalog.api.model.ClusterObjectReference);

  public abstract java.lang.String getExternalID();

  public abstract A withExternalID(java.lang.String);

  public abstract java.lang.Boolean hasExternalID();

  public abstract A withNewExternalID(java.lang.String);

  public abstract A withNewExternalID(java.lang.StringBuilder);

  public abstract A withNewExternalID(java.lang.StringBuffer);

  public abstract A addToParameters(java.lang.String, java.lang.Object);

  public abstract A addToParameters(java.util.Map<java.lang.String, java.lang.Object>);

  public abstract A removeFromParameters(java.lang.String);

  public abstract A removeFromParameters(java.util.Map<java.lang.String, java.lang.Object>);

  public abstract java.util.Map<java.lang.String, java.lang.Object> getParameters();

  public abstract A withParameters(java.util.Map<java.lang.String, java.lang.Object>);

  public abstract java.lang.Boolean hasParameters();

  public abstract A addToParametersFrom(int, io.dekorate.deps.servicecatalog.api.model.ParametersFromSource);

  public abstract A setToParametersFrom(int, io.dekorate.deps.servicecatalog.api.model.ParametersFromSource);

  public abstract A addToParametersFrom(io.dekorate.deps.servicecatalog.api.model.ParametersFromSource...);

  public abstract A addAllToParametersFrom(java.util.Collection<io.dekorate.deps.servicecatalog.api.model.ParametersFromSource>);

  public abstract A removeFromParametersFrom(io.dekorate.deps.servicecatalog.api.model.ParametersFromSource...);

  public abstract A removeAllFromParametersFrom(java.util.Collection<io.dekorate.deps.servicecatalog.api.model.ParametersFromSource>);

  public abstract A removeMatchingFromParametersFrom(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.servicecatalog.api.model.ParametersFromSourceBuilder>);

  public abstract java.util.List<io.dekorate.deps.servicecatalog.api.model.ParametersFromSource> getParametersFrom();

  public abstract java.util.List<io.dekorate.deps.servicecatalog.api.model.ParametersFromSource> buildParametersFrom();

  public abstract io.dekorate.deps.servicecatalog.api.model.ParametersFromSource buildParametersFrom(int);

  public abstract io.dekorate.deps.servicecatalog.api.model.ParametersFromSource buildFirstParametersFrom();

  public abstract io.dekorate.deps.servicecatalog.api.model.ParametersFromSource buildLastParametersFrom();

  public abstract io.dekorate.deps.servicecatalog.api.model.ParametersFromSource buildMatchingParametersFrom(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.servicecatalog.api.model.ParametersFromSourceBuilder>);

  public abstract java.lang.Boolean hasMatchingParametersFrom(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.servicecatalog.api.model.ParametersFromSourceBuilder>);

  public abstract A withParametersFrom(java.util.List<io.dekorate.deps.servicecatalog.api.model.ParametersFromSource>);

  public abstract A withParametersFrom(io.dekorate.deps.servicecatalog.api.model.ParametersFromSource...);

  public abstract java.lang.Boolean hasParametersFrom();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceSpecFluent$ParametersFromNested<A> addNewParametersFrom();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceSpecFluent$ParametersFromNested<A> addNewParametersFromLike(io.dekorate.deps.servicecatalog.api.model.ParametersFromSource);

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceSpecFluent$ParametersFromNested<A> setNewParametersFromLike(int, io.dekorate.deps.servicecatalog.api.model.ParametersFromSource);

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceSpecFluent$ParametersFromNested<A> editParametersFrom(int);

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceSpecFluent$ParametersFromNested<A> editFirstParametersFrom();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceSpecFluent$ParametersFromNested<A> editLastParametersFrom();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceSpecFluent$ParametersFromNested<A> editMatchingParametersFrom(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.servicecatalog.api.model.ParametersFromSourceBuilder>);

  public abstract java.lang.Long getUpdateRequests();

  public abstract A withUpdateRequests(java.lang.Long);

  public abstract java.lang.Boolean hasUpdateRequests();

  public abstract io.dekorate.deps.servicecatalog.api.model.UserInfo getUserInfo();

  public abstract io.dekorate.deps.servicecatalog.api.model.UserInfo buildUserInfo();

  public abstract A withUserInfo(io.dekorate.deps.servicecatalog.api.model.UserInfo);

  public abstract java.lang.Boolean hasUserInfo();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceSpecFluent$UserInfoNested<A> withNewUserInfo();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceSpecFluent$UserInfoNested<A> withNewUserInfoLike(io.dekorate.deps.servicecatalog.api.model.UserInfo);

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceSpecFluent$UserInfoNested<A> editUserInfo();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceSpecFluent$UserInfoNested<A> editOrNewUserInfo();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceInstanceSpecFluent$UserInfoNested<A> editOrNewUserInfoLike(io.dekorate.deps.servicecatalog.api.model.UserInfo);
}
