Compiled from "JsonStreamContext.java"
public abstract class io.dekorate.deps.jackson.core.JsonStreamContext {
  protected static final int TYPE_ROOT;

  protected static final int TYPE_ARRAY;

  protected static final int TYPE_OBJECT;

  protected int _type;

  protected int _index;

  protected io.dekorate.deps.jackson.core.JsonStreamContext();
    Code:
       0: aload_0
       1: invokespecial #18                 // Method java/lang/Object."<init>":()V
       4: return

  protected io.dekorate.deps.jackson.core.JsonStreamContext(io.dekorate.deps.jackson.core.JsonStreamContext);
    Code:
       0: aload_0
       1: invokespecial #18                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: getfield      #23                 // Field _type:I
       9: putfield      #23                 // Field _type:I
      12: aload_0
      13: aload_1
      14: getfield      #25                 // Field _index:I
      17: putfield      #25                 // Field _index:I
      20: return

  protected io.dekorate.deps.jackson.core.JsonStreamContext(int, int);
    Code:
       0: aload_0
       1: invokespecial #18                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #23                 // Field _type:I
       9: aload_0
      10: iload_2
      11: putfield      #25                 // Field _index:I
      14: return

  public abstract io.dekorate.deps.jackson.core.JsonStreamContext getParent();

  public final boolean inArray();
    Code:
       0: aload_0
       1: getfield      #23                 // Field _type:I
       4: iconst_1
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public final boolean inRoot();
    Code:
       0: aload_0
       1: getfield      #23                 // Field _type:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public final boolean inObject();
    Code:
       0: aload_0
       1: getfield      #23                 // Field _type:I
       4: iconst_2
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public final java.lang.String getTypeDesc();
    Code:
       0: aload_0
       1: getfield      #23                 // Field _type:I
       4: tableswitch   { // 0 to 2
                     0: 32
                     1: 35
                     2: 38
               default: 41
          }
      32: ldc           #40                 // String ROOT
      34: areturn
      35: ldc           #42                 // String ARRAY
      37: areturn
      38: ldc           #44                 // String OBJECT
      40: areturn
      41: ldc           #46                 // String ?
      43: areturn

  public java.lang.String typeDesc();
    Code:
       0: aload_0
       1: getfield      #23                 // Field _type:I
       4: tableswitch   { // 0 to 2
                     0: 32
                     1: 35
                     2: 38
               default: 41
          }
      32: ldc           #49                 // String root
      34: areturn
      35: ldc           #51                 // String Array
      37: areturn
      38: ldc           #53                 // String Object
      40: areturn
      41: ldc           #46                 // String ?
      43: areturn

  public final int getEntryCount();
    Code:
       0: aload_0
       1: getfield      #25                 // Field _index:I
       4: iconst_1
       5: iadd
       6: ireturn

  public final int getCurrentIndex();
    Code:
       0: aload_0
       1: getfield      #25                 // Field _index:I
       4: ifge          11
       7: iconst_0
       8: goto          15
      11: aload_0
      12: getfield      #25                 // Field _index:I
      15: ireturn

  public boolean hasCurrentIndex();
    Code:
       0: aload_0
       1: getfield      #25                 // Field _index:I
       4: iflt          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean hasPathSegment();
    Code:
       0: aload_0
       1: getfield      #23                 // Field _type:I
       4: iconst_2
       5: if_icmpne     13
       8: aload_0
       9: invokevirtual #61                 // Method hasCurrentName:()Z
      12: ireturn
      13: aload_0
      14: getfield      #23                 // Field _type:I
      17: iconst_1
      18: if_icmpne     26
      21: aload_0
      22: invokevirtual #63                 // Method hasCurrentIndex:()Z
      25: ireturn
      26: iconst_0
      27: ireturn

  public abstract java.lang.String getCurrentName();

  public boolean hasCurrentName();
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method getCurrentName:()Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.lang.Object getCurrentValue();
    Code:
       0: aconst_null
       1: areturn

  public void setCurrentValue(java.lang.Object);
    Code:
       0: return

  public io.dekorate.deps.jackson.core.JsonPointer pathAsPointer();
    Code:
       0: aload_0
       1: iconst_0
       2: invokestatic  #80                 // Method io/dekorate/deps/jackson/core/JsonPointer.forPath:(Lio/dekorate/deps/jackson/core/JsonStreamContext;Z)Lio/dekorate/deps/jackson/core/JsonPointer;
       5: areturn

  public io.dekorate.deps.jackson.core.JsonPointer pathAsPointer(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #80                 // Method io/dekorate/deps/jackson/core/JsonPointer.forPath:(Lio/dekorate/deps/jackson/core/JsonStreamContext;Z)Lio/dekorate/deps/jackson/core/JsonPointer;
       5: areturn

  public io.dekorate.deps.jackson.core.JsonLocation getStartLocation(java.lang.Object);
    Code:
       0: getstatic     #91                 // Field io/dekorate/deps/jackson/core/JsonLocation.NA:Lio/dekorate/deps/jackson/core/JsonLocation;
       3: areturn

  public java.lang.String toString();
    Code:
       0: new           #95                 // class java/lang/StringBuilder
       3: dup
       4: bipush        64
       6: invokespecial #98                 // Method java/lang/StringBuilder."<init>":(I)V
       9: astore_1
      10: aload_0
      11: getfield      #23                 // Field _type:I
      14: tableswitch   { // 0 to 2
                     0: 40
                     1: 50
                     2: 76
               default: 76
          }
      40: aload_1
      41: ldc           #100                // String /
      43: invokevirtual #104                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: pop
      47: goto          128
      50: aload_1
      51: bipush        91
      53: invokevirtual #107                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      56: pop
      57: aload_1
      58: aload_0
      59: invokevirtual #109                // Method getCurrentIndex:()I
      62: invokevirtual #112                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      65: pop
      66: aload_1
      67: bipush        93
      69: invokevirtual #107                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      72: pop
      73: goto          128
      76: aload_1
      77: bipush        123
      79: invokevirtual #107                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      82: pop
      83: aload_0
      84: invokevirtual #66                 // Method getCurrentName:()Ljava/lang/String;
      87: astore_2
      88: aload_2
      89: ifnull        114
      92: aload_1
      93: bipush        34
      95: invokevirtual #107                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      98: pop
      99: aload_1
     100: aload_2
     101: invokestatic  #118                // Method io/dekorate/deps/jackson/core/io/CharTypes.appendQuoted:(Ljava/lang/StringBuilder;Ljava/lang/String;)V
     104: aload_1
     105: bipush        34
     107: invokevirtual #107                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     110: pop
     111: goto          121
     114: aload_1
     115: bipush        63
     117: invokevirtual #107                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     120: pop
     121: aload_1
     122: bipush        125
     124: invokevirtual #107                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     127: pop
     128: aload_1
     129: invokevirtual #122                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     132: areturn
}
