Compiled from "PipelineRunStatusFluent.java"
public interface io.dekorate.deps.tekton.pipeline.v1beta1.PipelineRunStatusFluent<A extends io.dekorate.deps.tekton.pipeline.v1beta1.PipelineRunStatusFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getCompletionTime();

  public abstract A withCompletionTime(java.lang.String);

  public abstract java.lang.Boolean hasCompletionTime();

  public abstract A withNewCompletionTime(java.lang.String);

  public abstract A withNewCompletionTime(java.lang.StringBuilder);

  public abstract A withNewCompletionTime(java.lang.StringBuffer);

  public abstract A addToConditions(int, io.dekorate.deps.knative.v1.Condition);

  public abstract A setToConditions(int, io.dekorate.deps.knative.v1.Condition);

  public abstract A addToConditions(io.dekorate.deps.knative.v1.Condition...);

  public abstract A addAllToConditions(java.util.Collection<io.dekorate.deps.knative.v1.Condition>);

  public abstract A removeFromConditions(io.dekorate.deps.knative.v1.Condition...);

  public abstract A removeAllFromConditions(java.util.Collection<io.dekorate.deps.knative.v1.Condition>);

  public abstract java.util.List<io.dekorate.deps.knative.v1.Condition> getConditions();

  public abstract io.dekorate.deps.knative.v1.Condition getCondition(int);

  public abstract io.dekorate.deps.knative.v1.Condition getFirstCondition();

  public abstract io.dekorate.deps.knative.v1.Condition getLastCondition();

  public abstract io.dekorate.deps.knative.v1.Condition getMatchingCondition(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.knative.v1.Condition>);

  public abstract java.lang.Boolean hasMatchingCondition(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.knative.v1.Condition>);

  public abstract A withConditions(java.util.List<io.dekorate.deps.knative.v1.Condition>);

  public abstract A withConditions(io.dekorate.deps.knative.v1.Condition...);

  public abstract java.lang.Boolean hasConditions();

  public abstract java.lang.Long getObservedGeneration();

  public abstract A withObservedGeneration(java.lang.Long);

  public abstract java.lang.Boolean hasObservedGeneration();

  public abstract java.lang.String getStartTime();

  public abstract A withStartTime(java.lang.String);

  public abstract java.lang.Boolean hasStartTime();

  public abstract A withNewStartTime(java.lang.String);

  public abstract A withNewStartTime(java.lang.StringBuilder);

  public abstract A withNewStartTime(java.lang.StringBuffer);

  public abstract A addToTaskRuns(java.lang.String, io.dekorate.deps.tekton.pipeline.v1beta1.PipelineRunTaskRunStatus);

  public abstract A addToTaskRuns(java.util.Map<java.lang.String, io.dekorate.deps.tekton.pipeline.v1beta1.PipelineRunTaskRunStatus>);

  public abstract A removeFromTaskRuns(java.lang.String);

  public abstract A removeFromTaskRuns(java.util.Map<java.lang.String, io.dekorate.deps.tekton.pipeline.v1beta1.PipelineRunTaskRunStatus>);

  public abstract java.util.Map<java.lang.String, io.dekorate.deps.tekton.pipeline.v1beta1.PipelineRunTaskRunStatus> getTaskRuns();

  public abstract A withTaskRuns(java.util.Map<java.lang.String, io.dekorate.deps.tekton.pipeline.v1beta1.PipelineRunTaskRunStatus>);

  public abstract java.lang.Boolean hasTaskRuns();
}
