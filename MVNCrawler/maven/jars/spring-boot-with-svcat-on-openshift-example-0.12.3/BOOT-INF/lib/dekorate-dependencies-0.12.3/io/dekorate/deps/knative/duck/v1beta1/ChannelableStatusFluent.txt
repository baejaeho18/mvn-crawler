Compiled from "ChannelableStatusFluent.java"
public interface io.dekorate.deps.knative.duck.v1beta1.ChannelableStatusFluent<A extends io.dekorate.deps.knative.duck.v1beta1.ChannelableStatusFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract io.dekorate.deps.knative.duck.v1.Addressable getAddress();

  public abstract io.dekorate.deps.knative.duck.v1.Addressable buildAddress();

  public abstract A withAddress(io.dekorate.deps.knative.duck.v1.Addressable);

  public abstract java.lang.Boolean hasAddress();

  public abstract A withNewAddress(java.lang.String);

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableStatusFluent$AddressNested<A> withNewAddress();

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableStatusFluent$AddressNested<A> withNewAddressLike(io.dekorate.deps.knative.duck.v1.Addressable);

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableStatusFluent$AddressNested<A> editAddress();

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableStatusFluent$AddressNested<A> editOrNewAddress();

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableStatusFluent$AddressNested<A> editOrNewAddressLike(io.dekorate.deps.knative.duck.v1.Addressable);

  public abstract A addToConditions(int, io.dekorate.deps.knative.v1.Condition);

  public abstract A setToConditions(int, io.dekorate.deps.knative.v1.Condition);

  public abstract A addToConditions(io.dekorate.deps.knative.v1.Condition...);

  public abstract A addAllToConditions(java.util.Collection<io.dekorate.deps.knative.v1.Condition>);

  public abstract A removeFromConditions(io.dekorate.deps.knative.v1.Condition...);

  public abstract A removeAllFromConditions(java.util.Collection<io.dekorate.deps.knative.v1.Condition>);

  public abstract A removeMatchingFromConditions(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.knative.v1.ConditionBuilder>);

  public abstract java.util.List<io.dekorate.deps.knative.v1.Condition> getConditions();

  public abstract java.util.List<io.dekorate.deps.knative.v1.Condition> buildConditions();

  public abstract io.dekorate.deps.knative.v1.Condition buildCondition(int);

  public abstract io.dekorate.deps.knative.v1.Condition buildFirstCondition();

  public abstract io.dekorate.deps.knative.v1.Condition buildLastCondition();

  public abstract io.dekorate.deps.knative.v1.Condition buildMatchingCondition(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.knative.v1.ConditionBuilder>);

  public abstract java.lang.Boolean hasMatchingCondition(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.knative.v1.ConditionBuilder>);

  public abstract A withConditions(java.util.List<io.dekorate.deps.knative.v1.Condition>);

  public abstract A withConditions(io.dekorate.deps.knative.v1.Condition...);

  public abstract java.lang.Boolean hasConditions();

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableStatusFluent$ConditionsNested<A> addNewCondition();

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableStatusFluent$ConditionsNested<A> addNewConditionLike(io.dekorate.deps.knative.v1.Condition);

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableStatusFluent$ConditionsNested<A> setNewConditionLike(int, io.dekorate.deps.knative.v1.Condition);

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableStatusFluent$ConditionsNested<A> editCondition(int);

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableStatusFluent$ConditionsNested<A> editFirstCondition();

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableStatusFluent$ConditionsNested<A> editLastCondition();

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableStatusFluent$ConditionsNested<A> editMatchingCondition(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.knative.v1.ConditionBuilder>);

  public abstract io.dekorate.deps.knative.duck.v1.KReference getDeadLetterChannel();

  public abstract io.dekorate.deps.knative.duck.v1.KReference buildDeadLetterChannel();

  public abstract A withDeadLetterChannel(io.dekorate.deps.knative.duck.v1.KReference);

  public abstract java.lang.Boolean hasDeadLetterChannel();

  public abstract A withNewDeadLetterChannel(java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableStatusFluent$DeadLetterChannelNested<A> withNewDeadLetterChannel();

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableStatusFluent$DeadLetterChannelNested<A> withNewDeadLetterChannelLike(io.dekorate.deps.knative.duck.v1.KReference);

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableStatusFluent$DeadLetterChannelNested<A> editDeadLetterChannel();

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableStatusFluent$DeadLetterChannelNested<A> editOrNewDeadLetterChannel();

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableStatusFluent$DeadLetterChannelNested<A> editOrNewDeadLetterChannelLike(io.dekorate.deps.knative.duck.v1.KReference);

  public abstract java.lang.Long getObservedGeneration();

  public abstract A withObservedGeneration(java.lang.Long);

  public abstract java.lang.Boolean hasObservedGeneration();

  public abstract A addToSubscribers(int, io.dekorate.deps.knative.duck.v1beta1.SubscriberStatus);

  public abstract A setToSubscribers(int, io.dekorate.deps.knative.duck.v1beta1.SubscriberStatus);

  public abstract A addToSubscribers(io.dekorate.deps.knative.duck.v1beta1.SubscriberStatus...);

  public abstract A addAllToSubscribers(java.util.Collection<io.dekorate.deps.knative.duck.v1beta1.SubscriberStatus>);

  public abstract A removeFromSubscribers(io.dekorate.deps.knative.duck.v1beta1.SubscriberStatus...);

  public abstract A removeAllFromSubscribers(java.util.Collection<io.dekorate.deps.knative.duck.v1beta1.SubscriberStatus>);

  public abstract A removeMatchingFromSubscribers(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.knative.duck.v1beta1.SubscriberStatusBuilder>);

  public abstract java.util.List<io.dekorate.deps.knative.duck.v1beta1.SubscriberStatus> getSubscribers();

  public abstract java.util.List<io.dekorate.deps.knative.duck.v1beta1.SubscriberStatus> buildSubscribers();

  public abstract io.dekorate.deps.knative.duck.v1beta1.SubscriberStatus buildSubscriber(int);

  public abstract io.dekorate.deps.knative.duck.v1beta1.SubscriberStatus buildFirstSubscriber();

  public abstract io.dekorate.deps.knative.duck.v1beta1.SubscriberStatus buildLastSubscriber();

  public abstract io.dekorate.deps.knative.duck.v1beta1.SubscriberStatus buildMatchingSubscriber(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.knative.duck.v1beta1.SubscriberStatusBuilder>);

  public abstract java.lang.Boolean hasMatchingSubscriber(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.knative.duck.v1beta1.SubscriberStatusBuilder>);

  public abstract A withSubscribers(java.util.List<io.dekorate.deps.knative.duck.v1beta1.SubscriberStatus>);

  public abstract A withSubscribers(io.dekorate.deps.knative.duck.v1beta1.SubscriberStatus...);

  public abstract java.lang.Boolean hasSubscribers();

  public abstract A addNewSubscriber(java.lang.String, java.lang.Long, java.lang.String, java.lang.String);

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableStatusFluent$SubscribersNested<A> addNewSubscriber();

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableStatusFluent$SubscribersNested<A> addNewSubscriberLike(io.dekorate.deps.knative.duck.v1beta1.SubscriberStatus);

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableStatusFluent$SubscribersNested<A> setNewSubscriberLike(int, io.dekorate.deps.knative.duck.v1beta1.SubscriberStatus);

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableStatusFluent$SubscribersNested<A> editSubscriber(int);

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableStatusFluent$SubscribersNested<A> editFirstSubscriber();

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableStatusFluent$SubscribersNested<A> editLastSubscriber();

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableStatusFluent$SubscribersNested<A> editMatchingSubscriber(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.knative.duck.v1beta1.SubscriberStatusBuilder>);
}
