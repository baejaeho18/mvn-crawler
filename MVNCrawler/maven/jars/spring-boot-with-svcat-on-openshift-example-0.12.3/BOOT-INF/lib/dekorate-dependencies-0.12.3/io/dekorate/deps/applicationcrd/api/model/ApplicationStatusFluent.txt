Compiled from "ApplicationStatusFluent.java"
public interface io.dekorate.deps.applicationcrd.api.model.ApplicationStatusFluent<A extends io.dekorate.deps.applicationcrd.api.model.ApplicationStatusFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract A addToComponents(int, io.dekorate.deps.applicationcrd.api.model.ObjectStatus);

  public abstract A setToComponents(int, io.dekorate.deps.applicationcrd.api.model.ObjectStatus);

  public abstract A addToComponents(io.dekorate.deps.applicationcrd.api.model.ObjectStatus...);

  public abstract A addAllToComponents(java.util.Collection<io.dekorate.deps.applicationcrd.api.model.ObjectStatus>);

  public abstract A removeFromComponents(io.dekorate.deps.applicationcrd.api.model.ObjectStatus...);

  public abstract A removeAllFromComponents(java.util.Collection<io.dekorate.deps.applicationcrd.api.model.ObjectStatus>);

  public abstract java.util.List<io.dekorate.deps.applicationcrd.api.model.ObjectStatus> getComponents();

  public abstract java.util.List<io.dekorate.deps.applicationcrd.api.model.ObjectStatus> buildComponents();

  public abstract io.dekorate.deps.applicationcrd.api.model.ObjectStatus buildComponent(int);

  public abstract io.dekorate.deps.applicationcrd.api.model.ObjectStatus buildFirstComponent();

  public abstract io.dekorate.deps.applicationcrd.api.model.ObjectStatus buildLastComponent();

  public abstract io.dekorate.deps.applicationcrd.api.model.ObjectStatus buildMatchingComponent(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.applicationcrd.api.model.ObjectStatusBuilder>);

  public abstract java.lang.Boolean hasMatchingComponent(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.applicationcrd.api.model.ObjectStatusBuilder>);

  public abstract A withComponents(java.util.List<io.dekorate.deps.applicationcrd.api.model.ObjectStatus>);

  public abstract A withComponents(io.dekorate.deps.applicationcrd.api.model.ObjectStatus...);

  public abstract java.lang.Boolean hasComponents();

  public abstract A addNewComponent(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationStatusFluent$ComponentsNested<A> addNewComponent();

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationStatusFluent$ComponentsNested<A> addNewComponentLike(io.dekorate.deps.applicationcrd.api.model.ObjectStatus);

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationStatusFluent$ComponentsNested<A> setNewComponentLike(int, io.dekorate.deps.applicationcrd.api.model.ObjectStatus);

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationStatusFluent$ComponentsNested<A> editComponent(int);

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationStatusFluent$ComponentsNested<A> editFirstComponent();

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationStatusFluent$ComponentsNested<A> editLastComponent();

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationStatusFluent$ComponentsNested<A> editMatchingComponent(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.applicationcrd.api.model.ObjectStatusBuilder>);

  public abstract A addToConditions(int, io.dekorate.deps.applicationcrd.api.model.Condition);

  public abstract A setToConditions(int, io.dekorate.deps.applicationcrd.api.model.Condition);

  public abstract A addToConditions(io.dekorate.deps.applicationcrd.api.model.Condition...);

  public abstract A addAllToConditions(java.util.Collection<io.dekorate.deps.applicationcrd.api.model.Condition>);

  public abstract A removeFromConditions(io.dekorate.deps.applicationcrd.api.model.Condition...);

  public abstract A removeAllFromConditions(java.util.Collection<io.dekorate.deps.applicationcrd.api.model.Condition>);

  public abstract java.util.List<io.dekorate.deps.applicationcrd.api.model.Condition> getConditions();

  public abstract java.util.List<io.dekorate.deps.applicationcrd.api.model.Condition> buildConditions();

  public abstract io.dekorate.deps.applicationcrd.api.model.Condition buildCondition(int);

  public abstract io.dekorate.deps.applicationcrd.api.model.Condition buildFirstCondition();

  public abstract io.dekorate.deps.applicationcrd.api.model.Condition buildLastCondition();

  public abstract io.dekorate.deps.applicationcrd.api.model.Condition buildMatchingCondition(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.applicationcrd.api.model.ConditionBuilder>);

  public abstract java.lang.Boolean hasMatchingCondition(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.applicationcrd.api.model.ConditionBuilder>);

  public abstract A withConditions(java.util.List<io.dekorate.deps.applicationcrd.api.model.Condition>);

  public abstract A withConditions(io.dekorate.deps.applicationcrd.api.model.Condition...);

  public abstract java.lang.Boolean hasConditions();

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationStatusFluent$ConditionsNested<A> addNewCondition();

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationStatusFluent$ConditionsNested<A> addNewConditionLike(io.dekorate.deps.applicationcrd.api.model.Condition);

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationStatusFluent$ConditionsNested<A> setNewConditionLike(int, io.dekorate.deps.applicationcrd.api.model.Condition);

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationStatusFluent$ConditionsNested<A> editCondition(int);

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationStatusFluent$ConditionsNested<A> editFirstCondition();

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationStatusFluent$ConditionsNested<A> editLastCondition();

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationStatusFluent$ConditionsNested<A> editMatchingCondition(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.applicationcrd.api.model.ConditionBuilder>);

  public abstract java.lang.Long getObservedGeneration();

  public abstract A withObservedGeneration(java.lang.Long);

  public abstract java.lang.Boolean hasObservedGeneration();
}
