Compiled from "Deflate64CompressorInputStream.java"
public class io.dekorate.deps.commons.compress.compressors.deflate64.Deflate64CompressorInputStream extends io.dekorate.deps.commons.compress.compressors.CompressorInputStream implements io.dekorate.deps.commons.compress.utils.InputStreamStatistics {
  private java.io.InputStream originalStream;

  private io.dekorate.deps.commons.compress.compressors.deflate64.HuffmanDecoder decoder;

  private long compressedBytesRead;

  private final byte[] oneByte;

  public io.dekorate.deps.commons.compress.compressors.deflate64.Deflate64CompressorInputStream(java.io.InputStream);
    Code:
       0: aload_0
       1: new           #19                 // class io/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder
       4: dup
       5: aload_1
       6: invokespecial #21                 // Method io/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder."<init>":(Ljava/io/InputStream;)V
       9: invokespecial #24                 // Method "<init>":(Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder;)V
      12: aload_0
      13: aload_1
      14: putfield      #26                 // Field originalStream:Ljava/io/InputStream;
      17: return

  io.dekorate.deps.commons.compress.compressors.deflate64.Deflate64CompressorInputStream(io.dekorate.deps.commons.compress.compressors.deflate64.HuffmanDecoder);
    Code:
       0: aload_0
       1: invokespecial #32                 // Method io/dekorate/deps/commons/compress/compressors/CompressorInputStream."<init>":()V
       4: aload_0
       5: iconst_1
       6: newarray       byte
       8: putfield      #34                 // Field oneByte:[B
      11: aload_0
      12: aload_1
      13: putfield      #36                 // Field decoder:Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder;
      16: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #34                 // Field oneByte:[B
       5: invokevirtual #43                 // Method read:([B)I
       8: istore_1
       9: iload_1
      10: tableswitch   { // -1 to 1
                    -1: 47
                     0: 49
                     1: 36
               default: 52
          }
      36: aload_0
      37: getfield      #34                 // Field oneByte:[B
      40: iconst_0
      41: baload
      42: sipush        255
      45: iand
      46: ireturn
      47: iconst_m1
      48: ireturn
      49: goto          0
      52: new           #45                 // class java/lang/IllegalStateException
      55: dup
      56: new           #47                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #48                 // Method java/lang/StringBuilder."<init>":()V
      63: ldc           #50                 // String Invalid return value from read:
      65: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: iload_1
      69: invokevirtual #57                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      72: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: invokespecial #64                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      78: athrow

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: iconst_m1
       1: istore        4
       3: aload_0
       4: getfield      #36                 // Field decoder:Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder;
       7: ifnull        49
      10: aload_0
      11: getfield      #36                 // Field decoder:Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder;
      14: aload_1
      15: iload_2
      16: iload_3
      17: invokevirtual #70                 // Method io/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder.decode:([BII)I
      20: istore        4
      22: aload_0
      23: aload_0
      24: getfield      #36                 // Field decoder:Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder;
      27: invokevirtual #74                 // Method io/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder.getBytesRead:()J
      30: putfield      #76                 // Field compressedBytesRead:J
      33: aload_0
      34: iload         4
      36: invokevirtual #80                 // Method count:(I)V
      39: iload         4
      41: iconst_m1
      42: if_icmpne     49
      45: aload_0
      46: invokespecial #83                 // Method closeDecoder:()V
      49: iload         4
      51: ireturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #36                 // Field decoder:Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder;
       4: ifnull        17
       7: aload_0
       8: getfield      #36                 // Field decoder:Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder;
      11: invokevirtual #89                 // Method io/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder.available:()I
      14: goto          18
      17: iconst_0
      18: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #83                 // Method closeDecoder:()V
       4: aload_0
       5: getfield      #26                 // Field originalStream:Ljava/io/InputStream;
       8: ifnull        48
      11: aload_0
      12: getfield      #26                 // Field originalStream:Ljava/io/InputStream;
      15: invokevirtual #94                 // Method java/io/InputStream.close:()V
      18: aload_0
      19: aconst_null
      20: putfield      #26                 // Field originalStream:Ljava/io/InputStream;
      23: goto          48
      26: astore_1
      27: aload_0
      28: getfield      #26                 // Field originalStream:Ljava/io/InputStream;
      31: ifnull        46
      34: aload_0
      35: getfield      #26                 // Field originalStream:Ljava/io/InputStream;
      38: invokevirtual #94                 // Method java/io/InputStream.close:()V
      41: aload_0
      42: aconst_null
      43: putfield      #26                 // Field originalStream:Ljava/io/InputStream;
      46: aload_1
      47: athrow
      48: return
    Exception table:
       from    to  target type
           0     4    26   any

  public long getCompressedCount();
    Code:
       0: aload_0
       1: getfield      #76                 // Field compressedBytesRead:J
       4: lreturn

  private void closeDecoder();
    Code:
       0: aload_0
       1: getfield      #36                 // Field decoder:Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder;
       4: invokestatic  #103                // Method io/dekorate/deps/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V
       7: aload_0
       8: aconst_null
       9: putfield      #36                 // Field decoder:Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder;
      12: return
}
