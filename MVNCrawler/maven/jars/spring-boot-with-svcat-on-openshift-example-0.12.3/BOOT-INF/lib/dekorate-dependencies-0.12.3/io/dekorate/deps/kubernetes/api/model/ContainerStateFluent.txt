Compiled from "ContainerStateFluent.java"
public interface io.dekorate.deps.kubernetes.api.model.ContainerStateFluent<A extends io.dekorate.deps.kubernetes.api.model.ContainerStateFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract io.dekorate.deps.kubernetes.api.model.ContainerStateRunning getRunning();

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerStateRunning buildRunning();

  public abstract A withRunning(io.dekorate.deps.kubernetes.api.model.ContainerStateRunning);

  public abstract java.lang.Boolean hasRunning();

  public abstract A withNewRunning(java.lang.String);

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerStateFluent$RunningNested<A> withNewRunning();

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerStateFluent$RunningNested<A> withNewRunningLike(io.dekorate.deps.kubernetes.api.model.ContainerStateRunning);

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerStateFluent$RunningNested<A> editRunning();

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerStateFluent$RunningNested<A> editOrNewRunning();

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerStateFluent$RunningNested<A> editOrNewRunningLike(io.dekorate.deps.kubernetes.api.model.ContainerStateRunning);

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerStateTerminated getTerminated();

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerStateTerminated buildTerminated();

  public abstract A withTerminated(io.dekorate.deps.kubernetes.api.model.ContainerStateTerminated);

  public abstract java.lang.Boolean hasTerminated();

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerStateFluent$TerminatedNested<A> withNewTerminated();

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerStateFluent$TerminatedNested<A> withNewTerminatedLike(io.dekorate.deps.kubernetes.api.model.ContainerStateTerminated);

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerStateFluent$TerminatedNested<A> editTerminated();

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerStateFluent$TerminatedNested<A> editOrNewTerminated();

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerStateFluent$TerminatedNested<A> editOrNewTerminatedLike(io.dekorate.deps.kubernetes.api.model.ContainerStateTerminated);

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerStateWaiting getWaiting();

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerStateWaiting buildWaiting();

  public abstract A withWaiting(io.dekorate.deps.kubernetes.api.model.ContainerStateWaiting);

  public abstract java.lang.Boolean hasWaiting();

  public abstract A withNewWaiting(java.lang.String, java.lang.String);

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerStateFluent$WaitingNested<A> withNewWaiting();

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerStateFluent$WaitingNested<A> withNewWaitingLike(io.dekorate.deps.kubernetes.api.model.ContainerStateWaiting);

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerStateFluent$WaitingNested<A> editWaiting();

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerStateFluent$WaitingNested<A> editOrNewWaiting();

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerStateFluent$WaitingNested<A> editOrNewWaitingLike(io.dekorate.deps.kubernetes.api.model.ContainerStateWaiting);
}
