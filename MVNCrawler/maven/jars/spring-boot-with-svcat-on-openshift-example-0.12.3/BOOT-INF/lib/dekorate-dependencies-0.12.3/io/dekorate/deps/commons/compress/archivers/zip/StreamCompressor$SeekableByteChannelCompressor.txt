Compiled from "StreamCompressor.java"
final class io.dekorate.deps.commons.compress.archivers.zip.StreamCompressor$SeekableByteChannelCompressor extends io.dekorate.deps.commons.compress.archivers.zip.StreamCompressor {
  private final java.nio.channels.SeekableByteChannel channel;

  public io.dekorate.deps.commons.compress.archivers.zip.StreamCompressor$SeekableByteChannelCompressor(java.util.zip.Deflater, java.nio.channels.SeekableByteChannel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #13                 // Method io/dekorate/deps/commons/compress/archivers/zip/StreamCompressor."<init>":(Ljava/util/zip/Deflater;)V
       5: aload_0
       6: aload_2
       7: putfield      #15                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
      10: return

  protected final void writeOut(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field channel:Ljava/nio/channels/SeekableByteChannel;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokestatic  #29                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
      10: invokeinterface #35,  2           // InterfaceMethod java/nio/channels/SeekableByteChannel.write:(Ljava/nio/ByteBuffer;)I
      15: pop
      16: return
}
