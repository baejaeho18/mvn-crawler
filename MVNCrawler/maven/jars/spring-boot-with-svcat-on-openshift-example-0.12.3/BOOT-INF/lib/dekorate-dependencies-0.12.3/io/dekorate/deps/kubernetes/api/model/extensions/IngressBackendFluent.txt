Compiled from "IngressBackendFluent.java"
public interface io.dekorate.deps.kubernetes.api.model.extensions.IngressBackendFluent<A extends io.dekorate.deps.kubernetes.api.model.extensions.IngressBackendFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract io.dekorate.deps.kubernetes.api.model.TypedLocalObjectReference getResource();

  public abstract io.dekorate.deps.kubernetes.api.model.TypedLocalObjectReference buildResource();

  public abstract A withResource(io.dekorate.deps.kubernetes.api.model.TypedLocalObjectReference);

  public abstract java.lang.Boolean hasResource();

  public abstract A withNewResource(java.lang.String, java.lang.String, java.lang.String);

  public abstract io.dekorate.deps.kubernetes.api.model.extensions.IngressBackendFluent$ResourceNested<A> withNewResource();

  public abstract io.dekorate.deps.kubernetes.api.model.extensions.IngressBackendFluent$ResourceNested<A> withNewResourceLike(io.dekorate.deps.kubernetes.api.model.TypedLocalObjectReference);

  public abstract io.dekorate.deps.kubernetes.api.model.extensions.IngressBackendFluent$ResourceNested<A> editResource();

  public abstract io.dekorate.deps.kubernetes.api.model.extensions.IngressBackendFluent$ResourceNested<A> editOrNewResource();

  public abstract io.dekorate.deps.kubernetes.api.model.extensions.IngressBackendFluent$ResourceNested<A> editOrNewResourceLike(io.dekorate.deps.kubernetes.api.model.TypedLocalObjectReference);

  public abstract java.lang.String getServiceName();

  public abstract A withServiceName(java.lang.String);

  public abstract java.lang.Boolean hasServiceName();

  public abstract A withNewServiceName(java.lang.String);

  public abstract A withNewServiceName(java.lang.StringBuilder);

  public abstract A withNewServiceName(java.lang.StringBuffer);

  public abstract io.dekorate.deps.kubernetes.api.model.IntOrString getServicePort();

  public abstract io.dekorate.deps.kubernetes.api.model.IntOrString buildServicePort();

  public abstract A withServicePort(io.dekorate.deps.kubernetes.api.model.IntOrString);

  public abstract java.lang.Boolean hasServicePort();

  public abstract A withNewServicePort(java.lang.String);

  public abstract A withNewServicePort(java.lang.Integer);

  public abstract io.dekorate.deps.kubernetes.api.model.extensions.IngressBackendFluent$ServicePortNested<A> withNewServicePort();

  public abstract io.dekorate.deps.kubernetes.api.model.extensions.IngressBackendFluent$ServicePortNested<A> withNewServicePortLike(io.dekorate.deps.kubernetes.api.model.IntOrString);

  public abstract io.dekorate.deps.kubernetes.api.model.extensions.IngressBackendFluent$ServicePortNested<A> editServicePort();

  public abstract io.dekorate.deps.kubernetes.api.model.extensions.IngressBackendFluent$ServicePortNested<A> editOrNewServicePort();

  public abstract io.dekorate.deps.kubernetes.api.model.extensions.IngressBackendFluent$ServicePortNested<A> editOrNewServicePortLike(io.dekorate.deps.kubernetes.api.model.IntOrString);
}
