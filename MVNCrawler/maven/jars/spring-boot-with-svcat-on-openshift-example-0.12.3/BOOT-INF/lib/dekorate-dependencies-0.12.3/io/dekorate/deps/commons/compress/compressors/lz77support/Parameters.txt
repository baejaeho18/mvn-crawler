Compiled from "Parameters.java"
public final class io.dekorate.deps.commons.compress.compressors.lz77support.Parameters {
  public static final int TRUE_MIN_BACK_REFERENCE_LENGTH;

  private final int windowSize;

  private final int minBackReferenceLength;

  private final int maxBackReferenceLength;

  private final int maxOffset;

  private final int maxLiteralLength;

  private final int niceBackReferenceLength;

  private final int maxCandidates;

  private final int lazyThreshold;

  private final boolean lazyMatching;

  public static io.dekorate.deps.commons.compress.compressors.lz77support.Parameters$Builder builder(int);
    Code:
       0: new           #9                  // class io/dekorate/deps/commons/compress/compressors/lz77support/Parameters$Builder
       3: dup
       4: iload_0
       5: aconst_null
       6: invokespecial #29                 // Method io/dekorate/deps/commons/compress/compressors/lz77support/Parameters$Builder."<init>":(ILio/dekorate/deps/commons/compress/compressors/lz77support/Parameters$1;)V
       9: areturn

  private io.dekorate.deps.commons.compress.compressors.lz77support.Parameters(int, int, int, int, int, int, int, boolean, int);
    Code:
       0: aload_0
       1: invokespecial #33                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #35                 // Field windowSize:I
       9: aload_0
      10: iload_2
      11: putfield      #37                 // Field minBackReferenceLength:I
      14: aload_0
      15: iload_3
      16: putfield      #39                 // Field maxBackReferenceLength:I
      19: aload_0
      20: iload         4
      22: putfield      #41                 // Field maxOffset:I
      25: aload_0
      26: iload         5
      28: putfield      #43                 // Field maxLiteralLength:I
      31: aload_0
      32: iload         6
      34: putfield      #45                 // Field niceBackReferenceLength:I
      37: aload_0
      38: iload         7
      40: putfield      #47                 // Field maxCandidates:I
      43: aload_0
      44: iload         8
      46: putfield      #49                 // Field lazyMatching:Z
      49: aload_0
      50: iload         9
      52: putfield      #51                 // Field lazyThreshold:I
      55: return

  public int getWindowSize();
    Code:
       0: aload_0
       1: getfield      #35                 // Field windowSize:I
       4: ireturn

  public int getMinBackReferenceLength();
    Code:
       0: aload_0
       1: getfield      #37                 // Field minBackReferenceLength:I
       4: ireturn

  public int getMaxBackReferenceLength();
    Code:
       0: aload_0
       1: getfield      #39                 // Field maxBackReferenceLength:I
       4: ireturn

  public int getMaxOffset();
    Code:
       0: aload_0
       1: getfield      #41                 // Field maxOffset:I
       4: ireturn

  public int getMaxLiteralLength();
    Code:
       0: aload_0
       1: getfield      #43                 // Field maxLiteralLength:I
       4: ireturn

  public int getNiceBackReferenceLength();
    Code:
       0: aload_0
       1: getfield      #45                 // Field niceBackReferenceLength:I
       4: ireturn

  public int getMaxCandidates();
    Code:
       0: aload_0
       1: getfield      #47                 // Field maxCandidates:I
       4: ireturn

  public boolean getLazyMatching();
    Code:
       0: aload_0
       1: getfield      #49                 // Field lazyMatching:Z
       4: ireturn

  public int getLazyMatchingThreshold();
    Code:
       0: aload_0
       1: getfield      #51                 // Field lazyThreshold:I
       4: ireturn

  private static final boolean isPowerOfTwo(int);
    Code:
       0: iload_0
       1: iload_0
       2: iconst_1
       3: isub
       4: iand
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  static boolean access$100(int);
    Code:
       0: iload_0
       1: invokestatic  #70                 // Method isPowerOfTwo:(I)Z
       4: ireturn

  io.dekorate.deps.commons.compress.compressors.lz77support.Parameters(int, int, int, int, int, int, int, boolean, int, io.dekorate.deps.commons.compress.compressors.lz77support.Parameters$1);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: iload         5
       8: iload         6
      10: iload         7
      12: iload         8
      14: iload         9
      16: invokespecial #74                 // Method "<init>":(IIIIIIIZI)V
      19: return
}
