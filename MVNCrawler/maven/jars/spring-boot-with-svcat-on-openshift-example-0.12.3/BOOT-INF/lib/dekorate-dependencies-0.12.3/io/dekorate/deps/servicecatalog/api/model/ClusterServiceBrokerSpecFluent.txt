Compiled from "ClusterServiceBrokerSpecFluent.java"
public interface io.dekorate.deps.servicecatalog.api.model.ClusterServiceBrokerSpecFluent<A extends io.dekorate.deps.servicecatalog.api.model.ClusterServiceBrokerSpecFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract io.dekorate.deps.servicecatalog.api.model.ClusterServiceBrokerAuthInfo getAuthInfo();

  public abstract io.dekorate.deps.servicecatalog.api.model.ClusterServiceBrokerAuthInfo buildAuthInfo();

  public abstract A withAuthInfo(io.dekorate.deps.servicecatalog.api.model.ClusterServiceBrokerAuthInfo);

  public abstract java.lang.Boolean hasAuthInfo();

  public abstract io.dekorate.deps.servicecatalog.api.model.ClusterServiceBrokerSpecFluent$AuthInfoNested<A> withNewAuthInfo();

  public abstract io.dekorate.deps.servicecatalog.api.model.ClusterServiceBrokerSpecFluent$AuthInfoNested<A> withNewAuthInfoLike(io.dekorate.deps.servicecatalog.api.model.ClusterServiceBrokerAuthInfo);

  public abstract io.dekorate.deps.servicecatalog.api.model.ClusterServiceBrokerSpecFluent$AuthInfoNested<A> editAuthInfo();

  public abstract io.dekorate.deps.servicecatalog.api.model.ClusterServiceBrokerSpecFluent$AuthInfoNested<A> editOrNewAuthInfo();

  public abstract io.dekorate.deps.servicecatalog.api.model.ClusterServiceBrokerSpecFluent$AuthInfoNested<A> editOrNewAuthInfoLike(io.dekorate.deps.servicecatalog.api.model.ClusterServiceBrokerAuthInfo);

  public abstract java.lang.String getCaBundle();

  public abstract A withCaBundle(java.lang.String);

  public abstract java.lang.Boolean hasCaBundle();

  public abstract A withNewCaBundle(java.lang.String);

  public abstract A withNewCaBundle(java.lang.StringBuilder);

  public abstract A withNewCaBundle(java.lang.StringBuffer);

  public abstract io.dekorate.deps.servicecatalog.api.model.CatalogRestrictions getCatalogRestrictions();

  public abstract io.dekorate.deps.servicecatalog.api.model.CatalogRestrictions buildCatalogRestrictions();

  public abstract A withCatalogRestrictions(io.dekorate.deps.servicecatalog.api.model.CatalogRestrictions);

  public abstract java.lang.Boolean hasCatalogRestrictions();

  public abstract io.dekorate.deps.servicecatalog.api.model.ClusterServiceBrokerSpecFluent$CatalogRestrictionsNested<A> withNewCatalogRestrictions();

  public abstract io.dekorate.deps.servicecatalog.api.model.ClusterServiceBrokerSpecFluent$CatalogRestrictionsNested<A> withNewCatalogRestrictionsLike(io.dekorate.deps.servicecatalog.api.model.CatalogRestrictions);

  public abstract io.dekorate.deps.servicecatalog.api.model.ClusterServiceBrokerSpecFluent$CatalogRestrictionsNested<A> editCatalogRestrictions();

  public abstract io.dekorate.deps.servicecatalog.api.model.ClusterServiceBrokerSpecFluent$CatalogRestrictionsNested<A> editOrNewCatalogRestrictions();

  public abstract io.dekorate.deps.servicecatalog.api.model.ClusterServiceBrokerSpecFluent$CatalogRestrictionsNested<A> editOrNewCatalogRestrictionsLike(io.dekorate.deps.servicecatalog.api.model.CatalogRestrictions);

  public abstract java.lang.Boolean isInsecureSkipTLSVerify();

  public abstract A withInsecureSkipTLSVerify(java.lang.Boolean);

  public abstract java.lang.Boolean hasInsecureSkipTLSVerify();

  public abstract A withNewInsecureSkipTLSVerify(java.lang.String);

  public abstract A withNewInsecureSkipTLSVerify(boolean);

  public abstract java.lang.String getRelistBehavior();

  public abstract A withRelistBehavior(java.lang.String);

  public abstract java.lang.Boolean hasRelistBehavior();

  public abstract A withNewRelistBehavior(java.lang.String);

  public abstract A withNewRelistBehavior(java.lang.StringBuilder);

  public abstract A withNewRelistBehavior(java.lang.StringBuffer);

  public abstract java.lang.String getRelistDuration();

  public abstract A withRelistDuration(java.lang.String);

  public abstract java.lang.Boolean hasRelistDuration();

  public abstract A withNewRelistDuration(java.lang.String);

  public abstract A withNewRelistDuration(java.lang.StringBuilder);

  public abstract A withNewRelistDuration(java.lang.StringBuffer);

  public abstract java.lang.Long getRelistRequests();

  public abstract A withRelistRequests(java.lang.Long);

  public abstract java.lang.Boolean hasRelistRequests();

  public abstract java.lang.String getUrl();

  public abstract A withUrl(java.lang.String);

  public abstract java.lang.Boolean hasUrl();

  public abstract A withNewUrl(java.lang.String);

  public abstract A withNewUrl(java.lang.StringBuilder);

  public abstract A withNewUrl(java.lang.StringBuffer);
}
