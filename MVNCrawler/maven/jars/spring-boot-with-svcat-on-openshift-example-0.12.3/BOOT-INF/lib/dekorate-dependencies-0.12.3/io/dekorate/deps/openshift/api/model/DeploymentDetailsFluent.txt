Compiled from "DeploymentDetailsFluent.java"
public interface io.dekorate.deps.openshift.api.model.DeploymentDetailsFluent<A extends io.dekorate.deps.openshift.api.model.DeploymentDetailsFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract A addToCauses(int, io.dekorate.deps.openshift.api.model.DeploymentCause);

  public abstract A setToCauses(int, io.dekorate.deps.openshift.api.model.DeploymentCause);

  public abstract A addToCauses(io.dekorate.deps.openshift.api.model.DeploymentCause...);

  public abstract A addAllToCauses(java.util.Collection<io.dekorate.deps.openshift.api.model.DeploymentCause>);

  public abstract A removeFromCauses(io.dekorate.deps.openshift.api.model.DeploymentCause...);

  public abstract A removeAllFromCauses(java.util.Collection<io.dekorate.deps.openshift.api.model.DeploymentCause>);

  public abstract A removeMatchingFromCauses(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.openshift.api.model.DeploymentCauseBuilder>);

  public abstract java.util.List<io.dekorate.deps.openshift.api.model.DeploymentCause> getCauses();

  public abstract java.util.List<io.dekorate.deps.openshift.api.model.DeploymentCause> buildCauses();

  public abstract io.dekorate.deps.openshift.api.model.DeploymentCause buildCause(int);

  public abstract io.dekorate.deps.openshift.api.model.DeploymentCause buildFirstCause();

  public abstract io.dekorate.deps.openshift.api.model.DeploymentCause buildLastCause();

  public abstract io.dekorate.deps.openshift.api.model.DeploymentCause buildMatchingCause(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.openshift.api.model.DeploymentCauseBuilder>);

  public abstract java.lang.Boolean hasMatchingCause(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.openshift.api.model.DeploymentCauseBuilder>);

  public abstract A withCauses(java.util.List<io.dekorate.deps.openshift.api.model.DeploymentCause>);

  public abstract A withCauses(io.dekorate.deps.openshift.api.model.DeploymentCause...);

  public abstract java.lang.Boolean hasCauses();

  public abstract io.dekorate.deps.openshift.api.model.DeploymentDetailsFluent$CausesNested<A> addNewCause();

  public abstract io.dekorate.deps.openshift.api.model.DeploymentDetailsFluent$CausesNested<A> addNewCauseLike(io.dekorate.deps.openshift.api.model.DeploymentCause);

  public abstract io.dekorate.deps.openshift.api.model.DeploymentDetailsFluent$CausesNested<A> setNewCauseLike(int, io.dekorate.deps.openshift.api.model.DeploymentCause);

  public abstract io.dekorate.deps.openshift.api.model.DeploymentDetailsFluent$CausesNested<A> editCause(int);

  public abstract io.dekorate.deps.openshift.api.model.DeploymentDetailsFluent$CausesNested<A> editFirstCause();

  public abstract io.dekorate.deps.openshift.api.model.DeploymentDetailsFluent$CausesNested<A> editLastCause();

  public abstract io.dekorate.deps.openshift.api.model.DeploymentDetailsFluent$CausesNested<A> editMatchingCause(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.openshift.api.model.DeploymentCauseBuilder>);

  public abstract java.lang.String getMessage();

  public abstract A withMessage(java.lang.String);

  public abstract java.lang.Boolean hasMessage();

  public abstract A withNewMessage(java.lang.String);

  public abstract A withNewMessage(java.lang.StringBuilder);

  public abstract A withNewMessage(java.lang.StringBuffer);
}
