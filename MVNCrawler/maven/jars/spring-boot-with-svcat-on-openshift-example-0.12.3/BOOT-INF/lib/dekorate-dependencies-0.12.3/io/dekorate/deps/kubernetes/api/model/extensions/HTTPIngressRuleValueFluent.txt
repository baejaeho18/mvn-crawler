Compiled from "HTTPIngressRuleValueFluent.java"
public interface io.dekorate.deps.kubernetes.api.model.extensions.HTTPIngressRuleValueFluent<A extends io.dekorate.deps.kubernetes.api.model.extensions.HTTPIngressRuleValueFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract A addToPaths(int, io.dekorate.deps.kubernetes.api.model.extensions.HTTPIngressPath);

  public abstract A setToPaths(int, io.dekorate.deps.kubernetes.api.model.extensions.HTTPIngressPath);

  public abstract A addToPaths(io.dekorate.deps.kubernetes.api.model.extensions.HTTPIngressPath...);

  public abstract A addAllToPaths(java.util.Collection<io.dekorate.deps.kubernetes.api.model.extensions.HTTPIngressPath>);

  public abstract A removeFromPaths(io.dekorate.deps.kubernetes.api.model.extensions.HTTPIngressPath...);

  public abstract A removeAllFromPaths(java.util.Collection<io.dekorate.deps.kubernetes.api.model.extensions.HTTPIngressPath>);

  public abstract A removeMatchingFromPaths(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.extensions.HTTPIngressPathBuilder>);

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.extensions.HTTPIngressPath> getPaths();

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.extensions.HTTPIngressPath> buildPaths();

  public abstract io.dekorate.deps.kubernetes.api.model.extensions.HTTPIngressPath buildPath(int);

  public abstract io.dekorate.deps.kubernetes.api.model.extensions.HTTPIngressPath buildFirstPath();

  public abstract io.dekorate.deps.kubernetes.api.model.extensions.HTTPIngressPath buildLastPath();

  public abstract io.dekorate.deps.kubernetes.api.model.extensions.HTTPIngressPath buildMatchingPath(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.extensions.HTTPIngressPathBuilder>);

  public abstract java.lang.Boolean hasMatchingPath(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.extensions.HTTPIngressPathBuilder>);

  public abstract A withPaths(java.util.List<io.dekorate.deps.kubernetes.api.model.extensions.HTTPIngressPath>);

  public abstract A withPaths(io.dekorate.deps.kubernetes.api.model.extensions.HTTPIngressPath...);

  public abstract java.lang.Boolean hasPaths();

  public abstract io.dekorate.deps.kubernetes.api.model.extensions.HTTPIngressRuleValueFluent$PathsNested<A> addNewPath();

  public abstract io.dekorate.deps.kubernetes.api.model.extensions.HTTPIngressRuleValueFluent$PathsNested<A> addNewPathLike(io.dekorate.deps.kubernetes.api.model.extensions.HTTPIngressPath);

  public abstract io.dekorate.deps.kubernetes.api.model.extensions.HTTPIngressRuleValueFluent$PathsNested<A> setNewPathLike(int, io.dekorate.deps.kubernetes.api.model.extensions.HTTPIngressPath);

  public abstract io.dekorate.deps.kubernetes.api.model.extensions.HTTPIngressRuleValueFluent$PathsNested<A> editPath(int);

  public abstract io.dekorate.deps.kubernetes.api.model.extensions.HTTPIngressRuleValueFluent$PathsNested<A> editFirstPath();

  public abstract io.dekorate.deps.kubernetes.api.model.extensions.HTTPIngressRuleValueFluent$PathsNested<A> editLastPath();

  public abstract io.dekorate.deps.kubernetes.api.model.extensions.HTTPIngressRuleValueFluent$PathsNested<A> editMatchingPath(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.extensions.HTTPIngressPathBuilder>);
}
