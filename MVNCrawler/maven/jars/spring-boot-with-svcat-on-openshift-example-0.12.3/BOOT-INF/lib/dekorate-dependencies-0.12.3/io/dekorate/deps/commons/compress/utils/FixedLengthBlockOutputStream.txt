Compiled from "FixedLengthBlockOutputStream.java"
public class io.dekorate.deps.commons.compress.utils.FixedLengthBlockOutputStream extends java.io.OutputStream implements java.nio.channels.WritableByteChannel {
  private final java.nio.channels.WritableByteChannel out;

  private final int blockSize;

  private final java.nio.ByteBuffer buffer;

  private final java.util.concurrent.atomic.AtomicBoolean closed;

  public io.dekorate.deps.commons.compress.utils.FixedLengthBlockOutputStream(java.io.OutputStream, int);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method java/io/OutputStream."<init>":()V
       4: aload_0
       5: new           #27                 // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: iconst_0
      10: invokespecial #30                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      13: putfield      #32                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: aload_1
      17: instanceof    #34                 // class java/io/FileOutputStream
      20: ifeq          47
      23: aload_1
      24: checkcast     #34                 // class java/io/FileOutputStream
      27: astore_3
      28: aload_0
      29: aload_3
      30: invokevirtual #38                 // Method java/io/FileOutputStream.getChannel:()Ljava/nio/channels/FileChannel;
      33: putfield      #40                 // Field out:Ljava/nio/channels/WritableByteChannel;
      36: aload_0
      37: iload_2
      38: invokestatic  #46                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      41: putfield      #48                 // Field buffer:Ljava/nio/ByteBuffer;
      44: goto          68
      47: aload_0
      48: new           #11                 // class io/dekorate/deps/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel
      51: dup
      52: aload_1
      53: aconst_null
      54: invokespecial #51                 // Method io/dekorate/deps/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel."<init>":(Ljava/io/OutputStream;Lio/dekorate/deps/commons/compress/utils/FixedLengthBlockOutputStream$1;)V
      57: putfield      #40                 // Field out:Ljava/nio/channels/WritableByteChannel;
      60: aload_0
      61: iload_2
      62: invokestatic  #54                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      65: putfield      #48                 // Field buffer:Ljava/nio/ByteBuffer;
      68: aload_0
      69: iload_2
      70: putfield      #56                 // Field blockSize:I
      73: return

  public io.dekorate.deps.commons.compress.utils.FixedLengthBlockOutputStream(java.nio.channels.WritableByteChannel, int);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method java/io/OutputStream."<init>":()V
       4: aload_0
       5: new           #27                 // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: iconst_0
      10: invokespecial #30                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      13: putfield      #32                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: aload_0
      17: aload_1
      18: putfield      #40                 // Field out:Ljava/nio/channels/WritableByteChannel;
      21: aload_0
      22: iload_2
      23: putfield      #56                 // Field blockSize:I
      26: aload_0
      27: iload_2
      28: invokestatic  #46                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      31: putfield      #48                 // Field buffer:Ljava/nio/ByteBuffer;
      34: return

  private void maybeFlush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #48                 // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #70                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       7: ifne          14
      10: aload_0
      11: invokespecial #73                 // Method writeBlock:()V
      14: return

  private void writeBlock() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #48                 // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #77                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
       7: pop
       8: aload_0
       9: getfield      #40                 // Field out:Ljava/nio/channels/WritableByteChannel;
      12: aload_0
      13: getfield      #48                 // Field buffer:Ljava/nio/ByteBuffer;
      16: invokeinterface #81,  2           // InterfaceMethod java/nio/channels/WritableByteChannel.write:(Ljava/nio/ByteBuffer;)I
      21: istore_1
      22: aload_0
      23: getfield      #48                 // Field buffer:Ljava/nio/ByteBuffer;
      26: invokevirtual #70                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      29: istore_2
      30: iload_1
      31: aload_0
      32: getfield      #56                 // Field blockSize:I
      35: if_icmpne     42
      38: iload_2
      39: ifeq          78
      42: ldc           #83                 // String Failed to write %,d bytes atomically. Only wrote  %,d
      44: iconst_2
      45: anewarray     #85                 // class java/lang/Object
      48: dup
      49: iconst_0
      50: aload_0
      51: getfield      #56                 // Field blockSize:I
      54: invokestatic  #91                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      57: aastore
      58: dup
      59: iconst_1
      60: iload_1
      61: invokestatic  #91                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      64: aastore
      65: invokestatic  #97                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      68: astore_3
      69: new           #66                 // class java/io/IOException
      72: dup
      73: aload_3
      74: invokespecial #100                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      77: athrow
      78: aload_0
      79: getfield      #48                 // Field buffer:Ljava/nio/ByteBuffer;
      82: invokevirtual #103                // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      85: pop
      86: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #111                // Method isOpen:()Z
       4: ifne          15
       7: new           #113                // class java/nio/channels/ClosedChannelException
      10: dup
      11: invokespecial #114                // Method java/nio/channels/ClosedChannelException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #48                 // Field buffer:Ljava/nio/ByteBuffer;
      19: iload_1
      20: i2b
      21: invokevirtual #118                // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      24: pop
      25: aload_0
      26: invokespecial #120                // Method maybeFlush:()V
      29: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #111                // Method isOpen:()Z
       4: ifne          15
       7: new           #113                // class java/nio/channels/ClosedChannelException
      10: dup
      11: invokespecial #114                // Method java/nio/channels/ClosedChannelException."<init>":()V
      14: athrow
      15: iload_2
      16: istore        4
      18: iload_3
      19: istore        5
      21: iload         5
      23: ifle          74
      26: iload         5
      28: aload_0
      29: getfield      #48                 // Field buffer:Ljava/nio/ByteBuffer;
      32: invokevirtual #126                // Method java/nio/ByteBuffer.remaining:()I
      35: invokestatic  #132                // Method java/lang/Math.min:(II)I
      38: istore        6
      40: aload_0
      41: getfield      #48                 // Field buffer:Ljava/nio/ByteBuffer;
      44: aload_1
      45: iload         4
      47: iload         6
      49: invokevirtual #135                // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      52: pop
      53: aload_0
      54: invokespecial #120                // Method maybeFlush:()V
      57: iload         5
      59: iload         6
      61: isub
      62: istore        5
      64: iload         4
      66: iload         6
      68: iadd
      69: istore        4
      71: goto          21
      74: return

  public int write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #111                // Method isOpen:()Z
       4: ifne          15
       7: new           #113                // class java/nio/channels/ClosedChannelException
      10: dup
      11: invokespecial #114                // Method java/nio/channels/ClosedChannelException."<init>":()V
      14: athrow
      15: aload_1
      16: invokevirtual #126                // Method java/nio/ByteBuffer.remaining:()I
      19: istore_2
      20: iload_2
      21: aload_0
      22: getfield      #48                 // Field buffer:Ljava/nio/ByteBuffer;
      25: invokevirtual #126                // Method java/nio/ByteBuffer.remaining:()I
      28: if_icmpge     43
      31: aload_0
      32: getfield      #48                 // Field buffer:Ljava/nio/ByteBuffer;
      35: aload_1
      36: invokevirtual #144                // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      39: pop
      40: goto          159
      43: iload_2
      44: istore_3
      45: aload_1
      46: invokevirtual #147                // Method java/nio/ByteBuffer.limit:()I
      49: istore        4
      51: aload_0
      52: getfield      #48                 // Field buffer:Ljava/nio/ByteBuffer;
      55: invokevirtual #150                // Method java/nio/ByteBuffer.position:()I
      58: ifeq          100
      61: aload_0
      62: getfield      #48                 // Field buffer:Ljava/nio/ByteBuffer;
      65: invokevirtual #126                // Method java/nio/ByteBuffer.remaining:()I
      68: istore        5
      70: aload_1
      71: aload_1
      72: invokevirtual #150                // Method java/nio/ByteBuffer.position:()I
      75: iload         5
      77: iadd
      78: invokevirtual #153                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      81: pop
      82: aload_0
      83: getfield      #48                 // Field buffer:Ljava/nio/ByteBuffer;
      86: aload_1
      87: invokevirtual #144                // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      90: pop
      91: aload_0
      92: invokespecial #73                 // Method writeBlock:()V
      95: iload_3
      96: iload         5
      98: isub
      99: istore_3
     100: iload_3
     101: aload_0
     102: getfield      #56                 // Field blockSize:I
     105: if_icmplt     143
     108: aload_1
     109: aload_1
     110: invokevirtual #150                // Method java/nio/ByteBuffer.position:()I
     113: aload_0
     114: getfield      #56                 // Field blockSize:I
     117: iadd
     118: invokevirtual #153                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     121: pop
     122: aload_0
     123: getfield      #40                 // Field out:Ljava/nio/channels/WritableByteChannel;
     126: aload_1
     127: invokeinterface #81,  2           // InterfaceMethod java/nio/channels/WritableByteChannel.write:(Ljava/nio/ByteBuffer;)I
     132: pop
     133: iload_3
     134: aload_0
     135: getfield      #56                 // Field blockSize:I
     138: isub
     139: istore_3
     140: goto          100
     143: aload_1
     144: iload         4
     146: invokevirtual #153                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     149: pop
     150: aload_0
     151: getfield      #48                 // Field buffer:Ljava/nio/ByteBuffer;
     154: aload_1
     155: invokevirtual #144                // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     158: pop
     159: iload_2
     160: ireturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #40                 // Field out:Ljava/nio/channels/WritableByteChannel;
       4: invokeinterface #158,  1          // InterfaceMethod java/nio/channels/WritableByteChannel.isOpen:()Z
       9: ifne          20
      12: aload_0
      13: getfield      #32                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: iconst_1
      17: invokevirtual #161                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      20: aload_0
      21: getfield      #32                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
      24: invokevirtual #164                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      27: ifne          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn

  public void flushBlock() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #48                 // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #150                // Method java/nio/ByteBuffer.position:()I
       7: ifeq          18
      10: aload_0
      11: invokespecial #168                // Method padBlock:()V
      14: aload_0
      15: invokespecial #73                 // Method writeBlock:()V
      18: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #32                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #173                // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          40
      12: aload_0
      13: invokevirtual #175                // Method flushBlock:()V
      16: aload_0
      17: getfield      #40                 // Field out:Ljava/nio/channels/WritableByteChannel;
      20: invokeinterface #177,  1          // InterfaceMethod java/nio/channels/WritableByteChannel.close:()V
      25: goto          40
      28: astore_1
      29: aload_0
      30: getfield      #40                 // Field out:Ljava/nio/channels/WritableByteChannel;
      33: invokeinterface #177,  1          // InterfaceMethod java/nio/channels/WritableByteChannel.close:()V
      38: aload_1
      39: athrow
      40: return
    Exception table:
       from    to  target type
          12    16    28   any

  private void padBlock();
    Code:
       0: aload_0
       1: getfield      #48                 // Field buffer:Ljava/nio/ByteBuffer;
       4: invokestatic  #185                // Method java/nio/ByteOrder.nativeOrder:()Ljava/nio/ByteOrder;
       7: invokevirtual #189                // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      10: pop
      11: aload_0
      12: getfield      #48                 // Field buffer:Ljava/nio/ByteBuffer;
      15: invokevirtual #126                // Method java/nio/ByteBuffer.remaining:()I
      18: istore_1
      19: iload_1
      20: bipush        8
      22: if_icmple     94
      25: aload_0
      26: getfield      #48                 // Field buffer:Ljava/nio/ByteBuffer;
      29: invokevirtual #150                // Method java/nio/ByteBuffer.position:()I
      32: bipush        7
      34: iand
      35: istore_2
      36: iload_2
      37: ifeq          73
      40: bipush        8
      42: iload_2
      43: isub
      44: istore_3
      45: iconst_0
      46: istore        4
      48: iload         4
      50: iload_3
      51: if_icmpge     69
      54: aload_0
      55: getfield      #48                 // Field buffer:Ljava/nio/ByteBuffer;
      58: iconst_0
      59: invokevirtual #118                // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      62: pop
      63: iinc          4, 1
      66: goto          48
      69: iload_1
      70: iload_3
      71: isub
      72: istore_1
      73: iload_1
      74: bipush        8
      76: if_icmplt     94
      79: aload_0
      80: getfield      #48                 // Field buffer:Ljava/nio/ByteBuffer;
      83: lconst_0
      84: invokevirtual #193                // Method java/nio/ByteBuffer.putLong:(J)Ljava/nio/ByteBuffer;
      87: pop
      88: iinc          1, -8
      91: goto          73
      94: aload_0
      95: getfield      #48                 // Field buffer:Ljava/nio/ByteBuffer;
      98: invokevirtual #70                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     101: ifeq          116
     104: aload_0
     105: getfield      #48                 // Field buffer:Ljava/nio/ByteBuffer;
     108: iconst_0
     109: invokevirtual #118                // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     112: pop
     113: goto          94
     116: return
}
