Compiled from "InfoItemSourceFluent.java"
public interface io.dekorate.deps.applicationcrd.api.model.InfoItemSourceFluent<A extends io.dekorate.deps.applicationcrd.api.model.InfoItemSourceFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract io.dekorate.deps.applicationcrd.api.model.ConfigMapKeySelector getConfigMapKeyRef();

  public abstract io.dekorate.deps.applicationcrd.api.model.ConfigMapKeySelector buildConfigMapKeyRef();

  public abstract A withConfigMapKeyRef(io.dekorate.deps.applicationcrd.api.model.ConfigMapKeySelector);

  public abstract java.lang.Boolean hasConfigMapKeyRef();

  public abstract io.dekorate.deps.applicationcrd.api.model.InfoItemSourceFluent$ConfigMapKeyRefNested<A> withNewConfigMapKeyRef();

  public abstract io.dekorate.deps.applicationcrd.api.model.InfoItemSourceFluent$ConfigMapKeyRefNested<A> withNewConfigMapKeyRefLike(io.dekorate.deps.applicationcrd.api.model.ConfigMapKeySelector);

  public abstract io.dekorate.deps.applicationcrd.api.model.InfoItemSourceFluent$ConfigMapKeyRefNested<A> editConfigMapKeyRef();

  public abstract io.dekorate.deps.applicationcrd.api.model.InfoItemSourceFluent$ConfigMapKeyRefNested<A> editOrNewConfigMapKeyRef();

  public abstract io.dekorate.deps.applicationcrd.api.model.InfoItemSourceFluent$ConfigMapKeyRefNested<A> editOrNewConfigMapKeyRefLike(io.dekorate.deps.applicationcrd.api.model.ConfigMapKeySelector);

  public abstract io.dekorate.deps.applicationcrd.api.model.IngressSelector getIngressRef();

  public abstract io.dekorate.deps.applicationcrd.api.model.IngressSelector buildIngressRef();

  public abstract A withIngressRef(io.dekorate.deps.applicationcrd.api.model.IngressSelector);

  public abstract java.lang.Boolean hasIngressRef();

  public abstract io.dekorate.deps.applicationcrd.api.model.InfoItemSourceFluent$IngressRefNested<A> withNewIngressRef();

  public abstract io.dekorate.deps.applicationcrd.api.model.InfoItemSourceFluent$IngressRefNested<A> withNewIngressRefLike(io.dekorate.deps.applicationcrd.api.model.IngressSelector);

  public abstract io.dekorate.deps.applicationcrd.api.model.InfoItemSourceFluent$IngressRefNested<A> editIngressRef();

  public abstract io.dekorate.deps.applicationcrd.api.model.InfoItemSourceFluent$IngressRefNested<A> editOrNewIngressRef();

  public abstract io.dekorate.deps.applicationcrd.api.model.InfoItemSourceFluent$IngressRefNested<A> editOrNewIngressRefLike(io.dekorate.deps.applicationcrd.api.model.IngressSelector);

  public abstract io.dekorate.deps.applicationcrd.api.model.SecretKeySelector getSecretKeyRef();

  public abstract io.dekorate.deps.applicationcrd.api.model.SecretKeySelector buildSecretKeyRef();

  public abstract A withSecretKeyRef(io.dekorate.deps.applicationcrd.api.model.SecretKeySelector);

  public abstract java.lang.Boolean hasSecretKeyRef();

  public abstract io.dekorate.deps.applicationcrd.api.model.InfoItemSourceFluent$SecretKeyRefNested<A> withNewSecretKeyRef();

  public abstract io.dekorate.deps.applicationcrd.api.model.InfoItemSourceFluent$SecretKeyRefNested<A> withNewSecretKeyRefLike(io.dekorate.deps.applicationcrd.api.model.SecretKeySelector);

  public abstract io.dekorate.deps.applicationcrd.api.model.InfoItemSourceFluent$SecretKeyRefNested<A> editSecretKeyRef();

  public abstract io.dekorate.deps.applicationcrd.api.model.InfoItemSourceFluent$SecretKeyRefNested<A> editOrNewSecretKeyRef();

  public abstract io.dekorate.deps.applicationcrd.api.model.InfoItemSourceFluent$SecretKeyRefNested<A> editOrNewSecretKeyRefLike(io.dekorate.deps.applicationcrd.api.model.SecretKeySelector);

  public abstract io.dekorate.deps.applicationcrd.api.model.ServiceSelector getServiceRef();

  public abstract io.dekorate.deps.applicationcrd.api.model.ServiceSelector buildServiceRef();

  public abstract A withServiceRef(io.dekorate.deps.applicationcrd.api.model.ServiceSelector);

  public abstract java.lang.Boolean hasServiceRef();

  public abstract io.dekorate.deps.applicationcrd.api.model.InfoItemSourceFluent$ServiceRefNested<A> withNewServiceRef();

  public abstract io.dekorate.deps.applicationcrd.api.model.InfoItemSourceFluent$ServiceRefNested<A> withNewServiceRefLike(io.dekorate.deps.applicationcrd.api.model.ServiceSelector);

  public abstract io.dekorate.deps.applicationcrd.api.model.InfoItemSourceFluent$ServiceRefNested<A> editServiceRef();

  public abstract io.dekorate.deps.applicationcrd.api.model.InfoItemSourceFluent$ServiceRefNested<A> editOrNewServiceRef();

  public abstract io.dekorate.deps.applicationcrd.api.model.InfoItemSourceFluent$ServiceRefNested<A> editOrNewServiceRefLike(io.dekorate.deps.applicationcrd.api.model.ServiceSelector);

  public abstract java.lang.String getType();

  public abstract A withType(java.lang.String);

  public abstract java.lang.Boolean hasType();

  public abstract A withNewType(java.lang.String);

  public abstract A withNewType(java.lang.StringBuilder);

  public abstract A withNewType(java.lang.StringBuffer);
}
