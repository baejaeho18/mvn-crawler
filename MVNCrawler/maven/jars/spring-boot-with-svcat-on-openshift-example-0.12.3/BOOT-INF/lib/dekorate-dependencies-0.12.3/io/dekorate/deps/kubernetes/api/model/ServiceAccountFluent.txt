Compiled from "ServiceAccountFluent.java"
public interface io.dekorate.deps.kubernetes.api.model.ServiceAccountFluent<A extends io.dekorate.deps.kubernetes.api.model.ServiceAccountFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getApiVersion();

  public abstract A withApiVersion(java.lang.String);

  public abstract java.lang.Boolean hasApiVersion();

  public abstract A withNewApiVersion(java.lang.String);

  public abstract A withNewApiVersion(java.lang.StringBuilder);

  public abstract A withNewApiVersion(java.lang.StringBuffer);

  public abstract java.lang.Boolean isAutomountServiceAccountToken();

  public abstract A withAutomountServiceAccountToken(java.lang.Boolean);

  public abstract java.lang.Boolean hasAutomountServiceAccountToken();

  public abstract A withNewAutomountServiceAccountToken(java.lang.String);

  public abstract A withNewAutomountServiceAccountToken(boolean);

  public abstract A addToImagePullSecrets(int, io.dekorate.deps.kubernetes.api.model.LocalObjectReference);

  public abstract A setToImagePullSecrets(int, io.dekorate.deps.kubernetes.api.model.LocalObjectReference);

  public abstract A addToImagePullSecrets(io.dekorate.deps.kubernetes.api.model.LocalObjectReference...);

  public abstract A addAllToImagePullSecrets(java.util.Collection<io.dekorate.deps.kubernetes.api.model.LocalObjectReference>);

  public abstract A removeFromImagePullSecrets(io.dekorate.deps.kubernetes.api.model.LocalObjectReference...);

  public abstract A removeAllFromImagePullSecrets(java.util.Collection<io.dekorate.deps.kubernetes.api.model.LocalObjectReference>);

  public abstract A removeMatchingFromImagePullSecrets(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.LocalObjectReferenceBuilder>);

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.LocalObjectReference> getImagePullSecrets();

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.LocalObjectReference> buildImagePullSecrets();

  public abstract io.dekorate.deps.kubernetes.api.model.LocalObjectReference buildImagePullSecret(int);

  public abstract io.dekorate.deps.kubernetes.api.model.LocalObjectReference buildFirstImagePullSecret();

  public abstract io.dekorate.deps.kubernetes.api.model.LocalObjectReference buildLastImagePullSecret();

  public abstract io.dekorate.deps.kubernetes.api.model.LocalObjectReference buildMatchingImagePullSecret(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.LocalObjectReferenceBuilder>);

  public abstract java.lang.Boolean hasMatchingImagePullSecret(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.LocalObjectReferenceBuilder>);

  public abstract A withImagePullSecrets(java.util.List<io.dekorate.deps.kubernetes.api.model.LocalObjectReference>);

  public abstract A withImagePullSecrets(io.dekorate.deps.kubernetes.api.model.LocalObjectReference...);

  public abstract java.lang.Boolean hasImagePullSecrets();

  public abstract A addNewImagePullSecret(java.lang.String);

  public abstract io.dekorate.deps.kubernetes.api.model.ServiceAccountFluent$ImagePullSecretsNested<A> addNewImagePullSecret();

  public abstract io.dekorate.deps.kubernetes.api.model.ServiceAccountFluent$ImagePullSecretsNested<A> addNewImagePullSecretLike(io.dekorate.deps.kubernetes.api.model.LocalObjectReference);

  public abstract io.dekorate.deps.kubernetes.api.model.ServiceAccountFluent$ImagePullSecretsNested<A> setNewImagePullSecretLike(int, io.dekorate.deps.kubernetes.api.model.LocalObjectReference);

  public abstract io.dekorate.deps.kubernetes.api.model.ServiceAccountFluent$ImagePullSecretsNested<A> editImagePullSecret(int);

  public abstract io.dekorate.deps.kubernetes.api.model.ServiceAccountFluent$ImagePullSecretsNested<A> editFirstImagePullSecret();

  public abstract io.dekorate.deps.kubernetes.api.model.ServiceAccountFluent$ImagePullSecretsNested<A> editLastImagePullSecret();

  public abstract io.dekorate.deps.kubernetes.api.model.ServiceAccountFluent$ImagePullSecretsNested<A> editMatchingImagePullSecret(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.LocalObjectReferenceBuilder>);

  public abstract java.lang.String getKind();

  public abstract A withKind(java.lang.String);

  public abstract java.lang.Boolean hasKind();

  public abstract A withNewKind(java.lang.String);

  public abstract A withNewKind(java.lang.StringBuilder);

  public abstract A withNewKind(java.lang.StringBuffer);

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectMeta getMetadata();

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectMeta buildMetadata();

  public abstract A withMetadata(io.dekorate.deps.kubernetes.api.model.ObjectMeta);

  public abstract java.lang.Boolean hasMetadata();

  public abstract io.dekorate.deps.kubernetes.api.model.ServiceAccountFluent$MetadataNested<A> withNewMetadata();

  public abstract io.dekorate.deps.kubernetes.api.model.ServiceAccountFluent$MetadataNested<A> withNewMetadataLike(io.dekorate.deps.kubernetes.api.model.ObjectMeta);

  public abstract io.dekorate.deps.kubernetes.api.model.ServiceAccountFluent$MetadataNested<A> editMetadata();

  public abstract io.dekorate.deps.kubernetes.api.model.ServiceAccountFluent$MetadataNested<A> editOrNewMetadata();

  public abstract io.dekorate.deps.kubernetes.api.model.ServiceAccountFluent$MetadataNested<A> editOrNewMetadataLike(io.dekorate.deps.kubernetes.api.model.ObjectMeta);

  public abstract A addToSecrets(int, io.dekorate.deps.kubernetes.api.model.ObjectReference);

  public abstract A setToSecrets(int, io.dekorate.deps.kubernetes.api.model.ObjectReference);

  public abstract A addToSecrets(io.dekorate.deps.kubernetes.api.model.ObjectReference...);

  public abstract A addAllToSecrets(java.util.Collection<io.dekorate.deps.kubernetes.api.model.ObjectReference>);

  public abstract A removeFromSecrets(io.dekorate.deps.kubernetes.api.model.ObjectReference...);

  public abstract A removeAllFromSecrets(java.util.Collection<io.dekorate.deps.kubernetes.api.model.ObjectReference>);

  public abstract A removeMatchingFromSecrets(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.ObjectReferenceBuilder>);

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.ObjectReference> getSecrets();

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.ObjectReference> buildSecrets();

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectReference buildSecret(int);

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectReference buildFirstSecret();

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectReference buildLastSecret();

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectReference buildMatchingSecret(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.ObjectReferenceBuilder>);

  public abstract java.lang.Boolean hasMatchingSecret(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.ObjectReferenceBuilder>);

  public abstract A withSecrets(java.util.List<io.dekorate.deps.kubernetes.api.model.ObjectReference>);

  public abstract A withSecrets(io.dekorate.deps.kubernetes.api.model.ObjectReference...);

  public abstract java.lang.Boolean hasSecrets();

  public abstract io.dekorate.deps.kubernetes.api.model.ServiceAccountFluent$SecretsNested<A> addNewSecret();

  public abstract io.dekorate.deps.kubernetes.api.model.ServiceAccountFluent$SecretsNested<A> addNewSecretLike(io.dekorate.deps.kubernetes.api.model.ObjectReference);

  public abstract io.dekorate.deps.kubernetes.api.model.ServiceAccountFluent$SecretsNested<A> setNewSecretLike(int, io.dekorate.deps.kubernetes.api.model.ObjectReference);

  public abstract io.dekorate.deps.kubernetes.api.model.ServiceAccountFluent$SecretsNested<A> editSecret(int);

  public abstract io.dekorate.deps.kubernetes.api.model.ServiceAccountFluent$SecretsNested<A> editFirstSecret();

  public abstract io.dekorate.deps.kubernetes.api.model.ServiceAccountFluent$SecretsNested<A> editLastSecret();

  public abstract io.dekorate.deps.kubernetes.api.model.ServiceAccountFluent$SecretsNested<A> editMatchingSecret(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.ObjectReferenceBuilder>);
}
