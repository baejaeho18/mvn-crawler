Compiled from "OkHttpClient.java"
class io.dekorate.deps.okhttp3.OkHttpClient$1 extends io.dekorate.deps.okhttp3.internal.Internal {
  io.dekorate.deps.okhttp3.OkHttpClient$1();
    Code:
       0: aload_0
       1: invokespecial #26                 // Method io/dekorate/deps/okhttp3/internal/Internal."<init>":()V
       4: return

  public void addLenient(io.dekorate.deps.okhttp3.Headers$Builder, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #33                 // Method io/dekorate/deps/okhttp3/Headers$Builder.addLenient:(Ljava/lang/String;)Lio/dekorate/deps/okhttp3/Headers$Builder;
       5: pop
       6: return

  public void addLenient(io.dekorate.deps.okhttp3.Headers$Builder, java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokevirtual #41                 // Method io/dekorate/deps/okhttp3/Headers$Builder.addLenient:(Ljava/lang/String;Ljava/lang/String;)Lio/dekorate/deps/okhttp3/Headers$Builder;
       6: pop
       7: return

  public void setCache(io.dekorate.deps.okhttp3.OkHttpClient$Builder, io.dekorate.deps.okhttp3.internal.cache.InternalCache);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #49                 // Method io/dekorate/deps/okhttp3/OkHttpClient$Builder.setInternalCache:(Lio/dekorate/deps/okhttp3/internal/cache/InternalCache;)V
       5: return

  public boolean connectionBecameIdle(io.dekorate.deps.okhttp3.ConnectionPool, io.dekorate.deps.okhttp3.internal.connection.RealConnection);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #59                 // Method io/dekorate/deps/okhttp3/ConnectionPool.connectionBecameIdle:(Lio/dekorate/deps/okhttp3/internal/connection/RealConnection;)Z
       5: ireturn

  public io.dekorate.deps.okhttp3.internal.connection.RealConnection get(io.dekorate.deps.okhttp3.ConnectionPool, io.dekorate.deps.okhttp3.Address, io.dekorate.deps.okhttp3.internal.connection.StreamAllocation, io.dekorate.deps.okhttp3.Route);
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: aload         4
       5: invokevirtual #68                 // Method io/dekorate/deps/okhttp3/ConnectionPool.get:(Lio/dekorate/deps/okhttp3/Address;Lio/dekorate/deps/okhttp3/internal/connection/StreamAllocation;Lio/dekorate/deps/okhttp3/Route;)Lio/dekorate/deps/okhttp3/internal/connection/RealConnection;
       8: areturn

  public boolean equalsNonHost(io.dekorate.deps.okhttp3.Address, io.dekorate.deps.okhttp3.Address);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #81                 // Method io/dekorate/deps/okhttp3/Address.equalsNonHost:(Lio/dekorate/deps/okhttp3/Address;)Z
       5: ireturn

  public java.net.Socket deduplicate(io.dekorate.deps.okhttp3.ConnectionPool, io.dekorate.deps.okhttp3.Address, io.dekorate.deps.okhttp3.internal.connection.StreamAllocation);
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokevirtual #88                 // Method io/dekorate/deps/okhttp3/ConnectionPool.deduplicate:(Lio/dekorate/deps/okhttp3/Address;Lio/dekorate/deps/okhttp3/internal/connection/StreamAllocation;)Ljava/net/Socket;
       6: areturn

  public void put(io.dekorate.deps.okhttp3.ConnectionPool, io.dekorate.deps.okhttp3.internal.connection.RealConnection);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #93                 // Method io/dekorate/deps/okhttp3/ConnectionPool.put:(Lio/dekorate/deps/okhttp3/internal/connection/RealConnection;)V
       5: return

  public io.dekorate.deps.okhttp3.internal.connection.RouteDatabase routeDatabase(io.dekorate.deps.okhttp3.ConnectionPool);
    Code:
       0: aload_1
       1: getfield      #98                 // Field io/dekorate/deps/okhttp3/ConnectionPool.routeDatabase:Lio/dekorate/deps/okhttp3/internal/connection/RouteDatabase;
       4: areturn

  public int code(io.dekorate.deps.okhttp3.Response$Builder);
    Code:
       0: aload_1
       1: getfield      #104                // Field io/dekorate/deps/okhttp3/Response$Builder.code:I
       4: ireturn

  public void apply(io.dekorate.deps.okhttp3.ConnectionSpec, javax.net.ssl.SSLSocket, boolean);
    Code:
       0: aload_1
       1: aload_2
       2: iload_3
       3: invokevirtual #113                // Method io/dekorate/deps/okhttp3/ConnectionSpec.apply:(Ljavax/net/ssl/SSLSocket;Z)V
       6: return

  public boolean isInvalidHttpUrlHost(java.lang.IllegalArgumentException);
    Code:
       0: aload_1
       1: invokevirtual #127                // Method java/lang/IllegalArgumentException.getMessage:()Ljava/lang/String;
       4: ldc           #129                // String Invalid URL host
       6: invokevirtual #135                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       9: ireturn

  public io.dekorate.deps.okhttp3.internal.connection.StreamAllocation streamAllocation(io.dekorate.deps.okhttp3.Call);
    Code:
       0: aload_1
       1: checkcast     #140                // class io/dekorate/deps/okhttp3/RealCall
       4: invokevirtual #143                // Method io/dekorate/deps/okhttp3/RealCall.streamAllocation:()Lio/dekorate/deps/okhttp3/internal/connection/StreamAllocation;
       7: areturn

  public java.io.IOException timeoutExit(io.dekorate.deps.okhttp3.Call, java.io.IOException);
    Code:
       0: aload_1
       1: checkcast     #140                // class io/dekorate/deps/okhttp3/RealCall
       4: aload_2
       5: invokevirtual #151                // Method io/dekorate/deps/okhttp3/RealCall.timeoutExit:(Ljava/io/IOException;)Ljava/io/IOException;
       8: areturn

  public io.dekorate.deps.okhttp3.Call newWebSocketCall(io.dekorate.deps.okhttp3.OkHttpClient, io.dekorate.deps.okhttp3.Request);
    Code:
       0: aload_1
       1: aload_2
       2: iconst_1
       3: invokestatic  #158                // Method io/dekorate/deps/okhttp3/RealCall.newRealCall:(Lio/dekorate/deps/okhttp3/OkHttpClient;Lio/dekorate/deps/okhttp3/Request;Z)Lio/dekorate/deps/okhttp3/RealCall;
       6: areturn
}
