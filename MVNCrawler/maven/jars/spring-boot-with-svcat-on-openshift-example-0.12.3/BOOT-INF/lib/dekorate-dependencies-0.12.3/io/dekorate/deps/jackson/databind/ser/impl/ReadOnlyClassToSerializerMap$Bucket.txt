Compiled from "ReadOnlyClassToSerializerMap.java"
final class io.dekorate.deps.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket {
  public final io.dekorate.deps.jackson.databind.JsonSerializer<java.lang.Object> value;

  public final io.dekorate.deps.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket next;

  protected final java.lang.Class<?> _class;

  protected final io.dekorate.deps.jackson.databind.JavaType _type;

  protected final boolean _isTyped;

  public io.dekorate.deps.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket(io.dekorate.deps.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket, io.dekorate.deps.jackson.databind.util.TypeKey, io.dekorate.deps.jackson.databind.JsonSerializer<java.lang.Object>);
    Code:
       0: aload_0
       1: invokespecial #26                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #28                 // Field next:Lio/dekorate/deps/jackson/databind/ser/impl/ReadOnlyClassToSerializerMap$Bucket;
       9: aload_0
      10: aload_3
      11: putfield      #30                 // Field value:Lio/dekorate/deps/jackson/databind/JsonSerializer;
      14: aload_0
      15: aload_2
      16: invokevirtual #36                 // Method io/dekorate/deps/jackson/databind/util/TypeKey.isTyped:()Z
      19: putfield      #38                 // Field _isTyped:Z
      22: aload_0
      23: aload_2
      24: invokevirtual #42                 // Method io/dekorate/deps/jackson/databind/util/TypeKey.getRawType:()Ljava/lang/Class;
      27: putfield      #44                 // Field _class:Ljava/lang/Class;
      30: aload_0
      31: aload_2
      32: invokevirtual #48                 // Method io/dekorate/deps/jackson/databind/util/TypeKey.getType:()Lio/dekorate/deps/jackson/databind/JavaType;
      35: putfield      #50                 // Field _type:Lio/dekorate/deps/jackson/databind/JavaType;
      38: return

  public boolean matchesTyped(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #44                 // Field _class:Ljava/lang/Class;
       4: aload_1
       5: if_acmpne     19
       8: aload_0
       9: getfield      #38                 // Field _isTyped:Z
      12: ifeq          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public boolean matchesUntyped(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #44                 // Field _class:Ljava/lang/Class;
       4: aload_1
       5: if_acmpne     19
       8: aload_0
       9: getfield      #38                 // Field _isTyped:Z
      12: ifne          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public boolean matchesTyped(io.dekorate.deps.jackson.databind.JavaType);
    Code:
       0: aload_0
       1: getfield      #38                 // Field _isTyped:Z
       4: ifeq          22
       7: aload_1
       8: aload_0
       9: getfield      #50                 // Field _type:Lio/dekorate/deps/jackson/databind/JavaType;
      12: invokevirtual #64                 // Method io/dekorate/deps/jackson/databind/JavaType.equals:(Ljava/lang/Object;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public boolean matchesUntyped(io.dekorate.deps.jackson.databind.JavaType);
    Code:
       0: aload_0
       1: getfield      #38                 // Field _isTyped:Z
       4: ifne          22
       7: aload_1
       8: aload_0
       9: getfield      #50                 // Field _type:Lio/dekorate/deps/jackson/databind/JavaType;
      12: invokevirtual #64                 // Method io/dekorate/deps/jackson/databind/JavaType.equals:(Ljava/lang/Object;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn
}
