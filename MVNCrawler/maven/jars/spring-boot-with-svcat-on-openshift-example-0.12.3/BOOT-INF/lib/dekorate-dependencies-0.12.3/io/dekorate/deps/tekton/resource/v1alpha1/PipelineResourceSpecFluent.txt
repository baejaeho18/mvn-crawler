Compiled from "PipelineResourceSpecFluent.java"
public interface io.dekorate.deps.tekton.resource.v1alpha1.PipelineResourceSpecFluent<A extends io.dekorate.deps.tekton.resource.v1alpha1.PipelineResourceSpecFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getDescription();

  public abstract A withDescription(java.lang.String);

  public abstract java.lang.Boolean hasDescription();

  public abstract A withNewDescription(java.lang.String);

  public abstract A withNewDescription(java.lang.StringBuilder);

  public abstract A withNewDescription(java.lang.StringBuffer);

  public abstract A addToParams(int, io.dekorate.deps.tekton.resource.v1alpha1.ResourceParam);

  public abstract A setToParams(int, io.dekorate.deps.tekton.resource.v1alpha1.ResourceParam);

  public abstract A addToParams(io.dekorate.deps.tekton.resource.v1alpha1.ResourceParam...);

  public abstract A addAllToParams(java.util.Collection<io.dekorate.deps.tekton.resource.v1alpha1.ResourceParam>);

  public abstract A removeFromParams(io.dekorate.deps.tekton.resource.v1alpha1.ResourceParam...);

  public abstract A removeAllFromParams(java.util.Collection<io.dekorate.deps.tekton.resource.v1alpha1.ResourceParam>);

  public abstract A removeMatchingFromParams(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.tekton.resource.v1alpha1.ResourceParamBuilder>);

  public abstract java.util.List<io.dekorate.deps.tekton.resource.v1alpha1.ResourceParam> getParams();

  public abstract java.util.List<io.dekorate.deps.tekton.resource.v1alpha1.ResourceParam> buildParams();

  public abstract io.dekorate.deps.tekton.resource.v1alpha1.ResourceParam buildParam(int);

  public abstract io.dekorate.deps.tekton.resource.v1alpha1.ResourceParam buildFirstParam();

  public abstract io.dekorate.deps.tekton.resource.v1alpha1.ResourceParam buildLastParam();

  public abstract io.dekorate.deps.tekton.resource.v1alpha1.ResourceParam buildMatchingParam(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.tekton.resource.v1alpha1.ResourceParamBuilder>);

  public abstract java.lang.Boolean hasMatchingParam(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.tekton.resource.v1alpha1.ResourceParamBuilder>);

  public abstract A withParams(java.util.List<io.dekorate.deps.tekton.resource.v1alpha1.ResourceParam>);

  public abstract A withParams(io.dekorate.deps.tekton.resource.v1alpha1.ResourceParam...);

  public abstract java.lang.Boolean hasParams();

  public abstract A addNewParam(java.lang.String, java.lang.String);

  public abstract io.dekorate.deps.tekton.resource.v1alpha1.PipelineResourceSpecFluent$ParamsNested<A> addNewParam();

  public abstract io.dekorate.deps.tekton.resource.v1alpha1.PipelineResourceSpecFluent$ParamsNested<A> addNewParamLike(io.dekorate.deps.tekton.resource.v1alpha1.ResourceParam);

  public abstract io.dekorate.deps.tekton.resource.v1alpha1.PipelineResourceSpecFluent$ParamsNested<A> setNewParamLike(int, io.dekorate.deps.tekton.resource.v1alpha1.ResourceParam);

  public abstract io.dekorate.deps.tekton.resource.v1alpha1.PipelineResourceSpecFluent$ParamsNested<A> editParam(int);

  public abstract io.dekorate.deps.tekton.resource.v1alpha1.PipelineResourceSpecFluent$ParamsNested<A> editFirstParam();

  public abstract io.dekorate.deps.tekton.resource.v1alpha1.PipelineResourceSpecFluent$ParamsNested<A> editLastParam();

  public abstract io.dekorate.deps.tekton.resource.v1alpha1.PipelineResourceSpecFluent$ParamsNested<A> editMatchingParam(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.tekton.resource.v1alpha1.ResourceParamBuilder>);

  public abstract A addToSecrets(int, io.dekorate.deps.tekton.resource.v1alpha1.SecretParam);

  public abstract A setToSecrets(int, io.dekorate.deps.tekton.resource.v1alpha1.SecretParam);

  public abstract A addToSecrets(io.dekorate.deps.tekton.resource.v1alpha1.SecretParam...);

  public abstract A addAllToSecrets(java.util.Collection<io.dekorate.deps.tekton.resource.v1alpha1.SecretParam>);

  public abstract A removeFromSecrets(io.dekorate.deps.tekton.resource.v1alpha1.SecretParam...);

  public abstract A removeAllFromSecrets(java.util.Collection<io.dekorate.deps.tekton.resource.v1alpha1.SecretParam>);

  public abstract A removeMatchingFromSecrets(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.tekton.resource.v1alpha1.SecretParamBuilder>);

  public abstract java.util.List<io.dekorate.deps.tekton.resource.v1alpha1.SecretParam> getSecrets();

  public abstract java.util.List<io.dekorate.deps.tekton.resource.v1alpha1.SecretParam> buildSecrets();

  public abstract io.dekorate.deps.tekton.resource.v1alpha1.SecretParam buildSecret(int);

  public abstract io.dekorate.deps.tekton.resource.v1alpha1.SecretParam buildFirstSecret();

  public abstract io.dekorate.deps.tekton.resource.v1alpha1.SecretParam buildLastSecret();

  public abstract io.dekorate.deps.tekton.resource.v1alpha1.SecretParam buildMatchingSecret(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.tekton.resource.v1alpha1.SecretParamBuilder>);

  public abstract java.lang.Boolean hasMatchingSecret(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.tekton.resource.v1alpha1.SecretParamBuilder>);

  public abstract A withSecrets(java.util.List<io.dekorate.deps.tekton.resource.v1alpha1.SecretParam>);

  public abstract A withSecrets(io.dekorate.deps.tekton.resource.v1alpha1.SecretParam...);

  public abstract java.lang.Boolean hasSecrets();

  public abstract A addNewSecret(java.lang.String, java.lang.String, java.lang.String);

  public abstract io.dekorate.deps.tekton.resource.v1alpha1.PipelineResourceSpecFluent$SecretsNested<A> addNewSecret();

  public abstract io.dekorate.deps.tekton.resource.v1alpha1.PipelineResourceSpecFluent$SecretsNested<A> addNewSecretLike(io.dekorate.deps.tekton.resource.v1alpha1.SecretParam);

  public abstract io.dekorate.deps.tekton.resource.v1alpha1.PipelineResourceSpecFluent$SecretsNested<A> setNewSecretLike(int, io.dekorate.deps.tekton.resource.v1alpha1.SecretParam);

  public abstract io.dekorate.deps.tekton.resource.v1alpha1.PipelineResourceSpecFluent$SecretsNested<A> editSecret(int);

  public abstract io.dekorate.deps.tekton.resource.v1alpha1.PipelineResourceSpecFluent$SecretsNested<A> editFirstSecret();

  public abstract io.dekorate.deps.tekton.resource.v1alpha1.PipelineResourceSpecFluent$SecretsNested<A> editLastSecret();

  public abstract io.dekorate.deps.tekton.resource.v1alpha1.PipelineResourceSpecFluent$SecretsNested<A> editMatchingSecret(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.tekton.resource.v1alpha1.SecretParamBuilder>);

  public abstract java.lang.String getType();

  public abstract A withType(java.lang.String);

  public abstract java.lang.Boolean hasType();

  public abstract A withNewType(java.lang.String);

  public abstract A withNewType(java.lang.StringBuilder);

  public abstract A withNewType(java.lang.StringBuffer);
}
