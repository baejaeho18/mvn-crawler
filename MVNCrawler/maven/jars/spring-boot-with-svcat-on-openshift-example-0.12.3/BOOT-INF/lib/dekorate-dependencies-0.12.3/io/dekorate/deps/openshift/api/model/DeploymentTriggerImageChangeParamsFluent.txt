Compiled from "DeploymentTriggerImageChangeParamsFluent.java"
public interface io.dekorate.deps.openshift.api.model.DeploymentTriggerImageChangeParamsFluent<A extends io.dekorate.deps.openshift.api.model.DeploymentTriggerImageChangeParamsFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.Boolean isAutomatic();

  public abstract A withAutomatic(java.lang.Boolean);

  public abstract java.lang.Boolean hasAutomatic();

  public abstract A withNewAutomatic(java.lang.String);

  public abstract A withNewAutomatic(boolean);

  public abstract A addToContainerNames(int, java.lang.String);

  public abstract A setToContainerNames(int, java.lang.String);

  public abstract A addToContainerNames(java.lang.String...);

  public abstract A addAllToContainerNames(java.util.Collection<java.lang.String>);

  public abstract A removeFromContainerNames(java.lang.String...);

  public abstract A removeAllFromContainerNames(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getContainerNames();

  public abstract java.lang.String getContainerName(int);

  public abstract java.lang.String getFirstContainerName();

  public abstract java.lang.String getLastContainerName();

  public abstract java.lang.String getMatchingContainerName(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingContainerName(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract A withContainerNames(java.util.List<java.lang.String>);

  public abstract A withContainerNames(java.lang.String...);

  public abstract java.lang.Boolean hasContainerNames();

  public abstract A addNewContainerName(java.lang.String);

  public abstract A addNewContainerName(java.lang.StringBuilder);

  public abstract A addNewContainerName(java.lang.StringBuffer);

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectReference getFrom();

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectReference buildFrom();

  public abstract A withFrom(io.dekorate.deps.kubernetes.api.model.ObjectReference);

  public abstract java.lang.Boolean hasFrom();

  public abstract io.dekorate.deps.openshift.api.model.DeploymentTriggerImageChangeParamsFluent$FromNested<A> withNewFrom();

  public abstract io.dekorate.deps.openshift.api.model.DeploymentTriggerImageChangeParamsFluent$FromNested<A> withNewFromLike(io.dekorate.deps.kubernetes.api.model.ObjectReference);

  public abstract io.dekorate.deps.openshift.api.model.DeploymentTriggerImageChangeParamsFluent$FromNested<A> editFrom();

  public abstract io.dekorate.deps.openshift.api.model.DeploymentTriggerImageChangeParamsFluent$FromNested<A> editOrNewFrom();

  public abstract io.dekorate.deps.openshift.api.model.DeploymentTriggerImageChangeParamsFluent$FromNested<A> editOrNewFromLike(io.dekorate.deps.kubernetes.api.model.ObjectReference);

  public abstract java.lang.String getLastTriggeredImage();

  public abstract A withLastTriggeredImage(java.lang.String);

  public abstract java.lang.Boolean hasLastTriggeredImage();

  public abstract A withNewLastTriggeredImage(java.lang.String);

  public abstract A withNewLastTriggeredImage(java.lang.StringBuilder);

  public abstract A withNewLastTriggeredImage(java.lang.StringBuffer);
}
