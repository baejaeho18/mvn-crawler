Compiled from "WorkspaceBindingFluent.java"
public interface io.dekorate.deps.tekton.pipeline.v1beta1.WorkspaceBindingFluent<A extends io.dekorate.deps.tekton.pipeline.v1beta1.WorkspaceBindingFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract io.dekorate.deps.kubernetes.api.model.ConfigMapVolumeSource getConfigMap();

  public abstract A withConfigMap(io.dekorate.deps.kubernetes.api.model.ConfigMapVolumeSource);

  public abstract java.lang.Boolean hasConfigMap();

  public abstract io.dekorate.deps.kubernetes.api.model.EmptyDirVolumeSource getEmptyDir();

  public abstract A withEmptyDir(io.dekorate.deps.kubernetes.api.model.EmptyDirVolumeSource);

  public abstract java.lang.Boolean hasEmptyDir();

  public abstract java.lang.String getName();

  public abstract A withName(java.lang.String);

  public abstract java.lang.Boolean hasName();

  public abstract A withNewName(java.lang.String);

  public abstract A withNewName(java.lang.StringBuilder);

  public abstract A withNewName(java.lang.StringBuffer);

  public abstract io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimVolumeSource getPersistentVolumeClaim();

  public abstract A withPersistentVolumeClaim(io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimVolumeSource);

  public abstract java.lang.Boolean hasPersistentVolumeClaim();

  public abstract A withNewPersistentVolumeClaim(java.lang.String, java.lang.Boolean);

  public abstract io.dekorate.deps.kubernetes.api.model.SecretVolumeSource getSecret();

  public abstract A withSecret(io.dekorate.deps.kubernetes.api.model.SecretVolumeSource);

  public abstract java.lang.Boolean hasSecret();

  public abstract java.lang.String getSubPath();

  public abstract A withSubPath(java.lang.String);

  public abstract java.lang.Boolean hasSubPath();

  public abstract A withNewSubPath(java.lang.String);

  public abstract A withNewSubPath(java.lang.StringBuilder);

  public abstract A withNewSubPath(java.lang.StringBuffer);
}
