Compiled from "DeliverySpecFluentImpl.java"
public class io.dekorate.deps.knative.duck.v1beta1.DeliverySpecFluentImpl<A extends io.dekorate.deps.knative.duck.v1beta1.DeliverySpecFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.BaseFluent<A> implements io.dekorate.deps.knative.duck.v1beta1.DeliverySpecFluent<A> {
  private java.lang.String backoffDelay;

  private java.lang.String backoffPolicy;

  private io.dekorate.deps.knative.duck.v1.DestinationBuilder deadLetterSink;

  private java.lang.Integer retry;

  public io.dekorate.deps.knative.duck.v1beta1.DeliverySpecFluentImpl();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method io/dekorate/deps/kubernetes/api/builder/BaseFluent."<init>":()V
       4: return

  public io.dekorate.deps.knative.duck.v1beta1.DeliverySpecFluentImpl(io.dekorate.deps.knative.duck.v1beta1.DeliverySpec);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method io/dekorate/deps/kubernetes/api/builder/BaseFluent."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #35                 // Method io/dekorate/deps/knative/duck/v1beta1/DeliverySpec.getBackoffDelay:()Ljava/lang/String;
       9: invokevirtual #39                 // Method withBackoffDelay:(Ljava/lang/String;)Lio/dekorate/deps/knative/duck/v1beta1/DeliverySpecFluent;
      12: pop
      13: aload_0
      14: aload_1
      15: invokevirtual #42                 // Method io/dekorate/deps/knative/duck/v1beta1/DeliverySpec.getBackoffPolicy:()Ljava/lang/String;
      18: invokevirtual #45                 // Method withBackoffPolicy:(Ljava/lang/String;)Lio/dekorate/deps/knative/duck/v1beta1/DeliverySpecFluent;
      21: pop
      22: aload_0
      23: aload_1
      24: invokevirtual #49                 // Method io/dekorate/deps/knative/duck/v1beta1/DeliverySpec.getDeadLetterSink:()Lio/dekorate/deps/knative/duck/v1/Destination;
      27: invokevirtual #53                 // Method withDeadLetterSink:(Lio/dekorate/deps/knative/duck/v1/Destination;)Lio/dekorate/deps/knative/duck/v1beta1/DeliverySpecFluent;
      30: pop
      31: aload_0
      32: aload_1
      33: invokevirtual #57                 // Method io/dekorate/deps/knative/duck/v1beta1/DeliverySpec.getRetry:()Ljava/lang/Integer;
      36: invokevirtual #61                 // Method withRetry:(Ljava/lang/Integer;)Lio/dekorate/deps/knative/duck/v1beta1/DeliverySpecFluent;
      39: pop
      40: return

  public java.lang.String getBackoffDelay();
    Code:
       0: aload_0
       1: getfield      #65                 // Field backoffDelay:Ljava/lang/String;
       4: areturn

  public A withBackoffDelay(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #65                 // Field backoffDelay:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasBackoffDelay();
    Code:
       0: aload_0
       1: getfield      #65                 // Field backoffDelay:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #74                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withNewBackoffDelay(java.lang.String);
    Code:
       0: aload_0
       1: new           #77                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #80                 // Method java/lang/String."<init>":(Ljava/lang/String;)V
       9: invokevirtual #39                 // Method withBackoffDelay:(Ljava/lang/String;)Lio/dekorate/deps/knative/duck/v1beta1/DeliverySpecFluent;
      12: areturn

  public A withNewBackoffDelay(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: new           #77                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #86                 // Method java/lang/String."<init>":(Ljava/lang/StringBuilder;)V
       9: invokevirtual #39                 // Method withBackoffDelay:(Ljava/lang/String;)Lio/dekorate/deps/knative/duck/v1beta1/DeliverySpecFluent;
      12: areturn

  public A withNewBackoffDelay(java.lang.StringBuffer);
    Code:
       0: aload_0
       1: new           #77                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #92                 // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
       9: invokevirtual #39                 // Method withBackoffDelay:(Ljava/lang/String;)Lio/dekorate/deps/knative/duck/v1beta1/DeliverySpecFluent;
      12: areturn

  public java.lang.String getBackoffPolicy();
    Code:
       0: aload_0
       1: getfield      #95                 // Field backoffPolicy:Ljava/lang/String;
       4: areturn

  public A withBackoffPolicy(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #95                 // Field backoffPolicy:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasBackoffPolicy();
    Code:
       0: aload_0
       1: getfield      #95                 // Field backoffPolicy:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #74                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withNewBackoffPolicy(java.lang.String);
    Code:
       0: aload_0
       1: new           #77                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #80                 // Method java/lang/String."<init>":(Ljava/lang/String;)V
       9: invokevirtual #45                 // Method withBackoffPolicy:(Ljava/lang/String;)Lio/dekorate/deps/knative/duck/v1beta1/DeliverySpecFluent;
      12: areturn

  public A withNewBackoffPolicy(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: new           #77                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #86                 // Method java/lang/String."<init>":(Ljava/lang/StringBuilder;)V
       9: invokevirtual #45                 // Method withBackoffPolicy:(Ljava/lang/String;)Lio/dekorate/deps/knative/duck/v1beta1/DeliverySpecFluent;
      12: areturn

  public A withNewBackoffPolicy(java.lang.StringBuffer);
    Code:
       0: aload_0
       1: new           #77                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #92                 // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
       9: invokevirtual #45                 // Method withBackoffPolicy:(Ljava/lang/String;)Lio/dekorate/deps/knative/duck/v1beta1/DeliverySpecFluent;
      12: areturn

  public io.dekorate.deps.knative.duck.v1.Destination getDeadLetterSink();
    Code:
       0: aload_0
       1: getfield      #100                // Field deadLetterSink:Lio/dekorate/deps/knative/duck/v1/DestinationBuilder;
       4: ifnull        17
       7: aload_0
       8: getfield      #100                // Field deadLetterSink:Lio/dekorate/deps/knative/duck/v1/DestinationBuilder;
      11: invokevirtual #105                // Method io/dekorate/deps/knative/duck/v1/DestinationBuilder.build:()Lio/dekorate/deps/knative/duck/v1/Destination;
      14: goto          18
      17: aconst_null
      18: areturn

  public io.dekorate.deps.knative.duck.v1.Destination buildDeadLetterSink();
    Code:
       0: aload_0
       1: getfield      #100                // Field deadLetterSink:Lio/dekorate/deps/knative/duck/v1/DestinationBuilder;
       4: ifnull        17
       7: aload_0
       8: getfield      #100                // Field deadLetterSink:Lio/dekorate/deps/knative/duck/v1/DestinationBuilder;
      11: invokevirtual #105                // Method io/dekorate/deps/knative/duck/v1/DestinationBuilder.build:()Lio/dekorate/deps/knative/duck/v1/Destination;
      14: goto          18
      17: aconst_null
      18: areturn

  public A withDeadLetterSink(io.dekorate.deps.knative.duck.v1.Destination);
    Code:
       0: aload_0
       1: getfield      #113                // Field _visitables:Lio/dekorate/deps/kubernetes/api/builder/VisitableMap;
       4: ldc           #114                // String deadLetterSink
       6: invokevirtual #120                // Method io/dekorate/deps/kubernetes/api/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
       9: aload_0
      10: getfield      #100                // Field deadLetterSink:Lio/dekorate/deps/knative/duck/v1/DestinationBuilder;
      13: invokeinterface #126,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      18: pop
      19: aload_1
      20: ifnull        54
      23: aload_0
      24: new           #102                // class io/dekorate/deps/knative/duck/v1/DestinationBuilder
      27: dup
      28: aload_1
      29: invokespecial #129                // Method io/dekorate/deps/knative/duck/v1/DestinationBuilder."<init>":(Lio/dekorate/deps/knative/duck/v1/Destination;)V
      32: putfield      #100                // Field deadLetterSink:Lio/dekorate/deps/knative/duck/v1/DestinationBuilder;
      35: aload_0
      36: getfield      #113                // Field _visitables:Lio/dekorate/deps/kubernetes/api/builder/VisitableMap;
      39: ldc           #114                // String deadLetterSink
      41: invokevirtual #120                // Method io/dekorate/deps/kubernetes/api/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      44: aload_0
      45: getfield      #100                // Field deadLetterSink:Lio/dekorate/deps/knative/duck/v1/DestinationBuilder;
      48: invokeinterface #132,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      53: pop
      54: aload_0
      55: areturn

  public java.lang.Boolean hasDeadLetterSink();
    Code:
       0: aload_0
       1: getfield      #100                // Field deadLetterSink:Lio/dekorate/deps/knative/duck/v1/DestinationBuilder;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #74                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public io.dekorate.deps.knative.duck.v1beta1.DeliverySpecFluent$DeadLetterSinkNested<A> withNewDeadLetterSink();
    Code:
       0: new           #10                 // class io/dekorate/deps/knative/duck/v1beta1/DeliverySpecFluentImpl$DeadLetterSinkNestedImpl
       3: dup
       4: aload_0
       5: invokespecial #140                // Method io/dekorate/deps/knative/duck/v1beta1/DeliverySpecFluentImpl$DeadLetterSinkNestedImpl."<init>":(Lio/dekorate/deps/knative/duck/v1beta1/DeliverySpecFluentImpl;)V
       8: areturn

  public io.dekorate.deps.knative.duck.v1beta1.DeliverySpecFluent$DeadLetterSinkNested<A> withNewDeadLetterSinkLike(io.dekorate.deps.knative.duck.v1.Destination);
    Code:
       0: new           #10                 // class io/dekorate/deps/knative/duck/v1beta1/DeliverySpecFluentImpl$DeadLetterSinkNestedImpl
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #146                // Method io/dekorate/deps/knative/duck/v1beta1/DeliverySpecFluentImpl$DeadLetterSinkNestedImpl."<init>":(Lio/dekorate/deps/knative/duck/v1beta1/DeliverySpecFluentImpl;Lio/dekorate/deps/knative/duck/v1/Destination;)V
       9: areturn

  public io.dekorate.deps.knative.duck.v1beta1.DeliverySpecFluent$DeadLetterSinkNested<A> editDeadLetterSink();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #149                // Method getDeadLetterSink:()Lio/dekorate/deps/knative/duck/v1/Destination;
       5: invokevirtual #151                // Method withNewDeadLetterSinkLike:(Lio/dekorate/deps/knative/duck/v1/Destination;)Lio/dekorate/deps/knative/duck/v1beta1/DeliverySpecFluent$DeadLetterSinkNested;
       8: areturn

  public io.dekorate.deps.knative.duck.v1beta1.DeliverySpecFluent$DeadLetterSinkNested<A> editOrNewDeadLetterSink();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #149                // Method getDeadLetterSink:()Lio/dekorate/deps/knative/duck/v1/Destination;
       5: ifnull        15
       8: aload_0
       9: invokevirtual #149                // Method getDeadLetterSink:()Lio/dekorate/deps/knative/duck/v1/Destination;
      12: goto          25
      15: new           #102                // class io/dekorate/deps/knative/duck/v1/DestinationBuilder
      18: dup
      19: invokespecial #153                // Method io/dekorate/deps/knative/duck/v1/DestinationBuilder."<init>":()V
      22: invokevirtual #105                // Method io/dekorate/deps/knative/duck/v1/DestinationBuilder.build:()Lio/dekorate/deps/knative/duck/v1/Destination;
      25: invokevirtual #151                // Method withNewDeadLetterSinkLike:(Lio/dekorate/deps/knative/duck/v1/Destination;)Lio/dekorate/deps/knative/duck/v1beta1/DeliverySpecFluent$DeadLetterSinkNested;
      28: areturn

  public io.dekorate.deps.knative.duck.v1beta1.DeliverySpecFluent$DeadLetterSinkNested<A> editOrNewDeadLetterSinkLike(io.dekorate.deps.knative.duck.v1.Destination);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #149                // Method getDeadLetterSink:()Lio/dekorate/deps/knative/duck/v1/Destination;
       5: ifnull        15
       8: aload_0
       9: invokevirtual #149                // Method getDeadLetterSink:()Lio/dekorate/deps/knative/duck/v1/Destination;
      12: goto          16
      15: aload_1
      16: invokevirtual #151                // Method withNewDeadLetterSinkLike:(Lio/dekorate/deps/knative/duck/v1/Destination;)Lio/dekorate/deps/knative/duck/v1beta1/DeliverySpecFluent$DeadLetterSinkNested;
      19: areturn

  public java.lang.Integer getRetry();
    Code:
       0: aload_0
       1: getfield      #156                // Field retry:Ljava/lang/Integer;
       4: areturn

  public A withRetry(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #156                // Field retry:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasRetry();
    Code:
       0: aload_0
       1: getfield      #156                // Field retry:Ljava/lang/Integer;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #74                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #165                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #165                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #2                  // class io/dekorate/deps/knative/duck/v1beta1/DeliverySpecFluentImpl
      28: astore_2
      29: aload_0
      30: getfield      #65                 // Field backoffDelay:Ljava/lang/String;
      33: ifnull        53
      36: aload_0
      37: getfield      #65                 // Field backoffDelay:Ljava/lang/String;
      40: aload_2
      41: getfield      #65                 // Field backoffDelay:Ljava/lang/String;
      44: invokevirtual #167                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      47: ifne          62
      50: goto          60
      53: aload_2
      54: getfield      #65                 // Field backoffDelay:Ljava/lang/String;
      57: ifnull        62
      60: iconst_0
      61: ireturn
      62: aload_0
      63: getfield      #95                 // Field backoffPolicy:Ljava/lang/String;
      66: ifnull        86
      69: aload_0
      70: getfield      #95                 // Field backoffPolicy:Ljava/lang/String;
      73: aload_2
      74: getfield      #95                 // Field backoffPolicy:Ljava/lang/String;
      77: invokevirtual #167                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      80: ifne          95
      83: goto          93
      86: aload_2
      87: getfield      #95                 // Field backoffPolicy:Ljava/lang/String;
      90: ifnull        95
      93: iconst_0
      94: ireturn
      95: aload_0
      96: getfield      #100                // Field deadLetterSink:Lio/dekorate/deps/knative/duck/v1/DestinationBuilder;
      99: ifnull        119
     102: aload_0
     103: getfield      #100                // Field deadLetterSink:Lio/dekorate/deps/knative/duck/v1/DestinationBuilder;
     106: aload_2
     107: getfield      #100                // Field deadLetterSink:Lio/dekorate/deps/knative/duck/v1/DestinationBuilder;
     110: invokevirtual #168                // Method io/dekorate/deps/knative/duck/v1/DestinationBuilder.equals:(Ljava/lang/Object;)Z
     113: ifne          128
     116: goto          126
     119: aload_2
     120: getfield      #100                // Field deadLetterSink:Lio/dekorate/deps/knative/duck/v1/DestinationBuilder;
     123: ifnull        128
     126: iconst_0
     127: ireturn
     128: aload_0
     129: getfield      #156                // Field retry:Ljava/lang/Integer;
     132: ifnull        152
     135: aload_0
     136: getfield      #156                // Field retry:Ljava/lang/Integer;
     139: aload_2
     140: getfield      #156                // Field retry:Ljava/lang/Integer;
     143: invokevirtual #171                // Method java/lang/Integer.equals:(Ljava/lang/Object;)Z
     146: ifne          161
     149: goto          159
     152: aload_2
     153: getfield      #156                // Field retry:Ljava/lang/Integer;
     156: ifnull        161
     159: iconst_0
     160: ireturn
     161: iconst_1
     162: ireturn
}
