Compiled from "TagReferenceFluent.java"
public interface io.dekorate.deps.openshift.api.model.TagReferenceFluent<A extends io.dekorate.deps.openshift.api.model.TagReferenceFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract A addToAnnotations(java.lang.String, java.lang.String);

  public abstract A addToAnnotations(java.util.Map<java.lang.String, java.lang.String>);

  public abstract A removeFromAnnotations(java.lang.String);

  public abstract A removeFromAnnotations(java.util.Map<java.lang.String, java.lang.String>);

  public abstract java.util.Map<java.lang.String, java.lang.String> getAnnotations();

  public abstract A withAnnotations(java.util.Map<java.lang.String, java.lang.String>);

  public abstract java.lang.Boolean hasAnnotations();

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectReference getFrom();

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectReference buildFrom();

  public abstract A withFrom(io.dekorate.deps.kubernetes.api.model.ObjectReference);

  public abstract java.lang.Boolean hasFrom();

  public abstract io.dekorate.deps.openshift.api.model.TagReferenceFluent$FromNested<A> withNewFrom();

  public abstract io.dekorate.deps.openshift.api.model.TagReferenceFluent$FromNested<A> withNewFromLike(io.dekorate.deps.kubernetes.api.model.ObjectReference);

  public abstract io.dekorate.deps.openshift.api.model.TagReferenceFluent$FromNested<A> editFrom();

  public abstract io.dekorate.deps.openshift.api.model.TagReferenceFluent$FromNested<A> editOrNewFrom();

  public abstract io.dekorate.deps.openshift.api.model.TagReferenceFluent$FromNested<A> editOrNewFromLike(io.dekorate.deps.kubernetes.api.model.ObjectReference);

  public abstract java.lang.Long getGeneration();

  public abstract A withGeneration(java.lang.Long);

  public abstract java.lang.Boolean hasGeneration();

  public abstract io.dekorate.deps.openshift.api.model.TagImportPolicy getImportPolicy();

  public abstract io.dekorate.deps.openshift.api.model.TagImportPolicy buildImportPolicy();

  public abstract A withImportPolicy(io.dekorate.deps.openshift.api.model.TagImportPolicy);

  public abstract java.lang.Boolean hasImportPolicy();

  public abstract A withNewImportPolicy(java.lang.Boolean, java.lang.Boolean);

  public abstract io.dekorate.deps.openshift.api.model.TagReferenceFluent$ImportPolicyNested<A> withNewImportPolicy();

  public abstract io.dekorate.deps.openshift.api.model.TagReferenceFluent$ImportPolicyNested<A> withNewImportPolicyLike(io.dekorate.deps.openshift.api.model.TagImportPolicy);

  public abstract io.dekorate.deps.openshift.api.model.TagReferenceFluent$ImportPolicyNested<A> editImportPolicy();

  public abstract io.dekorate.deps.openshift.api.model.TagReferenceFluent$ImportPolicyNested<A> editOrNewImportPolicy();

  public abstract io.dekorate.deps.openshift.api.model.TagReferenceFluent$ImportPolicyNested<A> editOrNewImportPolicyLike(io.dekorate.deps.openshift.api.model.TagImportPolicy);

  public abstract java.lang.String getName();

  public abstract A withName(java.lang.String);

  public abstract java.lang.Boolean hasName();

  public abstract A withNewName(java.lang.String);

  public abstract A withNewName(java.lang.StringBuilder);

  public abstract A withNewName(java.lang.StringBuffer);

  public abstract java.lang.Boolean isReference();

  public abstract A withReference(java.lang.Boolean);

  public abstract java.lang.Boolean hasReference();

  public abstract A withNewReference(java.lang.String);

  public abstract A withNewReference(boolean);

  public abstract io.dekorate.deps.openshift.api.model.TagReferencePolicy getReferencePolicy();

  public abstract io.dekorate.deps.openshift.api.model.TagReferencePolicy buildReferencePolicy();

  public abstract A withReferencePolicy(io.dekorate.deps.openshift.api.model.TagReferencePolicy);

  public abstract java.lang.Boolean hasReferencePolicy();

  public abstract A withNewReferencePolicy(java.lang.String);

  public abstract io.dekorate.deps.openshift.api.model.TagReferenceFluent$ReferencePolicyNested<A> withNewReferencePolicy();

  public abstract io.dekorate.deps.openshift.api.model.TagReferenceFluent$ReferencePolicyNested<A> withNewReferencePolicyLike(io.dekorate.deps.openshift.api.model.TagReferencePolicy);

  public abstract io.dekorate.deps.openshift.api.model.TagReferenceFluent$ReferencePolicyNested<A> editReferencePolicy();

  public abstract io.dekorate.deps.openshift.api.model.TagReferenceFluent$ReferencePolicyNested<A> editOrNewReferencePolicy();

  public abstract io.dekorate.deps.openshift.api.model.TagReferenceFluent$ReferencePolicyNested<A> editOrNewReferencePolicyLike(io.dekorate.deps.openshift.api.model.TagReferencePolicy);
}
