Compiled from "ConditionFluent.java"
public interface io.dekorate.deps.knative.v1.ConditionFluent<A extends io.dekorate.deps.knative.v1.ConditionFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract io.dekorate.deps.knative.v1.VolatileTime getLastTransitionTime();

  public abstract io.dekorate.deps.knative.v1.VolatileTime buildLastTransitionTime();

  public abstract A withLastTransitionTime(io.dekorate.deps.knative.v1.VolatileTime);

  public abstract java.lang.Boolean hasLastTransitionTime();

  public abstract A withNewLastTransitionTime(java.lang.String);

  public abstract io.dekorate.deps.knative.v1.ConditionFluent$LastTransitionTimeNested<A> withNewLastTransitionTime();

  public abstract io.dekorate.deps.knative.v1.ConditionFluent$LastTransitionTimeNested<A> withNewLastTransitionTimeLike(io.dekorate.deps.knative.v1.VolatileTime);

  public abstract io.dekorate.deps.knative.v1.ConditionFluent$LastTransitionTimeNested<A> editLastTransitionTime();

  public abstract io.dekorate.deps.knative.v1.ConditionFluent$LastTransitionTimeNested<A> editOrNewLastTransitionTime();

  public abstract io.dekorate.deps.knative.v1.ConditionFluent$LastTransitionTimeNested<A> editOrNewLastTransitionTimeLike(io.dekorate.deps.knative.v1.VolatileTime);

  public abstract java.lang.String getMessage();

  public abstract A withMessage(java.lang.String);

  public abstract java.lang.Boolean hasMessage();

  public abstract A withNewMessage(java.lang.String);

  public abstract A withNewMessage(java.lang.StringBuilder);

  public abstract A withNewMessage(java.lang.StringBuffer);

  public abstract java.lang.String getReason();

  public abstract A withReason(java.lang.String);

  public abstract java.lang.Boolean hasReason();

  public abstract A withNewReason(java.lang.String);

  public abstract A withNewReason(java.lang.StringBuilder);

  public abstract A withNewReason(java.lang.StringBuffer);

  public abstract java.lang.String getSeverity();

  public abstract A withSeverity(java.lang.String);

  public abstract java.lang.Boolean hasSeverity();

  public abstract A withNewSeverity(java.lang.String);

  public abstract A withNewSeverity(java.lang.StringBuilder);

  public abstract A withNewSeverity(java.lang.StringBuffer);

  public abstract java.lang.String getStatus();

  public abstract A withStatus(java.lang.String);

  public abstract java.lang.Boolean hasStatus();

  public abstract A withNewStatus(java.lang.String);

  public abstract A withNewStatus(java.lang.StringBuilder);

  public abstract A withNewStatus(java.lang.StringBuffer);

  public abstract java.lang.String getType();

  public abstract A withType(java.lang.String);

  public abstract java.lang.Boolean hasType();

  public abstract A withNewType(java.lang.String);

  public abstract A withNewType(java.lang.StringBuilder);

  public abstract A withNewType(java.lang.StringBuffer);
}
