Compiled from "NamedExtensionFluent.java"
public interface io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent<A extends io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract io.dekorate.deps.kubernetes.api.model.HasMetadata getExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.HasMetadata buildExtension();

  public abstract A withExtension(io.dekorate.deps.kubernetes.api.model.HasMetadata);

  public abstract java.lang.Boolean hasExtension();

  public abstract A withValidatingWebhookConfigurationExtension(io.dekorate.deps.kubernetes.api.model.admissionregistration.ValidatingWebhookConfiguration);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ValidatingWebhookConfigurationExtensionNested<A> withNewValidatingWebhookConfigurationExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ValidatingWebhookConfigurationExtensionNested<A> withNewValidatingWebhookConfigurationExtensionLike(io.dekorate.deps.kubernetes.api.model.admissionregistration.ValidatingWebhookConfiguration);

  public abstract A withStorageClassExtension(io.dekorate.deps.kubernetes.api.model.storage.StorageClass);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$StorageClassExtensionNested<A> withNewStorageClassExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$StorageClassExtensionNested<A> withNewStorageClassExtensionLike(io.dekorate.deps.kubernetes.api.model.storage.StorageClass);

  public abstract A withClusterRoleBindingExtension(io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBinding);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ClusterRoleBindingExtensionNested<A> withNewClusterRoleBindingExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ClusterRoleBindingExtensionNested<A> withNewClusterRoleBindingExtensionLike(io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBinding);

  public abstract A withCSINodeExtension(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSINode);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$CSINodeExtensionNested<A> withNewCSINodeExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$CSINodeExtensionNested<A> withNewCSINodeExtensionLike(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSINode);

  public abstract A withOpenshiftRoleBindingExtension(io.dekorate.deps.openshift.api.model.OpenshiftRoleBinding);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$OpenshiftRoleBindingExtensionNested<A> withNewOpenshiftRoleBindingExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$OpenshiftRoleBindingExtensionNested<A> withNewOpenshiftRoleBindingExtensionLike(io.dekorate.deps.openshift.api.model.OpenshiftRoleBinding);

  public abstract A withPodDisruptionBudgetExtension(io.dekorate.deps.kubernetes.api.model.policy.PodDisruptionBudget);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$PodDisruptionBudgetExtensionNested<A> withNewPodDisruptionBudgetExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$PodDisruptionBudgetExtensionNested<A> withNewPodDisruptionBudgetExtensionLike(io.dekorate.deps.kubernetes.api.model.policy.PodDisruptionBudget);

  public abstract A withOpenshiftClusterRoleBindingExtension(io.dekorate.deps.openshift.api.model.OpenshiftClusterRoleBinding);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$OpenshiftClusterRoleBindingExtensionNested<A> withNewOpenshiftClusterRoleBindingExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$OpenshiftClusterRoleBindingExtensionNested<A> withNewOpenshiftClusterRoleBindingExtensionLike(io.dekorate.deps.openshift.api.model.OpenshiftClusterRoleBinding);

  public abstract A withNetworkPolicyExtension(io.dekorate.deps.kubernetes.api.model.networking.NetworkPolicy);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$NetworkPolicyExtensionNested<A> withNewNetworkPolicyExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$NetworkPolicyExtensionNested<A> withNewNetworkPolicyExtensionLike(io.dekorate.deps.kubernetes.api.model.networking.NetworkPolicy);

  public abstract A withRouteExtension(io.dekorate.deps.openshift.api.model.Route);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$RouteExtensionNested<A> withNewRouteExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$RouteExtensionNested<A> withNewRouteExtensionLike(io.dekorate.deps.openshift.api.model.Route);

  public abstract A withNamespaceExtension(io.dekorate.deps.kubernetes.api.model.Namespace);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$NamespaceExtensionNested<A> withNewNamespaceExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$NamespaceExtensionNested<A> withNewNamespaceExtensionLike(io.dekorate.deps.kubernetes.api.model.Namespace);

  public abstract A withLocalSubjectAccessReviewExtension(io.dekorate.deps.kubernetes.api.model.authorization.LocalSubjectAccessReview);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$LocalSubjectAccessReviewExtensionNested<A> withNewLocalSubjectAccessReviewExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$LocalSubjectAccessReviewExtensionNested<A> withNewLocalSubjectAccessReviewExtensionLike(io.dekorate.deps.kubernetes.api.model.authorization.LocalSubjectAccessReview);

  public abstract A withLeaseExtension(io.dekorate.deps.kubernetes.api.model.coordination.v1.Lease);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$LeaseExtensionNested<A> withNewLeaseExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$LeaseExtensionNested<A> withNewLeaseExtensionLike(io.dekorate.deps.kubernetes.api.model.coordination.v1.Lease);

  public abstract A withServiceExtension(io.dekorate.deps.kubernetes.api.model.Service);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ServiceExtensionNested<A> withNewServiceExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ServiceExtensionNested<A> withNewServiceExtensionLike(io.dekorate.deps.kubernetes.api.model.Service);

  public abstract A withReplicationControllerExtension(io.dekorate.deps.kubernetes.api.model.ReplicationController);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ReplicationControllerExtensionNested<A> withNewReplicationControllerExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ReplicationControllerExtensionNested<A> withNewReplicationControllerExtensionLike(io.dekorate.deps.kubernetes.api.model.ReplicationController);

  public abstract A withSubjectAccessReviewExtension(io.dekorate.deps.kubernetes.api.model.authorization.SubjectAccessReview);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$SubjectAccessReviewExtensionNested<A> withNewSubjectAccessReviewExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$SubjectAccessReviewExtensionNested<A> withNewSubjectAccessReviewExtensionLike(io.dekorate.deps.kubernetes.api.model.authorization.SubjectAccessReview);

  public abstract A withMutatingWebhookConfigurationExtension(io.dekorate.deps.kubernetes.api.model.admissionregistration.MutatingWebhookConfiguration);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$MutatingWebhookConfigurationExtensionNested<A> withNewMutatingWebhookConfigurationExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$MutatingWebhookConfigurationExtensionNested<A> withNewMutatingWebhookConfigurationExtensionLike(io.dekorate.deps.kubernetes.api.model.admissionregistration.MutatingWebhookConfiguration);

  public abstract A withPodMetricsExtension(io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.PodMetrics);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$PodMetricsExtensionNested<A> withNewPodMetricsExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$PodMetricsExtensionNested<A> withNewPodMetricsExtensionLike(io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.PodMetrics);

  public abstract A withHorizontalPodAutoscalerExtension(io.dekorate.deps.kubernetes.api.model.HorizontalPodAutoscaler);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$HorizontalPodAutoscalerExtensionNested<A> withNewHorizontalPodAutoscalerExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$HorizontalPodAutoscalerExtensionNested<A> withNewHorizontalPodAutoscalerExtensionLike(io.dekorate.deps.kubernetes.api.model.HorizontalPodAutoscaler);

  public abstract A withImageExtension(io.dekorate.deps.openshift.api.model.Image);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ImageExtensionNested<A> withNewImageExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ImageExtensionNested<A> withNewImageExtensionLike(io.dekorate.deps.openshift.api.model.Image);

  public abstract A withReplicaSetExtension(io.dekorate.deps.kubernetes.api.model.apps.ReplicaSet);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ReplicaSetExtensionNested<A> withNewReplicaSetExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ReplicaSetExtensionNested<A> withNewReplicaSetExtensionLike(io.dekorate.deps.kubernetes.api.model.apps.ReplicaSet);

  public abstract A withEndpointSliceExtension(io.dekorate.deps.kubernetes.api.model.discovery.EndpointSlice);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$EndpointSliceExtensionNested<A> withNewEndpointSliceExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$EndpointSliceExtensionNested<A> withNewEndpointSliceExtensionLike(io.dekorate.deps.kubernetes.api.model.discovery.EndpointSlice);

  public abstract A withCronJobExtension(io.dekorate.deps.kubernetes.api.model.batch.CronJob);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$CronJobExtensionNested<A> withNewCronJobExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$CronJobExtensionNested<A> withNewCronJobExtensionLike(io.dekorate.deps.kubernetes.api.model.batch.CronJob);

  public abstract A withEndpointsExtension(io.dekorate.deps.kubernetes.api.model.Endpoints);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$EndpointsExtensionNested<A> withNewEndpointsExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$EndpointsExtensionNested<A> withNewEndpointsExtensionLike(io.dekorate.deps.kubernetes.api.model.Endpoints);

  public abstract A withPodExtension(io.dekorate.deps.kubernetes.api.model.Pod);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$PodExtensionNested<A> withNewPodExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$PodExtensionNested<A> withNewPodExtensionLike(io.dekorate.deps.kubernetes.api.model.Pod);

  public abstract A withConfigMapExtension(io.dekorate.deps.kubernetes.api.model.ConfigMap);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ConfigMapExtensionNested<A> withNewConfigMapExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ConfigMapExtensionNested<A> withNewConfigMapExtensionLike(io.dekorate.deps.kubernetes.api.model.ConfigMap);

  public abstract A withCustomResourceDefinitionExtension(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceDefinition);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$CustomResourceDefinitionExtensionNested<A> withNewCustomResourceDefinitionExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$CustomResourceDefinitionExtensionNested<A> withNewCustomResourceDefinitionExtensionLike(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceDefinition);

  public abstract A withBuildExtension(io.dekorate.deps.openshift.api.model.Build);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$BuildExtensionNested<A> withNewBuildExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$BuildExtensionNested<A> withNewBuildExtensionLike(io.dekorate.deps.openshift.api.model.Build);

  public abstract A withImageStreamTagExtension(io.dekorate.deps.openshift.api.model.ImageStreamTag);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ImageStreamTagExtensionNested<A> withNewImageStreamTagExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ImageStreamTagExtensionNested<A> withNewImageStreamTagExtensionLike(io.dekorate.deps.openshift.api.model.ImageStreamTag);

  public abstract A withGroupExtension(io.dekorate.deps.openshift.api.model.Group);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$GroupExtensionNested<A> withNewGroupExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$GroupExtensionNested<A> withNewGroupExtensionLike(io.dekorate.deps.openshift.api.model.Group);

  public abstract A withImageSignatureExtension(io.dekorate.deps.openshift.api.model.ImageSignature);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ImageSignatureExtensionNested<A> withNewImageSignatureExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ImageSignatureExtensionNested<A> withNewImageSignatureExtensionLike(io.dekorate.deps.openshift.api.model.ImageSignature);

  public abstract A withScaleExtension(io.dekorate.deps.kubernetes.api.model.v1.Scale);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ScaleExtensionNested<A> withNewScaleExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ScaleExtensionNested<A> withNewScaleExtensionLike(io.dekorate.deps.kubernetes.api.model.v1.Scale);

  public abstract A withResourceQuotaExtension(io.dekorate.deps.kubernetes.api.model.ResourceQuota);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ResourceQuotaExtensionNested<A> withNewResourceQuotaExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ResourceQuotaExtensionNested<A> withNewResourceQuotaExtensionLike(io.dekorate.deps.kubernetes.api.model.ResourceQuota);

  public abstract A withBuildRequestExtension(io.dekorate.deps.openshift.api.model.BuildRequest);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$BuildRequestExtensionNested<A> withNewBuildRequestExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$BuildRequestExtensionNested<A> withNewBuildRequestExtensionLike(io.dekorate.deps.openshift.api.model.BuildRequest);

  public abstract A withDaemonSetExtension(io.dekorate.deps.kubernetes.api.model.apps.DaemonSet);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$DaemonSetExtensionNested<A> withNewDaemonSetExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$DaemonSetExtensionNested<A> withNewDaemonSetExtensionLike(io.dekorate.deps.kubernetes.api.model.apps.DaemonSet);

  public abstract A withImageStreamExtension(io.dekorate.deps.openshift.api.model.ImageStream);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ImageStreamExtensionNested<A> withNewImageStreamExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ImageStreamExtensionNested<A> withNewImageStreamExtensionLike(io.dekorate.deps.openshift.api.model.ImageStream);

  public abstract A withOpenshiftRoleExtension(io.dekorate.deps.openshift.api.model.OpenshiftRole);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$OpenshiftRoleExtensionNested<A> withNewOpenshiftRoleExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$OpenshiftRoleExtensionNested<A> withNewOpenshiftRoleExtensionLike(io.dekorate.deps.openshift.api.model.OpenshiftRole);

  public abstract A withOAuthClientExtension(io.dekorate.deps.openshift.api.model.OAuthClient);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$OAuthClientExtensionNested<A> withNewOAuthClientExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$OAuthClientExtensionNested<A> withNewOAuthClientExtensionLike(io.dekorate.deps.openshift.api.model.OAuthClient);

  public abstract A withIdentityExtension(io.dekorate.deps.openshift.api.model.Identity);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$IdentityExtensionNested<A> withNewIdentityExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$IdentityExtensionNested<A> withNewIdentityExtensionLike(io.dekorate.deps.openshift.api.model.Identity);

  public abstract A withLimitRangeExtension(io.dekorate.deps.kubernetes.api.model.LimitRange);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$LimitRangeExtensionNested<A> withNewLimitRangeExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$LimitRangeExtensionNested<A> withNewLimitRangeExtensionLike(io.dekorate.deps.kubernetes.api.model.LimitRange);

  public abstract A withClusterVersionExtension(io.dekorate.deps.openshift.api.model.ClusterVersion);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ClusterVersionExtensionNested<A> withNewClusterVersionExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ClusterVersionExtensionNested<A> withNewClusterVersionExtensionLike(io.dekorate.deps.openshift.api.model.ClusterVersion);

  public abstract A withCSIDriverExtension(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSIDriver);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$CSIDriverExtensionNested<A> withNewCSIDriverExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$CSIDriverExtensionNested<A> withNewCSIDriverExtensionLike(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSIDriver);

  public abstract A withImageStreamImportExtension(io.dekorate.deps.openshift.api.model.ImageStreamImport);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ImageStreamImportExtensionNested<A> withNewImageStreamImportExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ImageStreamImportExtensionNested<A> withNewImageStreamImportExtensionLike(io.dekorate.deps.openshift.api.model.ImageStreamImport);

  public abstract A withControllerRevisionExtension(io.dekorate.deps.kubernetes.api.model.apps.ControllerRevision);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ControllerRevisionExtensionNested<A> withNewControllerRevisionExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ControllerRevisionExtensionNested<A> withNewControllerRevisionExtensionLike(io.dekorate.deps.kubernetes.api.model.apps.ControllerRevision);

  public abstract A withOpenshiftRoleBindingRestrictionExtension(io.dekorate.deps.openshift.api.model.OpenshiftRoleBindingRestriction);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$OpenshiftRoleBindingRestrictionExtensionNested<A> withNewOpenshiftRoleBindingRestrictionExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$OpenshiftRoleBindingRestrictionExtensionNested<A> withNewOpenshiftRoleBindingRestrictionExtensionLike(io.dekorate.deps.openshift.api.model.OpenshiftRoleBindingRestriction);

  public abstract A withRoleBindingExtension(io.dekorate.deps.kubernetes.api.model.rbac.RoleBinding);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$RoleBindingExtensionNested<A> withNewRoleBindingExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$RoleBindingExtensionNested<A> withNewRoleBindingExtensionLike(io.dekorate.deps.kubernetes.api.model.rbac.RoleBinding);

  public abstract A withPodPresetExtension(io.dekorate.deps.kubernetes.api.model.settings.PodPreset);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$PodPresetExtensionNested<A> withNewPodPresetExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$PodPresetExtensionNested<A> withNewPodPresetExtensionLike(io.dekorate.deps.kubernetes.api.model.settings.PodPreset);

  public abstract A withProjectExtension(io.dekorate.deps.openshift.api.model.Project);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ProjectExtensionNested<A> withNewProjectExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ProjectExtensionNested<A> withNewProjectExtensionLike(io.dekorate.deps.openshift.api.model.Project);

  public abstract A withNodeMetricsExtension(io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.NodeMetrics);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$NodeMetricsExtensionNested<A> withNewNodeMetricsExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$NodeMetricsExtensionNested<A> withNewNodeMetricsExtensionLike(io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.NodeMetrics);

  public abstract A withBuildConfigExtension(io.dekorate.deps.openshift.api.model.BuildConfig);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$BuildConfigExtensionNested<A> withNewBuildConfigExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$BuildConfigExtensionNested<A> withNewBuildConfigExtensionLike(io.dekorate.deps.openshift.api.model.BuildConfig);

  public abstract A withClusterRoleExtension(io.dekorate.deps.kubernetes.api.model.rbac.ClusterRole);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ClusterRoleExtensionNested<A> withNewClusterRoleExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ClusterRoleExtensionNested<A> withNewClusterRoleExtensionLike(io.dekorate.deps.kubernetes.api.model.rbac.ClusterRole);

  public abstract A withVolumeAttachmentExtension(io.dekorate.deps.kubernetes.api.model.storage.VolumeAttachment);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$VolumeAttachmentExtensionNested<A> withNewVolumeAttachmentExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$VolumeAttachmentExtensionNested<A> withNewVolumeAttachmentExtensionLike(io.dekorate.deps.kubernetes.api.model.storage.VolumeAttachment);

  public abstract A withOAuthAuthorizeTokenExtension(io.dekorate.deps.openshift.api.model.OAuthAuthorizeToken);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$OAuthAuthorizeTokenExtensionNested<A> withNewOAuthAuthorizeTokenExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$OAuthAuthorizeTokenExtensionNested<A> withNewOAuthAuthorizeTokenExtensionLike(io.dekorate.deps.openshift.api.model.OAuthAuthorizeToken);

  public abstract A withSelfSubjectAccessReviewExtension(io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectAccessReview);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$SelfSubjectAccessReviewExtensionNested<A> withNewSelfSubjectAccessReviewExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$SelfSubjectAccessReviewExtensionNested<A> withNewSelfSubjectAccessReviewExtensionLike(io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectAccessReview);

  public abstract A withProjectRequestExtension(io.dekorate.deps.openshift.api.model.ProjectRequest);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ProjectRequestExtensionNested<A> withNewProjectRequestExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ProjectRequestExtensionNested<A> withNewProjectRequestExtensionLike(io.dekorate.deps.openshift.api.model.ProjectRequest);

  public abstract A withTemplateExtension(io.dekorate.deps.openshift.api.model.Template);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$TemplateExtensionNested<A> withNewTemplateExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$TemplateExtensionNested<A> withNewTemplateExtensionLike(io.dekorate.deps.openshift.api.model.Template);

  public abstract A withPriorityClassExtension(io.dekorate.deps.kubernetes.api.model.scheduling.PriorityClass);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$PriorityClassExtensionNested<A> withNewPriorityClassExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$PriorityClassExtensionNested<A> withNewPriorityClassExtensionLike(io.dekorate.deps.kubernetes.api.model.scheduling.PriorityClass);

  public abstract A withOAuthClientAuthorizationExtension(io.dekorate.deps.openshift.api.model.OAuthClientAuthorization);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$OAuthClientAuthorizationExtensionNested<A> withNewOAuthClientAuthorizationExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$OAuthClientAuthorizationExtensionNested<A> withNewOAuthClientAuthorizationExtensionLike(io.dekorate.deps.openshift.api.model.OAuthClientAuthorization);

  public abstract A withDeploymentExtension(io.dekorate.deps.kubernetes.api.model.apps.Deployment);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$DeploymentExtensionNested<A> withNewDeploymentExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$DeploymentExtensionNested<A> withNewDeploymentExtensionLike(io.dekorate.deps.kubernetes.api.model.apps.Deployment);

  public abstract A withPodTemplateExtension(io.dekorate.deps.kubernetes.api.model.PodTemplate);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$PodTemplateExtensionNested<A> withNewPodTemplateExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$PodTemplateExtensionNested<A> withNewPodTemplateExtensionLike(io.dekorate.deps.kubernetes.api.model.PodTemplate);

  public abstract A withEventExtension(io.dekorate.deps.kubernetes.api.model.Event);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$EventExtensionNested<A> withNewEventExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$EventExtensionNested<A> withNewEventExtensionLike(io.dekorate.deps.kubernetes.api.model.Event);

  public abstract A withIngressExtension(io.dekorate.deps.kubernetes.api.model.extensions.Ingress);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$IngressExtensionNested<A> withNewIngressExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$IngressExtensionNested<A> withNewIngressExtensionLike(io.dekorate.deps.kubernetes.api.model.extensions.Ingress);

  public abstract A withDeploymentConfigExtension(io.dekorate.deps.openshift.api.model.DeploymentConfig);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$DeploymentConfigExtensionNested<A> withNewDeploymentConfigExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$DeploymentConfigExtensionNested<A> withNewDeploymentConfigExtensionLike(io.dekorate.deps.openshift.api.model.DeploymentConfig);

  public abstract A withOAuthAccessTokenExtension(io.dekorate.deps.openshift.api.model.OAuthAccessToken);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$OAuthAccessTokenExtensionNested<A> withNewOAuthAccessTokenExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$OAuthAccessTokenExtensionNested<A> withNewOAuthAccessTokenExtensionLike(io.dekorate.deps.openshift.api.model.OAuthAccessToken);

  public abstract A withPersistentVolumeExtension(io.dekorate.deps.kubernetes.api.model.PersistentVolume);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$PersistentVolumeExtensionNested<A> withNewPersistentVolumeExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$PersistentVolumeExtensionNested<A> withNewPersistentVolumeExtensionLike(io.dekorate.deps.kubernetes.api.model.PersistentVolume);

  public abstract A withPersistentVolumeClaimExtension(io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaim);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$PersistentVolumeClaimExtensionNested<A> withNewPersistentVolumeClaimExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$PersistentVolumeClaimExtensionNested<A> withNewPersistentVolumeClaimExtensionLike(io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaim);

  public abstract A withPodSecurityPolicyExtension(io.dekorate.deps.kubernetes.api.model.policy.PodSecurityPolicy);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$PodSecurityPolicyExtensionNested<A> withNewPodSecurityPolicyExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$PodSecurityPolicyExtensionNested<A> withNewPodSecurityPolicyExtensionLike(io.dekorate.deps.kubernetes.api.model.policy.PodSecurityPolicy);

  public abstract A withEventExtension(io.dekorate.deps.kubernetes.api.model.events.Event);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$EventsEventExtensionNested<A> withNewEventsEventExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$EventsEventExtensionNested<A> withNewEventExtensionLike(io.dekorate.deps.kubernetes.api.model.events.Event);

  public abstract A withStatefulSetExtension(io.dekorate.deps.kubernetes.api.model.apps.StatefulSet);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$StatefulSetExtensionNested<A> withNewStatefulSetExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$StatefulSetExtensionNested<A> withNewStatefulSetExtensionLike(io.dekorate.deps.kubernetes.api.model.apps.StatefulSet);

  public abstract A withOpenshiftClusterRoleExtension(io.dekorate.deps.openshift.api.model.OpenshiftClusterRole);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$OpenshiftClusterRoleExtensionNested<A> withNewOpenshiftClusterRoleExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$OpenshiftClusterRoleExtensionNested<A> withNewOpenshiftClusterRoleExtensionLike(io.dekorate.deps.openshift.api.model.OpenshiftClusterRole);

  public abstract A withSelfSubjectRulesReviewExtension(io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectRulesReview);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$SelfSubjectRulesReviewExtensionNested<A> withNewSelfSubjectRulesReviewExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$SelfSubjectRulesReviewExtensionNested<A> withNewSelfSubjectRulesReviewExtensionLike(io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectRulesReview);

  public abstract A withRoleExtension(io.dekorate.deps.kubernetes.api.model.rbac.Role);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$RoleExtensionNested<A> withNewRoleExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$RoleExtensionNested<A> withNewRoleExtensionLike(io.dekorate.deps.kubernetes.api.model.rbac.Role);

  public abstract A withUserExtension(io.dekorate.deps.openshift.api.model.User);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$UserExtensionNested<A> withNewUserExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$UserExtensionNested<A> withNewUserExtensionLike(io.dekorate.deps.openshift.api.model.User);

  public abstract A withComponentStatusExtension(io.dekorate.deps.kubernetes.api.model.ComponentStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ComponentStatusExtensionNested<A> withNewComponentStatusExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ComponentStatusExtensionNested<A> withNewComponentStatusExtensionLike(io.dekorate.deps.kubernetes.api.model.ComponentStatus);

  public abstract A withTokenReviewExtension(io.dekorate.deps.kubernetes.api.model.authentication.TokenReview);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$TokenReviewExtensionNested<A> withNewTokenReviewExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$TokenReviewExtensionNested<A> withNewTokenReviewExtensionLike(io.dekorate.deps.kubernetes.api.model.authentication.TokenReview);

  public abstract A withBindingExtension(io.dekorate.deps.kubernetes.api.model.Binding);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$BindingExtensionNested<A> withNewBindingExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$BindingExtensionNested<A> withNewBindingExtensionLike(io.dekorate.deps.kubernetes.api.model.Binding);

  public abstract A withSecretExtension(io.dekorate.deps.kubernetes.api.model.Secret);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$SecretExtensionNested<A> withNewSecretExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$SecretExtensionNested<A> withNewSecretExtensionLike(io.dekorate.deps.kubernetes.api.model.Secret);

  public abstract A withSecurityContextConstraintsExtension(io.dekorate.deps.openshift.api.model.SecurityContextConstraints);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$SecurityContextConstraintsExtensionNested<A> withNewSecurityContextConstraintsExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$SecurityContextConstraintsExtensionNested<A> withNewSecurityContextConstraintsExtensionLike(io.dekorate.deps.openshift.api.model.SecurityContextConstraints);

  public abstract A withNetNamespaceExtension(io.dekorate.deps.openshift.api.model.NetNamespace);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$NetNamespaceExtensionNested<A> withNewNetNamespaceExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$NetNamespaceExtensionNested<A> withNewNetNamespaceExtensionLike(io.dekorate.deps.openshift.api.model.NetNamespace);

  public abstract A withNodeExtension(io.dekorate.deps.kubernetes.api.model.Node);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$NodeExtensionNested<A> withNewNodeExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$NodeExtensionNested<A> withNewNodeExtensionLike(io.dekorate.deps.kubernetes.api.model.Node);

  public abstract A withJobExtension(io.dekorate.deps.kubernetes.api.model.batch.Job);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$JobExtensionNested<A> withNewJobExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$JobExtensionNested<A> withNewJobExtensionLike(io.dekorate.deps.kubernetes.api.model.batch.Job);

  public abstract A withCertificateSigningRequestExtension(io.dekorate.deps.kubernetes.api.model.certificates.CertificateSigningRequest);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$CertificateSigningRequestExtensionNested<A> withNewCertificateSigningRequestExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$CertificateSigningRequestExtensionNested<A> withNewCertificateSigningRequestExtensionLike(io.dekorate.deps.kubernetes.api.model.certificates.CertificateSigningRequest);

  public abstract A withServiceAccountExtension(io.dekorate.deps.kubernetes.api.model.ServiceAccount);

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ServiceAccountExtensionNested<A> withNewServiceAccountExtension();

  public abstract io.dekorate.deps.kubernetes.api.model.NamedExtensionFluent$ServiceAccountExtensionNested<A> withNewServiceAccountExtensionLike(io.dekorate.deps.kubernetes.api.model.ServiceAccount);

  public abstract java.lang.String getName();

  public abstract A withName(java.lang.String);

  public abstract java.lang.Boolean hasName();

  public abstract A withNewName(java.lang.String);

  public abstract A withNewName(java.lang.StringBuilder);

  public abstract A withNewName(java.lang.StringBuffer);
}
