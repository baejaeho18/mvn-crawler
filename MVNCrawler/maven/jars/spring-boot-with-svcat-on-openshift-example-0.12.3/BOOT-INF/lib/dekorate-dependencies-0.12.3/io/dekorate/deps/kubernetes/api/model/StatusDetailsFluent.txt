Compiled from "StatusDetailsFluent.java"
public interface io.dekorate.deps.kubernetes.api.model.StatusDetailsFluent<A extends io.dekorate.deps.kubernetes.api.model.StatusDetailsFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract A addToCauses(int, io.dekorate.deps.kubernetes.api.model.StatusCause);

  public abstract A setToCauses(int, io.dekorate.deps.kubernetes.api.model.StatusCause);

  public abstract A addToCauses(io.dekorate.deps.kubernetes.api.model.StatusCause...);

  public abstract A addAllToCauses(java.util.Collection<io.dekorate.deps.kubernetes.api.model.StatusCause>);

  public abstract A removeFromCauses(io.dekorate.deps.kubernetes.api.model.StatusCause...);

  public abstract A removeAllFromCauses(java.util.Collection<io.dekorate.deps.kubernetes.api.model.StatusCause>);

  public abstract A removeMatchingFromCauses(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.StatusCauseBuilder>);

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.StatusCause> getCauses();

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.StatusCause> buildCauses();

  public abstract io.dekorate.deps.kubernetes.api.model.StatusCause buildCause(int);

  public abstract io.dekorate.deps.kubernetes.api.model.StatusCause buildFirstCause();

  public abstract io.dekorate.deps.kubernetes.api.model.StatusCause buildLastCause();

  public abstract io.dekorate.deps.kubernetes.api.model.StatusCause buildMatchingCause(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.StatusCauseBuilder>);

  public abstract java.lang.Boolean hasMatchingCause(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.StatusCauseBuilder>);

  public abstract A withCauses(java.util.List<io.dekorate.deps.kubernetes.api.model.StatusCause>);

  public abstract A withCauses(io.dekorate.deps.kubernetes.api.model.StatusCause...);

  public abstract java.lang.Boolean hasCauses();

  public abstract A addNewCause(java.lang.String, java.lang.String, java.lang.String);

  public abstract io.dekorate.deps.kubernetes.api.model.StatusDetailsFluent$CausesNested<A> addNewCause();

  public abstract io.dekorate.deps.kubernetes.api.model.StatusDetailsFluent$CausesNested<A> addNewCauseLike(io.dekorate.deps.kubernetes.api.model.StatusCause);

  public abstract io.dekorate.deps.kubernetes.api.model.StatusDetailsFluent$CausesNested<A> setNewCauseLike(int, io.dekorate.deps.kubernetes.api.model.StatusCause);

  public abstract io.dekorate.deps.kubernetes.api.model.StatusDetailsFluent$CausesNested<A> editCause(int);

  public abstract io.dekorate.deps.kubernetes.api.model.StatusDetailsFluent$CausesNested<A> editFirstCause();

  public abstract io.dekorate.deps.kubernetes.api.model.StatusDetailsFluent$CausesNested<A> editLastCause();

  public abstract io.dekorate.deps.kubernetes.api.model.StatusDetailsFluent$CausesNested<A> editMatchingCause(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.StatusCauseBuilder>);

  public abstract java.lang.String getGroup();

  public abstract A withGroup(java.lang.String);

  public abstract java.lang.Boolean hasGroup();

  public abstract A withNewGroup(java.lang.String);

  public abstract A withNewGroup(java.lang.StringBuilder);

  public abstract A withNewGroup(java.lang.StringBuffer);

  public abstract java.lang.String getKind();

  public abstract A withKind(java.lang.String);

  public abstract java.lang.Boolean hasKind();

  public abstract A withNewKind(java.lang.String);

  public abstract A withNewKind(java.lang.StringBuilder);

  public abstract A withNewKind(java.lang.StringBuffer);

  public abstract java.lang.String getName();

  public abstract A withName(java.lang.String);

  public abstract java.lang.Boolean hasName();

  public abstract A withNewName(java.lang.String);

  public abstract A withNewName(java.lang.StringBuilder);

  public abstract A withNewName(java.lang.StringBuffer);

  public abstract java.lang.Integer getRetryAfterSeconds();

  public abstract A withRetryAfterSeconds(java.lang.Integer);

  public abstract java.lang.Boolean hasRetryAfterSeconds();

  public abstract java.lang.String getUid();

  public abstract A withUid(java.lang.String);

  public abstract java.lang.Boolean hasUid();

  public abstract A withNewUid(java.lang.String);

  public abstract A withNewUid(java.lang.StringBuilder);

  public abstract A withNewUid(java.lang.StringBuffer);
}
