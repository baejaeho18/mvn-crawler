Compiled from "WorkspaceBindingFluentImpl.java"
public class io.dekorate.deps.tekton.pipeline.v1beta1.WorkspaceBindingFluentImpl<A extends io.dekorate.deps.tekton.pipeline.v1beta1.WorkspaceBindingFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.BaseFluent<A> implements io.dekorate.deps.tekton.pipeline.v1beta1.WorkspaceBindingFluent<A> {
  private io.dekorate.deps.kubernetes.api.model.ConfigMapVolumeSource configMap;

  private io.dekorate.deps.kubernetes.api.model.EmptyDirVolumeSource emptyDir;

  private java.lang.String name;

  private io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimVolumeSource persistentVolumeClaim;

  private io.dekorate.deps.kubernetes.api.model.SecretVolumeSource secret;

  private java.lang.String subPath;

  public io.dekorate.deps.tekton.pipeline.v1beta1.WorkspaceBindingFluentImpl();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method io/dekorate/deps/kubernetes/api/builder/BaseFluent."<init>":()V
       4: return

  public io.dekorate.deps.tekton.pipeline.v1beta1.WorkspaceBindingFluentImpl(io.dekorate.deps.tekton.pipeline.v1beta1.WorkspaceBinding);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method io/dekorate/deps/kubernetes/api/builder/BaseFluent."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #33                 // Method io/dekorate/deps/tekton/pipeline/v1beta1/WorkspaceBinding.getConfigMap:()Lio/dekorate/deps/kubernetes/api/model/ConfigMapVolumeSource;
       9: invokevirtual #37                 // Method withConfigMap:(Lio/dekorate/deps/kubernetes/api/model/ConfigMapVolumeSource;)Lio/dekorate/deps/tekton/pipeline/v1beta1/WorkspaceBindingFluent;
      12: pop
      13: aload_0
      14: aload_1
      15: invokevirtual #41                 // Method io/dekorate/deps/tekton/pipeline/v1beta1/WorkspaceBinding.getEmptyDir:()Lio/dekorate/deps/kubernetes/api/model/EmptyDirVolumeSource;
      18: invokevirtual #45                 // Method withEmptyDir:(Lio/dekorate/deps/kubernetes/api/model/EmptyDirVolumeSource;)Lio/dekorate/deps/tekton/pipeline/v1beta1/WorkspaceBindingFluent;
      21: pop
      22: aload_0
      23: aload_1
      24: invokevirtual #49                 // Method io/dekorate/deps/tekton/pipeline/v1beta1/WorkspaceBinding.getName:()Ljava/lang/String;
      27: invokevirtual #53                 // Method withName:(Ljava/lang/String;)Lio/dekorate/deps/tekton/pipeline/v1beta1/WorkspaceBindingFluent;
      30: pop
      31: aload_0
      32: aload_1
      33: invokevirtual #57                 // Method io/dekorate/deps/tekton/pipeline/v1beta1/WorkspaceBinding.getPersistentVolumeClaim:()Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimVolumeSource;
      36: invokevirtual #61                 // Method withPersistentVolumeClaim:(Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimVolumeSource;)Lio/dekorate/deps/tekton/pipeline/v1beta1/WorkspaceBindingFluent;
      39: pop
      40: aload_0
      41: aload_1
      42: invokevirtual #65                 // Method io/dekorate/deps/tekton/pipeline/v1beta1/WorkspaceBinding.getSecret:()Lio/dekorate/deps/kubernetes/api/model/SecretVolumeSource;
      45: invokevirtual #69                 // Method withSecret:(Lio/dekorate/deps/kubernetes/api/model/SecretVolumeSource;)Lio/dekorate/deps/tekton/pipeline/v1beta1/WorkspaceBindingFluent;
      48: pop
      49: aload_0
      50: aload_1
      51: invokevirtual #72                 // Method io/dekorate/deps/tekton/pipeline/v1beta1/WorkspaceBinding.getSubPath:()Ljava/lang/String;
      54: invokevirtual #75                 // Method withSubPath:(Ljava/lang/String;)Lio/dekorate/deps/tekton/pipeline/v1beta1/WorkspaceBindingFluent;
      57: pop
      58: return

  public io.dekorate.deps.kubernetes.api.model.ConfigMapVolumeSource getConfigMap();
    Code:
       0: aload_0
       1: getfield      #79                 // Field configMap:Lio/dekorate/deps/kubernetes/api/model/ConfigMapVolumeSource;
       4: areturn

  public A withConfigMap(io.dekorate.deps.kubernetes.api.model.ConfigMapVolumeSource);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #79                 // Field configMap:Lio/dekorate/deps/kubernetes/api/model/ConfigMapVolumeSource;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasConfigMap();
    Code:
       0: aload_0
       1: getfield      #79                 // Field configMap:Lio/dekorate/deps/kubernetes/api/model/ConfigMapVolumeSource;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #88                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public io.dekorate.deps.kubernetes.api.model.EmptyDirVolumeSource getEmptyDir();
    Code:
       0: aload_0
       1: getfield      #90                 // Field emptyDir:Lio/dekorate/deps/kubernetes/api/model/EmptyDirVolumeSource;
       4: areturn

  public A withEmptyDir(io.dekorate.deps.kubernetes.api.model.EmptyDirVolumeSource);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #90                 // Field emptyDir:Lio/dekorate/deps/kubernetes/api/model/EmptyDirVolumeSource;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasEmptyDir();
    Code:
       0: aload_0
       1: getfield      #90                 // Field emptyDir:Lio/dekorate/deps/kubernetes/api/model/EmptyDirVolumeSource;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #88                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #94                 // Field name:Ljava/lang/String;
       4: areturn

  public A withName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #94                 // Field name:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasName();
    Code:
       0: aload_0
       1: getfield      #94                 // Field name:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #88                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withNewName(java.lang.String);
    Code:
       0: aload_0
       1: new           #99                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #102                // Method java/lang/String."<init>":(Ljava/lang/String;)V
       9: invokevirtual #53                 // Method withName:(Ljava/lang/String;)Lio/dekorate/deps/tekton/pipeline/v1beta1/WorkspaceBindingFluent;
      12: areturn

  public A withNewName(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: new           #99                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #108                // Method java/lang/String."<init>":(Ljava/lang/StringBuilder;)V
       9: invokevirtual #53                 // Method withName:(Ljava/lang/String;)Lio/dekorate/deps/tekton/pipeline/v1beta1/WorkspaceBindingFluent;
      12: areturn

  public A withNewName(java.lang.StringBuffer);
    Code:
       0: aload_0
       1: new           #99                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #114                // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
       9: invokevirtual #53                 // Method withName:(Ljava/lang/String;)Lio/dekorate/deps/tekton/pipeline/v1beta1/WorkspaceBindingFluent;
      12: areturn

  public io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimVolumeSource getPersistentVolumeClaim();
    Code:
       0: aload_0
       1: getfield      #117                // Field persistentVolumeClaim:Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimVolumeSource;
       4: areturn

  public A withPersistentVolumeClaim(io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimVolumeSource);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #117                // Field persistentVolumeClaim:Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimVolumeSource;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasPersistentVolumeClaim();
    Code:
       0: aload_0
       1: getfield      #117                // Field persistentVolumeClaim:Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimVolumeSource;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #88                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withNewPersistentVolumeClaim(java.lang.String, java.lang.Boolean);
    Code:
       0: aload_0
       1: new           #124                // class io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimVolumeSource
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #127                // Method io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimVolumeSource."<init>":(Ljava/lang/String;Ljava/lang/Boolean;)V
      10: invokevirtual #61                 // Method withPersistentVolumeClaim:(Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimVolumeSource;)Lio/dekorate/deps/tekton/pipeline/v1beta1/WorkspaceBindingFluent;
      13: areturn

  public io.dekorate.deps.kubernetes.api.model.SecretVolumeSource getSecret();
    Code:
       0: aload_0
       1: getfield      #132                // Field secret:Lio/dekorate/deps/kubernetes/api/model/SecretVolumeSource;
       4: areturn

  public A withSecret(io.dekorate.deps.kubernetes.api.model.SecretVolumeSource);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #132                // Field secret:Lio/dekorate/deps/kubernetes/api/model/SecretVolumeSource;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasSecret();
    Code:
       0: aload_0
       1: getfield      #132                // Field secret:Lio/dekorate/deps/kubernetes/api/model/SecretVolumeSource;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #88                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public java.lang.String getSubPath();
    Code:
       0: aload_0
       1: getfield      #136                // Field subPath:Ljava/lang/String;
       4: areturn

  public A withSubPath(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #136                // Field subPath:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasSubPath();
    Code:
       0: aload_0
       1: getfield      #136                // Field subPath:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #88                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withNewSubPath(java.lang.String);
    Code:
       0: aload_0
       1: new           #99                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #102                // Method java/lang/String."<init>":(Ljava/lang/String;)V
       9: invokevirtual #75                 // Method withSubPath:(Ljava/lang/String;)Lio/dekorate/deps/tekton/pipeline/v1beta1/WorkspaceBindingFluent;
      12: areturn

  public A withNewSubPath(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: new           #99                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #108                // Method java/lang/String."<init>":(Ljava/lang/StringBuilder;)V
       9: invokevirtual #75                 // Method withSubPath:(Ljava/lang/String;)Lio/dekorate/deps/tekton/pipeline/v1beta1/WorkspaceBindingFluent;
      12: areturn

  public A withNewSubPath(java.lang.StringBuffer);
    Code:
       0: aload_0
       1: new           #99                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #114                // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
       9: invokevirtual #75                 // Method withSubPath:(Ljava/lang/String;)Lio/dekorate/deps/tekton/pipeline/v1beta1/WorkspaceBindingFluent;
      12: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #146                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #146                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #2                  // class io/dekorate/deps/tekton/pipeline/v1beta1/WorkspaceBindingFluentImpl
      28: astore_2
      29: aload_0
      30: getfield      #79                 // Field configMap:Lio/dekorate/deps/kubernetes/api/model/ConfigMapVolumeSource;
      33: ifnull        53
      36: aload_0
      37: getfield      #79                 // Field configMap:Lio/dekorate/deps/kubernetes/api/model/ConfigMapVolumeSource;
      40: aload_2
      41: getfield      #79                 // Field configMap:Lio/dekorate/deps/kubernetes/api/model/ConfigMapVolumeSource;
      44: invokevirtual #150                // Method io/dekorate/deps/kubernetes/api/model/ConfigMapVolumeSource.equals:(Ljava/lang/Object;)Z
      47: ifne          62
      50: goto          60
      53: aload_2
      54: getfield      #79                 // Field configMap:Lio/dekorate/deps/kubernetes/api/model/ConfigMapVolumeSource;
      57: ifnull        62
      60: iconst_0
      61: ireturn
      62: aload_0
      63: getfield      #90                 // Field emptyDir:Lio/dekorate/deps/kubernetes/api/model/EmptyDirVolumeSource;
      66: ifnull        86
      69: aload_0
      70: getfield      #90                 // Field emptyDir:Lio/dekorate/deps/kubernetes/api/model/EmptyDirVolumeSource;
      73: aload_2
      74: getfield      #90                 // Field emptyDir:Lio/dekorate/deps/kubernetes/api/model/EmptyDirVolumeSource;
      77: invokevirtual #153                // Method io/dekorate/deps/kubernetes/api/model/EmptyDirVolumeSource.equals:(Ljava/lang/Object;)Z
      80: ifne          95
      83: goto          93
      86: aload_2
      87: getfield      #90                 // Field emptyDir:Lio/dekorate/deps/kubernetes/api/model/EmptyDirVolumeSource;
      90: ifnull        95
      93: iconst_0
      94: ireturn
      95: aload_0
      96: getfield      #94                 // Field name:Ljava/lang/String;
      99: ifnull        119
     102: aload_0
     103: getfield      #94                 // Field name:Ljava/lang/String;
     106: aload_2
     107: getfield      #94                 // Field name:Ljava/lang/String;
     110: invokevirtual #154                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     113: ifne          128
     116: goto          126
     119: aload_2
     120: getfield      #94                 // Field name:Ljava/lang/String;
     123: ifnull        128
     126: iconst_0
     127: ireturn
     128: aload_0
     129: getfield      #117                // Field persistentVolumeClaim:Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimVolumeSource;
     132: ifnull        152
     135: aload_0
     136: getfield      #117                // Field persistentVolumeClaim:Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimVolumeSource;
     139: aload_2
     140: getfield      #117                // Field persistentVolumeClaim:Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimVolumeSource;
     143: invokevirtual #155                // Method io/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimVolumeSource.equals:(Ljava/lang/Object;)Z
     146: ifne          161
     149: goto          159
     152: aload_2
     153: getfield      #117                // Field persistentVolumeClaim:Lio/dekorate/deps/kubernetes/api/model/PersistentVolumeClaimVolumeSource;
     156: ifnull        161
     159: iconst_0
     160: ireturn
     161: aload_0
     162: getfield      #132                // Field secret:Lio/dekorate/deps/kubernetes/api/model/SecretVolumeSource;
     165: ifnull        185
     168: aload_0
     169: getfield      #132                // Field secret:Lio/dekorate/deps/kubernetes/api/model/SecretVolumeSource;
     172: aload_2
     173: getfield      #132                // Field secret:Lio/dekorate/deps/kubernetes/api/model/SecretVolumeSource;
     176: invokevirtual #158                // Method io/dekorate/deps/kubernetes/api/model/SecretVolumeSource.equals:(Ljava/lang/Object;)Z
     179: ifne          194
     182: goto          192
     185: aload_2
     186: getfield      #132                // Field secret:Lio/dekorate/deps/kubernetes/api/model/SecretVolumeSource;
     189: ifnull        194
     192: iconst_0
     193: ireturn
     194: aload_0
     195: getfield      #136                // Field subPath:Ljava/lang/String;
     198: ifnull        218
     201: aload_0
     202: getfield      #136                // Field subPath:Ljava/lang/String;
     205: aload_2
     206: getfield      #136                // Field subPath:Ljava/lang/String;
     209: invokevirtual #154                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     212: ifne          227
     215: goto          225
     218: aload_2
     219: getfield      #136                // Field subPath:Ljava/lang/String;
     222: ifnull        227
     225: iconst_0
     226: ireturn
     227: iconst_1
     228: ireturn
}
