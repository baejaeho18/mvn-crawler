Compiled from "StepStateFluent.java"
public interface io.dekorate.deps.tekton.pipeline.v1beta1.StepStateFluent<A extends io.dekorate.deps.tekton.pipeline.v1beta1.StepStateFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getContainer();

  public abstract A withContainer(java.lang.String);

  public abstract java.lang.Boolean hasContainer();

  public abstract A withNewContainer(java.lang.String);

  public abstract A withNewContainer(java.lang.StringBuilder);

  public abstract A withNewContainer(java.lang.StringBuffer);

  public abstract java.lang.String getImageID();

  public abstract A withImageID(java.lang.String);

  public abstract java.lang.Boolean hasImageID();

  public abstract A withNewImageID(java.lang.String);

  public abstract A withNewImageID(java.lang.StringBuilder);

  public abstract A withNewImageID(java.lang.StringBuffer);

  public abstract java.lang.String getName();

  public abstract A withName(java.lang.String);

  public abstract java.lang.Boolean hasName();

  public abstract A withNewName(java.lang.String);

  public abstract A withNewName(java.lang.StringBuilder);

  public abstract A withNewName(java.lang.StringBuffer);

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerStateRunning getRunning();

  public abstract A withRunning(io.dekorate.deps.kubernetes.api.model.ContainerStateRunning);

  public abstract java.lang.Boolean hasRunning();

  public abstract A withNewRunning(java.lang.String);

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerStateTerminated getTerminated();

  public abstract A withTerminated(io.dekorate.deps.kubernetes.api.model.ContainerStateTerminated);

  public abstract java.lang.Boolean hasTerminated();

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerStateWaiting getWaiting();

  public abstract A withWaiting(io.dekorate.deps.kubernetes.api.model.ContainerStateWaiting);

  public abstract java.lang.Boolean hasWaiting();

  public abstract A withNewWaiting(java.lang.String, java.lang.String);
}
