Compiled from "TriggerFilterFluent.java"
public interface io.dekorate.deps.knative.eventing.v1alpha1.TriggerFilterFluent<A extends io.dekorate.deps.knative.eventing.v1alpha1.TriggerFilterFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract A addToAttributes(java.lang.String, java.lang.String);

  public abstract A addToAttributes(java.util.Map<java.lang.String, java.lang.String>);

  public abstract A removeFromAttributes(java.lang.String);

  public abstract A removeFromAttributes(java.util.Map<java.lang.String, java.lang.String>);

  public abstract java.util.Map<java.lang.String, java.lang.String> getAttributes();

  public abstract A withAttributes(java.util.Map<java.lang.String, java.lang.String>);

  public abstract java.lang.Boolean hasAttributes();

  public abstract io.dekorate.deps.knative.eventing.v1alpha1.TriggerFilterSourceAndType getSourceAndType();

  public abstract io.dekorate.deps.knative.eventing.v1alpha1.TriggerFilterSourceAndType buildSourceAndType();

  public abstract A withSourceAndType(io.dekorate.deps.knative.eventing.v1alpha1.TriggerFilterSourceAndType);

  public abstract java.lang.Boolean hasSourceAndType();

  public abstract A withNewSourceAndType(java.lang.String, java.lang.String);

  public abstract io.dekorate.deps.knative.eventing.v1alpha1.TriggerFilterFluent$SourceAndTypeNested<A> withNewSourceAndType();

  public abstract io.dekorate.deps.knative.eventing.v1alpha1.TriggerFilterFluent$SourceAndTypeNested<A> withNewSourceAndTypeLike(io.dekorate.deps.knative.eventing.v1alpha1.TriggerFilterSourceAndType);

  public abstract io.dekorate.deps.knative.eventing.v1alpha1.TriggerFilterFluent$SourceAndTypeNested<A> editSourceAndType();

  public abstract io.dekorate.deps.knative.eventing.v1alpha1.TriggerFilterFluent$SourceAndTypeNested<A> editOrNewSourceAndType();

  public abstract io.dekorate.deps.knative.eventing.v1alpha1.TriggerFilterFluent$SourceAndTypeNested<A> editOrNewSourceAndTypeLike(io.dekorate.deps.knative.eventing.v1alpha1.TriggerFilterSourceAndType);
}
