Compiled from "TarArchiveInputStream.java"
public class io.dekorate.deps.commons.compress.archivers.tar.TarArchiveInputStream extends io.dekorate.deps.commons.compress.archivers.ArchiveInputStream {
  private static final int SMALL_BUFFER_SIZE;

  private final byte[] smallBuf;

  private final int recordSize;

  private final int blockSize;

  private boolean hasHitEOF;

  private long entrySize;

  private long entryOffset;

  private final java.io.InputStream is;

  private io.dekorate.deps.commons.compress.archivers.tar.TarArchiveEntry currEntry;

  private final io.dekorate.deps.commons.compress.archivers.zip.ZipEncoding zipEncoding;

  final java.lang.String encoding;

  private java.util.Map<java.lang.String, java.lang.String> globalPaxHeaders;

  public io.dekorate.deps.commons.compress.archivers.tar.TarArchiveInputStream(java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: sipush        10240
       5: sipush        512
       8: invokespecial #33                 // Method "<init>":(Ljava/io/InputStream;II)V
      11: return

  public io.dekorate.deps.commons.compress.archivers.tar.TarArchiveInputStream(java.io.InputStream, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: sipush        10240
       5: sipush        512
       8: aload_2
       9: invokespecial #39                 // Method "<init>":(Ljava/io/InputStream;IILjava/lang/String;)V
      12: return

  public io.dekorate.deps.commons.compress.archivers.tar.TarArchiveInputStream(java.io.InputStream, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: sipush        512
       6: invokespecial #33                 // Method "<init>":(Ljava/io/InputStream;II)V
       9: return

  public io.dekorate.deps.commons.compress.archivers.tar.TarArchiveInputStream(java.io.InputStream, int, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: sipush        512
       6: aload_3
       7: invokespecial #39                 // Method "<init>":(Ljava/io/InputStream;IILjava/lang/String;)V
      10: return

  public io.dekorate.deps.commons.compress.archivers.tar.TarArchiveInputStream(java.io.InputStream, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aconst_null
       5: invokespecial #39                 // Method "<init>":(Ljava/io/InputStream;IILjava/lang/String;)V
       8: return

  public io.dekorate.deps.commons.compress.archivers.tar.TarArchiveInputStream(java.io.InputStream, int, int, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #44                 // Method io/dekorate/deps/commons/compress/archivers/ArchiveInputStream."<init>":()V
       4: aload_0
       5: sipush        256
       8: newarray       byte
      10: putfield      #46                 // Field smallBuf:[B
      13: aload_0
      14: new           #48                 // class java/util/HashMap
      17: dup
      18: invokespecial #49                 // Method java/util/HashMap."<init>":()V
      21: putfield      #51                 // Field globalPaxHeaders:Ljava/util/Map;
      24: aload_0
      25: aload_1
      26: putfield      #53                 // Field is:Ljava/io/InputStream;
      29: aload_0
      30: iconst_0
      31: putfield      #55                 // Field hasHitEOF:Z
      34: aload_0
      35: aload         4
      37: putfield      #57                 // Field encoding:Ljava/lang/String;
      40: aload_0
      41: aload         4
      43: invokestatic  #63                 // Method io/dekorate/deps/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lio/dekorate/deps/commons/compress/archivers/zip/ZipEncoding;
      46: putfield      #65                 // Field zipEncoding:Lio/dekorate/deps/commons/compress/archivers/zip/ZipEncoding;
      49: aload_0
      50: iload_3
      51: putfield      #67                 // Field recordSize:I
      54: aload_0
      55: iload_2
      56: putfield      #69                 // Field blockSize:I
      59: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #53                 // Field is:Ljava/io/InputStream;
       4: invokevirtual #76                 // Method java/io/InputStream.close:()V
       7: return

  public int getRecordSize();
    Code:
       0: aload_0
       1: getfield      #67                 // Field recordSize:I
       4: ireturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #83                 // Method isDirectory:()Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #85                 // Field entrySize:J
      13: aload_0
      14: getfield      #87                 // Field entryOffset:J
      17: lsub
      18: ldc2_w        #88                 // long 2147483647l
      21: lcmp
      22: ifle          28
      25: ldc           #90                 // int 2147483647
      27: ireturn
      28: aload_0
      29: getfield      #85                 // Field entrySize:J
      32: aload_0
      33: getfield      #87                 // Field entryOffset:J
      36: lsub
      37: l2i
      38: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifle          13
       6: aload_0
       7: invokespecial #83                 // Method isDirectory:()Z
      10: ifeq          15
      13: lconst_0
      14: lreturn
      15: aload_0
      16: getfield      #85                 // Field entrySize:J
      19: aload_0
      20: getfield      #87                 // Field entryOffset:J
      23: lsub
      24: lstore_3
      25: aload_0
      26: getfield      #53                 // Field is:Ljava/io/InputStream;
      29: lload_1
      30: lload_3
      31: invokestatic  #98                 // Method java/lang/Math.min:(JJ)J
      34: invokestatic  #103                // Method io/dekorate/deps/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J
      37: lstore        5
      39: aload_0
      40: lload         5
      42: invokevirtual #107                // Method count:(J)V
      45: aload_0
      46: dup
      47: getfield      #87                 // Field entryOffset:J
      50: lload         5
      52: ladd
      53: putfield      #87                 // Field entryOffset:J
      56: lload         5
      58: lreturn

  public boolean markSupported();
    Code:
       0: iconst_0
       1: ireturn

  public void mark(int);
    Code:
       0: return

  public synchronized void reset();
    Code:
       0: return

  public io.dekorate.deps.commons.compress.archivers.tar.TarArchiveEntry getNextTarEntry() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #121                // Method isAtEOF:()Z
       4: ifeq          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #123                // Field currEntry:Lio/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry;
      13: ifnull        28
      16: aload_0
      17: ldc2_w        #124                // long 9223372036854775807l
      20: invokestatic  #103                // Method io/dekorate/deps/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J
      23: pop2
      24: aload_0
      25: invokespecial #128                // Method skipRecordPadding:()V
      28: aload_0
      29: invokespecial #132                // Method getRecord:()[B
      32: astore_1
      33: aload_1
      34: ifnonnull     44
      37: aload_0
      38: aconst_null
      39: putfield      #123                // Field currEntry:Lio/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry;
      42: aconst_null
      43: areturn
      44: aload_0
      45: new           #135                // class io/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry
      48: dup
      49: aload_1
      50: aload_0
      51: getfield      #65                 // Field zipEncoding:Lio/dekorate/deps/commons/compress/archivers/zip/ZipEncoding;
      54: invokespecial #138                // Method io/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry."<init>":([BLio/dekorate/deps/commons/compress/archivers/zip/ZipEncoding;)V
      57: putfield      #123                // Field currEntry:Lio/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry;
      60: goto          75
      63: astore_2
      64: new           #72                 // class java/io/IOException
      67: dup
      68: ldc           #140                // String Error detected parsing the header
      70: aload_2
      71: invokespecial #143                // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      74: athrow
      75: aload_0
      76: lconst_0
      77: putfield      #87                 // Field entryOffset:J
      80: aload_0
      81: aload_0
      82: getfield      #123                // Field currEntry:Lio/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry;
      85: invokevirtual #147                // Method io/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry.getSize:()J
      88: putfield      #85                 // Field entrySize:J
      91: aload_0
      92: getfield      #123                // Field currEntry:Lio/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry;
      95: invokevirtual #150                // Method io/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry.isGNULongLinkEntry:()Z
      98: ifeq          129
     101: aload_0
     102: invokevirtual #153                // Method getLongNameData:()[B
     105: astore_2
     106: aload_2
     107: ifnonnull     112
     110: aconst_null
     111: areturn
     112: aload_0
     113: getfield      #123                // Field currEntry:Lio/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry;
     116: aload_0
     117: getfield      #65                 // Field zipEncoding:Lio/dekorate/deps/commons/compress/archivers/zip/ZipEncoding;
     120: aload_2
     121: invokeinterface #159,  2          // InterfaceMethod io/dekorate/deps/commons/compress/archivers/zip/ZipEncoding.decode:([B)Ljava/lang/String;
     126: invokevirtual #163                // Method io/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry.setLinkName:(Ljava/lang/String;)V
     129: aload_0
     130: getfield      #123                // Field currEntry:Lio/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry;
     133: invokevirtual #166                // Method io/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry.isGNULongNameEntry:()Z
     136: ifeq          167
     139: aload_0
     140: invokevirtual #153                // Method getLongNameData:()[B
     143: astore_2
     144: aload_2
     145: ifnonnull     150
     148: aconst_null
     149: areturn
     150: aload_0
     151: getfield      #123                // Field currEntry:Lio/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry;
     154: aload_0
     155: getfield      #65                 // Field zipEncoding:Lio/dekorate/deps/commons/compress/archivers/zip/ZipEncoding;
     158: aload_2
     159: invokeinterface #159,  2          // InterfaceMethod io/dekorate/deps/commons/compress/archivers/zip/ZipEncoding.decode:([B)Ljava/lang/String;
     164: invokevirtual #169                // Method io/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry.setName:(Ljava/lang/String;)V
     167: aload_0
     168: getfield      #123                // Field currEntry:Lio/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry;
     171: invokevirtual #172                // Method io/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry.isGlobalPaxHeader:()Z
     174: ifeq          181
     177: aload_0
     178: invokespecial #175                // Method readGlobalPaxHeaders:()V
     181: aload_0
     182: getfield      #123                // Field currEntry:Lio/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry;
     185: invokevirtual #178                // Method io/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry.isPaxHeader:()Z
     188: ifeq          198
     191: aload_0
     192: invokespecial #181                // Method paxHeaders:()V
     195: goto          218
     198: aload_0
     199: getfield      #51                 // Field globalPaxHeaders:Ljava/util/Map;
     202: invokeinterface #186,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
     207: ifne          218
     210: aload_0
     211: aload_0
     212: getfield      #51                 // Field globalPaxHeaders:Ljava/util/Map;
     215: invokespecial #190                // Method applyPaxHeadersToCurrentEntry:(Ljava/util/Map;)V
     218: aload_0
     219: getfield      #123                // Field currEntry:Lio/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry;
     222: invokevirtual #193                // Method io/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry.isOldGNUSparse:()Z
     225: ifeq          232
     228: aload_0
     229: invokespecial #196                // Method readOldGNUSparse:()V
     232: aload_0
     233: aload_0
     234: getfield      #123                // Field currEntry:Lio/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry;
     237: invokevirtual #147                // Method io/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry.getSize:()J
     240: putfield      #85                 // Field entrySize:J
     243: aload_0
     244: getfield      #123                // Field currEntry:Lio/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry;
     247: areturn
    Exception table:
       from    to  target type
          44    60    63   Class java/lang/IllegalArgumentException

  private void skipRecordPadding() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #83                 // Method isDirectory:()Z
       4: ifne          73
       7: aload_0
       8: getfield      #85                 // Field entrySize:J
      11: lconst_0
      12: lcmp
      13: ifle          73
      16: aload_0
      17: getfield      #85                 // Field entrySize:J
      20: aload_0
      21: getfield      #67                 // Field recordSize:I
      24: i2l
      25: lrem
      26: lconst_0
      27: lcmp
      28: ifeq          73
      31: aload_0
      32: getfield      #85                 // Field entrySize:J
      35: aload_0
      36: getfield      #67                 // Field recordSize:I
      39: i2l
      40: ldiv
      41: lconst_1
      42: ladd
      43: lstore_1
      44: lload_1
      45: aload_0
      46: getfield      #67                 // Field recordSize:I
      49: i2l
      50: lmul
      51: aload_0
      52: getfield      #85                 // Field entrySize:J
      55: lsub
      56: lstore_3
      57: aload_0
      58: getfield      #53                 // Field is:Ljava/io/InputStream;
      61: lload_3
      62: invokestatic  #103                // Method io/dekorate/deps/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J
      65: lstore        5
      67: aload_0
      68: lload         5
      70: invokevirtual #107                // Method count:(J)V
      73: return

  protected byte[] getLongNameData() throws java.io.IOException;
    Code:
       0: new           #205                // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #206                // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_1
       8: iconst_0
       9: istore_2
      10: aload_0
      11: aload_0
      12: getfield      #46                 // Field smallBuf:[B
      15: invokevirtual #210                // Method read:([B)I
      18: dup
      19: istore_2
      20: iflt          36
      23: aload_1
      24: aload_0
      25: getfield      #46                 // Field smallBuf:[B
      28: iconst_0
      29: iload_2
      30: invokevirtual #214                // Method java/io/ByteArrayOutputStream.write:([BII)V
      33: goto          10
      36: aload_0
      37: invokevirtual #218                // Method getNextEntry:()Lio/dekorate/deps/commons/compress/archivers/ArchiveEntry;
      40: pop
      41: aload_0
      42: getfield      #123                // Field currEntry:Lio/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry;
      45: ifnonnull     50
      48: aconst_null
      49: areturn
      50: aload_1
      51: invokevirtual #221                // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      54: astore_3
      55: aload_3
      56: arraylength
      57: istore_2
      58: iload_2
      59: ifle          76
      62: aload_3
      63: iload_2
      64: iconst_1
      65: isub
      66: baload
      67: ifne          76
      70: iinc          2, -1
      73: goto          58
      76: iload_2
      77: aload_3
      78: arraylength
      79: if_icmpeq     99
      82: iload_2
      83: newarray       byte
      85: astore        4
      87: aload_3
      88: iconst_0
      89: aload         4
      91: iconst_0
      92: iload_2
      93: invokestatic  #227                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      96: aload         4
      98: astore_3
      99: aload_3
     100: areturn

  private byte[] getRecord() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #234                // Method readRecord:()[B
       4: astore_1
       5: aload_0
       6: aload_0
       7: aload_1
       8: invokevirtual #238                // Method isEOFRecord:([B)Z
      11: invokevirtual #242                // Method setAtEOF:(Z)V
      14: aload_0
      15: invokevirtual #121                // Method isAtEOF:()Z
      18: ifeq          35
      21: aload_1
      22: ifnull        35
      25: aload_0
      26: invokespecial #245                // Method tryToConsumeSecondEOFRecord:()V
      29: aload_0
      30: invokespecial #248                // Method consumeRemainderOfLastBlock:()V
      33: aconst_null
      34: astore_1
      35: aload_1
      36: areturn

  protected boolean isEOFRecord(byte[]);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_1
       5: aload_0
       6: getfield      #67                 // Field recordSize:I
       9: invokestatic  #254                // Method io/dekorate/deps/commons/compress/utils/ArchiveUtils.isArrayZero:([BI)Z
      12: ifeq          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  protected byte[] readRecord() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #67                 // Field recordSize:I
       4: newarray       byte
       6: astore_1
       7: aload_0
       8: getfield      #53                 // Field is:Ljava/io/InputStream;
      11: aload_1
      12: invokestatic  #259                // Method io/dekorate/deps/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I
      15: istore_2
      16: aload_0
      17: iload_2
      18: invokevirtual #261                // Method count:(I)V
      21: iload_2
      22: aload_0
      23: getfield      #67                 // Field recordSize:I
      26: if_icmpeq     31
      29: aconst_null
      30: areturn
      31: aload_1
      32: areturn

  private void readGlobalPaxHeaders() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: invokevirtual #266                // Method parsePaxHeaders:(Ljava/io/InputStream;)Ljava/util/Map;
       6: putfield      #51                 // Field globalPaxHeaders:Ljava/util/Map;
       9: aload_0
      10: invokevirtual #218                // Method getNextEntry:()Lio/dekorate/deps/commons/compress/archivers/ArchiveEntry;
      13: pop
      14: return

  private void paxHeaders() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #266                // Method parsePaxHeaders:(Ljava/io/InputStream;)Ljava/util/Map;
       5: astore_1
       6: aload_0
       7: invokevirtual #218                // Method getNextEntry:()Lio/dekorate/deps/commons/compress/archivers/ArchiveEntry;
      10: pop
      11: aload_0
      12: aload_1
      13: invokespecial #190                // Method applyPaxHeadersToCurrentEntry:(Ljava/util/Map;)V
      16: return

  java.util.Map<java.lang.String, java.lang.String> parsePaxHeaders(java.io.InputStream) throws java.io.IOException;
    Code:
       0: new           #48                 // class java/util/HashMap
       3: dup
       4: aload_0
       5: getfield      #51                 // Field globalPaxHeaders:Ljava/util/Map;
       8: invokespecial #270                // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      11: astore_2
      12: iconst_0
      13: istore        4
      15: iconst_0
      16: istore        5
      18: aload_1
      19: invokevirtual #272                // Method java/io/InputStream.read:()I
      22: dup
      23: istore_3
      24: iconst_m1
      25: if_icmpeq     232
      28: iinc          5, 1
      31: iload_3
      32: bipush        10
      34: if_icmpne     40
      37: goto          232
      40: iload_3
      41: bipush        32
      43: if_icmpne     213
      46: new           #205                // class java/io/ByteArrayOutputStream
      49: dup
      50: invokespecial #206                // Method java/io/ByteArrayOutputStream."<init>":()V
      53: astore        6
      55: aload_1
      56: invokevirtual #272                // Method java/io/InputStream.read:()I
      59: dup
      60: istore_3
      61: iconst_m1
      62: if_icmpeq     232
      65: iinc          5, 1
      68: iload_3
      69: bipush        61
      71: if_icmpne     203
      74: aload         6
      76: ldc_w         #274                // String UTF-8
      79: invokevirtual #278                // Method java/io/ByteArrayOutputStream.toString:(Ljava/lang/String;)Ljava/lang/String;
      82: astore        7
      84: iload         4
      86: iload         5
      88: isub
      89: istore        8
      91: iload         8
      93: iconst_1
      94: if_icmpne     109
      97: aload_2
      98: aload         7
     100: invokeinterface #282,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     105: pop
     106: goto          232
     109: iload         8
     111: newarray       byte
     113: astore        9
     115: aload_1
     116: aload         9
     118: invokestatic  #259                // Method io/dekorate/deps/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I
     121: istore        10
     123: iload         10
     125: iload         8
     127: if_icmpeq     170
     130: new           #72                 // class java/io/IOException
     133: dup
     134: new           #286                // class java/lang/StringBuilder
     137: dup
     138: invokespecial #287                // Method java/lang/StringBuilder."<init>":()V
     141: ldc_w         #289                // String Failed to read Paxheader. Expected
     144: invokevirtual #293                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     147: iload         8
     149: invokevirtual #296                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     152: ldc_w         #298                // String  bytes, read
     155: invokevirtual #293                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     158: iload         10
     160: invokevirtual #296                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     163: invokevirtual #301                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     166: invokespecial #303                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     169: athrow
     170: new           #284                // class java/lang/String
     173: dup
     174: aload         9
     176: iconst_0
     177: iload         8
     179: iconst_1
     180: isub
     181: ldc_w         #274                // String UTF-8
     184: invokespecial #306                // Method java/lang/String."<init>":([BIILjava/lang/String;)V
     187: astore        11
     189: aload_2
     190: aload         7
     192: aload         11
     194: invokeinterface #310,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     199: pop
     200: goto          232
     203: aload         6
     205: iload_3
     206: i2b
     207: invokevirtual #312                // Method java/io/ByteArrayOutputStream.write:(I)V
     210: goto          55
     213: iload         4
     215: bipush        10
     217: imul
     218: istore        4
     220: iload         4
     222: iload_3
     223: bipush        48
     225: isub
     226: iadd
     227: istore        4
     229: goto          18
     232: iload_3
     233: iconst_m1
     234: if_icmpne     240
     237: goto          243
     240: goto          12
     243: aload_2
     244: areturn

  private void applyPaxHeadersToCurrentEntry(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #123                // Field currEntry:Lio/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry;
       4: aload_1
       5: invokevirtual #325                // Method io/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry.updateEntryFromPaxHeaders:(Ljava/util/Map;)V
       8: return

  private void readOldGNUSparse() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #123                // Field currEntry:Lio/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry;
       4: invokevirtual #328                // Method io/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry.isExtended:()Z
       7: ifeq          43
      10: aload_0
      11: invokespecial #132                // Method getRecord:()[B
      14: astore_2
      15: aload_2
      16: ifnonnull     27
      19: aload_0
      20: aconst_null
      21: putfield      #123                // Field currEntry:Lio/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry;
      24: goto          43
      27: new           #330                // class io/dekorate/deps/commons/compress/archivers/tar/TarArchiveSparseEntry
      30: dup
      31: aload_2
      32: invokespecial #333                // Method io/dekorate/deps/commons/compress/archivers/tar/TarArchiveSparseEntry."<init>":([B)V
      35: astore_1
      36: aload_1
      37: invokevirtual #334                // Method io/dekorate/deps/commons/compress/archivers/tar/TarArchiveSparseEntry.isExtended:()Z
      40: ifne          10
      43: return

  private boolean isDirectory();
    Code:
       0: aload_0
       1: getfield      #123                // Field currEntry:Lio/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry;
       4: ifnull        21
       7: aload_0
       8: getfield      #123                // Field currEntry:Lio/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry;
      11: invokevirtual #337                // Method io/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry.isDirectory:()Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public io.dekorate.deps.commons.compress.archivers.ArchiveEntry getNextEntry() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #339                // Method getNextTarEntry:()Lio/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry;
       4: areturn

  private void tryToConsumeSecondEOFRecord() throws java.io.IOException;
    Code:
       0: iconst_1
       1: istore_1
       2: aload_0
       3: getfield      #53                 // Field is:Ljava/io/InputStream;
       6: invokevirtual #341                // Method java/io/InputStream.markSupported:()Z
       9: istore_2
      10: iload_2
      11: ifeq          25
      14: aload_0
      15: getfield      #53                 // Field is:Ljava/io/InputStream;
      18: aload_0
      19: getfield      #67                 // Field recordSize:I
      22: invokevirtual #343                // Method java/io/InputStream.mark:(I)V
      25: aload_0
      26: aload_0
      27: invokevirtual #234                // Method readRecord:()[B
      30: invokevirtual #238                // Method isEOFRecord:([B)Z
      33: ifne          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: istore_1
      42: iload_1
      43: ifeq          96
      46: iload_2
      47: ifeq          96
      50: aload_0
      51: aload_0
      52: getfield      #67                 // Field recordSize:I
      55: i2l
      56: invokevirtual #346                // Method pushedBackBytes:(J)V
      59: aload_0
      60: getfield      #53                 // Field is:Ljava/io/InputStream;
      63: invokevirtual #348                // Method java/io/InputStream.reset:()V
      66: goto          96
      69: astore_3
      70: iload_1
      71: ifeq          94
      74: iload_2
      75: ifeq          94
      78: aload_0
      79: aload_0
      80: getfield      #67                 // Field recordSize:I
      83: i2l
      84: invokevirtual #346                // Method pushedBackBytes:(J)V
      87: aload_0
      88: getfield      #53                 // Field is:Ljava/io/InputStream;
      91: invokevirtual #348                // Method java/io/InputStream.reset:()V
      94: aload_3
      95: athrow
      96: return
    Exception table:
       from    to  target type
          25    42    69   any

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore        4
       3: aload_0
       4: invokevirtual #121                // Method isAtEOF:()Z
       7: ifne          29
      10: aload_0
      11: invokespecial #83                 // Method isDirectory:()Z
      14: ifne          29
      17: aload_0
      18: getfield      #87                 // Field entryOffset:J
      21: aload_0
      22: getfield      #85                 // Field entrySize:J
      25: lcmp
      26: iflt          31
      29: iconst_m1
      30: ireturn
      31: aload_0
      32: getfield      #123                // Field currEntry:Lio/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry;
      35: ifnonnull     49
      38: new           #355                // class java/lang/IllegalStateException
      41: dup
      42: ldc_w         #357                // String No current tar entry
      45: invokespecial #358                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: iload_3
      50: aload_0
      51: invokevirtual #360                // Method available:()I
      54: invokestatic  #363                // Method java/lang/Math.min:(II)I
      57: istore_3
      58: aload_0
      59: getfield      #53                 // Field is:Ljava/io/InputStream;
      62: aload_1
      63: iload_2
      64: iload_3
      65: invokevirtual #365                // Method java/io/InputStream.read:([BII)I
      68: istore        4
      70: iload         4
      72: iconst_m1
      73: if_icmpne     99
      76: iload_3
      77: ifle          91
      80: new           #72                 // class java/io/IOException
      83: dup
      84: ldc_w         #367                // String Truncated TAR archive
      87: invokespecial #303                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      90: athrow
      91: aload_0
      92: iconst_1
      93: invokevirtual #242                // Method setAtEOF:(Z)V
      96: goto          117
      99: aload_0
     100: iload         4
     102: invokevirtual #261                // Method count:(I)V
     105: aload_0
     106: dup
     107: getfield      #87                 // Field entryOffset:J
     110: iload         4
     112: i2l
     113: ladd
     114: putfield      #87                 // Field entryOffset:J
     117: iload         4
     119: ireturn

  public boolean canReadEntryData(io.dekorate.deps.commons.compress.archivers.ArchiveEntry);
    Code:
       0: aload_1
       1: instanceof    #135                // class io/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry
       4: ifeq          25
       7: aload_1
       8: checkcast     #135                // class io/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry
      11: astore_2
      12: aload_2
      13: invokevirtual #376                // Method io/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry.isSparse:()Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn
      25: iconst_0
      26: ireturn

  public io.dekorate.deps.commons.compress.archivers.tar.TarArchiveEntry getCurrentEntry();
    Code:
       0: aload_0
       1: getfield      #123                // Field currEntry:Lio/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry;
       4: areturn

  protected final void setCurrentEntry(io.dekorate.deps.commons.compress.archivers.tar.TarArchiveEntry);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #123                // Field currEntry:Lio/dekorate/deps/commons/compress/archivers/tar/TarArchiveEntry;
       5: return

  protected final boolean isAtEOF();
    Code:
       0: aload_0
       1: getfield      #55                 // Field hasHitEOF:Z
       4: ireturn

  protected final void setAtEOF(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #55                 // Field hasHitEOF:Z
       5: return

  private void consumeRemainderOfLastBlock() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #386                // Method getBytesRead:()J
       4: aload_0
       5: getfield      #69                 // Field blockSize:I
       8: i2l
       9: lrem
      10: lstore_1
      11: lload_1
      12: lconst_0
      13: lcmp
      14: ifle          37
      17: aload_0
      18: getfield      #53                 // Field is:Ljava/io/InputStream;
      21: aload_0
      22: getfield      #69                 // Field blockSize:I
      25: i2l
      26: lload_1
      27: lsub
      28: invokestatic  #103                // Method io/dekorate/deps/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J
      31: lstore_3
      32: aload_0
      33: lload_3
      34: invokevirtual #107                // Method count:(J)V
      37: return

  public static boolean matches(byte[], int);
    Code:
       0: iload_1
       1: sipush        265
       4: if_icmpge     9
       7: iconst_0
       8: ireturn
       9: ldc_w         #390                // String ustar\u0000
      12: aload_0
      13: sipush        257
      16: bipush        6
      18: invokestatic  #394                // Method io/dekorate/deps/commons/compress/utils/ArchiveUtils.matchAsciiBuffer:(Ljava/lang/String;[BII)Z
      21: ifeq          40
      24: ldc_w         #396                // String 00
      27: aload_0
      28: sipush        263
      31: iconst_2
      32: invokestatic  #394                // Method io/dekorate/deps/commons/compress/utils/ArchiveUtils.matchAsciiBuffer:(Ljava/lang/String;[BII)Z
      35: ifeq          40
      38: iconst_1
      39: ireturn
      40: ldc_w         #398                // String ustar
      43: aload_0
      44: sipush        257
      47: bipush        6
      49: invokestatic  #394                // Method io/dekorate/deps/commons/compress/utils/ArchiveUtils.matchAsciiBuffer:(Ljava/lang/String;[BII)Z
      52: ifeq          85
      55: ldc_w         #400                // String  \u0000
      58: aload_0
      59: sipush        263
      62: iconst_2
      63: invokestatic  #394                // Method io/dekorate/deps/commons/compress/utils/ArchiveUtils.matchAsciiBuffer:(Ljava/lang/String;[BII)Z
      66: ifne          83
      69: ldc_w         #402                // String 0\u0000
      72: aload_0
      73: sipush        263
      76: iconst_2
      77: invokestatic  #394                // Method io/dekorate/deps/commons/compress/utils/ArchiveUtils.matchAsciiBuffer:(Ljava/lang/String;[BII)Z
      80: ifeq          85
      83: iconst_1
      84: ireturn
      85: ldc_w         #390                // String ustar\u0000
      88: aload_0
      89: sipush        257
      92: bipush        6
      94: invokestatic  #394                // Method io/dekorate/deps/commons/compress/utils/ArchiveUtils.matchAsciiBuffer:(Ljava/lang/String;[BII)Z
      97: ifeq          118
     100: ldc_w         #404                // String \u0000\u0000
     103: aload_0
     104: sipush        263
     107: iconst_2
     108: invokestatic  #394                // Method io/dekorate/deps/commons/compress/utils/ArchiveUtils.matchAsciiBuffer:(Ljava/lang/String;[BII)Z
     111: ifeq          118
     114: iconst_1
     115: goto          119
     118: iconst_0
     119: ireturn
}
