Compiled from "ContainerStateTerminatedFluent.java"
public interface io.dekorate.deps.kubernetes.api.model.ContainerStateTerminatedFluent<A extends io.dekorate.deps.kubernetes.api.model.ContainerStateTerminatedFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getContainerID();

  public abstract A withContainerID(java.lang.String);

  public abstract java.lang.Boolean hasContainerID();

  public abstract A withNewContainerID(java.lang.String);

  public abstract A withNewContainerID(java.lang.StringBuilder);

  public abstract A withNewContainerID(java.lang.StringBuffer);

  public abstract java.lang.Integer getExitCode();

  public abstract A withExitCode(java.lang.Integer);

  public abstract java.lang.Boolean hasExitCode();

  public abstract java.lang.String getFinishedAt();

  public abstract A withFinishedAt(java.lang.String);

  public abstract java.lang.Boolean hasFinishedAt();

  public abstract A withNewFinishedAt(java.lang.String);

  public abstract A withNewFinishedAt(java.lang.StringBuilder);

  public abstract A withNewFinishedAt(java.lang.StringBuffer);

  public abstract java.lang.String getMessage();

  public abstract A withMessage(java.lang.String);

  public abstract java.lang.Boolean hasMessage();

  public abstract A withNewMessage(java.lang.String);

  public abstract A withNewMessage(java.lang.StringBuilder);

  public abstract A withNewMessage(java.lang.StringBuffer);

  public abstract java.lang.String getReason();

  public abstract A withReason(java.lang.String);

  public abstract java.lang.Boolean hasReason();

  public abstract A withNewReason(java.lang.String);

  public abstract A withNewReason(java.lang.StringBuilder);

  public abstract A withNewReason(java.lang.StringBuffer);

  public abstract java.lang.Integer getSignal();

  public abstract A withSignal(java.lang.Integer);

  public abstract java.lang.Boolean hasSignal();

  public abstract java.lang.String getStartedAt();

  public abstract A withStartedAt(java.lang.String);

  public abstract java.lang.Boolean hasStartedAt();

  public abstract A withNewStartedAt(java.lang.String);

  public abstract A withNewStartedAt(java.lang.StringBuilder);

  public abstract A withNewStartedAt(java.lang.StringBuffer);
}
