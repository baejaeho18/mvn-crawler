Compiled from "AggregationRuleFluent.java"
public interface io.dekorate.deps.kubernetes.api.model.rbac.AggregationRuleFluent<A extends io.dekorate.deps.kubernetes.api.model.rbac.AggregationRuleFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract A addToClusterRoleSelectors(int, io.dekorate.deps.kubernetes.api.model.LabelSelector);

  public abstract A setToClusterRoleSelectors(int, io.dekorate.deps.kubernetes.api.model.LabelSelector);

  public abstract A addToClusterRoleSelectors(io.dekorate.deps.kubernetes.api.model.LabelSelector...);

  public abstract A addAllToClusterRoleSelectors(java.util.Collection<io.dekorate.deps.kubernetes.api.model.LabelSelector>);

  public abstract A removeFromClusterRoleSelectors(io.dekorate.deps.kubernetes.api.model.LabelSelector...);

  public abstract A removeAllFromClusterRoleSelectors(java.util.Collection<io.dekorate.deps.kubernetes.api.model.LabelSelector>);

  public abstract A removeMatchingFromClusterRoleSelectors(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.LabelSelectorBuilder>);

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.LabelSelector> getClusterRoleSelectors();

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.LabelSelector> buildClusterRoleSelectors();

  public abstract io.dekorate.deps.kubernetes.api.model.LabelSelector buildClusterRoleSelector(int);

  public abstract io.dekorate.deps.kubernetes.api.model.LabelSelector buildFirstClusterRoleSelector();

  public abstract io.dekorate.deps.kubernetes.api.model.LabelSelector buildLastClusterRoleSelector();

  public abstract io.dekorate.deps.kubernetes.api.model.LabelSelector buildMatchingClusterRoleSelector(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.LabelSelectorBuilder>);

  public abstract java.lang.Boolean hasMatchingClusterRoleSelector(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.LabelSelectorBuilder>);

  public abstract A withClusterRoleSelectors(java.util.List<io.dekorate.deps.kubernetes.api.model.LabelSelector>);

  public abstract A withClusterRoleSelectors(io.dekorate.deps.kubernetes.api.model.LabelSelector...);

  public abstract java.lang.Boolean hasClusterRoleSelectors();

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.AggregationRuleFluent$ClusterRoleSelectorsNested<A> addNewClusterRoleSelector();

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.AggregationRuleFluent$ClusterRoleSelectorsNested<A> addNewClusterRoleSelectorLike(io.dekorate.deps.kubernetes.api.model.LabelSelector);

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.AggregationRuleFluent$ClusterRoleSelectorsNested<A> setNewClusterRoleSelectorLike(int, io.dekorate.deps.kubernetes.api.model.LabelSelector);

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.AggregationRuleFluent$ClusterRoleSelectorsNested<A> editClusterRoleSelector(int);

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.AggregationRuleFluent$ClusterRoleSelectorsNested<A> editFirstClusterRoleSelector();

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.AggregationRuleFluent$ClusterRoleSelectorsNested<A> editLastClusterRoleSelector();

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.AggregationRuleFluent$ClusterRoleSelectorsNested<A> editMatchingClusterRoleSelector(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.LabelSelectorBuilder>);
}
