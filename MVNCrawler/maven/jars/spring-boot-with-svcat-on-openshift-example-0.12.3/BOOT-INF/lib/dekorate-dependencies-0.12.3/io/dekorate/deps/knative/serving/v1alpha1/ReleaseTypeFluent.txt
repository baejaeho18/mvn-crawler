Compiled from "ReleaseTypeFluent.java"
public interface io.dekorate.deps.knative.serving.v1alpha1.ReleaseTypeFluent<A extends io.dekorate.deps.knative.serving.v1alpha1.ReleaseTypeFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract io.dekorate.deps.knative.serving.v1alpha1.ConfigurationSpec getConfiguration();

  public abstract io.dekorate.deps.knative.serving.v1alpha1.ConfigurationSpec buildConfiguration();

  public abstract A withConfiguration(io.dekorate.deps.knative.serving.v1alpha1.ConfigurationSpec);

  public abstract java.lang.Boolean hasConfiguration();

  public abstract io.dekorate.deps.knative.serving.v1alpha1.ReleaseTypeFluent$ConfigurationNested<A> withNewConfiguration();

  public abstract io.dekorate.deps.knative.serving.v1alpha1.ReleaseTypeFluent$ConfigurationNested<A> withNewConfigurationLike(io.dekorate.deps.knative.serving.v1alpha1.ConfigurationSpec);

  public abstract io.dekorate.deps.knative.serving.v1alpha1.ReleaseTypeFluent$ConfigurationNested<A> editConfiguration();

  public abstract io.dekorate.deps.knative.serving.v1alpha1.ReleaseTypeFluent$ConfigurationNested<A> editOrNewConfiguration();

  public abstract io.dekorate.deps.knative.serving.v1alpha1.ReleaseTypeFluent$ConfigurationNested<A> editOrNewConfigurationLike(io.dekorate.deps.knative.serving.v1alpha1.ConfigurationSpec);

  public abstract A addToRevisions(int, java.lang.String);

  public abstract A setToRevisions(int, java.lang.String);

  public abstract A addToRevisions(java.lang.String...);

  public abstract A addAllToRevisions(java.util.Collection<java.lang.String>);

  public abstract A removeFromRevisions(java.lang.String...);

  public abstract A removeAllFromRevisions(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getRevisions();

  public abstract java.lang.String getRevision(int);

  public abstract java.lang.String getFirstRevision();

  public abstract java.lang.String getLastRevision();

  public abstract java.lang.String getMatchingRevision(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingRevision(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract A withRevisions(java.util.List<java.lang.String>);

  public abstract A withRevisions(java.lang.String...);

  public abstract java.lang.Boolean hasRevisions();

  public abstract A addNewRevision(java.lang.String);

  public abstract A addNewRevision(java.lang.StringBuilder);

  public abstract A addNewRevision(java.lang.StringBuffer);

  public abstract java.lang.Integer getRolloutPercent();

  public abstract A withRolloutPercent(java.lang.Integer);

  public abstract java.lang.Boolean hasRolloutPercent();
}
