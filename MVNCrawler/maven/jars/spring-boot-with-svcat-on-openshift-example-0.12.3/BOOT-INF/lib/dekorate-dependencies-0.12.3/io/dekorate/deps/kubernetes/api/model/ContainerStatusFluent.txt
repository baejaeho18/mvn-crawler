Compiled from "ContainerStatusFluent.java"
public interface io.dekorate.deps.kubernetes.api.model.ContainerStatusFluent<A extends io.dekorate.deps.kubernetes.api.model.ContainerStatusFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getContainerID();

  public abstract A withContainerID(java.lang.String);

  public abstract java.lang.Boolean hasContainerID();

  public abstract A withNewContainerID(java.lang.String);

  public abstract A withNewContainerID(java.lang.StringBuilder);

  public abstract A withNewContainerID(java.lang.StringBuffer);

  public abstract java.lang.String getImage();

  public abstract A withImage(java.lang.String);

  public abstract java.lang.Boolean hasImage();

  public abstract A withNewImage(java.lang.String);

  public abstract A withNewImage(java.lang.StringBuilder);

  public abstract A withNewImage(java.lang.StringBuffer);

  public abstract java.lang.String getImageID();

  public abstract A withImageID(java.lang.String);

  public abstract java.lang.Boolean hasImageID();

  public abstract A withNewImageID(java.lang.String);

  public abstract A withNewImageID(java.lang.StringBuilder);

  public abstract A withNewImageID(java.lang.StringBuffer);

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerState getLastState();

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerState buildLastState();

  public abstract A withLastState(io.dekorate.deps.kubernetes.api.model.ContainerState);

  public abstract java.lang.Boolean hasLastState();

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerStatusFluent$LastStateNested<A> withNewLastState();

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerStatusFluent$LastStateNested<A> withNewLastStateLike(io.dekorate.deps.kubernetes.api.model.ContainerState);

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerStatusFluent$LastStateNested<A> editLastState();

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerStatusFluent$LastStateNested<A> editOrNewLastState();

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerStatusFluent$LastStateNested<A> editOrNewLastStateLike(io.dekorate.deps.kubernetes.api.model.ContainerState);

  public abstract java.lang.String getName();

  public abstract A withName(java.lang.String);

  public abstract java.lang.Boolean hasName();

  public abstract A withNewName(java.lang.String);

  public abstract A withNewName(java.lang.StringBuilder);

  public abstract A withNewName(java.lang.StringBuffer);

  public abstract java.lang.Boolean isReady();

  public abstract A withReady(java.lang.Boolean);

  public abstract java.lang.Boolean hasReady();

  public abstract A withNewReady(java.lang.String);

  public abstract A withNewReady(boolean);

  public abstract java.lang.Integer getRestartCount();

  public abstract A withRestartCount(java.lang.Integer);

  public abstract java.lang.Boolean hasRestartCount();

  public abstract java.lang.Boolean isStarted();

  public abstract A withStarted(java.lang.Boolean);

  public abstract java.lang.Boolean hasStarted();

  public abstract A withNewStarted(java.lang.String);

  public abstract A withNewStarted(boolean);

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerState getState();

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerState buildState();

  public abstract A withState(io.dekorate.deps.kubernetes.api.model.ContainerState);

  public abstract java.lang.Boolean hasState();

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerStatusFluent$StateNested<A> withNewState();

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerStatusFluent$StateNested<A> withNewStateLike(io.dekorate.deps.kubernetes.api.model.ContainerState);

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerStatusFluent$StateNested<A> editState();

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerStatusFluent$StateNested<A> editOrNewState();

  public abstract io.dekorate.deps.kubernetes.api.model.ContainerStatusFluent$StateNested<A> editOrNewStateLike(io.dekorate.deps.kubernetes.api.model.ContainerState);
}
