Compiled from "BlockLZ4CompressorOutputStream.java"
final class io.dekorate.deps.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream$Pair {
  private final java.util.Deque<byte[]> literals;

  private int brOffset;

  private int brLength;

  private boolean written;

  io.dekorate.deps.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream$Pair();
    Code:
       0: aload_0
       1: invokespecial #28                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #30                 // class java/util/LinkedList
       8: dup
       9: invokespecial #31                 // Method java/util/LinkedList."<init>":()V
      12: putfield      #33                 // Field literals:Ljava/util/Deque;
      15: return

  private void prependLiteral(byte[]);
    Code:
       0: aload_0
       1: getfield      #33                 // Field literals:Ljava/util/Deque;
       4: aload_1
       5: invokeinterface #43,  2           // InterfaceMethod java/util/Deque.addFirst:(Ljava/lang/Object;)V
      10: return

  byte[] addLiteral(io.dekorate.deps.commons.compress.compressors.lz77support.LZ77Compressor$LiteralBlock);
    Code:
       0: aload_1
       1: invokevirtual #51                 // Method io/dekorate/deps/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getData:()[B
       4: aload_1
       5: invokevirtual #55                 // Method io/dekorate/deps/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getOffset:()I
       8: aload_1
       9: invokevirtual #55                 // Method io/dekorate/deps/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getOffset:()I
      12: aload_1
      13: invokevirtual #58                 // Method io/dekorate/deps/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getLength:()I
      16: iadd
      17: invokestatic  #64                 // Method java/util/Arrays.copyOfRange:([BII)[B
      20: astore_2
      21: aload_0
      22: getfield      #33                 // Field literals:Ljava/util/Deque;
      25: aload_2
      26: invokeinterface #68,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
      31: pop
      32: aload_2
      33: areturn

  void setBackReference(io.dekorate.deps.commons.compress.compressors.lz77support.LZ77Compressor$BackReference);
    Code:
       0: aload_0
       1: invokevirtual #77                 // Method hasBackReference:()Z
       4: ifeq          15
       7: new           #79                 // class java/lang/IllegalStateException
      10: dup
      11: invokespecial #80                 // Method java/lang/IllegalStateException."<init>":()V
      14: athrow
      15: aload_0
      16: aload_1
      17: invokevirtual #81                 // Method io/dekorate/deps/commons/compress/compressors/lz77support/LZ77Compressor$BackReference.getOffset:()I
      20: putfield      #83                 // Field brOffset:I
      23: aload_0
      24: aload_1
      25: invokevirtual #84                 // Method io/dekorate/deps/commons/compress/compressors/lz77support/LZ77Compressor$BackReference.getLength:()I
      28: putfield      #86                 // Field brLength:I
      31: return

  boolean hasBackReference();
    Code:
       0: aload_0
       1: getfield      #83                 // Field brOffset:I
       4: ifle          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  boolean canBeWritten(int);
    Code:
       0: aload_0
       1: invokevirtual #77                 // Method hasBackReference:()Z
       4: ifeq          17
       7: iload_1
       8: bipush        16
      10: if_icmplt     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  int length();
    Code:
       0: aload_0
       1: invokespecial #94                 // Method literalLength:()I
       4: aload_0
       5: getfield      #86                 // Field brLength:I
       8: iadd
       9: ireturn

  private boolean hasBeenWritten();
    Code:
       0: aload_0
       1: getfield      #97                 // Field written:Z
       4: ireturn

  void writeTo(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #94                 // Method literalLength:()I
       4: istore_2
       5: aload_1
       6: iload_2
       7: aload_0
       8: getfield      #86                 // Field brLength:I
      11: invokestatic  #105                // Method lengths:(II)I
      14: invokevirtual #111                // Method java/io/OutputStream.write:(I)V
      17: iload_2
      18: bipush        15
      20: if_icmplt     31
      23: iload_2
      24: bipush        15
      26: isub
      27: aload_1
      28: invokestatic  #115                // Method writeLength:(ILjava/io/OutputStream;)V
      31: aload_0
      32: getfield      #33                 // Field literals:Ljava/util/Deque;
      35: invokeinterface #119,  1          // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;
      40: astore_3
      41: aload_3
      42: invokeinterface #124,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      47: ifeq          70
      50: aload_3
      51: invokeinterface #128,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      56: checkcast     #129                // class "[B"
      59: astore        4
      61: aload_1
      62: aload         4
      64: invokevirtual #131                // Method java/io/OutputStream.write:([B)V
      67: goto          41
      70: aload_0
      71: invokevirtual #77                 // Method hasBackReference:()Z
      74: ifeq          111
      77: aload_1
      78: aload_0
      79: getfield      #83                 // Field brOffset:I
      82: i2l
      83: iconst_2
      84: invokestatic  #137                // Method io/dekorate/deps/commons/compress/utils/ByteUtils.toLittleEndian:(Ljava/io/OutputStream;JI)V
      87: aload_0
      88: getfield      #86                 // Field brLength:I
      91: iconst_4
      92: isub
      93: bipush        15
      95: if_icmplt     111
      98: aload_0
      99: getfield      #86                 // Field brLength:I
     102: iconst_4
     103: isub
     104: bipush        15
     106: isub
     107: aload_1
     108: invokestatic  #115                // Method writeLength:(ILjava/io/OutputStream;)V
     111: aload_0
     112: iconst_1
     113: putfield      #97                 // Field written:Z
     116: return

  private int literalLength();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #33                 // Field literals:Ljava/util/Deque;
       6: invokeinterface #119,  1          // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #124,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          39
      21: aload_2
      22: invokeinterface #128,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #129                // class "[B"
      30: astore_3
      31: iload_1
      32: aload_3
      33: arraylength
      34: iadd
      35: istore_1
      36: goto          12
      39: iload_1
      40: ireturn

  private static int lengths(int, int);
    Code:
       0: iload_0
       1: bipush        15
       3: if_icmpge     10
       6: iload_0
       7: goto          12
      10: bipush        15
      12: istore_2
      13: iload_1
      14: iconst_4
      15: if_icmpge     22
      18: iconst_0
      19: goto          36
      22: iload_1
      23: bipush        19
      25: if_icmpge     34
      28: iload_1
      29: iconst_4
      30: isub
      31: goto          36
      34: bipush        15
      36: istore_3
      37: iload_2
      38: iconst_4
      39: ishl
      40: iload_3
      41: ior
      42: ireturn

  private static void writeLength(int, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: iload_0
       1: sipush        255
       4: if_icmplt     23
       7: aload_1
       8: sipush        255
      11: invokevirtual #111                // Method java/io/OutputStream.write:(I)V
      14: iinc_w        0, -255
      20: goto          0
      23: aload_1
      24: iload_0
      25: invokevirtual #111                // Method java/io/OutputStream.write:(I)V
      28: return

  private int backReferenceLength();
    Code:
       0: aload_0
       1: getfield      #86                 // Field brLength:I
       4: ireturn

  private void prependTo(io.dekorate.deps.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream$Pair);
    Code:
       0: aload_0
       1: getfield      #33                 // Field literals:Ljava/util/Deque;
       4: invokeinterface #149,  1          // InterfaceMethod java/util/Deque.descendingIterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #124,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          35
      19: aload_1
      20: aload_2
      21: invokeinterface #128,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: checkcast     #129                // class "[B"
      29: invokespecial #151                // Method prependLiteral:([B)V
      32: goto          10
      35: return

  private io.dekorate.deps.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream$Pair splitWithNewBackReferenceLengthOf(int);
    Code:
       0: new           #2                  // class io/dekorate/deps/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair
       3: dup
       4: invokespecial #158                // Method "<init>":()V
       7: astore_2
       8: aload_2
       9: getfield      #33                 // Field literals:Ljava/util/Deque;
      12: aload_0
      13: getfield      #33                 // Field literals:Ljava/util/Deque;
      16: invokeinterface #162,  2          // InterfaceMethod java/util/Deque.addAll:(Ljava/util/Collection;)Z
      21: pop
      22: aload_2
      23: aload_0
      24: getfield      #83                 // Field brOffset:I
      27: putfield      #83                 // Field brOffset:I
      30: aload_2
      31: iload_1
      32: putfield      #86                 // Field brLength:I
      35: aload_2
      36: areturn

  static boolean access$300(io.dekorate.deps.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream$Pair);
    Code:
       0: aload_0
       1: invokespecial #168                // Method hasBeenWritten:()Z
       4: ireturn

  static void access$400(io.dekorate.deps.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream$Pair, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #151                // Method prependLiteral:([B)V
       5: return

  static int access$500(io.dekorate.deps.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream$Pair);
    Code:
       0: aload_0
       1: invokespecial #176                // Method backReferenceLength:()I
       4: ireturn

  static io.dekorate.deps.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream$Pair access$600(io.dekorate.deps.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream$Pair, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #180                // Method splitWithNewBackReferenceLengthOf:(I)Lio/dekorate/deps/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;
       5: areturn

  static void access$700(io.dekorate.deps.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream$Pair, io.dekorate.deps.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream$Pair);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #184                // Method prependTo:(Lio/dekorate/deps/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;)V
       5: return
}
