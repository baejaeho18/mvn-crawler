Compiled from "ImageChangeCauseFluent.java"
public interface io.dekorate.deps.openshift.api.model.ImageChangeCauseFluent<A extends io.dekorate.deps.openshift.api.model.ImageChangeCauseFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract io.dekorate.deps.kubernetes.api.model.ObjectReference getFromRef();

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectReference buildFromRef();

  public abstract A withFromRef(io.dekorate.deps.kubernetes.api.model.ObjectReference);

  public abstract java.lang.Boolean hasFromRef();

  public abstract io.dekorate.deps.openshift.api.model.ImageChangeCauseFluent$FromRefNested<A> withNewFromRef();

  public abstract io.dekorate.deps.openshift.api.model.ImageChangeCauseFluent$FromRefNested<A> withNewFromRefLike(io.dekorate.deps.kubernetes.api.model.ObjectReference);

  public abstract io.dekorate.deps.openshift.api.model.ImageChangeCauseFluent$FromRefNested<A> editFromRef();

  public abstract io.dekorate.deps.openshift.api.model.ImageChangeCauseFluent$FromRefNested<A> editOrNewFromRef();

  public abstract io.dekorate.deps.openshift.api.model.ImageChangeCauseFluent$FromRefNested<A> editOrNewFromRefLike(io.dekorate.deps.kubernetes.api.model.ObjectReference);

  public abstract java.lang.String getImageID();

  public abstract A withImageID(java.lang.String);

  public abstract java.lang.Boolean hasImageID();

  public abstract A withNewImageID(java.lang.String);

  public abstract A withNewImageID(java.lang.StringBuilder);

  public abstract A withNewImageID(java.lang.StringBuffer);
}
