Compiled from "CinderPersistentVolumeSourceFluentImpl.java"
public class io.dekorate.deps.kubernetes.api.model.CinderPersistentVolumeSourceFluentImpl<A extends io.dekorate.deps.kubernetes.api.model.CinderPersistentVolumeSourceFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.BaseFluent<A> implements io.dekorate.deps.kubernetes.api.model.CinderPersistentVolumeSourceFluent<A> {
  private java.lang.String fsType;

  private java.lang.Boolean readOnly;

  private io.dekorate.deps.kubernetes.api.model.SecretReferenceBuilder secretRef;

  private java.lang.String volumeID;

  public io.dekorate.deps.kubernetes.api.model.CinderPersistentVolumeSourceFluentImpl();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method io/dekorate/deps/kubernetes/api/builder/BaseFluent."<init>":()V
       4: return

  public io.dekorate.deps.kubernetes.api.model.CinderPersistentVolumeSourceFluentImpl(io.dekorate.deps.kubernetes.api.model.CinderPersistentVolumeSource);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method io/dekorate/deps/kubernetes/api/builder/BaseFluent."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #35                 // Method io/dekorate/deps/kubernetes/api/model/CinderPersistentVolumeSource.getFsType:()Ljava/lang/String;
       9: invokevirtual #39                 // Method withFsType:(Ljava/lang/String;)Lio/dekorate/deps/kubernetes/api/model/CinderPersistentVolumeSourceFluent;
      12: pop
      13: aload_0
      14: aload_1
      15: invokevirtual #43                 // Method io/dekorate/deps/kubernetes/api/model/CinderPersistentVolumeSource.getReadOnly:()Ljava/lang/Boolean;
      18: invokevirtual #47                 // Method withReadOnly:(Ljava/lang/Boolean;)Lio/dekorate/deps/kubernetes/api/model/CinderPersistentVolumeSourceFluent;
      21: pop
      22: aload_0
      23: aload_1
      24: invokevirtual #51                 // Method io/dekorate/deps/kubernetes/api/model/CinderPersistentVolumeSource.getSecretRef:()Lio/dekorate/deps/kubernetes/api/model/SecretReference;
      27: invokevirtual #55                 // Method withSecretRef:(Lio/dekorate/deps/kubernetes/api/model/SecretReference;)Lio/dekorate/deps/kubernetes/api/model/CinderPersistentVolumeSourceFluent;
      30: pop
      31: aload_0
      32: aload_1
      33: invokevirtual #58                 // Method io/dekorate/deps/kubernetes/api/model/CinderPersistentVolumeSource.getVolumeID:()Ljava/lang/String;
      36: invokevirtual #61                 // Method withVolumeID:(Ljava/lang/String;)Lio/dekorate/deps/kubernetes/api/model/CinderPersistentVolumeSourceFluent;
      39: pop
      40: return

  public java.lang.String getFsType();
    Code:
       0: aload_0
       1: getfield      #65                 // Field fsType:Ljava/lang/String;
       4: areturn

  public A withFsType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #65                 // Field fsType:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasFsType();
    Code:
       0: aload_0
       1: getfield      #65                 // Field fsType:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #73                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withNewFsType(java.lang.String);
    Code:
       0: aload_0
       1: new           #76                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #79                 // Method java/lang/String."<init>":(Ljava/lang/String;)V
       9: invokevirtual #39                 // Method withFsType:(Ljava/lang/String;)Lio/dekorate/deps/kubernetes/api/model/CinderPersistentVolumeSourceFluent;
      12: areturn

  public A withNewFsType(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: new           #76                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #85                 // Method java/lang/String."<init>":(Ljava/lang/StringBuilder;)V
       9: invokevirtual #39                 // Method withFsType:(Ljava/lang/String;)Lio/dekorate/deps/kubernetes/api/model/CinderPersistentVolumeSourceFluent;
      12: areturn

  public A withNewFsType(java.lang.StringBuffer);
    Code:
       0: aload_0
       1: new           #76                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #91                 // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
       9: invokevirtual #39                 // Method withFsType:(Ljava/lang/String;)Lio/dekorate/deps/kubernetes/api/model/CinderPersistentVolumeSourceFluent;
      12: areturn

  public java.lang.Boolean isReadOnly();
    Code:
       0: aload_0
       1: getfield      #95                 // Field readOnly:Ljava/lang/Boolean;
       4: areturn

  public A withReadOnly(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #95                 // Field readOnly:Ljava/lang/Boolean;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasReadOnly();
    Code:
       0: aload_0
       1: getfield      #95                 // Field readOnly:Ljava/lang/Boolean;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #73                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withNewReadOnly(java.lang.String);
    Code:
       0: aload_0
       1: new           #69                 // class java/lang/Boolean
       4: dup
       5: aload_1
       6: invokespecial #99                 // Method java/lang/Boolean."<init>":(Ljava/lang/String;)V
       9: invokevirtual #47                 // Method withReadOnly:(Ljava/lang/Boolean;)Lio/dekorate/deps/kubernetes/api/model/CinderPersistentVolumeSourceFluent;
      12: areturn

  public A withNewReadOnly(boolean);
    Code:
       0: aload_0
       1: new           #69                 // class java/lang/Boolean
       4: dup
       5: iload_1
       6: invokespecial #104                // Method java/lang/Boolean."<init>":(Z)V
       9: invokevirtual #47                 // Method withReadOnly:(Ljava/lang/Boolean;)Lio/dekorate/deps/kubernetes/api/model/CinderPersistentVolumeSourceFluent;
      12: areturn

  public io.dekorate.deps.kubernetes.api.model.SecretReference getSecretRef();
    Code:
       0: aload_0
       1: getfield      #108                // Field secretRef:Lio/dekorate/deps/kubernetes/api/model/SecretReferenceBuilder;
       4: ifnull        17
       7: aload_0
       8: getfield      #108                // Field secretRef:Lio/dekorate/deps/kubernetes/api/model/SecretReferenceBuilder;
      11: invokevirtual #113                // Method io/dekorate/deps/kubernetes/api/model/SecretReferenceBuilder.build:()Lio/dekorate/deps/kubernetes/api/model/SecretReference;
      14: goto          18
      17: aconst_null
      18: areturn

  public io.dekorate.deps.kubernetes.api.model.SecretReference buildSecretRef();
    Code:
       0: aload_0
       1: getfield      #108                // Field secretRef:Lio/dekorate/deps/kubernetes/api/model/SecretReferenceBuilder;
       4: ifnull        17
       7: aload_0
       8: getfield      #108                // Field secretRef:Lio/dekorate/deps/kubernetes/api/model/SecretReferenceBuilder;
      11: invokevirtual #113                // Method io/dekorate/deps/kubernetes/api/model/SecretReferenceBuilder.build:()Lio/dekorate/deps/kubernetes/api/model/SecretReference;
      14: goto          18
      17: aconst_null
      18: areturn

  public A withSecretRef(io.dekorate.deps.kubernetes.api.model.SecretReference);
    Code:
       0: aload_0
       1: getfield      #121                // Field _visitables:Lio/dekorate/deps/kubernetes/api/builder/VisitableMap;
       4: ldc           #122                // String secretRef
       6: invokevirtual #128                // Method io/dekorate/deps/kubernetes/api/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
       9: aload_0
      10: getfield      #108                // Field secretRef:Lio/dekorate/deps/kubernetes/api/model/SecretReferenceBuilder;
      13: invokeinterface #134,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      18: pop
      19: aload_1
      20: ifnull        54
      23: aload_0
      24: new           #110                // class io/dekorate/deps/kubernetes/api/model/SecretReferenceBuilder
      27: dup
      28: aload_1
      29: invokespecial #137                // Method io/dekorate/deps/kubernetes/api/model/SecretReferenceBuilder."<init>":(Lio/dekorate/deps/kubernetes/api/model/SecretReference;)V
      32: putfield      #108                // Field secretRef:Lio/dekorate/deps/kubernetes/api/model/SecretReferenceBuilder;
      35: aload_0
      36: getfield      #121                // Field _visitables:Lio/dekorate/deps/kubernetes/api/builder/VisitableMap;
      39: ldc           #122                // String secretRef
      41: invokevirtual #128                // Method io/dekorate/deps/kubernetes/api/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      44: aload_0
      45: getfield      #108                // Field secretRef:Lio/dekorate/deps/kubernetes/api/model/SecretReferenceBuilder;
      48: invokeinterface #140,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      53: pop
      54: aload_0
      55: areturn

  public java.lang.Boolean hasSecretRef();
    Code:
       0: aload_0
       1: getfield      #108                // Field secretRef:Lio/dekorate/deps/kubernetes/api/model/SecretReferenceBuilder;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #73                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withNewSecretRef(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: new           #115                // class io/dekorate/deps/kubernetes/api/model/SecretReference
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #148                // Method io/dekorate/deps/kubernetes/api/model/SecretReference."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      10: invokevirtual #55                 // Method withSecretRef:(Lio/dekorate/deps/kubernetes/api/model/SecretReference;)Lio/dekorate/deps/kubernetes/api/model/CinderPersistentVolumeSourceFluent;
      13: areturn

  public io.dekorate.deps.kubernetes.api.model.CinderPersistentVolumeSourceFluent$SecretRefNested<A> withNewSecretRef();
    Code:
       0: new           #10                 // class io/dekorate/deps/kubernetes/api/model/CinderPersistentVolumeSourceFluentImpl$SecretRefNestedImpl
       3: dup
       4: aload_0
       5: invokespecial #155                // Method io/dekorate/deps/kubernetes/api/model/CinderPersistentVolumeSourceFluentImpl$SecretRefNestedImpl."<init>":(Lio/dekorate/deps/kubernetes/api/model/CinderPersistentVolumeSourceFluentImpl;)V
       8: areturn

  public io.dekorate.deps.kubernetes.api.model.CinderPersistentVolumeSourceFluent$SecretRefNested<A> withNewSecretRefLike(io.dekorate.deps.kubernetes.api.model.SecretReference);
    Code:
       0: new           #10                 // class io/dekorate/deps/kubernetes/api/model/CinderPersistentVolumeSourceFluentImpl$SecretRefNestedImpl
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #161                // Method io/dekorate/deps/kubernetes/api/model/CinderPersistentVolumeSourceFluentImpl$SecretRefNestedImpl."<init>":(Lio/dekorate/deps/kubernetes/api/model/CinderPersistentVolumeSourceFluentImpl;Lio/dekorate/deps/kubernetes/api/model/SecretReference;)V
       9: areturn

  public io.dekorate.deps.kubernetes.api.model.CinderPersistentVolumeSourceFluent$SecretRefNested<A> editSecretRef();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #164                // Method getSecretRef:()Lio/dekorate/deps/kubernetes/api/model/SecretReference;
       5: invokevirtual #166                // Method withNewSecretRefLike:(Lio/dekorate/deps/kubernetes/api/model/SecretReference;)Lio/dekorate/deps/kubernetes/api/model/CinderPersistentVolumeSourceFluent$SecretRefNested;
       8: areturn

  public io.dekorate.deps.kubernetes.api.model.CinderPersistentVolumeSourceFluent$SecretRefNested<A> editOrNewSecretRef();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #164                // Method getSecretRef:()Lio/dekorate/deps/kubernetes/api/model/SecretReference;
       5: ifnull        15
       8: aload_0
       9: invokevirtual #164                // Method getSecretRef:()Lio/dekorate/deps/kubernetes/api/model/SecretReference;
      12: goto          25
      15: new           #110                // class io/dekorate/deps/kubernetes/api/model/SecretReferenceBuilder
      18: dup
      19: invokespecial #168                // Method io/dekorate/deps/kubernetes/api/model/SecretReferenceBuilder."<init>":()V
      22: invokevirtual #113                // Method io/dekorate/deps/kubernetes/api/model/SecretReferenceBuilder.build:()Lio/dekorate/deps/kubernetes/api/model/SecretReference;
      25: invokevirtual #166                // Method withNewSecretRefLike:(Lio/dekorate/deps/kubernetes/api/model/SecretReference;)Lio/dekorate/deps/kubernetes/api/model/CinderPersistentVolumeSourceFluent$SecretRefNested;
      28: areturn

  public io.dekorate.deps.kubernetes.api.model.CinderPersistentVolumeSourceFluent$SecretRefNested<A> editOrNewSecretRefLike(io.dekorate.deps.kubernetes.api.model.SecretReference);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #164                // Method getSecretRef:()Lio/dekorate/deps/kubernetes/api/model/SecretReference;
       5: ifnull        15
       8: aload_0
       9: invokevirtual #164                // Method getSecretRef:()Lio/dekorate/deps/kubernetes/api/model/SecretReference;
      12: goto          16
      15: aload_1
      16: invokevirtual #166                // Method withNewSecretRefLike:(Lio/dekorate/deps/kubernetes/api/model/SecretReference;)Lio/dekorate/deps/kubernetes/api/model/CinderPersistentVolumeSourceFluent$SecretRefNested;
      19: areturn

  public java.lang.String getVolumeID();
    Code:
       0: aload_0
       1: getfield      #171                // Field volumeID:Ljava/lang/String;
       4: areturn

  public A withVolumeID(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #171                // Field volumeID:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasVolumeID();
    Code:
       0: aload_0
       1: getfield      #171                // Field volumeID:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #73                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withNewVolumeID(java.lang.String);
    Code:
       0: aload_0
       1: new           #76                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #79                 // Method java/lang/String."<init>":(Ljava/lang/String;)V
       9: invokevirtual #61                 // Method withVolumeID:(Ljava/lang/String;)Lio/dekorate/deps/kubernetes/api/model/CinderPersistentVolumeSourceFluent;
      12: areturn

  public A withNewVolumeID(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: new           #76                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #85                 // Method java/lang/String."<init>":(Ljava/lang/StringBuilder;)V
       9: invokevirtual #61                 // Method withVolumeID:(Ljava/lang/String;)Lio/dekorate/deps/kubernetes/api/model/CinderPersistentVolumeSourceFluent;
      12: areturn

  public A withNewVolumeID(java.lang.StringBuffer);
    Code:
       0: aload_0
       1: new           #76                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #91                 // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
       9: invokevirtual #61                 // Method withVolumeID:(Ljava/lang/String;)Lio/dekorate/deps/kubernetes/api/model/CinderPersistentVolumeSourceFluent;
      12: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #180                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #180                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #2                  // class io/dekorate/deps/kubernetes/api/model/CinderPersistentVolumeSourceFluentImpl
      28: astore_2
      29: aload_0
      30: getfield      #65                 // Field fsType:Ljava/lang/String;
      33: ifnull        53
      36: aload_0
      37: getfield      #65                 // Field fsType:Ljava/lang/String;
      40: aload_2
      41: getfield      #65                 // Field fsType:Ljava/lang/String;
      44: invokevirtual #182                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      47: ifne          62
      50: goto          60
      53: aload_2
      54: getfield      #65                 // Field fsType:Ljava/lang/String;
      57: ifnull        62
      60: iconst_0
      61: ireturn
      62: aload_0
      63: getfield      #95                 // Field readOnly:Ljava/lang/Boolean;
      66: ifnull        86
      69: aload_0
      70: getfield      #95                 // Field readOnly:Ljava/lang/Boolean;
      73: aload_2
      74: getfield      #95                 // Field readOnly:Ljava/lang/Boolean;
      77: invokevirtual #183                // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      80: ifne          95
      83: goto          93
      86: aload_2
      87: getfield      #95                 // Field readOnly:Ljava/lang/Boolean;
      90: ifnull        95
      93: iconst_0
      94: ireturn
      95: aload_0
      96: getfield      #108                // Field secretRef:Lio/dekorate/deps/kubernetes/api/model/SecretReferenceBuilder;
      99: ifnull        119
     102: aload_0
     103: getfield      #108                // Field secretRef:Lio/dekorate/deps/kubernetes/api/model/SecretReferenceBuilder;
     106: aload_2
     107: getfield      #108                // Field secretRef:Lio/dekorate/deps/kubernetes/api/model/SecretReferenceBuilder;
     110: invokevirtual #184                // Method io/dekorate/deps/kubernetes/api/model/SecretReferenceBuilder.equals:(Ljava/lang/Object;)Z
     113: ifne          128
     116: goto          126
     119: aload_2
     120: getfield      #108                // Field secretRef:Lio/dekorate/deps/kubernetes/api/model/SecretReferenceBuilder;
     123: ifnull        128
     126: iconst_0
     127: ireturn
     128: aload_0
     129: getfield      #171                // Field volumeID:Ljava/lang/String;
     132: ifnull        152
     135: aload_0
     136: getfield      #171                // Field volumeID:Ljava/lang/String;
     139: aload_2
     140: getfield      #171                // Field volumeID:Ljava/lang/String;
     143: invokevirtual #182                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     146: ifne          161
     149: goto          159
     152: aload_2
     153: getfield      #171                // Field volumeID:Ljava/lang/String;
     156: ifnull        161
     159: iconst_0
     160: ireturn
     161: iconst_1
     162: ireturn
}
