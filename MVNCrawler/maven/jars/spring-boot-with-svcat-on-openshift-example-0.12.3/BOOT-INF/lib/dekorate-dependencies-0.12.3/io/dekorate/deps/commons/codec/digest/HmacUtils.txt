Compiled from "HmacUtils.java"
public final class io.dekorate.deps.commons.codec.digest.HmacUtils {
  private static final int STREAM_BUFFER_LENGTH;

  public io.dekorate.deps.commons.codec.digest.HmacUtils();
    Code:
       0: aload_0
       1: invokespecial #12                 // Method java/lang/Object."<init>":()V
       4: return

  public static javax.crypto.Mac getHmacMd5(byte[]);
    Code:
       0: getstatic     #22                 // Field io/dekorate/deps/commons/codec/digest/HmacAlgorithms.HMAC_MD5:Lio/dekorate/deps/commons/codec/digest/HmacAlgorithms;
       3: aload_0
       4: invokestatic  #26                 // Method getInitializedMac:(Lio/dekorate/deps/commons/codec/digest/HmacAlgorithms;[B)Ljavax/crypto/Mac;
       7: areturn

  public static javax.crypto.Mac getHmacSha1(byte[]);
    Code:
       0: getstatic     #32                 // Field io/dekorate/deps/commons/codec/digest/HmacAlgorithms.HMAC_SHA_1:Lio/dekorate/deps/commons/codec/digest/HmacAlgorithms;
       3: aload_0
       4: invokestatic  #26                 // Method getInitializedMac:(Lio/dekorate/deps/commons/codec/digest/HmacAlgorithms;[B)Ljavax/crypto/Mac;
       7: areturn

  public static javax.crypto.Mac getHmacSha256(byte[]);
    Code:
       0: getstatic     #36                 // Field io/dekorate/deps/commons/codec/digest/HmacAlgorithms.HMAC_SHA_256:Lio/dekorate/deps/commons/codec/digest/HmacAlgorithms;
       3: aload_0
       4: invokestatic  #26                 // Method getInitializedMac:(Lio/dekorate/deps/commons/codec/digest/HmacAlgorithms;[B)Ljavax/crypto/Mac;
       7: areturn

  public static javax.crypto.Mac getHmacSha384(byte[]);
    Code:
       0: getstatic     #40                 // Field io/dekorate/deps/commons/codec/digest/HmacAlgorithms.HMAC_SHA_384:Lio/dekorate/deps/commons/codec/digest/HmacAlgorithms;
       3: aload_0
       4: invokestatic  #26                 // Method getInitializedMac:(Lio/dekorate/deps/commons/codec/digest/HmacAlgorithms;[B)Ljavax/crypto/Mac;
       7: areturn

  public static javax.crypto.Mac getHmacSha512(byte[]);
    Code:
       0: getstatic     #44                 // Field io/dekorate/deps/commons/codec/digest/HmacAlgorithms.HMAC_SHA_512:Lio/dekorate/deps/commons/codec/digest/HmacAlgorithms;
       3: aload_0
       4: invokestatic  #26                 // Method getInitializedMac:(Lio/dekorate/deps/commons/codec/digest/HmacAlgorithms;[B)Ljavax/crypto/Mac;
       7: areturn

  public static javax.crypto.Mac getInitializedMac(io.dekorate.deps.commons.codec.digest.HmacAlgorithms, byte[]);
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method io/dekorate/deps/commons/codec/digest/HmacAlgorithms.toString:()Ljava/lang/String;
       4: aload_1
       5: invokestatic  #51                 // Method getInitializedMac:(Ljava/lang/String;[B)Ljavax/crypto/Mac;
       8: areturn

  public static javax.crypto.Mac getInitializedMac(java.lang.String, byte[]);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #58                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #60                 // String Null key
      10: invokespecial #63                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: new           #65                 // class javax/crypto/spec/SecretKeySpec
      17: dup
      18: aload_1
      19: aload_0
      20: invokespecial #68                 // Method javax/crypto/spec/SecretKeySpec."<init>":([BLjava/lang/String;)V
      23: astore_2
      24: aload_0
      25: invokestatic  #74                 // Method javax/crypto/Mac.getInstance:(Ljava/lang/String;)Ljavax/crypto/Mac;
      28: astore_3
      29: aload_3
      30: aload_2
      31: invokevirtual #78                 // Method javax/crypto/Mac.init:(Ljava/security/Key;)V
      34: aload_3
      35: areturn
      36: astore_2
      37: new           #58                 // class java/lang/IllegalArgumentException
      40: dup
      41: aload_2
      42: invokespecial #81                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
      45: athrow
      46: astore_2
      47: new           #58                 // class java/lang/IllegalArgumentException
      50: dup
      51: aload_2
      52: invokespecial #81                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
      55: athrow
    Exception table:
       from    to  target type
          14    35    36   Class java/security/NoSuchAlgorithmException
          14    35    46   Class java/security/InvalidKeyException

  public static byte[] hmacMd5(byte[], byte[]);
    Code:
       0: aload_0
       1: invokestatic  #95                 // Method getHmacMd5:([B)Ljavax/crypto/Mac;
       4: aload_1
       5: invokevirtual #99                 // Method javax/crypto/Mac.doFinal:([B)[B
       8: areturn
       9: astore_2
      10: new           #58                 // class java/lang/IllegalArgumentException
      13: dup
      14: aload_2
      15: invokespecial #81                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
      18: athrow
    Exception table:
       from    to  target type
           0     8     9   Class java/lang/IllegalStateException

  public static byte[] hmacMd5(byte[], java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #95                 // Method getHmacMd5:([B)Ljavax/crypto/Mac;
       4: aload_1
       5: invokestatic  #108                // Method updateHmac:(Ljavax/crypto/Mac;Ljava/io/InputStream;)Ljavax/crypto/Mac;
       8: invokevirtual #111                // Method javax/crypto/Mac.doFinal:()[B
      11: areturn

  public static byte[] hmacMd5(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #119                // Method io/dekorate/deps/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B
       4: aload_1
       5: invokestatic  #119                // Method io/dekorate/deps/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B
       8: invokestatic  #121                // Method hmacMd5:([B[B)[B
      11: areturn

  public static java.lang.String hmacMd5Hex(byte[], byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #121                // Method hmacMd5:([B[B)[B
       5: invokestatic  #129                // Method io/dekorate/deps/commons/codec/binary/Hex.encodeHexString:([B)Ljava/lang/String;
       8: areturn

  public static java.lang.String hmacMd5Hex(byte[], java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #132                // Method hmacMd5:([BLjava/io/InputStream;)[B
       5: invokestatic  #129                // Method io/dekorate/deps/commons/codec/binary/Hex.encodeHexString:([B)Ljava/lang/String;
       8: areturn

  public static java.lang.String hmacMd5Hex(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #135                // Method hmacMd5:(Ljava/lang/String;Ljava/lang/String;)[B
       5: invokestatic  #129                // Method io/dekorate/deps/commons/codec/binary/Hex.encodeHexString:([B)Ljava/lang/String;
       8: areturn

  public static byte[] hmacSha1(byte[], byte[]);
    Code:
       0: aload_0
       1: invokestatic  #138                // Method getHmacSha1:([B)Ljavax/crypto/Mac;
       4: aload_1
       5: invokevirtual #99                 // Method javax/crypto/Mac.doFinal:([B)[B
       8: areturn
       9: astore_2
      10: new           #58                 // class java/lang/IllegalArgumentException
      13: dup
      14: aload_2
      15: invokespecial #81                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
      18: athrow
    Exception table:
       from    to  target type
           0     8     9   Class java/lang/IllegalStateException

  public static byte[] hmacSha1(byte[], java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #138                // Method getHmacSha1:([B)Ljavax/crypto/Mac;
       4: aload_1
       5: invokestatic  #108                // Method updateHmac:(Ljavax/crypto/Mac;Ljava/io/InputStream;)Ljavax/crypto/Mac;
       8: invokevirtual #111                // Method javax/crypto/Mac.doFinal:()[B
      11: areturn

  public static byte[] hmacSha1(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #119                // Method io/dekorate/deps/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B
       4: aload_1
       5: invokestatic  #119                // Method io/dekorate/deps/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B
       8: invokestatic  #140                // Method hmacSha1:([B[B)[B
      11: areturn

  public static java.lang.String hmacSha1Hex(byte[], byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #140                // Method hmacSha1:([B[B)[B
       5: invokestatic  #129                // Method io/dekorate/deps/commons/codec/binary/Hex.encodeHexString:([B)Ljava/lang/String;
       8: areturn

  public static java.lang.String hmacSha1Hex(byte[], java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #143                // Method hmacSha1:([BLjava/io/InputStream;)[B
       5: invokestatic  #129                // Method io/dekorate/deps/commons/codec/binary/Hex.encodeHexString:([B)Ljava/lang/String;
       8: areturn

  public static java.lang.String hmacSha1Hex(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #145                // Method hmacSha1:(Ljava/lang/String;Ljava/lang/String;)[B
       5: invokestatic  #129                // Method io/dekorate/deps/commons/codec/binary/Hex.encodeHexString:([B)Ljava/lang/String;
       8: areturn

  public static byte[] hmacSha256(byte[], byte[]);
    Code:
       0: aload_0
       1: invokestatic  #148                // Method getHmacSha256:([B)Ljavax/crypto/Mac;
       4: aload_1
       5: invokevirtual #99                 // Method javax/crypto/Mac.doFinal:([B)[B
       8: areturn
       9: astore_2
      10: new           #58                 // class java/lang/IllegalArgumentException
      13: dup
      14: aload_2
      15: invokespecial #81                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
      18: athrow
    Exception table:
       from    to  target type
           0     8     9   Class java/lang/IllegalStateException

  public static byte[] hmacSha256(byte[], java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #148                // Method getHmacSha256:([B)Ljavax/crypto/Mac;
       4: aload_1
       5: invokestatic  #108                // Method updateHmac:(Ljavax/crypto/Mac;Ljava/io/InputStream;)Ljavax/crypto/Mac;
       8: invokevirtual #111                // Method javax/crypto/Mac.doFinal:()[B
      11: areturn

  public static byte[] hmacSha256(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #119                // Method io/dekorate/deps/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B
       4: aload_1
       5: invokestatic  #119                // Method io/dekorate/deps/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B
       8: invokestatic  #150                // Method hmacSha256:([B[B)[B
      11: areturn

  public static java.lang.String hmacSha256Hex(byte[], byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #150                // Method hmacSha256:([B[B)[B
       5: invokestatic  #129                // Method io/dekorate/deps/commons/codec/binary/Hex.encodeHexString:([B)Ljava/lang/String;
       8: areturn

  public static java.lang.String hmacSha256Hex(byte[], java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #153                // Method hmacSha256:([BLjava/io/InputStream;)[B
       5: invokestatic  #129                // Method io/dekorate/deps/commons/codec/binary/Hex.encodeHexString:([B)Ljava/lang/String;
       8: areturn

  public static java.lang.String hmacSha256Hex(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #155                // Method hmacSha256:(Ljava/lang/String;Ljava/lang/String;)[B
       5: invokestatic  #129                // Method io/dekorate/deps/commons/codec/binary/Hex.encodeHexString:([B)Ljava/lang/String;
       8: areturn

  public static byte[] hmacSha384(byte[], byte[]);
    Code:
       0: aload_0
       1: invokestatic  #158                // Method getHmacSha384:([B)Ljavax/crypto/Mac;
       4: aload_1
       5: invokevirtual #99                 // Method javax/crypto/Mac.doFinal:([B)[B
       8: areturn
       9: astore_2
      10: new           #58                 // class java/lang/IllegalArgumentException
      13: dup
      14: aload_2
      15: invokespecial #81                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
      18: athrow
    Exception table:
       from    to  target type
           0     8     9   Class java/lang/IllegalStateException

  public static byte[] hmacSha384(byte[], java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #158                // Method getHmacSha384:([B)Ljavax/crypto/Mac;
       4: aload_1
       5: invokestatic  #108                // Method updateHmac:(Ljavax/crypto/Mac;Ljava/io/InputStream;)Ljavax/crypto/Mac;
       8: invokevirtual #111                // Method javax/crypto/Mac.doFinal:()[B
      11: areturn

  public static byte[] hmacSha384(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #119                // Method io/dekorate/deps/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B
       4: aload_1
       5: invokestatic  #119                // Method io/dekorate/deps/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B
       8: invokestatic  #160                // Method hmacSha384:([B[B)[B
      11: areturn

  public static java.lang.String hmacSha384Hex(byte[], byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #160                // Method hmacSha384:([B[B)[B
       5: invokestatic  #129                // Method io/dekorate/deps/commons/codec/binary/Hex.encodeHexString:([B)Ljava/lang/String;
       8: areturn

  public static java.lang.String hmacSha384Hex(byte[], java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #163                // Method hmacSha384:([BLjava/io/InputStream;)[B
       5: invokestatic  #129                // Method io/dekorate/deps/commons/codec/binary/Hex.encodeHexString:([B)Ljava/lang/String;
       8: areturn

  public static java.lang.String hmacSha384Hex(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #165                // Method hmacSha384:(Ljava/lang/String;Ljava/lang/String;)[B
       5: invokestatic  #129                // Method io/dekorate/deps/commons/codec/binary/Hex.encodeHexString:([B)Ljava/lang/String;
       8: areturn

  public static byte[] hmacSha512(byte[], byte[]);
    Code:
       0: aload_0
       1: invokestatic  #168                // Method getHmacSha512:([B)Ljavax/crypto/Mac;
       4: aload_1
       5: invokevirtual #99                 // Method javax/crypto/Mac.doFinal:([B)[B
       8: areturn
       9: astore_2
      10: new           #58                 // class java/lang/IllegalArgumentException
      13: dup
      14: aload_2
      15: invokespecial #81                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
      18: athrow
    Exception table:
       from    to  target type
           0     8     9   Class java/lang/IllegalStateException

  public static byte[] hmacSha512(byte[], java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #168                // Method getHmacSha512:([B)Ljavax/crypto/Mac;
       4: aload_1
       5: invokestatic  #108                // Method updateHmac:(Ljavax/crypto/Mac;Ljava/io/InputStream;)Ljavax/crypto/Mac;
       8: invokevirtual #111                // Method javax/crypto/Mac.doFinal:()[B
      11: areturn

  public static byte[] hmacSha512(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #119                // Method io/dekorate/deps/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B
       4: aload_1
       5: invokestatic  #119                // Method io/dekorate/deps/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B
       8: invokestatic  #170                // Method hmacSha512:([B[B)[B
      11: areturn

  public static java.lang.String hmacSha512Hex(byte[], byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #170                // Method hmacSha512:([B[B)[B
       5: invokestatic  #129                // Method io/dekorate/deps/commons/codec/binary/Hex.encodeHexString:([B)Ljava/lang/String;
       8: areturn

  public static java.lang.String hmacSha512Hex(byte[], java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #173                // Method hmacSha512:([BLjava/io/InputStream;)[B
       5: invokestatic  #129                // Method io/dekorate/deps/commons/codec/binary/Hex.encodeHexString:([B)Ljava/lang/String;
       8: areturn

  public static java.lang.String hmacSha512Hex(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #175                // Method hmacSha512:(Ljava/lang/String;Ljava/lang/String;)[B
       5: invokestatic  #129                // Method io/dekorate/deps/commons/codec/binary/Hex.encodeHexString:([B)Ljava/lang/String;
       8: areturn

  public static javax.crypto.Mac updateHmac(javax.crypto.Mac, byte[]);
    Code:
       0: aload_0
       1: invokevirtual #179                // Method javax/crypto/Mac.reset:()V
       4: aload_0
       5: aload_1
       6: invokevirtual #183                // Method javax/crypto/Mac.update:([B)V
       9: aload_0
      10: areturn

  public static javax.crypto.Mac updateHmac(javax.crypto.Mac, java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #179                // Method javax/crypto/Mac.reset:()V
       4: sipush        1024
       7: newarray       byte
       9: astore_2
      10: aload_1
      11: aload_2
      12: iconst_0
      13: sipush        1024
      16: invokevirtual #189                // Method java/io/InputStream.read:([BII)I
      19: istore_3
      20: iload_3
      21: iconst_m1
      22: if_icmple     45
      25: aload_0
      26: aload_2
      27: iconst_0
      28: iload_3
      29: invokevirtual #193                // Method javax/crypto/Mac.update:([BII)V
      32: aload_1
      33: aload_2
      34: iconst_0
      35: sipush        1024
      38: invokevirtual #189                // Method java/io/InputStream.read:([BII)I
      41: istore_3
      42: goto          20
      45: aload_0
      46: areturn

  public static javax.crypto.Mac updateHmac(javax.crypto.Mac, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #179                // Method javax/crypto/Mac.reset:()V
       4: aload_0
       5: aload_1
       6: invokestatic  #119                // Method io/dekorate/deps/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B
       9: invokevirtual #183                // Method javax/crypto/Mac.update:([B)V
      12: aload_0
      13: areturn
}
