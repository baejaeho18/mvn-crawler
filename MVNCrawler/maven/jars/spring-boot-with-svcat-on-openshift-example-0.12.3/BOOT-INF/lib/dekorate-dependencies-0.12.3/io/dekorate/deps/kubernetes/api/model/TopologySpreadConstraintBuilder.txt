Compiled from "TopologySpreadConstraintBuilder.java"
public class io.dekorate.deps.kubernetes.api.model.TopologySpreadConstraintBuilder extends io.dekorate.deps.kubernetes.api.model.TopologySpreadConstraintFluentImpl<io.dekorate.deps.kubernetes.api.model.TopologySpreadConstraintBuilder> implements io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<io.dekorate.deps.kubernetes.api.model.TopologySpreadConstraint, io.dekorate.deps.kubernetes.api.model.TopologySpreadConstraintBuilder> {
  io.dekorate.deps.kubernetes.api.model.TopologySpreadConstraintFluent<?> fluent;

  java.lang.Boolean validationEnabled;

  public io.dekorate.deps.kubernetes.api.model.TopologySpreadConstraintBuilder();
    Code:
       0: aload_0
       1: iconst_1
       2: invokestatic  #21                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: invokespecial #24                 // Method "<init>":(Ljava/lang/Boolean;)V
       8: return

  public io.dekorate.deps.kubernetes.api.model.TopologySpreadConstraintBuilder(java.lang.Boolean);
    Code:
       0: aload_0
       1: new           #28                 // class io/dekorate/deps/kubernetes/api/model/TopologySpreadConstraint
       4: dup
       5: invokespecial #30                 // Method io/dekorate/deps/kubernetes/api/model/TopologySpreadConstraint."<init>":()V
       8: aload_1
       9: invokespecial #33                 // Method "<init>":(Lio/dekorate/deps/kubernetes/api/model/TopologySpreadConstraint;Ljava/lang/Boolean;)V
      12: return

  public io.dekorate.deps.kubernetes.api.model.TopologySpreadConstraintBuilder(io.dekorate.deps.kubernetes.api.model.TopologySpreadConstraintFluent<?>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokestatic  #21                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       6: invokespecial #38                 // Method "<init>":(Lio/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintFluent;Ljava/lang/Boolean;)V
       9: return

  public io.dekorate.deps.kubernetes.api.model.TopologySpreadConstraintBuilder(io.dekorate.deps.kubernetes.api.model.TopologySpreadConstraintFluent<?>, java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: new           #28                 // class io/dekorate/deps/kubernetes/api/model/TopologySpreadConstraint
       5: dup
       6: invokespecial #30                 // Method io/dekorate/deps/kubernetes/api/model/TopologySpreadConstraint."<init>":()V
       9: aload_2
      10: invokespecial #42                 // Method "<init>":(Lio/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintFluent;Lio/dekorate/deps/kubernetes/api/model/TopologySpreadConstraint;Ljava/lang/Boolean;)V
      13: return

  public io.dekorate.deps.kubernetes.api.model.TopologySpreadConstraintBuilder(io.dekorate.deps.kubernetes.api.model.TopologySpreadConstraintFluent<?>, io.dekorate.deps.kubernetes.api.model.TopologySpreadConstraint);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokestatic  #21                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokespecial #42                 // Method "<init>":(Lio/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintFluent;Lio/dekorate/deps/kubernetes/api/model/TopologySpreadConstraint;Ljava/lang/Boolean;)V
      10: return

  public io.dekorate.deps.kubernetes.api.model.TopologySpreadConstraintBuilder(io.dekorate.deps.kubernetes.api.model.TopologySpreadConstraintFluent<?>, io.dekorate.deps.kubernetes.api.model.TopologySpreadConstraint, java.lang.Boolean);
    Code:
       0: aload_0
       1: invokespecial #48                 // Method io/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintFluentImpl."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #50                 // Field fluent:Lio/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintFluent;
       9: aload_1
      10: aload_2
      11: invokevirtual #54                 // Method io/dekorate/deps/kubernetes/api/model/TopologySpreadConstraint.getLabelSelector:()Lio/dekorate/deps/kubernetes/api/model/LabelSelector;
      14: invokeinterface #60,  2           // InterfaceMethod io/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintFluent.withLabelSelector:(Lio/dekorate/deps/kubernetes/api/model/LabelSelector;)Lio/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintFluent;
      19: pop
      20: aload_1
      21: aload_2
      22: invokevirtual #64                 // Method io/dekorate/deps/kubernetes/api/model/TopologySpreadConstraint.getMaxSkew:()Ljava/lang/Integer;
      25: invokeinterface #68,  2           // InterfaceMethod io/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintFluent.withMaxSkew:(Ljava/lang/Integer;)Lio/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintFluent;
      30: pop
      31: aload_1
      32: aload_2
      33: invokevirtual #72                 // Method io/dekorate/deps/kubernetes/api/model/TopologySpreadConstraint.getTopologyKey:()Ljava/lang/String;
      36: invokeinterface #76,  2           // InterfaceMethod io/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintFluent.withTopologyKey:(Ljava/lang/String;)Lio/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintFluent;
      41: pop
      42: aload_1
      43: aload_2
      44: invokevirtual #79                 // Method io/dekorate/deps/kubernetes/api/model/TopologySpreadConstraint.getWhenUnsatisfiable:()Ljava/lang/String;
      47: invokeinterface #82,  2           // InterfaceMethod io/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintFluent.withWhenUnsatisfiable:(Ljava/lang/String;)Lio/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintFluent;
      52: pop
      53: aload_0
      54: aload_3
      55: putfield      #84                 // Field validationEnabled:Ljava/lang/Boolean;
      58: return

  public io.dekorate.deps.kubernetes.api.model.TopologySpreadConstraintBuilder(io.dekorate.deps.kubernetes.api.model.TopologySpreadConstraint);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokestatic  #21                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       6: invokespecial #33                 // Method "<init>":(Lio/dekorate/deps/kubernetes/api/model/TopologySpreadConstraint;Ljava/lang/Boolean;)V
       9: return

  public io.dekorate.deps.kubernetes.api.model.TopologySpreadConstraintBuilder(io.dekorate.deps.kubernetes.api.model.TopologySpreadConstraint, java.lang.Boolean);
    Code:
       0: aload_0
       1: invokespecial #48                 // Method io/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintFluentImpl."<init>":()V
       4: aload_0
       5: aload_0
       6: putfield      #50                 // Field fluent:Lio/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintFluent;
       9: aload_0
      10: aload_1
      11: invokevirtual #54                 // Method io/dekorate/deps/kubernetes/api/model/TopologySpreadConstraint.getLabelSelector:()Lio/dekorate/deps/kubernetes/api/model/LabelSelector;
      14: invokevirtual #86                 // Method withLabelSelector:(Lio/dekorate/deps/kubernetes/api/model/LabelSelector;)Lio/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintFluent;
      17: pop
      18: aload_0
      19: aload_1
      20: invokevirtual #64                 // Method io/dekorate/deps/kubernetes/api/model/TopologySpreadConstraint.getMaxSkew:()Ljava/lang/Integer;
      23: invokevirtual #87                 // Method withMaxSkew:(Ljava/lang/Integer;)Lio/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintFluent;
      26: pop
      27: aload_0
      28: aload_1
      29: invokevirtual #72                 // Method io/dekorate/deps/kubernetes/api/model/TopologySpreadConstraint.getTopologyKey:()Ljava/lang/String;
      32: invokevirtual #88                 // Method withTopologyKey:(Ljava/lang/String;)Lio/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintFluent;
      35: pop
      36: aload_0
      37: aload_1
      38: invokevirtual #79                 // Method io/dekorate/deps/kubernetes/api/model/TopologySpreadConstraint.getWhenUnsatisfiable:()Ljava/lang/String;
      41: invokevirtual #89                 // Method withWhenUnsatisfiable:(Ljava/lang/String;)Lio/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintFluent;
      44: pop
      45: aload_0
      46: aload_2
      47: putfield      #84                 // Field validationEnabled:Ljava/lang/Boolean;
      50: return

  public io.dekorate.deps.kubernetes.api.model.TopologySpreadConstraint build();
    Code:
       0: new           #28                 // class io/dekorate/deps/kubernetes/api/model/TopologySpreadConstraint
       3: dup
       4: aload_0
       5: getfield      #50                 // Field fluent:Lio/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintFluent;
       8: invokeinterface #92,  1           // InterfaceMethod io/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintFluent.getLabelSelector:()Lio/dekorate/deps/kubernetes/api/model/LabelSelector;
      13: aload_0
      14: getfield      #50                 // Field fluent:Lio/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintFluent;
      17: invokeinterface #93,  1           // InterfaceMethod io/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintFluent.getMaxSkew:()Ljava/lang/Integer;
      22: aload_0
      23: getfield      #50                 // Field fluent:Lio/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintFluent;
      26: invokeinterface #94,  1           // InterfaceMethod io/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintFluent.getTopologyKey:()Ljava/lang/String;
      31: aload_0
      32: getfield      #50                 // Field fluent:Lio/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintFluent;
      35: invokeinterface #95,  1           // InterfaceMethod io/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintFluent.getWhenUnsatisfiable:()Ljava/lang/String;
      40: invokespecial #98                 // Method io/dekorate/deps/kubernetes/api/model/TopologySpreadConstraint."<init>":(Lio/dekorate/deps/kubernetes/api/model/LabelSelector;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;)V
      43: astore_1
      44: aload_1
      45: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #107                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #107                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_0
      25: aload_1
      26: invokespecial #109                // Method io/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintFluentImpl.equals:(Ljava/lang/Object;)Z
      29: ifne          34
      32: iconst_0
      33: ireturn
      34: aload_1
      35: checkcast     #2                  // class io/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintBuilder
      38: astore_2
      39: aload_0
      40: getfield      #50                 // Field fluent:Lio/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintFluent;
      43: ifnull        71
      46: aload_0
      47: getfield      #50                 // Field fluent:Lio/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintFluent;
      50: aload_0
      51: if_acmpeq     71
      54: aload_0
      55: getfield      #50                 // Field fluent:Lio/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintFluent;
      58: aload_2
      59: getfield      #50                 // Field fluent:Lio/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintFluent;
      62: invokevirtual #110                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      65: ifne          88
      68: goto          86
      71: aload_2
      72: getfield      #50                 // Field fluent:Lio/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintFluent;
      75: ifnull        88
      78: aload_0
      79: getfield      #50                 // Field fluent:Lio/dekorate/deps/kubernetes/api/model/TopologySpreadConstraintFluent;
      82: aload_0
      83: if_acmpeq     88
      86: iconst_0
      87: ireturn
      88: aload_0
      89: getfield      #84                 // Field validationEnabled:Ljava/lang/Boolean;
      92: ifnull        112
      95: aload_0
      96: getfield      #84                 // Field validationEnabled:Ljava/lang/Boolean;
      99: aload_2
     100: getfield      #84                 // Field validationEnabled:Ljava/lang/Boolean;
     103: invokevirtual #111                // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
     106: ifne          121
     109: goto          119
     112: aload_2
     113: getfield      #84                 // Field validationEnabled:Ljava/lang/Boolean;
     116: ifnull        121
     119: iconst_0
     120: ireturn
     121: iconst_1
     122: ireturn

  public java.lang.Object build();
    Code:
       0: aload_0
       1: invokevirtual #117                // Method build:()Lio/dekorate/deps/kubernetes/api/model/TopologySpreadConstraint;
       4: areturn
}
