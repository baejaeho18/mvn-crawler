Compiled from "ChannelableStatusFluent.java"
public interface io.dekorate.deps.knative.duck.v1alpha1.ChannelableStatusFluent<A extends io.dekorate.deps.knative.duck.v1alpha1.ChannelableStatusFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract io.dekorate.deps.knative.duck.v1alpha1.Addressable getAddress();

  public abstract io.dekorate.deps.knative.duck.v1alpha1.Addressable buildAddress();

  public abstract A withAddress(io.dekorate.deps.knative.duck.v1alpha1.Addressable);

  public abstract java.lang.Boolean hasAddress();

  public abstract A withNewAddress(java.lang.String, java.lang.String);

  public abstract io.dekorate.deps.knative.duck.v1alpha1.ChannelableStatusFluent$AddressNested<A> withNewAddress();

  public abstract io.dekorate.deps.knative.duck.v1alpha1.ChannelableStatusFluent$AddressNested<A> withNewAddressLike(io.dekorate.deps.knative.duck.v1alpha1.Addressable);

  public abstract io.dekorate.deps.knative.duck.v1alpha1.ChannelableStatusFluent$AddressNested<A> editAddress();

  public abstract io.dekorate.deps.knative.duck.v1alpha1.ChannelableStatusFluent$AddressNested<A> editOrNewAddress();

  public abstract io.dekorate.deps.knative.duck.v1alpha1.ChannelableStatusFluent$AddressNested<A> editOrNewAddressLike(io.dekorate.deps.knative.duck.v1alpha1.Addressable);

  public abstract A addToConditions(int, io.dekorate.deps.knative.v1.Condition);

  public abstract A setToConditions(int, io.dekorate.deps.knative.v1.Condition);

  public abstract A addToConditions(io.dekorate.deps.knative.v1.Condition...);

  public abstract A addAllToConditions(java.util.Collection<io.dekorate.deps.knative.v1.Condition>);

  public abstract A removeFromConditions(io.dekorate.deps.knative.v1.Condition...);

  public abstract A removeAllFromConditions(java.util.Collection<io.dekorate.deps.knative.v1.Condition>);

  public abstract A removeMatchingFromConditions(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.knative.v1.ConditionBuilder>);

  public abstract java.util.List<io.dekorate.deps.knative.v1.Condition> getConditions();

  public abstract java.util.List<io.dekorate.deps.knative.v1.Condition> buildConditions();

  public abstract io.dekorate.deps.knative.v1.Condition buildCondition(int);

  public abstract io.dekorate.deps.knative.v1.Condition buildFirstCondition();

  public abstract io.dekorate.deps.knative.v1.Condition buildLastCondition();

  public abstract io.dekorate.deps.knative.v1.Condition buildMatchingCondition(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.knative.v1.ConditionBuilder>);

  public abstract java.lang.Boolean hasMatchingCondition(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.knative.v1.ConditionBuilder>);

  public abstract A withConditions(java.util.List<io.dekorate.deps.knative.v1.Condition>);

  public abstract A withConditions(io.dekorate.deps.knative.v1.Condition...);

  public abstract java.lang.Boolean hasConditions();

  public abstract io.dekorate.deps.knative.duck.v1alpha1.ChannelableStatusFluent$ConditionsNested<A> addNewCondition();

  public abstract io.dekorate.deps.knative.duck.v1alpha1.ChannelableStatusFluent$ConditionsNested<A> addNewConditionLike(io.dekorate.deps.knative.v1.Condition);

  public abstract io.dekorate.deps.knative.duck.v1alpha1.ChannelableStatusFluent$ConditionsNested<A> setNewConditionLike(int, io.dekorate.deps.knative.v1.Condition);

  public abstract io.dekorate.deps.knative.duck.v1alpha1.ChannelableStatusFluent$ConditionsNested<A> editCondition(int);

  public abstract io.dekorate.deps.knative.duck.v1alpha1.ChannelableStatusFluent$ConditionsNested<A> editFirstCondition();

  public abstract io.dekorate.deps.knative.duck.v1alpha1.ChannelableStatusFluent$ConditionsNested<A> editLastCondition();

  public abstract io.dekorate.deps.knative.duck.v1alpha1.ChannelableStatusFluent$ConditionsNested<A> editMatchingCondition(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.knative.v1.ConditionBuilder>);

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectReference getErrorChannel();

  public abstract A withErrorChannel(io.dekorate.deps.kubernetes.api.model.ObjectReference);

  public abstract java.lang.Boolean hasErrorChannel();

  public abstract java.lang.Long getObservedGeneration();

  public abstract A withObservedGeneration(java.lang.Long);

  public abstract java.lang.Boolean hasObservedGeneration();

  public abstract io.dekorate.deps.knative.duck.v1alpha1.SubscribableStatus getSubscribableStatus();

  public abstract io.dekorate.deps.knative.duck.v1alpha1.SubscribableStatus buildSubscribableStatus();

  public abstract A withSubscribableStatus(io.dekorate.deps.knative.duck.v1alpha1.SubscribableStatus);

  public abstract java.lang.Boolean hasSubscribableStatus();

  public abstract io.dekorate.deps.knative.duck.v1alpha1.ChannelableStatusFluent$SubscribableStatusNested<A> withNewSubscribableStatus();

  public abstract io.dekorate.deps.knative.duck.v1alpha1.ChannelableStatusFluent$SubscribableStatusNested<A> withNewSubscribableStatusLike(io.dekorate.deps.knative.duck.v1alpha1.SubscribableStatus);

  public abstract io.dekorate.deps.knative.duck.v1alpha1.ChannelableStatusFluent$SubscribableStatusNested<A> editSubscribableStatus();

  public abstract io.dekorate.deps.knative.duck.v1alpha1.ChannelableStatusFluent$SubscribableStatusNested<A> editOrNewSubscribableStatus();

  public abstract io.dekorate.deps.knative.duck.v1alpha1.ChannelableStatusFluent$SubscribableStatusNested<A> editOrNewSubscribableStatusLike(io.dekorate.deps.knative.duck.v1alpha1.SubscribableStatus);
}
