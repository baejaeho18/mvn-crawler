Compiled from "BitInputStream.java"
public class io.dekorate.deps.commons.compress.utils.BitInputStream implements java.io.Closeable {
  private static final int MAXIMUM_CACHE_SIZE;

  private static final long[] MASKS;

  private final io.dekorate.deps.commons.compress.utils.CountingInputStream in;

  private final java.nio.ByteOrder byteOrder;

  private long bitsCached;

  private int bitsCachedSize;

  public io.dekorate.deps.commons.compress.utils.BitInputStream(java.io.InputStream, java.nio.ByteOrder);
    Code:
       0: aload_0
       1: invokespecial #24                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #26                 // Field bitsCached:J
       9: aload_0
      10: iconst_0
      11: putfield      #28                 // Field bitsCachedSize:I
      14: aload_0
      15: new           #30                 // class io/dekorate/deps/commons/compress/utils/CountingInputStream
      18: dup
      19: aload_1
      20: invokespecial #33                 // Method io/dekorate/deps/commons/compress/utils/CountingInputStream."<init>":(Ljava/io/InputStream;)V
      23: putfield      #35                 // Field in:Lio/dekorate/deps/commons/compress/utils/CountingInputStream;
      26: aload_0
      27: aload_2
      28: putfield      #37                 // Field byteOrder:Ljava/nio/ByteOrder;
      31: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #35                 // Field in:Lio/dekorate/deps/commons/compress/utils/CountingInputStream;
       4: invokevirtual #45                 // Method io/dekorate/deps/commons/compress/utils/CountingInputStream.close:()V
       7: return

  public void clearBitCache();
    Code:
       0: aload_0
       1: lconst_0
       2: putfield      #26                 // Field bitsCached:J
       5: aload_0
       6: iconst_0
       7: putfield      #28                 // Field bitsCachedSize:I
      10: return

  public long readBits(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: iflt          10
       4: iload_1
       5: bipush        63
       7: if_icmple     20
      10: new           #50                 // class java/lang/IllegalArgumentException
      13: dup
      14: ldc           #52                 // String count must not be negative or greater than 63
      16: invokespecial #55                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: iload_1
      22: invokespecial #59                 // Method ensureCache:(I)Z
      25: ifeq          32
      28: ldc2_w        #60                 // long -1l
      31: lreturn
      32: aload_0
      33: getfield      #28                 // Field bitsCachedSize:I
      36: iload_1
      37: if_icmpge     46
      40: aload_0
      41: iload_1
      42: invokespecial #64                 // Method processBitsGreater57:(I)J
      45: lreturn
      46: aload_0
      47: iload_1
      48: invokespecial #67                 // Method readCachedBits:(I)J
      51: lreturn

  public int bitsCached();
    Code:
       0: aload_0
       1: getfield      #28                 // Field bitsCachedSize:I
       4: ireturn

  public long bitsAvailable() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field bitsCachedSize:I
       4: i2l
       5: ldc2_w        #72                 // long 8l
       8: aload_0
       9: getfield      #35                 // Field in:Lio/dekorate/deps/commons/compress/utils/CountingInputStream;
      12: invokevirtual #76                 // Method io/dekorate/deps/commons/compress/utils/CountingInputStream.available:()I
      15: i2l
      16: lmul
      17: ladd
      18: lreturn

  public void alignWithByteBoundary();
    Code:
       0: aload_0
       1: getfield      #28                 // Field bitsCachedSize:I
       4: bipush        8
       6: irem
       7: istore_1
       8: iload_1
       9: ifle          18
      12: aload_0
      13: iload_1
      14: invokespecial #67                 // Method readCachedBits:(I)J
      17: pop2
      18: return

  public long getBytesRead();
    Code:
       0: aload_0
       1: getfield      #35                 // Field in:Lio/dekorate/deps/commons/compress/utils/CountingInputStream;
       4: invokevirtual #81                 // Method io/dekorate/deps/commons/compress/utils/CountingInputStream.getBytesRead:()J
       7: lreturn

  private long processBitsGreater57(int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore        4
       3: lconst_0
       4: lstore        5
       6: iload_1
       7: aload_0
       8: getfield      #28                 // Field bitsCachedSize:I
      11: isub
      12: istore        7
      14: bipush        8
      16: iload         7
      18: isub
      19: istore        4
      21: aload_0
      22: getfield      #35                 // Field in:Lio/dekorate/deps/commons/compress/utils/CountingInputStream;
      25: invokevirtual #84                 // Method io/dekorate/deps/commons/compress/utils/CountingInputStream.read:()I
      28: i2l
      29: lstore        8
      31: lload         8
      33: lconst_0
      34: lcmp
      35: ifge          41
      38: lload         8
      40: lreturn
      41: aload_0
      42: getfield      #37                 // Field byteOrder:Ljava/nio/ByteOrder;
      45: getstatic     #89                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
      48: if_acmpne     95
      51: lload         8
      53: getstatic     #91                 // Field MASKS:[J
      56: iload         7
      58: laload
      59: land
      60: lstore        10
      62: aload_0
      63: dup
      64: getfield      #26                 // Field bitsCached:J
      67: lload         10
      69: aload_0
      70: getfield      #28                 // Field bitsCachedSize:I
      73: lshl
      74: lor
      75: putfield      #26                 // Field bitsCached:J
      78: lload         8
      80: iload         7
      82: lushr
      83: getstatic     #91                 // Field MASKS:[J
      86: iload         4
      88: laload
      89: land
      90: lstore        5
      92: goto          142
      95: aload_0
      96: dup
      97: getfield      #26                 // Field bitsCached:J
     100: iload         7
     102: lshl
     103: putfield      #26                 // Field bitsCached:J
     106: lload         8
     108: iload         4
     110: lushr
     111: getstatic     #91                 // Field MASKS:[J
     114: iload         7
     116: laload
     117: land
     118: lstore        10
     120: aload_0
     121: dup
     122: getfield      #26                 // Field bitsCached:J
     125: lload         10
     127: lor
     128: putfield      #26                 // Field bitsCached:J
     131: lload         8
     133: getstatic     #91                 // Field MASKS:[J
     136: iload         4
     138: laload
     139: land
     140: lstore        5
     142: aload_0
     143: getfield      #26                 // Field bitsCached:J
     146: getstatic     #91                 // Field MASKS:[J
     149: iload_1
     150: laload
     151: land
     152: lstore_2
     153: aload_0
     154: lload         5
     156: putfield      #26                 // Field bitsCached:J
     159: aload_0
     160: iload         4
     162: putfield      #28                 // Field bitsCachedSize:I
     165: lload_2
     166: lreturn

  private long readCachedBits(int);
    Code:
       0: aload_0
       1: getfield      #37                 // Field byteOrder:Ljava/nio/ByteOrder;
       4: getstatic     #89                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
       7: if_acmpne     34
      10: aload_0
      11: getfield      #26                 // Field bitsCached:J
      14: getstatic     #91                 // Field MASKS:[J
      17: iload_1
      18: laload
      19: land
      20: lstore_2
      21: aload_0
      22: dup
      23: getfield      #26                 // Field bitsCached:J
      26: iload_1
      27: lushr
      28: putfield      #26                 // Field bitsCached:J
      31: goto          52
      34: aload_0
      35: getfield      #26                 // Field bitsCached:J
      38: aload_0
      39: getfield      #28                 // Field bitsCachedSize:I
      42: iload_1
      43: isub
      44: lshr
      45: getstatic     #91                 // Field MASKS:[J
      48: iload_1
      49: laload
      50: land
      51: lstore_2
      52: aload_0
      53: dup
      54: getfield      #28                 // Field bitsCachedSize:I
      57: iload_1
      58: isub
      59: putfield      #28                 // Field bitsCachedSize:I
      62: lload_2
      63: lreturn

  private boolean ensureCache(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field bitsCachedSize:I
       4: iload_1
       5: if_icmpge     97
       8: aload_0
       9: getfield      #28                 // Field bitsCachedSize:I
      12: bipush        57
      14: if_icmpge     97
      17: aload_0
      18: getfield      #35                 // Field in:Lio/dekorate/deps/commons/compress/utils/CountingInputStream;
      21: invokevirtual #84                 // Method io/dekorate/deps/commons/compress/utils/CountingInputStream.read:()I
      24: i2l
      25: lstore_2
      26: lload_2
      27: lconst_0
      28: lcmp
      29: ifge          34
      32: iconst_1
      33: ireturn
      34: aload_0
      35: getfield      #37                 // Field byteOrder:Ljava/nio/ByteOrder;
      38: getstatic     #89                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
      41: if_acmpne     62
      44: aload_0
      45: dup
      46: getfield      #26                 // Field bitsCached:J
      49: lload_2
      50: aload_0
      51: getfield      #28                 // Field bitsCachedSize:I
      54: lshl
      55: lor
      56: putfield      #26                 // Field bitsCached:J
      59: goto          83
      62: aload_0
      63: dup
      64: getfield      #26                 // Field bitsCached:J
      67: bipush        8
      69: lshl
      70: putfield      #26                 // Field bitsCached:J
      73: aload_0
      74: dup
      75: getfield      #26                 // Field bitsCached:J
      78: lload_2
      79: lor
      80: putfield      #26                 // Field bitsCached:J
      83: aload_0
      84: dup
      85: getfield      #28                 // Field bitsCachedSize:I
      88: bipush        8
      90: iadd
      91: putfield      #28                 // Field bitsCachedSize:I
      94: goto          0
      97: iconst_0
      98: ireturn

  static {};
    Code:
       0: bipush        64
       2: newarray       long
       4: putstatic     #91                 // Field MASKS:[J
       7: iconst_1
       8: istore_0
       9: iload_0
      10: bipush        63
      12: if_icmpgt     37
      15: getstatic     #91                 // Field MASKS:[J
      18: iload_0
      19: getstatic     #91                 // Field MASKS:[J
      22: iload_0
      23: iconst_1
      24: isub
      25: laload
      26: iconst_1
      27: lshl
      28: lconst_1
      29: ladd
      30: lastore
      31: iinc          0, 1
      34: goto          9
      37: return
}
