Compiled from "PipelineTaskConditionFluent.java"
public interface io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskConditionFluent<A extends io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskConditionFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getConditionRef();

  public abstract A withConditionRef(java.lang.String);

  public abstract java.lang.Boolean hasConditionRef();

  public abstract A withNewConditionRef(java.lang.String);

  public abstract A withNewConditionRef(java.lang.StringBuilder);

  public abstract A withNewConditionRef(java.lang.StringBuffer);

  public abstract A addToParams(int, io.dekorate.deps.tekton.pipeline.v1beta1.Param);

  public abstract A setToParams(int, io.dekorate.deps.tekton.pipeline.v1beta1.Param);

  public abstract A addToParams(io.dekorate.deps.tekton.pipeline.v1beta1.Param...);

  public abstract A addAllToParams(java.util.Collection<io.dekorate.deps.tekton.pipeline.v1beta1.Param>);

  public abstract A removeFromParams(io.dekorate.deps.tekton.pipeline.v1beta1.Param...);

  public abstract A removeAllFromParams(java.util.Collection<io.dekorate.deps.tekton.pipeline.v1beta1.Param>);

  public abstract A removeMatchingFromParams(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.tekton.pipeline.v1beta1.ParamBuilder>);

  public abstract java.util.List<io.dekorate.deps.tekton.pipeline.v1beta1.Param> getParams();

  public abstract java.util.List<io.dekorate.deps.tekton.pipeline.v1beta1.Param> buildParams();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.Param buildParam(int);

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.Param buildFirstParam();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.Param buildLastParam();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.Param buildMatchingParam(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.tekton.pipeline.v1beta1.ParamBuilder>);

  public abstract java.lang.Boolean hasMatchingParam(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.tekton.pipeline.v1beta1.ParamBuilder>);

  public abstract A withParams(java.util.List<io.dekorate.deps.tekton.pipeline.v1beta1.Param>);

  public abstract A withParams(io.dekorate.deps.tekton.pipeline.v1beta1.Param...);

  public abstract java.lang.Boolean hasParams();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskConditionFluent$ParamsNested<A> addNewParam();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskConditionFluent$ParamsNested<A> addNewParamLike(io.dekorate.deps.tekton.pipeline.v1beta1.Param);

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskConditionFluent$ParamsNested<A> setNewParamLike(int, io.dekorate.deps.tekton.pipeline.v1beta1.Param);

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskConditionFluent$ParamsNested<A> editParam(int);

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskConditionFluent$ParamsNested<A> editFirstParam();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskConditionFluent$ParamsNested<A> editLastParam();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskConditionFluent$ParamsNested<A> editMatchingParam(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.tekton.pipeline.v1beta1.ParamBuilder>);

  public abstract A addToResources(int, io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskInputResource);

  public abstract A setToResources(int, io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskInputResource);

  public abstract A addToResources(io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskInputResource...);

  public abstract A addAllToResources(java.util.Collection<io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskInputResource>);

  public abstract A removeFromResources(io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskInputResource...);

  public abstract A removeAllFromResources(java.util.Collection<io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskInputResource>);

  public abstract A removeMatchingFromResources(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskInputResourceBuilder>);

  public abstract java.util.List<io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskInputResource> getResources();

  public abstract java.util.List<io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskInputResource> buildResources();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskInputResource buildResource(int);

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskInputResource buildFirstResource();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskInputResource buildLastResource();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskInputResource buildMatchingResource(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskInputResourceBuilder>);

  public abstract java.lang.Boolean hasMatchingResource(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskInputResourceBuilder>);

  public abstract A withResources(java.util.List<io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskInputResource>);

  public abstract A withResources(io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskInputResource...);

  public abstract java.lang.Boolean hasResources();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskConditionFluent$ResourcesNested<A> addNewResource();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskConditionFluent$ResourcesNested<A> addNewResourceLike(io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskInputResource);

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskConditionFluent$ResourcesNested<A> setNewResourceLike(int, io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskInputResource);

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskConditionFluent$ResourcesNested<A> editResource(int);

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskConditionFluent$ResourcesNested<A> editFirstResource();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskConditionFluent$ResourcesNested<A> editLastResource();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskConditionFluent$ResourcesNested<A> editMatchingResource(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskInputResourceBuilder>);
}
