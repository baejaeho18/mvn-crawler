Compiled from "DockerStrategyOptionsFluent.java"
public interface io.dekorate.deps.openshift.api.model.DockerStrategyOptionsFluent<A extends io.dekorate.deps.openshift.api.model.DockerStrategyOptionsFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract A addToBuildArgs(int, io.dekorate.deps.kubernetes.api.model.EnvVar);

  public abstract A setToBuildArgs(int, io.dekorate.deps.kubernetes.api.model.EnvVar);

  public abstract A addToBuildArgs(io.dekorate.deps.kubernetes.api.model.EnvVar...);

  public abstract A addAllToBuildArgs(java.util.Collection<io.dekorate.deps.kubernetes.api.model.EnvVar>);

  public abstract A removeFromBuildArgs(io.dekorate.deps.kubernetes.api.model.EnvVar...);

  public abstract A removeAllFromBuildArgs(java.util.Collection<io.dekorate.deps.kubernetes.api.model.EnvVar>);

  public abstract A removeMatchingFromBuildArgs(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.EnvVarBuilder>);

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.EnvVar> getBuildArgs();

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.EnvVar> buildBuildArgs();

  public abstract io.dekorate.deps.kubernetes.api.model.EnvVar buildBuildArg(int);

  public abstract io.dekorate.deps.kubernetes.api.model.EnvVar buildFirstBuildArg();

  public abstract io.dekorate.deps.kubernetes.api.model.EnvVar buildLastBuildArg();

  public abstract io.dekorate.deps.kubernetes.api.model.EnvVar buildMatchingBuildArg(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.EnvVarBuilder>);

  public abstract java.lang.Boolean hasMatchingBuildArg(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.EnvVarBuilder>);

  public abstract A withBuildArgs(java.util.List<io.dekorate.deps.kubernetes.api.model.EnvVar>);

  public abstract A withBuildArgs(io.dekorate.deps.kubernetes.api.model.EnvVar...);

  public abstract java.lang.Boolean hasBuildArgs();

  public abstract io.dekorate.deps.openshift.api.model.DockerStrategyOptionsFluent$BuildArgsNested<A> addNewBuildArg();

  public abstract io.dekorate.deps.openshift.api.model.DockerStrategyOptionsFluent$BuildArgsNested<A> addNewBuildArgLike(io.dekorate.deps.kubernetes.api.model.EnvVar);

  public abstract io.dekorate.deps.openshift.api.model.DockerStrategyOptionsFluent$BuildArgsNested<A> setNewBuildArgLike(int, io.dekorate.deps.kubernetes.api.model.EnvVar);

  public abstract io.dekorate.deps.openshift.api.model.DockerStrategyOptionsFluent$BuildArgsNested<A> editBuildArg(int);

  public abstract io.dekorate.deps.openshift.api.model.DockerStrategyOptionsFluent$BuildArgsNested<A> editFirstBuildArg();

  public abstract io.dekorate.deps.openshift.api.model.DockerStrategyOptionsFluent$BuildArgsNested<A> editLastBuildArg();

  public abstract io.dekorate.deps.openshift.api.model.DockerStrategyOptionsFluent$BuildArgsNested<A> editMatchingBuildArg(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.EnvVarBuilder>);

  public abstract java.lang.Boolean isNoCache();

  public abstract A withNoCache(java.lang.Boolean);

  public abstract java.lang.Boolean hasNoCache();

  public abstract A withNewNoCache(java.lang.String);

  public abstract A withNewNoCache(boolean);
}
