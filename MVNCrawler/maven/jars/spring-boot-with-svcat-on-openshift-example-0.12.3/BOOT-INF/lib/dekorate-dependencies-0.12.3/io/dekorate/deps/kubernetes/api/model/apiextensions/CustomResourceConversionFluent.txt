Compiled from "CustomResourceConversionFluent.java"
public interface io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceConversionFluent<A extends io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceConversionFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract A addToConversionReviewVersions(int, java.lang.String);

  public abstract A setToConversionReviewVersions(int, java.lang.String);

  public abstract A addToConversionReviewVersions(java.lang.String...);

  public abstract A addAllToConversionReviewVersions(java.util.Collection<java.lang.String>);

  public abstract A removeFromConversionReviewVersions(java.lang.String...);

  public abstract A removeAllFromConversionReviewVersions(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getConversionReviewVersions();

  public abstract java.lang.String getConversionReviewVersion(int);

  public abstract java.lang.String getFirstConversionReviewVersion();

  public abstract java.lang.String getLastConversionReviewVersion();

  public abstract java.lang.String getMatchingConversionReviewVersion(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingConversionReviewVersion(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract A withConversionReviewVersions(java.util.List<java.lang.String>);

  public abstract A withConversionReviewVersions(java.lang.String...);

  public abstract java.lang.Boolean hasConversionReviewVersions();

  public abstract A addNewConversionReviewVersion(java.lang.String);

  public abstract A addNewConversionReviewVersion(java.lang.StringBuilder);

  public abstract A addNewConversionReviewVersion(java.lang.StringBuffer);

  public abstract java.lang.String getStrategy();

  public abstract A withStrategy(java.lang.String);

  public abstract java.lang.Boolean hasStrategy();

  public abstract A withNewStrategy(java.lang.String);

  public abstract A withNewStrategy(java.lang.StringBuilder);

  public abstract A withNewStrategy(java.lang.StringBuffer);

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.WebhookClientConfig getWebhookClientConfig();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.WebhookClientConfig buildWebhookClientConfig();

  public abstract A withWebhookClientConfig(io.dekorate.deps.kubernetes.api.model.apiextensions.WebhookClientConfig);

  public abstract java.lang.Boolean hasWebhookClientConfig();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceConversionFluent$WebhookClientConfigNested<A> withNewWebhookClientConfig();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceConversionFluent$WebhookClientConfigNested<A> withNewWebhookClientConfigLike(io.dekorate.deps.kubernetes.api.model.apiextensions.WebhookClientConfig);

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceConversionFluent$WebhookClientConfigNested<A> editWebhookClientConfig();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceConversionFluent$WebhookClientConfigNested<A> editOrNewWebhookClientConfig();

  public abstract io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceConversionFluent$WebhookClientConfigNested<A> editOrNewWebhookClientConfigLike(io.dekorate.deps.kubernetes.api.model.apiextensions.WebhookClientConfig);
}
