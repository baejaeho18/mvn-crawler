Compiled from "SinkBindingSpecFluent.java"
public interface io.dekorate.deps.knative.legacysources.v1alpha1.SinkBindingSpecFluent<A extends io.dekorate.deps.knative.legacysources.v1alpha1.SinkBindingSpecFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract io.dekorate.deps.knative.duck.v1.CloudEventOverrides getCeOverrides();

  public abstract io.dekorate.deps.knative.duck.v1.CloudEventOverrides buildCeOverrides();

  public abstract A withCeOverrides(io.dekorate.deps.knative.duck.v1.CloudEventOverrides);

  public abstract java.lang.Boolean hasCeOverrides();

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.SinkBindingSpecFluent$CeOverridesNested<A> withNewCeOverrides();

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.SinkBindingSpecFluent$CeOverridesNested<A> withNewCeOverridesLike(io.dekorate.deps.knative.duck.v1.CloudEventOverrides);

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.SinkBindingSpecFluent$CeOverridesNested<A> editCeOverrides();

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.SinkBindingSpecFluent$CeOverridesNested<A> editOrNewCeOverrides();

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.SinkBindingSpecFluent$CeOverridesNested<A> editOrNewCeOverridesLike(io.dekorate.deps.knative.duck.v1.CloudEventOverrides);

  public abstract io.dekorate.deps.knative.duck.v1.Destination getSink();

  public abstract io.dekorate.deps.knative.duck.v1.Destination buildSink();

  public abstract A withSink(io.dekorate.deps.knative.duck.v1.Destination);

  public abstract java.lang.Boolean hasSink();

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.SinkBindingSpecFluent$SinkNested<A> withNewSink();

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.SinkBindingSpecFluent$SinkNested<A> withNewSinkLike(io.dekorate.deps.knative.duck.v1.Destination);

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.SinkBindingSpecFluent$SinkNested<A> editSink();

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.SinkBindingSpecFluent$SinkNested<A> editOrNewSink();

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.SinkBindingSpecFluent$SinkNested<A> editOrNewSinkLike(io.dekorate.deps.knative.duck.v1.Destination);

  public abstract io.dekorate.deps.knative.tracker.Reference getSubject();

  public abstract io.dekorate.deps.knative.tracker.Reference buildSubject();

  public abstract A withSubject(io.dekorate.deps.knative.tracker.Reference);

  public abstract java.lang.Boolean hasSubject();

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.SinkBindingSpecFluent$SubjectNested<A> withNewSubject();

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.SinkBindingSpecFluent$SubjectNested<A> withNewSubjectLike(io.dekorate.deps.knative.tracker.Reference);

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.SinkBindingSpecFluent$SubjectNested<A> editSubject();

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.SinkBindingSpecFluent$SubjectNested<A> editOrNewSubject();

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.SinkBindingSpecFluent$SubjectNested<A> editOrNewSubjectLike(io.dekorate.deps.knative.tracker.Reference);
}
