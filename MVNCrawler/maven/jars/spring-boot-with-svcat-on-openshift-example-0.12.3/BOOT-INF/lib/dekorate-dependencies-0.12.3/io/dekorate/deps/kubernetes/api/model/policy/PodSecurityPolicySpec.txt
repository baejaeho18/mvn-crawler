Compiled from "PodSecurityPolicySpec.java"
public class io.dekorate.deps.kubernetes.api.model.policy.PodSecurityPolicySpec implements io.dekorate.deps.kubernetes.api.model.KubernetesResource {
  private java.lang.Boolean allowPrivilegeEscalation;

  private java.util.List<io.dekorate.deps.kubernetes.api.model.policy.AllowedCSIDriver> allowedCSIDrivers;

  private java.util.List<java.lang.String> allowedCapabilities;

  private java.util.List<io.dekorate.deps.kubernetes.api.model.policy.AllowedFlexVolume> allowedFlexVolumes;

  private java.util.List<io.dekorate.deps.kubernetes.api.model.policy.AllowedHostPath> allowedHostPaths;

  private java.util.List<java.lang.String> allowedProcMountTypes;

  private java.util.List<java.lang.String> allowedUnsafeSysctls;

  private java.util.List<java.lang.String> defaultAddCapabilities;

  private java.lang.Boolean defaultAllowPrivilegeEscalation;

  private java.util.List<java.lang.String> forbiddenSysctls;

  private io.dekorate.deps.kubernetes.api.model.policy.FSGroupStrategyOptions fsGroup;

  private java.lang.Boolean hostIPC;

  private java.lang.Boolean hostNetwork;

  private java.lang.Boolean hostPID;

  private java.util.List<io.dekorate.deps.kubernetes.api.model.policy.HostPortRange> hostPorts;

  private java.lang.Boolean privileged;

  private java.lang.Boolean readOnlyRootFilesystem;

  private java.util.List<java.lang.String> requiredDropCapabilities;

  private io.dekorate.deps.kubernetes.api.model.policy.RunAsGroupStrategyOptions runAsGroup;

  private io.dekorate.deps.kubernetes.api.model.policy.KubernetesRunAsUserStrategyOptions runAsUser;

  private io.dekorate.deps.kubernetes.api.model.policy.RuntimeClassStrategyOptions runtimeClass;

  private io.dekorate.deps.kubernetes.api.model.policy.SELinuxStrategyOptions seLinux;

  private io.dekorate.deps.kubernetes.api.model.policy.SupplementalGroupsStrategyOptions supplementalGroups;

  private java.util.List<java.lang.String> volumes;

  private java.util.Map<java.lang.String, java.lang.Object> additionalProperties;

  public io.dekorate.deps.kubernetes.api.model.policy.PodSecurityPolicySpec();
    Code:
       0: aload_0
       1: invokespecial #75                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #77                 // class java/util/ArrayList
       8: dup
       9: invokespecial #78                 // Method java/util/ArrayList."<init>":()V
      12: putfield      #80                 // Field allowedCSIDrivers:Ljava/util/List;
      15: aload_0
      16: new           #77                 // class java/util/ArrayList
      19: dup
      20: invokespecial #78                 // Method java/util/ArrayList."<init>":()V
      23: putfield      #82                 // Field allowedCapabilities:Ljava/util/List;
      26: aload_0
      27: new           #77                 // class java/util/ArrayList
      30: dup
      31: invokespecial #78                 // Method java/util/ArrayList."<init>":()V
      34: putfield      #84                 // Field allowedFlexVolumes:Ljava/util/List;
      37: aload_0
      38: new           #77                 // class java/util/ArrayList
      41: dup
      42: invokespecial #78                 // Method java/util/ArrayList."<init>":()V
      45: putfield      #86                 // Field allowedHostPaths:Ljava/util/List;
      48: aload_0
      49: new           #77                 // class java/util/ArrayList
      52: dup
      53: invokespecial #78                 // Method java/util/ArrayList."<init>":()V
      56: putfield      #88                 // Field allowedProcMountTypes:Ljava/util/List;
      59: aload_0
      60: new           #77                 // class java/util/ArrayList
      63: dup
      64: invokespecial #78                 // Method java/util/ArrayList."<init>":()V
      67: putfield      #90                 // Field allowedUnsafeSysctls:Ljava/util/List;
      70: aload_0
      71: new           #77                 // class java/util/ArrayList
      74: dup
      75: invokespecial #78                 // Method java/util/ArrayList."<init>":()V
      78: putfield      #92                 // Field defaultAddCapabilities:Ljava/util/List;
      81: aload_0
      82: new           #77                 // class java/util/ArrayList
      85: dup
      86: invokespecial #78                 // Method java/util/ArrayList."<init>":()V
      89: putfield      #94                 // Field forbiddenSysctls:Ljava/util/List;
      92: aload_0
      93: new           #77                 // class java/util/ArrayList
      96: dup
      97: invokespecial #78                 // Method java/util/ArrayList."<init>":()V
     100: putfield      #96                 // Field hostPorts:Ljava/util/List;
     103: aload_0
     104: new           #77                 // class java/util/ArrayList
     107: dup
     108: invokespecial #78                 // Method java/util/ArrayList."<init>":()V
     111: putfield      #98                 // Field requiredDropCapabilities:Ljava/util/List;
     114: aload_0
     115: new           #77                 // class java/util/ArrayList
     118: dup
     119: invokespecial #78                 // Method java/util/ArrayList."<init>":()V
     122: putfield      #100                // Field volumes:Ljava/util/List;
     125: aload_0
     126: new           #102                // class java/util/HashMap
     129: dup
     130: invokespecial #103                // Method java/util/HashMap."<init>":()V
     133: putfield      #105                // Field additionalProperties:Ljava/util/Map;
     136: return

  public io.dekorate.deps.kubernetes.api.model.policy.PodSecurityPolicySpec(java.lang.Boolean, java.util.List<io.dekorate.deps.kubernetes.api.model.policy.AllowedCSIDriver>, java.util.List<java.lang.String>, java.util.List<io.dekorate.deps.kubernetes.api.model.policy.AllowedFlexVolume>, java.util.List<io.dekorate.deps.kubernetes.api.model.policy.AllowedHostPath>, java.util.List<java.lang.String>, java.util.List<java.lang.String>, java.util.List<java.lang.String>, java.lang.Boolean, java.util.List<java.lang.String>, io.dekorate.deps.kubernetes.api.model.policy.FSGroupStrategyOptions, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.util.List<io.dekorate.deps.kubernetes.api.model.policy.HostPortRange>, java.lang.Boolean, java.lang.Boolean, java.util.List<java.lang.String>, io.dekorate.deps.kubernetes.api.model.policy.RunAsGroupStrategyOptions, io.dekorate.deps.kubernetes.api.model.policy.KubernetesRunAsUserStrategyOptions, io.dekorate.deps.kubernetes.api.model.policy.RuntimeClassStrategyOptions, io.dekorate.deps.kubernetes.api.model.policy.SELinuxStrategyOptions, io.dekorate.deps.kubernetes.api.model.policy.SupplementalGroupsStrategyOptions, java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #75                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #77                 // class java/util/ArrayList
       8: dup
       9: invokespecial #78                 // Method java/util/ArrayList."<init>":()V
      12: putfield      #80                 // Field allowedCSIDrivers:Ljava/util/List;
      15: aload_0
      16: new           #77                 // class java/util/ArrayList
      19: dup
      20: invokespecial #78                 // Method java/util/ArrayList."<init>":()V
      23: putfield      #82                 // Field allowedCapabilities:Ljava/util/List;
      26: aload_0
      27: new           #77                 // class java/util/ArrayList
      30: dup
      31: invokespecial #78                 // Method java/util/ArrayList."<init>":()V
      34: putfield      #84                 // Field allowedFlexVolumes:Ljava/util/List;
      37: aload_0
      38: new           #77                 // class java/util/ArrayList
      41: dup
      42: invokespecial #78                 // Method java/util/ArrayList."<init>":()V
      45: putfield      #86                 // Field allowedHostPaths:Ljava/util/List;
      48: aload_0
      49: new           #77                 // class java/util/ArrayList
      52: dup
      53: invokespecial #78                 // Method java/util/ArrayList."<init>":()V
      56: putfield      #88                 // Field allowedProcMountTypes:Ljava/util/List;
      59: aload_0
      60: new           #77                 // class java/util/ArrayList
      63: dup
      64: invokespecial #78                 // Method java/util/ArrayList."<init>":()V
      67: putfield      #90                 // Field allowedUnsafeSysctls:Ljava/util/List;
      70: aload_0
      71: new           #77                 // class java/util/ArrayList
      74: dup
      75: invokespecial #78                 // Method java/util/ArrayList."<init>":()V
      78: putfield      #92                 // Field defaultAddCapabilities:Ljava/util/List;
      81: aload_0
      82: new           #77                 // class java/util/ArrayList
      85: dup
      86: invokespecial #78                 // Method java/util/ArrayList."<init>":()V
      89: putfield      #94                 // Field forbiddenSysctls:Ljava/util/List;
      92: aload_0
      93: new           #77                 // class java/util/ArrayList
      96: dup
      97: invokespecial #78                 // Method java/util/ArrayList."<init>":()V
     100: putfield      #96                 // Field hostPorts:Ljava/util/List;
     103: aload_0
     104: new           #77                 // class java/util/ArrayList
     107: dup
     108: invokespecial #78                 // Method java/util/ArrayList."<init>":()V
     111: putfield      #98                 // Field requiredDropCapabilities:Ljava/util/List;
     114: aload_0
     115: new           #77                 // class java/util/ArrayList
     118: dup
     119: invokespecial #78                 // Method java/util/ArrayList."<init>":()V
     122: putfield      #100                // Field volumes:Ljava/util/List;
     125: aload_0
     126: new           #102                // class java/util/HashMap
     129: dup
     130: invokespecial #103                // Method java/util/HashMap."<init>":()V
     133: putfield      #105                // Field additionalProperties:Ljava/util/Map;
     136: aload_0
     137: aload_1
     138: putfield      #111                // Field allowPrivilegeEscalation:Ljava/lang/Boolean;
     141: aload_0
     142: aload_2
     143: putfield      #80                 // Field allowedCSIDrivers:Ljava/util/List;
     146: aload_0
     147: aload_3
     148: putfield      #82                 // Field allowedCapabilities:Ljava/util/List;
     151: aload_0
     152: aload         4
     154: putfield      #84                 // Field allowedFlexVolumes:Ljava/util/List;
     157: aload_0
     158: aload         5
     160: putfield      #86                 // Field allowedHostPaths:Ljava/util/List;
     163: aload_0
     164: aload         6
     166: putfield      #88                 // Field allowedProcMountTypes:Ljava/util/List;
     169: aload_0
     170: aload         7
     172: putfield      #90                 // Field allowedUnsafeSysctls:Ljava/util/List;
     175: aload_0
     176: aload         8
     178: putfield      #92                 // Field defaultAddCapabilities:Ljava/util/List;
     181: aload_0
     182: aload         9
     184: putfield      #113                // Field defaultAllowPrivilegeEscalation:Ljava/lang/Boolean;
     187: aload_0
     188: aload         10
     190: putfield      #94                 // Field forbiddenSysctls:Ljava/util/List;
     193: aload_0
     194: aload         11
     196: putfield      #115                // Field fsGroup:Lio/dekorate/deps/kubernetes/api/model/policy/FSGroupStrategyOptions;
     199: aload_0
     200: aload         12
     202: putfield      #117                // Field hostIPC:Ljava/lang/Boolean;
     205: aload_0
     206: aload         13
     208: putfield      #119                // Field hostNetwork:Ljava/lang/Boolean;
     211: aload_0
     212: aload         14
     214: putfield      #121                // Field hostPID:Ljava/lang/Boolean;
     217: aload_0
     218: aload         15
     220: putfield      #96                 // Field hostPorts:Ljava/util/List;
     223: aload_0
     224: aload         16
     226: putfield      #123                // Field privileged:Ljava/lang/Boolean;
     229: aload_0
     230: aload         17
     232: putfield      #125                // Field readOnlyRootFilesystem:Ljava/lang/Boolean;
     235: aload_0
     236: aload         18
     238: putfield      #98                 // Field requiredDropCapabilities:Ljava/util/List;
     241: aload_0
     242: aload         19
     244: putfield      #127                // Field runAsGroup:Lio/dekorate/deps/kubernetes/api/model/policy/RunAsGroupStrategyOptions;
     247: aload_0
     248: aload         20
     250: putfield      #129                // Field runAsUser:Lio/dekorate/deps/kubernetes/api/model/policy/KubernetesRunAsUserStrategyOptions;
     253: aload_0
     254: aload         21
     256: putfield      #131                // Field runtimeClass:Lio/dekorate/deps/kubernetes/api/model/policy/RuntimeClassStrategyOptions;
     259: aload_0
     260: aload         22
     262: putfield      #133                // Field seLinux:Lio/dekorate/deps/kubernetes/api/model/policy/SELinuxStrategyOptions;
     265: aload_0
     266: aload         23
     268: putfield      #135                // Field supplementalGroups:Lio/dekorate/deps/kubernetes/api/model/policy/SupplementalGroupsStrategyOptions;
     271: aload_0
     272: aload         24
     274: putfield      #100                // Field volumes:Ljava/util/List;
     277: return

  public java.lang.Boolean getAllowPrivilegeEscalation();
    Code:
       0: aload_0
       1: getfield      #111                // Field allowPrivilegeEscalation:Ljava/lang/Boolean;
       4: areturn

  public void setAllowPrivilegeEscalation(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #111                // Field allowPrivilegeEscalation:Ljava/lang/Boolean;
       5: return

  public java.util.List<io.dekorate.deps.kubernetes.api.model.policy.AllowedCSIDriver> getAllowedCSIDrivers();
    Code:
       0: aload_0
       1: getfield      #80                 // Field allowedCSIDrivers:Ljava/util/List;
       4: areturn

  public void setAllowedCSIDrivers(java.util.List<io.dekorate.deps.kubernetes.api.model.policy.AllowedCSIDriver>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #80                 // Field allowedCSIDrivers:Ljava/util/List;
       5: return

  public java.util.List<java.lang.String> getAllowedCapabilities();
    Code:
       0: aload_0
       1: getfield      #82                 // Field allowedCapabilities:Ljava/util/List;
       4: areturn

  public void setAllowedCapabilities(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #82                 // Field allowedCapabilities:Ljava/util/List;
       5: return

  public java.util.List<io.dekorate.deps.kubernetes.api.model.policy.AllowedFlexVolume> getAllowedFlexVolumes();
    Code:
       0: aload_0
       1: getfield      #84                 // Field allowedFlexVolumes:Ljava/util/List;
       4: areturn

  public void setAllowedFlexVolumes(java.util.List<io.dekorate.deps.kubernetes.api.model.policy.AllowedFlexVolume>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #84                 // Field allowedFlexVolumes:Ljava/util/List;
       5: return

  public java.util.List<io.dekorate.deps.kubernetes.api.model.policy.AllowedHostPath> getAllowedHostPaths();
    Code:
       0: aload_0
       1: getfield      #86                 // Field allowedHostPaths:Ljava/util/List;
       4: areturn

  public void setAllowedHostPaths(java.util.List<io.dekorate.deps.kubernetes.api.model.policy.AllowedHostPath>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #86                 // Field allowedHostPaths:Ljava/util/List;
       5: return

  public java.util.List<java.lang.String> getAllowedProcMountTypes();
    Code:
       0: aload_0
       1: getfield      #88                 // Field allowedProcMountTypes:Ljava/util/List;
       4: areturn

  public void setAllowedProcMountTypes(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #88                 // Field allowedProcMountTypes:Ljava/util/List;
       5: return

  public java.util.List<java.lang.String> getAllowedUnsafeSysctls();
    Code:
       0: aload_0
       1: getfield      #90                 // Field allowedUnsafeSysctls:Ljava/util/List;
       4: areturn

  public void setAllowedUnsafeSysctls(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #90                 // Field allowedUnsafeSysctls:Ljava/util/List;
       5: return

  public java.util.List<java.lang.String> getDefaultAddCapabilities();
    Code:
       0: aload_0
       1: getfield      #92                 // Field defaultAddCapabilities:Ljava/util/List;
       4: areturn

  public void setDefaultAddCapabilities(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #92                 // Field defaultAddCapabilities:Ljava/util/List;
       5: return

  public java.lang.Boolean getDefaultAllowPrivilegeEscalation();
    Code:
       0: aload_0
       1: getfield      #113                // Field defaultAllowPrivilegeEscalation:Ljava/lang/Boolean;
       4: areturn

  public void setDefaultAllowPrivilegeEscalation(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #113                // Field defaultAllowPrivilegeEscalation:Ljava/lang/Boolean;
       5: return

  public java.util.List<java.lang.String> getForbiddenSysctls();
    Code:
       0: aload_0
       1: getfield      #94                 // Field forbiddenSysctls:Ljava/util/List;
       4: areturn

  public void setForbiddenSysctls(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #94                 // Field forbiddenSysctls:Ljava/util/List;
       5: return

  public io.dekorate.deps.kubernetes.api.model.policy.FSGroupStrategyOptions getFsGroup();
    Code:
       0: aload_0
       1: getfield      #115                // Field fsGroup:Lio/dekorate/deps/kubernetes/api/model/policy/FSGroupStrategyOptions;
       4: areturn

  public void setFsGroup(io.dekorate.deps.kubernetes.api.model.policy.FSGroupStrategyOptions);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #115                // Field fsGroup:Lio/dekorate/deps/kubernetes/api/model/policy/FSGroupStrategyOptions;
       5: return

  public java.lang.Boolean getHostIPC();
    Code:
       0: aload_0
       1: getfield      #117                // Field hostIPC:Ljava/lang/Boolean;
       4: areturn

  public void setHostIPC(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #117                // Field hostIPC:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getHostNetwork();
    Code:
       0: aload_0
       1: getfield      #119                // Field hostNetwork:Ljava/lang/Boolean;
       4: areturn

  public void setHostNetwork(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #119                // Field hostNetwork:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getHostPID();
    Code:
       0: aload_0
       1: getfield      #121                // Field hostPID:Ljava/lang/Boolean;
       4: areturn

  public void setHostPID(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #121                // Field hostPID:Ljava/lang/Boolean;
       5: return

  public java.util.List<io.dekorate.deps.kubernetes.api.model.policy.HostPortRange> getHostPorts();
    Code:
       0: aload_0
       1: getfield      #96                 // Field hostPorts:Ljava/util/List;
       4: areturn

  public void setHostPorts(java.util.List<io.dekorate.deps.kubernetes.api.model.policy.HostPortRange>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #96                 // Field hostPorts:Ljava/util/List;
       5: return

  public java.lang.Boolean getPrivileged();
    Code:
       0: aload_0
       1: getfield      #123                // Field privileged:Ljava/lang/Boolean;
       4: areturn

  public void setPrivileged(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #123                // Field privileged:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getReadOnlyRootFilesystem();
    Code:
       0: aload_0
       1: getfield      #125                // Field readOnlyRootFilesystem:Ljava/lang/Boolean;
       4: areturn

  public void setReadOnlyRootFilesystem(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #125                // Field readOnlyRootFilesystem:Ljava/lang/Boolean;
       5: return

  public java.util.List<java.lang.String> getRequiredDropCapabilities();
    Code:
       0: aload_0
       1: getfield      #98                 // Field requiredDropCapabilities:Ljava/util/List;
       4: areturn

  public void setRequiredDropCapabilities(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #98                 // Field requiredDropCapabilities:Ljava/util/List;
       5: return

  public io.dekorate.deps.kubernetes.api.model.policy.RunAsGroupStrategyOptions getRunAsGroup();
    Code:
       0: aload_0
       1: getfield      #127                // Field runAsGroup:Lio/dekorate/deps/kubernetes/api/model/policy/RunAsGroupStrategyOptions;
       4: areturn

  public void setRunAsGroup(io.dekorate.deps.kubernetes.api.model.policy.RunAsGroupStrategyOptions);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #127                // Field runAsGroup:Lio/dekorate/deps/kubernetes/api/model/policy/RunAsGroupStrategyOptions;
       5: return

  public io.dekorate.deps.kubernetes.api.model.policy.KubernetesRunAsUserStrategyOptions getRunAsUser();
    Code:
       0: aload_0
       1: getfield      #129                // Field runAsUser:Lio/dekorate/deps/kubernetes/api/model/policy/KubernetesRunAsUserStrategyOptions;
       4: areturn

  public void setRunAsUser(io.dekorate.deps.kubernetes.api.model.policy.KubernetesRunAsUserStrategyOptions);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #129                // Field runAsUser:Lio/dekorate/deps/kubernetes/api/model/policy/KubernetesRunAsUserStrategyOptions;
       5: return

  public io.dekorate.deps.kubernetes.api.model.policy.RuntimeClassStrategyOptions getRuntimeClass();
    Code:
       0: aload_0
       1: getfield      #131                // Field runtimeClass:Lio/dekorate/deps/kubernetes/api/model/policy/RuntimeClassStrategyOptions;
       4: areturn

  public void setRuntimeClass(io.dekorate.deps.kubernetes.api.model.policy.RuntimeClassStrategyOptions);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #131                // Field runtimeClass:Lio/dekorate/deps/kubernetes/api/model/policy/RuntimeClassStrategyOptions;
       5: return

  public io.dekorate.deps.kubernetes.api.model.policy.SELinuxStrategyOptions getSeLinux();
    Code:
       0: aload_0
       1: getfield      #133                // Field seLinux:Lio/dekorate/deps/kubernetes/api/model/policy/SELinuxStrategyOptions;
       4: areturn

  public void setSeLinux(io.dekorate.deps.kubernetes.api.model.policy.SELinuxStrategyOptions);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #133                // Field seLinux:Lio/dekorate/deps/kubernetes/api/model/policy/SELinuxStrategyOptions;
       5: return

  public io.dekorate.deps.kubernetes.api.model.policy.SupplementalGroupsStrategyOptions getSupplementalGroups();
    Code:
       0: aload_0
       1: getfield      #135                // Field supplementalGroups:Lio/dekorate/deps/kubernetes/api/model/policy/SupplementalGroupsStrategyOptions;
       4: areturn

  public void setSupplementalGroups(io.dekorate.deps.kubernetes.api.model.policy.SupplementalGroupsStrategyOptions);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #135                // Field supplementalGroups:Lio/dekorate/deps/kubernetes/api/model/policy/SupplementalGroupsStrategyOptions;
       5: return

  public java.util.List<java.lang.String> getVolumes();
    Code:
       0: aload_0
       1: getfield      #100                // Field volumes:Ljava/util/List;
       4: areturn

  public void setVolumes(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #100                // Field volumes:Ljava/util/List;
       5: return

  public java.util.Map<java.lang.String, java.lang.Object> getAdditionalProperties();
    Code:
       0: aload_0
       1: getfield      #105                // Field additionalProperties:Ljava/util/Map;
       4: areturn

  public void setAdditionalProperty(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #105                // Field additionalProperties:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #222,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public java.lang.String toString();
    Code:
       0: new           #229                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #230                // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #232                // String PodSecurityPolicySpec(allowPrivilegeEscalation=
       9: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #238                // Method getAllowPrivilegeEscalation:()Ljava/lang/Boolean;
      16: invokevirtual #241                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #243                // String , allowedCSIDrivers=
      21: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #245                // Method getAllowedCSIDrivers:()Ljava/util/List;
      28: invokevirtual #241                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #247                // String , allowedCapabilities=
      33: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #249                // Method getAllowedCapabilities:()Ljava/util/List;
      40: invokevirtual #241                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #251                // String , allowedFlexVolumes=
      45: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: invokevirtual #253                // Method getAllowedFlexVolumes:()Ljava/util/List;
      52: invokevirtual #241                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: ldc           #255                // String , allowedHostPaths=
      57: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: invokevirtual #257                // Method getAllowedHostPaths:()Ljava/util/List;
      64: invokevirtual #241                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: ldc_w         #259                // String , allowedProcMountTypes=
      70: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_0
      74: invokevirtual #261                // Method getAllowedProcMountTypes:()Ljava/util/List;
      77: invokevirtual #241                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      80: ldc_w         #263                // String , allowedUnsafeSysctls=
      83: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload_0
      87: invokevirtual #265                // Method getAllowedUnsafeSysctls:()Ljava/util/List;
      90: invokevirtual #241                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      93: ldc_w         #267                // String , defaultAddCapabilities=
      96: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: aload_0
     100: invokevirtual #269                // Method getDefaultAddCapabilities:()Ljava/util/List;
     103: invokevirtual #241                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     106: ldc_w         #271                // String , defaultAllowPrivilegeEscalation=
     109: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: aload_0
     113: invokevirtual #273                // Method getDefaultAllowPrivilegeEscalation:()Ljava/lang/Boolean;
     116: invokevirtual #241                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     119: ldc_w         #275                // String , forbiddenSysctls=
     122: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: aload_0
     126: invokevirtual #277                // Method getForbiddenSysctls:()Ljava/util/List;
     129: invokevirtual #241                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     132: ldc_w         #279                // String , fsGroup=
     135: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: aload_0
     139: invokevirtual #281                // Method getFsGroup:()Lio/dekorate/deps/kubernetes/api/model/policy/FSGroupStrategyOptions;
     142: invokevirtual #241                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     145: ldc_w         #283                // String , hostIPC=
     148: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: aload_0
     152: invokevirtual #285                // Method getHostIPC:()Ljava/lang/Boolean;
     155: invokevirtual #241                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     158: ldc_w         #287                // String , hostNetwork=
     161: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: aload_0
     165: invokevirtual #289                // Method getHostNetwork:()Ljava/lang/Boolean;
     168: invokevirtual #241                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     171: ldc_w         #291                // String , hostPID=
     174: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     177: aload_0
     178: invokevirtual #293                // Method getHostPID:()Ljava/lang/Boolean;
     181: invokevirtual #241                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     184: ldc_w         #295                // String , hostPorts=
     187: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     190: aload_0
     191: invokevirtual #297                // Method getHostPorts:()Ljava/util/List;
     194: invokevirtual #241                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     197: ldc_w         #299                // String , privileged=
     200: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: aload_0
     204: invokevirtual #301                // Method getPrivileged:()Ljava/lang/Boolean;
     207: invokevirtual #241                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     210: ldc_w         #303                // String , readOnlyRootFilesystem=
     213: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     216: aload_0
     217: invokevirtual #305                // Method getReadOnlyRootFilesystem:()Ljava/lang/Boolean;
     220: invokevirtual #241                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     223: ldc_w         #307                // String , requiredDropCapabilities=
     226: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     229: aload_0
     230: invokevirtual #309                // Method getRequiredDropCapabilities:()Ljava/util/List;
     233: invokevirtual #241                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     236: ldc_w         #311                // String , runAsGroup=
     239: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     242: aload_0
     243: invokevirtual #313                // Method getRunAsGroup:()Lio/dekorate/deps/kubernetes/api/model/policy/RunAsGroupStrategyOptions;
     246: invokevirtual #241                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     249: ldc_w         #315                // String , runAsUser=
     252: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     255: aload_0
     256: invokevirtual #317                // Method getRunAsUser:()Lio/dekorate/deps/kubernetes/api/model/policy/KubernetesRunAsUserStrategyOptions;
     259: invokevirtual #241                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     262: ldc_w         #319                // String , runtimeClass=
     265: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     268: aload_0
     269: invokevirtual #321                // Method getRuntimeClass:()Lio/dekorate/deps/kubernetes/api/model/policy/RuntimeClassStrategyOptions;
     272: invokevirtual #241                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     275: ldc_w         #323                // String , seLinux=
     278: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     281: aload_0
     282: invokevirtual #325                // Method getSeLinux:()Lio/dekorate/deps/kubernetes/api/model/policy/SELinuxStrategyOptions;
     285: invokevirtual #241                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     288: ldc_w         #327                // String , supplementalGroups=
     291: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     294: aload_0
     295: invokevirtual #329                // Method getSupplementalGroups:()Lio/dekorate/deps/kubernetes/api/model/policy/SupplementalGroupsStrategyOptions;
     298: invokevirtual #241                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     301: ldc_w         #331                // String , volumes=
     304: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     307: aload_0
     308: invokevirtual #333                // Method getVolumes:()Ljava/util/List;
     311: invokevirtual #241                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     314: ldc_w         #335                // String , additionalProperties=
     317: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     320: aload_0
     321: invokevirtual #337                // Method getAdditionalProperties:()Ljava/util/Map;
     324: invokevirtual #241                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     327: ldc_w         #339                // String )
     330: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     333: invokevirtual #341                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     336: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class io/dekorate/deps/kubernetes/api/model/policy/PodSecurityPolicySpec
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #2                  // class io/dekorate/deps/kubernetes/api/model/policy/PodSecurityPolicySpec
      20: astore_2
      21: aload_2
      22: aload_0
      23: invokevirtual #346                // Method canEqual:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: invokevirtual #238                // Method getAllowPrivilegeEscalation:()Ljava/lang/Boolean;
      35: astore_3
      36: aload_2
      37: invokevirtual #238                // Method getAllowPrivilegeEscalation:()Ljava/lang/Boolean;
      40: astore        4
      42: aload_3
      43: ifnonnull     54
      46: aload         4
      48: ifnull        65
      51: goto          63
      54: aload_3
      55: aload         4
      57: invokevirtual #348                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifne          65
      63: iconst_0
      64: ireturn
      65: aload_0
      66: invokevirtual #245                // Method getAllowedCSIDrivers:()Ljava/util/List;
      69: astore        5
      71: aload_2
      72: invokevirtual #245                // Method getAllowedCSIDrivers:()Ljava/util/List;
      75: astore        6
      77: aload         5
      79: ifnonnull     90
      82: aload         6
      84: ifnull        102
      87: goto          100
      90: aload         5
      92: aload         6
      94: invokevirtual #348                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      97: ifne          102
     100: iconst_0
     101: ireturn
     102: aload_0
     103: invokevirtual #249                // Method getAllowedCapabilities:()Ljava/util/List;
     106: astore        7
     108: aload_2
     109: invokevirtual #249                // Method getAllowedCapabilities:()Ljava/util/List;
     112: astore        8
     114: aload         7
     116: ifnonnull     127
     119: aload         8
     121: ifnull        139
     124: goto          137
     127: aload         7
     129: aload         8
     131: invokevirtual #348                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     134: ifne          139
     137: iconst_0
     138: ireturn
     139: aload_0
     140: invokevirtual #253                // Method getAllowedFlexVolumes:()Ljava/util/List;
     143: astore        9
     145: aload_2
     146: invokevirtual #253                // Method getAllowedFlexVolumes:()Ljava/util/List;
     149: astore        10
     151: aload         9
     153: ifnonnull     164
     156: aload         10
     158: ifnull        176
     161: goto          174
     164: aload         9
     166: aload         10
     168: invokevirtual #348                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     171: ifne          176
     174: iconst_0
     175: ireturn
     176: aload_0
     177: invokevirtual #257                // Method getAllowedHostPaths:()Ljava/util/List;
     180: astore        11
     182: aload_2
     183: invokevirtual #257                // Method getAllowedHostPaths:()Ljava/util/List;
     186: astore        12
     188: aload         11
     190: ifnonnull     201
     193: aload         12
     195: ifnull        213
     198: goto          211
     201: aload         11
     203: aload         12
     205: invokevirtual #348                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     208: ifne          213
     211: iconst_0
     212: ireturn
     213: aload_0
     214: invokevirtual #261                // Method getAllowedProcMountTypes:()Ljava/util/List;
     217: astore        13
     219: aload_2
     220: invokevirtual #261                // Method getAllowedProcMountTypes:()Ljava/util/List;
     223: astore        14
     225: aload         13
     227: ifnonnull     238
     230: aload         14
     232: ifnull        250
     235: goto          248
     238: aload         13
     240: aload         14
     242: invokevirtual #348                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     245: ifne          250
     248: iconst_0
     249: ireturn
     250: aload_0
     251: invokevirtual #265                // Method getAllowedUnsafeSysctls:()Ljava/util/List;
     254: astore        15
     256: aload_2
     257: invokevirtual #265                // Method getAllowedUnsafeSysctls:()Ljava/util/List;
     260: astore        16
     262: aload         15
     264: ifnonnull     275
     267: aload         16
     269: ifnull        287
     272: goto          285
     275: aload         15
     277: aload         16
     279: invokevirtual #348                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     282: ifne          287
     285: iconst_0
     286: ireturn
     287: aload_0
     288: invokevirtual #269                // Method getDefaultAddCapabilities:()Ljava/util/List;
     291: astore        17
     293: aload_2
     294: invokevirtual #269                // Method getDefaultAddCapabilities:()Ljava/util/List;
     297: astore        18
     299: aload         17
     301: ifnonnull     312
     304: aload         18
     306: ifnull        324
     309: goto          322
     312: aload         17
     314: aload         18
     316: invokevirtual #348                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     319: ifne          324
     322: iconst_0
     323: ireturn
     324: aload_0
     325: invokevirtual #273                // Method getDefaultAllowPrivilegeEscalation:()Ljava/lang/Boolean;
     328: astore        19
     330: aload_2
     331: invokevirtual #273                // Method getDefaultAllowPrivilegeEscalation:()Ljava/lang/Boolean;
     334: astore        20
     336: aload         19
     338: ifnonnull     349
     341: aload         20
     343: ifnull        361
     346: goto          359
     349: aload         19
     351: aload         20
     353: invokevirtual #348                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     356: ifne          361
     359: iconst_0
     360: ireturn
     361: aload_0
     362: invokevirtual #277                // Method getForbiddenSysctls:()Ljava/util/List;
     365: astore        21
     367: aload_2
     368: invokevirtual #277                // Method getForbiddenSysctls:()Ljava/util/List;
     371: astore        22
     373: aload         21
     375: ifnonnull     386
     378: aload         22
     380: ifnull        398
     383: goto          396
     386: aload         21
     388: aload         22
     390: invokevirtual #348                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     393: ifne          398
     396: iconst_0
     397: ireturn
     398: aload_0
     399: invokevirtual #281                // Method getFsGroup:()Lio/dekorate/deps/kubernetes/api/model/policy/FSGroupStrategyOptions;
     402: astore        23
     404: aload_2
     405: invokevirtual #281                // Method getFsGroup:()Lio/dekorate/deps/kubernetes/api/model/policy/FSGroupStrategyOptions;
     408: astore        24
     410: aload         23
     412: ifnonnull     423
     415: aload         24
     417: ifnull        435
     420: goto          433
     423: aload         23
     425: aload         24
     427: invokevirtual #348                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     430: ifne          435
     433: iconst_0
     434: ireturn
     435: aload_0
     436: invokevirtual #285                // Method getHostIPC:()Ljava/lang/Boolean;
     439: astore        25
     441: aload_2
     442: invokevirtual #285                // Method getHostIPC:()Ljava/lang/Boolean;
     445: astore        26
     447: aload         25
     449: ifnonnull     460
     452: aload         26
     454: ifnull        472
     457: goto          470
     460: aload         25
     462: aload         26
     464: invokevirtual #348                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     467: ifne          472
     470: iconst_0
     471: ireturn
     472: aload_0
     473: invokevirtual #289                // Method getHostNetwork:()Ljava/lang/Boolean;
     476: astore        27
     478: aload_2
     479: invokevirtual #289                // Method getHostNetwork:()Ljava/lang/Boolean;
     482: astore        28
     484: aload         27
     486: ifnonnull     497
     489: aload         28
     491: ifnull        509
     494: goto          507
     497: aload         27
     499: aload         28
     501: invokevirtual #348                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     504: ifne          509
     507: iconst_0
     508: ireturn
     509: aload_0
     510: invokevirtual #293                // Method getHostPID:()Ljava/lang/Boolean;
     513: astore        29
     515: aload_2
     516: invokevirtual #293                // Method getHostPID:()Ljava/lang/Boolean;
     519: astore        30
     521: aload         29
     523: ifnonnull     534
     526: aload         30
     528: ifnull        546
     531: goto          544
     534: aload         29
     536: aload         30
     538: invokevirtual #348                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     541: ifne          546
     544: iconst_0
     545: ireturn
     546: aload_0
     547: invokevirtual #297                // Method getHostPorts:()Ljava/util/List;
     550: astore        31
     552: aload_2
     553: invokevirtual #297                // Method getHostPorts:()Ljava/util/List;
     556: astore        32
     558: aload         31
     560: ifnonnull     571
     563: aload         32
     565: ifnull        583
     568: goto          581
     571: aload         31
     573: aload         32
     575: invokevirtual #348                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     578: ifne          583
     581: iconst_0
     582: ireturn
     583: aload_0
     584: invokevirtual #301                // Method getPrivileged:()Ljava/lang/Boolean;
     587: astore        33
     589: aload_2
     590: invokevirtual #301                // Method getPrivileged:()Ljava/lang/Boolean;
     593: astore        34
     595: aload         33
     597: ifnonnull     608
     600: aload         34
     602: ifnull        620
     605: goto          618
     608: aload         33
     610: aload         34
     612: invokevirtual #348                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     615: ifne          620
     618: iconst_0
     619: ireturn
     620: aload_0
     621: invokevirtual #305                // Method getReadOnlyRootFilesystem:()Ljava/lang/Boolean;
     624: astore        35
     626: aload_2
     627: invokevirtual #305                // Method getReadOnlyRootFilesystem:()Ljava/lang/Boolean;
     630: astore        36
     632: aload         35
     634: ifnonnull     645
     637: aload         36
     639: ifnull        657
     642: goto          655
     645: aload         35
     647: aload         36
     649: invokevirtual #348                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     652: ifne          657
     655: iconst_0
     656: ireturn
     657: aload_0
     658: invokevirtual #309                // Method getRequiredDropCapabilities:()Ljava/util/List;
     661: astore        37
     663: aload_2
     664: invokevirtual #309                // Method getRequiredDropCapabilities:()Ljava/util/List;
     667: astore        38
     669: aload         37
     671: ifnonnull     682
     674: aload         38
     676: ifnull        694
     679: goto          692
     682: aload         37
     684: aload         38
     686: invokevirtual #348                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     689: ifne          694
     692: iconst_0
     693: ireturn
     694: aload_0
     695: invokevirtual #313                // Method getRunAsGroup:()Lio/dekorate/deps/kubernetes/api/model/policy/RunAsGroupStrategyOptions;
     698: astore        39
     700: aload_2
     701: invokevirtual #313                // Method getRunAsGroup:()Lio/dekorate/deps/kubernetes/api/model/policy/RunAsGroupStrategyOptions;
     704: astore        40
     706: aload         39
     708: ifnonnull     719
     711: aload         40
     713: ifnull        731
     716: goto          729
     719: aload         39
     721: aload         40
     723: invokevirtual #348                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     726: ifne          731
     729: iconst_0
     730: ireturn
     731: aload_0
     732: invokevirtual #317                // Method getRunAsUser:()Lio/dekorate/deps/kubernetes/api/model/policy/KubernetesRunAsUserStrategyOptions;
     735: astore        41
     737: aload_2
     738: invokevirtual #317                // Method getRunAsUser:()Lio/dekorate/deps/kubernetes/api/model/policy/KubernetesRunAsUserStrategyOptions;
     741: astore        42
     743: aload         41
     745: ifnonnull     756
     748: aload         42
     750: ifnull        768
     753: goto          766
     756: aload         41
     758: aload         42
     760: invokevirtual #348                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     763: ifne          768
     766: iconst_0
     767: ireturn
     768: aload_0
     769: invokevirtual #321                // Method getRuntimeClass:()Lio/dekorate/deps/kubernetes/api/model/policy/RuntimeClassStrategyOptions;
     772: astore        43
     774: aload_2
     775: invokevirtual #321                // Method getRuntimeClass:()Lio/dekorate/deps/kubernetes/api/model/policy/RuntimeClassStrategyOptions;
     778: astore        44
     780: aload         43
     782: ifnonnull     793
     785: aload         44
     787: ifnull        805
     790: goto          803
     793: aload         43
     795: aload         44
     797: invokevirtual #348                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     800: ifne          805
     803: iconst_0
     804: ireturn
     805: aload_0
     806: invokevirtual #325                // Method getSeLinux:()Lio/dekorate/deps/kubernetes/api/model/policy/SELinuxStrategyOptions;
     809: astore        45
     811: aload_2
     812: invokevirtual #325                // Method getSeLinux:()Lio/dekorate/deps/kubernetes/api/model/policy/SELinuxStrategyOptions;
     815: astore        46
     817: aload         45
     819: ifnonnull     830
     822: aload         46
     824: ifnull        842
     827: goto          840
     830: aload         45
     832: aload         46
     834: invokevirtual #348                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     837: ifne          842
     840: iconst_0
     841: ireturn
     842: aload_0
     843: invokevirtual #329                // Method getSupplementalGroups:()Lio/dekorate/deps/kubernetes/api/model/policy/SupplementalGroupsStrategyOptions;
     846: astore        47
     848: aload_2
     849: invokevirtual #329                // Method getSupplementalGroups:()Lio/dekorate/deps/kubernetes/api/model/policy/SupplementalGroupsStrategyOptions;
     852: astore        48
     854: aload         47
     856: ifnonnull     867
     859: aload         48
     861: ifnull        879
     864: goto          877
     867: aload         47
     869: aload         48
     871: invokevirtual #348                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     874: ifne          879
     877: iconst_0
     878: ireturn
     879: aload_0
     880: invokevirtual #333                // Method getVolumes:()Ljava/util/List;
     883: astore        49
     885: aload_2
     886: invokevirtual #333                // Method getVolumes:()Ljava/util/List;
     889: astore        50
     891: aload         49
     893: ifnonnull     904
     896: aload         50
     898: ifnull        916
     901: goto          914
     904: aload         49
     906: aload         50
     908: invokevirtual #348                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     911: ifne          916
     914: iconst_0
     915: ireturn
     916: aload_0
     917: invokevirtual #337                // Method getAdditionalProperties:()Ljava/util/Map;
     920: astore        51
     922: aload_2
     923: invokevirtual #337                // Method getAdditionalProperties:()Ljava/util/Map;
     926: astore        52
     928: aload         51
     930: ifnonnull     941
     933: aload         52
     935: ifnull        953
     938: goto          951
     941: aload         51
     943: aload         52
     945: invokevirtual #348                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     948: ifne          953
     951: iconst_0
     952: ireturn
     953: iconst_1
     954: ireturn

  protected boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class io/dekorate/deps/kubernetes/api/model/policy/PodSecurityPolicySpec
       4: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: aload_0
       6: invokevirtual #238                // Method getAllowPrivilegeEscalation:()Ljava/lang/Boolean;
       9: astore_3
      10: iload_2
      11: bipush        59
      13: imul
      14: aload_3
      15: ifnonnull     23
      18: bipush        43
      20: goto          27
      23: aload_3
      24: invokevirtual #404                // Method java/lang/Object.hashCode:()I
      27: iadd
      28: istore_2
      29: aload_0
      30: invokevirtual #245                // Method getAllowedCSIDrivers:()Ljava/util/List;
      33: astore        4
      35: iload_2
      36: bipush        59
      38: imul
      39: aload         4
      41: ifnonnull     49
      44: bipush        43
      46: goto          54
      49: aload         4
      51: invokevirtual #404                // Method java/lang/Object.hashCode:()I
      54: iadd
      55: istore_2
      56: aload_0
      57: invokevirtual #249                // Method getAllowedCapabilities:()Ljava/util/List;
      60: astore        5
      62: iload_2
      63: bipush        59
      65: imul
      66: aload         5
      68: ifnonnull     76
      71: bipush        43
      73: goto          81
      76: aload         5
      78: invokevirtual #404                // Method java/lang/Object.hashCode:()I
      81: iadd
      82: istore_2
      83: aload_0
      84: invokevirtual #253                // Method getAllowedFlexVolumes:()Ljava/util/List;
      87: astore        6
      89: iload_2
      90: bipush        59
      92: imul
      93: aload         6
      95: ifnonnull     103
      98: bipush        43
     100: goto          108
     103: aload         6
     105: invokevirtual #404                // Method java/lang/Object.hashCode:()I
     108: iadd
     109: istore_2
     110: aload_0
     111: invokevirtual #257                // Method getAllowedHostPaths:()Ljava/util/List;
     114: astore        7
     116: iload_2
     117: bipush        59
     119: imul
     120: aload         7
     122: ifnonnull     130
     125: bipush        43
     127: goto          135
     130: aload         7
     132: invokevirtual #404                // Method java/lang/Object.hashCode:()I
     135: iadd
     136: istore_2
     137: aload_0
     138: invokevirtual #261                // Method getAllowedProcMountTypes:()Ljava/util/List;
     141: astore        8
     143: iload_2
     144: bipush        59
     146: imul
     147: aload         8
     149: ifnonnull     157
     152: bipush        43
     154: goto          162
     157: aload         8
     159: invokevirtual #404                // Method java/lang/Object.hashCode:()I
     162: iadd
     163: istore_2
     164: aload_0
     165: invokevirtual #265                // Method getAllowedUnsafeSysctls:()Ljava/util/List;
     168: astore        9
     170: iload_2
     171: bipush        59
     173: imul
     174: aload         9
     176: ifnonnull     184
     179: bipush        43
     181: goto          189
     184: aload         9
     186: invokevirtual #404                // Method java/lang/Object.hashCode:()I
     189: iadd
     190: istore_2
     191: aload_0
     192: invokevirtual #269                // Method getDefaultAddCapabilities:()Ljava/util/List;
     195: astore        10
     197: iload_2
     198: bipush        59
     200: imul
     201: aload         10
     203: ifnonnull     211
     206: bipush        43
     208: goto          216
     211: aload         10
     213: invokevirtual #404                // Method java/lang/Object.hashCode:()I
     216: iadd
     217: istore_2
     218: aload_0
     219: invokevirtual #273                // Method getDefaultAllowPrivilegeEscalation:()Ljava/lang/Boolean;
     222: astore        11
     224: iload_2
     225: bipush        59
     227: imul
     228: aload         11
     230: ifnonnull     238
     233: bipush        43
     235: goto          243
     238: aload         11
     240: invokevirtual #404                // Method java/lang/Object.hashCode:()I
     243: iadd
     244: istore_2
     245: aload_0
     246: invokevirtual #277                // Method getForbiddenSysctls:()Ljava/util/List;
     249: astore        12
     251: iload_2
     252: bipush        59
     254: imul
     255: aload         12
     257: ifnonnull     265
     260: bipush        43
     262: goto          270
     265: aload         12
     267: invokevirtual #404                // Method java/lang/Object.hashCode:()I
     270: iadd
     271: istore_2
     272: aload_0
     273: invokevirtual #281                // Method getFsGroup:()Lio/dekorate/deps/kubernetes/api/model/policy/FSGroupStrategyOptions;
     276: astore        13
     278: iload_2
     279: bipush        59
     281: imul
     282: aload         13
     284: ifnonnull     292
     287: bipush        43
     289: goto          297
     292: aload         13
     294: invokevirtual #404                // Method java/lang/Object.hashCode:()I
     297: iadd
     298: istore_2
     299: aload_0
     300: invokevirtual #285                // Method getHostIPC:()Ljava/lang/Boolean;
     303: astore        14
     305: iload_2
     306: bipush        59
     308: imul
     309: aload         14
     311: ifnonnull     319
     314: bipush        43
     316: goto          324
     319: aload         14
     321: invokevirtual #404                // Method java/lang/Object.hashCode:()I
     324: iadd
     325: istore_2
     326: aload_0
     327: invokevirtual #289                // Method getHostNetwork:()Ljava/lang/Boolean;
     330: astore        15
     332: iload_2
     333: bipush        59
     335: imul
     336: aload         15
     338: ifnonnull     346
     341: bipush        43
     343: goto          351
     346: aload         15
     348: invokevirtual #404                // Method java/lang/Object.hashCode:()I
     351: iadd
     352: istore_2
     353: aload_0
     354: invokevirtual #293                // Method getHostPID:()Ljava/lang/Boolean;
     357: astore        16
     359: iload_2
     360: bipush        59
     362: imul
     363: aload         16
     365: ifnonnull     373
     368: bipush        43
     370: goto          378
     373: aload         16
     375: invokevirtual #404                // Method java/lang/Object.hashCode:()I
     378: iadd
     379: istore_2
     380: aload_0
     381: invokevirtual #297                // Method getHostPorts:()Ljava/util/List;
     384: astore        17
     386: iload_2
     387: bipush        59
     389: imul
     390: aload         17
     392: ifnonnull     400
     395: bipush        43
     397: goto          405
     400: aload         17
     402: invokevirtual #404                // Method java/lang/Object.hashCode:()I
     405: iadd
     406: istore_2
     407: aload_0
     408: invokevirtual #301                // Method getPrivileged:()Ljava/lang/Boolean;
     411: astore        18
     413: iload_2
     414: bipush        59
     416: imul
     417: aload         18
     419: ifnonnull     427
     422: bipush        43
     424: goto          432
     427: aload         18
     429: invokevirtual #404                // Method java/lang/Object.hashCode:()I
     432: iadd
     433: istore_2
     434: aload_0
     435: invokevirtual #305                // Method getReadOnlyRootFilesystem:()Ljava/lang/Boolean;
     438: astore        19
     440: iload_2
     441: bipush        59
     443: imul
     444: aload         19
     446: ifnonnull     454
     449: bipush        43
     451: goto          459
     454: aload         19
     456: invokevirtual #404                // Method java/lang/Object.hashCode:()I
     459: iadd
     460: istore_2
     461: aload_0
     462: invokevirtual #309                // Method getRequiredDropCapabilities:()Ljava/util/List;
     465: astore        20
     467: iload_2
     468: bipush        59
     470: imul
     471: aload         20
     473: ifnonnull     481
     476: bipush        43
     478: goto          486
     481: aload         20
     483: invokevirtual #404                // Method java/lang/Object.hashCode:()I
     486: iadd
     487: istore_2
     488: aload_0
     489: invokevirtual #313                // Method getRunAsGroup:()Lio/dekorate/deps/kubernetes/api/model/policy/RunAsGroupStrategyOptions;
     492: astore        21
     494: iload_2
     495: bipush        59
     497: imul
     498: aload         21
     500: ifnonnull     508
     503: bipush        43
     505: goto          513
     508: aload         21
     510: invokevirtual #404                // Method java/lang/Object.hashCode:()I
     513: iadd
     514: istore_2
     515: aload_0
     516: invokevirtual #317                // Method getRunAsUser:()Lio/dekorate/deps/kubernetes/api/model/policy/KubernetesRunAsUserStrategyOptions;
     519: astore        22
     521: iload_2
     522: bipush        59
     524: imul
     525: aload         22
     527: ifnonnull     535
     530: bipush        43
     532: goto          540
     535: aload         22
     537: invokevirtual #404                // Method java/lang/Object.hashCode:()I
     540: iadd
     541: istore_2
     542: aload_0
     543: invokevirtual #321                // Method getRuntimeClass:()Lio/dekorate/deps/kubernetes/api/model/policy/RuntimeClassStrategyOptions;
     546: astore        23
     548: iload_2
     549: bipush        59
     551: imul
     552: aload         23
     554: ifnonnull     562
     557: bipush        43
     559: goto          567
     562: aload         23
     564: invokevirtual #404                // Method java/lang/Object.hashCode:()I
     567: iadd
     568: istore_2
     569: aload_0
     570: invokevirtual #325                // Method getSeLinux:()Lio/dekorate/deps/kubernetes/api/model/policy/SELinuxStrategyOptions;
     573: astore        24
     575: iload_2
     576: bipush        59
     578: imul
     579: aload         24
     581: ifnonnull     589
     584: bipush        43
     586: goto          594
     589: aload         24
     591: invokevirtual #404                // Method java/lang/Object.hashCode:()I
     594: iadd
     595: istore_2
     596: aload_0
     597: invokevirtual #329                // Method getSupplementalGroups:()Lio/dekorate/deps/kubernetes/api/model/policy/SupplementalGroupsStrategyOptions;
     600: astore        25
     602: iload_2
     603: bipush        59
     605: imul
     606: aload         25
     608: ifnonnull     616
     611: bipush        43
     613: goto          621
     616: aload         25
     618: invokevirtual #404                // Method java/lang/Object.hashCode:()I
     621: iadd
     622: istore_2
     623: aload_0
     624: invokevirtual #333                // Method getVolumes:()Ljava/util/List;
     627: astore        26
     629: iload_2
     630: bipush        59
     632: imul
     633: aload         26
     635: ifnonnull     643
     638: bipush        43
     640: goto          648
     643: aload         26
     645: invokevirtual #404                // Method java/lang/Object.hashCode:()I
     648: iadd
     649: istore_2
     650: aload_0
     651: invokevirtual #337                // Method getAdditionalProperties:()Ljava/util/Map;
     654: astore        27
     656: iload_2
     657: bipush        59
     659: imul
     660: aload         27
     662: ifnonnull     670
     665: bipush        43
     667: goto          675
     670: aload         27
     672: invokevirtual #404                // Method java/lang/Object.hashCode:()I
     675: iadd
     676: istore_2
     677: iload_2
     678: ireturn
}
