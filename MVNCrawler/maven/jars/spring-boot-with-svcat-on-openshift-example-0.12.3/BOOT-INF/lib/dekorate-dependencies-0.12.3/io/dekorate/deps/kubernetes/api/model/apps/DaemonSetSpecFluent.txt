Compiled from "DaemonSetSpecFluent.java"
public interface io.dekorate.deps.kubernetes.api.model.apps.DaemonSetSpecFluent<A extends io.dekorate.deps.kubernetes.api.model.apps.DaemonSetSpecFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.Integer getMinReadySeconds();

  public abstract A withMinReadySeconds(java.lang.Integer);

  public abstract java.lang.Boolean hasMinReadySeconds();

  public abstract java.lang.Integer getRevisionHistoryLimit();

  public abstract A withRevisionHistoryLimit(java.lang.Integer);

  public abstract java.lang.Boolean hasRevisionHistoryLimit();

  public abstract io.dekorate.deps.kubernetes.api.model.LabelSelector getSelector();

  public abstract io.dekorate.deps.kubernetes.api.model.LabelSelector buildSelector();

  public abstract A withSelector(io.dekorate.deps.kubernetes.api.model.LabelSelector);

  public abstract java.lang.Boolean hasSelector();

  public abstract io.dekorate.deps.kubernetes.api.model.apps.DaemonSetSpecFluent$SelectorNested<A> withNewSelector();

  public abstract io.dekorate.deps.kubernetes.api.model.apps.DaemonSetSpecFluent$SelectorNested<A> withNewSelectorLike(io.dekorate.deps.kubernetes.api.model.LabelSelector);

  public abstract io.dekorate.deps.kubernetes.api.model.apps.DaemonSetSpecFluent$SelectorNested<A> editSelector();

  public abstract io.dekorate.deps.kubernetes.api.model.apps.DaemonSetSpecFluent$SelectorNested<A> editOrNewSelector();

  public abstract io.dekorate.deps.kubernetes.api.model.apps.DaemonSetSpecFluent$SelectorNested<A> editOrNewSelectorLike(io.dekorate.deps.kubernetes.api.model.LabelSelector);

  public abstract io.dekorate.deps.kubernetes.api.model.PodTemplateSpec getTemplate();

  public abstract io.dekorate.deps.kubernetes.api.model.PodTemplateSpec buildTemplate();

  public abstract A withTemplate(io.dekorate.deps.kubernetes.api.model.PodTemplateSpec);

  public abstract java.lang.Boolean hasTemplate();

  public abstract io.dekorate.deps.kubernetes.api.model.apps.DaemonSetSpecFluent$TemplateNested<A> withNewTemplate();

  public abstract io.dekorate.deps.kubernetes.api.model.apps.DaemonSetSpecFluent$TemplateNested<A> withNewTemplateLike(io.dekorate.deps.kubernetes.api.model.PodTemplateSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.apps.DaemonSetSpecFluent$TemplateNested<A> editTemplate();

  public abstract io.dekorate.deps.kubernetes.api.model.apps.DaemonSetSpecFluent$TemplateNested<A> editOrNewTemplate();

  public abstract io.dekorate.deps.kubernetes.api.model.apps.DaemonSetSpecFluent$TemplateNested<A> editOrNewTemplateLike(io.dekorate.deps.kubernetes.api.model.PodTemplateSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.apps.DaemonSetUpdateStrategy getUpdateStrategy();

  public abstract io.dekorate.deps.kubernetes.api.model.apps.DaemonSetUpdateStrategy buildUpdateStrategy();

  public abstract A withUpdateStrategy(io.dekorate.deps.kubernetes.api.model.apps.DaemonSetUpdateStrategy);

  public abstract java.lang.Boolean hasUpdateStrategy();

  public abstract io.dekorate.deps.kubernetes.api.model.apps.DaemonSetSpecFluent$UpdateStrategyNested<A> withNewUpdateStrategy();

  public abstract io.dekorate.deps.kubernetes.api.model.apps.DaemonSetSpecFluent$UpdateStrategyNested<A> withNewUpdateStrategyLike(io.dekorate.deps.kubernetes.api.model.apps.DaemonSetUpdateStrategy);

  public abstract io.dekorate.deps.kubernetes.api.model.apps.DaemonSetSpecFluent$UpdateStrategyNested<A> editUpdateStrategy();

  public abstract io.dekorate.deps.kubernetes.api.model.apps.DaemonSetSpecFluent$UpdateStrategyNested<A> editOrNewUpdateStrategy();

  public abstract io.dekorate.deps.kubernetes.api.model.apps.DaemonSetSpecFluent$UpdateStrategyNested<A> editOrNewUpdateStrategyLike(io.dekorate.deps.kubernetes.api.model.apps.DaemonSetUpdateStrategy);
}
