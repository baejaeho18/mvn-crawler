Compiled from "MetricSpecFluent.java"
public interface io.dekorate.deps.kubernetes.api.model.MetricSpecFluent<A extends io.dekorate.deps.kubernetes.api.model.MetricSpecFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract io.dekorate.deps.kubernetes.api.model.ExternalMetricSource getExternal();

  public abstract io.dekorate.deps.kubernetes.api.model.ExternalMetricSource buildExternal();

  public abstract A withExternal(io.dekorate.deps.kubernetes.api.model.ExternalMetricSource);

  public abstract java.lang.Boolean hasExternal();

  public abstract io.dekorate.deps.kubernetes.api.model.MetricSpecFluent$ExternalNested<A> withNewExternal();

  public abstract io.dekorate.deps.kubernetes.api.model.MetricSpecFluent$ExternalNested<A> withNewExternalLike(io.dekorate.deps.kubernetes.api.model.ExternalMetricSource);

  public abstract io.dekorate.deps.kubernetes.api.model.MetricSpecFluent$ExternalNested<A> editExternal();

  public abstract io.dekorate.deps.kubernetes.api.model.MetricSpecFluent$ExternalNested<A> editOrNewExternal();

  public abstract io.dekorate.deps.kubernetes.api.model.MetricSpecFluent$ExternalNested<A> editOrNewExternalLike(io.dekorate.deps.kubernetes.api.model.ExternalMetricSource);

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectMetricSource getObject();

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectMetricSource buildObject();

  public abstract A withObject(io.dekorate.deps.kubernetes.api.model.ObjectMetricSource);

  public abstract java.lang.Boolean hasObject();

  public abstract io.dekorate.deps.kubernetes.api.model.MetricSpecFluent$ObjectNested<A> withNewObject();

  public abstract io.dekorate.deps.kubernetes.api.model.MetricSpecFluent$ObjectNested<A> withNewObjectLike(io.dekorate.deps.kubernetes.api.model.ObjectMetricSource);

  public abstract io.dekorate.deps.kubernetes.api.model.MetricSpecFluent$ObjectNested<A> editObject();

  public abstract io.dekorate.deps.kubernetes.api.model.MetricSpecFluent$ObjectNested<A> editOrNewObject();

  public abstract io.dekorate.deps.kubernetes.api.model.MetricSpecFluent$ObjectNested<A> editOrNewObjectLike(io.dekorate.deps.kubernetes.api.model.ObjectMetricSource);

  public abstract io.dekorate.deps.kubernetes.api.model.PodsMetricSource getPods();

  public abstract io.dekorate.deps.kubernetes.api.model.PodsMetricSource buildPods();

  public abstract A withPods(io.dekorate.deps.kubernetes.api.model.PodsMetricSource);

  public abstract java.lang.Boolean hasPods();

  public abstract io.dekorate.deps.kubernetes.api.model.MetricSpecFluent$PodsNested<A> withNewPods();

  public abstract io.dekorate.deps.kubernetes.api.model.MetricSpecFluent$PodsNested<A> withNewPodsLike(io.dekorate.deps.kubernetes.api.model.PodsMetricSource);

  public abstract io.dekorate.deps.kubernetes.api.model.MetricSpecFluent$PodsNested<A> editPods();

  public abstract io.dekorate.deps.kubernetes.api.model.MetricSpecFluent$PodsNested<A> editOrNewPods();

  public abstract io.dekorate.deps.kubernetes.api.model.MetricSpecFluent$PodsNested<A> editOrNewPodsLike(io.dekorate.deps.kubernetes.api.model.PodsMetricSource);

  public abstract io.dekorate.deps.kubernetes.api.model.ResourceMetricSource getResource();

  public abstract io.dekorate.deps.kubernetes.api.model.ResourceMetricSource buildResource();

  public abstract A withResource(io.dekorate.deps.kubernetes.api.model.ResourceMetricSource);

  public abstract java.lang.Boolean hasResource();

  public abstract io.dekorate.deps.kubernetes.api.model.MetricSpecFluent$ResourceNested<A> withNewResource();

  public abstract io.dekorate.deps.kubernetes.api.model.MetricSpecFluent$ResourceNested<A> withNewResourceLike(io.dekorate.deps.kubernetes.api.model.ResourceMetricSource);

  public abstract io.dekorate.deps.kubernetes.api.model.MetricSpecFluent$ResourceNested<A> editResource();

  public abstract io.dekorate.deps.kubernetes.api.model.MetricSpecFluent$ResourceNested<A> editOrNewResource();

  public abstract io.dekorate.deps.kubernetes.api.model.MetricSpecFluent$ResourceNested<A> editOrNewResourceLike(io.dekorate.deps.kubernetes.api.model.ResourceMetricSource);

  public abstract java.lang.String getType();

  public abstract A withType(java.lang.String);

  public abstract java.lang.Boolean hasType();

  public abstract A withNewType(java.lang.String);

  public abstract A withNewType(java.lang.StringBuilder);

  public abstract A withNewType(java.lang.StringBuffer);
}
