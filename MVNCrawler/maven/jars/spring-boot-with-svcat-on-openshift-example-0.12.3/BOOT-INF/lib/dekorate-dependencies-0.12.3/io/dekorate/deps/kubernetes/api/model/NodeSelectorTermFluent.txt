Compiled from "NodeSelectorTermFluent.java"
public interface io.dekorate.deps.kubernetes.api.model.NodeSelectorTermFluent<A extends io.dekorate.deps.kubernetes.api.model.NodeSelectorTermFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract A addToMatchExpressions(int, io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirement);

  public abstract A setToMatchExpressions(int, io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirement);

  public abstract A addToMatchExpressions(io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirement...);

  public abstract A addAllToMatchExpressions(java.util.Collection<io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirement>);

  public abstract A removeFromMatchExpressions(io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirement...);

  public abstract A removeAllFromMatchExpressions(java.util.Collection<io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirement>);

  public abstract A removeMatchingFromMatchExpressions(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirementBuilder>);

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirement> getMatchExpressions();

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirement> buildMatchExpressions();

  public abstract io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirement buildMatchExpression(int);

  public abstract io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirement buildFirstMatchExpression();

  public abstract io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirement buildLastMatchExpression();

  public abstract io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirement buildMatchingMatchExpression(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirementBuilder>);

  public abstract java.lang.Boolean hasMatchingMatchExpression(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirementBuilder>);

  public abstract A withMatchExpressions(java.util.List<io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirement>);

  public abstract A withMatchExpressions(io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirement...);

  public abstract java.lang.Boolean hasMatchExpressions();

  public abstract io.dekorate.deps.kubernetes.api.model.NodeSelectorTermFluent$MatchExpressionsNested<A> addNewMatchExpression();

  public abstract io.dekorate.deps.kubernetes.api.model.NodeSelectorTermFluent$MatchExpressionsNested<A> addNewMatchExpressionLike(io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirement);

  public abstract io.dekorate.deps.kubernetes.api.model.NodeSelectorTermFluent$MatchExpressionsNested<A> setNewMatchExpressionLike(int, io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirement);

  public abstract io.dekorate.deps.kubernetes.api.model.NodeSelectorTermFluent$MatchExpressionsNested<A> editMatchExpression(int);

  public abstract io.dekorate.deps.kubernetes.api.model.NodeSelectorTermFluent$MatchExpressionsNested<A> editFirstMatchExpression();

  public abstract io.dekorate.deps.kubernetes.api.model.NodeSelectorTermFluent$MatchExpressionsNested<A> editLastMatchExpression();

  public abstract io.dekorate.deps.kubernetes.api.model.NodeSelectorTermFluent$MatchExpressionsNested<A> editMatchingMatchExpression(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirementBuilder>);

  public abstract A addToMatchFields(int, io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirement);

  public abstract A setToMatchFields(int, io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirement);

  public abstract A addToMatchFields(io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirement...);

  public abstract A addAllToMatchFields(java.util.Collection<io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirement>);

  public abstract A removeFromMatchFields(io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirement...);

  public abstract A removeAllFromMatchFields(java.util.Collection<io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirement>);

  public abstract A removeMatchingFromMatchFields(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirementBuilder>);

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirement> getMatchFields();

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirement> buildMatchFields();

  public abstract io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirement buildMatchField(int);

  public abstract io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirement buildFirstMatchField();

  public abstract io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirement buildLastMatchField();

  public abstract io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirement buildMatchingMatchField(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirementBuilder>);

  public abstract java.lang.Boolean hasMatchingMatchField(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirementBuilder>);

  public abstract A withMatchFields(java.util.List<io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirement>);

  public abstract A withMatchFields(io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirement...);

  public abstract java.lang.Boolean hasMatchFields();

  public abstract io.dekorate.deps.kubernetes.api.model.NodeSelectorTermFluent$MatchFieldsNested<A> addNewMatchField();

  public abstract io.dekorate.deps.kubernetes.api.model.NodeSelectorTermFluent$MatchFieldsNested<A> addNewMatchFieldLike(io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirement);

  public abstract io.dekorate.deps.kubernetes.api.model.NodeSelectorTermFluent$MatchFieldsNested<A> setNewMatchFieldLike(int, io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirement);

  public abstract io.dekorate.deps.kubernetes.api.model.NodeSelectorTermFluent$MatchFieldsNested<A> editMatchField(int);

  public abstract io.dekorate.deps.kubernetes.api.model.NodeSelectorTermFluent$MatchFieldsNested<A> editFirstMatchField();

  public abstract io.dekorate.deps.kubernetes.api.model.NodeSelectorTermFluent$MatchFieldsNested<A> editLastMatchField();

  public abstract io.dekorate.deps.kubernetes.api.model.NodeSelectorTermFluent$MatchFieldsNested<A> editMatchingMatchField(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirementBuilder>);
}
