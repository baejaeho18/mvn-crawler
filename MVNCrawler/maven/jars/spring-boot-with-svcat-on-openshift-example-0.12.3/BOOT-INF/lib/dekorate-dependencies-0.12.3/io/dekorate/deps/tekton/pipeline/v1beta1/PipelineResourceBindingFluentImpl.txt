Compiled from "PipelineResourceBindingFluentImpl.java"
public class io.dekorate.deps.tekton.pipeline.v1beta1.PipelineResourceBindingFluentImpl<A extends io.dekorate.deps.tekton.pipeline.v1beta1.PipelineResourceBindingFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.BaseFluent<A> implements io.dekorate.deps.tekton.pipeline.v1beta1.PipelineResourceBindingFluent<A> {
  private java.lang.String name;

  private io.dekorate.deps.tekton.pipeline.v1beta1.PipelineResourceRefBuilder resourceRef;

  private io.dekorate.deps.tekton.resource.v1alpha1.PipelineResourceSpecBuilder resourceSpec;

  public io.dekorate.deps.tekton.pipeline.v1beta1.PipelineResourceBindingFluentImpl();
    Code:
       0: aload_0
       1: invokespecial #30                 // Method io/dekorate/deps/kubernetes/api/builder/BaseFluent."<init>":()V
       4: return

  public io.dekorate.deps.tekton.pipeline.v1beta1.PipelineResourceBindingFluentImpl(io.dekorate.deps.tekton.pipeline.v1beta1.PipelineResourceBinding);
    Code:
       0: aload_0
       1: invokespecial #30                 // Method io/dekorate/deps/kubernetes/api/builder/BaseFluent."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #40                 // Method io/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceBinding.getName:()Ljava/lang/String;
       9: invokevirtual #44                 // Method withName:(Ljava/lang/String;)Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceBindingFluent;
      12: pop
      13: aload_0
      14: aload_1
      15: invokevirtual #48                 // Method io/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceBinding.getResourceRef:()Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRef;
      18: invokevirtual #52                 // Method withResourceRef:(Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRef;)Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceBindingFluent;
      21: pop
      22: aload_0
      23: aload_1
      24: invokevirtual #56                 // Method io/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceBinding.getResourceSpec:()Lio/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpec;
      27: invokevirtual #60                 // Method withResourceSpec:(Lio/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpec;)Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceBindingFluent;
      30: pop
      31: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #64                 // Field name:Ljava/lang/String;
       4: areturn

  public A withName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #64                 // Field name:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasName();
    Code:
       0: aload_0
       1: getfield      #64                 // Field name:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #73                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withNewName(java.lang.String);
    Code:
       0: aload_0
       1: new           #76                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #79                 // Method java/lang/String."<init>":(Ljava/lang/String;)V
       9: invokevirtual #44                 // Method withName:(Ljava/lang/String;)Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceBindingFluent;
      12: areturn

  public A withNewName(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: new           #76                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #85                 // Method java/lang/String."<init>":(Ljava/lang/StringBuilder;)V
       9: invokevirtual #44                 // Method withName:(Ljava/lang/String;)Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceBindingFluent;
      12: areturn

  public A withNewName(java.lang.StringBuffer);
    Code:
       0: aload_0
       1: new           #76                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #91                 // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
       9: invokevirtual #44                 // Method withName:(Ljava/lang/String;)Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceBindingFluent;
      12: areturn

  public io.dekorate.deps.tekton.pipeline.v1beta1.PipelineResourceRef getResourceRef();
    Code:
       0: aload_0
       1: getfield      #95                 // Field resourceRef:Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRefBuilder;
       4: ifnull        17
       7: aload_0
       8: getfield      #95                 // Field resourceRef:Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRefBuilder;
      11: invokevirtual #100                // Method io/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRefBuilder.build:()Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRef;
      14: goto          18
      17: aconst_null
      18: areturn

  public io.dekorate.deps.tekton.pipeline.v1beta1.PipelineResourceRef buildResourceRef();
    Code:
       0: aload_0
       1: getfield      #95                 // Field resourceRef:Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRefBuilder;
       4: ifnull        17
       7: aload_0
       8: getfield      #95                 // Field resourceRef:Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRefBuilder;
      11: invokevirtual #100                // Method io/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRefBuilder.build:()Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRef;
      14: goto          18
      17: aconst_null
      18: areturn

  public A withResourceRef(io.dekorate.deps.tekton.pipeline.v1beta1.PipelineResourceRef);
    Code:
       0: aload_0
       1: getfield      #108                // Field _visitables:Lio/dekorate/deps/kubernetes/api/builder/VisitableMap;
       4: ldc           #109                // String resourceRef
       6: invokevirtual #115                // Method io/dekorate/deps/kubernetes/api/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
       9: aload_0
      10: getfield      #95                 // Field resourceRef:Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRefBuilder;
      13: invokeinterface #121,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      18: pop
      19: aload_1
      20: ifnull        54
      23: aload_0
      24: new           #97                 // class io/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRefBuilder
      27: dup
      28: aload_1
      29: invokespecial #124                // Method io/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRefBuilder."<init>":(Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRef;)V
      32: putfield      #95                 // Field resourceRef:Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRefBuilder;
      35: aload_0
      36: getfield      #108                // Field _visitables:Lio/dekorate/deps/kubernetes/api/builder/VisitableMap;
      39: ldc           #109                // String resourceRef
      41: invokevirtual #115                // Method io/dekorate/deps/kubernetes/api/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      44: aload_0
      45: getfield      #95                 // Field resourceRef:Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRefBuilder;
      48: invokeinterface #127,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      53: pop
      54: aload_0
      55: areturn

  public java.lang.Boolean hasResourceRef();
    Code:
       0: aload_0
       1: getfield      #95                 // Field resourceRef:Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRefBuilder;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #73                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withNewResourceRef(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: new           #102                // class io/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRef
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #135                // Method io/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRef."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      10: invokevirtual #52                 // Method withResourceRef:(Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRef;)Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceBindingFluent;
      13: areturn

  public io.dekorate.deps.tekton.pipeline.v1beta1.PipelineResourceBindingFluent$ResourceRefNested<A> withNewResourceRef();
    Code:
       0: new           #13                 // class io/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceBindingFluentImpl$ResourceRefNestedImpl
       3: dup
       4: aload_0
       5: invokespecial #141                // Method io/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceBindingFluentImpl$ResourceRefNestedImpl."<init>":(Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceBindingFluentImpl;)V
       8: areturn

  public io.dekorate.deps.tekton.pipeline.v1beta1.PipelineResourceBindingFluent$ResourceRefNested<A> withNewResourceRefLike(io.dekorate.deps.tekton.pipeline.v1beta1.PipelineResourceRef);
    Code:
       0: new           #13                 // class io/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceBindingFluentImpl$ResourceRefNestedImpl
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #147                // Method io/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceBindingFluentImpl$ResourceRefNestedImpl."<init>":(Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceBindingFluentImpl;Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRef;)V
       9: areturn

  public io.dekorate.deps.tekton.pipeline.v1beta1.PipelineResourceBindingFluent$ResourceRefNested<A> editResourceRef();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #150                // Method getResourceRef:()Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRef;
       5: invokevirtual #152                // Method withNewResourceRefLike:(Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRef;)Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceBindingFluent$ResourceRefNested;
       8: areturn

  public io.dekorate.deps.tekton.pipeline.v1beta1.PipelineResourceBindingFluent$ResourceRefNested<A> editOrNewResourceRef();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #150                // Method getResourceRef:()Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRef;
       5: ifnull        15
       8: aload_0
       9: invokevirtual #150                // Method getResourceRef:()Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRef;
      12: goto          25
      15: new           #97                 // class io/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRefBuilder
      18: dup
      19: invokespecial #154                // Method io/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRefBuilder."<init>":()V
      22: invokevirtual #100                // Method io/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRefBuilder.build:()Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRef;
      25: invokevirtual #152                // Method withNewResourceRefLike:(Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRef;)Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceBindingFluent$ResourceRefNested;
      28: areturn

  public io.dekorate.deps.tekton.pipeline.v1beta1.PipelineResourceBindingFluent$ResourceRefNested<A> editOrNewResourceRefLike(io.dekorate.deps.tekton.pipeline.v1beta1.PipelineResourceRef);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #150                // Method getResourceRef:()Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRef;
       5: ifnull        15
       8: aload_0
       9: invokevirtual #150                // Method getResourceRef:()Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRef;
      12: goto          16
      15: aload_1
      16: invokevirtual #152                // Method withNewResourceRefLike:(Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRef;)Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceBindingFluent$ResourceRefNested;
      19: areturn

  public io.dekorate.deps.tekton.resource.v1alpha1.PipelineResourceSpec getResourceSpec();
    Code:
       0: aload_0
       1: getfield      #157                // Field resourceSpec:Lio/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpecBuilder;
       4: ifnull        17
       7: aload_0
       8: getfield      #157                // Field resourceSpec:Lio/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpecBuilder;
      11: invokevirtual #161                // Method io/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpecBuilder.build:()Lio/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpec;
      14: goto          18
      17: aconst_null
      18: areturn

  public io.dekorate.deps.tekton.resource.v1alpha1.PipelineResourceSpec buildResourceSpec();
    Code:
       0: aload_0
       1: getfield      #157                // Field resourceSpec:Lio/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpecBuilder;
       4: ifnull        17
       7: aload_0
       8: getfield      #157                // Field resourceSpec:Lio/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpecBuilder;
      11: invokevirtual #161                // Method io/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpecBuilder.build:()Lio/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpec;
      14: goto          18
      17: aconst_null
      18: areturn

  public A withResourceSpec(io.dekorate.deps.tekton.resource.v1alpha1.PipelineResourceSpec);
    Code:
       0: aload_0
       1: getfield      #108                // Field _visitables:Lio/dekorate/deps/kubernetes/api/builder/VisitableMap;
       4: ldc           #166                // String resourceSpec
       6: invokevirtual #115                // Method io/dekorate/deps/kubernetes/api/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
       9: aload_0
      10: getfield      #157                // Field resourceSpec:Lio/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpecBuilder;
      13: invokeinterface #121,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      18: pop
      19: aload_1
      20: ifnull        54
      23: aload_0
      24: new           #159                // class io/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpecBuilder
      27: dup
      28: aload_1
      29: invokespecial #169                // Method io/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpecBuilder."<init>":(Lio/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpec;)V
      32: putfield      #157                // Field resourceSpec:Lio/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpecBuilder;
      35: aload_0
      36: getfield      #108                // Field _visitables:Lio/dekorate/deps/kubernetes/api/builder/VisitableMap;
      39: ldc           #166                // String resourceSpec
      41: invokevirtual #115                // Method io/dekorate/deps/kubernetes/api/builder/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      44: aload_0
      45: getfield      #157                // Field resourceSpec:Lio/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpecBuilder;
      48: invokeinterface #127,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      53: pop
      54: aload_0
      55: areturn

  public java.lang.Boolean hasResourceSpec();
    Code:
       0: aload_0
       1: getfield      #157                // Field resourceSpec:Lio/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpecBuilder;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #73                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public io.dekorate.deps.tekton.pipeline.v1beta1.PipelineResourceBindingFluent$ResourceSpecNested<A> withNewResourceSpec();
    Code:
       0: new           #10                 // class io/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceBindingFluentImpl$ResourceSpecNestedImpl
       3: dup
       4: aload_0
       5: invokespecial #175                // Method io/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceBindingFluentImpl$ResourceSpecNestedImpl."<init>":(Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceBindingFluentImpl;)V
       8: areturn

  public io.dekorate.deps.tekton.pipeline.v1beta1.PipelineResourceBindingFluent$ResourceSpecNested<A> withNewResourceSpecLike(io.dekorate.deps.tekton.resource.v1alpha1.PipelineResourceSpec);
    Code:
       0: new           #10                 // class io/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceBindingFluentImpl$ResourceSpecNestedImpl
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #181                // Method io/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceBindingFluentImpl$ResourceSpecNestedImpl."<init>":(Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceBindingFluentImpl;Lio/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpec;)V
       9: areturn

  public io.dekorate.deps.tekton.pipeline.v1beta1.PipelineResourceBindingFluent$ResourceSpecNested<A> editResourceSpec();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #183                // Method getResourceSpec:()Lio/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpec;
       5: invokevirtual #185                // Method withNewResourceSpecLike:(Lio/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpec;)Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceBindingFluent$ResourceSpecNested;
       8: areturn

  public io.dekorate.deps.tekton.pipeline.v1beta1.PipelineResourceBindingFluent$ResourceSpecNested<A> editOrNewResourceSpec();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #183                // Method getResourceSpec:()Lio/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpec;
       5: ifnull        15
       8: aload_0
       9: invokevirtual #183                // Method getResourceSpec:()Lio/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpec;
      12: goto          25
      15: new           #159                // class io/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpecBuilder
      18: dup
      19: invokespecial #187                // Method io/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpecBuilder."<init>":()V
      22: invokevirtual #161                // Method io/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpecBuilder.build:()Lio/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpec;
      25: invokevirtual #185                // Method withNewResourceSpecLike:(Lio/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpec;)Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceBindingFluent$ResourceSpecNested;
      28: areturn

  public io.dekorate.deps.tekton.pipeline.v1beta1.PipelineResourceBindingFluent$ResourceSpecNested<A> editOrNewResourceSpecLike(io.dekorate.deps.tekton.resource.v1alpha1.PipelineResourceSpec);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #183                // Method getResourceSpec:()Lio/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpec;
       5: ifnull        15
       8: aload_0
       9: invokevirtual #183                // Method getResourceSpec:()Lio/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpec;
      12: goto          16
      15: aload_1
      16: invokevirtual #185                // Method withNewResourceSpecLike:(Lio/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpec;)Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceBindingFluent$ResourceSpecNested;
      19: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #195                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #195                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #2                  // class io/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceBindingFluentImpl
      28: astore_2
      29: aload_0
      30: getfield      #64                 // Field name:Ljava/lang/String;
      33: ifnull        53
      36: aload_0
      37: getfield      #64                 // Field name:Ljava/lang/String;
      40: aload_2
      41: getfield      #64                 // Field name:Ljava/lang/String;
      44: invokevirtual #197                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      47: ifne          62
      50: goto          60
      53: aload_2
      54: getfield      #64                 // Field name:Ljava/lang/String;
      57: ifnull        62
      60: iconst_0
      61: ireturn
      62: aload_0
      63: getfield      #95                 // Field resourceRef:Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRefBuilder;
      66: ifnull        86
      69: aload_0
      70: getfield      #95                 // Field resourceRef:Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRefBuilder;
      73: aload_2
      74: getfield      #95                 // Field resourceRef:Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRefBuilder;
      77: invokevirtual #198                // Method io/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRefBuilder.equals:(Ljava/lang/Object;)Z
      80: ifne          95
      83: goto          93
      86: aload_2
      87: getfield      #95                 // Field resourceRef:Lio/dekorate/deps/tekton/pipeline/v1beta1/PipelineResourceRefBuilder;
      90: ifnull        95
      93: iconst_0
      94: ireturn
      95: aload_0
      96: getfield      #157                // Field resourceSpec:Lio/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpecBuilder;
      99: ifnull        119
     102: aload_0
     103: getfield      #157                // Field resourceSpec:Lio/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpecBuilder;
     106: aload_2
     107: getfield      #157                // Field resourceSpec:Lio/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpecBuilder;
     110: invokevirtual #199                // Method io/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpecBuilder.equals:(Ljava/lang/Object;)Z
     113: ifne          128
     116: goto          126
     119: aload_2
     120: getfield      #157                // Field resourceSpec:Lio/dekorate/deps/tekton/resource/v1alpha1/PipelineResourceSpecBuilder;
     123: ifnull        128
     126: iconst_0
     127: ireturn
     128: iconst_1
     129: ireturn
}
