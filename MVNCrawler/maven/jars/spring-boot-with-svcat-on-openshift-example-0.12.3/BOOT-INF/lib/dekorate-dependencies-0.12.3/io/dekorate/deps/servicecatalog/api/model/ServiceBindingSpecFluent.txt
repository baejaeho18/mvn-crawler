Compiled from "ServiceBindingSpecFluent.java"
public interface io.dekorate.deps.servicecatalog.api.model.ServiceBindingSpecFluent<A extends io.dekorate.deps.servicecatalog.api.model.ServiceBindingSpecFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getExternalID();

  public abstract A withExternalID(java.lang.String);

  public abstract java.lang.Boolean hasExternalID();

  public abstract A withNewExternalID(java.lang.String);

  public abstract A withNewExternalID(java.lang.StringBuilder);

  public abstract A withNewExternalID(java.lang.StringBuffer);

  public abstract io.dekorate.deps.servicecatalog.api.model.LocalObjectReference getInstanceRef();

  public abstract io.dekorate.deps.servicecatalog.api.model.LocalObjectReference buildInstanceRef();

  public abstract A withInstanceRef(io.dekorate.deps.servicecatalog.api.model.LocalObjectReference);

  public abstract java.lang.Boolean hasInstanceRef();

  public abstract A withNewInstanceRef(java.lang.String);

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceBindingSpecFluent$InstanceRefNested<A> withNewInstanceRef();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceBindingSpecFluent$InstanceRefNested<A> withNewInstanceRefLike(io.dekorate.deps.servicecatalog.api.model.LocalObjectReference);

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceBindingSpecFluent$InstanceRefNested<A> editInstanceRef();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceBindingSpecFluent$InstanceRefNested<A> editOrNewInstanceRef();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceBindingSpecFluent$InstanceRefNested<A> editOrNewInstanceRefLike(io.dekorate.deps.servicecatalog.api.model.LocalObjectReference);

  public abstract A addToParameters(java.lang.String, java.lang.Object);

  public abstract A addToParameters(java.util.Map<java.lang.String, java.lang.Object>);

  public abstract A removeFromParameters(java.lang.String);

  public abstract A removeFromParameters(java.util.Map<java.lang.String, java.lang.Object>);

  public abstract java.util.Map<java.lang.String, java.lang.Object> getParameters();

  public abstract A withParameters(java.util.Map<java.lang.String, java.lang.Object>);

  public abstract java.lang.Boolean hasParameters();

  public abstract A addToParametersFrom(int, io.dekorate.deps.servicecatalog.api.model.ParametersFromSource);

  public abstract A setToParametersFrom(int, io.dekorate.deps.servicecatalog.api.model.ParametersFromSource);

  public abstract A addToParametersFrom(io.dekorate.deps.servicecatalog.api.model.ParametersFromSource...);

  public abstract A addAllToParametersFrom(java.util.Collection<io.dekorate.deps.servicecatalog.api.model.ParametersFromSource>);

  public abstract A removeFromParametersFrom(io.dekorate.deps.servicecatalog.api.model.ParametersFromSource...);

  public abstract A removeAllFromParametersFrom(java.util.Collection<io.dekorate.deps.servicecatalog.api.model.ParametersFromSource>);

  public abstract A removeMatchingFromParametersFrom(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.servicecatalog.api.model.ParametersFromSourceBuilder>);

  public abstract java.util.List<io.dekorate.deps.servicecatalog.api.model.ParametersFromSource> getParametersFrom();

  public abstract java.util.List<io.dekorate.deps.servicecatalog.api.model.ParametersFromSource> buildParametersFrom();

  public abstract io.dekorate.deps.servicecatalog.api.model.ParametersFromSource buildParametersFrom(int);

  public abstract io.dekorate.deps.servicecatalog.api.model.ParametersFromSource buildFirstParametersFrom();

  public abstract io.dekorate.deps.servicecatalog.api.model.ParametersFromSource buildLastParametersFrom();

  public abstract io.dekorate.deps.servicecatalog.api.model.ParametersFromSource buildMatchingParametersFrom(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.servicecatalog.api.model.ParametersFromSourceBuilder>);

  public abstract java.lang.Boolean hasMatchingParametersFrom(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.servicecatalog.api.model.ParametersFromSourceBuilder>);

  public abstract A withParametersFrom(java.util.List<io.dekorate.deps.servicecatalog.api.model.ParametersFromSource>);

  public abstract A withParametersFrom(io.dekorate.deps.servicecatalog.api.model.ParametersFromSource...);

  public abstract java.lang.Boolean hasParametersFrom();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceBindingSpecFluent$ParametersFromNested<A> addNewParametersFrom();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceBindingSpecFluent$ParametersFromNested<A> addNewParametersFromLike(io.dekorate.deps.servicecatalog.api.model.ParametersFromSource);

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceBindingSpecFluent$ParametersFromNested<A> setNewParametersFromLike(int, io.dekorate.deps.servicecatalog.api.model.ParametersFromSource);

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceBindingSpecFluent$ParametersFromNested<A> editParametersFrom(int);

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceBindingSpecFluent$ParametersFromNested<A> editFirstParametersFrom();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceBindingSpecFluent$ParametersFromNested<A> editLastParametersFrom();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceBindingSpecFluent$ParametersFromNested<A> editMatchingParametersFrom(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.servicecatalog.api.model.ParametersFromSourceBuilder>);

  public abstract java.lang.String getSecretName();

  public abstract A withSecretName(java.lang.String);

  public abstract java.lang.Boolean hasSecretName();

  public abstract A withNewSecretName(java.lang.String);

  public abstract A withNewSecretName(java.lang.StringBuilder);

  public abstract A withNewSecretName(java.lang.StringBuffer);

  public abstract A addToSecretTransforms(int, io.dekorate.deps.servicecatalog.api.model.SecretTransform);

  public abstract A setToSecretTransforms(int, io.dekorate.deps.servicecatalog.api.model.SecretTransform);

  public abstract A addToSecretTransforms(io.dekorate.deps.servicecatalog.api.model.SecretTransform...);

  public abstract A addAllToSecretTransforms(java.util.Collection<io.dekorate.deps.servicecatalog.api.model.SecretTransform>);

  public abstract A removeFromSecretTransforms(io.dekorate.deps.servicecatalog.api.model.SecretTransform...);

  public abstract A removeAllFromSecretTransforms(java.util.Collection<io.dekorate.deps.servicecatalog.api.model.SecretTransform>);

  public abstract A removeMatchingFromSecretTransforms(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.servicecatalog.api.model.SecretTransformBuilder>);

  public abstract java.util.List<io.dekorate.deps.servicecatalog.api.model.SecretTransform> getSecretTransforms();

  public abstract java.util.List<io.dekorate.deps.servicecatalog.api.model.SecretTransform> buildSecretTransforms();

  public abstract io.dekorate.deps.servicecatalog.api.model.SecretTransform buildSecretTransform(int);

  public abstract io.dekorate.deps.servicecatalog.api.model.SecretTransform buildFirstSecretTransform();

  public abstract io.dekorate.deps.servicecatalog.api.model.SecretTransform buildLastSecretTransform();

  public abstract io.dekorate.deps.servicecatalog.api.model.SecretTransform buildMatchingSecretTransform(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.servicecatalog.api.model.SecretTransformBuilder>);

  public abstract java.lang.Boolean hasMatchingSecretTransform(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.servicecatalog.api.model.SecretTransformBuilder>);

  public abstract A withSecretTransforms(java.util.List<io.dekorate.deps.servicecatalog.api.model.SecretTransform>);

  public abstract A withSecretTransforms(io.dekorate.deps.servicecatalog.api.model.SecretTransform...);

  public abstract java.lang.Boolean hasSecretTransforms();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceBindingSpecFluent$SecretTransformsNested<A> addNewSecretTransform();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceBindingSpecFluent$SecretTransformsNested<A> addNewSecretTransformLike(io.dekorate.deps.servicecatalog.api.model.SecretTransform);

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceBindingSpecFluent$SecretTransformsNested<A> setNewSecretTransformLike(int, io.dekorate.deps.servicecatalog.api.model.SecretTransform);

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceBindingSpecFluent$SecretTransformsNested<A> editSecretTransform(int);

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceBindingSpecFluent$SecretTransformsNested<A> editFirstSecretTransform();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceBindingSpecFluent$SecretTransformsNested<A> editLastSecretTransform();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceBindingSpecFluent$SecretTransformsNested<A> editMatchingSecretTransform(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.servicecatalog.api.model.SecretTransformBuilder>);

  public abstract io.dekorate.deps.servicecatalog.api.model.UserInfo getUserInfo();

  public abstract io.dekorate.deps.servicecatalog.api.model.UserInfo buildUserInfo();

  public abstract A withUserInfo(io.dekorate.deps.servicecatalog.api.model.UserInfo);

  public abstract java.lang.Boolean hasUserInfo();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceBindingSpecFluent$UserInfoNested<A> withNewUserInfo();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceBindingSpecFluent$UserInfoNested<A> withNewUserInfoLike(io.dekorate.deps.servicecatalog.api.model.UserInfo);

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceBindingSpecFluent$UserInfoNested<A> editUserInfo();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceBindingSpecFluent$UserInfoNested<A> editOrNewUserInfo();

  public abstract io.dekorate.deps.servicecatalog.api.model.ServiceBindingSpecFluent$UserInfoNested<A> editOrNewUserInfoLike(io.dekorate.deps.servicecatalog.api.model.UserInfo);
}
