Compiled from "OpenShiftExtensionAdapter.java"
public class io.dekorate.deps.openshift.client.OpenShiftExtensionAdapter extends io.dekorate.deps.openshift.client.OpenshiftAdapterSupport implements io.dekorate.deps.kubernetes.client.ExtensionAdapter<io.dekorate.deps.openshift.client.OpenShiftClient> {
  public io.dekorate.deps.openshift.client.OpenShiftExtensionAdapter();
    Code:
       0: aload_0
       1: invokespecial #14                 // Method io/dekorate/deps/openshift/client/OpenshiftAdapterSupport."<init>":()V
       4: return

  public java.lang.Class<io.dekorate.deps.openshift.client.OpenShiftClient> getExtensionType();
    Code:
       0: ldc           #21                 // class io/dekorate/deps/openshift/client/OpenShiftClient
       2: areturn

  public io.dekorate.deps.openshift.client.OpenShiftClient adapt(io.dekorate.deps.kubernetes.client.Client);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #27                 // Method isAdaptable:(Lio/dekorate/deps/kubernetes/client/Client;)Ljava/lang/Boolean;
       5: invokevirtual #33                 // Method java/lang/Boolean.booleanValue:()Z
       8: ifne          48
      11: new           #35                 // class io/dekorate/deps/openshift/client/OpenShiftNotAvailableException
      14: dup
      15: new           #37                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #40                 // String OpenShift is not available. Root paths at:
      24: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_1
      28: invokeinterface #50,  1           // InterfaceMethod io/dekorate/deps/kubernetes/client/Client.getMasterUrl:()Ljava/net/URL;
      33: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      36: ldc           #55                 // String  do not include oapi.
      38: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #62                 // Method io/dekorate/deps/openshift/client/OpenShiftNotAvailableException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: new           #64                 // class io/dekorate/deps/openshift/client/DefaultOpenShiftClient
      51: dup
      52: aload_1
      53: ldc           #66                 // class io/dekorate/deps/okhttp3/OkHttpClient
      55: invokeinterface #69,  2           // InterfaceMethod io/dekorate/deps/kubernetes/client/Client.adapt:(Ljava/lang/Class;)Ljava/lang/Object;
      60: checkcast     #66                 // class io/dekorate/deps/okhttp3/OkHttpClient
      63: aload_1
      64: invokeinterface #73,  1           // InterfaceMethod io/dekorate/deps/kubernetes/client/Client.getConfiguration:()Lio/dekorate/deps/kubernetes/client/Config;
      69: invokestatic  #79                 // Method io/dekorate/deps/openshift/client/OpenShiftConfig.wrap:(Lio/dekorate/deps/kubernetes/client/Config;)Lio/dekorate/deps/openshift/client/OpenShiftConfig;
      72: invokespecial #82                 // Method io/dekorate/deps/openshift/client/DefaultOpenShiftClient."<init>":(Lio/dekorate/deps/okhttp3/OkHttpClient;Lio/dekorate/deps/openshift/client/OpenShiftConfig;)V
      75: areturn

  public java.lang.Object adapt(io.dekorate.deps.kubernetes.client.Client);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #87                 // Method adapt:(Lio/dekorate/deps/kubernetes/client/Client;)Lio/dekorate/deps/openshift/client/OpenShiftClient;
       5: areturn
}
