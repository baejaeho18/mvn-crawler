Compiled from "SequenceStatusFluent.java"
public interface io.dekorate.deps.knative.flows.v1alpha1.SequenceStatusFluent<A extends io.dekorate.deps.knative.flows.v1alpha1.SequenceStatusFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract io.dekorate.deps.knative.duck.v1.Addressable getAddress();

  public abstract io.dekorate.deps.knative.duck.v1.Addressable buildAddress();

  public abstract A withAddress(io.dekorate.deps.knative.duck.v1.Addressable);

  public abstract java.lang.Boolean hasAddress();

  public abstract A withNewAddress(java.lang.String);

  public abstract io.dekorate.deps.knative.flows.v1alpha1.SequenceStatusFluent$AddressNested<A> withNewAddress();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.SequenceStatusFluent$AddressNested<A> withNewAddressLike(io.dekorate.deps.knative.duck.v1.Addressable);

  public abstract io.dekorate.deps.knative.flows.v1alpha1.SequenceStatusFluent$AddressNested<A> editAddress();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.SequenceStatusFluent$AddressNested<A> editOrNewAddress();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.SequenceStatusFluent$AddressNested<A> editOrNewAddressLike(io.dekorate.deps.knative.duck.v1.Addressable);

  public abstract A addToChannelStatuses(int, io.dekorate.deps.knative.flows.v1alpha1.SequenceChannelStatus);

  public abstract A setToChannelStatuses(int, io.dekorate.deps.knative.flows.v1alpha1.SequenceChannelStatus);

  public abstract A addToChannelStatuses(io.dekorate.deps.knative.flows.v1alpha1.SequenceChannelStatus...);

  public abstract A addAllToChannelStatuses(java.util.Collection<io.dekorate.deps.knative.flows.v1alpha1.SequenceChannelStatus>);

  public abstract A removeFromChannelStatuses(io.dekorate.deps.knative.flows.v1alpha1.SequenceChannelStatus...);

  public abstract A removeAllFromChannelStatuses(java.util.Collection<io.dekorate.deps.knative.flows.v1alpha1.SequenceChannelStatus>);

  public abstract A removeMatchingFromChannelStatuses(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.knative.flows.v1alpha1.SequenceChannelStatusBuilder>);

  public abstract java.util.List<io.dekorate.deps.knative.flows.v1alpha1.SequenceChannelStatus> getChannelStatuses();

  public abstract java.util.List<io.dekorate.deps.knative.flows.v1alpha1.SequenceChannelStatus> buildChannelStatuses();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.SequenceChannelStatus buildChannelStatus(int);

  public abstract io.dekorate.deps.knative.flows.v1alpha1.SequenceChannelStatus buildFirstChannelStatus();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.SequenceChannelStatus buildLastChannelStatus();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.SequenceChannelStatus buildMatchingChannelStatus(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.knative.flows.v1alpha1.SequenceChannelStatusBuilder>);

  public abstract java.lang.Boolean hasMatchingChannelStatus(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.knative.flows.v1alpha1.SequenceChannelStatusBuilder>);

  public abstract A withChannelStatuses(java.util.List<io.dekorate.deps.knative.flows.v1alpha1.SequenceChannelStatus>);

  public abstract A withChannelStatuses(io.dekorate.deps.knative.flows.v1alpha1.SequenceChannelStatus...);

  public abstract java.lang.Boolean hasChannelStatuses();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.SequenceStatusFluent$ChannelStatusesNested<A> addNewChannelStatus();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.SequenceStatusFluent$ChannelStatusesNested<A> addNewChannelStatusLike(io.dekorate.deps.knative.flows.v1alpha1.SequenceChannelStatus);

  public abstract io.dekorate.deps.knative.flows.v1alpha1.SequenceStatusFluent$ChannelStatusesNested<A> setNewChannelStatusLike(int, io.dekorate.deps.knative.flows.v1alpha1.SequenceChannelStatus);

  public abstract io.dekorate.deps.knative.flows.v1alpha1.SequenceStatusFluent$ChannelStatusesNested<A> editChannelStatus(int);

  public abstract io.dekorate.deps.knative.flows.v1alpha1.SequenceStatusFluent$ChannelStatusesNested<A> editFirstChannelStatus();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.SequenceStatusFluent$ChannelStatusesNested<A> editLastChannelStatus();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.SequenceStatusFluent$ChannelStatusesNested<A> editMatchingChannelStatus(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.knative.flows.v1alpha1.SequenceChannelStatusBuilder>);

  public abstract A addToConditions(int, io.dekorate.deps.knative.v1.Condition);

  public abstract A setToConditions(int, io.dekorate.deps.knative.v1.Condition);

  public abstract A addToConditions(io.dekorate.deps.knative.v1.Condition...);

  public abstract A addAllToConditions(java.util.Collection<io.dekorate.deps.knative.v1.Condition>);

  public abstract A removeFromConditions(io.dekorate.deps.knative.v1.Condition...);

  public abstract A removeAllFromConditions(java.util.Collection<io.dekorate.deps.knative.v1.Condition>);

  public abstract A removeMatchingFromConditions(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.knative.v1.ConditionBuilder>);

  public abstract java.util.List<io.dekorate.deps.knative.v1.Condition> getConditions();

  public abstract java.util.List<io.dekorate.deps.knative.v1.Condition> buildConditions();

  public abstract io.dekorate.deps.knative.v1.Condition buildCondition(int);

  public abstract io.dekorate.deps.knative.v1.Condition buildFirstCondition();

  public abstract io.dekorate.deps.knative.v1.Condition buildLastCondition();

  public abstract io.dekorate.deps.knative.v1.Condition buildMatchingCondition(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.knative.v1.ConditionBuilder>);

  public abstract java.lang.Boolean hasMatchingCondition(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.knative.v1.ConditionBuilder>);

  public abstract A withConditions(java.util.List<io.dekorate.deps.knative.v1.Condition>);

  public abstract A withConditions(io.dekorate.deps.knative.v1.Condition...);

  public abstract java.lang.Boolean hasConditions();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.SequenceStatusFluent$ConditionsNested<A> addNewCondition();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.SequenceStatusFluent$ConditionsNested<A> addNewConditionLike(io.dekorate.deps.knative.v1.Condition);

  public abstract io.dekorate.deps.knative.flows.v1alpha1.SequenceStatusFluent$ConditionsNested<A> setNewConditionLike(int, io.dekorate.deps.knative.v1.Condition);

  public abstract io.dekorate.deps.knative.flows.v1alpha1.SequenceStatusFluent$ConditionsNested<A> editCondition(int);

  public abstract io.dekorate.deps.knative.flows.v1alpha1.SequenceStatusFluent$ConditionsNested<A> editFirstCondition();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.SequenceStatusFluent$ConditionsNested<A> editLastCondition();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.SequenceStatusFluent$ConditionsNested<A> editMatchingCondition(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.knative.v1.ConditionBuilder>);

  public abstract java.lang.Long getObservedGeneration();

  public abstract A withObservedGeneration(java.lang.Long);

  public abstract java.lang.Boolean hasObservedGeneration();

  public abstract A addToSubscriptionStatuses(int, io.dekorate.deps.knative.flows.v1alpha1.SequenceSubscriptionStatus);

  public abstract A setToSubscriptionStatuses(int, io.dekorate.deps.knative.flows.v1alpha1.SequenceSubscriptionStatus);

  public abstract A addToSubscriptionStatuses(io.dekorate.deps.knative.flows.v1alpha1.SequenceSubscriptionStatus...);

  public abstract A addAllToSubscriptionStatuses(java.util.Collection<io.dekorate.deps.knative.flows.v1alpha1.SequenceSubscriptionStatus>);

  public abstract A removeFromSubscriptionStatuses(io.dekorate.deps.knative.flows.v1alpha1.SequenceSubscriptionStatus...);

  public abstract A removeAllFromSubscriptionStatuses(java.util.Collection<io.dekorate.deps.knative.flows.v1alpha1.SequenceSubscriptionStatus>);

  public abstract A removeMatchingFromSubscriptionStatuses(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.knative.flows.v1alpha1.SequenceSubscriptionStatusBuilder>);

  public abstract java.util.List<io.dekorate.deps.knative.flows.v1alpha1.SequenceSubscriptionStatus> getSubscriptionStatuses();

  public abstract java.util.List<io.dekorate.deps.knative.flows.v1alpha1.SequenceSubscriptionStatus> buildSubscriptionStatuses();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.SequenceSubscriptionStatus buildSubscriptionStatus(int);

  public abstract io.dekorate.deps.knative.flows.v1alpha1.SequenceSubscriptionStatus buildFirstSubscriptionStatus();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.SequenceSubscriptionStatus buildLastSubscriptionStatus();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.SequenceSubscriptionStatus buildMatchingSubscriptionStatus(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.knative.flows.v1alpha1.SequenceSubscriptionStatusBuilder>);

  public abstract java.lang.Boolean hasMatchingSubscriptionStatus(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.knative.flows.v1alpha1.SequenceSubscriptionStatusBuilder>);

  public abstract A withSubscriptionStatuses(java.util.List<io.dekorate.deps.knative.flows.v1alpha1.SequenceSubscriptionStatus>);

  public abstract A withSubscriptionStatuses(io.dekorate.deps.knative.flows.v1alpha1.SequenceSubscriptionStatus...);

  public abstract java.lang.Boolean hasSubscriptionStatuses();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.SequenceStatusFluent$SubscriptionStatusesNested<A> addNewSubscriptionStatus();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.SequenceStatusFluent$SubscriptionStatusesNested<A> addNewSubscriptionStatusLike(io.dekorate.deps.knative.flows.v1alpha1.SequenceSubscriptionStatus);

  public abstract io.dekorate.deps.knative.flows.v1alpha1.SequenceStatusFluent$SubscriptionStatusesNested<A> setNewSubscriptionStatusLike(int, io.dekorate.deps.knative.flows.v1alpha1.SequenceSubscriptionStatus);

  public abstract io.dekorate.deps.knative.flows.v1alpha1.SequenceStatusFluent$SubscriptionStatusesNested<A> editSubscriptionStatus(int);

  public abstract io.dekorate.deps.knative.flows.v1alpha1.SequenceStatusFluent$SubscriptionStatusesNested<A> editFirstSubscriptionStatus();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.SequenceStatusFluent$SubscriptionStatusesNested<A> editLastSubscriptionStatus();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.SequenceStatusFluent$SubscriptionStatusesNested<A> editMatchingSubscriptionStatus(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.knative.flows.v1alpha1.SequenceSubscriptionStatusBuilder>);
}
