Compiled from "OAuthClientAuthorizationFluent.java"
public interface io.dekorate.deps.openshift.api.model.OAuthClientAuthorizationFluent<A extends io.dekorate.deps.openshift.api.model.OAuthClientAuthorizationFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getApiVersion();

  public abstract A withApiVersion(java.lang.String);

  public abstract java.lang.Boolean hasApiVersion();

  public abstract A withNewApiVersion(java.lang.String);

  public abstract A withNewApiVersion(java.lang.StringBuilder);

  public abstract A withNewApiVersion(java.lang.StringBuffer);

  public abstract java.lang.String getClientName();

  public abstract A withClientName(java.lang.String);

  public abstract java.lang.Boolean hasClientName();

  public abstract A withNewClientName(java.lang.String);

  public abstract A withNewClientName(java.lang.StringBuilder);

  public abstract A withNewClientName(java.lang.StringBuffer);

  public abstract java.lang.String getKind();

  public abstract A withKind(java.lang.String);

  public abstract java.lang.Boolean hasKind();

  public abstract A withNewKind(java.lang.String);

  public abstract A withNewKind(java.lang.StringBuilder);

  public abstract A withNewKind(java.lang.StringBuffer);

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectMeta getMetadata();

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectMeta buildMetadata();

  public abstract A withMetadata(io.dekorate.deps.kubernetes.api.model.ObjectMeta);

  public abstract java.lang.Boolean hasMetadata();

  public abstract io.dekorate.deps.openshift.api.model.OAuthClientAuthorizationFluent$MetadataNested<A> withNewMetadata();

  public abstract io.dekorate.deps.openshift.api.model.OAuthClientAuthorizationFluent$MetadataNested<A> withNewMetadataLike(io.dekorate.deps.kubernetes.api.model.ObjectMeta);

  public abstract io.dekorate.deps.openshift.api.model.OAuthClientAuthorizationFluent$MetadataNested<A> editMetadata();

  public abstract io.dekorate.deps.openshift.api.model.OAuthClientAuthorizationFluent$MetadataNested<A> editOrNewMetadata();

  public abstract io.dekorate.deps.openshift.api.model.OAuthClientAuthorizationFluent$MetadataNested<A> editOrNewMetadataLike(io.dekorate.deps.kubernetes.api.model.ObjectMeta);

  public abstract A addToScopes(int, java.lang.String);

  public abstract A setToScopes(int, java.lang.String);

  public abstract A addToScopes(java.lang.String...);

  public abstract A addAllToScopes(java.util.Collection<java.lang.String>);

  public abstract A removeFromScopes(java.lang.String...);

  public abstract A removeAllFromScopes(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getScopes();

  public abstract java.lang.String getScope(int);

  public abstract java.lang.String getFirstScope();

  public abstract java.lang.String getLastScope();

  public abstract java.lang.String getMatchingScope(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingScope(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract A withScopes(java.util.List<java.lang.String>);

  public abstract A withScopes(java.lang.String...);

  public abstract java.lang.Boolean hasScopes();

  public abstract A addNewScope(java.lang.String);

  public abstract A addNewScope(java.lang.StringBuilder);

  public abstract A addNewScope(java.lang.StringBuffer);

  public abstract java.lang.String getUserName();

  public abstract A withUserName(java.lang.String);

  public abstract java.lang.Boolean hasUserName();

  public abstract A withNewUserName(java.lang.String);

  public abstract A withNewUserName(java.lang.StringBuilder);

  public abstract A withNewUserName(java.lang.StringBuffer);

  public abstract java.lang.String getUserUID();

  public abstract A withUserUID(java.lang.String);

  public abstract java.lang.Boolean hasUserUID();

  public abstract A withNewUserUID(java.lang.String);

  public abstract A withNewUserUID(java.lang.StringBuilder);

  public abstract A withNewUserUID(java.lang.StringBuffer);
}
