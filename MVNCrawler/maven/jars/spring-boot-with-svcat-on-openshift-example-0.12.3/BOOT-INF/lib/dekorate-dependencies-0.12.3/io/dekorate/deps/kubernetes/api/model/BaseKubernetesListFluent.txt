Compiled from "BaseKubernetesListFluent.java"
public interface io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent<A extends io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getApiVersion();

  public abstract A withApiVersion(java.lang.String);

  public abstract java.lang.Boolean hasApiVersion();

  public abstract A withNewApiVersion(java.lang.String);

  public abstract A withNewApiVersion(java.lang.StringBuilder);

  public abstract A withNewApiVersion(java.lang.StringBuffer);

  public abstract A addToItems(io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>);

  public abstract A addToItems(int, io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>);

  public abstract A addToItems(int, io.dekorate.deps.kubernetes.api.model.HasMetadata);

  public abstract A setToItems(int, io.dekorate.deps.kubernetes.api.model.HasMetadata);

  public abstract A addToItems(io.dekorate.deps.kubernetes.api.model.HasMetadata...);

  public abstract A addAllToItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.HasMetadata>);

  public abstract A removeFromItems(io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>);

  public abstract A removeFromItems(io.dekorate.deps.kubernetes.api.model.HasMetadata...);

  public abstract A removeAllFromItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.HasMetadata>);

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.HasMetadata> getItems();

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.HasMetadata> buildItems();

  public abstract io.dekorate.deps.kubernetes.api.model.HasMetadata buildItem(int);

  public abstract io.dekorate.deps.kubernetes.api.model.HasMetadata buildFirstItem();

  public abstract io.dekorate.deps.kubernetes.api.model.HasMetadata buildLastItem();

  public abstract io.dekorate.deps.kubernetes.api.model.HasMetadata buildMatchingItem(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract java.lang.Boolean hasMatchingItem(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract A withItems(java.util.List<io.dekorate.deps.kubernetes.api.model.HasMetadata>);

  public abstract A withItems(io.dekorate.deps.kubernetes.api.model.HasMetadata...);

  public abstract java.lang.Boolean hasItems();

  public abstract A addToValidatingWebhookConfigurationItems(int, io.dekorate.deps.kubernetes.api.model.admissionregistration.ValidatingWebhookConfiguration);

  public abstract A setToValidatingWebhookConfigurationItems(int, io.dekorate.deps.kubernetes.api.model.admissionregistration.ValidatingWebhookConfiguration);

  public abstract A addToValidatingWebhookConfigurationItems(io.dekorate.deps.kubernetes.api.model.admissionregistration.ValidatingWebhookConfiguration...);

  public abstract A addAllToValidatingWebhookConfigurationItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.admissionregistration.ValidatingWebhookConfiguration>);

  public abstract A removeFromValidatingWebhookConfigurationItems(io.dekorate.deps.kubernetes.api.model.admissionregistration.ValidatingWebhookConfiguration...);

  public abstract A removeAllFromValidatingWebhookConfigurationItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.admissionregistration.ValidatingWebhookConfiguration>);

  public abstract A removeMatchingFromValidatingWebhookConfigurationItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ValidatingWebhookConfigurationItemsNested<A> setNewValidatingWebhookConfigurationItemLike(int, io.dekorate.deps.kubernetes.api.model.admissionregistration.ValidatingWebhookConfiguration);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ValidatingWebhookConfigurationItemsNested<A> addNewValidatingWebhookConfigurationItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ValidatingWebhookConfigurationItemsNested<A> addNewValidatingWebhookConfigurationItemLike(io.dekorate.deps.kubernetes.api.model.admissionregistration.ValidatingWebhookConfiguration);

  public abstract A addToStorageClassItems(int, io.dekorate.deps.kubernetes.api.model.storage.StorageClass);

  public abstract A setToStorageClassItems(int, io.dekorate.deps.kubernetes.api.model.storage.StorageClass);

  public abstract A addToStorageClassItems(io.dekorate.deps.kubernetes.api.model.storage.StorageClass...);

  public abstract A addAllToStorageClassItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.storage.StorageClass>);

  public abstract A removeFromStorageClassItems(io.dekorate.deps.kubernetes.api.model.storage.StorageClass...);

  public abstract A removeAllFromStorageClassItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.storage.StorageClass>);

  public abstract A removeMatchingFromStorageClassItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$StorageClassItemsNested<A> setNewStorageClassItemLike(int, io.dekorate.deps.kubernetes.api.model.storage.StorageClass);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$StorageClassItemsNested<A> addNewStorageClassItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$StorageClassItemsNested<A> addNewStorageClassItemLike(io.dekorate.deps.kubernetes.api.model.storage.StorageClass);

  public abstract A addToClusterRoleBindingItems(int, io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBinding);

  public abstract A setToClusterRoleBindingItems(int, io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBinding);

  public abstract A addToClusterRoleBindingItems(io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBinding...);

  public abstract A addAllToClusterRoleBindingItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBinding>);

  public abstract A removeFromClusterRoleBindingItems(io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBinding...);

  public abstract A removeAllFromClusterRoleBindingItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBinding>);

  public abstract A removeMatchingFromClusterRoleBindingItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ClusterRoleBindingItemsNested<A> setNewClusterRoleBindingItemLike(int, io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBinding);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ClusterRoleBindingItemsNested<A> addNewClusterRoleBindingItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ClusterRoleBindingItemsNested<A> addNewClusterRoleBindingItemLike(io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBinding);

  public abstract A addToCSINodeItems(int, io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSINode);

  public abstract A setToCSINodeItems(int, io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSINode);

  public abstract A addToCSINodeItems(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSINode...);

  public abstract A addAllToCSINodeItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSINode>);

  public abstract A removeFromCSINodeItems(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSINode...);

  public abstract A removeAllFromCSINodeItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSINode>);

  public abstract A removeMatchingFromCSINodeItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$CSINodeItemsNested<A> setNewCSINodeItemLike(int, io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSINode);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$CSINodeItemsNested<A> addNewCSINodeItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$CSINodeItemsNested<A> addNewCSINodeItemLike(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSINode);

  public abstract A addToOpenshiftRoleBindingItems(int, io.dekorate.deps.openshift.api.model.OpenshiftRoleBinding);

  public abstract A setToOpenshiftRoleBindingItems(int, io.dekorate.deps.openshift.api.model.OpenshiftRoleBinding);

  public abstract A addToOpenshiftRoleBindingItems(io.dekorate.deps.openshift.api.model.OpenshiftRoleBinding...);

  public abstract A addAllToOpenshiftRoleBindingItems(java.util.Collection<io.dekorate.deps.openshift.api.model.OpenshiftRoleBinding>);

  public abstract A removeFromOpenshiftRoleBindingItems(io.dekorate.deps.openshift.api.model.OpenshiftRoleBinding...);

  public abstract A removeAllFromOpenshiftRoleBindingItems(java.util.Collection<io.dekorate.deps.openshift.api.model.OpenshiftRoleBinding>);

  public abstract A removeMatchingFromOpenshiftRoleBindingItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$OpenshiftRoleBindingItemsNested<A> setNewOpenshiftRoleBindingItemLike(int, io.dekorate.deps.openshift.api.model.OpenshiftRoleBinding);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$OpenshiftRoleBindingItemsNested<A> addNewOpenshiftRoleBindingItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$OpenshiftRoleBindingItemsNested<A> addNewOpenshiftRoleBindingItemLike(io.dekorate.deps.openshift.api.model.OpenshiftRoleBinding);

  public abstract A addToPodDisruptionBudgetItems(int, io.dekorate.deps.kubernetes.api.model.policy.PodDisruptionBudget);

  public abstract A setToPodDisruptionBudgetItems(int, io.dekorate.deps.kubernetes.api.model.policy.PodDisruptionBudget);

  public abstract A addToPodDisruptionBudgetItems(io.dekorate.deps.kubernetes.api.model.policy.PodDisruptionBudget...);

  public abstract A addAllToPodDisruptionBudgetItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.policy.PodDisruptionBudget>);

  public abstract A removeFromPodDisruptionBudgetItems(io.dekorate.deps.kubernetes.api.model.policy.PodDisruptionBudget...);

  public abstract A removeAllFromPodDisruptionBudgetItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.policy.PodDisruptionBudget>);

  public abstract A removeMatchingFromPodDisruptionBudgetItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$PodDisruptionBudgetItemsNested<A> setNewPodDisruptionBudgetItemLike(int, io.dekorate.deps.kubernetes.api.model.policy.PodDisruptionBudget);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$PodDisruptionBudgetItemsNested<A> addNewPodDisruptionBudgetItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$PodDisruptionBudgetItemsNested<A> addNewPodDisruptionBudgetItemLike(io.dekorate.deps.kubernetes.api.model.policy.PodDisruptionBudget);

  public abstract A addToOpenshiftClusterRoleBindingItems(int, io.dekorate.deps.openshift.api.model.OpenshiftClusterRoleBinding);

  public abstract A setToOpenshiftClusterRoleBindingItems(int, io.dekorate.deps.openshift.api.model.OpenshiftClusterRoleBinding);

  public abstract A addToOpenshiftClusterRoleBindingItems(io.dekorate.deps.openshift.api.model.OpenshiftClusterRoleBinding...);

  public abstract A addAllToOpenshiftClusterRoleBindingItems(java.util.Collection<io.dekorate.deps.openshift.api.model.OpenshiftClusterRoleBinding>);

  public abstract A removeFromOpenshiftClusterRoleBindingItems(io.dekorate.deps.openshift.api.model.OpenshiftClusterRoleBinding...);

  public abstract A removeAllFromOpenshiftClusterRoleBindingItems(java.util.Collection<io.dekorate.deps.openshift.api.model.OpenshiftClusterRoleBinding>);

  public abstract A removeMatchingFromOpenshiftClusterRoleBindingItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$OpenshiftClusterRoleBindingItemsNested<A> setNewOpenshiftClusterRoleBindingItemLike(int, io.dekorate.deps.openshift.api.model.OpenshiftClusterRoleBinding);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$OpenshiftClusterRoleBindingItemsNested<A> addNewOpenshiftClusterRoleBindingItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$OpenshiftClusterRoleBindingItemsNested<A> addNewOpenshiftClusterRoleBindingItemLike(io.dekorate.deps.openshift.api.model.OpenshiftClusterRoleBinding);

  public abstract A addToNetworkPolicyItems(int, io.dekorate.deps.kubernetes.api.model.networking.NetworkPolicy);

  public abstract A setToNetworkPolicyItems(int, io.dekorate.deps.kubernetes.api.model.networking.NetworkPolicy);

  public abstract A addToNetworkPolicyItems(io.dekorate.deps.kubernetes.api.model.networking.NetworkPolicy...);

  public abstract A addAllToNetworkPolicyItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.networking.NetworkPolicy>);

  public abstract A removeFromNetworkPolicyItems(io.dekorate.deps.kubernetes.api.model.networking.NetworkPolicy...);

  public abstract A removeAllFromNetworkPolicyItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.networking.NetworkPolicy>);

  public abstract A removeMatchingFromNetworkPolicyItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$NetworkPolicyItemsNested<A> setNewNetworkPolicyItemLike(int, io.dekorate.deps.kubernetes.api.model.networking.NetworkPolicy);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$NetworkPolicyItemsNested<A> addNewNetworkPolicyItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$NetworkPolicyItemsNested<A> addNewNetworkPolicyItemLike(io.dekorate.deps.kubernetes.api.model.networking.NetworkPolicy);

  public abstract A addToRouteItems(int, io.dekorate.deps.openshift.api.model.Route);

  public abstract A setToRouteItems(int, io.dekorate.deps.openshift.api.model.Route);

  public abstract A addToRouteItems(io.dekorate.deps.openshift.api.model.Route...);

  public abstract A addAllToRouteItems(java.util.Collection<io.dekorate.deps.openshift.api.model.Route>);

  public abstract A removeFromRouteItems(io.dekorate.deps.openshift.api.model.Route...);

  public abstract A removeAllFromRouteItems(java.util.Collection<io.dekorate.deps.openshift.api.model.Route>);

  public abstract A removeMatchingFromRouteItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$RouteItemsNested<A> setNewRouteItemLike(int, io.dekorate.deps.openshift.api.model.Route);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$RouteItemsNested<A> addNewRouteItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$RouteItemsNested<A> addNewRouteItemLike(io.dekorate.deps.openshift.api.model.Route);

  public abstract A addToNamespaceItems(int, io.dekorate.deps.kubernetes.api.model.Namespace);

  public abstract A setToNamespaceItems(int, io.dekorate.deps.kubernetes.api.model.Namespace);

  public abstract A addToNamespaceItems(io.dekorate.deps.kubernetes.api.model.Namespace...);

  public abstract A addAllToNamespaceItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.Namespace>);

  public abstract A removeFromNamespaceItems(io.dekorate.deps.kubernetes.api.model.Namespace...);

  public abstract A removeAllFromNamespaceItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.Namespace>);

  public abstract A removeMatchingFromNamespaceItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$NamespaceItemsNested<A> setNewNamespaceItemLike(int, io.dekorate.deps.kubernetes.api.model.Namespace);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$NamespaceItemsNested<A> addNewNamespaceItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$NamespaceItemsNested<A> addNewNamespaceItemLike(io.dekorate.deps.kubernetes.api.model.Namespace);

  public abstract A addToLocalSubjectAccessReviewItems(int, io.dekorate.deps.kubernetes.api.model.authorization.LocalSubjectAccessReview);

  public abstract A setToLocalSubjectAccessReviewItems(int, io.dekorate.deps.kubernetes.api.model.authorization.LocalSubjectAccessReview);

  public abstract A addToLocalSubjectAccessReviewItems(io.dekorate.deps.kubernetes.api.model.authorization.LocalSubjectAccessReview...);

  public abstract A addAllToLocalSubjectAccessReviewItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.authorization.LocalSubjectAccessReview>);

  public abstract A removeFromLocalSubjectAccessReviewItems(io.dekorate.deps.kubernetes.api.model.authorization.LocalSubjectAccessReview...);

  public abstract A removeAllFromLocalSubjectAccessReviewItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.authorization.LocalSubjectAccessReview>);

  public abstract A removeMatchingFromLocalSubjectAccessReviewItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$LocalSubjectAccessReviewItemsNested<A> setNewLocalSubjectAccessReviewItemLike(int, io.dekorate.deps.kubernetes.api.model.authorization.LocalSubjectAccessReview);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$LocalSubjectAccessReviewItemsNested<A> addNewLocalSubjectAccessReviewItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$LocalSubjectAccessReviewItemsNested<A> addNewLocalSubjectAccessReviewItemLike(io.dekorate.deps.kubernetes.api.model.authorization.LocalSubjectAccessReview);

  public abstract A addToLeaseItems(int, io.dekorate.deps.kubernetes.api.model.coordination.v1.Lease);

  public abstract A setToLeaseItems(int, io.dekorate.deps.kubernetes.api.model.coordination.v1.Lease);

  public abstract A addToLeaseItems(io.dekorate.deps.kubernetes.api.model.coordination.v1.Lease...);

  public abstract A addAllToLeaseItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.coordination.v1.Lease>);

  public abstract A removeFromLeaseItems(io.dekorate.deps.kubernetes.api.model.coordination.v1.Lease...);

  public abstract A removeAllFromLeaseItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.coordination.v1.Lease>);

  public abstract A removeMatchingFromLeaseItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$LeaseItemsNested<A> setNewLeaseItemLike(int, io.dekorate.deps.kubernetes.api.model.coordination.v1.Lease);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$LeaseItemsNested<A> addNewLeaseItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$LeaseItemsNested<A> addNewLeaseItemLike(io.dekorate.deps.kubernetes.api.model.coordination.v1.Lease);

  public abstract A addToServiceItems(int, io.dekorate.deps.kubernetes.api.model.Service);

  public abstract A setToServiceItems(int, io.dekorate.deps.kubernetes.api.model.Service);

  public abstract A addToServiceItems(io.dekorate.deps.kubernetes.api.model.Service...);

  public abstract A addAllToServiceItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.Service>);

  public abstract A removeFromServiceItems(io.dekorate.deps.kubernetes.api.model.Service...);

  public abstract A removeAllFromServiceItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.Service>);

  public abstract A removeMatchingFromServiceItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ServiceItemsNested<A> setNewServiceItemLike(int, io.dekorate.deps.kubernetes.api.model.Service);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ServiceItemsNested<A> addNewServiceItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ServiceItemsNested<A> addNewServiceItemLike(io.dekorate.deps.kubernetes.api.model.Service);

  public abstract A addToReplicationControllerItems(int, io.dekorate.deps.kubernetes.api.model.ReplicationController);

  public abstract A setToReplicationControllerItems(int, io.dekorate.deps.kubernetes.api.model.ReplicationController);

  public abstract A addToReplicationControllerItems(io.dekorate.deps.kubernetes.api.model.ReplicationController...);

  public abstract A addAllToReplicationControllerItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.ReplicationController>);

  public abstract A removeFromReplicationControllerItems(io.dekorate.deps.kubernetes.api.model.ReplicationController...);

  public abstract A removeAllFromReplicationControllerItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.ReplicationController>);

  public abstract A removeMatchingFromReplicationControllerItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ReplicationControllerItemsNested<A> setNewReplicationControllerItemLike(int, io.dekorate.deps.kubernetes.api.model.ReplicationController);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ReplicationControllerItemsNested<A> addNewReplicationControllerItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ReplicationControllerItemsNested<A> addNewReplicationControllerItemLike(io.dekorate.deps.kubernetes.api.model.ReplicationController);

  public abstract A addToSubjectAccessReviewItems(int, io.dekorate.deps.kubernetes.api.model.authorization.SubjectAccessReview);

  public abstract A setToSubjectAccessReviewItems(int, io.dekorate.deps.kubernetes.api.model.authorization.SubjectAccessReview);

  public abstract A addToSubjectAccessReviewItems(io.dekorate.deps.kubernetes.api.model.authorization.SubjectAccessReview...);

  public abstract A addAllToSubjectAccessReviewItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.authorization.SubjectAccessReview>);

  public abstract A removeFromSubjectAccessReviewItems(io.dekorate.deps.kubernetes.api.model.authorization.SubjectAccessReview...);

  public abstract A removeAllFromSubjectAccessReviewItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.authorization.SubjectAccessReview>);

  public abstract A removeMatchingFromSubjectAccessReviewItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$SubjectAccessReviewItemsNested<A> setNewSubjectAccessReviewItemLike(int, io.dekorate.deps.kubernetes.api.model.authorization.SubjectAccessReview);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$SubjectAccessReviewItemsNested<A> addNewSubjectAccessReviewItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$SubjectAccessReviewItemsNested<A> addNewSubjectAccessReviewItemLike(io.dekorate.deps.kubernetes.api.model.authorization.SubjectAccessReview);

  public abstract A addToMutatingWebhookConfigurationItems(int, io.dekorate.deps.kubernetes.api.model.admissionregistration.MutatingWebhookConfiguration);

  public abstract A setToMutatingWebhookConfigurationItems(int, io.dekorate.deps.kubernetes.api.model.admissionregistration.MutatingWebhookConfiguration);

  public abstract A addToMutatingWebhookConfigurationItems(io.dekorate.deps.kubernetes.api.model.admissionregistration.MutatingWebhookConfiguration...);

  public abstract A addAllToMutatingWebhookConfigurationItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.admissionregistration.MutatingWebhookConfiguration>);

  public abstract A removeFromMutatingWebhookConfigurationItems(io.dekorate.deps.kubernetes.api.model.admissionregistration.MutatingWebhookConfiguration...);

  public abstract A removeAllFromMutatingWebhookConfigurationItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.admissionregistration.MutatingWebhookConfiguration>);

  public abstract A removeMatchingFromMutatingWebhookConfigurationItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$MutatingWebhookConfigurationItemsNested<A> setNewMutatingWebhookConfigurationItemLike(int, io.dekorate.deps.kubernetes.api.model.admissionregistration.MutatingWebhookConfiguration);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$MutatingWebhookConfigurationItemsNested<A> addNewMutatingWebhookConfigurationItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$MutatingWebhookConfigurationItemsNested<A> addNewMutatingWebhookConfigurationItemLike(io.dekorate.deps.kubernetes.api.model.admissionregistration.MutatingWebhookConfiguration);

  public abstract A addToPodMetricsItems(int, io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.PodMetrics);

  public abstract A setToPodMetricsItems(int, io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.PodMetrics);

  public abstract A addToPodMetricsItems(io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.PodMetrics...);

  public abstract A addAllToPodMetricsItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.PodMetrics>);

  public abstract A removeFromPodMetricsItems(io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.PodMetrics...);

  public abstract A removeAllFromPodMetricsItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.PodMetrics>);

  public abstract A removeMatchingFromPodMetricsItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$PodMetricsItemsNested<A> setNewPodMetricsItemLike(int, io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.PodMetrics);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$PodMetricsItemsNested<A> addNewPodMetricsItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$PodMetricsItemsNested<A> addNewPodMetricsItemLike(io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.PodMetrics);

  public abstract A addToHorizontalPodAutoscalerItems(int, io.dekorate.deps.kubernetes.api.model.HorizontalPodAutoscaler);

  public abstract A setToHorizontalPodAutoscalerItems(int, io.dekorate.deps.kubernetes.api.model.HorizontalPodAutoscaler);

  public abstract A addToHorizontalPodAutoscalerItems(io.dekorate.deps.kubernetes.api.model.HorizontalPodAutoscaler...);

  public abstract A addAllToHorizontalPodAutoscalerItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.HorizontalPodAutoscaler>);

  public abstract A removeFromHorizontalPodAutoscalerItems(io.dekorate.deps.kubernetes.api.model.HorizontalPodAutoscaler...);

  public abstract A removeAllFromHorizontalPodAutoscalerItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.HorizontalPodAutoscaler>);

  public abstract A removeMatchingFromHorizontalPodAutoscalerItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$HorizontalPodAutoscalerItemsNested<A> setNewHorizontalPodAutoscalerItemLike(int, io.dekorate.deps.kubernetes.api.model.HorizontalPodAutoscaler);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$HorizontalPodAutoscalerItemsNested<A> addNewHorizontalPodAutoscalerItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$HorizontalPodAutoscalerItemsNested<A> addNewHorizontalPodAutoscalerItemLike(io.dekorate.deps.kubernetes.api.model.HorizontalPodAutoscaler);

  public abstract A addToImageItems(int, io.dekorate.deps.openshift.api.model.Image);

  public abstract A setToImageItems(int, io.dekorate.deps.openshift.api.model.Image);

  public abstract A addToImageItems(io.dekorate.deps.openshift.api.model.Image...);

  public abstract A addAllToImageItems(java.util.Collection<io.dekorate.deps.openshift.api.model.Image>);

  public abstract A removeFromImageItems(io.dekorate.deps.openshift.api.model.Image...);

  public abstract A removeAllFromImageItems(java.util.Collection<io.dekorate.deps.openshift.api.model.Image>);

  public abstract A removeMatchingFromImageItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ImageItemsNested<A> setNewImageItemLike(int, io.dekorate.deps.openshift.api.model.Image);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ImageItemsNested<A> addNewImageItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ImageItemsNested<A> addNewImageItemLike(io.dekorate.deps.openshift.api.model.Image);

  public abstract A addToReplicaSetItems(int, io.dekorate.deps.kubernetes.api.model.apps.ReplicaSet);

  public abstract A setToReplicaSetItems(int, io.dekorate.deps.kubernetes.api.model.apps.ReplicaSet);

  public abstract A addToReplicaSetItems(io.dekorate.deps.kubernetes.api.model.apps.ReplicaSet...);

  public abstract A addAllToReplicaSetItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.apps.ReplicaSet>);

  public abstract A removeFromReplicaSetItems(io.dekorate.deps.kubernetes.api.model.apps.ReplicaSet...);

  public abstract A removeAllFromReplicaSetItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.apps.ReplicaSet>);

  public abstract A removeMatchingFromReplicaSetItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ReplicaSetItemsNested<A> setNewReplicaSetItemLike(int, io.dekorate.deps.kubernetes.api.model.apps.ReplicaSet);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ReplicaSetItemsNested<A> addNewReplicaSetItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ReplicaSetItemsNested<A> addNewReplicaSetItemLike(io.dekorate.deps.kubernetes.api.model.apps.ReplicaSet);

  public abstract A addToEndpointSliceItems(int, io.dekorate.deps.kubernetes.api.model.discovery.EndpointSlice);

  public abstract A setToEndpointSliceItems(int, io.dekorate.deps.kubernetes.api.model.discovery.EndpointSlice);

  public abstract A addToEndpointSliceItems(io.dekorate.deps.kubernetes.api.model.discovery.EndpointSlice...);

  public abstract A addAllToEndpointSliceItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.discovery.EndpointSlice>);

  public abstract A removeFromEndpointSliceItems(io.dekorate.deps.kubernetes.api.model.discovery.EndpointSlice...);

  public abstract A removeAllFromEndpointSliceItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.discovery.EndpointSlice>);

  public abstract A removeMatchingFromEndpointSliceItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$EndpointSliceItemsNested<A> setNewEndpointSliceItemLike(int, io.dekorate.deps.kubernetes.api.model.discovery.EndpointSlice);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$EndpointSliceItemsNested<A> addNewEndpointSliceItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$EndpointSliceItemsNested<A> addNewEndpointSliceItemLike(io.dekorate.deps.kubernetes.api.model.discovery.EndpointSlice);

  public abstract A addToCronJobItems(int, io.dekorate.deps.kubernetes.api.model.batch.CronJob);

  public abstract A setToCronJobItems(int, io.dekorate.deps.kubernetes.api.model.batch.CronJob);

  public abstract A addToCronJobItems(io.dekorate.deps.kubernetes.api.model.batch.CronJob...);

  public abstract A addAllToCronJobItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.batch.CronJob>);

  public abstract A removeFromCronJobItems(io.dekorate.deps.kubernetes.api.model.batch.CronJob...);

  public abstract A removeAllFromCronJobItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.batch.CronJob>);

  public abstract A removeMatchingFromCronJobItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$CronJobItemsNested<A> setNewCronJobItemLike(int, io.dekorate.deps.kubernetes.api.model.batch.CronJob);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$CronJobItemsNested<A> addNewCronJobItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$CronJobItemsNested<A> addNewCronJobItemLike(io.dekorate.deps.kubernetes.api.model.batch.CronJob);

  public abstract A addToEndpointsItems(int, io.dekorate.deps.kubernetes.api.model.Endpoints);

  public abstract A setToEndpointsItems(int, io.dekorate.deps.kubernetes.api.model.Endpoints);

  public abstract A addToEndpointsItems(io.dekorate.deps.kubernetes.api.model.Endpoints...);

  public abstract A addAllToEndpointsItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.Endpoints>);

  public abstract A removeFromEndpointsItems(io.dekorate.deps.kubernetes.api.model.Endpoints...);

  public abstract A removeAllFromEndpointsItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.Endpoints>);

  public abstract A removeMatchingFromEndpointsItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$EndpointsItemsNested<A> setNewEndpointsItemLike(int, io.dekorate.deps.kubernetes.api.model.Endpoints);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$EndpointsItemsNested<A> addNewEndpointsItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$EndpointsItemsNested<A> addNewEndpointsItemLike(io.dekorate.deps.kubernetes.api.model.Endpoints);

  public abstract A addToPodItems(int, io.dekorate.deps.kubernetes.api.model.Pod);

  public abstract A setToPodItems(int, io.dekorate.deps.kubernetes.api.model.Pod);

  public abstract A addToPodItems(io.dekorate.deps.kubernetes.api.model.Pod...);

  public abstract A addAllToPodItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.Pod>);

  public abstract A removeFromPodItems(io.dekorate.deps.kubernetes.api.model.Pod...);

  public abstract A removeAllFromPodItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.Pod>);

  public abstract A removeMatchingFromPodItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$PodItemsNested<A> setNewPodItemLike(int, io.dekorate.deps.kubernetes.api.model.Pod);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$PodItemsNested<A> addNewPodItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$PodItemsNested<A> addNewPodItemLike(io.dekorate.deps.kubernetes.api.model.Pod);

  public abstract A addToConfigMapItems(int, io.dekorate.deps.kubernetes.api.model.ConfigMap);

  public abstract A setToConfigMapItems(int, io.dekorate.deps.kubernetes.api.model.ConfigMap);

  public abstract A addToConfigMapItems(io.dekorate.deps.kubernetes.api.model.ConfigMap...);

  public abstract A addAllToConfigMapItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.ConfigMap>);

  public abstract A removeFromConfigMapItems(io.dekorate.deps.kubernetes.api.model.ConfigMap...);

  public abstract A removeAllFromConfigMapItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.ConfigMap>);

  public abstract A removeMatchingFromConfigMapItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ConfigMapItemsNested<A> setNewConfigMapItemLike(int, io.dekorate.deps.kubernetes.api.model.ConfigMap);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ConfigMapItemsNested<A> addNewConfigMapItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ConfigMapItemsNested<A> addNewConfigMapItemLike(io.dekorate.deps.kubernetes.api.model.ConfigMap);

  public abstract A addToCustomResourceDefinitionItems(int, io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceDefinition);

  public abstract A setToCustomResourceDefinitionItems(int, io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceDefinition);

  public abstract A addToCustomResourceDefinitionItems(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceDefinition...);

  public abstract A addAllToCustomResourceDefinitionItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceDefinition>);

  public abstract A removeFromCustomResourceDefinitionItems(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceDefinition...);

  public abstract A removeAllFromCustomResourceDefinitionItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceDefinition>);

  public abstract A removeMatchingFromCustomResourceDefinitionItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$CustomResourceDefinitionItemsNested<A> setNewCustomResourceDefinitionItemLike(int, io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceDefinition);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$CustomResourceDefinitionItemsNested<A> addNewCustomResourceDefinitionItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$CustomResourceDefinitionItemsNested<A> addNewCustomResourceDefinitionItemLike(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceDefinition);

  public abstract A addToBuildItems(int, io.dekorate.deps.openshift.api.model.Build);

  public abstract A setToBuildItems(int, io.dekorate.deps.openshift.api.model.Build);

  public abstract A addToBuildItems(io.dekorate.deps.openshift.api.model.Build...);

  public abstract A addAllToBuildItems(java.util.Collection<io.dekorate.deps.openshift.api.model.Build>);

  public abstract A removeFromBuildItems(io.dekorate.deps.openshift.api.model.Build...);

  public abstract A removeAllFromBuildItems(java.util.Collection<io.dekorate.deps.openshift.api.model.Build>);

  public abstract A removeMatchingFromBuildItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$BuildItemsNested<A> setNewBuildItemLike(int, io.dekorate.deps.openshift.api.model.Build);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$BuildItemsNested<A> addNewBuildItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$BuildItemsNested<A> addNewBuildItemLike(io.dekorate.deps.openshift.api.model.Build);

  public abstract A addToImageStreamTagItems(int, io.dekorate.deps.openshift.api.model.ImageStreamTag);

  public abstract A setToImageStreamTagItems(int, io.dekorate.deps.openshift.api.model.ImageStreamTag);

  public abstract A addToImageStreamTagItems(io.dekorate.deps.openshift.api.model.ImageStreamTag...);

  public abstract A addAllToImageStreamTagItems(java.util.Collection<io.dekorate.deps.openshift.api.model.ImageStreamTag>);

  public abstract A removeFromImageStreamTagItems(io.dekorate.deps.openshift.api.model.ImageStreamTag...);

  public abstract A removeAllFromImageStreamTagItems(java.util.Collection<io.dekorate.deps.openshift.api.model.ImageStreamTag>);

  public abstract A removeMatchingFromImageStreamTagItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ImageStreamTagItemsNested<A> setNewImageStreamTagItemLike(int, io.dekorate.deps.openshift.api.model.ImageStreamTag);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ImageStreamTagItemsNested<A> addNewImageStreamTagItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ImageStreamTagItemsNested<A> addNewImageStreamTagItemLike(io.dekorate.deps.openshift.api.model.ImageStreamTag);

  public abstract A addToGroupItems(int, io.dekorate.deps.openshift.api.model.Group);

  public abstract A setToGroupItems(int, io.dekorate.deps.openshift.api.model.Group);

  public abstract A addToGroupItems(io.dekorate.deps.openshift.api.model.Group...);

  public abstract A addAllToGroupItems(java.util.Collection<io.dekorate.deps.openshift.api.model.Group>);

  public abstract A removeFromGroupItems(io.dekorate.deps.openshift.api.model.Group...);

  public abstract A removeAllFromGroupItems(java.util.Collection<io.dekorate.deps.openshift.api.model.Group>);

  public abstract A removeMatchingFromGroupItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$GroupItemsNested<A> setNewGroupItemLike(int, io.dekorate.deps.openshift.api.model.Group);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$GroupItemsNested<A> addNewGroupItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$GroupItemsNested<A> addNewGroupItemLike(io.dekorate.deps.openshift.api.model.Group);

  public abstract A addToImageSignatureItems(int, io.dekorate.deps.openshift.api.model.ImageSignature);

  public abstract A setToImageSignatureItems(int, io.dekorate.deps.openshift.api.model.ImageSignature);

  public abstract A addToImageSignatureItems(io.dekorate.deps.openshift.api.model.ImageSignature...);

  public abstract A addAllToImageSignatureItems(java.util.Collection<io.dekorate.deps.openshift.api.model.ImageSignature>);

  public abstract A removeFromImageSignatureItems(io.dekorate.deps.openshift.api.model.ImageSignature...);

  public abstract A removeAllFromImageSignatureItems(java.util.Collection<io.dekorate.deps.openshift.api.model.ImageSignature>);

  public abstract A removeMatchingFromImageSignatureItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ImageSignatureItemsNested<A> setNewImageSignatureItemLike(int, io.dekorate.deps.openshift.api.model.ImageSignature);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ImageSignatureItemsNested<A> addNewImageSignatureItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ImageSignatureItemsNested<A> addNewImageSignatureItemLike(io.dekorate.deps.openshift.api.model.ImageSignature);

  public abstract A addToScaleItems(int, io.dekorate.deps.kubernetes.api.model.v1.Scale);

  public abstract A setToScaleItems(int, io.dekorate.deps.kubernetes.api.model.v1.Scale);

  public abstract A addToScaleItems(io.dekorate.deps.kubernetes.api.model.v1.Scale...);

  public abstract A addAllToScaleItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.v1.Scale>);

  public abstract A removeFromScaleItems(io.dekorate.deps.kubernetes.api.model.v1.Scale...);

  public abstract A removeAllFromScaleItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.v1.Scale>);

  public abstract A removeMatchingFromScaleItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ScaleItemsNested<A> setNewScaleItemLike(int, io.dekorate.deps.kubernetes.api.model.v1.Scale);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ScaleItemsNested<A> addNewScaleItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ScaleItemsNested<A> addNewScaleItemLike(io.dekorate.deps.kubernetes.api.model.v1.Scale);

  public abstract A addToResourceQuotaItems(int, io.dekorate.deps.kubernetes.api.model.ResourceQuota);

  public abstract A setToResourceQuotaItems(int, io.dekorate.deps.kubernetes.api.model.ResourceQuota);

  public abstract A addToResourceQuotaItems(io.dekorate.deps.kubernetes.api.model.ResourceQuota...);

  public abstract A addAllToResourceQuotaItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.ResourceQuota>);

  public abstract A removeFromResourceQuotaItems(io.dekorate.deps.kubernetes.api.model.ResourceQuota...);

  public abstract A removeAllFromResourceQuotaItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.ResourceQuota>);

  public abstract A removeMatchingFromResourceQuotaItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ResourceQuotaItemsNested<A> setNewResourceQuotaItemLike(int, io.dekorate.deps.kubernetes.api.model.ResourceQuota);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ResourceQuotaItemsNested<A> addNewResourceQuotaItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ResourceQuotaItemsNested<A> addNewResourceQuotaItemLike(io.dekorate.deps.kubernetes.api.model.ResourceQuota);

  public abstract A addToBuildRequestItems(int, io.dekorate.deps.openshift.api.model.BuildRequest);

  public abstract A setToBuildRequestItems(int, io.dekorate.deps.openshift.api.model.BuildRequest);

  public abstract A addToBuildRequestItems(io.dekorate.deps.openshift.api.model.BuildRequest...);

  public abstract A addAllToBuildRequestItems(java.util.Collection<io.dekorate.deps.openshift.api.model.BuildRequest>);

  public abstract A removeFromBuildRequestItems(io.dekorate.deps.openshift.api.model.BuildRequest...);

  public abstract A removeAllFromBuildRequestItems(java.util.Collection<io.dekorate.deps.openshift.api.model.BuildRequest>);

  public abstract A removeMatchingFromBuildRequestItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$BuildRequestItemsNested<A> setNewBuildRequestItemLike(int, io.dekorate.deps.openshift.api.model.BuildRequest);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$BuildRequestItemsNested<A> addNewBuildRequestItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$BuildRequestItemsNested<A> addNewBuildRequestItemLike(io.dekorate.deps.openshift.api.model.BuildRequest);

  public abstract A addToDaemonSetItems(int, io.dekorate.deps.kubernetes.api.model.apps.DaemonSet);

  public abstract A setToDaemonSetItems(int, io.dekorate.deps.kubernetes.api.model.apps.DaemonSet);

  public abstract A addToDaemonSetItems(io.dekorate.deps.kubernetes.api.model.apps.DaemonSet...);

  public abstract A addAllToDaemonSetItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.apps.DaemonSet>);

  public abstract A removeFromDaemonSetItems(io.dekorate.deps.kubernetes.api.model.apps.DaemonSet...);

  public abstract A removeAllFromDaemonSetItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.apps.DaemonSet>);

  public abstract A removeMatchingFromDaemonSetItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$DaemonSetItemsNested<A> setNewDaemonSetItemLike(int, io.dekorate.deps.kubernetes.api.model.apps.DaemonSet);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$DaemonSetItemsNested<A> addNewDaemonSetItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$DaemonSetItemsNested<A> addNewDaemonSetItemLike(io.dekorate.deps.kubernetes.api.model.apps.DaemonSet);

  public abstract A addToImageStreamItems(int, io.dekorate.deps.openshift.api.model.ImageStream);

  public abstract A setToImageStreamItems(int, io.dekorate.deps.openshift.api.model.ImageStream);

  public abstract A addToImageStreamItems(io.dekorate.deps.openshift.api.model.ImageStream...);

  public abstract A addAllToImageStreamItems(java.util.Collection<io.dekorate.deps.openshift.api.model.ImageStream>);

  public abstract A removeFromImageStreamItems(io.dekorate.deps.openshift.api.model.ImageStream...);

  public abstract A removeAllFromImageStreamItems(java.util.Collection<io.dekorate.deps.openshift.api.model.ImageStream>);

  public abstract A removeMatchingFromImageStreamItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ImageStreamItemsNested<A> setNewImageStreamItemLike(int, io.dekorate.deps.openshift.api.model.ImageStream);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ImageStreamItemsNested<A> addNewImageStreamItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ImageStreamItemsNested<A> addNewImageStreamItemLike(io.dekorate.deps.openshift.api.model.ImageStream);

  public abstract A addToOpenshiftRoleItems(int, io.dekorate.deps.openshift.api.model.OpenshiftRole);

  public abstract A setToOpenshiftRoleItems(int, io.dekorate.deps.openshift.api.model.OpenshiftRole);

  public abstract A addToOpenshiftRoleItems(io.dekorate.deps.openshift.api.model.OpenshiftRole...);

  public abstract A addAllToOpenshiftRoleItems(java.util.Collection<io.dekorate.deps.openshift.api.model.OpenshiftRole>);

  public abstract A removeFromOpenshiftRoleItems(io.dekorate.deps.openshift.api.model.OpenshiftRole...);

  public abstract A removeAllFromOpenshiftRoleItems(java.util.Collection<io.dekorate.deps.openshift.api.model.OpenshiftRole>);

  public abstract A removeMatchingFromOpenshiftRoleItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$OpenshiftRoleItemsNested<A> setNewOpenshiftRoleItemLike(int, io.dekorate.deps.openshift.api.model.OpenshiftRole);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$OpenshiftRoleItemsNested<A> addNewOpenshiftRoleItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$OpenshiftRoleItemsNested<A> addNewOpenshiftRoleItemLike(io.dekorate.deps.openshift.api.model.OpenshiftRole);

  public abstract A addToOAuthClientItems(int, io.dekorate.deps.openshift.api.model.OAuthClient);

  public abstract A setToOAuthClientItems(int, io.dekorate.deps.openshift.api.model.OAuthClient);

  public abstract A addToOAuthClientItems(io.dekorate.deps.openshift.api.model.OAuthClient...);

  public abstract A addAllToOAuthClientItems(java.util.Collection<io.dekorate.deps.openshift.api.model.OAuthClient>);

  public abstract A removeFromOAuthClientItems(io.dekorate.deps.openshift.api.model.OAuthClient...);

  public abstract A removeAllFromOAuthClientItems(java.util.Collection<io.dekorate.deps.openshift.api.model.OAuthClient>);

  public abstract A removeMatchingFromOAuthClientItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$OAuthClientItemsNested<A> setNewOAuthClientItemLike(int, io.dekorate.deps.openshift.api.model.OAuthClient);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$OAuthClientItemsNested<A> addNewOAuthClientItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$OAuthClientItemsNested<A> addNewOAuthClientItemLike(io.dekorate.deps.openshift.api.model.OAuthClient);

  public abstract A addToIdentityItems(int, io.dekorate.deps.openshift.api.model.Identity);

  public abstract A setToIdentityItems(int, io.dekorate.deps.openshift.api.model.Identity);

  public abstract A addToIdentityItems(io.dekorate.deps.openshift.api.model.Identity...);

  public abstract A addAllToIdentityItems(java.util.Collection<io.dekorate.deps.openshift.api.model.Identity>);

  public abstract A removeFromIdentityItems(io.dekorate.deps.openshift.api.model.Identity...);

  public abstract A removeAllFromIdentityItems(java.util.Collection<io.dekorate.deps.openshift.api.model.Identity>);

  public abstract A removeMatchingFromIdentityItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$IdentityItemsNested<A> setNewIdentityItemLike(int, io.dekorate.deps.openshift.api.model.Identity);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$IdentityItemsNested<A> addNewIdentityItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$IdentityItemsNested<A> addNewIdentityItemLike(io.dekorate.deps.openshift.api.model.Identity);

  public abstract A addToLimitRangeItems(int, io.dekorate.deps.kubernetes.api.model.LimitRange);

  public abstract A setToLimitRangeItems(int, io.dekorate.deps.kubernetes.api.model.LimitRange);

  public abstract A addToLimitRangeItems(io.dekorate.deps.kubernetes.api.model.LimitRange...);

  public abstract A addAllToLimitRangeItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.LimitRange>);

  public abstract A removeFromLimitRangeItems(io.dekorate.deps.kubernetes.api.model.LimitRange...);

  public abstract A removeAllFromLimitRangeItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.LimitRange>);

  public abstract A removeMatchingFromLimitRangeItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$LimitRangeItemsNested<A> setNewLimitRangeItemLike(int, io.dekorate.deps.kubernetes.api.model.LimitRange);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$LimitRangeItemsNested<A> addNewLimitRangeItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$LimitRangeItemsNested<A> addNewLimitRangeItemLike(io.dekorate.deps.kubernetes.api.model.LimitRange);

  public abstract A addToClusterVersionItems(int, io.dekorate.deps.openshift.api.model.ClusterVersion);

  public abstract A setToClusterVersionItems(int, io.dekorate.deps.openshift.api.model.ClusterVersion);

  public abstract A addToClusterVersionItems(io.dekorate.deps.openshift.api.model.ClusterVersion...);

  public abstract A addAllToClusterVersionItems(java.util.Collection<io.dekorate.deps.openshift.api.model.ClusterVersion>);

  public abstract A removeFromClusterVersionItems(io.dekorate.deps.openshift.api.model.ClusterVersion...);

  public abstract A removeAllFromClusterVersionItems(java.util.Collection<io.dekorate.deps.openshift.api.model.ClusterVersion>);

  public abstract A removeMatchingFromClusterVersionItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ClusterVersionItemsNested<A> setNewClusterVersionItemLike(int, io.dekorate.deps.openshift.api.model.ClusterVersion);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ClusterVersionItemsNested<A> addNewClusterVersionItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ClusterVersionItemsNested<A> addNewClusterVersionItemLike(io.dekorate.deps.openshift.api.model.ClusterVersion);

  public abstract A addToCSIDriverItems(int, io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSIDriver);

  public abstract A setToCSIDriverItems(int, io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSIDriver);

  public abstract A addToCSIDriverItems(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSIDriver...);

  public abstract A addAllToCSIDriverItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSIDriver>);

  public abstract A removeFromCSIDriverItems(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSIDriver...);

  public abstract A removeAllFromCSIDriverItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSIDriver>);

  public abstract A removeMatchingFromCSIDriverItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$CSIDriverItemsNested<A> setNewCSIDriverItemLike(int, io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSIDriver);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$CSIDriverItemsNested<A> addNewCSIDriverItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$CSIDriverItemsNested<A> addNewCSIDriverItemLike(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSIDriver);

  public abstract A addToImageStreamImportItems(int, io.dekorate.deps.openshift.api.model.ImageStreamImport);

  public abstract A setToImageStreamImportItems(int, io.dekorate.deps.openshift.api.model.ImageStreamImport);

  public abstract A addToImageStreamImportItems(io.dekorate.deps.openshift.api.model.ImageStreamImport...);

  public abstract A addAllToImageStreamImportItems(java.util.Collection<io.dekorate.deps.openshift.api.model.ImageStreamImport>);

  public abstract A removeFromImageStreamImportItems(io.dekorate.deps.openshift.api.model.ImageStreamImport...);

  public abstract A removeAllFromImageStreamImportItems(java.util.Collection<io.dekorate.deps.openshift.api.model.ImageStreamImport>);

  public abstract A removeMatchingFromImageStreamImportItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ImageStreamImportItemsNested<A> setNewImageStreamImportItemLike(int, io.dekorate.deps.openshift.api.model.ImageStreamImport);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ImageStreamImportItemsNested<A> addNewImageStreamImportItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ImageStreamImportItemsNested<A> addNewImageStreamImportItemLike(io.dekorate.deps.openshift.api.model.ImageStreamImport);

  public abstract A addToControllerRevisionItems(int, io.dekorate.deps.kubernetes.api.model.apps.ControllerRevision);

  public abstract A setToControllerRevisionItems(int, io.dekorate.deps.kubernetes.api.model.apps.ControllerRevision);

  public abstract A addToControllerRevisionItems(io.dekorate.deps.kubernetes.api.model.apps.ControllerRevision...);

  public abstract A addAllToControllerRevisionItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.apps.ControllerRevision>);

  public abstract A removeFromControllerRevisionItems(io.dekorate.deps.kubernetes.api.model.apps.ControllerRevision...);

  public abstract A removeAllFromControllerRevisionItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.apps.ControllerRevision>);

  public abstract A removeMatchingFromControllerRevisionItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ControllerRevisionItemsNested<A> setNewControllerRevisionItemLike(int, io.dekorate.deps.kubernetes.api.model.apps.ControllerRevision);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ControllerRevisionItemsNested<A> addNewControllerRevisionItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ControllerRevisionItemsNested<A> addNewControllerRevisionItemLike(io.dekorate.deps.kubernetes.api.model.apps.ControllerRevision);

  public abstract A addToOpenshiftRoleBindingRestrictionItems(int, io.dekorate.deps.openshift.api.model.OpenshiftRoleBindingRestriction);

  public abstract A setToOpenshiftRoleBindingRestrictionItems(int, io.dekorate.deps.openshift.api.model.OpenshiftRoleBindingRestriction);

  public abstract A addToOpenshiftRoleBindingRestrictionItems(io.dekorate.deps.openshift.api.model.OpenshiftRoleBindingRestriction...);

  public abstract A addAllToOpenshiftRoleBindingRestrictionItems(java.util.Collection<io.dekorate.deps.openshift.api.model.OpenshiftRoleBindingRestriction>);

  public abstract A removeFromOpenshiftRoleBindingRestrictionItems(io.dekorate.deps.openshift.api.model.OpenshiftRoleBindingRestriction...);

  public abstract A removeAllFromOpenshiftRoleBindingRestrictionItems(java.util.Collection<io.dekorate.deps.openshift.api.model.OpenshiftRoleBindingRestriction>);

  public abstract A removeMatchingFromOpenshiftRoleBindingRestrictionItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$OpenshiftRoleBindingRestrictionItemsNested<A> setNewOpenshiftRoleBindingRestrictionItemLike(int, io.dekorate.deps.openshift.api.model.OpenshiftRoleBindingRestriction);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$OpenshiftRoleBindingRestrictionItemsNested<A> addNewOpenshiftRoleBindingRestrictionItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$OpenshiftRoleBindingRestrictionItemsNested<A> addNewOpenshiftRoleBindingRestrictionItemLike(io.dekorate.deps.openshift.api.model.OpenshiftRoleBindingRestriction);

  public abstract A addToRoleBindingItems(int, io.dekorate.deps.kubernetes.api.model.rbac.RoleBinding);

  public abstract A setToRoleBindingItems(int, io.dekorate.deps.kubernetes.api.model.rbac.RoleBinding);

  public abstract A addToRoleBindingItems(io.dekorate.deps.kubernetes.api.model.rbac.RoleBinding...);

  public abstract A addAllToRoleBindingItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.rbac.RoleBinding>);

  public abstract A removeFromRoleBindingItems(io.dekorate.deps.kubernetes.api.model.rbac.RoleBinding...);

  public abstract A removeAllFromRoleBindingItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.rbac.RoleBinding>);

  public abstract A removeMatchingFromRoleBindingItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$RoleBindingItemsNested<A> setNewRoleBindingItemLike(int, io.dekorate.deps.kubernetes.api.model.rbac.RoleBinding);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$RoleBindingItemsNested<A> addNewRoleBindingItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$RoleBindingItemsNested<A> addNewRoleBindingItemLike(io.dekorate.deps.kubernetes.api.model.rbac.RoleBinding);

  public abstract A addToPodPresetItems(int, io.dekorate.deps.kubernetes.api.model.settings.PodPreset);

  public abstract A setToPodPresetItems(int, io.dekorate.deps.kubernetes.api.model.settings.PodPreset);

  public abstract A addToPodPresetItems(io.dekorate.deps.kubernetes.api.model.settings.PodPreset...);

  public abstract A addAllToPodPresetItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.settings.PodPreset>);

  public abstract A removeFromPodPresetItems(io.dekorate.deps.kubernetes.api.model.settings.PodPreset...);

  public abstract A removeAllFromPodPresetItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.settings.PodPreset>);

  public abstract A removeMatchingFromPodPresetItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$PodPresetItemsNested<A> setNewPodPresetItemLike(int, io.dekorate.deps.kubernetes.api.model.settings.PodPreset);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$PodPresetItemsNested<A> addNewPodPresetItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$PodPresetItemsNested<A> addNewPodPresetItemLike(io.dekorate.deps.kubernetes.api.model.settings.PodPreset);

  public abstract A addToProjectItems(int, io.dekorate.deps.openshift.api.model.Project);

  public abstract A setToProjectItems(int, io.dekorate.deps.openshift.api.model.Project);

  public abstract A addToProjectItems(io.dekorate.deps.openshift.api.model.Project...);

  public abstract A addAllToProjectItems(java.util.Collection<io.dekorate.deps.openshift.api.model.Project>);

  public abstract A removeFromProjectItems(io.dekorate.deps.openshift.api.model.Project...);

  public abstract A removeAllFromProjectItems(java.util.Collection<io.dekorate.deps.openshift.api.model.Project>);

  public abstract A removeMatchingFromProjectItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ProjectItemsNested<A> setNewProjectItemLike(int, io.dekorate.deps.openshift.api.model.Project);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ProjectItemsNested<A> addNewProjectItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ProjectItemsNested<A> addNewProjectItemLike(io.dekorate.deps.openshift.api.model.Project);

  public abstract A addToNodeMetricsItems(int, io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.NodeMetrics);

  public abstract A setToNodeMetricsItems(int, io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.NodeMetrics);

  public abstract A addToNodeMetricsItems(io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.NodeMetrics...);

  public abstract A addAllToNodeMetricsItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.NodeMetrics>);

  public abstract A removeFromNodeMetricsItems(io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.NodeMetrics...);

  public abstract A removeAllFromNodeMetricsItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.NodeMetrics>);

  public abstract A removeMatchingFromNodeMetricsItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$NodeMetricsItemsNested<A> setNewNodeMetricsItemLike(int, io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.NodeMetrics);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$NodeMetricsItemsNested<A> addNewNodeMetricsItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$NodeMetricsItemsNested<A> addNewNodeMetricsItemLike(io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.NodeMetrics);

  public abstract A addToBuildConfigItems(int, io.dekorate.deps.openshift.api.model.BuildConfig);

  public abstract A setToBuildConfigItems(int, io.dekorate.deps.openshift.api.model.BuildConfig);

  public abstract A addToBuildConfigItems(io.dekorate.deps.openshift.api.model.BuildConfig...);

  public abstract A addAllToBuildConfigItems(java.util.Collection<io.dekorate.deps.openshift.api.model.BuildConfig>);

  public abstract A removeFromBuildConfigItems(io.dekorate.deps.openshift.api.model.BuildConfig...);

  public abstract A removeAllFromBuildConfigItems(java.util.Collection<io.dekorate.deps.openshift.api.model.BuildConfig>);

  public abstract A removeMatchingFromBuildConfigItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$BuildConfigItemsNested<A> setNewBuildConfigItemLike(int, io.dekorate.deps.openshift.api.model.BuildConfig);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$BuildConfigItemsNested<A> addNewBuildConfigItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$BuildConfigItemsNested<A> addNewBuildConfigItemLike(io.dekorate.deps.openshift.api.model.BuildConfig);

  public abstract A addToClusterRoleItems(int, io.dekorate.deps.kubernetes.api.model.rbac.ClusterRole);

  public abstract A setToClusterRoleItems(int, io.dekorate.deps.kubernetes.api.model.rbac.ClusterRole);

  public abstract A addToClusterRoleItems(io.dekorate.deps.kubernetes.api.model.rbac.ClusterRole...);

  public abstract A addAllToClusterRoleItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.rbac.ClusterRole>);

  public abstract A removeFromClusterRoleItems(io.dekorate.deps.kubernetes.api.model.rbac.ClusterRole...);

  public abstract A removeAllFromClusterRoleItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.rbac.ClusterRole>);

  public abstract A removeMatchingFromClusterRoleItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ClusterRoleItemsNested<A> setNewClusterRoleItemLike(int, io.dekorate.deps.kubernetes.api.model.rbac.ClusterRole);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ClusterRoleItemsNested<A> addNewClusterRoleItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ClusterRoleItemsNested<A> addNewClusterRoleItemLike(io.dekorate.deps.kubernetes.api.model.rbac.ClusterRole);

  public abstract A addToVolumeAttachmentItems(int, io.dekorate.deps.kubernetes.api.model.storage.VolumeAttachment);

  public abstract A setToVolumeAttachmentItems(int, io.dekorate.deps.kubernetes.api.model.storage.VolumeAttachment);

  public abstract A addToVolumeAttachmentItems(io.dekorate.deps.kubernetes.api.model.storage.VolumeAttachment...);

  public abstract A addAllToVolumeAttachmentItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.storage.VolumeAttachment>);

  public abstract A removeFromVolumeAttachmentItems(io.dekorate.deps.kubernetes.api.model.storage.VolumeAttachment...);

  public abstract A removeAllFromVolumeAttachmentItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.storage.VolumeAttachment>);

  public abstract A removeMatchingFromVolumeAttachmentItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$VolumeAttachmentItemsNested<A> setNewVolumeAttachmentItemLike(int, io.dekorate.deps.kubernetes.api.model.storage.VolumeAttachment);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$VolumeAttachmentItemsNested<A> addNewVolumeAttachmentItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$VolumeAttachmentItemsNested<A> addNewVolumeAttachmentItemLike(io.dekorate.deps.kubernetes.api.model.storage.VolumeAttachment);

  public abstract A addToOAuthAuthorizeTokenItems(int, io.dekorate.deps.openshift.api.model.OAuthAuthorizeToken);

  public abstract A setToOAuthAuthorizeTokenItems(int, io.dekorate.deps.openshift.api.model.OAuthAuthorizeToken);

  public abstract A addToOAuthAuthorizeTokenItems(io.dekorate.deps.openshift.api.model.OAuthAuthorizeToken...);

  public abstract A addAllToOAuthAuthorizeTokenItems(java.util.Collection<io.dekorate.deps.openshift.api.model.OAuthAuthorizeToken>);

  public abstract A removeFromOAuthAuthorizeTokenItems(io.dekorate.deps.openshift.api.model.OAuthAuthorizeToken...);

  public abstract A removeAllFromOAuthAuthorizeTokenItems(java.util.Collection<io.dekorate.deps.openshift.api.model.OAuthAuthorizeToken>);

  public abstract A removeMatchingFromOAuthAuthorizeTokenItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$OAuthAuthorizeTokenItemsNested<A> setNewOAuthAuthorizeTokenItemLike(int, io.dekorate.deps.openshift.api.model.OAuthAuthorizeToken);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$OAuthAuthorizeTokenItemsNested<A> addNewOAuthAuthorizeTokenItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$OAuthAuthorizeTokenItemsNested<A> addNewOAuthAuthorizeTokenItemLike(io.dekorate.deps.openshift.api.model.OAuthAuthorizeToken);

  public abstract A addToSelfSubjectAccessReviewItems(int, io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectAccessReview);

  public abstract A setToSelfSubjectAccessReviewItems(int, io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectAccessReview);

  public abstract A addToSelfSubjectAccessReviewItems(io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectAccessReview...);

  public abstract A addAllToSelfSubjectAccessReviewItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectAccessReview>);

  public abstract A removeFromSelfSubjectAccessReviewItems(io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectAccessReview...);

  public abstract A removeAllFromSelfSubjectAccessReviewItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectAccessReview>);

  public abstract A removeMatchingFromSelfSubjectAccessReviewItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$SelfSubjectAccessReviewItemsNested<A> setNewSelfSubjectAccessReviewItemLike(int, io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectAccessReview);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$SelfSubjectAccessReviewItemsNested<A> addNewSelfSubjectAccessReviewItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$SelfSubjectAccessReviewItemsNested<A> addNewSelfSubjectAccessReviewItemLike(io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectAccessReview);

  public abstract A addToProjectRequestItems(int, io.dekorate.deps.openshift.api.model.ProjectRequest);

  public abstract A setToProjectRequestItems(int, io.dekorate.deps.openshift.api.model.ProjectRequest);

  public abstract A addToProjectRequestItems(io.dekorate.deps.openshift.api.model.ProjectRequest...);

  public abstract A addAllToProjectRequestItems(java.util.Collection<io.dekorate.deps.openshift.api.model.ProjectRequest>);

  public abstract A removeFromProjectRequestItems(io.dekorate.deps.openshift.api.model.ProjectRequest...);

  public abstract A removeAllFromProjectRequestItems(java.util.Collection<io.dekorate.deps.openshift.api.model.ProjectRequest>);

  public abstract A removeMatchingFromProjectRequestItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ProjectRequestItemsNested<A> setNewProjectRequestItemLike(int, io.dekorate.deps.openshift.api.model.ProjectRequest);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ProjectRequestItemsNested<A> addNewProjectRequestItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ProjectRequestItemsNested<A> addNewProjectRequestItemLike(io.dekorate.deps.openshift.api.model.ProjectRequest);

  public abstract A addToTemplateItems(int, io.dekorate.deps.openshift.api.model.Template);

  public abstract A setToTemplateItems(int, io.dekorate.deps.openshift.api.model.Template);

  public abstract A addToTemplateItems(io.dekorate.deps.openshift.api.model.Template...);

  public abstract A addAllToTemplateItems(java.util.Collection<io.dekorate.deps.openshift.api.model.Template>);

  public abstract A removeFromTemplateItems(io.dekorate.deps.openshift.api.model.Template...);

  public abstract A removeAllFromTemplateItems(java.util.Collection<io.dekorate.deps.openshift.api.model.Template>);

  public abstract A removeMatchingFromTemplateItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$TemplateItemsNested<A> setNewTemplateItemLike(int, io.dekorate.deps.openshift.api.model.Template);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$TemplateItemsNested<A> addNewTemplateItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$TemplateItemsNested<A> addNewTemplateItemLike(io.dekorate.deps.openshift.api.model.Template);

  public abstract A addToPriorityClassItems(int, io.dekorate.deps.kubernetes.api.model.scheduling.PriorityClass);

  public abstract A setToPriorityClassItems(int, io.dekorate.deps.kubernetes.api.model.scheduling.PriorityClass);

  public abstract A addToPriorityClassItems(io.dekorate.deps.kubernetes.api.model.scheduling.PriorityClass...);

  public abstract A addAllToPriorityClassItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.scheduling.PriorityClass>);

  public abstract A removeFromPriorityClassItems(io.dekorate.deps.kubernetes.api.model.scheduling.PriorityClass...);

  public abstract A removeAllFromPriorityClassItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.scheduling.PriorityClass>);

  public abstract A removeMatchingFromPriorityClassItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$PriorityClassItemsNested<A> setNewPriorityClassItemLike(int, io.dekorate.deps.kubernetes.api.model.scheduling.PriorityClass);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$PriorityClassItemsNested<A> addNewPriorityClassItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$PriorityClassItemsNested<A> addNewPriorityClassItemLike(io.dekorate.deps.kubernetes.api.model.scheduling.PriorityClass);

  public abstract A addToOAuthClientAuthorizationItems(int, io.dekorate.deps.openshift.api.model.OAuthClientAuthorization);

  public abstract A setToOAuthClientAuthorizationItems(int, io.dekorate.deps.openshift.api.model.OAuthClientAuthorization);

  public abstract A addToOAuthClientAuthorizationItems(io.dekorate.deps.openshift.api.model.OAuthClientAuthorization...);

  public abstract A addAllToOAuthClientAuthorizationItems(java.util.Collection<io.dekorate.deps.openshift.api.model.OAuthClientAuthorization>);

  public abstract A removeFromOAuthClientAuthorizationItems(io.dekorate.deps.openshift.api.model.OAuthClientAuthorization...);

  public abstract A removeAllFromOAuthClientAuthorizationItems(java.util.Collection<io.dekorate.deps.openshift.api.model.OAuthClientAuthorization>);

  public abstract A removeMatchingFromOAuthClientAuthorizationItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$OAuthClientAuthorizationItemsNested<A> setNewOAuthClientAuthorizationItemLike(int, io.dekorate.deps.openshift.api.model.OAuthClientAuthorization);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$OAuthClientAuthorizationItemsNested<A> addNewOAuthClientAuthorizationItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$OAuthClientAuthorizationItemsNested<A> addNewOAuthClientAuthorizationItemLike(io.dekorate.deps.openshift.api.model.OAuthClientAuthorization);

  public abstract A addToDeploymentItems(int, io.dekorate.deps.kubernetes.api.model.apps.Deployment);

  public abstract A setToDeploymentItems(int, io.dekorate.deps.kubernetes.api.model.apps.Deployment);

  public abstract A addToDeploymentItems(io.dekorate.deps.kubernetes.api.model.apps.Deployment...);

  public abstract A addAllToDeploymentItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.apps.Deployment>);

  public abstract A removeFromDeploymentItems(io.dekorate.deps.kubernetes.api.model.apps.Deployment...);

  public abstract A removeAllFromDeploymentItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.apps.Deployment>);

  public abstract A removeMatchingFromDeploymentItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$DeploymentItemsNested<A> setNewDeploymentItemLike(int, io.dekorate.deps.kubernetes.api.model.apps.Deployment);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$DeploymentItemsNested<A> addNewDeploymentItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$DeploymentItemsNested<A> addNewDeploymentItemLike(io.dekorate.deps.kubernetes.api.model.apps.Deployment);

  public abstract A addToPodTemplateItems(int, io.dekorate.deps.kubernetes.api.model.PodTemplate);

  public abstract A setToPodTemplateItems(int, io.dekorate.deps.kubernetes.api.model.PodTemplate);

  public abstract A addToPodTemplateItems(io.dekorate.deps.kubernetes.api.model.PodTemplate...);

  public abstract A addAllToPodTemplateItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.PodTemplate>);

  public abstract A removeFromPodTemplateItems(io.dekorate.deps.kubernetes.api.model.PodTemplate...);

  public abstract A removeAllFromPodTemplateItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.PodTemplate>);

  public abstract A removeMatchingFromPodTemplateItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$PodTemplateItemsNested<A> setNewPodTemplateItemLike(int, io.dekorate.deps.kubernetes.api.model.PodTemplate);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$PodTemplateItemsNested<A> addNewPodTemplateItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$PodTemplateItemsNested<A> addNewPodTemplateItemLike(io.dekorate.deps.kubernetes.api.model.PodTemplate);

  public abstract A addToEventItems(int, io.dekorate.deps.kubernetes.api.model.Event);

  public abstract A setToEventItems(int, io.dekorate.deps.kubernetes.api.model.Event);

  public abstract A addToEventItems(io.dekorate.deps.kubernetes.api.model.Event...);

  public abstract A addAllToEventItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.Event>);

  public abstract A removeFromEventItems(io.dekorate.deps.kubernetes.api.model.Event...);

  public abstract A removeAllFromEventItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.Event>);

  public abstract A removeMatchingFromEventItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$EventItemsNested<A> setNewEventItemLike(int, io.dekorate.deps.kubernetes.api.model.Event);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$EventItemsNested<A> addNewEventItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$EventItemsNested<A> addNewEventItemLike(io.dekorate.deps.kubernetes.api.model.Event);

  public abstract A addToIngressItems(int, io.dekorate.deps.kubernetes.api.model.extensions.Ingress);

  public abstract A setToIngressItems(int, io.dekorate.deps.kubernetes.api.model.extensions.Ingress);

  public abstract A addToIngressItems(io.dekorate.deps.kubernetes.api.model.extensions.Ingress...);

  public abstract A addAllToIngressItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.extensions.Ingress>);

  public abstract A removeFromIngressItems(io.dekorate.deps.kubernetes.api.model.extensions.Ingress...);

  public abstract A removeAllFromIngressItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.extensions.Ingress>);

  public abstract A removeMatchingFromIngressItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$IngressItemsNested<A> setNewIngressItemLike(int, io.dekorate.deps.kubernetes.api.model.extensions.Ingress);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$IngressItemsNested<A> addNewIngressItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$IngressItemsNested<A> addNewIngressItemLike(io.dekorate.deps.kubernetes.api.model.extensions.Ingress);

  public abstract A addToDeploymentConfigItems(int, io.dekorate.deps.openshift.api.model.DeploymentConfig);

  public abstract A setToDeploymentConfigItems(int, io.dekorate.deps.openshift.api.model.DeploymentConfig);

  public abstract A addToDeploymentConfigItems(io.dekorate.deps.openshift.api.model.DeploymentConfig...);

  public abstract A addAllToDeploymentConfigItems(java.util.Collection<io.dekorate.deps.openshift.api.model.DeploymentConfig>);

  public abstract A removeFromDeploymentConfigItems(io.dekorate.deps.openshift.api.model.DeploymentConfig...);

  public abstract A removeAllFromDeploymentConfigItems(java.util.Collection<io.dekorate.deps.openshift.api.model.DeploymentConfig>);

  public abstract A removeMatchingFromDeploymentConfigItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$DeploymentConfigItemsNested<A> setNewDeploymentConfigItemLike(int, io.dekorate.deps.openshift.api.model.DeploymentConfig);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$DeploymentConfigItemsNested<A> addNewDeploymentConfigItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$DeploymentConfigItemsNested<A> addNewDeploymentConfigItemLike(io.dekorate.deps.openshift.api.model.DeploymentConfig);

  public abstract A addToOAuthAccessTokenItems(int, io.dekorate.deps.openshift.api.model.OAuthAccessToken);

  public abstract A setToOAuthAccessTokenItems(int, io.dekorate.deps.openshift.api.model.OAuthAccessToken);

  public abstract A addToOAuthAccessTokenItems(io.dekorate.deps.openshift.api.model.OAuthAccessToken...);

  public abstract A addAllToOAuthAccessTokenItems(java.util.Collection<io.dekorate.deps.openshift.api.model.OAuthAccessToken>);

  public abstract A removeFromOAuthAccessTokenItems(io.dekorate.deps.openshift.api.model.OAuthAccessToken...);

  public abstract A removeAllFromOAuthAccessTokenItems(java.util.Collection<io.dekorate.deps.openshift.api.model.OAuthAccessToken>);

  public abstract A removeMatchingFromOAuthAccessTokenItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$OAuthAccessTokenItemsNested<A> setNewOAuthAccessTokenItemLike(int, io.dekorate.deps.openshift.api.model.OAuthAccessToken);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$OAuthAccessTokenItemsNested<A> addNewOAuthAccessTokenItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$OAuthAccessTokenItemsNested<A> addNewOAuthAccessTokenItemLike(io.dekorate.deps.openshift.api.model.OAuthAccessToken);

  public abstract A addToPersistentVolumeItems(int, io.dekorate.deps.kubernetes.api.model.PersistentVolume);

  public abstract A setToPersistentVolumeItems(int, io.dekorate.deps.kubernetes.api.model.PersistentVolume);

  public abstract A addToPersistentVolumeItems(io.dekorate.deps.kubernetes.api.model.PersistentVolume...);

  public abstract A addAllToPersistentVolumeItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.PersistentVolume>);

  public abstract A removeFromPersistentVolumeItems(io.dekorate.deps.kubernetes.api.model.PersistentVolume...);

  public abstract A removeAllFromPersistentVolumeItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.PersistentVolume>);

  public abstract A removeMatchingFromPersistentVolumeItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$PersistentVolumeItemsNested<A> setNewPersistentVolumeItemLike(int, io.dekorate.deps.kubernetes.api.model.PersistentVolume);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$PersistentVolumeItemsNested<A> addNewPersistentVolumeItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$PersistentVolumeItemsNested<A> addNewPersistentVolumeItemLike(io.dekorate.deps.kubernetes.api.model.PersistentVolume);

  public abstract A addToPersistentVolumeClaimItems(int, io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaim);

  public abstract A setToPersistentVolumeClaimItems(int, io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaim);

  public abstract A addToPersistentVolumeClaimItems(io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaim...);

  public abstract A addAllToPersistentVolumeClaimItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaim>);

  public abstract A removeFromPersistentVolumeClaimItems(io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaim...);

  public abstract A removeAllFromPersistentVolumeClaimItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaim>);

  public abstract A removeMatchingFromPersistentVolumeClaimItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$PersistentVolumeClaimItemsNested<A> setNewPersistentVolumeClaimItemLike(int, io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaim);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$PersistentVolumeClaimItemsNested<A> addNewPersistentVolumeClaimItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$PersistentVolumeClaimItemsNested<A> addNewPersistentVolumeClaimItemLike(io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaim);

  public abstract A addToPodSecurityPolicyItems(int, io.dekorate.deps.kubernetes.api.model.policy.PodSecurityPolicy);

  public abstract A setToPodSecurityPolicyItems(int, io.dekorate.deps.kubernetes.api.model.policy.PodSecurityPolicy);

  public abstract A addToPodSecurityPolicyItems(io.dekorate.deps.kubernetes.api.model.policy.PodSecurityPolicy...);

  public abstract A addAllToPodSecurityPolicyItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.policy.PodSecurityPolicy>);

  public abstract A removeFromPodSecurityPolicyItems(io.dekorate.deps.kubernetes.api.model.policy.PodSecurityPolicy...);

  public abstract A removeAllFromPodSecurityPolicyItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.policy.PodSecurityPolicy>);

  public abstract A removeMatchingFromPodSecurityPolicyItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$PodSecurityPolicyItemsNested<A> setNewPodSecurityPolicyItemLike(int, io.dekorate.deps.kubernetes.api.model.policy.PodSecurityPolicy);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$PodSecurityPolicyItemsNested<A> addNewPodSecurityPolicyItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$PodSecurityPolicyItemsNested<A> addNewPodSecurityPolicyItemLike(io.dekorate.deps.kubernetes.api.model.policy.PodSecurityPolicy);

  public abstract A addToEventItems(int, io.dekorate.deps.kubernetes.api.model.events.Event);

  public abstract A setToEventItems(int, io.dekorate.deps.kubernetes.api.model.events.Event);

  public abstract A addToEventItems(io.dekorate.deps.kubernetes.api.model.events.Event...);

  public abstract A addAllToEventsEventItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.events.Event>);

  public abstract A removeFromEventItems(io.dekorate.deps.kubernetes.api.model.events.Event...);

  public abstract A removeAllFromEventsEventItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.events.Event>);

  public abstract A removeMatchingFromEventsEventItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$EventsEventItemsNested<A> setNewEventItemLike(int, io.dekorate.deps.kubernetes.api.model.events.Event);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$EventsEventItemsNested<A> addNewEventsEventItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$EventsEventItemsNested<A> addNewEventItemLike(io.dekorate.deps.kubernetes.api.model.events.Event);

  public abstract A addToStatefulSetItems(int, io.dekorate.deps.kubernetes.api.model.apps.StatefulSet);

  public abstract A setToStatefulSetItems(int, io.dekorate.deps.kubernetes.api.model.apps.StatefulSet);

  public abstract A addToStatefulSetItems(io.dekorate.deps.kubernetes.api.model.apps.StatefulSet...);

  public abstract A addAllToStatefulSetItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.apps.StatefulSet>);

  public abstract A removeFromStatefulSetItems(io.dekorate.deps.kubernetes.api.model.apps.StatefulSet...);

  public abstract A removeAllFromStatefulSetItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.apps.StatefulSet>);

  public abstract A removeMatchingFromStatefulSetItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$StatefulSetItemsNested<A> setNewStatefulSetItemLike(int, io.dekorate.deps.kubernetes.api.model.apps.StatefulSet);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$StatefulSetItemsNested<A> addNewStatefulSetItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$StatefulSetItemsNested<A> addNewStatefulSetItemLike(io.dekorate.deps.kubernetes.api.model.apps.StatefulSet);

  public abstract A addToOpenshiftClusterRoleItems(int, io.dekorate.deps.openshift.api.model.OpenshiftClusterRole);

  public abstract A setToOpenshiftClusterRoleItems(int, io.dekorate.deps.openshift.api.model.OpenshiftClusterRole);

  public abstract A addToOpenshiftClusterRoleItems(io.dekorate.deps.openshift.api.model.OpenshiftClusterRole...);

  public abstract A addAllToOpenshiftClusterRoleItems(java.util.Collection<io.dekorate.deps.openshift.api.model.OpenshiftClusterRole>);

  public abstract A removeFromOpenshiftClusterRoleItems(io.dekorate.deps.openshift.api.model.OpenshiftClusterRole...);

  public abstract A removeAllFromOpenshiftClusterRoleItems(java.util.Collection<io.dekorate.deps.openshift.api.model.OpenshiftClusterRole>);

  public abstract A removeMatchingFromOpenshiftClusterRoleItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$OpenshiftClusterRoleItemsNested<A> setNewOpenshiftClusterRoleItemLike(int, io.dekorate.deps.openshift.api.model.OpenshiftClusterRole);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$OpenshiftClusterRoleItemsNested<A> addNewOpenshiftClusterRoleItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$OpenshiftClusterRoleItemsNested<A> addNewOpenshiftClusterRoleItemLike(io.dekorate.deps.openshift.api.model.OpenshiftClusterRole);

  public abstract A addToSelfSubjectRulesReviewItems(int, io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectRulesReview);

  public abstract A setToSelfSubjectRulesReviewItems(int, io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectRulesReview);

  public abstract A addToSelfSubjectRulesReviewItems(io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectRulesReview...);

  public abstract A addAllToSelfSubjectRulesReviewItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectRulesReview>);

  public abstract A removeFromSelfSubjectRulesReviewItems(io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectRulesReview...);

  public abstract A removeAllFromSelfSubjectRulesReviewItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectRulesReview>);

  public abstract A removeMatchingFromSelfSubjectRulesReviewItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$SelfSubjectRulesReviewItemsNested<A> setNewSelfSubjectRulesReviewItemLike(int, io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectRulesReview);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$SelfSubjectRulesReviewItemsNested<A> addNewSelfSubjectRulesReviewItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$SelfSubjectRulesReviewItemsNested<A> addNewSelfSubjectRulesReviewItemLike(io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectRulesReview);

  public abstract A addToRoleItems(int, io.dekorate.deps.kubernetes.api.model.rbac.Role);

  public abstract A setToRoleItems(int, io.dekorate.deps.kubernetes.api.model.rbac.Role);

  public abstract A addToRoleItems(io.dekorate.deps.kubernetes.api.model.rbac.Role...);

  public abstract A addAllToRoleItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.rbac.Role>);

  public abstract A removeFromRoleItems(io.dekorate.deps.kubernetes.api.model.rbac.Role...);

  public abstract A removeAllFromRoleItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.rbac.Role>);

  public abstract A removeMatchingFromRoleItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$RoleItemsNested<A> setNewRoleItemLike(int, io.dekorate.deps.kubernetes.api.model.rbac.Role);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$RoleItemsNested<A> addNewRoleItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$RoleItemsNested<A> addNewRoleItemLike(io.dekorate.deps.kubernetes.api.model.rbac.Role);

  public abstract A addToUserItems(int, io.dekorate.deps.openshift.api.model.User);

  public abstract A setToUserItems(int, io.dekorate.deps.openshift.api.model.User);

  public abstract A addToUserItems(io.dekorate.deps.openshift.api.model.User...);

  public abstract A addAllToUserItems(java.util.Collection<io.dekorate.deps.openshift.api.model.User>);

  public abstract A removeFromUserItems(io.dekorate.deps.openshift.api.model.User...);

  public abstract A removeAllFromUserItems(java.util.Collection<io.dekorate.deps.openshift.api.model.User>);

  public abstract A removeMatchingFromUserItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$UserItemsNested<A> setNewUserItemLike(int, io.dekorate.deps.openshift.api.model.User);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$UserItemsNested<A> addNewUserItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$UserItemsNested<A> addNewUserItemLike(io.dekorate.deps.openshift.api.model.User);

  public abstract A addToComponentStatusItems(int, io.dekorate.deps.kubernetes.api.model.ComponentStatus);

  public abstract A setToComponentStatusItems(int, io.dekorate.deps.kubernetes.api.model.ComponentStatus);

  public abstract A addToComponentStatusItems(io.dekorate.deps.kubernetes.api.model.ComponentStatus...);

  public abstract A addAllToComponentStatusItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.ComponentStatus>);

  public abstract A removeFromComponentStatusItems(io.dekorate.deps.kubernetes.api.model.ComponentStatus...);

  public abstract A removeAllFromComponentStatusItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.ComponentStatus>);

  public abstract A removeMatchingFromComponentStatusItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ComponentStatusItemsNested<A> setNewComponentStatusItemLike(int, io.dekorate.deps.kubernetes.api.model.ComponentStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ComponentStatusItemsNested<A> addNewComponentStatusItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ComponentStatusItemsNested<A> addNewComponentStatusItemLike(io.dekorate.deps.kubernetes.api.model.ComponentStatus);

  public abstract A addToTokenReviewItems(int, io.dekorate.deps.kubernetes.api.model.authentication.TokenReview);

  public abstract A setToTokenReviewItems(int, io.dekorate.deps.kubernetes.api.model.authentication.TokenReview);

  public abstract A addToTokenReviewItems(io.dekorate.deps.kubernetes.api.model.authentication.TokenReview...);

  public abstract A addAllToTokenReviewItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.authentication.TokenReview>);

  public abstract A removeFromTokenReviewItems(io.dekorate.deps.kubernetes.api.model.authentication.TokenReview...);

  public abstract A removeAllFromTokenReviewItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.authentication.TokenReview>);

  public abstract A removeMatchingFromTokenReviewItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$TokenReviewItemsNested<A> setNewTokenReviewItemLike(int, io.dekorate.deps.kubernetes.api.model.authentication.TokenReview);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$TokenReviewItemsNested<A> addNewTokenReviewItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$TokenReviewItemsNested<A> addNewTokenReviewItemLike(io.dekorate.deps.kubernetes.api.model.authentication.TokenReview);

  public abstract A addToBindingItems(int, io.dekorate.deps.kubernetes.api.model.Binding);

  public abstract A setToBindingItems(int, io.dekorate.deps.kubernetes.api.model.Binding);

  public abstract A addToBindingItems(io.dekorate.deps.kubernetes.api.model.Binding...);

  public abstract A addAllToBindingItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.Binding>);

  public abstract A removeFromBindingItems(io.dekorate.deps.kubernetes.api.model.Binding...);

  public abstract A removeAllFromBindingItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.Binding>);

  public abstract A removeMatchingFromBindingItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$BindingItemsNested<A> setNewBindingItemLike(int, io.dekorate.deps.kubernetes.api.model.Binding);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$BindingItemsNested<A> addNewBindingItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$BindingItemsNested<A> addNewBindingItemLike(io.dekorate.deps.kubernetes.api.model.Binding);

  public abstract A addToSecretItems(int, io.dekorate.deps.kubernetes.api.model.Secret);

  public abstract A setToSecretItems(int, io.dekorate.deps.kubernetes.api.model.Secret);

  public abstract A addToSecretItems(io.dekorate.deps.kubernetes.api.model.Secret...);

  public abstract A addAllToSecretItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.Secret>);

  public abstract A removeFromSecretItems(io.dekorate.deps.kubernetes.api.model.Secret...);

  public abstract A removeAllFromSecretItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.Secret>);

  public abstract A removeMatchingFromSecretItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$SecretItemsNested<A> setNewSecretItemLike(int, io.dekorate.deps.kubernetes.api.model.Secret);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$SecretItemsNested<A> addNewSecretItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$SecretItemsNested<A> addNewSecretItemLike(io.dekorate.deps.kubernetes.api.model.Secret);

  public abstract A addToSecurityContextConstraintsItems(int, io.dekorate.deps.openshift.api.model.SecurityContextConstraints);

  public abstract A setToSecurityContextConstraintsItems(int, io.dekorate.deps.openshift.api.model.SecurityContextConstraints);

  public abstract A addToSecurityContextConstraintsItems(io.dekorate.deps.openshift.api.model.SecurityContextConstraints...);

  public abstract A addAllToSecurityContextConstraintsItems(java.util.Collection<io.dekorate.deps.openshift.api.model.SecurityContextConstraints>);

  public abstract A removeFromSecurityContextConstraintsItems(io.dekorate.deps.openshift.api.model.SecurityContextConstraints...);

  public abstract A removeAllFromSecurityContextConstraintsItems(java.util.Collection<io.dekorate.deps.openshift.api.model.SecurityContextConstraints>);

  public abstract A removeMatchingFromSecurityContextConstraintsItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$SecurityContextConstraintsItemsNested<A> setNewSecurityContextConstraintsItemLike(int, io.dekorate.deps.openshift.api.model.SecurityContextConstraints);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$SecurityContextConstraintsItemsNested<A> addNewSecurityContextConstraintsItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$SecurityContextConstraintsItemsNested<A> addNewSecurityContextConstraintsItemLike(io.dekorate.deps.openshift.api.model.SecurityContextConstraints);

  public abstract A addToNetNamespaceItems(int, io.dekorate.deps.openshift.api.model.NetNamespace);

  public abstract A setToNetNamespaceItems(int, io.dekorate.deps.openshift.api.model.NetNamespace);

  public abstract A addToNetNamespaceItems(io.dekorate.deps.openshift.api.model.NetNamespace...);

  public abstract A addAllToNetNamespaceItems(java.util.Collection<io.dekorate.deps.openshift.api.model.NetNamespace>);

  public abstract A removeFromNetNamespaceItems(io.dekorate.deps.openshift.api.model.NetNamespace...);

  public abstract A removeAllFromNetNamespaceItems(java.util.Collection<io.dekorate.deps.openshift.api.model.NetNamespace>);

  public abstract A removeMatchingFromNetNamespaceItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$NetNamespaceItemsNested<A> setNewNetNamespaceItemLike(int, io.dekorate.deps.openshift.api.model.NetNamespace);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$NetNamespaceItemsNested<A> addNewNetNamespaceItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$NetNamespaceItemsNested<A> addNewNetNamespaceItemLike(io.dekorate.deps.openshift.api.model.NetNamespace);

  public abstract A addToNodeItems(int, io.dekorate.deps.kubernetes.api.model.Node);

  public abstract A setToNodeItems(int, io.dekorate.deps.kubernetes.api.model.Node);

  public abstract A addToNodeItems(io.dekorate.deps.kubernetes.api.model.Node...);

  public abstract A addAllToNodeItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.Node>);

  public abstract A removeFromNodeItems(io.dekorate.deps.kubernetes.api.model.Node...);

  public abstract A removeAllFromNodeItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.Node>);

  public abstract A removeMatchingFromNodeItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$NodeItemsNested<A> setNewNodeItemLike(int, io.dekorate.deps.kubernetes.api.model.Node);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$NodeItemsNested<A> addNewNodeItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$NodeItemsNested<A> addNewNodeItemLike(io.dekorate.deps.kubernetes.api.model.Node);

  public abstract A addToJobItems(int, io.dekorate.deps.kubernetes.api.model.batch.Job);

  public abstract A setToJobItems(int, io.dekorate.deps.kubernetes.api.model.batch.Job);

  public abstract A addToJobItems(io.dekorate.deps.kubernetes.api.model.batch.Job...);

  public abstract A addAllToJobItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.batch.Job>);

  public abstract A removeFromJobItems(io.dekorate.deps.kubernetes.api.model.batch.Job...);

  public abstract A removeAllFromJobItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.batch.Job>);

  public abstract A removeMatchingFromJobItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$JobItemsNested<A> setNewJobItemLike(int, io.dekorate.deps.kubernetes.api.model.batch.Job);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$JobItemsNested<A> addNewJobItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$JobItemsNested<A> addNewJobItemLike(io.dekorate.deps.kubernetes.api.model.batch.Job);

  public abstract A addToCertificateSigningRequestItems(int, io.dekorate.deps.kubernetes.api.model.certificates.CertificateSigningRequest);

  public abstract A setToCertificateSigningRequestItems(int, io.dekorate.deps.kubernetes.api.model.certificates.CertificateSigningRequest);

  public abstract A addToCertificateSigningRequestItems(io.dekorate.deps.kubernetes.api.model.certificates.CertificateSigningRequest...);

  public abstract A addAllToCertificateSigningRequestItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.certificates.CertificateSigningRequest>);

  public abstract A removeFromCertificateSigningRequestItems(io.dekorate.deps.kubernetes.api.model.certificates.CertificateSigningRequest...);

  public abstract A removeAllFromCertificateSigningRequestItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.certificates.CertificateSigningRequest>);

  public abstract A removeMatchingFromCertificateSigningRequestItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$CertificateSigningRequestItemsNested<A> setNewCertificateSigningRequestItemLike(int, io.dekorate.deps.kubernetes.api.model.certificates.CertificateSigningRequest);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$CertificateSigningRequestItemsNested<A> addNewCertificateSigningRequestItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$CertificateSigningRequestItemsNested<A> addNewCertificateSigningRequestItemLike(io.dekorate.deps.kubernetes.api.model.certificates.CertificateSigningRequest);

  public abstract A addToServiceAccountItems(int, io.dekorate.deps.kubernetes.api.model.ServiceAccount);

  public abstract A setToServiceAccountItems(int, io.dekorate.deps.kubernetes.api.model.ServiceAccount);

  public abstract A addToServiceAccountItems(io.dekorate.deps.kubernetes.api.model.ServiceAccount...);

  public abstract A addAllToServiceAccountItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.ServiceAccount>);

  public abstract A removeFromServiceAccountItems(io.dekorate.deps.kubernetes.api.model.ServiceAccount...);

  public abstract A removeAllFromServiceAccountItems(java.util.Collection<io.dekorate.deps.kubernetes.api.model.ServiceAccount>);

  public abstract A removeMatchingFromServiceAccountItems(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ServiceAccountItemsNested<A> setNewServiceAccountItemLike(int, io.dekorate.deps.kubernetes.api.model.ServiceAccount);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ServiceAccountItemsNested<A> addNewServiceAccountItem();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$ServiceAccountItemsNested<A> addNewServiceAccountItemLike(io.dekorate.deps.kubernetes.api.model.ServiceAccount);

  public abstract java.lang.String getKind();

  public abstract A withKind(java.lang.String);

  public abstract java.lang.Boolean hasKind();

  public abstract A withNewKind(java.lang.String);

  public abstract A withNewKind(java.lang.StringBuilder);

  public abstract A withNewKind(java.lang.StringBuffer);

  public abstract io.dekorate.deps.kubernetes.api.model.ListMeta getMetadata();

  public abstract io.dekorate.deps.kubernetes.api.model.ListMeta buildMetadata();

  public abstract A withMetadata(io.dekorate.deps.kubernetes.api.model.ListMeta);

  public abstract java.lang.Boolean hasMetadata();

  public abstract A withNewMetadata(java.lang.String, java.lang.Long, java.lang.String, java.lang.String);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$MetadataNested<A> withNewMetadata();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$MetadataNested<A> withNewMetadataLike(io.dekorate.deps.kubernetes.api.model.ListMeta);

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$MetadataNested<A> editMetadata();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$MetadataNested<A> editOrNewMetadata();

  public abstract io.dekorate.deps.kubernetes.api.model.BaseKubernetesListFluent$MetadataNested<A> editOrNewMetadataLike(io.dekorate.deps.kubernetes.api.model.ListMeta);
}
