Compiled from "UnshrinkingInputStream.java"
class io.dekorate.deps.commons.compress.archivers.zip.UnshrinkingInputStream extends io.dekorate.deps.commons.compress.compressors.lzw.LZWInputStream {
  private static final int MAX_CODE_SIZE;

  private static final int MAX_TABLE_SIZE;

  private final boolean[] isUsed;

  public io.dekorate.deps.commons.compress.archivers.zip.UnshrinkingInputStream(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #22                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
       5: invokespecial #25                 // Method io/dekorate/deps/commons/compress/compressors/lzw/LZWInputStream."<init>":(Ljava/io/InputStream;Ljava/nio/ByteOrder;)V
       8: aload_0
       9: bipush        9
      11: invokevirtual #29                 // Method setClearCode:(I)V
      14: aload_0
      15: bipush        13
      17: invokevirtual #32                 // Method initializeTables:(I)V
      20: aload_0
      21: aload_0
      22: invokevirtual #36                 // Method getPrefixesLength:()I
      25: newarray       boolean
      27: putfield      #38                 // Field isUsed:[Z
      30: iconst_0
      31: istore_2
      32: iload_2
      33: sipush        256
      36: if_icmpge     52
      39: aload_0
      40: getfield      #38                 // Field isUsed:[Z
      43: iload_2
      44: iconst_1
      45: bastore
      46: iinc          2, 1
      49: goto          32
      52: aload_0
      53: aload_0
      54: invokevirtual #43                 // Method getClearCode:()I
      57: iconst_1
      58: iadd
      59: invokevirtual #46                 // Method setTableSize:(I)V
      62: return

  protected int addEntry(int, byte) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method getTableSize:()I
       4: istore_3
       5: iload_3
       6: sipush        8192
       9: if_icmpge     27
      12: aload_0
      13: getfield      #38                 // Field isUsed:[Z
      16: iload_3
      17: baload
      18: ifeq          27
      21: iinc          3, 1
      24: goto          5
      27: aload_0
      28: iload_3
      29: invokevirtual #46                 // Method setTableSize:(I)V
      32: aload_0
      33: iload_1
      34: iload_2
      35: sipush        8192
      38: invokevirtual #59                 // Method addEntry:(IBI)I
      41: istore        4
      43: iload         4
      45: iflt          56
      48: aload_0
      49: getfield      #38                 // Field isUsed:[Z
      52: iload         4
      54: iconst_1
      55: bastore
      56: iload         4
      58: ireturn

  private void partialClear();
    Code:
       0: sipush        8192
       3: newarray       boolean
       5: astore_1
       6: iconst_0
       7: istore_2
       8: iload_2
       9: aload_0
      10: getfield      #38                 // Field isUsed:[Z
      13: arraylength
      14: if_icmpge     49
      17: aload_0
      18: getfield      #38                 // Field isUsed:[Z
      21: iload_2
      22: baload
      23: ifeq          43
      26: aload_0
      27: iload_2
      28: invokevirtual #71                 // Method getPrefix:(I)I
      31: iconst_m1
      32: if_icmpeq     43
      35: aload_1
      36: aload_0
      37: iload_2
      38: invokevirtual #71                 // Method getPrefix:(I)I
      41: iconst_1
      42: bastore
      43: iinc          2, 1
      46: goto          8
      49: aload_0
      50: invokevirtual #43                 // Method getClearCode:()I
      53: iconst_1
      54: iadd
      55: istore_2
      56: iload_2
      57: aload_1
      58: arraylength
      59: if_icmpge     87
      62: aload_1
      63: iload_2
      64: baload
      65: ifne          81
      68: aload_0
      69: getfield      #38                 // Field isUsed:[Z
      72: iload_2
      73: iconst_0
      74: bastore
      75: aload_0
      76: iload_2
      77: iconst_m1
      78: invokevirtual #75                 // Method setPrefix:(II)V
      81: iinc          2, 1
      84: goto          56
      87: return

  protected int decompressNextSymbol() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method readNextCode:()I
       4: istore_1
       5: iload_1
       6: ifge          11
       9: iconst_m1
      10: ireturn
      11: iload_1
      12: aload_0
      13: invokevirtual #43                 // Method getClearCode:()I
      16: if_icmpne     120
      19: aload_0
      20: invokevirtual #80                 // Method readNextCode:()I
      23: istore_2
      24: iload_2
      25: ifge          38
      28: new           #16                 // class java/io/IOException
      31: dup
      32: ldc           #82                 // String Unexpected EOF;
      34: invokespecial #85                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: iload_2
      39: iconst_1
      40: if_icmpne     69
      43: aload_0
      44: invokevirtual #88                 // Method getCodeSize:()I
      47: bipush        13
      49: if_icmpge     59
      52: aload_0
      53: invokevirtual #91                 // Method incrementCodeSize:()V
      56: goto          118
      59: new           #16                 // class java/io/IOException
      62: dup
      63: ldc           #93                 // String Attempt to increase code size beyond maximum
      65: invokespecial #85                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: iload_2
      70: iconst_2
      71: if_icmpne     91
      74: aload_0
      75: invokespecial #95                 // Method partialClear:()V
      78: aload_0
      79: aload_0
      80: invokevirtual #43                 // Method getClearCode:()I
      83: iconst_1
      84: iadd
      85: invokevirtual #46                 // Method setTableSize:(I)V
      88: goto          118
      91: new           #16                 // class java/io/IOException
      94: dup
      95: new           #97                 // class java/lang/StringBuilder
      98: dup
      99: invokespecial #99                 // Method java/lang/StringBuilder."<init>":()V
     102: ldc           #101                // String Invalid clear code subcode
     104: invokevirtual #105                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: iload_2
     108: invokevirtual #108                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     111: invokevirtual #112                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     114: invokespecial #85                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     117: athrow
     118: iconst_0
     119: ireturn
     120: iconst_0
     121: istore_2
     122: iload_1
     123: istore_3
     124: aload_0
     125: getfield      #38                 // Field isUsed:[Z
     128: iload_1
     129: baload
     130: ifne          140
     133: aload_0
     134: invokevirtual #115                // Method addRepeatOfPreviousCode:()I
     137: istore_3
     138: iconst_1
     139: istore_2
     140: aload_0
     141: iload_3
     142: iload_2
     143: invokevirtual #119                // Method expandCodeToOutputStack:(IZ)I
     146: ireturn
}
