Compiled from "ArrayOrStringFluent.java"
public interface io.dekorate.deps.tekton.pipeline.v1alpha1.ArrayOrStringFluent<A extends io.dekorate.deps.tekton.pipeline.v1alpha1.ArrayOrStringFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract A addToArrayVal(int, java.lang.String);

  public abstract A setToArrayVal(int, java.lang.String);

  public abstract A addToArrayVal(java.lang.String...);

  public abstract A addAllToArrayVal(java.util.Collection<java.lang.String>);

  public abstract A removeFromArrayVal(java.lang.String...);

  public abstract A removeAllFromArrayVal(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getArrayVal();

  public abstract java.lang.String getArrayVal(int);

  public abstract java.lang.String getFirstArrayVal();

  public abstract java.lang.String getLastArrayVal();

  public abstract java.lang.String getMatchingArrayVal(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingArrayVal(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract A withArrayVal(java.util.List<java.lang.String>);

  public abstract A withArrayVal(java.lang.String...);

  public abstract java.lang.Boolean hasArrayVal();

  public abstract A addNewArrayVal(java.lang.String);

  public abstract A addNewArrayVal(java.lang.StringBuilder);

  public abstract A addNewArrayVal(java.lang.StringBuffer);

  public abstract java.lang.String getStringVal();

  public abstract A withStringVal(java.lang.String);

  public abstract java.lang.Boolean hasStringVal();

  public abstract A withNewStringVal(java.lang.String);

  public abstract A withNewStringVal(java.lang.StringBuilder);

  public abstract A withNewStringVal(java.lang.StringBuffer);

  public abstract java.lang.String getType();

  public abstract A withType(java.lang.String);

  public abstract java.lang.Boolean hasType();

  public abstract A withNewType(java.lang.String);

  public abstract A withNewType(java.lang.StringBuilder);

  public abstract A withNewType(java.lang.StringBuffer);

  public abstract A addToAdditionalProperties(java.lang.String, java.lang.Object);

  public abstract A addToAdditionalProperties(java.util.Map<java.lang.String, java.lang.Object>);

  public abstract A removeFromAdditionalProperties(java.lang.String);

  public abstract A removeFromAdditionalProperties(java.util.Map<java.lang.String, java.lang.Object>);

  public abstract java.util.Map<java.lang.String, java.lang.Object> getAdditionalProperties();

  public abstract A withAdditionalProperties(java.util.Map<java.lang.String, java.lang.Object>);

  public abstract java.lang.Boolean hasAdditionalProperties();
}
