Compiled from "StageInfoFluent.java"
public interface io.dekorate.deps.openshift.api.model.StageInfoFluent<A extends io.dekorate.deps.openshift.api.model.StageInfoFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.Long getDurationMilliseconds();

  public abstract A withDurationMilliseconds(java.lang.Long);

  public abstract java.lang.Boolean hasDurationMilliseconds();

  public abstract java.lang.String getName();

  public abstract A withName(java.lang.String);

  public abstract java.lang.Boolean hasName();

  public abstract A withNewName(java.lang.String);

  public abstract A withNewName(java.lang.StringBuilder);

  public abstract A withNewName(java.lang.StringBuffer);

  public abstract java.lang.String getStartTime();

  public abstract A withStartTime(java.lang.String);

  public abstract java.lang.Boolean hasStartTime();

  public abstract A withNewStartTime(java.lang.String);

  public abstract A withNewStartTime(java.lang.StringBuilder);

  public abstract A withNewStartTime(java.lang.StringBuffer);

  public abstract A addToSteps(int, io.dekorate.deps.openshift.api.model.StepInfo);

  public abstract A setToSteps(int, io.dekorate.deps.openshift.api.model.StepInfo);

  public abstract A addToSteps(io.dekorate.deps.openshift.api.model.StepInfo...);

  public abstract A addAllToSteps(java.util.Collection<io.dekorate.deps.openshift.api.model.StepInfo>);

  public abstract A removeFromSteps(io.dekorate.deps.openshift.api.model.StepInfo...);

  public abstract A removeAllFromSteps(java.util.Collection<io.dekorate.deps.openshift.api.model.StepInfo>);

  public abstract A removeMatchingFromSteps(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.openshift.api.model.StepInfoBuilder>);

  public abstract java.util.List<io.dekorate.deps.openshift.api.model.StepInfo> getSteps();

  public abstract java.util.List<io.dekorate.deps.openshift.api.model.StepInfo> buildSteps();

  public abstract io.dekorate.deps.openshift.api.model.StepInfo buildStep(int);

  public abstract io.dekorate.deps.openshift.api.model.StepInfo buildFirstStep();

  public abstract io.dekorate.deps.openshift.api.model.StepInfo buildLastStep();

  public abstract io.dekorate.deps.openshift.api.model.StepInfo buildMatchingStep(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.openshift.api.model.StepInfoBuilder>);

  public abstract java.lang.Boolean hasMatchingStep(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.openshift.api.model.StepInfoBuilder>);

  public abstract A withSteps(java.util.List<io.dekorate.deps.openshift.api.model.StepInfo>);

  public abstract A withSteps(io.dekorate.deps.openshift.api.model.StepInfo...);

  public abstract java.lang.Boolean hasSteps();

  public abstract A addNewStep(java.lang.Long, java.lang.String, java.lang.String);

  public abstract io.dekorate.deps.openshift.api.model.StageInfoFluent$StepsNested<A> addNewStep();

  public abstract io.dekorate.deps.openshift.api.model.StageInfoFluent$StepsNested<A> addNewStepLike(io.dekorate.deps.openshift.api.model.StepInfo);

  public abstract io.dekorate.deps.openshift.api.model.StageInfoFluent$StepsNested<A> setNewStepLike(int, io.dekorate.deps.openshift.api.model.StepInfo);

  public abstract io.dekorate.deps.openshift.api.model.StageInfoFluent$StepsNested<A> editStep(int);

  public abstract io.dekorate.deps.openshift.api.model.StageInfoFluent$StepsNested<A> editFirstStep();

  public abstract io.dekorate.deps.openshift.api.model.StageInfoFluent$StepsNested<A> editLastStep();

  public abstract io.dekorate.deps.openshift.api.model.StageInfoFluent$StepsNested<A> editMatchingStep(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.openshift.api.model.StepInfoBuilder>);
}
