Compiled from "CronJobSourceSpecFluent.java"
public interface io.dekorate.deps.knative.legacysources.v1alpha1.CronJobSourceSpecFluent<A extends io.dekorate.deps.knative.legacysources.v1alpha1.CronJobSourceSpecFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getData();

  public abstract A withData(java.lang.String);

  public abstract java.lang.Boolean hasData();

  public abstract A withNewData(java.lang.String);

  public abstract A withNewData(java.lang.StringBuilder);

  public abstract A withNewData(java.lang.StringBuffer);

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.CronJobResourceSpec getResources();

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.CronJobResourceSpec buildResources();

  public abstract A withResources(io.dekorate.deps.knative.legacysources.v1alpha1.CronJobResourceSpec);

  public abstract java.lang.Boolean hasResources();

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.CronJobSourceSpecFluent$ResourcesNested<A> withNewResources();

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.CronJobSourceSpecFluent$ResourcesNested<A> withNewResourcesLike(io.dekorate.deps.knative.legacysources.v1alpha1.CronJobResourceSpec);

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.CronJobSourceSpecFluent$ResourcesNested<A> editResources();

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.CronJobSourceSpecFluent$ResourcesNested<A> editOrNewResources();

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.CronJobSourceSpecFluent$ResourcesNested<A> editOrNewResourcesLike(io.dekorate.deps.knative.legacysources.v1alpha1.CronJobResourceSpec);

  public abstract java.lang.String getSchedule();

  public abstract A withSchedule(java.lang.String);

  public abstract java.lang.Boolean hasSchedule();

  public abstract A withNewSchedule(java.lang.String);

  public abstract A withNewSchedule(java.lang.StringBuilder);

  public abstract A withNewSchedule(java.lang.StringBuffer);

  public abstract java.lang.String getServiceAccountName();

  public abstract A withServiceAccountName(java.lang.String);

  public abstract java.lang.Boolean hasServiceAccountName();

  public abstract A withNewServiceAccountName(java.lang.String);

  public abstract A withNewServiceAccountName(java.lang.StringBuilder);

  public abstract A withNewServiceAccountName(java.lang.StringBuffer);

  public abstract io.dekorate.deps.knative.duck.v1beta1.Destination getSink();

  public abstract io.dekorate.deps.knative.duck.v1beta1.Destination buildSink();

  public abstract A withSink(io.dekorate.deps.knative.duck.v1beta1.Destination);

  public abstract java.lang.Boolean hasSink();

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.CronJobSourceSpecFluent$V1beta1SinkNested<A> withNewV1beta1Sink();

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.CronJobSourceSpecFluent$V1beta1SinkNested<A> withNewSinkLike(io.dekorate.deps.knative.duck.v1beta1.Destination);

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.CronJobSourceSpecFluent$V1beta1SinkNested<A> editV1beta1Sink();

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.CronJobSourceSpecFluent$V1beta1SinkNested<A> editOrNewSink();

  public abstract io.dekorate.deps.knative.legacysources.v1alpha1.CronJobSourceSpecFluent$V1beta1SinkNested<A> editOrNewSinkLike(io.dekorate.deps.knative.duck.v1beta1.Destination);
}
