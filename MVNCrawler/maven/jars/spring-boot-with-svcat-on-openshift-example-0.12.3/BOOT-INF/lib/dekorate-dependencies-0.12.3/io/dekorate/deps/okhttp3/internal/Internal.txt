Compiled from "Internal.java"
public abstract class io.dekorate.deps.okhttp3.internal.Internal {
  public static io.dekorate.deps.okhttp3.internal.Internal instance;

  public io.dekorate.deps.okhttp3.internal.Internal();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method java/lang/Object."<init>":()V
       4: return

  public static void initializeInstanceForTests();
    Code:
       0: new           #14                 // class io/dekorate/deps/okhttp3/OkHttpClient
       3: dup
       4: invokespecial #27                 // Method io/dekorate/deps/okhttp3/OkHttpClient."<init>":()V
       7: pop
       8: return

  public abstract void addLenient(io.dekorate.deps.okhttp3.Headers$Builder, java.lang.String);

  public abstract void addLenient(io.dekorate.deps.okhttp3.Headers$Builder, java.lang.String, java.lang.String);

  public abstract void setCache(io.dekorate.deps.okhttp3.OkHttpClient$Builder, io.dekorate.deps.okhttp3.internal.cache.InternalCache);

  public abstract io.dekorate.deps.okhttp3.internal.connection.RealConnection get(io.dekorate.deps.okhttp3.ConnectionPool, io.dekorate.deps.okhttp3.Address, io.dekorate.deps.okhttp3.internal.connection.StreamAllocation, io.dekorate.deps.okhttp3.Route);

  public abstract boolean equalsNonHost(io.dekorate.deps.okhttp3.Address, io.dekorate.deps.okhttp3.Address);

  public abstract java.net.Socket deduplicate(io.dekorate.deps.okhttp3.ConnectionPool, io.dekorate.deps.okhttp3.Address, io.dekorate.deps.okhttp3.internal.connection.StreamAllocation);

  public abstract void put(io.dekorate.deps.okhttp3.ConnectionPool, io.dekorate.deps.okhttp3.internal.connection.RealConnection);

  public abstract boolean connectionBecameIdle(io.dekorate.deps.okhttp3.ConnectionPool, io.dekorate.deps.okhttp3.internal.connection.RealConnection);

  public abstract io.dekorate.deps.okhttp3.internal.connection.RouteDatabase routeDatabase(io.dekorate.deps.okhttp3.ConnectionPool);

  public abstract int code(io.dekorate.deps.okhttp3.Response$Builder);

  public abstract void apply(io.dekorate.deps.okhttp3.ConnectionSpec, javax.net.ssl.SSLSocket, boolean);

  public abstract boolean isInvalidHttpUrlHost(java.lang.IllegalArgumentException);

  public abstract io.dekorate.deps.okhttp3.internal.connection.StreamAllocation streamAllocation(io.dekorate.deps.okhttp3.Call);

  public abstract java.io.IOException timeoutExit(io.dekorate.deps.okhttp3.Call, java.io.IOException);

  public abstract io.dekorate.deps.okhttp3.Call newWebSocketCall(io.dekorate.deps.okhttp3.OkHttpClient, io.dekorate.deps.okhttp3.Request);
}
