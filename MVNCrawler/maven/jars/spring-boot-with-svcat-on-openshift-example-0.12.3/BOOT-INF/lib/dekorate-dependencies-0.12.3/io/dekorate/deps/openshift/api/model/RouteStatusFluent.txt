Compiled from "RouteStatusFluent.java"
public interface io.dekorate.deps.openshift.api.model.RouteStatusFluent<A extends io.dekorate.deps.openshift.api.model.RouteStatusFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract A addToIngress(int, io.dekorate.deps.openshift.api.model.RouteIngress);

  public abstract A setToIngress(int, io.dekorate.deps.openshift.api.model.RouteIngress);

  public abstract A addToIngress(io.dekorate.deps.openshift.api.model.RouteIngress...);

  public abstract A addAllToIngress(java.util.Collection<io.dekorate.deps.openshift.api.model.RouteIngress>);

  public abstract A removeFromIngress(io.dekorate.deps.openshift.api.model.RouteIngress...);

  public abstract A removeAllFromIngress(java.util.Collection<io.dekorate.deps.openshift.api.model.RouteIngress>);

  public abstract A removeMatchingFromIngress(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.openshift.api.model.RouteIngressBuilder>);

  public abstract java.util.List<io.dekorate.deps.openshift.api.model.RouteIngress> getIngress();

  public abstract java.util.List<io.dekorate.deps.openshift.api.model.RouteIngress> buildIngress();

  public abstract io.dekorate.deps.openshift.api.model.RouteIngress buildIngress(int);

  public abstract io.dekorate.deps.openshift.api.model.RouteIngress buildFirstIngress();

  public abstract io.dekorate.deps.openshift.api.model.RouteIngress buildLastIngress();

  public abstract io.dekorate.deps.openshift.api.model.RouteIngress buildMatchingIngress(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.openshift.api.model.RouteIngressBuilder>);

  public abstract java.lang.Boolean hasMatchingIngress(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.openshift.api.model.RouteIngressBuilder>);

  public abstract A withIngress(java.util.List<io.dekorate.deps.openshift.api.model.RouteIngress>);

  public abstract A withIngress(io.dekorate.deps.openshift.api.model.RouteIngress...);

  public abstract java.lang.Boolean hasIngress();

  public abstract io.dekorate.deps.openshift.api.model.RouteStatusFluent$IngressNested<A> addNewIngress();

  public abstract io.dekorate.deps.openshift.api.model.RouteStatusFluent$IngressNested<A> addNewIngressLike(io.dekorate.deps.openshift.api.model.RouteIngress);

  public abstract io.dekorate.deps.openshift.api.model.RouteStatusFluent$IngressNested<A> setNewIngressLike(int, io.dekorate.deps.openshift.api.model.RouteIngress);

  public abstract io.dekorate.deps.openshift.api.model.RouteStatusFluent$IngressNested<A> editIngress(int);

  public abstract io.dekorate.deps.openshift.api.model.RouteStatusFluent$IngressNested<A> editFirstIngress();

  public abstract io.dekorate.deps.openshift.api.model.RouteStatusFluent$IngressNested<A> editLastIngress();

  public abstract io.dekorate.deps.openshift.api.model.RouteStatusFluent$IngressNested<A> editMatchingIngress(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.openshift.api.model.RouteIngressBuilder>);
}
