Compiled from "Validation.java"
class io.dekorate.deps.javax.validation.Validation$GetValidationProviderListAction implements java.security.PrivilegedAction<java.util.List<io.dekorate.deps.javax.validation.spi.ValidationProvider<?>>> {
  private static final java.util.WeakHashMap<java.lang.ClassLoader, java.lang.ref.SoftReference<java.util.List<io.dekorate.deps.javax.validation.spi.ValidationProvider<?>>>> providersPerClassloader;

  private io.dekorate.deps.javax.validation.Validation$GetValidationProviderListAction();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method java/lang/Object."<init>":()V
       4: return

  public static java.util.List<io.dekorate.deps.javax.validation.spi.ValidationProvider<?>> getValidationProviderList();
    Code:
       0: new           #2                  // class io/dekorate/deps/javax/validation/Validation$GetValidationProviderListAction
       3: dup
       4: invokespecial #27                 // Method "<init>":()V
       7: astore_0
       8: invokestatic  #33                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
      11: ifnull        22
      14: aload_0
      15: invokestatic  #39                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      18: checkcast     #41                 // class java/util/List
      21: areturn
      22: aload_0
      23: invokevirtual #44                 // Method run:()Ljava/util/List;
      26: areturn

  public java.util.List<io.dekorate.deps.javax.validation.spi.ValidationProvider<?>> run();
    Code:
       0: invokestatic  #51                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: invokevirtual #55                 // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
       6: astore_1
       7: aload_0
       8: aload_1
       9: invokespecial #59                 // Method getCachedValidationProviders:(Ljava/lang/ClassLoader;)Ljava/util/List;
      12: astore_2
      13: aload_2
      14: ifnull        19
      17: aload_2
      18: areturn
      19: aload_0
      20: aload_1
      21: invokespecial #64                 // Method loadProviders:(Ljava/lang/ClassLoader;)Ljava/util/List;
      24: astore_3
      25: aload_3
      26: invokeinterface #68,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      31: ifeq          61
      34: ldc           #13                 // class io/dekorate/deps/javax/validation/Validation$DefaultValidationProviderResolver
      36: invokevirtual #73                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      39: astore_1
      40: aload_0
      41: aload_1
      42: invokespecial #59                 // Method getCachedValidationProviders:(Ljava/lang/ClassLoader;)Ljava/util/List;
      45: astore        4
      47: aload         4
      49: ifnull        55
      52: aload         4
      54: areturn
      55: aload_0
      56: aload_1
      57: invokespecial #64                 // Method loadProviders:(Ljava/lang/ClassLoader;)Ljava/util/List;
      60: astore_3
      61: aload_0
      62: aload_1
      63: aload_3
      64: invokespecial #77                 // Method cacheValidationProviders:(Ljava/lang/ClassLoader;Ljava/util/List;)V
      67: aload_3
      68: areturn

  private java.util.List<io.dekorate.deps.javax.validation.spi.ValidationProvider<?>> loadProviders(java.lang.ClassLoader);
    Code:
       0: ldc           #89                 // class io/dekorate/deps/javax/validation/spi/ValidationProvider
       2: aload_1
       3: invokestatic  #95                 // Method java/util/ServiceLoader.load:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/ServiceLoader;
       6: astore_2
       7: aload_2
       8: invokevirtual #99                 // Method java/util/ServiceLoader.iterator:()Ljava/util/Iterator;
      11: astore_3
      12: new           #101                // class java/util/ArrayList
      15: dup
      16: invokespecial #102                // Method java/util/ArrayList."<init>":()V
      19: astore        4
      21: aload_3
      22: invokeinterface #107,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          52
      30: aload         4
      32: aload_3
      33: invokeinterface #111,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: invokeinterface #115,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      43: pop
      44: goto          21
      47: astore        5
      49: goto          21
      52: aload         4
      54: areturn
    Exception table:
       from    to  target type
          30    44    47   Class java/util/ServiceConfigurationError

  private synchronized java.util.List<io.dekorate.deps.javax.validation.spi.ValidationProvider<?>> getCachedValidationProviders(java.lang.ClassLoader);
    Code:
       0: getstatic     #125                // Field providersPerClassloader:Ljava/util/WeakHashMap;
       3: aload_1
       4: invokevirtual #131                // Method java/util/WeakHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #133                // class java/lang/ref/SoftReference
      10: astore_2
      11: aload_2
      12: ifnull        25
      15: aload_2
      16: invokevirtual #135                // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
      19: checkcast     #41                 // class java/util/List
      22: goto          26
      25: aconst_null
      26: areturn

  private synchronized void cacheValidationProviders(java.lang.ClassLoader, java.util.List<io.dekorate.deps.javax.validation.spi.ValidationProvider<?>>);
    Code:
       0: getstatic     #125                // Field providersPerClassloader:Ljava/util/WeakHashMap;
       3: aload_1
       4: new           #133                // class java/lang/ref/SoftReference
       7: dup
       8: aload_2
       9: invokespecial #143                // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
      12: invokevirtual #147                // Method java/util/WeakHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: return

  public java.lang.Object run();
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method run:()Ljava/util/List;
       4: areturn

  static {};
    Code:
       0: new           #127                // class java/util/WeakHashMap
       3: dup
       4: invokespecial #150                // Method java/util/WeakHashMap."<init>":()V
       7: putstatic     #125                // Field providersPerClassloader:Ljava/util/WeakHashMap;
      10: return
}
