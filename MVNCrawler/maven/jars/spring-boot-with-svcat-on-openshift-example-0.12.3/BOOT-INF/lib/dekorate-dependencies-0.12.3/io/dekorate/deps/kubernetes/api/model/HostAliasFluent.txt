Compiled from "HostAliasFluent.java"
public interface io.dekorate.deps.kubernetes.api.model.HostAliasFluent<A extends io.dekorate.deps.kubernetes.api.model.HostAliasFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract A addToHostnames(int, java.lang.String);

  public abstract A setToHostnames(int, java.lang.String);

  public abstract A addToHostnames(java.lang.String...);

  public abstract A addAllToHostnames(java.util.Collection<java.lang.String>);

  public abstract A removeFromHostnames(java.lang.String...);

  public abstract A removeAllFromHostnames(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getHostnames();

  public abstract java.lang.String getHostname(int);

  public abstract java.lang.String getFirstHostname();

  public abstract java.lang.String getLastHostname();

  public abstract java.lang.String getMatchingHostname(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingHostname(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract A withHostnames(java.util.List<java.lang.String>);

  public abstract A withHostnames(java.lang.String...);

  public abstract java.lang.Boolean hasHostnames();

  public abstract A addNewHostname(java.lang.String);

  public abstract A addNewHostname(java.lang.StringBuilder);

  public abstract A addNewHostname(java.lang.StringBuffer);

  public abstract java.lang.String getIp();

  public abstract A withIp(java.lang.String);

  public abstract java.lang.Boolean hasIp();

  public abstract A withNewIp(java.lang.String);

  public abstract A withNewIp(java.lang.StringBuilder);

  public abstract A withNewIp(java.lang.StringBuffer);
}
