Compiled from "ChannelableSpecFluent.java"
public interface io.dekorate.deps.knative.duck.v1beta1.ChannelableSpecFluent<A extends io.dekorate.deps.knative.duck.v1beta1.ChannelableSpecFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract io.dekorate.deps.knative.duck.v1beta1.DeliverySpec getDelivery();

  public abstract io.dekorate.deps.knative.duck.v1beta1.DeliverySpec buildDelivery();

  public abstract A withDelivery(io.dekorate.deps.knative.duck.v1beta1.DeliverySpec);

  public abstract java.lang.Boolean hasDelivery();

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableSpecFluent$DeliveryNested<A> withNewDelivery();

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableSpecFluent$DeliveryNested<A> withNewDeliveryLike(io.dekorate.deps.knative.duck.v1beta1.DeliverySpec);

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableSpecFluent$DeliveryNested<A> editDelivery();

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableSpecFluent$DeliveryNested<A> editOrNewDelivery();

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableSpecFluent$DeliveryNested<A> editOrNewDeliveryLike(io.dekorate.deps.knative.duck.v1beta1.DeliverySpec);

  public abstract A addToSubscribers(int, io.dekorate.deps.knative.duck.v1beta1.SubscriberSpec);

  public abstract A setToSubscribers(int, io.dekorate.deps.knative.duck.v1beta1.SubscriberSpec);

  public abstract A addToSubscribers(io.dekorate.deps.knative.duck.v1beta1.SubscriberSpec...);

  public abstract A addAllToSubscribers(java.util.Collection<io.dekorate.deps.knative.duck.v1beta1.SubscriberSpec>);

  public abstract A removeFromSubscribers(io.dekorate.deps.knative.duck.v1beta1.SubscriberSpec...);

  public abstract A removeAllFromSubscribers(java.util.Collection<io.dekorate.deps.knative.duck.v1beta1.SubscriberSpec>);

  public abstract A removeMatchingFromSubscribers(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.knative.duck.v1beta1.SubscriberSpecBuilder>);

  public abstract java.util.List<io.dekorate.deps.knative.duck.v1beta1.SubscriberSpec> getSubscribers();

  public abstract java.util.List<io.dekorate.deps.knative.duck.v1beta1.SubscriberSpec> buildSubscribers();

  public abstract io.dekorate.deps.knative.duck.v1beta1.SubscriberSpec buildSubscriber(int);

  public abstract io.dekorate.deps.knative.duck.v1beta1.SubscriberSpec buildFirstSubscriber();

  public abstract io.dekorate.deps.knative.duck.v1beta1.SubscriberSpec buildLastSubscriber();

  public abstract io.dekorate.deps.knative.duck.v1beta1.SubscriberSpec buildMatchingSubscriber(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.knative.duck.v1beta1.SubscriberSpecBuilder>);

  public abstract java.lang.Boolean hasMatchingSubscriber(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.knative.duck.v1beta1.SubscriberSpecBuilder>);

  public abstract A withSubscribers(java.util.List<io.dekorate.deps.knative.duck.v1beta1.SubscriberSpec>);

  public abstract A withSubscribers(io.dekorate.deps.knative.duck.v1beta1.SubscriberSpec...);

  public abstract java.lang.Boolean hasSubscribers();

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableSpecFluent$SubscribersNested<A> addNewSubscriber();

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableSpecFluent$SubscribersNested<A> addNewSubscriberLike(io.dekorate.deps.knative.duck.v1beta1.SubscriberSpec);

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableSpecFluent$SubscribersNested<A> setNewSubscriberLike(int, io.dekorate.deps.knative.duck.v1beta1.SubscriberSpec);

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableSpecFluent$SubscribersNested<A> editSubscriber(int);

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableSpecFluent$SubscribersNested<A> editFirstSubscriber();

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableSpecFluent$SubscribersNested<A> editLastSubscriber();

  public abstract io.dekorate.deps.knative.duck.v1beta1.ChannelableSpecFluent$SubscribersNested<A> editMatchingSubscriber(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.knative.duck.v1beta1.SubscriberSpecBuilder>);
}
