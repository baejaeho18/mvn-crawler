Compiled from "TemplateFluent.java"
public interface io.dekorate.deps.openshift.api.model.TemplateFluent<A extends io.dekorate.deps.openshift.api.model.TemplateFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getApiVersion();

  public abstract A withApiVersion(java.lang.String);

  public abstract java.lang.Boolean hasApiVersion();

  public abstract A withNewApiVersion(java.lang.String);

  public abstract A withNewApiVersion(java.lang.StringBuilder);

  public abstract A withNewApiVersion(java.lang.StringBuffer);

  public abstract java.lang.String getKind();

  public abstract A withKind(java.lang.String);

  public abstract java.lang.Boolean hasKind();

  public abstract A withNewKind(java.lang.String);

  public abstract A withNewKind(java.lang.StringBuilder);

  public abstract A withNewKind(java.lang.StringBuffer);

  public abstract A addToLabels(java.lang.String, java.lang.String);

  public abstract A addToLabels(java.util.Map<java.lang.String, java.lang.String>);

  public abstract A removeFromLabels(java.lang.String);

  public abstract A removeFromLabels(java.util.Map<java.lang.String, java.lang.String>);

  public abstract java.util.Map<java.lang.String, java.lang.String> getLabels();

  public abstract A withLabels(java.util.Map<java.lang.String, java.lang.String>);

  public abstract java.lang.Boolean hasLabels();

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectMeta getMetadata();

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectMeta buildMetadata();

  public abstract A withMetadata(io.dekorate.deps.kubernetes.api.model.ObjectMeta);

  public abstract java.lang.Boolean hasMetadata();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$MetadataNested<A> withNewMetadata();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$MetadataNested<A> withNewMetadataLike(io.dekorate.deps.kubernetes.api.model.ObjectMeta);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$MetadataNested<A> editMetadata();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$MetadataNested<A> editOrNewMetadata();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$MetadataNested<A> editOrNewMetadataLike(io.dekorate.deps.kubernetes.api.model.ObjectMeta);

  public abstract A addToObjects(io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>);

  public abstract A addToObjects(int, io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>);

  public abstract A addToObjects(int, io.dekorate.deps.kubernetes.api.model.HasMetadata);

  public abstract A setToObjects(int, io.dekorate.deps.kubernetes.api.model.HasMetadata);

  public abstract A addToObjects(io.dekorate.deps.kubernetes.api.model.HasMetadata...);

  public abstract A addAllToObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.HasMetadata>);

  public abstract A removeFromObjects(io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>);

  public abstract A removeFromObjects(io.dekorate.deps.kubernetes.api.model.HasMetadata...);

  public abstract A removeAllFromObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.HasMetadata>);

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.HasMetadata> getObjects();

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.HasMetadata> buildObjects();

  public abstract io.dekorate.deps.kubernetes.api.model.HasMetadata buildObject(int);

  public abstract io.dekorate.deps.kubernetes.api.model.HasMetadata buildFirstObject();

  public abstract io.dekorate.deps.kubernetes.api.model.HasMetadata buildLastObject();

  public abstract io.dekorate.deps.kubernetes.api.model.HasMetadata buildMatchingObject(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract java.lang.Boolean hasMatchingObject(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract A withObjects(java.util.List<io.dekorate.deps.kubernetes.api.model.HasMetadata>);

  public abstract A withObjects(io.dekorate.deps.kubernetes.api.model.HasMetadata...);

  public abstract java.lang.Boolean hasObjects();

  public abstract A addToValidatingWebhookConfigurationObjects(int, io.dekorate.deps.kubernetes.api.model.admissionregistration.ValidatingWebhookConfiguration);

  public abstract A setToValidatingWebhookConfigurationObjects(int, io.dekorate.deps.kubernetes.api.model.admissionregistration.ValidatingWebhookConfiguration);

  public abstract A addToValidatingWebhookConfigurationObjects(io.dekorate.deps.kubernetes.api.model.admissionregistration.ValidatingWebhookConfiguration...);

  public abstract A addAllToValidatingWebhookConfigurationObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.admissionregistration.ValidatingWebhookConfiguration>);

  public abstract A removeFromValidatingWebhookConfigurationObjects(io.dekorate.deps.kubernetes.api.model.admissionregistration.ValidatingWebhookConfiguration...);

  public abstract A removeAllFromValidatingWebhookConfigurationObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.admissionregistration.ValidatingWebhookConfiguration>);

  public abstract A removeMatchingFromValidatingWebhookConfigurationObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ValidatingWebhookConfigurationObjectsNested<A> setNewValidatingWebhookConfigurationObjectLike(int, io.dekorate.deps.kubernetes.api.model.admissionregistration.ValidatingWebhookConfiguration);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ValidatingWebhookConfigurationObjectsNested<A> addNewValidatingWebhookConfigurationObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ValidatingWebhookConfigurationObjectsNested<A> addNewValidatingWebhookConfigurationObjectLike(io.dekorate.deps.kubernetes.api.model.admissionregistration.ValidatingWebhookConfiguration);

  public abstract A addToStorageClassObjects(int, io.dekorate.deps.kubernetes.api.model.storage.StorageClass);

  public abstract A setToStorageClassObjects(int, io.dekorate.deps.kubernetes.api.model.storage.StorageClass);

  public abstract A addToStorageClassObjects(io.dekorate.deps.kubernetes.api.model.storage.StorageClass...);

  public abstract A addAllToStorageClassObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.storage.StorageClass>);

  public abstract A removeFromStorageClassObjects(io.dekorate.deps.kubernetes.api.model.storage.StorageClass...);

  public abstract A removeAllFromStorageClassObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.storage.StorageClass>);

  public abstract A removeMatchingFromStorageClassObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$StorageClassObjectsNested<A> setNewStorageClassObjectLike(int, io.dekorate.deps.kubernetes.api.model.storage.StorageClass);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$StorageClassObjectsNested<A> addNewStorageClassObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$StorageClassObjectsNested<A> addNewStorageClassObjectLike(io.dekorate.deps.kubernetes.api.model.storage.StorageClass);

  public abstract A addToClusterRoleBindingObjects(int, io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBinding);

  public abstract A setToClusterRoleBindingObjects(int, io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBinding);

  public abstract A addToClusterRoleBindingObjects(io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBinding...);

  public abstract A addAllToClusterRoleBindingObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBinding>);

  public abstract A removeFromClusterRoleBindingObjects(io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBinding...);

  public abstract A removeAllFromClusterRoleBindingObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBinding>);

  public abstract A removeMatchingFromClusterRoleBindingObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ClusterRoleBindingObjectsNested<A> setNewClusterRoleBindingObjectLike(int, io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBinding);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ClusterRoleBindingObjectsNested<A> addNewClusterRoleBindingObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ClusterRoleBindingObjectsNested<A> addNewClusterRoleBindingObjectLike(io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBinding);

  public abstract A addToCSINodeObjects(int, io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSINode);

  public abstract A setToCSINodeObjects(int, io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSINode);

  public abstract A addToCSINodeObjects(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSINode...);

  public abstract A addAllToCSINodeObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSINode>);

  public abstract A removeFromCSINodeObjects(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSINode...);

  public abstract A removeAllFromCSINodeObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSINode>);

  public abstract A removeMatchingFromCSINodeObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$CSINodeObjectsNested<A> setNewCSINodeObjectLike(int, io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSINode);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$CSINodeObjectsNested<A> addNewCSINodeObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$CSINodeObjectsNested<A> addNewCSINodeObjectLike(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSINode);

  public abstract A addToOpenshiftRoleBindingObjects(int, io.dekorate.deps.openshift.api.model.OpenshiftRoleBinding);

  public abstract A setToOpenshiftRoleBindingObjects(int, io.dekorate.deps.openshift.api.model.OpenshiftRoleBinding);

  public abstract A addToOpenshiftRoleBindingObjects(io.dekorate.deps.openshift.api.model.OpenshiftRoleBinding...);

  public abstract A addAllToOpenshiftRoleBindingObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.OpenshiftRoleBinding>);

  public abstract A removeFromOpenshiftRoleBindingObjects(io.dekorate.deps.openshift.api.model.OpenshiftRoleBinding...);

  public abstract A removeAllFromOpenshiftRoleBindingObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.OpenshiftRoleBinding>);

  public abstract A removeMatchingFromOpenshiftRoleBindingObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$OpenshiftRoleBindingObjectsNested<A> setNewOpenshiftRoleBindingObjectLike(int, io.dekorate.deps.openshift.api.model.OpenshiftRoleBinding);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$OpenshiftRoleBindingObjectsNested<A> addNewOpenshiftRoleBindingObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$OpenshiftRoleBindingObjectsNested<A> addNewOpenshiftRoleBindingObjectLike(io.dekorate.deps.openshift.api.model.OpenshiftRoleBinding);

  public abstract A addToPodDisruptionBudgetObjects(int, io.dekorate.deps.kubernetes.api.model.policy.PodDisruptionBudget);

  public abstract A setToPodDisruptionBudgetObjects(int, io.dekorate.deps.kubernetes.api.model.policy.PodDisruptionBudget);

  public abstract A addToPodDisruptionBudgetObjects(io.dekorate.deps.kubernetes.api.model.policy.PodDisruptionBudget...);

  public abstract A addAllToPodDisruptionBudgetObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.policy.PodDisruptionBudget>);

  public abstract A removeFromPodDisruptionBudgetObjects(io.dekorate.deps.kubernetes.api.model.policy.PodDisruptionBudget...);

  public abstract A removeAllFromPodDisruptionBudgetObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.policy.PodDisruptionBudget>);

  public abstract A removeMatchingFromPodDisruptionBudgetObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$PodDisruptionBudgetObjectsNested<A> setNewPodDisruptionBudgetObjectLike(int, io.dekorate.deps.kubernetes.api.model.policy.PodDisruptionBudget);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$PodDisruptionBudgetObjectsNested<A> addNewPodDisruptionBudgetObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$PodDisruptionBudgetObjectsNested<A> addNewPodDisruptionBudgetObjectLike(io.dekorate.deps.kubernetes.api.model.policy.PodDisruptionBudget);

  public abstract A addToOpenshiftClusterRoleBindingObjects(int, io.dekorate.deps.openshift.api.model.OpenshiftClusterRoleBinding);

  public abstract A setToOpenshiftClusterRoleBindingObjects(int, io.dekorate.deps.openshift.api.model.OpenshiftClusterRoleBinding);

  public abstract A addToOpenshiftClusterRoleBindingObjects(io.dekorate.deps.openshift.api.model.OpenshiftClusterRoleBinding...);

  public abstract A addAllToOpenshiftClusterRoleBindingObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.OpenshiftClusterRoleBinding>);

  public abstract A removeFromOpenshiftClusterRoleBindingObjects(io.dekorate.deps.openshift.api.model.OpenshiftClusterRoleBinding...);

  public abstract A removeAllFromOpenshiftClusterRoleBindingObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.OpenshiftClusterRoleBinding>);

  public abstract A removeMatchingFromOpenshiftClusterRoleBindingObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$OpenshiftClusterRoleBindingObjectsNested<A> setNewOpenshiftClusterRoleBindingObjectLike(int, io.dekorate.deps.openshift.api.model.OpenshiftClusterRoleBinding);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$OpenshiftClusterRoleBindingObjectsNested<A> addNewOpenshiftClusterRoleBindingObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$OpenshiftClusterRoleBindingObjectsNested<A> addNewOpenshiftClusterRoleBindingObjectLike(io.dekorate.deps.openshift.api.model.OpenshiftClusterRoleBinding);

  public abstract A addToNetworkPolicyObjects(int, io.dekorate.deps.kubernetes.api.model.networking.NetworkPolicy);

  public abstract A setToNetworkPolicyObjects(int, io.dekorate.deps.kubernetes.api.model.networking.NetworkPolicy);

  public abstract A addToNetworkPolicyObjects(io.dekorate.deps.kubernetes.api.model.networking.NetworkPolicy...);

  public abstract A addAllToNetworkPolicyObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.networking.NetworkPolicy>);

  public abstract A removeFromNetworkPolicyObjects(io.dekorate.deps.kubernetes.api.model.networking.NetworkPolicy...);

  public abstract A removeAllFromNetworkPolicyObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.networking.NetworkPolicy>);

  public abstract A removeMatchingFromNetworkPolicyObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$NetworkPolicyObjectsNested<A> setNewNetworkPolicyObjectLike(int, io.dekorate.deps.kubernetes.api.model.networking.NetworkPolicy);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$NetworkPolicyObjectsNested<A> addNewNetworkPolicyObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$NetworkPolicyObjectsNested<A> addNewNetworkPolicyObjectLike(io.dekorate.deps.kubernetes.api.model.networking.NetworkPolicy);

  public abstract A addToRouteObjects(int, io.dekorate.deps.openshift.api.model.Route);

  public abstract A setToRouteObjects(int, io.dekorate.deps.openshift.api.model.Route);

  public abstract A addToRouteObjects(io.dekorate.deps.openshift.api.model.Route...);

  public abstract A addAllToRouteObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.Route>);

  public abstract A removeFromRouteObjects(io.dekorate.deps.openshift.api.model.Route...);

  public abstract A removeAllFromRouteObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.Route>);

  public abstract A removeMatchingFromRouteObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$RouteObjectsNested<A> setNewRouteObjectLike(int, io.dekorate.deps.openshift.api.model.Route);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$RouteObjectsNested<A> addNewRouteObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$RouteObjectsNested<A> addNewRouteObjectLike(io.dekorate.deps.openshift.api.model.Route);

  public abstract A addToNamespaceObjects(int, io.dekorate.deps.kubernetes.api.model.Namespace);

  public abstract A setToNamespaceObjects(int, io.dekorate.deps.kubernetes.api.model.Namespace);

  public abstract A addToNamespaceObjects(io.dekorate.deps.kubernetes.api.model.Namespace...);

  public abstract A addAllToNamespaceObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.Namespace>);

  public abstract A removeFromNamespaceObjects(io.dekorate.deps.kubernetes.api.model.Namespace...);

  public abstract A removeAllFromNamespaceObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.Namespace>);

  public abstract A removeMatchingFromNamespaceObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$NamespaceObjectsNested<A> setNewNamespaceObjectLike(int, io.dekorate.deps.kubernetes.api.model.Namespace);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$NamespaceObjectsNested<A> addNewNamespaceObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$NamespaceObjectsNested<A> addNewNamespaceObjectLike(io.dekorate.deps.kubernetes.api.model.Namespace);

  public abstract A addToLocalSubjectAccessReviewObjects(int, io.dekorate.deps.kubernetes.api.model.authorization.LocalSubjectAccessReview);

  public abstract A setToLocalSubjectAccessReviewObjects(int, io.dekorate.deps.kubernetes.api.model.authorization.LocalSubjectAccessReview);

  public abstract A addToLocalSubjectAccessReviewObjects(io.dekorate.deps.kubernetes.api.model.authorization.LocalSubjectAccessReview...);

  public abstract A addAllToLocalSubjectAccessReviewObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.authorization.LocalSubjectAccessReview>);

  public abstract A removeFromLocalSubjectAccessReviewObjects(io.dekorate.deps.kubernetes.api.model.authorization.LocalSubjectAccessReview...);

  public abstract A removeAllFromLocalSubjectAccessReviewObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.authorization.LocalSubjectAccessReview>);

  public abstract A removeMatchingFromLocalSubjectAccessReviewObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$LocalSubjectAccessReviewObjectsNested<A> setNewLocalSubjectAccessReviewObjectLike(int, io.dekorate.deps.kubernetes.api.model.authorization.LocalSubjectAccessReview);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$LocalSubjectAccessReviewObjectsNested<A> addNewLocalSubjectAccessReviewObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$LocalSubjectAccessReviewObjectsNested<A> addNewLocalSubjectAccessReviewObjectLike(io.dekorate.deps.kubernetes.api.model.authorization.LocalSubjectAccessReview);

  public abstract A addToLeaseObjects(int, io.dekorate.deps.kubernetes.api.model.coordination.v1.Lease);

  public abstract A setToLeaseObjects(int, io.dekorate.deps.kubernetes.api.model.coordination.v1.Lease);

  public abstract A addToLeaseObjects(io.dekorate.deps.kubernetes.api.model.coordination.v1.Lease...);

  public abstract A addAllToLeaseObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.coordination.v1.Lease>);

  public abstract A removeFromLeaseObjects(io.dekorate.deps.kubernetes.api.model.coordination.v1.Lease...);

  public abstract A removeAllFromLeaseObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.coordination.v1.Lease>);

  public abstract A removeMatchingFromLeaseObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$LeaseObjectsNested<A> setNewLeaseObjectLike(int, io.dekorate.deps.kubernetes.api.model.coordination.v1.Lease);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$LeaseObjectsNested<A> addNewLeaseObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$LeaseObjectsNested<A> addNewLeaseObjectLike(io.dekorate.deps.kubernetes.api.model.coordination.v1.Lease);

  public abstract A addToServiceObjects(int, io.dekorate.deps.kubernetes.api.model.Service);

  public abstract A setToServiceObjects(int, io.dekorate.deps.kubernetes.api.model.Service);

  public abstract A addToServiceObjects(io.dekorate.deps.kubernetes.api.model.Service...);

  public abstract A addAllToServiceObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.Service>);

  public abstract A removeFromServiceObjects(io.dekorate.deps.kubernetes.api.model.Service...);

  public abstract A removeAllFromServiceObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.Service>);

  public abstract A removeMatchingFromServiceObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ServiceObjectsNested<A> setNewServiceObjectLike(int, io.dekorate.deps.kubernetes.api.model.Service);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ServiceObjectsNested<A> addNewServiceObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ServiceObjectsNested<A> addNewServiceObjectLike(io.dekorate.deps.kubernetes.api.model.Service);

  public abstract A addToReplicationControllerObjects(int, io.dekorate.deps.kubernetes.api.model.ReplicationController);

  public abstract A setToReplicationControllerObjects(int, io.dekorate.deps.kubernetes.api.model.ReplicationController);

  public abstract A addToReplicationControllerObjects(io.dekorate.deps.kubernetes.api.model.ReplicationController...);

  public abstract A addAllToReplicationControllerObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.ReplicationController>);

  public abstract A removeFromReplicationControllerObjects(io.dekorate.deps.kubernetes.api.model.ReplicationController...);

  public abstract A removeAllFromReplicationControllerObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.ReplicationController>);

  public abstract A removeMatchingFromReplicationControllerObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ReplicationControllerObjectsNested<A> setNewReplicationControllerObjectLike(int, io.dekorate.deps.kubernetes.api.model.ReplicationController);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ReplicationControllerObjectsNested<A> addNewReplicationControllerObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ReplicationControllerObjectsNested<A> addNewReplicationControllerObjectLike(io.dekorate.deps.kubernetes.api.model.ReplicationController);

  public abstract A addToSubjectAccessReviewObjects(int, io.dekorate.deps.kubernetes.api.model.authorization.SubjectAccessReview);

  public abstract A setToSubjectAccessReviewObjects(int, io.dekorate.deps.kubernetes.api.model.authorization.SubjectAccessReview);

  public abstract A addToSubjectAccessReviewObjects(io.dekorate.deps.kubernetes.api.model.authorization.SubjectAccessReview...);

  public abstract A addAllToSubjectAccessReviewObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.authorization.SubjectAccessReview>);

  public abstract A removeFromSubjectAccessReviewObjects(io.dekorate.deps.kubernetes.api.model.authorization.SubjectAccessReview...);

  public abstract A removeAllFromSubjectAccessReviewObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.authorization.SubjectAccessReview>);

  public abstract A removeMatchingFromSubjectAccessReviewObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$SubjectAccessReviewObjectsNested<A> setNewSubjectAccessReviewObjectLike(int, io.dekorate.deps.kubernetes.api.model.authorization.SubjectAccessReview);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$SubjectAccessReviewObjectsNested<A> addNewSubjectAccessReviewObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$SubjectAccessReviewObjectsNested<A> addNewSubjectAccessReviewObjectLike(io.dekorate.deps.kubernetes.api.model.authorization.SubjectAccessReview);

  public abstract A addToMutatingWebhookConfigurationObjects(int, io.dekorate.deps.kubernetes.api.model.admissionregistration.MutatingWebhookConfiguration);

  public abstract A setToMutatingWebhookConfigurationObjects(int, io.dekorate.deps.kubernetes.api.model.admissionregistration.MutatingWebhookConfiguration);

  public abstract A addToMutatingWebhookConfigurationObjects(io.dekorate.deps.kubernetes.api.model.admissionregistration.MutatingWebhookConfiguration...);

  public abstract A addAllToMutatingWebhookConfigurationObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.admissionregistration.MutatingWebhookConfiguration>);

  public abstract A removeFromMutatingWebhookConfigurationObjects(io.dekorate.deps.kubernetes.api.model.admissionregistration.MutatingWebhookConfiguration...);

  public abstract A removeAllFromMutatingWebhookConfigurationObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.admissionregistration.MutatingWebhookConfiguration>);

  public abstract A removeMatchingFromMutatingWebhookConfigurationObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$MutatingWebhookConfigurationObjectsNested<A> setNewMutatingWebhookConfigurationObjectLike(int, io.dekorate.deps.kubernetes.api.model.admissionregistration.MutatingWebhookConfiguration);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$MutatingWebhookConfigurationObjectsNested<A> addNewMutatingWebhookConfigurationObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$MutatingWebhookConfigurationObjectsNested<A> addNewMutatingWebhookConfigurationObjectLike(io.dekorate.deps.kubernetes.api.model.admissionregistration.MutatingWebhookConfiguration);

  public abstract A addToPodMetricsObjects(int, io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.PodMetrics);

  public abstract A setToPodMetricsObjects(int, io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.PodMetrics);

  public abstract A addToPodMetricsObjects(io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.PodMetrics...);

  public abstract A addAllToPodMetricsObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.PodMetrics>);

  public abstract A removeFromPodMetricsObjects(io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.PodMetrics...);

  public abstract A removeAllFromPodMetricsObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.PodMetrics>);

  public abstract A removeMatchingFromPodMetricsObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$PodMetricsObjectsNested<A> setNewPodMetricsObjectLike(int, io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.PodMetrics);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$PodMetricsObjectsNested<A> addNewPodMetricsObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$PodMetricsObjectsNested<A> addNewPodMetricsObjectLike(io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.PodMetrics);

  public abstract A addToHorizontalPodAutoscalerObjects(int, io.dekorate.deps.kubernetes.api.model.HorizontalPodAutoscaler);

  public abstract A setToHorizontalPodAutoscalerObjects(int, io.dekorate.deps.kubernetes.api.model.HorizontalPodAutoscaler);

  public abstract A addToHorizontalPodAutoscalerObjects(io.dekorate.deps.kubernetes.api.model.HorizontalPodAutoscaler...);

  public abstract A addAllToHorizontalPodAutoscalerObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.HorizontalPodAutoscaler>);

  public abstract A removeFromHorizontalPodAutoscalerObjects(io.dekorate.deps.kubernetes.api.model.HorizontalPodAutoscaler...);

  public abstract A removeAllFromHorizontalPodAutoscalerObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.HorizontalPodAutoscaler>);

  public abstract A removeMatchingFromHorizontalPodAutoscalerObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$HorizontalPodAutoscalerObjectsNested<A> setNewHorizontalPodAutoscalerObjectLike(int, io.dekorate.deps.kubernetes.api.model.HorizontalPodAutoscaler);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$HorizontalPodAutoscalerObjectsNested<A> addNewHorizontalPodAutoscalerObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$HorizontalPodAutoscalerObjectsNested<A> addNewHorizontalPodAutoscalerObjectLike(io.dekorate.deps.kubernetes.api.model.HorizontalPodAutoscaler);

  public abstract A addToImageObjects(int, io.dekorate.deps.openshift.api.model.Image);

  public abstract A setToImageObjects(int, io.dekorate.deps.openshift.api.model.Image);

  public abstract A addToImageObjects(io.dekorate.deps.openshift.api.model.Image...);

  public abstract A addAllToImageObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.Image>);

  public abstract A removeFromImageObjects(io.dekorate.deps.openshift.api.model.Image...);

  public abstract A removeAllFromImageObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.Image>);

  public abstract A removeMatchingFromImageObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ImageObjectsNested<A> setNewImageObjectLike(int, io.dekorate.deps.openshift.api.model.Image);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ImageObjectsNested<A> addNewImageObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ImageObjectsNested<A> addNewImageObjectLike(io.dekorate.deps.openshift.api.model.Image);

  public abstract A addToReplicaSetObjects(int, io.dekorate.deps.kubernetes.api.model.apps.ReplicaSet);

  public abstract A setToReplicaSetObjects(int, io.dekorate.deps.kubernetes.api.model.apps.ReplicaSet);

  public abstract A addToReplicaSetObjects(io.dekorate.deps.kubernetes.api.model.apps.ReplicaSet...);

  public abstract A addAllToReplicaSetObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.apps.ReplicaSet>);

  public abstract A removeFromReplicaSetObjects(io.dekorate.deps.kubernetes.api.model.apps.ReplicaSet...);

  public abstract A removeAllFromReplicaSetObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.apps.ReplicaSet>);

  public abstract A removeMatchingFromReplicaSetObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ReplicaSetObjectsNested<A> setNewReplicaSetObjectLike(int, io.dekorate.deps.kubernetes.api.model.apps.ReplicaSet);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ReplicaSetObjectsNested<A> addNewReplicaSetObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ReplicaSetObjectsNested<A> addNewReplicaSetObjectLike(io.dekorate.deps.kubernetes.api.model.apps.ReplicaSet);

  public abstract A addToEndpointSliceObjects(int, io.dekorate.deps.kubernetes.api.model.discovery.EndpointSlice);

  public abstract A setToEndpointSliceObjects(int, io.dekorate.deps.kubernetes.api.model.discovery.EndpointSlice);

  public abstract A addToEndpointSliceObjects(io.dekorate.deps.kubernetes.api.model.discovery.EndpointSlice...);

  public abstract A addAllToEndpointSliceObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.discovery.EndpointSlice>);

  public abstract A removeFromEndpointSliceObjects(io.dekorate.deps.kubernetes.api.model.discovery.EndpointSlice...);

  public abstract A removeAllFromEndpointSliceObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.discovery.EndpointSlice>);

  public abstract A removeMatchingFromEndpointSliceObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$EndpointSliceObjectsNested<A> setNewEndpointSliceObjectLike(int, io.dekorate.deps.kubernetes.api.model.discovery.EndpointSlice);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$EndpointSliceObjectsNested<A> addNewEndpointSliceObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$EndpointSliceObjectsNested<A> addNewEndpointSliceObjectLike(io.dekorate.deps.kubernetes.api.model.discovery.EndpointSlice);

  public abstract A addToCronJobObjects(int, io.dekorate.deps.kubernetes.api.model.batch.CronJob);

  public abstract A setToCronJobObjects(int, io.dekorate.deps.kubernetes.api.model.batch.CronJob);

  public abstract A addToCronJobObjects(io.dekorate.deps.kubernetes.api.model.batch.CronJob...);

  public abstract A addAllToCronJobObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.batch.CronJob>);

  public abstract A removeFromCronJobObjects(io.dekorate.deps.kubernetes.api.model.batch.CronJob...);

  public abstract A removeAllFromCronJobObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.batch.CronJob>);

  public abstract A removeMatchingFromCronJobObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$CronJobObjectsNested<A> setNewCronJobObjectLike(int, io.dekorate.deps.kubernetes.api.model.batch.CronJob);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$CronJobObjectsNested<A> addNewCronJobObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$CronJobObjectsNested<A> addNewCronJobObjectLike(io.dekorate.deps.kubernetes.api.model.batch.CronJob);

  public abstract A addToEndpointsObjects(int, io.dekorate.deps.kubernetes.api.model.Endpoints);

  public abstract A setToEndpointsObjects(int, io.dekorate.deps.kubernetes.api.model.Endpoints);

  public abstract A addToEndpointsObjects(io.dekorate.deps.kubernetes.api.model.Endpoints...);

  public abstract A addAllToEndpointsObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.Endpoints>);

  public abstract A removeFromEndpointsObjects(io.dekorate.deps.kubernetes.api.model.Endpoints...);

  public abstract A removeAllFromEndpointsObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.Endpoints>);

  public abstract A removeMatchingFromEndpointsObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$EndpointsObjectsNested<A> setNewEndpointsObjectLike(int, io.dekorate.deps.kubernetes.api.model.Endpoints);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$EndpointsObjectsNested<A> addNewEndpointsObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$EndpointsObjectsNested<A> addNewEndpointsObjectLike(io.dekorate.deps.kubernetes.api.model.Endpoints);

  public abstract A addToPodObjects(int, io.dekorate.deps.kubernetes.api.model.Pod);

  public abstract A setToPodObjects(int, io.dekorate.deps.kubernetes.api.model.Pod);

  public abstract A addToPodObjects(io.dekorate.deps.kubernetes.api.model.Pod...);

  public abstract A addAllToPodObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.Pod>);

  public abstract A removeFromPodObjects(io.dekorate.deps.kubernetes.api.model.Pod...);

  public abstract A removeAllFromPodObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.Pod>);

  public abstract A removeMatchingFromPodObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$PodObjectsNested<A> setNewPodObjectLike(int, io.dekorate.deps.kubernetes.api.model.Pod);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$PodObjectsNested<A> addNewPodObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$PodObjectsNested<A> addNewPodObjectLike(io.dekorate.deps.kubernetes.api.model.Pod);

  public abstract A addToConfigMapObjects(int, io.dekorate.deps.kubernetes.api.model.ConfigMap);

  public abstract A setToConfigMapObjects(int, io.dekorate.deps.kubernetes.api.model.ConfigMap);

  public abstract A addToConfigMapObjects(io.dekorate.deps.kubernetes.api.model.ConfigMap...);

  public abstract A addAllToConfigMapObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.ConfigMap>);

  public abstract A removeFromConfigMapObjects(io.dekorate.deps.kubernetes.api.model.ConfigMap...);

  public abstract A removeAllFromConfigMapObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.ConfigMap>);

  public abstract A removeMatchingFromConfigMapObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ConfigMapObjectsNested<A> setNewConfigMapObjectLike(int, io.dekorate.deps.kubernetes.api.model.ConfigMap);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ConfigMapObjectsNested<A> addNewConfigMapObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ConfigMapObjectsNested<A> addNewConfigMapObjectLike(io.dekorate.deps.kubernetes.api.model.ConfigMap);

  public abstract A addToCustomResourceDefinitionObjects(int, io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceDefinition);

  public abstract A setToCustomResourceDefinitionObjects(int, io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceDefinition);

  public abstract A addToCustomResourceDefinitionObjects(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceDefinition...);

  public abstract A addAllToCustomResourceDefinitionObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceDefinition>);

  public abstract A removeFromCustomResourceDefinitionObjects(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceDefinition...);

  public abstract A removeAllFromCustomResourceDefinitionObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceDefinition>);

  public abstract A removeMatchingFromCustomResourceDefinitionObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$CustomResourceDefinitionObjectsNested<A> setNewCustomResourceDefinitionObjectLike(int, io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceDefinition);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$CustomResourceDefinitionObjectsNested<A> addNewCustomResourceDefinitionObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$CustomResourceDefinitionObjectsNested<A> addNewCustomResourceDefinitionObjectLike(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceDefinition);

  public abstract A addToBuildObjects(int, io.dekorate.deps.openshift.api.model.Build);

  public abstract A setToBuildObjects(int, io.dekorate.deps.openshift.api.model.Build);

  public abstract A addToBuildObjects(io.dekorate.deps.openshift.api.model.Build...);

  public abstract A addAllToBuildObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.Build>);

  public abstract A removeFromBuildObjects(io.dekorate.deps.openshift.api.model.Build...);

  public abstract A removeAllFromBuildObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.Build>);

  public abstract A removeMatchingFromBuildObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$BuildObjectsNested<A> setNewBuildObjectLike(int, io.dekorate.deps.openshift.api.model.Build);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$BuildObjectsNested<A> addNewBuildObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$BuildObjectsNested<A> addNewBuildObjectLike(io.dekorate.deps.openshift.api.model.Build);

  public abstract A addToImageStreamTagObjects(int, io.dekorate.deps.openshift.api.model.ImageStreamTag);

  public abstract A setToImageStreamTagObjects(int, io.dekorate.deps.openshift.api.model.ImageStreamTag);

  public abstract A addToImageStreamTagObjects(io.dekorate.deps.openshift.api.model.ImageStreamTag...);

  public abstract A addAllToImageStreamTagObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.ImageStreamTag>);

  public abstract A removeFromImageStreamTagObjects(io.dekorate.deps.openshift.api.model.ImageStreamTag...);

  public abstract A removeAllFromImageStreamTagObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.ImageStreamTag>);

  public abstract A removeMatchingFromImageStreamTagObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ImageStreamTagObjectsNested<A> setNewImageStreamTagObjectLike(int, io.dekorate.deps.openshift.api.model.ImageStreamTag);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ImageStreamTagObjectsNested<A> addNewImageStreamTagObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ImageStreamTagObjectsNested<A> addNewImageStreamTagObjectLike(io.dekorate.deps.openshift.api.model.ImageStreamTag);

  public abstract A addToGroupObjects(int, io.dekorate.deps.openshift.api.model.Group);

  public abstract A setToGroupObjects(int, io.dekorate.deps.openshift.api.model.Group);

  public abstract A addToGroupObjects(io.dekorate.deps.openshift.api.model.Group...);

  public abstract A addAllToGroupObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.Group>);

  public abstract A removeFromGroupObjects(io.dekorate.deps.openshift.api.model.Group...);

  public abstract A removeAllFromGroupObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.Group>);

  public abstract A removeMatchingFromGroupObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$GroupObjectsNested<A> setNewGroupObjectLike(int, io.dekorate.deps.openshift.api.model.Group);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$GroupObjectsNested<A> addNewGroupObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$GroupObjectsNested<A> addNewGroupObjectLike(io.dekorate.deps.openshift.api.model.Group);

  public abstract A addToImageSignatureObjects(int, io.dekorate.deps.openshift.api.model.ImageSignature);

  public abstract A setToImageSignatureObjects(int, io.dekorate.deps.openshift.api.model.ImageSignature);

  public abstract A addToImageSignatureObjects(io.dekorate.deps.openshift.api.model.ImageSignature...);

  public abstract A addAllToImageSignatureObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.ImageSignature>);

  public abstract A removeFromImageSignatureObjects(io.dekorate.deps.openshift.api.model.ImageSignature...);

  public abstract A removeAllFromImageSignatureObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.ImageSignature>);

  public abstract A removeMatchingFromImageSignatureObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ImageSignatureObjectsNested<A> setNewImageSignatureObjectLike(int, io.dekorate.deps.openshift.api.model.ImageSignature);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ImageSignatureObjectsNested<A> addNewImageSignatureObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ImageSignatureObjectsNested<A> addNewImageSignatureObjectLike(io.dekorate.deps.openshift.api.model.ImageSignature);

  public abstract A addToScaleObjects(int, io.dekorate.deps.kubernetes.api.model.v1.Scale);

  public abstract A setToScaleObjects(int, io.dekorate.deps.kubernetes.api.model.v1.Scale);

  public abstract A addToScaleObjects(io.dekorate.deps.kubernetes.api.model.v1.Scale...);

  public abstract A addAllToScaleObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.v1.Scale>);

  public abstract A removeFromScaleObjects(io.dekorate.deps.kubernetes.api.model.v1.Scale...);

  public abstract A removeAllFromScaleObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.v1.Scale>);

  public abstract A removeMatchingFromScaleObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ScaleObjectsNested<A> setNewScaleObjectLike(int, io.dekorate.deps.kubernetes.api.model.v1.Scale);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ScaleObjectsNested<A> addNewScaleObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ScaleObjectsNested<A> addNewScaleObjectLike(io.dekorate.deps.kubernetes.api.model.v1.Scale);

  public abstract A addToResourceQuotaObjects(int, io.dekorate.deps.kubernetes.api.model.ResourceQuota);

  public abstract A setToResourceQuotaObjects(int, io.dekorate.deps.kubernetes.api.model.ResourceQuota);

  public abstract A addToResourceQuotaObjects(io.dekorate.deps.kubernetes.api.model.ResourceQuota...);

  public abstract A addAllToResourceQuotaObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.ResourceQuota>);

  public abstract A removeFromResourceQuotaObjects(io.dekorate.deps.kubernetes.api.model.ResourceQuota...);

  public abstract A removeAllFromResourceQuotaObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.ResourceQuota>);

  public abstract A removeMatchingFromResourceQuotaObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ResourceQuotaObjectsNested<A> setNewResourceQuotaObjectLike(int, io.dekorate.deps.kubernetes.api.model.ResourceQuota);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ResourceQuotaObjectsNested<A> addNewResourceQuotaObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ResourceQuotaObjectsNested<A> addNewResourceQuotaObjectLike(io.dekorate.deps.kubernetes.api.model.ResourceQuota);

  public abstract A addToBuildRequestObjects(int, io.dekorate.deps.openshift.api.model.BuildRequest);

  public abstract A setToBuildRequestObjects(int, io.dekorate.deps.openshift.api.model.BuildRequest);

  public abstract A addToBuildRequestObjects(io.dekorate.deps.openshift.api.model.BuildRequest...);

  public abstract A addAllToBuildRequestObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.BuildRequest>);

  public abstract A removeFromBuildRequestObjects(io.dekorate.deps.openshift.api.model.BuildRequest...);

  public abstract A removeAllFromBuildRequestObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.BuildRequest>);

  public abstract A removeMatchingFromBuildRequestObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$BuildRequestObjectsNested<A> setNewBuildRequestObjectLike(int, io.dekorate.deps.openshift.api.model.BuildRequest);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$BuildRequestObjectsNested<A> addNewBuildRequestObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$BuildRequestObjectsNested<A> addNewBuildRequestObjectLike(io.dekorate.deps.openshift.api.model.BuildRequest);

  public abstract A addToDaemonSetObjects(int, io.dekorate.deps.kubernetes.api.model.apps.DaemonSet);

  public abstract A setToDaemonSetObjects(int, io.dekorate.deps.kubernetes.api.model.apps.DaemonSet);

  public abstract A addToDaemonSetObjects(io.dekorate.deps.kubernetes.api.model.apps.DaemonSet...);

  public abstract A addAllToDaemonSetObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.apps.DaemonSet>);

  public abstract A removeFromDaemonSetObjects(io.dekorate.deps.kubernetes.api.model.apps.DaemonSet...);

  public abstract A removeAllFromDaemonSetObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.apps.DaemonSet>);

  public abstract A removeMatchingFromDaemonSetObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$DaemonSetObjectsNested<A> setNewDaemonSetObjectLike(int, io.dekorate.deps.kubernetes.api.model.apps.DaemonSet);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$DaemonSetObjectsNested<A> addNewDaemonSetObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$DaemonSetObjectsNested<A> addNewDaemonSetObjectLike(io.dekorate.deps.kubernetes.api.model.apps.DaemonSet);

  public abstract A addToImageStreamObjects(int, io.dekorate.deps.openshift.api.model.ImageStream);

  public abstract A setToImageStreamObjects(int, io.dekorate.deps.openshift.api.model.ImageStream);

  public abstract A addToImageStreamObjects(io.dekorate.deps.openshift.api.model.ImageStream...);

  public abstract A addAllToImageStreamObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.ImageStream>);

  public abstract A removeFromImageStreamObjects(io.dekorate.deps.openshift.api.model.ImageStream...);

  public abstract A removeAllFromImageStreamObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.ImageStream>);

  public abstract A removeMatchingFromImageStreamObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ImageStreamObjectsNested<A> setNewImageStreamObjectLike(int, io.dekorate.deps.openshift.api.model.ImageStream);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ImageStreamObjectsNested<A> addNewImageStreamObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ImageStreamObjectsNested<A> addNewImageStreamObjectLike(io.dekorate.deps.openshift.api.model.ImageStream);

  public abstract A addToOpenshiftRoleObjects(int, io.dekorate.deps.openshift.api.model.OpenshiftRole);

  public abstract A setToOpenshiftRoleObjects(int, io.dekorate.deps.openshift.api.model.OpenshiftRole);

  public abstract A addToOpenshiftRoleObjects(io.dekorate.deps.openshift.api.model.OpenshiftRole...);

  public abstract A addAllToOpenshiftRoleObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.OpenshiftRole>);

  public abstract A removeFromOpenshiftRoleObjects(io.dekorate.deps.openshift.api.model.OpenshiftRole...);

  public abstract A removeAllFromOpenshiftRoleObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.OpenshiftRole>);

  public abstract A removeMatchingFromOpenshiftRoleObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$OpenshiftRoleObjectsNested<A> setNewOpenshiftRoleObjectLike(int, io.dekorate.deps.openshift.api.model.OpenshiftRole);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$OpenshiftRoleObjectsNested<A> addNewOpenshiftRoleObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$OpenshiftRoleObjectsNested<A> addNewOpenshiftRoleObjectLike(io.dekorate.deps.openshift.api.model.OpenshiftRole);

  public abstract A addToOAuthClientObjects(int, io.dekorate.deps.openshift.api.model.OAuthClient);

  public abstract A setToOAuthClientObjects(int, io.dekorate.deps.openshift.api.model.OAuthClient);

  public abstract A addToOAuthClientObjects(io.dekorate.deps.openshift.api.model.OAuthClient...);

  public abstract A addAllToOAuthClientObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.OAuthClient>);

  public abstract A removeFromOAuthClientObjects(io.dekorate.deps.openshift.api.model.OAuthClient...);

  public abstract A removeAllFromOAuthClientObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.OAuthClient>);

  public abstract A removeMatchingFromOAuthClientObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$OAuthClientObjectsNested<A> setNewOAuthClientObjectLike(int, io.dekorate.deps.openshift.api.model.OAuthClient);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$OAuthClientObjectsNested<A> addNewOAuthClientObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$OAuthClientObjectsNested<A> addNewOAuthClientObjectLike(io.dekorate.deps.openshift.api.model.OAuthClient);

  public abstract A addToIdentityObjects(int, io.dekorate.deps.openshift.api.model.Identity);

  public abstract A setToIdentityObjects(int, io.dekorate.deps.openshift.api.model.Identity);

  public abstract A addToIdentityObjects(io.dekorate.deps.openshift.api.model.Identity...);

  public abstract A addAllToIdentityObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.Identity>);

  public abstract A removeFromIdentityObjects(io.dekorate.deps.openshift.api.model.Identity...);

  public abstract A removeAllFromIdentityObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.Identity>);

  public abstract A removeMatchingFromIdentityObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$IdentityObjectsNested<A> setNewIdentityObjectLike(int, io.dekorate.deps.openshift.api.model.Identity);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$IdentityObjectsNested<A> addNewIdentityObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$IdentityObjectsNested<A> addNewIdentityObjectLike(io.dekorate.deps.openshift.api.model.Identity);

  public abstract A addToLimitRangeObjects(int, io.dekorate.deps.kubernetes.api.model.LimitRange);

  public abstract A setToLimitRangeObjects(int, io.dekorate.deps.kubernetes.api.model.LimitRange);

  public abstract A addToLimitRangeObjects(io.dekorate.deps.kubernetes.api.model.LimitRange...);

  public abstract A addAllToLimitRangeObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.LimitRange>);

  public abstract A removeFromLimitRangeObjects(io.dekorate.deps.kubernetes.api.model.LimitRange...);

  public abstract A removeAllFromLimitRangeObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.LimitRange>);

  public abstract A removeMatchingFromLimitRangeObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$LimitRangeObjectsNested<A> setNewLimitRangeObjectLike(int, io.dekorate.deps.kubernetes.api.model.LimitRange);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$LimitRangeObjectsNested<A> addNewLimitRangeObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$LimitRangeObjectsNested<A> addNewLimitRangeObjectLike(io.dekorate.deps.kubernetes.api.model.LimitRange);

  public abstract A addToClusterVersionObjects(int, io.dekorate.deps.openshift.api.model.ClusterVersion);

  public abstract A setToClusterVersionObjects(int, io.dekorate.deps.openshift.api.model.ClusterVersion);

  public abstract A addToClusterVersionObjects(io.dekorate.deps.openshift.api.model.ClusterVersion...);

  public abstract A addAllToClusterVersionObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.ClusterVersion>);

  public abstract A removeFromClusterVersionObjects(io.dekorate.deps.openshift.api.model.ClusterVersion...);

  public abstract A removeAllFromClusterVersionObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.ClusterVersion>);

  public abstract A removeMatchingFromClusterVersionObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ClusterVersionObjectsNested<A> setNewClusterVersionObjectLike(int, io.dekorate.deps.openshift.api.model.ClusterVersion);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ClusterVersionObjectsNested<A> addNewClusterVersionObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ClusterVersionObjectsNested<A> addNewClusterVersionObjectLike(io.dekorate.deps.openshift.api.model.ClusterVersion);

  public abstract A addToCSIDriverObjects(int, io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSIDriver);

  public abstract A setToCSIDriverObjects(int, io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSIDriver);

  public abstract A addToCSIDriverObjects(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSIDriver...);

  public abstract A addAllToCSIDriverObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSIDriver>);

  public abstract A removeFromCSIDriverObjects(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSIDriver...);

  public abstract A removeAllFromCSIDriverObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSIDriver>);

  public abstract A removeMatchingFromCSIDriverObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$CSIDriverObjectsNested<A> setNewCSIDriverObjectLike(int, io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSIDriver);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$CSIDriverObjectsNested<A> addNewCSIDriverObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$CSIDriverObjectsNested<A> addNewCSIDriverObjectLike(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSIDriver);

  public abstract A addToImageStreamImportObjects(int, io.dekorate.deps.openshift.api.model.ImageStreamImport);

  public abstract A setToImageStreamImportObjects(int, io.dekorate.deps.openshift.api.model.ImageStreamImport);

  public abstract A addToImageStreamImportObjects(io.dekorate.deps.openshift.api.model.ImageStreamImport...);

  public abstract A addAllToImageStreamImportObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.ImageStreamImport>);

  public abstract A removeFromImageStreamImportObjects(io.dekorate.deps.openshift.api.model.ImageStreamImport...);

  public abstract A removeAllFromImageStreamImportObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.ImageStreamImport>);

  public abstract A removeMatchingFromImageStreamImportObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ImageStreamImportObjectsNested<A> setNewImageStreamImportObjectLike(int, io.dekorate.deps.openshift.api.model.ImageStreamImport);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ImageStreamImportObjectsNested<A> addNewImageStreamImportObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ImageStreamImportObjectsNested<A> addNewImageStreamImportObjectLike(io.dekorate.deps.openshift.api.model.ImageStreamImport);

  public abstract A addToControllerRevisionObjects(int, io.dekorate.deps.kubernetes.api.model.apps.ControllerRevision);

  public abstract A setToControllerRevisionObjects(int, io.dekorate.deps.kubernetes.api.model.apps.ControllerRevision);

  public abstract A addToControllerRevisionObjects(io.dekorate.deps.kubernetes.api.model.apps.ControllerRevision...);

  public abstract A addAllToControllerRevisionObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.apps.ControllerRevision>);

  public abstract A removeFromControllerRevisionObjects(io.dekorate.deps.kubernetes.api.model.apps.ControllerRevision...);

  public abstract A removeAllFromControllerRevisionObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.apps.ControllerRevision>);

  public abstract A removeMatchingFromControllerRevisionObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ControllerRevisionObjectsNested<A> setNewControllerRevisionObjectLike(int, io.dekorate.deps.kubernetes.api.model.apps.ControllerRevision);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ControllerRevisionObjectsNested<A> addNewControllerRevisionObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ControllerRevisionObjectsNested<A> addNewControllerRevisionObjectLike(io.dekorate.deps.kubernetes.api.model.apps.ControllerRevision);

  public abstract A addToOpenshiftRoleBindingRestrictionObjects(int, io.dekorate.deps.openshift.api.model.OpenshiftRoleBindingRestriction);

  public abstract A setToOpenshiftRoleBindingRestrictionObjects(int, io.dekorate.deps.openshift.api.model.OpenshiftRoleBindingRestriction);

  public abstract A addToOpenshiftRoleBindingRestrictionObjects(io.dekorate.deps.openshift.api.model.OpenshiftRoleBindingRestriction...);

  public abstract A addAllToOpenshiftRoleBindingRestrictionObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.OpenshiftRoleBindingRestriction>);

  public abstract A removeFromOpenshiftRoleBindingRestrictionObjects(io.dekorate.deps.openshift.api.model.OpenshiftRoleBindingRestriction...);

  public abstract A removeAllFromOpenshiftRoleBindingRestrictionObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.OpenshiftRoleBindingRestriction>);

  public abstract A removeMatchingFromOpenshiftRoleBindingRestrictionObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$OpenshiftRoleBindingRestrictionObjectsNested<A> setNewOpenshiftRoleBindingRestrictionObjectLike(int, io.dekorate.deps.openshift.api.model.OpenshiftRoleBindingRestriction);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$OpenshiftRoleBindingRestrictionObjectsNested<A> addNewOpenshiftRoleBindingRestrictionObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$OpenshiftRoleBindingRestrictionObjectsNested<A> addNewOpenshiftRoleBindingRestrictionObjectLike(io.dekorate.deps.openshift.api.model.OpenshiftRoleBindingRestriction);

  public abstract A addToRoleBindingObjects(int, io.dekorate.deps.kubernetes.api.model.rbac.RoleBinding);

  public abstract A setToRoleBindingObjects(int, io.dekorate.deps.kubernetes.api.model.rbac.RoleBinding);

  public abstract A addToRoleBindingObjects(io.dekorate.deps.kubernetes.api.model.rbac.RoleBinding...);

  public abstract A addAllToRoleBindingObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.rbac.RoleBinding>);

  public abstract A removeFromRoleBindingObjects(io.dekorate.deps.kubernetes.api.model.rbac.RoleBinding...);

  public abstract A removeAllFromRoleBindingObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.rbac.RoleBinding>);

  public abstract A removeMatchingFromRoleBindingObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$RoleBindingObjectsNested<A> setNewRoleBindingObjectLike(int, io.dekorate.deps.kubernetes.api.model.rbac.RoleBinding);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$RoleBindingObjectsNested<A> addNewRoleBindingObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$RoleBindingObjectsNested<A> addNewRoleBindingObjectLike(io.dekorate.deps.kubernetes.api.model.rbac.RoleBinding);

  public abstract A addToPodPresetObjects(int, io.dekorate.deps.kubernetes.api.model.settings.PodPreset);

  public abstract A setToPodPresetObjects(int, io.dekorate.deps.kubernetes.api.model.settings.PodPreset);

  public abstract A addToPodPresetObjects(io.dekorate.deps.kubernetes.api.model.settings.PodPreset...);

  public abstract A addAllToPodPresetObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.settings.PodPreset>);

  public abstract A removeFromPodPresetObjects(io.dekorate.deps.kubernetes.api.model.settings.PodPreset...);

  public abstract A removeAllFromPodPresetObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.settings.PodPreset>);

  public abstract A removeMatchingFromPodPresetObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$PodPresetObjectsNested<A> setNewPodPresetObjectLike(int, io.dekorate.deps.kubernetes.api.model.settings.PodPreset);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$PodPresetObjectsNested<A> addNewPodPresetObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$PodPresetObjectsNested<A> addNewPodPresetObjectLike(io.dekorate.deps.kubernetes.api.model.settings.PodPreset);

  public abstract A addToProjectObjects(int, io.dekorate.deps.openshift.api.model.Project);

  public abstract A setToProjectObjects(int, io.dekorate.deps.openshift.api.model.Project);

  public abstract A addToProjectObjects(io.dekorate.deps.openshift.api.model.Project...);

  public abstract A addAllToProjectObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.Project>);

  public abstract A removeFromProjectObjects(io.dekorate.deps.openshift.api.model.Project...);

  public abstract A removeAllFromProjectObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.Project>);

  public abstract A removeMatchingFromProjectObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ProjectObjectsNested<A> setNewProjectObjectLike(int, io.dekorate.deps.openshift.api.model.Project);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ProjectObjectsNested<A> addNewProjectObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ProjectObjectsNested<A> addNewProjectObjectLike(io.dekorate.deps.openshift.api.model.Project);

  public abstract A addToNodeMetricsObjects(int, io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.NodeMetrics);

  public abstract A setToNodeMetricsObjects(int, io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.NodeMetrics);

  public abstract A addToNodeMetricsObjects(io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.NodeMetrics...);

  public abstract A addAllToNodeMetricsObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.NodeMetrics>);

  public abstract A removeFromNodeMetricsObjects(io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.NodeMetrics...);

  public abstract A removeAllFromNodeMetricsObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.NodeMetrics>);

  public abstract A removeMatchingFromNodeMetricsObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$NodeMetricsObjectsNested<A> setNewNodeMetricsObjectLike(int, io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.NodeMetrics);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$NodeMetricsObjectsNested<A> addNewNodeMetricsObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$NodeMetricsObjectsNested<A> addNewNodeMetricsObjectLike(io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.NodeMetrics);

  public abstract A addToBuildConfigObjects(int, io.dekorate.deps.openshift.api.model.BuildConfig);

  public abstract A setToBuildConfigObjects(int, io.dekorate.deps.openshift.api.model.BuildConfig);

  public abstract A addToBuildConfigObjects(io.dekorate.deps.openshift.api.model.BuildConfig...);

  public abstract A addAllToBuildConfigObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.BuildConfig>);

  public abstract A removeFromBuildConfigObjects(io.dekorate.deps.openshift.api.model.BuildConfig...);

  public abstract A removeAllFromBuildConfigObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.BuildConfig>);

  public abstract A removeMatchingFromBuildConfigObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$BuildConfigObjectsNested<A> setNewBuildConfigObjectLike(int, io.dekorate.deps.openshift.api.model.BuildConfig);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$BuildConfigObjectsNested<A> addNewBuildConfigObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$BuildConfigObjectsNested<A> addNewBuildConfigObjectLike(io.dekorate.deps.openshift.api.model.BuildConfig);

  public abstract A addToClusterRoleObjects(int, io.dekorate.deps.kubernetes.api.model.rbac.ClusterRole);

  public abstract A setToClusterRoleObjects(int, io.dekorate.deps.kubernetes.api.model.rbac.ClusterRole);

  public abstract A addToClusterRoleObjects(io.dekorate.deps.kubernetes.api.model.rbac.ClusterRole...);

  public abstract A addAllToClusterRoleObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.rbac.ClusterRole>);

  public abstract A removeFromClusterRoleObjects(io.dekorate.deps.kubernetes.api.model.rbac.ClusterRole...);

  public abstract A removeAllFromClusterRoleObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.rbac.ClusterRole>);

  public abstract A removeMatchingFromClusterRoleObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ClusterRoleObjectsNested<A> setNewClusterRoleObjectLike(int, io.dekorate.deps.kubernetes.api.model.rbac.ClusterRole);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ClusterRoleObjectsNested<A> addNewClusterRoleObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ClusterRoleObjectsNested<A> addNewClusterRoleObjectLike(io.dekorate.deps.kubernetes.api.model.rbac.ClusterRole);

  public abstract A addToVolumeAttachmentObjects(int, io.dekorate.deps.kubernetes.api.model.storage.VolumeAttachment);

  public abstract A setToVolumeAttachmentObjects(int, io.dekorate.deps.kubernetes.api.model.storage.VolumeAttachment);

  public abstract A addToVolumeAttachmentObjects(io.dekorate.deps.kubernetes.api.model.storage.VolumeAttachment...);

  public abstract A addAllToVolumeAttachmentObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.storage.VolumeAttachment>);

  public abstract A removeFromVolumeAttachmentObjects(io.dekorate.deps.kubernetes.api.model.storage.VolumeAttachment...);

  public abstract A removeAllFromVolumeAttachmentObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.storage.VolumeAttachment>);

  public abstract A removeMatchingFromVolumeAttachmentObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$VolumeAttachmentObjectsNested<A> setNewVolumeAttachmentObjectLike(int, io.dekorate.deps.kubernetes.api.model.storage.VolumeAttachment);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$VolumeAttachmentObjectsNested<A> addNewVolumeAttachmentObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$VolumeAttachmentObjectsNested<A> addNewVolumeAttachmentObjectLike(io.dekorate.deps.kubernetes.api.model.storage.VolumeAttachment);

  public abstract A addToOAuthAuthorizeTokenObjects(int, io.dekorate.deps.openshift.api.model.OAuthAuthorizeToken);

  public abstract A setToOAuthAuthorizeTokenObjects(int, io.dekorate.deps.openshift.api.model.OAuthAuthorizeToken);

  public abstract A addToOAuthAuthorizeTokenObjects(io.dekorate.deps.openshift.api.model.OAuthAuthorizeToken...);

  public abstract A addAllToOAuthAuthorizeTokenObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.OAuthAuthorizeToken>);

  public abstract A removeFromOAuthAuthorizeTokenObjects(io.dekorate.deps.openshift.api.model.OAuthAuthorizeToken...);

  public abstract A removeAllFromOAuthAuthorizeTokenObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.OAuthAuthorizeToken>);

  public abstract A removeMatchingFromOAuthAuthorizeTokenObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$OAuthAuthorizeTokenObjectsNested<A> setNewOAuthAuthorizeTokenObjectLike(int, io.dekorate.deps.openshift.api.model.OAuthAuthorizeToken);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$OAuthAuthorizeTokenObjectsNested<A> addNewOAuthAuthorizeTokenObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$OAuthAuthorizeTokenObjectsNested<A> addNewOAuthAuthorizeTokenObjectLike(io.dekorate.deps.openshift.api.model.OAuthAuthorizeToken);

  public abstract A addToSelfSubjectAccessReviewObjects(int, io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectAccessReview);

  public abstract A setToSelfSubjectAccessReviewObjects(int, io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectAccessReview);

  public abstract A addToSelfSubjectAccessReviewObjects(io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectAccessReview...);

  public abstract A addAllToSelfSubjectAccessReviewObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectAccessReview>);

  public abstract A removeFromSelfSubjectAccessReviewObjects(io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectAccessReview...);

  public abstract A removeAllFromSelfSubjectAccessReviewObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectAccessReview>);

  public abstract A removeMatchingFromSelfSubjectAccessReviewObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$SelfSubjectAccessReviewObjectsNested<A> setNewSelfSubjectAccessReviewObjectLike(int, io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectAccessReview);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$SelfSubjectAccessReviewObjectsNested<A> addNewSelfSubjectAccessReviewObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$SelfSubjectAccessReviewObjectsNested<A> addNewSelfSubjectAccessReviewObjectLike(io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectAccessReview);

  public abstract A addToProjectRequestObjects(int, io.dekorate.deps.openshift.api.model.ProjectRequest);

  public abstract A setToProjectRequestObjects(int, io.dekorate.deps.openshift.api.model.ProjectRequest);

  public abstract A addToProjectRequestObjects(io.dekorate.deps.openshift.api.model.ProjectRequest...);

  public abstract A addAllToProjectRequestObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.ProjectRequest>);

  public abstract A removeFromProjectRequestObjects(io.dekorate.deps.openshift.api.model.ProjectRequest...);

  public abstract A removeAllFromProjectRequestObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.ProjectRequest>);

  public abstract A removeMatchingFromProjectRequestObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ProjectRequestObjectsNested<A> setNewProjectRequestObjectLike(int, io.dekorate.deps.openshift.api.model.ProjectRequest);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ProjectRequestObjectsNested<A> addNewProjectRequestObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ProjectRequestObjectsNested<A> addNewProjectRequestObjectLike(io.dekorate.deps.openshift.api.model.ProjectRequest);

  public abstract A addToTemplateObjects(int, io.dekorate.deps.openshift.api.model.Template);

  public abstract A setToTemplateObjects(int, io.dekorate.deps.openshift.api.model.Template);

  public abstract A addToTemplateObjects(io.dekorate.deps.openshift.api.model.Template...);

  public abstract A addAllToTemplateObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.Template>);

  public abstract A removeFromTemplateObjects(io.dekorate.deps.openshift.api.model.Template...);

  public abstract A removeAllFromTemplateObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.Template>);

  public abstract A removeMatchingFromTemplateObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$TemplateObjectsNested<A> setNewTemplateObjectLike(int, io.dekorate.deps.openshift.api.model.Template);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$TemplateObjectsNested<A> addNewTemplateObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$TemplateObjectsNested<A> addNewTemplateObjectLike(io.dekorate.deps.openshift.api.model.Template);

  public abstract A addToPriorityClassObjects(int, io.dekorate.deps.kubernetes.api.model.scheduling.PriorityClass);

  public abstract A setToPriorityClassObjects(int, io.dekorate.deps.kubernetes.api.model.scheduling.PriorityClass);

  public abstract A addToPriorityClassObjects(io.dekorate.deps.kubernetes.api.model.scheduling.PriorityClass...);

  public abstract A addAllToPriorityClassObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.scheduling.PriorityClass>);

  public abstract A removeFromPriorityClassObjects(io.dekorate.deps.kubernetes.api.model.scheduling.PriorityClass...);

  public abstract A removeAllFromPriorityClassObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.scheduling.PriorityClass>);

  public abstract A removeMatchingFromPriorityClassObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$PriorityClassObjectsNested<A> setNewPriorityClassObjectLike(int, io.dekorate.deps.kubernetes.api.model.scheduling.PriorityClass);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$PriorityClassObjectsNested<A> addNewPriorityClassObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$PriorityClassObjectsNested<A> addNewPriorityClassObjectLike(io.dekorate.deps.kubernetes.api.model.scheduling.PriorityClass);

  public abstract A addToOAuthClientAuthorizationObjects(int, io.dekorate.deps.openshift.api.model.OAuthClientAuthorization);

  public abstract A setToOAuthClientAuthorizationObjects(int, io.dekorate.deps.openshift.api.model.OAuthClientAuthorization);

  public abstract A addToOAuthClientAuthorizationObjects(io.dekorate.deps.openshift.api.model.OAuthClientAuthorization...);

  public abstract A addAllToOAuthClientAuthorizationObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.OAuthClientAuthorization>);

  public abstract A removeFromOAuthClientAuthorizationObjects(io.dekorate.deps.openshift.api.model.OAuthClientAuthorization...);

  public abstract A removeAllFromOAuthClientAuthorizationObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.OAuthClientAuthorization>);

  public abstract A removeMatchingFromOAuthClientAuthorizationObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$OAuthClientAuthorizationObjectsNested<A> setNewOAuthClientAuthorizationObjectLike(int, io.dekorate.deps.openshift.api.model.OAuthClientAuthorization);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$OAuthClientAuthorizationObjectsNested<A> addNewOAuthClientAuthorizationObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$OAuthClientAuthorizationObjectsNested<A> addNewOAuthClientAuthorizationObjectLike(io.dekorate.deps.openshift.api.model.OAuthClientAuthorization);

  public abstract A addToDeploymentObjects(int, io.dekorate.deps.kubernetes.api.model.apps.Deployment);

  public abstract A setToDeploymentObjects(int, io.dekorate.deps.kubernetes.api.model.apps.Deployment);

  public abstract A addToDeploymentObjects(io.dekorate.deps.kubernetes.api.model.apps.Deployment...);

  public abstract A addAllToDeploymentObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.apps.Deployment>);

  public abstract A removeFromDeploymentObjects(io.dekorate.deps.kubernetes.api.model.apps.Deployment...);

  public abstract A removeAllFromDeploymentObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.apps.Deployment>);

  public abstract A removeMatchingFromDeploymentObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$DeploymentObjectsNested<A> setNewDeploymentObjectLike(int, io.dekorate.deps.kubernetes.api.model.apps.Deployment);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$DeploymentObjectsNested<A> addNewDeploymentObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$DeploymentObjectsNested<A> addNewDeploymentObjectLike(io.dekorate.deps.kubernetes.api.model.apps.Deployment);

  public abstract A addToPodTemplateObjects(int, io.dekorate.deps.kubernetes.api.model.PodTemplate);

  public abstract A setToPodTemplateObjects(int, io.dekorate.deps.kubernetes.api.model.PodTemplate);

  public abstract A addToPodTemplateObjects(io.dekorate.deps.kubernetes.api.model.PodTemplate...);

  public abstract A addAllToPodTemplateObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.PodTemplate>);

  public abstract A removeFromPodTemplateObjects(io.dekorate.deps.kubernetes.api.model.PodTemplate...);

  public abstract A removeAllFromPodTemplateObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.PodTemplate>);

  public abstract A removeMatchingFromPodTemplateObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$PodTemplateObjectsNested<A> setNewPodTemplateObjectLike(int, io.dekorate.deps.kubernetes.api.model.PodTemplate);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$PodTemplateObjectsNested<A> addNewPodTemplateObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$PodTemplateObjectsNested<A> addNewPodTemplateObjectLike(io.dekorate.deps.kubernetes.api.model.PodTemplate);

  public abstract A addToEventObjects(int, io.dekorate.deps.kubernetes.api.model.Event);

  public abstract A setToEventObjects(int, io.dekorate.deps.kubernetes.api.model.Event);

  public abstract A addToEventObjects(io.dekorate.deps.kubernetes.api.model.Event...);

  public abstract A addAllToEventObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.Event>);

  public abstract A removeFromEventObjects(io.dekorate.deps.kubernetes.api.model.Event...);

  public abstract A removeAllFromEventObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.Event>);

  public abstract A removeMatchingFromEventObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$EventObjectsNested<A> setNewEventObjectLike(int, io.dekorate.deps.kubernetes.api.model.Event);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$EventObjectsNested<A> addNewEventObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$EventObjectsNested<A> addNewEventObjectLike(io.dekorate.deps.kubernetes.api.model.Event);

  public abstract A addToIngressObjects(int, io.dekorate.deps.kubernetes.api.model.extensions.Ingress);

  public abstract A setToIngressObjects(int, io.dekorate.deps.kubernetes.api.model.extensions.Ingress);

  public abstract A addToIngressObjects(io.dekorate.deps.kubernetes.api.model.extensions.Ingress...);

  public abstract A addAllToIngressObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.extensions.Ingress>);

  public abstract A removeFromIngressObjects(io.dekorate.deps.kubernetes.api.model.extensions.Ingress...);

  public abstract A removeAllFromIngressObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.extensions.Ingress>);

  public abstract A removeMatchingFromIngressObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$IngressObjectsNested<A> setNewIngressObjectLike(int, io.dekorate.deps.kubernetes.api.model.extensions.Ingress);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$IngressObjectsNested<A> addNewIngressObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$IngressObjectsNested<A> addNewIngressObjectLike(io.dekorate.deps.kubernetes.api.model.extensions.Ingress);

  public abstract A addToDeploymentConfigObjects(int, io.dekorate.deps.openshift.api.model.DeploymentConfig);

  public abstract A setToDeploymentConfigObjects(int, io.dekorate.deps.openshift.api.model.DeploymentConfig);

  public abstract A addToDeploymentConfigObjects(io.dekorate.deps.openshift.api.model.DeploymentConfig...);

  public abstract A addAllToDeploymentConfigObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.DeploymentConfig>);

  public abstract A removeFromDeploymentConfigObjects(io.dekorate.deps.openshift.api.model.DeploymentConfig...);

  public abstract A removeAllFromDeploymentConfigObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.DeploymentConfig>);

  public abstract A removeMatchingFromDeploymentConfigObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$DeploymentConfigObjectsNested<A> setNewDeploymentConfigObjectLike(int, io.dekorate.deps.openshift.api.model.DeploymentConfig);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$DeploymentConfigObjectsNested<A> addNewDeploymentConfigObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$DeploymentConfigObjectsNested<A> addNewDeploymentConfigObjectLike(io.dekorate.deps.openshift.api.model.DeploymentConfig);

  public abstract A addToOAuthAccessTokenObjects(int, io.dekorate.deps.openshift.api.model.OAuthAccessToken);

  public abstract A setToOAuthAccessTokenObjects(int, io.dekorate.deps.openshift.api.model.OAuthAccessToken);

  public abstract A addToOAuthAccessTokenObjects(io.dekorate.deps.openshift.api.model.OAuthAccessToken...);

  public abstract A addAllToOAuthAccessTokenObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.OAuthAccessToken>);

  public abstract A removeFromOAuthAccessTokenObjects(io.dekorate.deps.openshift.api.model.OAuthAccessToken...);

  public abstract A removeAllFromOAuthAccessTokenObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.OAuthAccessToken>);

  public abstract A removeMatchingFromOAuthAccessTokenObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$OAuthAccessTokenObjectsNested<A> setNewOAuthAccessTokenObjectLike(int, io.dekorate.deps.openshift.api.model.OAuthAccessToken);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$OAuthAccessTokenObjectsNested<A> addNewOAuthAccessTokenObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$OAuthAccessTokenObjectsNested<A> addNewOAuthAccessTokenObjectLike(io.dekorate.deps.openshift.api.model.OAuthAccessToken);

  public abstract A addToPersistentVolumeObjects(int, io.dekorate.deps.kubernetes.api.model.PersistentVolume);

  public abstract A setToPersistentVolumeObjects(int, io.dekorate.deps.kubernetes.api.model.PersistentVolume);

  public abstract A addToPersistentVolumeObjects(io.dekorate.deps.kubernetes.api.model.PersistentVolume...);

  public abstract A addAllToPersistentVolumeObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.PersistentVolume>);

  public abstract A removeFromPersistentVolumeObjects(io.dekorate.deps.kubernetes.api.model.PersistentVolume...);

  public abstract A removeAllFromPersistentVolumeObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.PersistentVolume>);

  public abstract A removeMatchingFromPersistentVolumeObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$PersistentVolumeObjectsNested<A> setNewPersistentVolumeObjectLike(int, io.dekorate.deps.kubernetes.api.model.PersistentVolume);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$PersistentVolumeObjectsNested<A> addNewPersistentVolumeObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$PersistentVolumeObjectsNested<A> addNewPersistentVolumeObjectLike(io.dekorate.deps.kubernetes.api.model.PersistentVolume);

  public abstract A addToPersistentVolumeClaimObjects(int, io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaim);

  public abstract A setToPersistentVolumeClaimObjects(int, io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaim);

  public abstract A addToPersistentVolumeClaimObjects(io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaim...);

  public abstract A addAllToPersistentVolumeClaimObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaim>);

  public abstract A removeFromPersistentVolumeClaimObjects(io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaim...);

  public abstract A removeAllFromPersistentVolumeClaimObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaim>);

  public abstract A removeMatchingFromPersistentVolumeClaimObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$PersistentVolumeClaimObjectsNested<A> setNewPersistentVolumeClaimObjectLike(int, io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaim);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$PersistentVolumeClaimObjectsNested<A> addNewPersistentVolumeClaimObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$PersistentVolumeClaimObjectsNested<A> addNewPersistentVolumeClaimObjectLike(io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaim);

  public abstract A addToPodSecurityPolicyObjects(int, io.dekorate.deps.kubernetes.api.model.policy.PodSecurityPolicy);

  public abstract A setToPodSecurityPolicyObjects(int, io.dekorate.deps.kubernetes.api.model.policy.PodSecurityPolicy);

  public abstract A addToPodSecurityPolicyObjects(io.dekorate.deps.kubernetes.api.model.policy.PodSecurityPolicy...);

  public abstract A addAllToPodSecurityPolicyObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.policy.PodSecurityPolicy>);

  public abstract A removeFromPodSecurityPolicyObjects(io.dekorate.deps.kubernetes.api.model.policy.PodSecurityPolicy...);

  public abstract A removeAllFromPodSecurityPolicyObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.policy.PodSecurityPolicy>);

  public abstract A removeMatchingFromPodSecurityPolicyObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$PodSecurityPolicyObjectsNested<A> setNewPodSecurityPolicyObjectLike(int, io.dekorate.deps.kubernetes.api.model.policy.PodSecurityPolicy);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$PodSecurityPolicyObjectsNested<A> addNewPodSecurityPolicyObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$PodSecurityPolicyObjectsNested<A> addNewPodSecurityPolicyObjectLike(io.dekorate.deps.kubernetes.api.model.policy.PodSecurityPolicy);

  public abstract A addToEventObjects(int, io.dekorate.deps.kubernetes.api.model.events.Event);

  public abstract A setToEventObjects(int, io.dekorate.deps.kubernetes.api.model.events.Event);

  public abstract A addToEventObjects(io.dekorate.deps.kubernetes.api.model.events.Event...);

  public abstract A addAllToEventsEventObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.events.Event>);

  public abstract A removeFromEventObjects(io.dekorate.deps.kubernetes.api.model.events.Event...);

  public abstract A removeAllFromEventsEventObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.events.Event>);

  public abstract A removeMatchingFromEventsEventObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$EventsEventObjectsNested<A> setNewEventObjectLike(int, io.dekorate.deps.kubernetes.api.model.events.Event);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$EventsEventObjectsNested<A> addNewEventsEventObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$EventsEventObjectsNested<A> addNewEventObjectLike(io.dekorate.deps.kubernetes.api.model.events.Event);

  public abstract A addToStatefulSetObjects(int, io.dekorate.deps.kubernetes.api.model.apps.StatefulSet);

  public abstract A setToStatefulSetObjects(int, io.dekorate.deps.kubernetes.api.model.apps.StatefulSet);

  public abstract A addToStatefulSetObjects(io.dekorate.deps.kubernetes.api.model.apps.StatefulSet...);

  public abstract A addAllToStatefulSetObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.apps.StatefulSet>);

  public abstract A removeFromStatefulSetObjects(io.dekorate.deps.kubernetes.api.model.apps.StatefulSet...);

  public abstract A removeAllFromStatefulSetObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.apps.StatefulSet>);

  public abstract A removeMatchingFromStatefulSetObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$StatefulSetObjectsNested<A> setNewStatefulSetObjectLike(int, io.dekorate.deps.kubernetes.api.model.apps.StatefulSet);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$StatefulSetObjectsNested<A> addNewStatefulSetObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$StatefulSetObjectsNested<A> addNewStatefulSetObjectLike(io.dekorate.deps.kubernetes.api.model.apps.StatefulSet);

  public abstract A addToOpenshiftClusterRoleObjects(int, io.dekorate.deps.openshift.api.model.OpenshiftClusterRole);

  public abstract A setToOpenshiftClusterRoleObjects(int, io.dekorate.deps.openshift.api.model.OpenshiftClusterRole);

  public abstract A addToOpenshiftClusterRoleObjects(io.dekorate.deps.openshift.api.model.OpenshiftClusterRole...);

  public abstract A addAllToOpenshiftClusterRoleObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.OpenshiftClusterRole>);

  public abstract A removeFromOpenshiftClusterRoleObjects(io.dekorate.deps.openshift.api.model.OpenshiftClusterRole...);

  public abstract A removeAllFromOpenshiftClusterRoleObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.OpenshiftClusterRole>);

  public abstract A removeMatchingFromOpenshiftClusterRoleObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$OpenshiftClusterRoleObjectsNested<A> setNewOpenshiftClusterRoleObjectLike(int, io.dekorate.deps.openshift.api.model.OpenshiftClusterRole);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$OpenshiftClusterRoleObjectsNested<A> addNewOpenshiftClusterRoleObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$OpenshiftClusterRoleObjectsNested<A> addNewOpenshiftClusterRoleObjectLike(io.dekorate.deps.openshift.api.model.OpenshiftClusterRole);

  public abstract A addToSelfSubjectRulesReviewObjects(int, io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectRulesReview);

  public abstract A setToSelfSubjectRulesReviewObjects(int, io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectRulesReview);

  public abstract A addToSelfSubjectRulesReviewObjects(io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectRulesReview...);

  public abstract A addAllToSelfSubjectRulesReviewObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectRulesReview>);

  public abstract A removeFromSelfSubjectRulesReviewObjects(io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectRulesReview...);

  public abstract A removeAllFromSelfSubjectRulesReviewObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectRulesReview>);

  public abstract A removeMatchingFromSelfSubjectRulesReviewObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$SelfSubjectRulesReviewObjectsNested<A> setNewSelfSubjectRulesReviewObjectLike(int, io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectRulesReview);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$SelfSubjectRulesReviewObjectsNested<A> addNewSelfSubjectRulesReviewObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$SelfSubjectRulesReviewObjectsNested<A> addNewSelfSubjectRulesReviewObjectLike(io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectRulesReview);

  public abstract A addToRoleObjects(int, io.dekorate.deps.kubernetes.api.model.rbac.Role);

  public abstract A setToRoleObjects(int, io.dekorate.deps.kubernetes.api.model.rbac.Role);

  public abstract A addToRoleObjects(io.dekorate.deps.kubernetes.api.model.rbac.Role...);

  public abstract A addAllToRoleObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.rbac.Role>);

  public abstract A removeFromRoleObjects(io.dekorate.deps.kubernetes.api.model.rbac.Role...);

  public abstract A removeAllFromRoleObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.rbac.Role>);

  public abstract A removeMatchingFromRoleObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$RoleObjectsNested<A> setNewRoleObjectLike(int, io.dekorate.deps.kubernetes.api.model.rbac.Role);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$RoleObjectsNested<A> addNewRoleObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$RoleObjectsNested<A> addNewRoleObjectLike(io.dekorate.deps.kubernetes.api.model.rbac.Role);

  public abstract A addToUserObjects(int, io.dekorate.deps.openshift.api.model.User);

  public abstract A setToUserObjects(int, io.dekorate.deps.openshift.api.model.User);

  public abstract A addToUserObjects(io.dekorate.deps.openshift.api.model.User...);

  public abstract A addAllToUserObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.User>);

  public abstract A removeFromUserObjects(io.dekorate.deps.openshift.api.model.User...);

  public abstract A removeAllFromUserObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.User>);

  public abstract A removeMatchingFromUserObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$UserObjectsNested<A> setNewUserObjectLike(int, io.dekorate.deps.openshift.api.model.User);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$UserObjectsNested<A> addNewUserObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$UserObjectsNested<A> addNewUserObjectLike(io.dekorate.deps.openshift.api.model.User);

  public abstract A addToComponentStatusObjects(int, io.dekorate.deps.kubernetes.api.model.ComponentStatus);

  public abstract A setToComponentStatusObjects(int, io.dekorate.deps.kubernetes.api.model.ComponentStatus);

  public abstract A addToComponentStatusObjects(io.dekorate.deps.kubernetes.api.model.ComponentStatus...);

  public abstract A addAllToComponentStatusObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.ComponentStatus>);

  public abstract A removeFromComponentStatusObjects(io.dekorate.deps.kubernetes.api.model.ComponentStatus...);

  public abstract A removeAllFromComponentStatusObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.ComponentStatus>);

  public abstract A removeMatchingFromComponentStatusObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ComponentStatusObjectsNested<A> setNewComponentStatusObjectLike(int, io.dekorate.deps.kubernetes.api.model.ComponentStatus);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ComponentStatusObjectsNested<A> addNewComponentStatusObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ComponentStatusObjectsNested<A> addNewComponentStatusObjectLike(io.dekorate.deps.kubernetes.api.model.ComponentStatus);

  public abstract A addToTokenReviewObjects(int, io.dekorate.deps.kubernetes.api.model.authentication.TokenReview);

  public abstract A setToTokenReviewObjects(int, io.dekorate.deps.kubernetes.api.model.authentication.TokenReview);

  public abstract A addToTokenReviewObjects(io.dekorate.deps.kubernetes.api.model.authentication.TokenReview...);

  public abstract A addAllToTokenReviewObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.authentication.TokenReview>);

  public abstract A removeFromTokenReviewObjects(io.dekorate.deps.kubernetes.api.model.authentication.TokenReview...);

  public abstract A removeAllFromTokenReviewObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.authentication.TokenReview>);

  public abstract A removeMatchingFromTokenReviewObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$TokenReviewObjectsNested<A> setNewTokenReviewObjectLike(int, io.dekorate.deps.kubernetes.api.model.authentication.TokenReview);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$TokenReviewObjectsNested<A> addNewTokenReviewObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$TokenReviewObjectsNested<A> addNewTokenReviewObjectLike(io.dekorate.deps.kubernetes.api.model.authentication.TokenReview);

  public abstract A addToBindingObjects(int, io.dekorate.deps.kubernetes.api.model.Binding);

  public abstract A setToBindingObjects(int, io.dekorate.deps.kubernetes.api.model.Binding);

  public abstract A addToBindingObjects(io.dekorate.deps.kubernetes.api.model.Binding...);

  public abstract A addAllToBindingObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.Binding>);

  public abstract A removeFromBindingObjects(io.dekorate.deps.kubernetes.api.model.Binding...);

  public abstract A removeAllFromBindingObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.Binding>);

  public abstract A removeMatchingFromBindingObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$BindingObjectsNested<A> setNewBindingObjectLike(int, io.dekorate.deps.kubernetes.api.model.Binding);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$BindingObjectsNested<A> addNewBindingObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$BindingObjectsNested<A> addNewBindingObjectLike(io.dekorate.deps.kubernetes.api.model.Binding);

  public abstract A addToSecretObjects(int, io.dekorate.deps.kubernetes.api.model.Secret);

  public abstract A setToSecretObjects(int, io.dekorate.deps.kubernetes.api.model.Secret);

  public abstract A addToSecretObjects(io.dekorate.deps.kubernetes.api.model.Secret...);

  public abstract A addAllToSecretObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.Secret>);

  public abstract A removeFromSecretObjects(io.dekorate.deps.kubernetes.api.model.Secret...);

  public abstract A removeAllFromSecretObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.Secret>);

  public abstract A removeMatchingFromSecretObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$SecretObjectsNested<A> setNewSecretObjectLike(int, io.dekorate.deps.kubernetes.api.model.Secret);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$SecretObjectsNested<A> addNewSecretObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$SecretObjectsNested<A> addNewSecretObjectLike(io.dekorate.deps.kubernetes.api.model.Secret);

  public abstract A addToSecurityContextConstraintsObjects(int, io.dekorate.deps.openshift.api.model.SecurityContextConstraints);

  public abstract A setToSecurityContextConstraintsObjects(int, io.dekorate.deps.openshift.api.model.SecurityContextConstraints);

  public abstract A addToSecurityContextConstraintsObjects(io.dekorate.deps.openshift.api.model.SecurityContextConstraints...);

  public abstract A addAllToSecurityContextConstraintsObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.SecurityContextConstraints>);

  public abstract A removeFromSecurityContextConstraintsObjects(io.dekorate.deps.openshift.api.model.SecurityContextConstraints...);

  public abstract A removeAllFromSecurityContextConstraintsObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.SecurityContextConstraints>);

  public abstract A removeMatchingFromSecurityContextConstraintsObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$SecurityContextConstraintsObjectsNested<A> setNewSecurityContextConstraintsObjectLike(int, io.dekorate.deps.openshift.api.model.SecurityContextConstraints);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$SecurityContextConstraintsObjectsNested<A> addNewSecurityContextConstraintsObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$SecurityContextConstraintsObjectsNested<A> addNewSecurityContextConstraintsObjectLike(io.dekorate.deps.openshift.api.model.SecurityContextConstraints);

  public abstract A addToNetNamespaceObjects(int, io.dekorate.deps.openshift.api.model.NetNamespace);

  public abstract A setToNetNamespaceObjects(int, io.dekorate.deps.openshift.api.model.NetNamespace);

  public abstract A addToNetNamespaceObjects(io.dekorate.deps.openshift.api.model.NetNamespace...);

  public abstract A addAllToNetNamespaceObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.NetNamespace>);

  public abstract A removeFromNetNamespaceObjects(io.dekorate.deps.openshift.api.model.NetNamespace...);

  public abstract A removeAllFromNetNamespaceObjects(java.util.Collection<io.dekorate.deps.openshift.api.model.NetNamespace>);

  public abstract A removeMatchingFromNetNamespaceObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$NetNamespaceObjectsNested<A> setNewNetNamespaceObjectLike(int, io.dekorate.deps.openshift.api.model.NetNamespace);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$NetNamespaceObjectsNested<A> addNewNetNamespaceObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$NetNamespaceObjectsNested<A> addNewNetNamespaceObjectLike(io.dekorate.deps.openshift.api.model.NetNamespace);

  public abstract A addToNodeObjects(int, io.dekorate.deps.kubernetes.api.model.Node);

  public abstract A setToNodeObjects(int, io.dekorate.deps.kubernetes.api.model.Node);

  public abstract A addToNodeObjects(io.dekorate.deps.kubernetes.api.model.Node...);

  public abstract A addAllToNodeObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.Node>);

  public abstract A removeFromNodeObjects(io.dekorate.deps.kubernetes.api.model.Node...);

  public abstract A removeAllFromNodeObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.Node>);

  public abstract A removeMatchingFromNodeObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$NodeObjectsNested<A> setNewNodeObjectLike(int, io.dekorate.deps.kubernetes.api.model.Node);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$NodeObjectsNested<A> addNewNodeObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$NodeObjectsNested<A> addNewNodeObjectLike(io.dekorate.deps.kubernetes.api.model.Node);

  public abstract A addToJobObjects(int, io.dekorate.deps.kubernetes.api.model.batch.Job);

  public abstract A setToJobObjects(int, io.dekorate.deps.kubernetes.api.model.batch.Job);

  public abstract A addToJobObjects(io.dekorate.deps.kubernetes.api.model.batch.Job...);

  public abstract A addAllToJobObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.batch.Job>);

  public abstract A removeFromJobObjects(io.dekorate.deps.kubernetes.api.model.batch.Job...);

  public abstract A removeAllFromJobObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.batch.Job>);

  public abstract A removeMatchingFromJobObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$JobObjectsNested<A> setNewJobObjectLike(int, io.dekorate.deps.kubernetes.api.model.batch.Job);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$JobObjectsNested<A> addNewJobObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$JobObjectsNested<A> addNewJobObjectLike(io.dekorate.deps.kubernetes.api.model.batch.Job);

  public abstract A addToCertificateSigningRequestObjects(int, io.dekorate.deps.kubernetes.api.model.certificates.CertificateSigningRequest);

  public abstract A setToCertificateSigningRequestObjects(int, io.dekorate.deps.kubernetes.api.model.certificates.CertificateSigningRequest);

  public abstract A addToCertificateSigningRequestObjects(io.dekorate.deps.kubernetes.api.model.certificates.CertificateSigningRequest...);

  public abstract A addAllToCertificateSigningRequestObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.certificates.CertificateSigningRequest>);

  public abstract A removeFromCertificateSigningRequestObjects(io.dekorate.deps.kubernetes.api.model.certificates.CertificateSigningRequest...);

  public abstract A removeAllFromCertificateSigningRequestObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.certificates.CertificateSigningRequest>);

  public abstract A removeMatchingFromCertificateSigningRequestObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$CertificateSigningRequestObjectsNested<A> setNewCertificateSigningRequestObjectLike(int, io.dekorate.deps.kubernetes.api.model.certificates.CertificateSigningRequest);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$CertificateSigningRequestObjectsNested<A> addNewCertificateSigningRequestObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$CertificateSigningRequestObjectsNested<A> addNewCertificateSigningRequestObjectLike(io.dekorate.deps.kubernetes.api.model.certificates.CertificateSigningRequest);

  public abstract A addToServiceAccountObjects(int, io.dekorate.deps.kubernetes.api.model.ServiceAccount);

  public abstract A setToServiceAccountObjects(int, io.dekorate.deps.kubernetes.api.model.ServiceAccount);

  public abstract A addToServiceAccountObjects(io.dekorate.deps.kubernetes.api.model.ServiceAccount...);

  public abstract A addAllToServiceAccountObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.ServiceAccount>);

  public abstract A removeFromServiceAccountObjects(io.dekorate.deps.kubernetes.api.model.ServiceAccount...);

  public abstract A removeAllFromServiceAccountObjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.ServiceAccount>);

  public abstract A removeMatchingFromServiceAccountObjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.builder.VisitableBuilder<? extends io.dekorate.deps.kubernetes.api.model.HasMetadata, ?>>);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ServiceAccountObjectsNested<A> setNewServiceAccountObjectLike(int, io.dekorate.deps.kubernetes.api.model.ServiceAccount);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ServiceAccountObjectsNested<A> addNewServiceAccountObject();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ServiceAccountObjectsNested<A> addNewServiceAccountObjectLike(io.dekorate.deps.kubernetes.api.model.ServiceAccount);

  public abstract A addToParameters(int, io.dekorate.deps.openshift.api.model.Parameter);

  public abstract A setToParameters(int, io.dekorate.deps.openshift.api.model.Parameter);

  public abstract A addToParameters(io.dekorate.deps.openshift.api.model.Parameter...);

  public abstract A addAllToParameters(java.util.Collection<io.dekorate.deps.openshift.api.model.Parameter>);

  public abstract A removeFromParameters(io.dekorate.deps.openshift.api.model.Parameter...);

  public abstract A removeAllFromParameters(java.util.Collection<io.dekorate.deps.openshift.api.model.Parameter>);

  public abstract A removeMatchingFromParameters(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.openshift.api.model.ParameterBuilder>);

  public abstract java.util.List<io.dekorate.deps.openshift.api.model.Parameter> getParameters();

  public abstract java.util.List<io.dekorate.deps.openshift.api.model.Parameter> buildParameters();

  public abstract io.dekorate.deps.openshift.api.model.Parameter buildParameter(int);

  public abstract io.dekorate.deps.openshift.api.model.Parameter buildFirstParameter();

  public abstract io.dekorate.deps.openshift.api.model.Parameter buildLastParameter();

  public abstract io.dekorate.deps.openshift.api.model.Parameter buildMatchingParameter(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.openshift.api.model.ParameterBuilder>);

  public abstract java.lang.Boolean hasMatchingParameter(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.openshift.api.model.ParameterBuilder>);

  public abstract A withParameters(java.util.List<io.dekorate.deps.openshift.api.model.Parameter>);

  public abstract A withParameters(io.dekorate.deps.openshift.api.model.Parameter...);

  public abstract java.lang.Boolean hasParameters();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ParametersNested<A> addNewParameter();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ParametersNested<A> addNewParameterLike(io.dekorate.deps.openshift.api.model.Parameter);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ParametersNested<A> setNewParameterLike(int, io.dekorate.deps.openshift.api.model.Parameter);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ParametersNested<A> editParameter(int);

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ParametersNested<A> editFirstParameter();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ParametersNested<A> editLastParameter();

  public abstract io.dekorate.deps.openshift.api.model.TemplateFluent$ParametersNested<A> editMatchingParameter(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.openshift.api.model.ParameterBuilder>);
}
