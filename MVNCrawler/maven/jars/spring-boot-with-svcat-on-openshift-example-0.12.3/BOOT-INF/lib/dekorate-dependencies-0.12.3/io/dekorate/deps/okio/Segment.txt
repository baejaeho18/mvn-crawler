Compiled from "Segment.java"
final class io.dekorate.deps.okio.Segment {
  static final int SIZE;

  static final int SHARE_MINIMUM;

  final byte[] data;

  int pos;

  int limit;

  boolean shared;

  boolean owner;

  io.dekorate.deps.okio.Segment next;

  io.dekorate.deps.okio.Segment prev;

  io.dekorate.deps.okio.Segment();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: sipush        8192
       8: newarray       byte
      10: putfield      #26                 // Field data:[B
      13: aload_0
      14: iconst_1
      15: putfield      #28                 // Field owner:Z
      18: aload_0
      19: iconst_0
      20: putfield      #30                 // Field shared:Z
      23: return

  io.dekorate.deps.okio.Segment(byte[], int, int, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #24                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #26                 // Field data:[B
       9: aload_0
      10: iload_2
      11: putfield      #34                 // Field pos:I
      14: aload_0
      15: iload_3
      16: putfield      #36                 // Field limit:I
      19: aload_0
      20: iload         4
      22: putfield      #30                 // Field shared:Z
      25: aload_0
      26: iload         5
      28: putfield      #28                 // Field owner:Z
      31: return

  final io.dekorate.deps.okio.Segment sharedCopy();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #30                 // Field shared:Z
       5: new           #2                  // class io/dekorate/deps/okio/Segment
       8: dup
       9: aload_0
      10: getfield      #26                 // Field data:[B
      13: aload_0
      14: getfield      #34                 // Field pos:I
      17: aload_0
      18: getfield      #36                 // Field limit:I
      21: iconst_1
      22: iconst_0
      23: invokespecial #40                 // Method "<init>":([BIIZZ)V
      26: areturn

  final io.dekorate.deps.okio.Segment unsharedCopy();
    Code:
       0: new           #2                  // class io/dekorate/deps/okio/Segment
       3: dup
       4: aload_0
       5: getfield      #26                 // Field data:[B
       8: invokevirtual #46                 // Method "[B".clone:()Ljava/lang/Object;
      11: checkcast     #42                 // class "[B"
      14: aload_0
      15: getfield      #34                 // Field pos:I
      18: aload_0
      19: getfield      #36                 // Field limit:I
      22: iconst_0
      23: iconst_1
      24: invokespecial #40                 // Method "<init>":([BIIZZ)V
      27: areturn

  public final io.dekorate.deps.okio.Segment pop();
    Code:
       0: aload_0
       1: getfield      #50                 // Field next:Lio/dekorate/deps/okio/Segment;
       4: aload_0
       5: if_acmpeq     15
       8: aload_0
       9: getfield      #50                 // Field next:Lio/dekorate/deps/okio/Segment;
      12: goto          16
      15: aconst_null
      16: astore_1
      17: aload_0
      18: getfield      #52                 // Field prev:Lio/dekorate/deps/okio/Segment;
      21: aload_0
      22: getfield      #50                 // Field next:Lio/dekorate/deps/okio/Segment;
      25: putfield      #50                 // Field next:Lio/dekorate/deps/okio/Segment;
      28: aload_0
      29: getfield      #50                 // Field next:Lio/dekorate/deps/okio/Segment;
      32: aload_0
      33: getfield      #52                 // Field prev:Lio/dekorate/deps/okio/Segment;
      36: putfield      #52                 // Field prev:Lio/dekorate/deps/okio/Segment;
      39: aload_0
      40: aconst_null
      41: putfield      #50                 // Field next:Lio/dekorate/deps/okio/Segment;
      44: aload_0
      45: aconst_null
      46: putfield      #52                 // Field prev:Lio/dekorate/deps/okio/Segment;
      49: aload_1
      50: areturn

  public final io.dekorate.deps.okio.Segment push(io.dekorate.deps.okio.Segment);
    Code:
       0: aload_1
       1: aload_0
       2: putfield      #52                 // Field prev:Lio/dekorate/deps/okio/Segment;
       5: aload_1
       6: aload_0
       7: getfield      #50                 // Field next:Lio/dekorate/deps/okio/Segment;
      10: putfield      #50                 // Field next:Lio/dekorate/deps/okio/Segment;
      13: aload_0
      14: getfield      #50                 // Field next:Lio/dekorate/deps/okio/Segment;
      17: aload_1
      18: putfield      #52                 // Field prev:Lio/dekorate/deps/okio/Segment;
      21: aload_0
      22: aload_1
      23: putfield      #50                 // Field next:Lio/dekorate/deps/okio/Segment;
      26: aload_1
      27: areturn

  public final io.dekorate.deps.okio.Segment split(int);
    Code:
       0: iload_1
       1: ifle          17
       4: iload_1
       5: aload_0
       6: getfield      #36                 // Field limit:I
       9: aload_0
      10: getfield      #34                 // Field pos:I
      13: isub
      14: if_icmple     25
      17: new           #60                 // class java/lang/IllegalArgumentException
      20: dup
      21: invokespecial #61                 // Method java/lang/IllegalArgumentException."<init>":()V
      24: athrow
      25: iload_1
      26: sipush        1024
      29: if_icmplt     40
      32: aload_0
      33: invokevirtual #63                 // Method sharedCopy:()Lio/dekorate/deps/okio/Segment;
      36: astore_2
      37: goto          61
      40: invokestatic  #68                 // Method io/dekorate/deps/okio/SegmentPool.take:()Lio/dekorate/deps/okio/Segment;
      43: astore_2
      44: aload_0
      45: getfield      #26                 // Field data:[B
      48: aload_0
      49: getfield      #34                 // Field pos:I
      52: aload_2
      53: getfield      #26                 // Field data:[B
      56: iconst_0
      57: iload_1
      58: invokestatic  #74                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      61: aload_2
      62: aload_2
      63: getfield      #34                 // Field pos:I
      66: iload_1
      67: iadd
      68: putfield      #36                 // Field limit:I
      71: aload_0
      72: dup
      73: getfield      #34                 // Field pos:I
      76: iload_1
      77: iadd
      78: putfield      #34                 // Field pos:I
      81: aload_0
      82: getfield      #52                 // Field prev:Lio/dekorate/deps/okio/Segment;
      85: aload_2
      86: invokevirtual #76                 // Method push:(Lio/dekorate/deps/okio/Segment;)Lio/dekorate/deps/okio/Segment;
      89: pop
      90: aload_2
      91: areturn

  public final void compact();
    Code:
       0: aload_0
       1: getfield      #52                 // Field prev:Lio/dekorate/deps/okio/Segment;
       4: aload_0
       5: if_acmpne     16
       8: new           #81                 // class java/lang/IllegalStateException
      11: dup
      12: invokespecial #82                 // Method java/lang/IllegalStateException."<init>":()V
      15: athrow
      16: aload_0
      17: getfield      #52                 // Field prev:Lio/dekorate/deps/okio/Segment;
      20: getfield      #28                 // Field owner:Z
      23: ifne          27
      26: return
      27: aload_0
      28: getfield      #36                 // Field limit:I
      31: aload_0
      32: getfield      #34                 // Field pos:I
      35: isub
      36: istore_1
      37: sipush        8192
      40: aload_0
      41: getfield      #52                 // Field prev:Lio/dekorate/deps/okio/Segment;
      44: getfield      #36                 // Field limit:I
      47: isub
      48: aload_0
      49: getfield      #52                 // Field prev:Lio/dekorate/deps/okio/Segment;
      52: getfield      #30                 // Field shared:Z
      55: ifeq          62
      58: iconst_0
      59: goto          69
      62: aload_0
      63: getfield      #52                 // Field prev:Lio/dekorate/deps/okio/Segment;
      66: getfield      #34                 // Field pos:I
      69: iadd
      70: istore_2
      71: iload_1
      72: iload_2
      73: if_icmple     77
      76: return
      77: aload_0
      78: aload_0
      79: getfield      #52                 // Field prev:Lio/dekorate/deps/okio/Segment;
      82: iload_1
      83: invokevirtual #86                 // Method writeTo:(Lio/dekorate/deps/okio/Segment;I)V
      86: aload_0
      87: invokevirtual #88                 // Method pop:()Lio/dekorate/deps/okio/Segment;
      90: pop
      91: aload_0
      92: invokestatic  #92                 // Method io/dekorate/deps/okio/SegmentPool.recycle:(Lio/dekorate/deps/okio/Segment;)V
      95: return

  public final void writeTo(io.dekorate.deps.okio.Segment, int);
    Code:
       0: aload_1
       1: getfield      #28                 // Field owner:Z
       4: ifne          15
       7: new           #60                 // class java/lang/IllegalArgumentException
      10: dup
      11: invokespecial #61                 // Method java/lang/IllegalArgumentException."<init>":()V
      14: athrow
      15: aload_1
      16: getfield      #36                 // Field limit:I
      19: iload_2
      20: iadd
      21: sipush        8192
      24: if_icmple     110
      27: aload_1
      28: getfield      #30                 // Field shared:Z
      31: ifeq          42
      34: new           #60                 // class java/lang/IllegalArgumentException
      37: dup
      38: invokespecial #61                 // Method java/lang/IllegalArgumentException."<init>":()V
      41: athrow
      42: aload_1
      43: getfield      #36                 // Field limit:I
      46: iload_2
      47: iadd
      48: aload_1
      49: getfield      #34                 // Field pos:I
      52: isub
      53: sipush        8192
      56: if_icmple     67
      59: new           #60                 // class java/lang/IllegalArgumentException
      62: dup
      63: invokespecial #61                 // Method java/lang/IllegalArgumentException."<init>":()V
      66: athrow
      67: aload_1
      68: getfield      #26                 // Field data:[B
      71: aload_1
      72: getfield      #34                 // Field pos:I
      75: aload_1
      76: getfield      #26                 // Field data:[B
      79: iconst_0
      80: aload_1
      81: getfield      #36                 // Field limit:I
      84: aload_1
      85: getfield      #34                 // Field pos:I
      88: isub
      89: invokestatic  #74                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      92: aload_1
      93: dup
      94: getfield      #36                 // Field limit:I
      97: aload_1
      98: getfield      #34                 // Field pos:I
     101: isub
     102: putfield      #36                 // Field limit:I
     105: aload_1
     106: iconst_0
     107: putfield      #34                 // Field pos:I
     110: aload_0
     111: getfield      #26                 // Field data:[B
     114: aload_0
     115: getfield      #34                 // Field pos:I
     118: aload_1
     119: getfield      #26                 // Field data:[B
     122: aload_1
     123: getfield      #36                 // Field limit:I
     126: iload_2
     127: invokestatic  #74                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     130: aload_1
     131: dup
     132: getfield      #36                 // Field limit:I
     135: iload_2
     136: iadd
     137: putfield      #36                 // Field limit:I
     140: aload_0
     141: dup
     142: getfield      #34                 // Field pos:I
     145: iload_2
     146: iadd
     147: putfield      #34                 // Field pos:I
     150: return
}
