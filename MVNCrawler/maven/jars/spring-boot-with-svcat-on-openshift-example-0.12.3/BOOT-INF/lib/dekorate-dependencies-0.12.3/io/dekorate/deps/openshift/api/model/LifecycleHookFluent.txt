Compiled from "LifecycleHookFluent.java"
public interface io.dekorate.deps.openshift.api.model.LifecycleHookFluent<A extends io.dekorate.deps.openshift.api.model.LifecycleHookFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract io.dekorate.deps.openshift.api.model.ExecNewPodHook getExecNewPod();

  public abstract io.dekorate.deps.openshift.api.model.ExecNewPodHook buildExecNewPod();

  public abstract A withExecNewPod(io.dekorate.deps.openshift.api.model.ExecNewPodHook);

  public abstract java.lang.Boolean hasExecNewPod();

  public abstract io.dekorate.deps.openshift.api.model.LifecycleHookFluent$ExecNewPodNested<A> withNewExecNewPod();

  public abstract io.dekorate.deps.openshift.api.model.LifecycleHookFluent$ExecNewPodNested<A> withNewExecNewPodLike(io.dekorate.deps.openshift.api.model.ExecNewPodHook);

  public abstract io.dekorate.deps.openshift.api.model.LifecycleHookFluent$ExecNewPodNested<A> editExecNewPod();

  public abstract io.dekorate.deps.openshift.api.model.LifecycleHookFluent$ExecNewPodNested<A> editOrNewExecNewPod();

  public abstract io.dekorate.deps.openshift.api.model.LifecycleHookFluent$ExecNewPodNested<A> editOrNewExecNewPodLike(io.dekorate.deps.openshift.api.model.ExecNewPodHook);

  public abstract java.lang.String getFailurePolicy();

  public abstract A withFailurePolicy(java.lang.String);

  public abstract java.lang.Boolean hasFailurePolicy();

  public abstract A withNewFailurePolicy(java.lang.String);

  public abstract A withNewFailurePolicy(java.lang.StringBuilder);

  public abstract A withNewFailurePolicy(java.lang.StringBuffer);

  public abstract A addToTagImages(int, io.dekorate.deps.openshift.api.model.TagImageHook);

  public abstract A setToTagImages(int, io.dekorate.deps.openshift.api.model.TagImageHook);

  public abstract A addToTagImages(io.dekorate.deps.openshift.api.model.TagImageHook...);

  public abstract A addAllToTagImages(java.util.Collection<io.dekorate.deps.openshift.api.model.TagImageHook>);

  public abstract A removeFromTagImages(io.dekorate.deps.openshift.api.model.TagImageHook...);

  public abstract A removeAllFromTagImages(java.util.Collection<io.dekorate.deps.openshift.api.model.TagImageHook>);

  public abstract A removeMatchingFromTagImages(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.openshift.api.model.TagImageHookBuilder>);

  public abstract java.util.List<io.dekorate.deps.openshift.api.model.TagImageHook> getTagImages();

  public abstract java.util.List<io.dekorate.deps.openshift.api.model.TagImageHook> buildTagImages();

  public abstract io.dekorate.deps.openshift.api.model.TagImageHook buildTagImage(int);

  public abstract io.dekorate.deps.openshift.api.model.TagImageHook buildFirstTagImage();

  public abstract io.dekorate.deps.openshift.api.model.TagImageHook buildLastTagImage();

  public abstract io.dekorate.deps.openshift.api.model.TagImageHook buildMatchingTagImage(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.openshift.api.model.TagImageHookBuilder>);

  public abstract java.lang.Boolean hasMatchingTagImage(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.openshift.api.model.TagImageHookBuilder>);

  public abstract A withTagImages(java.util.List<io.dekorate.deps.openshift.api.model.TagImageHook>);

  public abstract A withTagImages(io.dekorate.deps.openshift.api.model.TagImageHook...);

  public abstract java.lang.Boolean hasTagImages();

  public abstract io.dekorate.deps.openshift.api.model.LifecycleHookFluent$TagImagesNested<A> addNewTagImage();

  public abstract io.dekorate.deps.openshift.api.model.LifecycleHookFluent$TagImagesNested<A> addNewTagImageLike(io.dekorate.deps.openshift.api.model.TagImageHook);

  public abstract io.dekorate.deps.openshift.api.model.LifecycleHookFluent$TagImagesNested<A> setNewTagImageLike(int, io.dekorate.deps.openshift.api.model.TagImageHook);

  public abstract io.dekorate.deps.openshift.api.model.LifecycleHookFluent$TagImagesNested<A> editTagImage(int);

  public abstract io.dekorate.deps.openshift.api.model.LifecycleHookFluent$TagImagesNested<A> editFirstTagImage();

  public abstract io.dekorate.deps.openshift.api.model.LifecycleHookFluent$TagImagesNested<A> editLastTagImage();

  public abstract io.dekorate.deps.openshift.api.model.LifecycleHookFluent$TagImagesNested<A> editMatchingTagImage(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.openshift.api.model.TagImageHookBuilder>);
}
