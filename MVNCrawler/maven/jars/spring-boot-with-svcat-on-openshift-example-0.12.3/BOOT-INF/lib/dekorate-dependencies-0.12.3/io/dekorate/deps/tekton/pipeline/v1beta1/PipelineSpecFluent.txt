Compiled from "PipelineSpecFluent.java"
public interface io.dekorate.deps.tekton.pipeline.v1beta1.PipelineSpecFluent<A extends io.dekorate.deps.tekton.pipeline.v1beta1.PipelineSpecFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getDescription();

  public abstract A withDescription(java.lang.String);

  public abstract java.lang.Boolean hasDescription();

  public abstract A withNewDescription(java.lang.String);

  public abstract A withNewDescription(java.lang.StringBuilder);

  public abstract A withNewDescription(java.lang.StringBuffer);

  public abstract A addToParams(int, io.dekorate.deps.tekton.pipeline.v1beta1.ParamSpec);

  public abstract A setToParams(int, io.dekorate.deps.tekton.pipeline.v1beta1.ParamSpec);

  public abstract A addToParams(io.dekorate.deps.tekton.pipeline.v1beta1.ParamSpec...);

  public abstract A addAllToParams(java.util.Collection<io.dekorate.deps.tekton.pipeline.v1beta1.ParamSpec>);

  public abstract A removeFromParams(io.dekorate.deps.tekton.pipeline.v1beta1.ParamSpec...);

  public abstract A removeAllFromParams(java.util.Collection<io.dekorate.deps.tekton.pipeline.v1beta1.ParamSpec>);

  public abstract A removeMatchingFromParams(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.tekton.pipeline.v1beta1.ParamSpecBuilder>);

  public abstract java.util.List<io.dekorate.deps.tekton.pipeline.v1beta1.ParamSpec> getParams();

  public abstract java.util.List<io.dekorate.deps.tekton.pipeline.v1beta1.ParamSpec> buildParams();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.ParamSpec buildParam(int);

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.ParamSpec buildFirstParam();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.ParamSpec buildLastParam();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.ParamSpec buildMatchingParam(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.tekton.pipeline.v1beta1.ParamSpecBuilder>);

  public abstract java.lang.Boolean hasMatchingParam(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.tekton.pipeline.v1beta1.ParamSpecBuilder>);

  public abstract A withParams(java.util.List<io.dekorate.deps.tekton.pipeline.v1beta1.ParamSpec>);

  public abstract A withParams(io.dekorate.deps.tekton.pipeline.v1beta1.ParamSpec...);

  public abstract java.lang.Boolean hasParams();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineSpecFluent$ParamsNested<A> addNewParam();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineSpecFluent$ParamsNested<A> addNewParamLike(io.dekorate.deps.tekton.pipeline.v1beta1.ParamSpec);

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineSpecFluent$ParamsNested<A> setNewParamLike(int, io.dekorate.deps.tekton.pipeline.v1beta1.ParamSpec);

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineSpecFluent$ParamsNested<A> editParam(int);

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineSpecFluent$ParamsNested<A> editFirstParam();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineSpecFluent$ParamsNested<A> editLastParam();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineSpecFluent$ParamsNested<A> editMatchingParam(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.tekton.pipeline.v1beta1.ParamSpecBuilder>);

  public abstract A addToResources(int, io.dekorate.deps.tekton.pipeline.v1beta1.PipelineDeclaredResource);

  public abstract A setToResources(int, io.dekorate.deps.tekton.pipeline.v1beta1.PipelineDeclaredResource);

  public abstract A addToResources(io.dekorate.deps.tekton.pipeline.v1beta1.PipelineDeclaredResource...);

  public abstract A addAllToResources(java.util.Collection<io.dekorate.deps.tekton.pipeline.v1beta1.PipelineDeclaredResource>);

  public abstract A removeFromResources(io.dekorate.deps.tekton.pipeline.v1beta1.PipelineDeclaredResource...);

  public abstract A removeAllFromResources(java.util.Collection<io.dekorate.deps.tekton.pipeline.v1beta1.PipelineDeclaredResource>);

  public abstract A removeMatchingFromResources(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.tekton.pipeline.v1beta1.PipelineDeclaredResourceBuilder>);

  public abstract java.util.List<io.dekorate.deps.tekton.pipeline.v1beta1.PipelineDeclaredResource> getResources();

  public abstract java.util.List<io.dekorate.deps.tekton.pipeline.v1beta1.PipelineDeclaredResource> buildResources();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineDeclaredResource buildResource(int);

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineDeclaredResource buildFirstResource();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineDeclaredResource buildLastResource();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineDeclaredResource buildMatchingResource(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.tekton.pipeline.v1beta1.PipelineDeclaredResourceBuilder>);

  public abstract java.lang.Boolean hasMatchingResource(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.tekton.pipeline.v1beta1.PipelineDeclaredResourceBuilder>);

  public abstract A withResources(java.util.List<io.dekorate.deps.tekton.pipeline.v1beta1.PipelineDeclaredResource>);

  public abstract A withResources(io.dekorate.deps.tekton.pipeline.v1beta1.PipelineDeclaredResource...);

  public abstract java.lang.Boolean hasResources();

  public abstract A addNewResource(java.lang.String, java.lang.Boolean, java.lang.String);

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineSpecFluent$ResourcesNested<A> addNewResource();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineSpecFluent$ResourcesNested<A> addNewResourceLike(io.dekorate.deps.tekton.pipeline.v1beta1.PipelineDeclaredResource);

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineSpecFluent$ResourcesNested<A> setNewResourceLike(int, io.dekorate.deps.tekton.pipeline.v1beta1.PipelineDeclaredResource);

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineSpecFluent$ResourcesNested<A> editResource(int);

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineSpecFluent$ResourcesNested<A> editFirstResource();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineSpecFluent$ResourcesNested<A> editLastResource();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineSpecFluent$ResourcesNested<A> editMatchingResource(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.tekton.pipeline.v1beta1.PipelineDeclaredResourceBuilder>);

  public abstract A addToTasks(int, io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTask);

  public abstract A setToTasks(int, io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTask);

  public abstract A addToTasks(io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTask...);

  public abstract A addAllToTasks(java.util.Collection<io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTask>);

  public abstract A removeFromTasks(io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTask...);

  public abstract A removeAllFromTasks(java.util.Collection<io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTask>);

  public abstract A removeMatchingFromTasks(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskBuilder>);

  public abstract java.util.List<io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTask> getTasks();

  public abstract java.util.List<io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTask> buildTasks();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTask buildTask(int);

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTask buildFirstTask();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTask buildLastTask();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTask buildMatchingTask(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskBuilder>);

  public abstract java.lang.Boolean hasMatchingTask(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskBuilder>);

  public abstract A withTasks(java.util.List<io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTask>);

  public abstract A withTasks(io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTask...);

  public abstract java.lang.Boolean hasTasks();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineSpecFluent$TasksNested<A> addNewTask();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineSpecFluent$TasksNested<A> addNewTaskLike(io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTask);

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineSpecFluent$TasksNested<A> setNewTaskLike(int, io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTask);

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineSpecFluent$TasksNested<A> editTask(int);

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineSpecFluent$TasksNested<A> editFirstTask();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineSpecFluent$TasksNested<A> editLastTask();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineSpecFluent$TasksNested<A> editMatchingTask(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.tekton.pipeline.v1beta1.PipelineTaskBuilder>);

  public abstract A addToWorkspaces(int, io.dekorate.deps.tekton.pipeline.v1beta1.WorkspacePipelineDeclaration);

  public abstract A setToWorkspaces(int, io.dekorate.deps.tekton.pipeline.v1beta1.WorkspacePipelineDeclaration);

  public abstract A addToWorkspaces(io.dekorate.deps.tekton.pipeline.v1beta1.WorkspacePipelineDeclaration...);

  public abstract A addAllToWorkspaces(java.util.Collection<io.dekorate.deps.tekton.pipeline.v1beta1.WorkspacePipelineDeclaration>);

  public abstract A removeFromWorkspaces(io.dekorate.deps.tekton.pipeline.v1beta1.WorkspacePipelineDeclaration...);

  public abstract A removeAllFromWorkspaces(java.util.Collection<io.dekorate.deps.tekton.pipeline.v1beta1.WorkspacePipelineDeclaration>);

  public abstract A removeMatchingFromWorkspaces(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.tekton.pipeline.v1beta1.WorkspacePipelineDeclarationBuilder>);

  public abstract java.util.List<io.dekorate.deps.tekton.pipeline.v1beta1.WorkspacePipelineDeclaration> getWorkspaces();

  public abstract java.util.List<io.dekorate.deps.tekton.pipeline.v1beta1.WorkspacePipelineDeclaration> buildWorkspaces();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.WorkspacePipelineDeclaration buildWorkspace(int);

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.WorkspacePipelineDeclaration buildFirstWorkspace();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.WorkspacePipelineDeclaration buildLastWorkspace();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.WorkspacePipelineDeclaration buildMatchingWorkspace(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.tekton.pipeline.v1beta1.WorkspacePipelineDeclarationBuilder>);

  public abstract java.lang.Boolean hasMatchingWorkspace(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.tekton.pipeline.v1beta1.WorkspacePipelineDeclarationBuilder>);

  public abstract A withWorkspaces(java.util.List<io.dekorate.deps.tekton.pipeline.v1beta1.WorkspacePipelineDeclaration>);

  public abstract A withWorkspaces(io.dekorate.deps.tekton.pipeline.v1beta1.WorkspacePipelineDeclaration...);

  public abstract java.lang.Boolean hasWorkspaces();

  public abstract A addNewWorkspace(java.lang.String, java.lang.String);

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineSpecFluent$WorkspacesNested<A> addNewWorkspace();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineSpecFluent$WorkspacesNested<A> addNewWorkspaceLike(io.dekorate.deps.tekton.pipeline.v1beta1.WorkspacePipelineDeclaration);

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineSpecFluent$WorkspacesNested<A> setNewWorkspaceLike(int, io.dekorate.deps.tekton.pipeline.v1beta1.WorkspacePipelineDeclaration);

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineSpecFluent$WorkspacesNested<A> editWorkspace(int);

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineSpecFluent$WorkspacesNested<A> editFirstWorkspace();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineSpecFluent$WorkspacesNested<A> editLastWorkspace();

  public abstract io.dekorate.deps.tekton.pipeline.v1beta1.PipelineSpecFluent$WorkspacesNested<A> editMatchingWorkspace(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.tekton.pipeline.v1beta1.WorkspacePipelineDeclarationBuilder>);
}
