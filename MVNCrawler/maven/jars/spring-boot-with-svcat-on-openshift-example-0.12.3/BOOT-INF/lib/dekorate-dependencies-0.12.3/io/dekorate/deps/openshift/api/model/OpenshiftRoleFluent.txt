Compiled from "OpenshiftRoleFluent.java"
public interface io.dekorate.deps.openshift.api.model.OpenshiftRoleFluent<A extends io.dekorate.deps.openshift.api.model.OpenshiftRoleFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getApiVersion();

  public abstract A withApiVersion(java.lang.String);

  public abstract java.lang.Boolean hasApiVersion();

  public abstract A withNewApiVersion(java.lang.String);

  public abstract A withNewApiVersion(java.lang.StringBuilder);

  public abstract A withNewApiVersion(java.lang.StringBuffer);

  public abstract java.lang.String getKind();

  public abstract A withKind(java.lang.String);

  public abstract java.lang.Boolean hasKind();

  public abstract A withNewKind(java.lang.String);

  public abstract A withNewKind(java.lang.StringBuilder);

  public abstract A withNewKind(java.lang.StringBuffer);

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectMeta getMetadata();

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectMeta buildMetadata();

  public abstract A withMetadata(io.dekorate.deps.kubernetes.api.model.ObjectMeta);

  public abstract java.lang.Boolean hasMetadata();

  public abstract io.dekorate.deps.openshift.api.model.OpenshiftRoleFluent$MetadataNested<A> withNewMetadata();

  public abstract io.dekorate.deps.openshift.api.model.OpenshiftRoleFluent$MetadataNested<A> withNewMetadataLike(io.dekorate.deps.kubernetes.api.model.ObjectMeta);

  public abstract io.dekorate.deps.openshift.api.model.OpenshiftRoleFluent$MetadataNested<A> editMetadata();

  public abstract io.dekorate.deps.openshift.api.model.OpenshiftRoleFluent$MetadataNested<A> editOrNewMetadata();

  public abstract io.dekorate.deps.openshift.api.model.OpenshiftRoleFluent$MetadataNested<A> editOrNewMetadataLike(io.dekorate.deps.kubernetes.api.model.ObjectMeta);

  public abstract A addToRules(int, io.dekorate.deps.openshift.api.model.PolicyRule);

  public abstract A setToRules(int, io.dekorate.deps.openshift.api.model.PolicyRule);

  public abstract A addToRules(io.dekorate.deps.openshift.api.model.PolicyRule...);

  public abstract A addAllToRules(java.util.Collection<io.dekorate.deps.openshift.api.model.PolicyRule>);

  public abstract A removeFromRules(io.dekorate.deps.openshift.api.model.PolicyRule...);

  public abstract A removeAllFromRules(java.util.Collection<io.dekorate.deps.openshift.api.model.PolicyRule>);

  public abstract A removeMatchingFromRules(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.openshift.api.model.PolicyRuleBuilder>);

  public abstract java.util.List<io.dekorate.deps.openshift.api.model.PolicyRule> getRules();

  public abstract java.util.List<io.dekorate.deps.openshift.api.model.PolicyRule> buildRules();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRule buildRule(int);

  public abstract io.dekorate.deps.openshift.api.model.PolicyRule buildFirstRule();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRule buildLastRule();

  public abstract io.dekorate.deps.openshift.api.model.PolicyRule buildMatchingRule(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.openshift.api.model.PolicyRuleBuilder>);

  public abstract java.lang.Boolean hasMatchingRule(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.openshift.api.model.PolicyRuleBuilder>);

  public abstract A withRules(java.util.List<io.dekorate.deps.openshift.api.model.PolicyRule>);

  public abstract A withRules(io.dekorate.deps.openshift.api.model.PolicyRule...);

  public abstract java.lang.Boolean hasRules();

  public abstract io.dekorate.deps.openshift.api.model.OpenshiftRoleFluent$RulesNested<A> addNewRule();

  public abstract io.dekorate.deps.openshift.api.model.OpenshiftRoleFluent$RulesNested<A> addNewRuleLike(io.dekorate.deps.openshift.api.model.PolicyRule);

  public abstract io.dekorate.deps.openshift.api.model.OpenshiftRoleFluent$RulesNested<A> setNewRuleLike(int, io.dekorate.deps.openshift.api.model.PolicyRule);

  public abstract io.dekorate.deps.openshift.api.model.OpenshiftRoleFluent$RulesNested<A> editRule(int);

  public abstract io.dekorate.deps.openshift.api.model.OpenshiftRoleFluent$RulesNested<A> editFirstRule();

  public abstract io.dekorate.deps.openshift.api.model.OpenshiftRoleFluent$RulesNested<A> editLastRule();

  public abstract io.dekorate.deps.openshift.api.model.OpenshiftRoleFluent$RulesNested<A> editMatchingRule(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.openshift.api.model.PolicyRuleBuilder>);
}
