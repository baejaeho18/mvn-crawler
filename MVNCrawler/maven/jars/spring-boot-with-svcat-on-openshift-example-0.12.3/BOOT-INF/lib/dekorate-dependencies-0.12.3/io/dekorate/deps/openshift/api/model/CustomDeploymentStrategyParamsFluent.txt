Compiled from "CustomDeploymentStrategyParamsFluent.java"
public interface io.dekorate.deps.openshift.api.model.CustomDeploymentStrategyParamsFluent<A extends io.dekorate.deps.openshift.api.model.CustomDeploymentStrategyParamsFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract A addToCommand(int, java.lang.String);

  public abstract A setToCommand(int, java.lang.String);

  public abstract A addToCommand(java.lang.String...);

  public abstract A addAllToCommand(java.util.Collection<java.lang.String>);

  public abstract A removeFromCommand(java.lang.String...);

  public abstract A removeAllFromCommand(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getCommand();

  public abstract java.lang.String getCommand(int);

  public abstract java.lang.String getFirstCommand();

  public abstract java.lang.String getLastCommand();

  public abstract java.lang.String getMatchingCommand(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingCommand(io.dekorate.deps.kubernetes.api.builder.Predicate<java.lang.String>);

  public abstract A withCommand(java.util.List<java.lang.String>);

  public abstract A withCommand(java.lang.String...);

  public abstract java.lang.Boolean hasCommand();

  public abstract A addNewCommand(java.lang.String);

  public abstract A addNewCommand(java.lang.StringBuilder);

  public abstract A addNewCommand(java.lang.StringBuffer);

  public abstract A addToEnvironment(int, io.dekorate.deps.kubernetes.api.model.EnvVar);

  public abstract A setToEnvironment(int, io.dekorate.deps.kubernetes.api.model.EnvVar);

  public abstract A addToEnvironment(io.dekorate.deps.kubernetes.api.model.EnvVar...);

  public abstract A addAllToEnvironment(java.util.Collection<io.dekorate.deps.kubernetes.api.model.EnvVar>);

  public abstract A removeFromEnvironment(io.dekorate.deps.kubernetes.api.model.EnvVar...);

  public abstract A removeAllFromEnvironment(java.util.Collection<io.dekorate.deps.kubernetes.api.model.EnvVar>);

  public abstract A removeMatchingFromEnvironment(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.EnvVarBuilder>);

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.EnvVar> getEnvironment();

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.EnvVar> buildEnvironment();

  public abstract io.dekorate.deps.kubernetes.api.model.EnvVar buildEnvironment(int);

  public abstract io.dekorate.deps.kubernetes.api.model.EnvVar buildFirstEnvironment();

  public abstract io.dekorate.deps.kubernetes.api.model.EnvVar buildLastEnvironment();

  public abstract io.dekorate.deps.kubernetes.api.model.EnvVar buildMatchingEnvironment(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.EnvVarBuilder>);

  public abstract java.lang.Boolean hasMatchingEnvironment(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.EnvVarBuilder>);

  public abstract A withEnvironment(java.util.List<io.dekorate.deps.kubernetes.api.model.EnvVar>);

  public abstract A withEnvironment(io.dekorate.deps.kubernetes.api.model.EnvVar...);

  public abstract java.lang.Boolean hasEnvironment();

  public abstract io.dekorate.deps.openshift.api.model.CustomDeploymentStrategyParamsFluent$EnvironmentNested<A> addNewEnvironment();

  public abstract io.dekorate.deps.openshift.api.model.CustomDeploymentStrategyParamsFluent$EnvironmentNested<A> addNewEnvironmentLike(io.dekorate.deps.kubernetes.api.model.EnvVar);

  public abstract io.dekorate.deps.openshift.api.model.CustomDeploymentStrategyParamsFluent$EnvironmentNested<A> setNewEnvironmentLike(int, io.dekorate.deps.kubernetes.api.model.EnvVar);

  public abstract io.dekorate.deps.openshift.api.model.CustomDeploymentStrategyParamsFluent$EnvironmentNested<A> editEnvironment(int);

  public abstract io.dekorate.deps.openshift.api.model.CustomDeploymentStrategyParamsFluent$EnvironmentNested<A> editFirstEnvironment();

  public abstract io.dekorate.deps.openshift.api.model.CustomDeploymentStrategyParamsFluent$EnvironmentNested<A> editLastEnvironment();

  public abstract io.dekorate.deps.openshift.api.model.CustomDeploymentStrategyParamsFluent$EnvironmentNested<A> editMatchingEnvironment(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.EnvVarBuilder>);

  public abstract java.lang.String getImage();

  public abstract A withImage(java.lang.String);

  public abstract java.lang.Boolean hasImage();

  public abstract A withNewImage(java.lang.String);

  public abstract A withNewImage(java.lang.StringBuilder);

  public abstract A withNewImage(java.lang.StringBuffer);
}
