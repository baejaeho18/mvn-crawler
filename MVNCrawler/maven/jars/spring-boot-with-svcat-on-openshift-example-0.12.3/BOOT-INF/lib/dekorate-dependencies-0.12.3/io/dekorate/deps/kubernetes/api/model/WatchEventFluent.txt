Compiled from "WatchEventFluent.java"
public interface io.dekorate.deps.kubernetes.api.model.WatchEventFluent<A extends io.dekorate.deps.kubernetes.api.model.WatchEventFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract io.dekorate.deps.kubernetes.api.model.KubernetesResource getObject();

  public abstract io.dekorate.deps.kubernetes.api.model.KubernetesResource buildObject();

  public abstract A withObject(io.dekorate.deps.kubernetes.api.model.KubernetesResource);

  public abstract java.lang.Boolean hasObject();

  public abstract A withDeploymentListObject(io.dekorate.deps.kubernetes.api.model.apps.DeploymentList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DeploymentListObjectNested<A> withNewDeploymentListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DeploymentListObjectNested<A> withNewDeploymentListObjectLike(io.dekorate.deps.kubernetes.api.model.apps.DeploymentList);

  public abstract A withPatchObject(io.dekorate.deps.kubernetes.api.model.Patch);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PatchObjectNested<A> withNewPatchObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PatchObjectNested<A> withNewPatchObjectLike(io.dekorate.deps.kubernetes.api.model.Patch);

  public abstract A withScopeRestrictionObject(io.dekorate.deps.openshift.api.model.ScopeRestriction);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ScopeRestrictionObjectNested<A> withNewScopeRestrictionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ScopeRestrictionObjectNested<A> withNewScopeRestrictionObjectLike(io.dekorate.deps.openshift.api.model.ScopeRestriction);

  public abstract A withPodsMetricSourceObject(io.dekorate.deps.kubernetes.api.model.PodsMetricSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodsMetricSourceObjectNested<A> withNewPodsMetricSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodsMetricSourceObjectNested<A> withNewPodsMetricSourceObjectLike(io.dekorate.deps.kubernetes.api.model.PodsMetricSource);

  public abstract A withStepInfoObject(io.dekorate.deps.openshift.api.model.StepInfo);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$StepInfoObjectNested<A> withNewStepInfoObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$StepInfoObjectNested<A> withNewStepInfoObjectLike(io.dekorate.deps.openshift.api.model.StepInfo);

  public abstract A withNewStepInfoObject(java.lang.Long, java.lang.String, java.lang.String);

  public abstract A withAPIGroupListObject(io.dekorate.deps.kubernetes.api.model.APIGroupList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$APIGroupListObjectNested<A> withNewAPIGroupListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$APIGroupListObjectNested<A> withNewAPIGroupListObjectLike(io.dekorate.deps.kubernetes.api.model.APIGroupList);

  public abstract A withStatefulSetStatusObject(io.dekorate.deps.kubernetes.api.model.apps.StatefulSetStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$StatefulSetStatusObjectNested<A> withNewStatefulSetStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$StatefulSetStatusObjectNested<A> withNewStatefulSetStatusObjectLike(io.dekorate.deps.kubernetes.api.model.apps.StatefulSetStatus);

  public abstract A withPodTemplateSpecObject(io.dekorate.deps.kubernetes.api.model.PodTemplateSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodTemplateSpecObjectNested<A> withNewPodTemplateSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodTemplateSpecObjectNested<A> withNewPodTemplateSpecObjectLike(io.dekorate.deps.kubernetes.api.model.PodTemplateSpec);

  public abstract A withAuthInfoObject(io.dekorate.deps.kubernetes.api.model.AuthInfo);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$AuthInfoObjectNested<A> withNewAuthInfoObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$AuthInfoObjectNested<A> withNewAuthInfoObjectLike(io.dekorate.deps.kubernetes.api.model.AuthInfo);

  public abstract A withLeaseSpecObject(io.dekorate.deps.kubernetes.api.model.coordination.v1.LeaseSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$LeaseSpecObjectNested<A> withNewLeaseSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$LeaseSpecObjectNested<A> withNewLeaseSpecObjectLike(io.dekorate.deps.kubernetes.api.model.coordination.v1.LeaseSpec);

  public abstract A withConfigMapKeySelectorObject(io.dekorate.deps.kubernetes.api.model.ConfigMapKeySelector);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ConfigMapKeySelectorObjectNested<A> withNewConfigMapKeySelectorObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ConfigMapKeySelectorObjectNested<A> withNewConfigMapKeySelectorObjectLike(io.dekorate.deps.kubernetes.api.model.ConfigMapKeySelector);

  public abstract A withNewConfigMapKeySelectorObject(java.lang.String, java.lang.String, java.lang.Boolean);

  public abstract A withRuleWithOperationsObject(io.dekorate.deps.kubernetes.api.model.admissionregistration.RuleWithOperations);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RuleWithOperationsObjectNested<A> withNewRuleWithOperationsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RuleWithOperationsObjectNested<A> withNewRuleWithOperationsObjectLike(io.dekorate.deps.kubernetes.api.model.admissionregistration.RuleWithOperations);

  public abstract A withHostPathVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.HostPathVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$HostPathVolumeSourceObjectNested<A> withNewHostPathVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$HostPathVolumeSourceObjectNested<A> withNewHostPathVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.HostPathVolumeSource);

  public abstract A withNewHostPathVolumeSourceObject(java.lang.String, java.lang.String);

  public abstract A withNamedContextObject(io.dekorate.deps.kubernetes.api.model.NamedContext);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NamedContextObjectNested<A> withNewNamedContextObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NamedContextObjectNested<A> withNewNamedContextObjectLike(io.dekorate.deps.kubernetes.api.model.NamedContext);

  public abstract A withConfigObject(io.dekorate.deps.kubernetes.api.model.Config);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ConfigObjectNested<A> withNewConfigObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ConfigObjectNested<A> withNewConfigObjectLike(io.dekorate.deps.kubernetes.api.model.Config);

  public abstract A withPodPresetSpecObject(io.dekorate.deps.kubernetes.api.model.settings.PodPresetSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodPresetSpecObjectNested<A> withNewPodPresetSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodPresetSpecObjectNested<A> withNewPodPresetSpecObjectLike(io.dekorate.deps.kubernetes.api.model.settings.PodPresetSpec);

  public abstract A withAffinityObject(io.dekorate.deps.kubernetes.api.model.Affinity);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$AffinityObjectNested<A> withNewAffinityObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$AffinityObjectNested<A> withNewAffinityObjectLike(io.dekorate.deps.kubernetes.api.model.Affinity);

  public abstract A withResourceAttributesObject(io.dekorate.deps.kubernetes.api.model.authorization.ResourceAttributes);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ResourceAttributesObjectNested<A> withNewResourceAttributesObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ResourceAttributesObjectNested<A> withNewResourceAttributesObjectLike(io.dekorate.deps.kubernetes.api.model.authorization.ResourceAttributes);

  public abstract A withSubjectAccessReviewSpecObject(io.dekorate.deps.kubernetes.api.model.authorization.SubjectAccessReviewSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SubjectAccessReviewSpecObjectNested<A> withNewSubjectAccessReviewSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SubjectAccessReviewSpecObjectNested<A> withNewSubjectAccessReviewSpecObjectLike(io.dekorate.deps.kubernetes.api.model.authorization.SubjectAccessReviewSpec);

  public abstract A withSelfSubjectRulesReviewSpecObject(io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectRulesReviewSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SelfSubjectRulesReviewSpecObjectNested<A> withNewSelfSubjectRulesReviewSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SelfSubjectRulesReviewSpecObjectNested<A> withNewSelfSubjectRulesReviewSpecObjectLike(io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectRulesReviewSpec);

  public abstract A withNewSelfSubjectRulesReviewSpecObject(java.lang.String);

  public abstract A withValidatingWebhookConfigurationObject(io.dekorate.deps.kubernetes.api.model.admissionregistration.ValidatingWebhookConfiguration);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ValidatingWebhookConfigurationObjectNested<A> withNewValidatingWebhookConfigurationObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ValidatingWebhookConfigurationObjectNested<A> withNewValidatingWebhookConfigurationObjectLike(io.dekorate.deps.kubernetes.api.model.admissionregistration.ValidatingWebhookConfiguration);

  public abstract A withPodSecurityPolicySpecObject(io.dekorate.deps.kubernetes.api.model.policy.PodSecurityPolicySpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodSecurityPolicySpecObjectNested<A> withNewPodSecurityPolicySpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodSecurityPolicySpecObjectNested<A> withNewPodSecurityPolicySpecObjectLike(io.dekorate.deps.kubernetes.api.model.policy.PodSecurityPolicySpec);

  public abstract A withPolicyRuleObject(io.dekorate.deps.openshift.api.model.PolicyRule);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ModelPolicyRuleObjectNested<A> withNewModelPolicyRuleObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ModelPolicyRuleObjectNested<A> withNewPolicyRuleObjectLike(io.dekorate.deps.openshift.api.model.PolicyRule);

  public abstract A withNetworkPolicyEgressRuleObject(io.dekorate.deps.kubernetes.api.model.networking.NetworkPolicyEgressRule);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NetworkPolicyEgressRuleObjectNested<A> withNewNetworkPolicyEgressRuleObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NetworkPolicyEgressRuleObjectNested<A> withNewNetworkPolicyEgressRuleObjectLike(io.dekorate.deps.kubernetes.api.model.networking.NetworkPolicyEgressRule);

  public abstract A withIPBlockObject(io.dekorate.deps.kubernetes.api.model.networking.IPBlock);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$IPBlockObjectNested<A> withNewIPBlockObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$IPBlockObjectNested<A> withNewIPBlockObjectLike(io.dekorate.deps.kubernetes.api.model.networking.IPBlock);

  public abstract A withDeploymentTriggerPolicyObject(io.dekorate.deps.openshift.api.model.DeploymentTriggerPolicy);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DeploymentTriggerPolicyObjectNested<A> withNewDeploymentTriggerPolicyObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DeploymentTriggerPolicyObjectNested<A> withNewDeploymentTriggerPolicyObjectLike(io.dekorate.deps.openshift.api.model.DeploymentTriggerPolicy);

  public abstract A withBuildStrategyObject(io.dekorate.deps.openshift.api.model.BuildStrategy);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildStrategyObjectNested<A> withNewBuildStrategyObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildStrategyObjectNested<A> withNewBuildStrategyObjectLike(io.dekorate.deps.openshift.api.model.BuildStrategy);

  public abstract A withServiceReferenceObject(io.dekorate.deps.kubernetes.api.model.admissionregistration.ServiceReference);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ServiceReferenceObjectNested<A> withNewServiceReferenceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ServiceReferenceObjectNested<A> withNewServiceReferenceObjectLike(io.dekorate.deps.kubernetes.api.model.admissionregistration.ServiceReference);

  public abstract A withNewServiceReferenceObject(java.lang.String, java.lang.String, java.lang.String, java.lang.Integer);

  public abstract A withStatefulSetSpecObject(io.dekorate.deps.kubernetes.api.model.apps.StatefulSetSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$StatefulSetSpecObjectNested<A> withNewStatefulSetSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$StatefulSetSpecObjectNested<A> withNewStatefulSetSpecObjectLike(io.dekorate.deps.kubernetes.api.model.apps.StatefulSetSpec);

  public abstract A withStorageClassObject(io.dekorate.deps.kubernetes.api.model.storage.StorageClass);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$StorageClassObjectNested<A> withNewStorageClassObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$StorageClassObjectNested<A> withNewStorageClassObjectLike(io.dekorate.deps.kubernetes.api.model.storage.StorageClass);

  public abstract A withCustomBuildStrategyObject(io.dekorate.deps.openshift.api.model.CustomBuildStrategy);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CustomBuildStrategyObjectNested<A> withNewCustomBuildStrategyObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CustomBuildStrategyObjectNested<A> withNewCustomBuildStrategyObjectLike(io.dekorate.deps.openshift.api.model.CustomBuildStrategy);

  public abstract A withHorizontalPodAutoscalerConditionObject(io.dekorate.deps.kubernetes.api.model.HorizontalPodAutoscalerCondition);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$HorizontalPodAutoscalerConditionObjectNested<A> withNewHorizontalPodAutoscalerConditionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$HorizontalPodAutoscalerConditionObjectNested<A> withNewHorizontalPodAutoscalerConditionObjectLike(io.dekorate.deps.kubernetes.api.model.HorizontalPodAutoscalerCondition);

  public abstract A withNewHorizontalPodAutoscalerConditionObject(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract A withAzureFileVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.AzureFileVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$AzureFileVolumeSourceObjectNested<A> withNewAzureFileVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$AzureFileVolumeSourceObjectNested<A> withNewAzureFileVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.AzureFileVolumeSource);

  public abstract A withNewAzureFileVolumeSourceObject(java.lang.Boolean, java.lang.String, java.lang.String);

  public abstract A withClusterRoleBindingObject(io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBinding);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ClusterRoleBindingObjectNested<A> withNewClusterRoleBindingObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ClusterRoleBindingObjectNested<A> withNewClusterRoleBindingObjectLike(io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBinding);

  public abstract A withEnvVarObject(io.dekorate.deps.kubernetes.api.model.EnvVar);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EnvVarObjectNested<A> withNewEnvVarObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EnvVarObjectNested<A> withNewEnvVarObjectLike(io.dekorate.deps.kubernetes.api.model.EnvVar);

  public abstract A withSubjectAccessReviewResponseObject(io.dekorate.deps.openshift.api.model.SubjectAccessReviewResponse);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SubjectAccessReviewResponseObjectNested<A> withNewSubjectAccessReviewResponseObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SubjectAccessReviewResponseObjectNested<A> withNewSubjectAccessReviewResponseObjectLike(io.dekorate.deps.openshift.api.model.SubjectAccessReviewResponse);

  public abstract A withClusterVersionStatusObject(io.dekorate.deps.openshift.api.model.ClusterVersionStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ClusterVersionStatusObjectNested<A> withNewClusterVersionStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ClusterVersionStatusObjectNested<A> withNewClusterVersionStatusObjectLike(io.dekorate.deps.openshift.api.model.ClusterVersionStatus);

  public abstract A withAttachedVolumeObject(io.dekorate.deps.kubernetes.api.model.AttachedVolume);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$AttachedVolumeObjectNested<A> withNewAttachedVolumeObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$AttachedVolumeObjectNested<A> withNewAttachedVolumeObjectLike(io.dekorate.deps.kubernetes.api.model.AttachedVolume);

  public abstract A withNewAttachedVolumeObject(java.lang.String, java.lang.String);

  public abstract A withLoadBalancerIngressObject(io.dekorate.deps.kubernetes.api.model.LoadBalancerIngress);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$LoadBalancerIngressObjectNested<A> withNewLoadBalancerIngressObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$LoadBalancerIngressObjectNested<A> withNewLoadBalancerIngressObjectLike(io.dekorate.deps.kubernetes.api.model.LoadBalancerIngress);

  public abstract A withNewLoadBalancerIngressObject(java.lang.String, java.lang.String);

  public abstract A withLocalObjectReference(io.dekorate.deps.kubernetes.api.model.LocalObjectReference);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$LocalObjectReferenceNested<A> withNewLocalObjectReference();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$LocalObjectReferenceNested<A> withNewLocalObjectReferenceLike(io.dekorate.deps.kubernetes.api.model.LocalObjectReference);

  public abstract A withNewLocalObjectReference(java.lang.String);

  public abstract A withHPAScalingRulesObject(io.dekorate.deps.kubernetes.api.model.HPAScalingRules);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$HPAScalingRulesObjectNested<A> withNewHPAScalingRulesObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$HPAScalingRulesObjectNested<A> withNewHPAScalingRulesObjectLike(io.dekorate.deps.kubernetes.api.model.HPAScalingRules);

  public abstract A withNamedAuthInfoObject(io.dekorate.deps.kubernetes.api.model.NamedAuthInfo);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NamedAuthInfoObjectNested<A> withNewNamedAuthInfoObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NamedAuthInfoObjectNested<A> withNewNamedAuthInfoObjectLike(io.dekorate.deps.kubernetes.api.model.NamedAuthInfo);

  public abstract A withJobConditionObject(io.dekorate.deps.kubernetes.api.model.batch.JobCondition);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$JobConditionObjectNested<A> withNewJobConditionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$JobConditionObjectNested<A> withNewJobConditionObjectLike(io.dekorate.deps.kubernetes.api.model.batch.JobCondition);

  public abstract A withPodSpecObject(io.dekorate.deps.kubernetes.api.model.PodSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodSpecObjectNested<A> withNewPodSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodSpecObjectNested<A> withNewPodSpecObjectLike(io.dekorate.deps.kubernetes.api.model.PodSpec);

  public abstract A withCSINodeObject(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSINode);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CSINodeObjectNested<A> withNewCSINodeObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CSINodeObjectNested<A> withNewCSINodeObjectLike(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSINode);

  public abstract A withServerAddressByClientCIDRObject(io.dekorate.deps.kubernetes.api.model.ServerAddressByClientCIDR);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ServerAddressByClientCIDRObjectNested<A> withNewServerAddressByClientCIDRObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ServerAddressByClientCIDRObjectNested<A> withNewServerAddressByClientCIDRObjectLike(io.dekorate.deps.kubernetes.api.model.ServerAddressByClientCIDR);

  public abstract A withNewServerAddressByClientCIDRObject(java.lang.String, java.lang.String);

  public abstract A withTagReferencePolicyObject(io.dekorate.deps.openshift.api.model.TagReferencePolicy);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TagReferencePolicyObjectNested<A> withNewTagReferencePolicyObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TagReferencePolicyObjectNested<A> withNewTagReferencePolicyObjectLike(io.dekorate.deps.openshift.api.model.TagReferencePolicy);

  public abstract A withNewTagReferencePolicyObject(java.lang.String);

  public abstract A withPreconditionsObject(io.dekorate.deps.kubernetes.api.model.Preconditions);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PreconditionsObjectNested<A> withNewPreconditionsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PreconditionsObjectNested<A> withNewPreconditionsObjectLike(io.dekorate.deps.kubernetes.api.model.Preconditions);

  public abstract A withNewPreconditionsObject(java.lang.String, java.lang.String);

  public abstract A withOpenshiftRoleBindingObject(io.dekorate.deps.openshift.api.model.OpenshiftRoleBinding);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OpenshiftRoleBindingObjectNested<A> withNewOpenshiftRoleBindingObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OpenshiftRoleBindingObjectNested<A> withNewOpenshiftRoleBindingObjectLike(io.dekorate.deps.openshift.api.model.OpenshiftRoleBinding);

  public abstract A withCephFSVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.CephFSVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CephFSVolumeSourceObjectNested<A> withNewCephFSVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CephFSVolumeSourceObjectNested<A> withNewCephFSVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.CephFSVolumeSource);

  public abstract A withEphemeralContainerObject(io.dekorate.deps.kubernetes.api.model.EphemeralContainer);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EphemeralContainerObjectNested<A> withNewEphemeralContainerObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EphemeralContainerObjectNested<A> withNewEphemeralContainerObjectLike(io.dekorate.deps.kubernetes.api.model.EphemeralContainer);

  public abstract A withNodeConditionObject(io.dekorate.deps.kubernetes.api.model.NodeCondition);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NodeConditionObjectNested<A> withNewNodeConditionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NodeConditionObjectNested<A> withNewNodeConditionObjectLike(io.dekorate.deps.kubernetes.api.model.NodeCondition);

  public abstract A withEndpointSubsetObject(io.dekorate.deps.kubernetes.api.model.EndpointSubset);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EndpointSubsetObjectNested<A> withNewEndpointSubsetObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EndpointSubsetObjectNested<A> withNewEndpointSubsetObjectLike(io.dekorate.deps.kubernetes.api.model.EndpointSubset);

  public abstract A withLocalVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.LocalVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$LocalVolumeSourceObjectNested<A> withNewLocalVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$LocalVolumeSourceObjectNested<A> withNewLocalVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.LocalVolumeSource);

  public abstract A withNewLocalVolumeSourceObject(java.lang.String, java.lang.String);

  public abstract A withCertificateSigningRequestListObject(io.dekorate.deps.kubernetes.api.model.certificates.CertificateSigningRequestList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CertificateSigningRequestListObjectNested<A> withNewCertificateSigningRequestListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CertificateSigningRequestListObjectNested<A> withNewCertificateSigningRequestListObjectLike(io.dekorate.deps.kubernetes.api.model.certificates.CertificateSigningRequestList);

  public abstract A withDaemonSetStatusObject(io.dekorate.deps.kubernetes.api.model.apps.DaemonSetStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DaemonSetStatusObjectNested<A> withNewDaemonSetStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DaemonSetStatusObjectNested<A> withNewDaemonSetStatusObjectLike(io.dekorate.deps.kubernetes.api.model.apps.DaemonSetStatus);

  public abstract A withPodDisruptionBudgetObject(io.dekorate.deps.kubernetes.api.model.policy.PodDisruptionBudget);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodDisruptionBudgetObjectNested<A> withNewPodDisruptionBudgetObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodDisruptionBudgetObjectNested<A> withNewPodDisruptionBudgetObjectLike(io.dekorate.deps.kubernetes.api.model.policy.PodDisruptionBudget);

  public abstract A withPatchOptionsObject(io.dekorate.deps.kubernetes.api.model.PatchOptions);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PatchOptionsObjectNested<A> withNewPatchOptionsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PatchOptionsObjectNested<A> withNewPatchOptionsObjectLike(io.dekorate.deps.kubernetes.api.model.PatchOptions);

  public abstract A withObjectMetricSourceObject(io.dekorate.deps.kubernetes.api.model.ObjectMetricSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ObjectMetricSourceObjectNested<A> withNewObjectMetricSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ObjectMetricSourceObjectNested<A> withNewObjectMetricSourceObjectLike(io.dekorate.deps.kubernetes.api.model.ObjectMetricSource);

  public abstract A withBuildStatusOutputObject(io.dekorate.deps.openshift.api.model.BuildStatusOutput);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildStatusOutputObjectNested<A> withNewBuildStatusOutputObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildStatusOutputObjectNested<A> withNewBuildStatusOutputObjectLike(io.dekorate.deps.openshift.api.model.BuildStatusOutput);

  public abstract A withNetworkPolicyPeerObject(io.dekorate.deps.kubernetes.api.model.networking.NetworkPolicyPeer);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NetworkPolicyPeerObjectNested<A> withNewNetworkPolicyPeerObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NetworkPolicyPeerObjectNested<A> withNewNetworkPolicyPeerObjectLike(io.dekorate.deps.kubernetes.api.model.networking.NetworkPolicyPeer);

  public abstract A withConfigMapNodeConfigSourceObject(io.dekorate.deps.kubernetes.api.model.ConfigMapNodeConfigSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ConfigMapNodeConfigSourceObjectNested<A> withNewConfigMapNodeConfigSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ConfigMapNodeConfigSourceObjectNested<A> withNewConfigMapNodeConfigSourceObjectLike(io.dekorate.deps.kubernetes.api.model.ConfigMapNodeConfigSource);

  public abstract A withNewConfigMapNodeConfigSourceObject(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract A withHTTPGetActionObject(io.dekorate.deps.kubernetes.api.model.HTTPGetAction);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$HTTPGetActionObjectNested<A> withNewHTTPGetActionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$HTTPGetActionObjectNested<A> withNewHTTPGetActionObjectLike(io.dekorate.deps.kubernetes.api.model.HTTPGetAction);

  public abstract A withOpenshiftClusterRoleScopeRestrictionObject(io.dekorate.deps.openshift.api.model.OpenshiftClusterRoleScopeRestriction);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OpenshiftClusterRoleScopeRestrictionObjectNested<A> withNewOpenshiftClusterRoleScopeRestrictionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OpenshiftClusterRoleScopeRestrictionObjectNested<A> withNewOpenshiftClusterRoleScopeRestrictionObjectLike(io.dekorate.deps.openshift.api.model.OpenshiftClusterRoleScopeRestriction);

  public abstract A withGitLabWebHookCauseObject(io.dekorate.deps.openshift.api.model.GitLabWebHookCause);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$GitLabWebHookCauseObjectNested<A> withNewGitLabWebHookCauseObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$GitLabWebHookCauseObjectNested<A> withNewGitLabWebHookCauseObjectLike(io.dekorate.deps.openshift.api.model.GitLabWebHookCause);

  public abstract A withEndpointConditionsObject(io.dekorate.deps.kubernetes.api.model.discovery.EndpointConditions);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EndpointConditionsObjectNested<A> withNewEndpointConditionsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EndpointConditionsObjectNested<A> withNewEndpointConditionsObjectLike(io.dekorate.deps.kubernetes.api.model.discovery.EndpointConditions);

  public abstract A withNewEndpointConditionsObject(java.lang.Boolean);

  public abstract A withSecretBuildSourceObject(io.dekorate.deps.openshift.api.model.SecretBuildSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SecretBuildSourceObjectNested<A> withNewSecretBuildSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SecretBuildSourceObjectNested<A> withNewSecretBuildSourceObjectLike(io.dekorate.deps.openshift.api.model.SecretBuildSource);

  public abstract A withOpenshiftClusterRoleBindingObject(io.dekorate.deps.openshift.api.model.OpenshiftClusterRoleBinding);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OpenshiftClusterRoleBindingObjectNested<A> withNewOpenshiftClusterRoleBindingObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OpenshiftClusterRoleBindingObjectNested<A> withNewOpenshiftClusterRoleBindingObjectLike(io.dekorate.deps.openshift.api.model.OpenshiftClusterRoleBinding);

  public abstract A withNetworkPolicyObject(io.dekorate.deps.kubernetes.api.model.networking.NetworkPolicy);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NetworkPolicyObjectNested<A> withNewNetworkPolicyObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NetworkPolicyObjectNested<A> withNewNetworkPolicyObjectLike(io.dekorate.deps.kubernetes.api.model.networking.NetworkPolicy);

  public abstract A withDaemonSetSpecObject(io.dekorate.deps.kubernetes.api.model.apps.DaemonSetSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DaemonSetSpecObjectNested<A> withNewDaemonSetSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DaemonSetSpecObjectNested<A> withNewDaemonSetSpecObjectLike(io.dekorate.deps.kubernetes.api.model.apps.DaemonSetSpec);

  public abstract A withJobStatusObject(io.dekorate.deps.kubernetes.api.model.batch.JobStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$JobStatusObjectNested<A> withNewJobStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$JobStatusObjectNested<A> withNewJobStatusObjectLike(io.dekorate.deps.kubernetes.api.model.batch.JobStatus);

  public abstract A withResourceRuleObject(io.dekorate.deps.kubernetes.api.model.authorization.ResourceRule);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ResourceRuleObjectNested<A> withNewResourceRuleObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ResourceRuleObjectNested<A> withNewResourceRuleObjectLike(io.dekorate.deps.kubernetes.api.model.authorization.ResourceRule);

  public abstract A withObjectMetricStatusObject(io.dekorate.deps.kubernetes.api.model.ObjectMetricStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ObjectMetricStatusObjectNested<A> withNewObjectMetricStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ObjectMetricStatusObjectNested<A> withNewObjectMetricStatusObjectLike(io.dekorate.deps.kubernetes.api.model.ObjectMetricStatus);

  public abstract A withBitbucketWebHookCauseObject(io.dekorate.deps.openshift.api.model.BitbucketWebHookCause);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BitbucketWebHookCauseObjectNested<A> withNewBitbucketWebHookCauseObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BitbucketWebHookCauseObjectNested<A> withNewBitbucketWebHookCauseObjectLike(io.dekorate.deps.openshift.api.model.BitbucketWebHookCause);

  public abstract A withProjectListObject(io.dekorate.deps.openshift.api.model.ProjectList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ProjectListObjectNested<A> withNewProjectListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ProjectListObjectNested<A> withNewProjectListObjectLike(io.dekorate.deps.openshift.api.model.ProjectList);

  public abstract A withRoleBindingListObject(io.dekorate.deps.kubernetes.api.model.rbac.RoleBindingList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RoleBindingListObjectNested<A> withNewRoleBindingListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RoleBindingListObjectNested<A> withNewRoleBindingListObjectLike(io.dekorate.deps.kubernetes.api.model.rbac.RoleBindingList);

  public abstract A withEnvFromSourceObject(io.dekorate.deps.kubernetes.api.model.EnvFromSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EnvFromSourceObjectNested<A> withNewEnvFromSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EnvFromSourceObjectNested<A> withNewEnvFromSourceObjectLike(io.dekorate.deps.kubernetes.api.model.EnvFromSource);

  public abstract A withNamespaceSpecObject(io.dekorate.deps.kubernetes.api.model.NamespaceSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NamespaceSpecObjectNested<A> withNewNamespaceSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NamespaceSpecObjectNested<A> withNewNamespaceSpecObjectLike(io.dekorate.deps.kubernetes.api.model.NamespaceSpec);

  public abstract A withTypeMetaObject(io.dekorate.deps.kubernetes.api.model.TypeMeta);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TypeMetaObjectNested<A> withNewTypeMetaObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TypeMetaObjectNested<A> withNewTypeMetaObjectLike(io.dekorate.deps.kubernetes.api.model.TypeMeta);

  public abstract A withNewTypeMetaObject(java.lang.String, java.lang.String);

  public abstract A withRouteObject(io.dekorate.deps.openshift.api.model.Route);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RouteObjectNested<A> withNewRouteObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RouteObjectNested<A> withNewRouteObjectLike(io.dekorate.deps.openshift.api.model.Route);

  public abstract A withIngressBackendObject(io.dekorate.deps.kubernetes.api.model.extensions.IngressBackend);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$IngressBackendObjectNested<A> withNewIngressBackendObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$IngressBackendObjectNested<A> withNewIngressBackendObjectLike(io.dekorate.deps.kubernetes.api.model.extensions.IngressBackend);

  public abstract A withFlexVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.FlexVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$FlexVolumeSourceObjectNested<A> withNewFlexVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$FlexVolumeSourceObjectNested<A> withNewFlexVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.FlexVolumeSource);

  public abstract A withSELinuxStrategyOptionsObject(io.dekorate.deps.kubernetes.api.model.policy.SELinuxStrategyOptions);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SELinuxStrategyOptionsObjectNested<A> withNewSELinuxStrategyOptionsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SELinuxStrategyOptionsObjectNested<A> withNewSELinuxStrategyOptionsObjectLike(io.dekorate.deps.kubernetes.api.model.policy.SELinuxStrategyOptions);

  public abstract A withCSINodeSpecObject(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSINodeSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CSINodeSpecObjectNested<A> withNewCSINodeSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CSINodeSpecObjectNested<A> withNewCSINodeSpecObjectLike(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSINodeSpec);

  public abstract A withRBDVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.RBDVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RBDVolumeSourceObjectNested<A> withNewRBDVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RBDVolumeSourceObjectNested<A> withNewRBDVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.RBDVolumeSource);

  public abstract A withNodeConfigStatusObject(io.dekorate.deps.kubernetes.api.model.NodeConfigStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NodeConfigStatusObjectNested<A> withNewNodeConfigStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NodeConfigStatusObjectNested<A> withNewNodeConfigStatusObjectLike(io.dekorate.deps.kubernetes.api.model.NodeConfigStatus);

  public abstract A withResourceQuotaListObject(io.dekorate.deps.kubernetes.api.model.ResourceQuotaList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ResourceQuotaListObjectNested<A> withNewResourceQuotaListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ResourceQuotaListObjectNested<A> withNewResourceQuotaListObjectLike(io.dekorate.deps.kubernetes.api.model.ResourceQuotaList);

  public abstract A withAdmissionResponseObject(io.dekorate.deps.kubernetes.api.model.admission.AdmissionResponse);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$AdmissionResponseObjectNested<A> withNewAdmissionResponseObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$AdmissionResponseObjectNested<A> withNewAdmissionResponseObjectLike(io.dekorate.deps.kubernetes.api.model.admission.AdmissionResponse);

  public abstract A withNetworkPolicyListObject(io.dekorate.deps.kubernetes.api.model.networking.NetworkPolicyList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NetworkPolicyListObjectNested<A> withNewNetworkPolicyListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NetworkPolicyListObjectNested<A> withNewNetworkPolicyListObjectLike(io.dekorate.deps.kubernetes.api.model.networking.NetworkPolicyList);

  public abstract A withRawExtensionObject(io.dekorate.deps.kubernetes.api.model.runtime.RawExtension);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RawExtensionObjectNested<A> withNewRawExtensionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RawExtensionObjectNested<A> withNewRawExtensionObjectLike(io.dekorate.deps.kubernetes.api.model.runtime.RawExtension);

  public abstract A withSecurityContextConstraintsListObject(io.dekorate.deps.openshift.api.model.SecurityContextConstraintsList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SecurityContextConstraintsListObjectNested<A> withNewSecurityContextConstraintsListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SecurityContextConstraintsListObjectNested<A> withNewSecurityContextConstraintsListObjectLike(io.dekorate.deps.openshift.api.model.SecurityContextConstraintsList);

  public abstract A withBuildConfigListObject(io.dekorate.deps.openshift.api.model.BuildConfigList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildConfigListObjectNested<A> withNewBuildConfigListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildConfigListObjectNested<A> withNewBuildConfigListObjectLike(io.dekorate.deps.openshift.api.model.BuildConfigList);

  public abstract A withIdentityListObject(io.dekorate.deps.openshift.api.model.IdentityList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$IdentityListObjectNested<A> withNewIdentityListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$IdentityListObjectNested<A> withNewIdentityListObjectLike(io.dekorate.deps.openshift.api.model.IdentityList);

  public abstract A withConfigMapProjectionObject(io.dekorate.deps.kubernetes.api.model.ConfigMapProjection);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ConfigMapProjectionObjectNested<A> withNewConfigMapProjectionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ConfigMapProjectionObjectNested<A> withNewConfigMapProjectionObjectLike(io.dekorate.deps.kubernetes.api.model.ConfigMapProjection);

  public abstract A withCustomResourceDefinitionSpecObject(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceDefinitionSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CustomResourceDefinitionSpecObjectNested<A> withNewCustomResourceDefinitionSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CustomResourceDefinitionSpecObjectNested<A> withNewCustomResourceDefinitionSpecObjectLike(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceDefinitionSpec);

  public abstract A withNamespaceObject(io.dekorate.deps.kubernetes.api.model.Namespace);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NamespaceObjectNested<A> withNewNamespaceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NamespaceObjectNested<A> withNewNamespaceObjectLike(io.dekorate.deps.kubernetes.api.model.Namespace);

  public abstract A withGroupVersionKindObject(io.dekorate.deps.kubernetes.api.model.GroupVersionKind);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$GroupVersionKindObjectNested<A> withNewGroupVersionKindObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$GroupVersionKindObjectNested<A> withNewGroupVersionKindObjectLike(io.dekorate.deps.kubernetes.api.model.GroupVersionKind);

  public abstract A withNewGroupVersionKindObject(java.lang.String, java.lang.String, java.lang.String);

  public abstract A withContainerStateTerminatedObject(io.dekorate.deps.kubernetes.api.model.ContainerStateTerminated);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ContainerStateTerminatedObjectNested<A> withNewContainerStateTerminatedObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ContainerStateTerminatedObjectNested<A> withNewContainerStateTerminatedObjectLike(io.dekorate.deps.kubernetes.api.model.ContainerStateTerminated);

  public abstract A withRunAsUserStrategyOptionsObject(io.dekorate.deps.openshift.api.model.RunAsUserStrategyOptions);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RunAsUserStrategyOptionsObjectNested<A> withNewRunAsUserStrategyOptionsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RunAsUserStrategyOptionsObjectNested<A> withNewRunAsUserStrategyOptionsObjectLike(io.dekorate.deps.openshift.api.model.RunAsUserStrategyOptions);

  public abstract A withNewRunAsUserStrategyOptionsObject(java.lang.String, java.lang.Long, java.lang.Long, java.lang.Long);

  public abstract A withLimitRangeSpecObject(io.dekorate.deps.kubernetes.api.model.LimitRangeSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$LimitRangeSpecObjectNested<A> withNewLimitRangeSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$LimitRangeSpecObjectNested<A> withNewLimitRangeSpecObjectLike(io.dekorate.deps.kubernetes.api.model.LimitRangeSpec);

  public abstract A withSourceControlUserObject(io.dekorate.deps.openshift.api.model.SourceControlUser);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SourceControlUserObjectNested<A> withNewSourceControlUserObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SourceControlUserObjectNested<A> withNewSourceControlUserObjectLike(io.dekorate.deps.openshift.api.model.SourceControlUser);

  public abstract A withNewSourceControlUserObject(java.lang.String, java.lang.String);

  public abstract A withUserInfoObject(io.dekorate.deps.kubernetes.api.model.authentication.UserInfo);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$UserInfoObjectNested<A> withNewUserInfoObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$UserInfoObjectNested<A> withNewUserInfoObjectLike(io.dekorate.deps.kubernetes.api.model.authentication.UserInfo);

  public abstract A withContainerStateObject(io.dekorate.deps.kubernetes.api.model.ContainerState);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ContainerStateObjectNested<A> withNewContainerStateObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ContainerStateObjectNested<A> withNewContainerStateObjectLike(io.dekorate.deps.kubernetes.api.model.ContainerState);

  public abstract A withPersistentVolumeClaimStatusObject(io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PersistentVolumeClaimStatusObjectNested<A> withNewPersistentVolumeClaimStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PersistentVolumeClaimStatusObjectNested<A> withNewPersistentVolumeClaimStatusObjectLike(io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimStatus);

  public abstract A withServiceSpecObject(io.dekorate.deps.kubernetes.api.model.ServiceSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ServiceSpecObjectNested<A> withNewServiceSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ServiceSpecObjectNested<A> withNewServiceSpecObjectLike(io.dekorate.deps.kubernetes.api.model.ServiceSpec);

  public abstract A withPhotonPersistentDiskVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.PhotonPersistentDiskVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PhotonPersistentDiskVolumeSourceObjectNested<A> withNewPhotonPersistentDiskVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PhotonPersistentDiskVolumeSourceObjectNested<A> withNewPhotonPersistentDiskVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.PhotonPersistentDiskVolumeSource);

  public abstract A withNewPhotonPersistentDiskVolumeSourceObject(java.lang.String, java.lang.String);

  public abstract A withIngressRuleObject(io.dekorate.deps.kubernetes.api.model.extensions.IngressRule);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$IngressRuleObjectNested<A> withNewIngressRuleObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$IngressRuleObjectNested<A> withNewIngressRuleObjectLike(io.dekorate.deps.kubernetes.api.model.extensions.IngressRule);

  public abstract A withIngressStatusObject(io.dekorate.deps.kubernetes.api.model.extensions.IngressStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$IngressStatusObjectNested<A> withNewIngressStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$IngressStatusObjectNested<A> withNewIngressStatusObjectLike(io.dekorate.deps.kubernetes.api.model.extensions.IngressStatus);

  public abstract A withImageStreamListObject(io.dekorate.deps.openshift.api.model.ImageStreamList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageStreamListObjectNested<A> withNewImageStreamListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageStreamListObjectNested<A> withNewImageStreamListObjectLike(io.dekorate.deps.openshift.api.model.ImageStreamList);

  public abstract A withNodeSpecObject(io.dekorate.deps.kubernetes.api.model.NodeSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NodeSpecObjectNested<A> withNewNodeSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NodeSpecObjectNested<A> withNewNodeSpecObjectLike(io.dekorate.deps.kubernetes.api.model.NodeSpec);

  public abstract A withLocalSubjectAccessReviewObject(io.dekorate.deps.kubernetes.api.model.authorization.LocalSubjectAccessReview);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$LocalSubjectAccessReviewObjectNested<A> withNewLocalSubjectAccessReviewObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$LocalSubjectAccessReviewObjectNested<A> withNewLocalSubjectAccessReviewObjectLike(io.dekorate.deps.kubernetes.api.model.authorization.LocalSubjectAccessReview);

  public abstract A withSecretListObject(io.dekorate.deps.kubernetes.api.model.SecretList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SecretListObjectNested<A> withNewSecretListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SecretListObjectNested<A> withNewSecretListObjectLike(io.dekorate.deps.kubernetes.api.model.SecretList);

  public abstract A withNodeAddressObject(io.dekorate.deps.kubernetes.api.model.NodeAddress);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NodeAddressObjectNested<A> withNewNodeAddressObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NodeAddressObjectNested<A> withNewNodeAddressObjectLike(io.dekorate.deps.kubernetes.api.model.NodeAddress);

  public abstract A withNewNodeAddressObject(java.lang.String, java.lang.String);

  public abstract A withPodAffinityObject(io.dekorate.deps.kubernetes.api.model.PodAffinity);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodAffinityObjectNested<A> withNewPodAffinityObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodAffinityObjectNested<A> withNewPodAffinityObjectLike(io.dekorate.deps.kubernetes.api.model.PodAffinity);

  public abstract A withPodMetricsListObject(io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.PodMetricsList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodMetricsListObjectNested<A> withNewPodMetricsListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodMetricsListObjectNested<A> withNewPodMetricsListObjectLike(io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.PodMetricsList);

  public abstract A withHorizontalPodAutoscalerListObject(io.dekorate.deps.kubernetes.api.model.HorizontalPodAutoscalerList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$HorizontalPodAutoscalerListObjectNested<A> withNewHorizontalPodAutoscalerListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$HorizontalPodAutoscalerListObjectNested<A> withNewHorizontalPodAutoscalerListObjectLike(io.dekorate.deps.kubernetes.api.model.HorizontalPodAutoscalerList);

  public abstract A withLeaseObject(io.dekorate.deps.kubernetes.api.model.coordination.v1.Lease);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$LeaseObjectNested<A> withNewLeaseObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$LeaseObjectNested<A> withNewLeaseObjectLike(io.dekorate.deps.kubernetes.api.model.coordination.v1.Lease);

  public abstract A withServiceObject(io.dekorate.deps.kubernetes.api.model.Service);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ServiceObjectNested<A> withNewServiceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ServiceObjectNested<A> withNewServiceObjectLike(io.dekorate.deps.kubernetes.api.model.Service);

  public abstract A withExecEnvVarObject(io.dekorate.deps.kubernetes.api.model.ExecEnvVar);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ExecEnvVarObjectNested<A> withNewExecEnvVarObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ExecEnvVarObjectNested<A> withNewExecEnvVarObjectLike(io.dekorate.deps.kubernetes.api.model.ExecEnvVar);

  public abstract A withNewExecEnvVarObject(java.lang.String, java.lang.String);

  public abstract A withDeploymentStatusObject(io.dekorate.deps.kubernetes.api.model.apps.DeploymentStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DeploymentStatusObjectNested<A> withNewDeploymentStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DeploymentStatusObjectNested<A> withNewDeploymentStatusObjectLike(io.dekorate.deps.kubernetes.api.model.apps.DeploymentStatus);

  public abstract A withEventSeriesObject(io.dekorate.deps.kubernetes.api.model.EventSeries);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EventSeriesObjectNested<A> withNewEventSeriesObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EventSeriesObjectNested<A> withNewEventSeriesObjectLike(io.dekorate.deps.kubernetes.api.model.EventSeries);

  public abstract A withContainerImageObject(io.dekorate.deps.kubernetes.api.model.ContainerImage);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ContainerImageObjectNested<A> withNewContainerImageObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ContainerImageObjectNested<A> withNewContainerImageObjectLike(io.dekorate.deps.kubernetes.api.model.ContainerImage);

  public abstract A withReplicationControllerObject(io.dekorate.deps.kubernetes.api.model.ReplicationController);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ReplicationControllerObjectNested<A> withNewReplicationControllerObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ReplicationControllerObjectNested<A> withNewReplicationControllerObjectLike(io.dekorate.deps.kubernetes.api.model.ReplicationController);

  public abstract A withNodeStatusObject(io.dekorate.deps.kubernetes.api.model.NodeStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NodeStatusObjectNested<A> withNewNodeStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NodeStatusObjectNested<A> withNewNodeStatusObjectLike(io.dekorate.deps.kubernetes.api.model.NodeStatus);

  public abstract A withConfigMapListObject(io.dekorate.deps.kubernetes.api.model.ConfigMapList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ConfigMapListObjectNested<A> withNewConfigMapListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ConfigMapListObjectNested<A> withNewConfigMapListObjectLike(io.dekorate.deps.kubernetes.api.model.ConfigMapList);

  public abstract A withSubjectAccessReviewObject(io.dekorate.deps.kubernetes.api.model.authorization.SubjectAccessReview);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SubjectAccessReviewObjectNested<A> withNewSubjectAccessReviewObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SubjectAccessReviewObjectNested<A> withNewSubjectAccessReviewObjectLike(io.dekorate.deps.kubernetes.api.model.authorization.SubjectAccessReview);

  public abstract A withCSIDriverListObject(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSIDriverList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CSIDriverListObjectNested<A> withNewCSIDriverListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CSIDriverListObjectNested<A> withNewCSIDriverListObjectLike(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSIDriverList);

  public abstract A withPreferredSchedulingTermObject(io.dekorate.deps.kubernetes.api.model.PreferredSchedulingTerm);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PreferredSchedulingTermObjectNested<A> withNewPreferredSchedulingTermObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PreferredSchedulingTermObjectNested<A> withNewPreferredSchedulingTermObjectLike(io.dekorate.deps.kubernetes.api.model.PreferredSchedulingTerm);

  public abstract A withExternalDocumentationObject(io.dekorate.deps.kubernetes.api.model.apiextensions.ExternalDocumentation);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ExternalDocumentationObjectNested<A> withNewExternalDocumentationObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ExternalDocumentationObjectNested<A> withNewExternalDocumentationObjectLike(io.dekorate.deps.kubernetes.api.model.apiextensions.ExternalDocumentation);

  public abstract A withNewExternalDocumentationObject(java.lang.String, java.lang.String);

  public abstract A withEndpointObject(io.dekorate.deps.kubernetes.api.model.discovery.Endpoint);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EndpointObjectNested<A> withNewEndpointObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EndpointObjectNested<A> withNewEndpointObjectLike(io.dekorate.deps.kubernetes.api.model.discovery.Endpoint);

  public abstract A withImageLookupPolicyObject(io.dekorate.deps.openshift.api.model.ImageLookupPolicy);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageLookupPolicyObjectNested<A> withNewImageLookupPolicyObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageLookupPolicyObjectNested<A> withNewImageLookupPolicyObjectLike(io.dekorate.deps.openshift.api.model.ImageLookupPolicy);

  public abstract A withNewImageLookupPolicyObject(java.lang.Boolean);

  public abstract A withMutatingWebhookConfigurationListObject(io.dekorate.deps.kubernetes.api.model.admissionregistration.MutatingWebhookConfigurationList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$MutatingWebhookConfigurationListObjectNested<A> withNewMutatingWebhookConfigurationListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$MutatingWebhookConfigurationListObjectNested<A> withNewMutatingWebhookConfigurationListObjectLike(io.dekorate.deps.kubernetes.api.model.admissionregistration.MutatingWebhookConfigurationList);

  public abstract A withSubjectAccessReviewObject(io.dekorate.deps.openshift.api.model.SubjectAccessReview);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ModelSubjectAccessReviewObjectNested<A> withNewModelSubjectAccessReviewObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ModelSubjectAccessReviewObjectNested<A> withNewSubjectAccessReviewObjectLike(io.dekorate.deps.openshift.api.model.SubjectAccessReview);

  public abstract A withAllowedFlexVolumeObject(io.dekorate.deps.openshift.api.model.AllowedFlexVolume);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ModelAllowedFlexVolumeObjectNested<A> withNewModelAllowedFlexVolumeObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ModelAllowedFlexVolumeObjectNested<A> withNewAllowedFlexVolumeObjectLike(io.dekorate.deps.openshift.api.model.AllowedFlexVolume);

  public abstract A withNewModelAllowedFlexVolumeObject(java.lang.String);

  public abstract A withPodPresetListObject(io.dekorate.deps.kubernetes.api.model.settings.PodPresetList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodPresetListObjectNested<A> withNewPodPresetListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodPresetListObjectNested<A> withNewPodPresetListObjectLike(io.dekorate.deps.kubernetes.api.model.settings.PodPresetList);

  public abstract A withMutatingWebhookConfigurationObject(io.dekorate.deps.kubernetes.api.model.admissionregistration.MutatingWebhookConfiguration);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$MutatingWebhookConfigurationObjectNested<A> withNewMutatingWebhookConfigurationObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$MutatingWebhookConfigurationObjectNested<A> withNewMutatingWebhookConfigurationObjectLike(io.dekorate.deps.kubernetes.api.model.admissionregistration.MutatingWebhookConfiguration);

  public abstract A withVolumeMountObject(io.dekorate.deps.kubernetes.api.model.VolumeMount);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$VolumeMountObjectNested<A> withNewVolumeMountObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$VolumeMountObjectNested<A> withNewVolumeMountObjectLike(io.dekorate.deps.kubernetes.api.model.VolumeMount);

  public abstract A withNamespaceConditionObject(io.dekorate.deps.kubernetes.api.model.NamespaceCondition);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NamespaceConditionObjectNested<A> withNewNamespaceConditionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NamespaceConditionObjectNested<A> withNewNamespaceConditionObjectLike(io.dekorate.deps.kubernetes.api.model.NamespaceCondition);

  public abstract A withNewNamespaceConditionObject(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract A withLabelSelectorObject(io.dekorate.deps.kubernetes.api.model.LabelSelector);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$LabelSelectorObjectNested<A> withNewLabelSelectorObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$LabelSelectorObjectNested<A> withNewLabelSelectorObjectLike(io.dekorate.deps.kubernetes.api.model.LabelSelector);

  public abstract A withRunAsGroupStrategyOptionsObject(io.dekorate.deps.kubernetes.api.model.policy.RunAsGroupStrategyOptions);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RunAsGroupStrategyOptionsObjectNested<A> withNewRunAsGroupStrategyOptionsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RunAsGroupStrategyOptionsObjectNested<A> withNewRunAsGroupStrategyOptionsObjectLike(io.dekorate.deps.kubernetes.api.model.policy.RunAsGroupStrategyOptions);

  public abstract A withCronJobStatusObject(io.dekorate.deps.kubernetes.api.model.batch.CronJobStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CronJobStatusObjectNested<A> withNewCronJobStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CronJobStatusObjectNested<A> withNewCronJobStatusObjectLike(io.dekorate.deps.kubernetes.api.model.batch.CronJobStatus);

  public abstract A withBuildSpecObject(io.dekorate.deps.openshift.api.model.BuildSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildSpecObjectNested<A> withNewBuildSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildSpecObjectNested<A> withNewBuildSpecObjectLike(io.dekorate.deps.openshift.api.model.BuildSpec);

  public abstract A withStatusCauseObject(io.dekorate.deps.kubernetes.api.model.StatusCause);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$StatusCauseObjectNested<A> withNewStatusCauseObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$StatusCauseObjectNested<A> withNewStatusCauseObjectLike(io.dekorate.deps.kubernetes.api.model.StatusCause);

  public abstract A withNewStatusCauseObject(java.lang.String, java.lang.String, java.lang.String);

  public abstract A withProjectStatusObject(io.dekorate.deps.openshift.api.model.ProjectStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ProjectStatusObjectNested<A> withNewProjectStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ProjectStatusObjectNested<A> withNewProjectStatusObjectLike(io.dekorate.deps.openshift.api.model.ProjectStatus);

  public abstract A withNamedClusterObject(io.dekorate.deps.kubernetes.api.model.NamedCluster);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NamedClusterObjectNested<A> withNewNamedClusterObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NamedClusterObjectNested<A> withNewNamedClusterObjectLike(io.dekorate.deps.kubernetes.api.model.NamedCluster);

  public abstract A withPodMetricsObject(io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.PodMetrics);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodMetricsObjectNested<A> withNewPodMetricsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodMetricsObjectNested<A> withNewPodMetricsObjectLike(io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.PodMetrics);

  public abstract A withGitSourceRevisionObject(io.dekorate.deps.openshift.api.model.GitSourceRevision);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$GitSourceRevisionObjectNested<A> withNewGitSourceRevisionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$GitSourceRevisionObjectNested<A> withNewGitSourceRevisionObjectLike(io.dekorate.deps.openshift.api.model.GitSourceRevision);

  public abstract A withStatusDetailsObject(io.dekorate.deps.kubernetes.api.model.StatusDetails);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$StatusDetailsObjectNested<A> withNewStatusDetailsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$StatusDetailsObjectNested<A> withNewStatusDetailsObjectLike(io.dekorate.deps.kubernetes.api.model.StatusDetails);

  public abstract A withImageChangeTriggerObject(io.dekorate.deps.openshift.api.model.ImageChangeTrigger);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageChangeTriggerObjectNested<A> withNewImageChangeTriggerObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageChangeTriggerObjectNested<A> withNewImageChangeTriggerObjectLike(io.dekorate.deps.openshift.api.model.ImageChangeTrigger);

  public abstract A withSysctlObject(io.dekorate.deps.kubernetes.api.model.Sysctl);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SysctlObjectNested<A> withNewSysctlObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SysctlObjectNested<A> withNewSysctlObjectLike(io.dekorate.deps.kubernetes.api.model.Sysctl);

  public abstract A withNewSysctlObject(java.lang.String, java.lang.String);

  public abstract A withHorizontalPodAutoscalerObject(io.dekorate.deps.kubernetes.api.model.HorizontalPodAutoscaler);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$HorizontalPodAutoscalerObjectNested<A> withNewHorizontalPodAutoscalerObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$HorizontalPodAutoscalerObjectNested<A> withNewHorizontalPodAutoscalerObjectLike(io.dekorate.deps.kubernetes.api.model.HorizontalPodAutoscaler);

  public abstract A withImageStreamImportSpecObject(io.dekorate.deps.openshift.api.model.ImageStreamImportSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageStreamImportSpecObjectNested<A> withNewImageStreamImportSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageStreamImportSpecObjectNested<A> withNewImageStreamImportSpecObjectLike(io.dekorate.deps.openshift.api.model.ImageStreamImportSpec);

  public abstract A withFSGroupStrategyOptionsObject(io.dekorate.deps.openshift.api.model.FSGroupStrategyOptions);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ModelFSGroupStrategyOptionsObjectNested<A> withNewModelFSGroupStrategyOptionsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ModelFSGroupStrategyOptionsObjectNested<A> withNewFSGroupStrategyOptionsObjectLike(io.dekorate.deps.openshift.api.model.FSGroupStrategyOptions);

  public abstract A withDeleteOptionsObject(io.dekorate.deps.kubernetes.api.model.DeleteOptions);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DeleteOptionsObjectNested<A> withNewDeleteOptionsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DeleteOptionsObjectNested<A> withNewDeleteOptionsObjectLike(io.dekorate.deps.kubernetes.api.model.DeleteOptions);

  public abstract A withStatusObject(io.dekorate.deps.kubernetes.api.model.Status);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$StatusObjectNested<A> withNewStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$StatusObjectNested<A> withNewStatusObjectLike(io.dekorate.deps.kubernetes.api.model.Status);

  public abstract A withKubernetesRunAsUserStrategyOptionsObject(io.dekorate.deps.kubernetes.api.model.policy.KubernetesRunAsUserStrategyOptions);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$KubernetesRunAsUserStrategyOptionsObjectNested<A> withNewKubernetesRunAsUserStrategyOptionsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$KubernetesRunAsUserStrategyOptionsObjectNested<A> withNewKubernetesRunAsUserStrategyOptionsObjectLike(io.dekorate.deps.kubernetes.api.model.policy.KubernetesRunAsUserStrategyOptions);

  public abstract A withContainerStatusObject(io.dekorate.deps.kubernetes.api.model.ContainerStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ContainerStatusObjectNested<A> withNewContainerStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ContainerStatusObjectNested<A> withNewContainerStatusObjectLike(io.dekorate.deps.kubernetes.api.model.ContainerStatus);

  public abstract A withDeploymentSpecObject(io.dekorate.deps.kubernetes.api.model.apps.DeploymentSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DeploymentSpecObjectNested<A> withNewDeploymentSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DeploymentSpecObjectNested<A> withNewDeploymentSpecObjectLike(io.dekorate.deps.kubernetes.api.model.apps.DeploymentSpec);

  public abstract A withConfigMapEnvSourceObject(io.dekorate.deps.kubernetes.api.model.ConfigMapEnvSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ConfigMapEnvSourceObjectNested<A> withNewConfigMapEnvSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ConfigMapEnvSourceObjectNested<A> withNewConfigMapEnvSourceObjectLike(io.dekorate.deps.kubernetes.api.model.ConfigMapEnvSource);

  public abstract A withNewConfigMapEnvSourceObject(java.lang.String, java.lang.Boolean);

  public abstract A withCertificateSigningRequestStatusObject(io.dekorate.deps.kubernetes.api.model.certificates.CertificateSigningRequestStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CertificateSigningRequestStatusObjectNested<A> withNewCertificateSigningRequestStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CertificateSigningRequestStatusObjectNested<A> withNewCertificateSigningRequestStatusObjectLike(io.dekorate.deps.kubernetes.api.model.certificates.CertificateSigningRequestStatus);

  public abstract A withNodeSelectorRequirementObject(io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirement);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NodeSelectorRequirementObjectNested<A> withNewNodeSelectorRequirementObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NodeSelectorRequirementObjectNested<A> withNewNodeSelectorRequirementObjectLike(io.dekorate.deps.kubernetes.api.model.NodeSelectorRequirement);

  public abstract A withRecreateDeploymentStrategyParamsObject(io.dekorate.deps.openshift.api.model.RecreateDeploymentStrategyParams);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RecreateDeploymentStrategyParamsObjectNested<A> withNewRecreateDeploymentStrategyParamsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RecreateDeploymentStrategyParamsObjectNested<A> withNewRecreateDeploymentStrategyParamsObjectLike(io.dekorate.deps.openshift.api.model.RecreateDeploymentStrategyParams);

  public abstract A withDockerStrategyOptionsObject(io.dekorate.deps.openshift.api.model.DockerStrategyOptions);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DockerStrategyOptionsObjectNested<A> withNewDockerStrategyOptionsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DockerStrategyOptionsObjectNested<A> withNewDockerStrategyOptionsObjectLike(io.dekorate.deps.openshift.api.model.DockerStrategyOptions);

  public abstract A withImageListObject(io.dekorate.deps.openshift.api.model.ImageList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageListObjectNested<A> withNewImageListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageListObjectNested<A> withNewImageListObjectLike(io.dekorate.deps.openshift.api.model.ImageList);

  public abstract A withConfigMapBuildSourceObject(io.dekorate.deps.openshift.api.model.ConfigMapBuildSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ConfigMapBuildSourceObjectNested<A> withNewConfigMapBuildSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ConfigMapBuildSourceObjectNested<A> withNewConfigMapBuildSourceObjectLike(io.dekorate.deps.openshift.api.model.ConfigMapBuildSource);

  public abstract A withAllowedCSIDriverObject(io.dekorate.deps.kubernetes.api.model.policy.AllowedCSIDriver);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$AllowedCSIDriverObjectNested<A> withNewAllowedCSIDriverObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$AllowedCSIDriverObjectNested<A> withNewAllowedCSIDriverObjectLike(io.dekorate.deps.kubernetes.api.model.policy.AllowedCSIDriver);

  public abstract A withNewAllowedCSIDriverObject(java.lang.String);

  public abstract A withReplicaSetListObject(io.dekorate.deps.kubernetes.api.model.apps.ReplicaSetList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ReplicaSetListObjectNested<A> withNewReplicaSetListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ReplicaSetListObjectNested<A> withNewReplicaSetListObjectLike(io.dekorate.deps.kubernetes.api.model.apps.ReplicaSetList);

  public abstract A withPodTemplateListObject(io.dekorate.deps.kubernetes.api.model.PodTemplateList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodTemplateListObjectNested<A> withNewPodTemplateListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodTemplateListObjectNested<A> withNewPodTemplateListObjectLike(io.dekorate.deps.kubernetes.api.model.PodTemplateList);

  public abstract A withImageObject(io.dekorate.deps.openshift.api.model.Image);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageObjectNested<A> withNewImageObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageObjectNested<A> withNewImageObjectLike(io.dekorate.deps.openshift.api.model.Image);

  public abstract A withTLSConfigObject(io.dekorate.deps.openshift.api.model.TLSConfig);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TLSConfigObjectNested<A> withNewTLSConfigObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TLSConfigObjectNested<A> withNewTLSConfigObjectLike(io.dekorate.deps.openshift.api.model.TLSConfig);

  public abstract A withEndpointAddressObject(io.dekorate.deps.kubernetes.api.model.EndpointAddress);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EndpointAddressObjectNested<A> withNewEndpointAddressObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EndpointAddressObjectNested<A> withNewEndpointAddressObjectLike(io.dekorate.deps.kubernetes.api.model.EndpointAddress);

  public abstract A withBuildStatusObject(io.dekorate.deps.openshift.api.model.BuildStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildStatusObjectNested<A> withNewBuildStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildStatusObjectNested<A> withNewBuildStatusObjectLike(io.dekorate.deps.openshift.api.model.BuildStatus);

  public abstract A withNodeConfigSourceObject(io.dekorate.deps.kubernetes.api.model.NodeConfigSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NodeConfigSourceObjectNested<A> withNewNodeConfigSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NodeConfigSourceObjectNested<A> withNewNodeConfigSourceObjectLike(io.dekorate.deps.kubernetes.api.model.NodeConfigSource);

  public abstract A withCustomResourceDefinitionConditionObject(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceDefinitionCondition);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CustomResourceDefinitionConditionObjectNested<A> withNewCustomResourceDefinitionConditionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CustomResourceDefinitionConditionObjectNested<A> withNewCustomResourceDefinitionConditionObjectLike(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceDefinitionCondition);

  public abstract A withNewCustomResourceDefinitionConditionObject(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract A withImageSourceObject(io.dekorate.deps.openshift.api.model.ImageSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageSourceObjectNested<A> withNewImageSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageSourceObjectNested<A> withNewImageSourceObjectLike(io.dekorate.deps.openshift.api.model.ImageSource);

  public abstract A withVsphereVirtualDiskVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.VsphereVirtualDiskVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$VsphereVirtualDiskVolumeSourceObjectNested<A> withNewVsphereVirtualDiskVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$VsphereVirtualDiskVolumeSourceObjectNested<A> withNewVsphereVirtualDiskVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.VsphereVirtualDiskVolumeSource);

  public abstract A withNewVsphereVirtualDiskVolumeSourceObject(java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract A withNodeMetricsListObject(io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.NodeMetricsList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NodeMetricsListObjectNested<A> withNewNodeMetricsListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NodeMetricsListObjectNested<A> withNewNodeMetricsListObjectLike(io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.NodeMetricsList);

  public abstract A withRuleObject(io.dekorate.deps.kubernetes.api.model.admissionregistration.Rule);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RuleObjectNested<A> withNewRuleObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RuleObjectNested<A> withNewRuleObjectLike(io.dekorate.deps.kubernetes.api.model.admissionregistration.Rule);

  public abstract A withTagReferenceObject(io.dekorate.deps.openshift.api.model.TagReference);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TagReferenceObjectNested<A> withNewTagReferenceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TagReferenceObjectNested<A> withNewTagReferenceObjectLike(io.dekorate.deps.openshift.api.model.TagReference);

  public abstract A withCrossVersionObjectReference(io.dekorate.deps.kubernetes.api.model.CrossVersionObjectReference);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CrossVersionObjectReferenceNested<A> withNewCrossVersionObjectReference();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CrossVersionObjectReferenceNested<A> withNewCrossVersionObjectReferenceLike(io.dekorate.deps.kubernetes.api.model.CrossVersionObjectReference);

  public abstract A withNewCrossVersionObjectReference(java.lang.String, java.lang.String, java.lang.String);

  public abstract A withLabelSelectorRequirementObject(io.dekorate.deps.kubernetes.api.model.LabelSelectorRequirement);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$LabelSelectorRequirementObjectNested<A> withNewLabelSelectorRequirementObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$LabelSelectorRequirementObjectNested<A> withNewLabelSelectorRequirementObjectLike(io.dekorate.deps.kubernetes.api.model.LabelSelectorRequirement);

  public abstract A withCustomResourceSubresourcesObject(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceSubresources);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CustomResourceSubresourcesObjectNested<A> withNewCustomResourceSubresourcesObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CustomResourceSubresourcesObjectNested<A> withNewCustomResourceSubresourcesObjectLike(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceSubresources);

  public abstract A withDaemonSetUpdateStrategyObject(io.dekorate.deps.kubernetes.api.model.apps.DaemonSetUpdateStrategy);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DaemonSetUpdateStrategyObjectNested<A> withNewDaemonSetUpdateStrategyObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DaemonSetUpdateStrategyObjectNested<A> withNewDaemonSetUpdateStrategyObjectLike(io.dekorate.deps.kubernetes.api.model.apps.DaemonSetUpdateStrategy);

  public abstract A withReplicaSetObject(io.dekorate.deps.kubernetes.api.model.apps.ReplicaSet);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ReplicaSetObjectNested<A> withNewReplicaSetObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ReplicaSetObjectNested<A> withNewReplicaSetObjectLike(io.dekorate.deps.kubernetes.api.model.apps.ReplicaSet);

  public abstract A withAggregationRuleObject(io.dekorate.deps.kubernetes.api.model.rbac.AggregationRule);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$AggregationRuleObjectNested<A> withNewAggregationRuleObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$AggregationRuleObjectNested<A> withNewAggregationRuleObjectLike(io.dekorate.deps.kubernetes.api.model.rbac.AggregationRule);

  public abstract A withGitRepoVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.GitRepoVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$GitRepoVolumeSourceObjectNested<A> withNewGitRepoVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$GitRepoVolumeSourceObjectNested<A> withNewGitRepoVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.GitRepoVolumeSource);

  public abstract A withNewGitRepoVolumeSourceObject(java.lang.String, java.lang.String, java.lang.String);

  public abstract A withEndpointSliceObject(io.dekorate.deps.kubernetes.api.model.discovery.EndpointSlice);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EndpointSliceObjectNested<A> withNewEndpointSliceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EndpointSliceObjectNested<A> withNewEndpointSliceObjectLike(io.dekorate.deps.kubernetes.api.model.discovery.EndpointSlice);

  public abstract A withEndpointsListObject(io.dekorate.deps.kubernetes.api.model.EndpointsList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EndpointsListObjectNested<A> withNewEndpointsListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EndpointsListObjectNested<A> withNewEndpointsListObjectLike(io.dekorate.deps.kubernetes.api.model.EndpointsList);

  public abstract A withGroupVersionResourceObject(io.dekorate.deps.kubernetes.api.model.GroupVersionResource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$GroupVersionResourceObjectNested<A> withNewGroupVersionResourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$GroupVersionResourceObjectNested<A> withNewGroupVersionResourceObjectLike(io.dekorate.deps.kubernetes.api.model.GroupVersionResource);

  public abstract A withNewGroupVersionResourceObject(java.lang.String, java.lang.String, java.lang.String);

  public abstract A withBuildSourceObject(io.dekorate.deps.openshift.api.model.BuildSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildSourceObjectNested<A> withNewBuildSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildSourceObjectNested<A> withNewBuildSourceObjectLike(io.dekorate.deps.openshift.api.model.BuildSource);

  public abstract A withCronJobObject(io.dekorate.deps.kubernetes.api.model.batch.CronJob);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CronJobObjectNested<A> withNewCronJobObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CronJobObjectNested<A> withNewCronJobObjectLike(io.dekorate.deps.kubernetes.api.model.batch.CronJob);

  public abstract A withTopologySelectorTermObject(io.dekorate.deps.kubernetes.api.model.TopologySelectorTerm);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TopologySelectorTermObjectNested<A> withNewTopologySelectorTermObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TopologySelectorTermObjectNested<A> withNewTopologySelectorTermObjectLike(io.dekorate.deps.kubernetes.api.model.TopologySelectorTerm);

  public abstract A withCustomResourceSubresourceScaleObject(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceSubresourceScale);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CustomResourceSubresourceScaleObjectNested<A> withNewCustomResourceSubresourceScaleObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CustomResourceSubresourceScaleObjectNested<A> withNewCustomResourceSubresourceScaleObjectLike(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceSubresourceScale);

  public abstract A withNewCustomResourceSubresourceScaleObject(java.lang.String, java.lang.String, java.lang.String);

  public abstract A withStorageOSPersistentVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.StorageOSPersistentVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$StorageOSPersistentVolumeSourceObjectNested<A> withNewStorageOSPersistentVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$StorageOSPersistentVolumeSourceObjectNested<A> withNewStorageOSPersistentVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.StorageOSPersistentVolumeSource);

  public abstract A withCertificateSigningRequestSpecObject(io.dekorate.deps.kubernetes.api.model.certificates.CertificateSigningRequestSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CertificateSigningRequestSpecObjectNested<A> withNewCertificateSigningRequestSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CertificateSigningRequestSpecObjectNested<A> withNewCertificateSigningRequestSpecObjectLike(io.dekorate.deps.kubernetes.api.model.certificates.CertificateSigningRequestSpec);

  public abstract A withMutatingWebhookObject(io.dekorate.deps.kubernetes.api.model.admissionregistration.MutatingWebhook);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$MutatingWebhookObjectNested<A> withNewMutatingWebhookObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$MutatingWebhookObjectNested<A> withNewMutatingWebhookObjectLike(io.dekorate.deps.kubernetes.api.model.admissionregistration.MutatingWebhook);

  public abstract A withSecurityContextObject(io.dekorate.deps.kubernetes.api.model.SecurityContext);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SecurityContextObjectNested<A> withNewSecurityContextObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SecurityContextObjectNested<A> withNewSecurityContextObjectLike(io.dekorate.deps.kubernetes.api.model.SecurityContext);

  public abstract A withConfigMapVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.ConfigMapVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ConfigMapVolumeSourceObjectNested<A> withNewConfigMapVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ConfigMapVolumeSourceObjectNested<A> withNewConfigMapVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.ConfigMapVolumeSource);

  public abstract A withGitBuildSourceObject(io.dekorate.deps.openshift.api.model.GitBuildSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$GitBuildSourceObjectNested<A> withNewGitBuildSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$GitBuildSourceObjectNested<A> withNewGitBuildSourceObjectLike(io.dekorate.deps.openshift.api.model.GitBuildSource);

  public abstract A withNewGitBuildSourceObject(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract A withComponentStatusListObject(io.dekorate.deps.kubernetes.api.model.ComponentStatusList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ComponentStatusListObjectNested<A> withNewComponentStatusListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ComponentStatusListObjectNested<A> withNewComponentStatusListObjectLike(io.dekorate.deps.kubernetes.api.model.ComponentStatusList);

  public abstract A withFlockerVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.FlockerVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$FlockerVolumeSourceObjectNested<A> withNewFlockerVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$FlockerVolumeSourceObjectNested<A> withNewFlockerVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.FlockerVolumeSource);

  public abstract A withNewFlockerVolumeSourceObject(java.lang.String, java.lang.String);

  public abstract A withScaleIOVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.ScaleIOVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ScaleIOVolumeSourceObjectNested<A> withNewScaleIOVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ScaleIOVolumeSourceObjectNested<A> withNewScaleIOVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.ScaleIOVolumeSource);

  public abstract A withLimitRangeListObject(io.dekorate.deps.kubernetes.api.model.LimitRangeList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$LimitRangeListObjectNested<A> withNewLimitRangeListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$LimitRangeListObjectNested<A> withNewLimitRangeListObjectLike(io.dekorate.deps.kubernetes.api.model.LimitRangeList);

  public abstract A withProbeObject(io.dekorate.deps.kubernetes.api.model.Probe);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ProbeObjectNested<A> withNewProbeObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ProbeObjectNested<A> withNewProbeObjectLike(io.dekorate.deps.kubernetes.api.model.Probe);

  public abstract A withImageSourcePathObject(io.dekorate.deps.openshift.api.model.ImageSourcePath);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageSourcePathObjectNested<A> withNewImageSourcePathObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageSourcePathObjectNested<A> withNewImageSourcePathObjectLike(io.dekorate.deps.openshift.api.model.ImageSourcePath);

  public abstract A withNewImageSourcePathObject(java.lang.String, java.lang.String);

  public abstract A withEndpointsObject(io.dekorate.deps.kubernetes.api.model.Endpoints);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EndpointsObjectNested<A> withNewEndpointsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EndpointsObjectNested<A> withNewEndpointsObjectLike(io.dekorate.deps.kubernetes.api.model.Endpoints);

  public abstract A withBuildConfigStatusObject(io.dekorate.deps.openshift.api.model.BuildConfigStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildConfigStatusObjectNested<A> withNewBuildConfigStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildConfigStatusObjectNested<A> withNewBuildConfigStatusObjectLike(io.dekorate.deps.openshift.api.model.BuildConfigStatus);

  public abstract A withNewBuildConfigStatusObject(java.lang.Long);

  public abstract A withHPAScalingPolicyObject(io.dekorate.deps.kubernetes.api.model.HPAScalingPolicy);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$HPAScalingPolicyObjectNested<A> withNewHPAScalingPolicyObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$HPAScalingPolicyObjectNested<A> withNewHPAScalingPolicyObjectLike(io.dekorate.deps.kubernetes.api.model.HPAScalingPolicy);

  public abstract A withNewHPAScalingPolicyObject(java.lang.Integer, java.lang.String, java.lang.Integer);

  public abstract A withSecretVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.SecretVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SecretVolumeSourceObjectNested<A> withNewSecretVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SecretVolumeSourceObjectNested<A> withNewSecretVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.SecretVolumeSource);

  public abstract A withParameterObject(io.dekorate.deps.openshift.api.model.Parameter);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ParameterObjectNested<A> withNewParameterObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ParameterObjectNested<A> withNewParameterObjectLike(io.dekorate.deps.openshift.api.model.Parameter);

  public abstract A withPodObject(io.dekorate.deps.kubernetes.api.model.Pod);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodObjectNested<A> withNewPodObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodObjectNested<A> withNewPodObjectLike(io.dekorate.deps.kubernetes.api.model.Pod);

  public abstract A withClientIPConfigObject(io.dekorate.deps.kubernetes.api.model.ClientIPConfig);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ClientIPConfigObjectNested<A> withNewClientIPConfigObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ClientIPConfigObjectNested<A> withNewClientIPConfigObjectLike(io.dekorate.deps.kubernetes.api.model.ClientIPConfig);

  public abstract A withNewClientIPConfigObject(java.lang.Integer);

  public abstract A withNonResourceRuleObject(io.dekorate.deps.kubernetes.api.model.authorization.NonResourceRule);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NonResourceRuleObjectNested<A> withNewNonResourceRuleObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NonResourceRuleObjectNested<A> withNewNonResourceRuleObjectLike(io.dekorate.deps.kubernetes.api.model.authorization.NonResourceRule);

  public abstract A withContextObject(io.dekorate.deps.kubernetes.api.model.Context);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ContextObjectNested<A> withNewContextObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ContextObjectNested<A> withNewContextObjectLike(io.dekorate.deps.kubernetes.api.model.Context);

  public abstract A withConfigMapObject(io.dekorate.deps.kubernetes.api.model.ConfigMap);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ConfigMapObjectNested<A> withNewConfigMapObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ConfigMapObjectNested<A> withNewConfigMapObjectLike(io.dekorate.deps.kubernetes.api.model.ConfigMap);

  public abstract A withNodeAffinityObject(io.dekorate.deps.kubernetes.api.model.NodeAffinity);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NodeAffinityObjectNested<A> withNewNodeAffinityObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NodeAffinityObjectNested<A> withNewNodeAffinityObjectLike(io.dekorate.deps.kubernetes.api.model.NodeAffinity);

  public abstract A withCustomResourceDefinitionObject(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceDefinition);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CustomResourceDefinitionObjectNested<A> withNewCustomResourceDefinitionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CustomResourceDefinitionObjectNested<A> withNewCustomResourceDefinitionObjectLike(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceDefinition);

  public abstract A withFCVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.FCVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$FCVolumeSourceObjectNested<A> withNewFCVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$FCVolumeSourceObjectNested<A> withNewFCVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.FCVolumeSource);

  public abstract A withCustomResourceDefinitionStatusObject(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceDefinitionStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CustomResourceDefinitionStatusObjectNested<A> withNewCustomResourceDefinitionStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CustomResourceDefinitionStatusObjectNested<A> withNewCustomResourceDefinitionStatusObjectLike(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceDefinitionStatus);

  public abstract A withJobListObject(io.dekorate.deps.kubernetes.api.model.batch.JobList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$JobListObjectNested<A> withNewJobListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$JobListObjectNested<A> withNewJobListObjectLike(io.dekorate.deps.kubernetes.api.model.batch.JobList);

  public abstract A withOAuthAuthorizeTokenListObject(io.dekorate.deps.openshift.api.model.OAuthAuthorizeTokenList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OAuthAuthorizeTokenListObjectNested<A> withNewOAuthAuthorizeTokenListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OAuthAuthorizeTokenListObjectNested<A> withNewOAuthAuthorizeTokenListObjectLike(io.dekorate.deps.openshift.api.model.OAuthAuthorizeTokenList);

  public abstract A withJSONSchemaPropsOrStringArrayObject(io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsOrStringArray);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$JSONSchemaPropsOrStringArrayObjectNested<A> withNewJSONSchemaPropsOrStringArrayObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$JSONSchemaPropsOrStringArrayObjectNested<A> withNewJSONSchemaPropsOrStringArrayObjectLike(io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsOrStringArray);

  public abstract A withCustomDeploymentStrategyParamsObject(io.dekorate.deps.openshift.api.model.CustomDeploymentStrategyParams);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CustomDeploymentStrategyParamsObjectNested<A> withNewCustomDeploymentStrategyParamsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CustomDeploymentStrategyParamsObjectNested<A> withNewCustomDeploymentStrategyParamsObjectLike(io.dekorate.deps.openshift.api.model.CustomDeploymentStrategyParams);

  public abstract A withImageImportSpecObject(io.dekorate.deps.openshift.api.model.ImageImportSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageImportSpecObjectNested<A> withNewImageImportSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageImportSpecObjectNested<A> withNewImageImportSpecObjectLike(io.dekorate.deps.openshift.api.model.ImageImportSpec);

  public abstract A withDownwardAPIProjectionObject(io.dekorate.deps.kubernetes.api.model.DownwardAPIProjection);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DownwardAPIProjectionObjectNested<A> withNewDownwardAPIProjectionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DownwardAPIProjectionObjectNested<A> withNewDownwardAPIProjectionObjectLike(io.dekorate.deps.kubernetes.api.model.DownwardAPIProjection);

  public abstract A withPodSecurityContextObject(io.dekorate.deps.kubernetes.api.model.PodSecurityContext);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodSecurityContextObjectNested<A> withNewPodSecurityContextObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodSecurityContextObjectNested<A> withNewPodSecurityContextObjectLike(io.dekorate.deps.kubernetes.api.model.PodSecurityContext);

  public abstract A withPodAffinityTermObject(io.dekorate.deps.kubernetes.api.model.PodAffinityTerm);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodAffinityTermObjectNested<A> withNewPodAffinityTermObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodAffinityTermObjectNested<A> withNewPodAffinityTermObjectLike(io.dekorate.deps.kubernetes.api.model.PodAffinityTerm);

  public abstract A withDiscoveryEndpointPortObject(io.dekorate.deps.kubernetes.api.model.discovery.DiscoveryEndpointPort);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DiscoveryEndpointPortObjectNested<A> withNewDiscoveryEndpointPortObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DiscoveryEndpointPortObjectNested<A> withNewDiscoveryEndpointPortObjectLike(io.dekorate.deps.kubernetes.api.model.discovery.DiscoveryEndpointPort);

  public abstract A withNewDiscoveryEndpointPortObject(java.lang.String, java.lang.String, java.lang.Integer, java.lang.String);

  public abstract A withIDRangeObject(io.dekorate.deps.openshift.api.model.IDRange);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ModelIDRangeObjectNested<A> withNewModelIDRangeObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ModelIDRangeObjectNested<A> withNewIDRangeObjectLike(io.dekorate.deps.openshift.api.model.IDRange);

  public abstract A withNewModelIDRangeObject(java.lang.Long, java.lang.Long);

  public abstract A withClusterOperatorStatusConditionObject(io.dekorate.deps.openshift.api.model.ClusterOperatorStatusCondition);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ClusterOperatorStatusConditionObjectNested<A> withNewClusterOperatorStatusConditionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ClusterOperatorStatusConditionObjectNested<A> withNewClusterOperatorStatusConditionObjectLike(io.dekorate.deps.openshift.api.model.ClusterOperatorStatusCondition);

  public abstract A withNewClusterOperatorStatusConditionObject(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract A withBuildConfigSpecObject(io.dekorate.deps.openshift.api.model.BuildConfigSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildConfigSpecObjectNested<A> withNewBuildConfigSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildConfigSpecObjectNested<A> withNewBuildConfigSpecObjectLike(io.dekorate.deps.openshift.api.model.BuildConfigSpec);

  public abstract A withGroupVersionForDiscoveryObject(io.dekorate.deps.kubernetes.api.model.GroupVersionForDiscovery);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$GroupVersionForDiscoveryObjectNested<A> withNewGroupVersionForDiscoveryObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$GroupVersionForDiscoveryObjectNested<A> withNewGroupVersionForDiscoveryObjectLike(io.dekorate.deps.kubernetes.api.model.GroupVersionForDiscovery);

  public abstract A withNewGroupVersionForDiscoveryObject(java.lang.String, java.lang.String);

  public abstract A withNonResourceAttributesObject(io.dekorate.deps.kubernetes.api.model.authorization.NonResourceAttributes);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NonResourceAttributesObjectNested<A> withNewNonResourceAttributesObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NonResourceAttributesObjectNested<A> withNewNonResourceAttributesObjectLike(io.dekorate.deps.kubernetes.api.model.authorization.NonResourceAttributes);

  public abstract A withNewNonResourceAttributesObject(java.lang.String, java.lang.String);

  public abstract A withHorizontalPodAutoscalerBehaviorObject(io.dekorate.deps.kubernetes.api.model.HorizontalPodAutoscalerBehavior);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$HorizontalPodAutoscalerBehaviorObjectNested<A> withNewHorizontalPodAutoscalerBehaviorObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$HorizontalPodAutoscalerBehaviorObjectNested<A> withNewHorizontalPodAutoscalerBehaviorObjectLike(io.dekorate.deps.kubernetes.api.model.HorizontalPodAutoscalerBehavior);

  public abstract A withPersistentVolumeClaimSourceObject(io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PersistentVolumeClaimSourceObjectNested<A> withNewPersistentVolumeClaimSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PersistentVolumeClaimSourceObjectNested<A> withNewPersistentVolumeClaimSourceObjectLike(io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimVolumeSource);

  public abstract A withNewPersistentVolumeClaimSourceObject(java.lang.String, java.lang.Boolean);

  public abstract A withVolumeAttachmentSpecObject(io.dekorate.deps.kubernetes.api.model.storage.VolumeAttachmentSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$VolumeAttachmentSpecObjectNested<A> withNewVolumeAttachmentSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$VolumeAttachmentSpecObjectNested<A> withNewVolumeAttachmentSpecObjectLike(io.dekorate.deps.kubernetes.api.model.storage.VolumeAttachmentSpec);

  public abstract A withControllerRevisionListObject(io.dekorate.deps.kubernetes.api.model.apps.ControllerRevisionList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ControllerRevisionListObjectNested<A> withNewControllerRevisionListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ControllerRevisionListObjectNested<A> withNewControllerRevisionListObjectLike(io.dekorate.deps.kubernetes.api.model.apps.ControllerRevisionList);

  public abstract A withSubjectAccessReviewStatusObject(io.dekorate.deps.kubernetes.api.model.authorization.SubjectAccessReviewStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SubjectAccessReviewStatusObjectNested<A> withNewSubjectAccessReviewStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SubjectAccessReviewStatusObjectNested<A> withNewSubjectAccessReviewStatusObjectLike(io.dekorate.deps.kubernetes.api.model.authorization.SubjectAccessReviewStatus);

  public abstract A withNewSubjectAccessReviewStatusObject(java.lang.Boolean, java.lang.Boolean, java.lang.String, java.lang.String);

  public abstract A withWebHookTriggerObject(io.dekorate.deps.openshift.api.model.WebHookTrigger);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$WebHookTriggerObjectNested<A> withNewWebHookTriggerObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$WebHookTriggerObjectNested<A> withNewWebHookTriggerObjectLike(io.dekorate.deps.openshift.api.model.WebHookTrigger);

  public abstract A withServiceAccountReferenceObject(io.dekorate.deps.openshift.api.model.ServiceAccountReference);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ServiceAccountReferenceObjectNested<A> withNewServiceAccountReferenceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ServiceAccountReferenceObjectNested<A> withNewServiceAccountReferenceObjectLike(io.dekorate.deps.openshift.api.model.ServiceAccountReference);

  public abstract A withNewServiceAccountReferenceObject(java.lang.String, java.lang.String);

  public abstract A withBuildObject(io.dekorate.deps.openshift.api.model.Build);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildObjectNested<A> withNewBuildObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildObjectNested<A> withNewBuildObjectLike(io.dekorate.deps.openshift.api.model.Build);

  public abstract A withCustomResourceDefinitionListObject(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceDefinitionList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CustomResourceDefinitionListObjectNested<A> withNewCustomResourceDefinitionListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CustomResourceDefinitionListObjectNested<A> withNewCustomResourceDefinitionListObjectLike(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceDefinitionList);

  public abstract A withVolumeNodeResourcesObject(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.VolumeNodeResources);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$VolumeNodeResourcesObjectNested<A> withNewVolumeNodeResourcesObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$VolumeNodeResourcesObjectNested<A> withNewVolumeNodeResourcesObjectLike(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.VolumeNodeResources);

  public abstract A withNewVolumeNodeResourcesObject(java.lang.Integer);

  public abstract A withResourceMetricStatusObject(io.dekorate.deps.kubernetes.api.model.ResourceMetricStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ResourceMetricStatusObjectNested<A> withNewResourceMetricStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ResourceMetricStatusObjectNested<A> withNewResourceMetricStatusObjectLike(io.dekorate.deps.kubernetes.api.model.ResourceMetricStatus);

  public abstract A withTagImportPolicyObject(io.dekorate.deps.openshift.api.model.TagImportPolicy);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TagImportPolicyObjectNested<A> withNewTagImportPolicyObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TagImportPolicyObjectNested<A> withNewTagImportPolicyObjectLike(io.dekorate.deps.openshift.api.model.TagImportPolicy);

  public abstract A withNewTagImportPolicyObject(java.lang.Boolean, java.lang.Boolean);

  public abstract A withImageStreamTagObject(io.dekorate.deps.openshift.api.model.ImageStreamTag);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageStreamTagObjectNested<A> withNewImageStreamTagObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageStreamTagObjectNested<A> withNewImageStreamTagObjectLike(io.dekorate.deps.openshift.api.model.ImageStreamTag);

  public abstract A withVolumeErrorObject(io.dekorate.deps.kubernetes.api.model.storage.VolumeError);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$VolumeErrorObjectNested<A> withNewVolumeErrorObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$VolumeErrorObjectNested<A> withNewVolumeErrorObjectLike(io.dekorate.deps.kubernetes.api.model.storage.VolumeError);

  public abstract A withNewVolumeErrorObject(java.lang.String, java.lang.String);

  public abstract A withStatefulSetConditionObject(io.dekorate.deps.kubernetes.api.model.apps.StatefulSetCondition);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$StatefulSetConditionObjectNested<A> withNewStatefulSetConditionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$StatefulSetConditionObjectNested<A> withNewStatefulSetConditionObjectLike(io.dekorate.deps.kubernetes.api.model.apps.StatefulSetCondition);

  public abstract A withNewStatefulSetConditionObject(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract A withKeyToPathObject(io.dekorate.deps.kubernetes.api.model.KeyToPath);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$KeyToPathObjectNested<A> withNewKeyToPathObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$KeyToPathObjectNested<A> withNewKeyToPathObjectLike(io.dekorate.deps.kubernetes.api.model.KeyToPath);

  public abstract A withNewKeyToPathObject(java.lang.String, java.lang.Integer, java.lang.String);

  public abstract A withRoutePortObject(io.dekorate.deps.openshift.api.model.RoutePort);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RoutePortObjectNested<A> withNewRoutePortObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RoutePortObjectNested<A> withNewRoutePortObjectLike(io.dekorate.deps.openshift.api.model.RoutePort);

  public abstract A withFlexPersistentVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.FlexPersistentVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$FlexPersistentVolumeSourceObjectNested<A> withNewFlexPersistentVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$FlexPersistentVolumeSourceObjectNested<A> withNewFlexPersistentVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.FlexPersistentVolumeSource);

  public abstract A withJSONSchemaPropsOrBoolObject(io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsOrBool);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$JSONSchemaPropsOrBoolObjectNested<A> withNewJSONSchemaPropsOrBoolObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$JSONSchemaPropsOrBoolObjectNested<A> withNewJSONSchemaPropsOrBoolObjectLike(io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsOrBool);

  public abstract A withGroupObject(io.dekorate.deps.openshift.api.model.Group);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$GroupObjectNested<A> withNewGroupObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$GroupObjectNested<A> withNewGroupObjectLike(io.dekorate.deps.openshift.api.model.Group);

  public abstract A withScaleSpecObject(io.dekorate.deps.kubernetes.api.model.v1.ScaleSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ScaleSpecObjectNested<A> withNewScaleSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ScaleSpecObjectNested<A> withNewScaleSpecObjectLike(io.dekorate.deps.kubernetes.api.model.v1.ScaleSpec);

  public abstract A withNewScaleSpecObject(java.lang.Integer);

  public abstract A withBuildTriggerCauseObject(io.dekorate.deps.openshift.api.model.BuildTriggerCause);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildTriggerCauseObjectNested<A> withNewBuildTriggerCauseObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildTriggerCauseObjectNested<A> withNewBuildTriggerCauseObjectLike(io.dekorate.deps.openshift.api.model.BuildTriggerCause);

  public abstract A withNamespaceListObject(io.dekorate.deps.kubernetes.api.model.NamespaceList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NamespaceListObjectNested<A> withNewNamespaceListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NamespaceListObjectNested<A> withNewNamespaceListObjectLike(io.dekorate.deps.kubernetes.api.model.NamespaceList);

  public abstract A withPodDisruptionBudgetStatusObject(io.dekorate.deps.kubernetes.api.model.policy.PodDisruptionBudgetStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodDisruptionBudgetStatusObjectNested<A> withNewPodDisruptionBudgetStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodDisruptionBudgetStatusObjectNested<A> withNewPodDisruptionBudgetStatusObjectLike(io.dekorate.deps.kubernetes.api.model.policy.PodDisruptionBudgetStatus);

  public abstract A withPodDNSConfigObject(io.dekorate.deps.kubernetes.api.model.PodDNSConfig);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodDNSConfigObjectNested<A> withNewPodDNSConfigObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodDNSConfigObjectNested<A> withNewPodDNSConfigObjectLike(io.dekorate.deps.kubernetes.api.model.PodDNSConfig);

  public abstract A withHorizontalPodAutoscalerSpecObject(io.dekorate.deps.kubernetes.api.model.HorizontalPodAutoscalerSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$HorizontalPodAutoscalerSpecObjectNested<A> withNewHorizontalPodAutoscalerSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$HorizontalPodAutoscalerSpecObjectNested<A> withNewHorizontalPodAutoscalerSpecObjectLike(io.dekorate.deps.kubernetes.api.model.HorizontalPodAutoscalerSpec);

  public abstract A withNodeListObject(io.dekorate.deps.kubernetes.api.model.NodeList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NodeListObjectNested<A> withNewNodeListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NodeListObjectNested<A> withNewNodeListObjectLike(io.dekorate.deps.kubernetes.api.model.NodeList);

  public abstract A withContainerMetricsObject(io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.ContainerMetrics);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ContainerMetricsObjectNested<A> withNewContainerMetricsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ContainerMetricsObjectNested<A> withNewContainerMetricsObjectLike(io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.ContainerMetrics);

  public abstract A withImageSignatureObject(io.dekorate.deps.openshift.api.model.ImageSignature);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageSignatureObjectNested<A> withNewImageSignatureObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageSignatureObjectNested<A> withNewImageSignatureObjectLike(io.dekorate.deps.openshift.api.model.ImageSignature);

  public abstract A withScaleObject(io.dekorate.deps.kubernetes.api.model.v1.Scale);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ScaleObjectNested<A> withNewScaleObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ScaleObjectNested<A> withNewScaleObjectLike(io.dekorate.deps.kubernetes.api.model.v1.Scale);

  public abstract A withEnvVarSourceObject(io.dekorate.deps.kubernetes.api.model.EnvVarSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EnvVarSourceObjectNested<A> withNewEnvVarSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EnvVarSourceObjectNested<A> withNewEnvVarSourceObjectLike(io.dekorate.deps.kubernetes.api.model.EnvVarSource);

  public abstract A withVolumeProjectionObject(io.dekorate.deps.kubernetes.api.model.VolumeProjection);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$VolumeProjectionObjectNested<A> withNewVolumeProjectionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$VolumeProjectionObjectNested<A> withNewVolumeProjectionObjectLike(io.dekorate.deps.kubernetes.api.model.VolumeProjection);

  public abstract A withResourceQuotaObject(io.dekorate.deps.kubernetes.api.model.ResourceQuota);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ResourceQuotaObjectNested<A> withNewResourceQuotaObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ResourceQuotaObjectNested<A> withNewResourceQuotaObjectLike(io.dekorate.deps.kubernetes.api.model.ResourceQuota);

  public abstract A withDeploymentStrategyObject(io.dekorate.deps.kubernetes.api.model.apps.DeploymentStrategy);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DeploymentStrategyObjectNested<A> withNewDeploymentStrategyObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DeploymentStrategyObjectNested<A> withNewDeploymentStrategyObjectLike(io.dekorate.deps.kubernetes.api.model.apps.DeploymentStrategy);

  public abstract A withMetricIdentifierObject(io.dekorate.deps.kubernetes.api.model.MetricIdentifier);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$MetricIdentifierObjectNested<A> withNewMetricIdentifierObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$MetricIdentifierObjectNested<A> withNewMetricIdentifierObjectLike(io.dekorate.deps.kubernetes.api.model.MetricIdentifier);

  public abstract A withOAuthAccessTokenListObject(io.dekorate.deps.openshift.api.model.OAuthAccessTokenList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OAuthAccessTokenListObjectNested<A> withNewOAuthAccessTokenListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OAuthAccessTokenListObjectNested<A> withNewOAuthAccessTokenListObjectLike(io.dekorate.deps.openshift.api.model.OAuthAccessTokenList);

  public abstract A withNodeSelectorTermObject(io.dekorate.deps.kubernetes.api.model.NodeSelectorTerm);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NodeSelectorTermObjectNested<A> withNewNodeSelectorTermObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NodeSelectorTermObjectNested<A> withNewNodeSelectorTermObjectLike(io.dekorate.deps.kubernetes.api.model.NodeSelectorTerm);

  public abstract A withSupplementalGroupsStrategyOptionsObject(io.dekorate.deps.openshift.api.model.SupplementalGroupsStrategyOptions);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ModelSupplementalGroupsStrategyOptionsObjectNested<A> withNewModelSupplementalGroupsStrategyOptionsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ModelSupplementalGroupsStrategyOptionsObjectNested<A> withNewSupplementalGroupsStrategyOptionsObjectLike(io.dekorate.deps.openshift.api.model.SupplementalGroupsStrategyOptions);

  public abstract A withScaleIOPersistentVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.ScaleIOPersistentVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ScaleIOPersistentVolumeSourceObjectNested<A> withNewScaleIOPersistentVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ScaleIOPersistentVolumeSourceObjectNested<A> withNewScaleIOPersistentVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.ScaleIOPersistentVolumeSource);

  public abstract A withListOptionsObject(io.dekorate.deps.kubernetes.api.model.ListOptions);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ListOptionsObjectNested<A> withNewListOptionsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ListOptionsObjectNested<A> withNewListOptionsObjectLike(io.dekorate.deps.kubernetes.api.model.ListOptions);

  public abstract A withWeightedPodAffinityTermObject(io.dekorate.deps.kubernetes.api.model.WeightedPodAffinityTerm);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$WeightedPodAffinityTermObjectNested<A> withNewWeightedPodAffinityTermObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$WeightedPodAffinityTermObjectNested<A> withNewWeightedPodAffinityTermObjectLike(io.dekorate.deps.kubernetes.api.model.WeightedPodAffinityTerm);

  public abstract A withBuildRequestObject(io.dekorate.deps.openshift.api.model.BuildRequest);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildRequestObjectNested<A> withNewBuildRequestObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildRequestObjectNested<A> withNewBuildRequestObjectLike(io.dekorate.deps.openshift.api.model.BuildRequest);

  public abstract A withRollingUpdateStatefulSetStrategyObject(io.dekorate.deps.kubernetes.api.model.apps.RollingUpdateStatefulSetStrategy);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RollingUpdateStatefulSetStrategyObjectNested<A> withNewRollingUpdateStatefulSetStrategyObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RollingUpdateStatefulSetStrategyObjectNested<A> withNewRollingUpdateStatefulSetStrategyObjectLike(io.dekorate.deps.kubernetes.api.model.apps.RollingUpdateStatefulSetStrategy);

  public abstract A withNewRollingUpdateStatefulSetStrategyObject(java.lang.Integer);

  public abstract A withServiceReferenceObject(io.dekorate.deps.kubernetes.api.model.apiextensions.ServiceReference);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ApiextensionsServiceReferenceObjectNested<A> withNewApiextensionsServiceReferenceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ApiextensionsServiceReferenceObjectNested<A> withNewServiceReferenceObjectLike(io.dekorate.deps.kubernetes.api.model.apiextensions.ServiceReference);

  public abstract A withNewApiextensionsServiceReferenceObject(java.lang.String, java.lang.String, java.lang.String, java.lang.Integer);

  public abstract A withNodeSystemInfoObject(io.dekorate.deps.kubernetes.api.model.NodeSystemInfo);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NodeSystemInfoObjectNested<A> withNewNodeSystemInfoObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NodeSystemInfoObjectNested<A> withNewNodeSystemInfoObjectLike(io.dekorate.deps.kubernetes.api.model.NodeSystemInfo);

  public abstract A withAuthProviderConfigObject(io.dekorate.deps.kubernetes.api.model.AuthProviderConfig);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$AuthProviderConfigObjectNested<A> withNewAuthProviderConfigObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$AuthProviderConfigObjectNested<A> withNewAuthProviderConfigObjectLike(io.dekorate.deps.kubernetes.api.model.AuthProviderConfig);

  public abstract A withRouteListObject(io.dekorate.deps.openshift.api.model.RouteList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RouteListObjectNested<A> withNewRouteListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RouteListObjectNested<A> withNewRouteListObjectLike(io.dekorate.deps.openshift.api.model.RouteList);

  public abstract A withVolumeDeviceObject(io.dekorate.deps.kubernetes.api.model.VolumeDevice);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$VolumeDeviceObjectNested<A> withNewVolumeDeviceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$VolumeDeviceObjectNested<A> withNewVolumeDeviceObjectLike(io.dekorate.deps.kubernetes.api.model.VolumeDevice);

  public abstract A withNewVolumeDeviceObject(java.lang.String, java.lang.String);

  public abstract A withDaemonSetObject(io.dekorate.deps.kubernetes.api.model.apps.DaemonSet);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DaemonSetObjectNested<A> withNewDaemonSetObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DaemonSetObjectNested<A> withNewDaemonSetObjectLike(io.dekorate.deps.kubernetes.api.model.apps.DaemonSet);

  public abstract A withTokenReviewSpecObject(io.dekorate.deps.kubernetes.api.model.authentication.TokenReviewSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TokenReviewSpecObjectNested<A> withNewTokenReviewSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TokenReviewSpecObjectNested<A> withNewTokenReviewSpecObjectLike(io.dekorate.deps.kubernetes.api.model.authentication.TokenReviewSpec);

  public abstract A withDeploymentDetailsObject(io.dekorate.deps.openshift.api.model.DeploymentDetails);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DeploymentDetailsObjectNested<A> withNewDeploymentDetailsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DeploymentDetailsObjectNested<A> withNewDeploymentDetailsObjectLike(io.dekorate.deps.openshift.api.model.DeploymentDetails);

  public abstract A withNFSVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.NFSVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NFSVolumeSourceObjectNested<A> withNewNFSVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NFSVolumeSourceObjectNested<A> withNewNFSVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.NFSVolumeSource);

  public abstract A withNewNFSVolumeSourceObject(java.lang.String, java.lang.Boolean, java.lang.String);

  public abstract A withDeploymentConditionObject(io.dekorate.deps.kubernetes.api.model.apps.DeploymentCondition);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DeploymentConditionObjectNested<A> withNewDeploymentConditionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DeploymentConditionObjectNested<A> withNewDeploymentConditionObjectLike(io.dekorate.deps.kubernetes.api.model.apps.DeploymentCondition);

  public abstract A withImageStreamObject(io.dekorate.deps.openshift.api.model.ImageStream);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageStreamObjectNested<A> withNewImageStreamObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageStreamObjectNested<A> withNewImageStreamObjectLike(io.dekorate.deps.openshift.api.model.ImageStream);

  public abstract A withVolumeObject(io.dekorate.deps.kubernetes.api.model.Volume);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$VolumeObjectNested<A> withNewVolumeObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$VolumeObjectNested<A> withNewVolumeObjectLike(io.dekorate.deps.kubernetes.api.model.Volume);

  public abstract A withClusterObject(io.dekorate.deps.kubernetes.api.model.Cluster);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ClusterObjectNested<A> withNewClusterObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ClusterObjectNested<A> withNewClusterObjectLike(io.dekorate.deps.kubernetes.api.model.Cluster);

  public abstract A withStorageOSVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.StorageOSVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$StorageOSVolumeSourceObjectNested<A> withNewStorageOSVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$StorageOSVolumeSourceObjectNested<A> withNewStorageOSVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.StorageOSVolumeSource);

  public abstract A withBuildListObject(io.dekorate.deps.openshift.api.model.BuildList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildListObjectNested<A> withNewBuildListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildListObjectNested<A> withNewBuildListObjectLike(io.dekorate.deps.openshift.api.model.BuildList);

  public abstract A withTemplateListObject(io.dekorate.deps.openshift.api.model.TemplateList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TemplateListObjectNested<A> withNewTemplateListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TemplateListObjectNested<A> withNewTemplateListObjectLike(io.dekorate.deps.openshift.api.model.TemplateList);

  public abstract A withKubernetesListObject(io.dekorate.deps.kubernetes.api.model.KubernetesList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$KubernetesListObjectNested<A> withNewKubernetesListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$KubernetesListObjectNested<A> withNewKubernetesListObjectLike(io.dekorate.deps.kubernetes.api.model.KubernetesList);

  public abstract A withCustomResourceDefinitionVersionObject(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceDefinitionVersion);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CustomResourceDefinitionVersionObjectNested<A> withNewCustomResourceDefinitionVersionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CustomResourceDefinitionVersionObjectNested<A> withNewCustomResourceDefinitionVersionObjectLike(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceDefinitionVersion);

  public abstract A withProjectSpecObject(io.dekorate.deps.openshift.api.model.ProjectSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ProjectSpecObjectNested<A> withNewProjectSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ProjectSpecObjectNested<A> withNewProjectSpecObjectLike(io.dekorate.deps.openshift.api.model.ProjectSpec);

  public abstract A withHTTPHeaderObject(io.dekorate.deps.kubernetes.api.model.HTTPHeader);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$HTTPHeaderObjectNested<A> withNewHTTPHeaderObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$HTTPHeaderObjectNested<A> withNewHTTPHeaderObjectLike(io.dekorate.deps.kubernetes.api.model.HTTPHeader);

  public abstract A withNewHTTPHeaderObject(java.lang.String, java.lang.String);

  public abstract A withCapabilitiesObject(io.dekorate.deps.kubernetes.api.model.Capabilities);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CapabilitiesObjectNested<A> withNewCapabilitiesObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CapabilitiesObjectNested<A> withNewCapabilitiesObjectLike(io.dekorate.deps.kubernetes.api.model.Capabilities);

  public abstract A withWatchEventObject(io.dekorate.deps.kubernetes.api.model.WatchEvent);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$WatchEventObjectNested<A> withNewWatchEventObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$WatchEventObjectNested<A> withNewWatchEventObjectLike(io.dekorate.deps.kubernetes.api.model.WatchEvent);

  public abstract A withObjectReferenceObject(io.dekorate.deps.kubernetes.api.model.ObjectReference);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ObjectReferenceObjectNested<A> withNewObjectReferenceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ObjectReferenceObjectNested<A> withNewObjectReferenceObjectLike(io.dekorate.deps.kubernetes.api.model.ObjectReference);

  public abstract A withSignatureIssuerObject(io.dekorate.deps.openshift.api.model.SignatureIssuer);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SignatureIssuerObjectNested<A> withNewSignatureIssuerObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SignatureIssuerObjectNested<A> withNewSignatureIssuerObjectLike(io.dekorate.deps.openshift.api.model.SignatureIssuer);

  public abstract A withNewSignatureIssuerObject(java.lang.String, java.lang.String);

  public abstract A withImageLayerObject(io.dekorate.deps.openshift.api.model.ImageLayer);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageLayerObjectNested<A> withNewImageLayerObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageLayerObjectNested<A> withNewImageLayerObjectLike(io.dekorate.deps.openshift.api.model.ImageLayer);

  public abstract A withNewImageLayerObject(java.lang.String, java.lang.String, java.lang.Long);

  public abstract A withSecretProjectionObject(io.dekorate.deps.kubernetes.api.model.SecretProjection);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SecretProjectionObjectNested<A> withNewSecretProjectionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SecretProjectionObjectNested<A> withNewSecretProjectionObjectLike(io.dekorate.deps.kubernetes.api.model.SecretProjection);

  public abstract A withWebhookClientConfigObject(io.dekorate.deps.kubernetes.api.model.apiextensions.WebhookClientConfig);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ApiextensionsWebhookClientConfigObjectNested<A> withNewApiextensionsWebhookClientConfigObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ApiextensionsWebhookClientConfigObjectNested<A> withNewWebhookClientConfigObjectLike(io.dekorate.deps.kubernetes.api.model.apiextensions.WebhookClientConfig);

  public abstract A withGlusterfsVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.GlusterfsVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$GlusterfsVolumeSourceObjectNested<A> withNewGlusterfsVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$GlusterfsVolumeSourceObjectNested<A> withNewGlusterfsVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.GlusterfsVolumeSource);

  public abstract A withNewGlusterfsVolumeSourceObject(java.lang.String, java.lang.String, java.lang.Boolean);

  public abstract A withNamespaceStatusObject(io.dekorate.deps.kubernetes.api.model.NamespaceStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NamespaceStatusObjectNested<A> withNewNamespaceStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NamespaceStatusObjectNested<A> withNewNamespaceStatusObjectLike(io.dekorate.deps.kubernetes.api.model.NamespaceStatus);

  public abstract A withManagedFieldsEntryObject(io.dekorate.deps.kubernetes.api.model.ManagedFieldsEntry);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ManagedFieldsEntryObjectNested<A> withNewManagedFieldsEntryObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ManagedFieldsEntryObjectNested<A> withNewManagedFieldsEntryObjectLike(io.dekorate.deps.kubernetes.api.model.ManagedFieldsEntry);

  public abstract A withCronJobSpecObject(io.dekorate.deps.kubernetes.api.model.batch.CronJobSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CronJobSpecObjectNested<A> withNewCronJobSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CronJobSpecObjectNested<A> withNewCronJobSpecObjectLike(io.dekorate.deps.kubernetes.api.model.batch.CronJobSpec);

  public abstract A withOpenshiftRoleObject(io.dekorate.deps.openshift.api.model.OpenshiftRole);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OpenshiftRoleObjectNested<A> withNewOpenshiftRoleObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OpenshiftRoleObjectNested<A> withNewOpenshiftRoleObjectLike(io.dekorate.deps.openshift.api.model.OpenshiftRole);

  public abstract A withCustomResourceColumnDefinitionObject(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceColumnDefinition);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CustomResourceColumnDefinitionObjectNested<A> withNewCustomResourceColumnDefinitionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CustomResourceColumnDefinitionObjectNested<A> withNewCustomResourceColumnDefinitionObjectLike(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceColumnDefinition);

  public abstract A withImageStreamSpecObject(io.dekorate.deps.openshift.api.model.ImageStreamSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageStreamSpecObjectNested<A> withNewImageStreamSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageStreamSpecObjectNested<A> withNewImageStreamSpecObjectLike(io.dekorate.deps.openshift.api.model.ImageStreamSpec);

  public abstract A withSecretEnvSourceObject(io.dekorate.deps.kubernetes.api.model.SecretEnvSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SecretEnvSourceObjectNested<A> withNewSecretEnvSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SecretEnvSourceObjectNested<A> withNewSecretEnvSourceObjectLike(io.dekorate.deps.kubernetes.api.model.SecretEnvSource);

  public abstract A withNewSecretEnvSourceObject(java.lang.String, java.lang.Boolean);

  public abstract A withOAuthClientObject(io.dekorate.deps.openshift.api.model.OAuthClient);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OAuthClientObjectNested<A> withNewOAuthClientObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OAuthClientObjectNested<A> withNewOAuthClientObjectLike(io.dekorate.deps.openshift.api.model.OAuthClient);

  public abstract A withAWSElasticBlockStoreVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.AWSElasticBlockStoreVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$AWSElasticBlockStoreVolumeSourceObjectNested<A> withNewAWSElasticBlockStoreVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$AWSElasticBlockStoreVolumeSourceObjectNested<A> withNewAWSElasticBlockStoreVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.AWSElasticBlockStoreVolumeSource);

  public abstract A withNewAWSElasticBlockStoreVolumeSourceObject(java.lang.String, java.lang.Integer, java.lang.Boolean, java.lang.String);

  public abstract A withIdentityObject(io.dekorate.deps.openshift.api.model.Identity);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$IdentityObjectNested<A> withNewIdentityObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$IdentityObjectNested<A> withNewIdentityObjectLike(io.dekorate.deps.openshift.api.model.Identity);

  public abstract A withMetricStatusObject(io.dekorate.deps.kubernetes.api.model.MetricStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$MetricStatusObjectNested<A> withNewMetricStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$MetricStatusObjectNested<A> withNewMetricStatusObjectLike(io.dekorate.deps.kubernetes.api.model.MetricStatus);

  public abstract A withServiceAccountRestrictionObject(io.dekorate.deps.openshift.api.model.ServiceAccountRestriction);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ServiceAccountRestrictionObjectNested<A> withNewServiceAccountRestrictionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ServiceAccountRestrictionObjectNested<A> withNewServiceAccountRestrictionObjectLike(io.dekorate.deps.openshift.api.model.ServiceAccountRestriction);

  public abstract A withGenericWebHookCauseObject(io.dekorate.deps.openshift.api.model.GenericWebHookCause);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$GenericWebHookCauseObjectNested<A> withNewGenericWebHookCauseObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$GenericWebHookCauseObjectNested<A> withNewGenericWebHookCauseObjectLike(io.dekorate.deps.openshift.api.model.GenericWebHookCause);

  public abstract A withLimitRangeObject(io.dekorate.deps.kubernetes.api.model.LimitRange);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$LimitRangeObjectNested<A> withNewLimitRangeObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$LimitRangeObjectNested<A> withNewLimitRangeObjectLike(io.dekorate.deps.kubernetes.api.model.LimitRange);

  public abstract A withClusterVersionObject(io.dekorate.deps.openshift.api.model.ClusterVersion);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ClusterVersionObjectNested<A> withNewClusterVersionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ClusterVersionObjectNested<A> withNewClusterVersionObjectLike(io.dekorate.deps.openshift.api.model.ClusterVersion);

  public abstract A withCSIDriverObject(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSIDriver);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CSIDriverObjectNested<A> withNewCSIDriverObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CSIDriverObjectNested<A> withNewCSIDriverObjectLike(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSIDriver);

  public abstract A withSecretLocalReferenceObject(io.dekorate.deps.openshift.api.model.SecretLocalReference);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SecretLocalReferenceObjectNested<A> withNewSecretLocalReferenceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SecretLocalReferenceObjectNested<A> withNewSecretLocalReferenceObjectLike(io.dekorate.deps.openshift.api.model.SecretLocalReference);

  public abstract A withNewSecretLocalReferenceObject(java.lang.String);

  public abstract A withUserRestrictionObject(io.dekorate.deps.openshift.api.model.UserRestriction);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$UserRestrictionObjectNested<A> withNewUserRestrictionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$UserRestrictionObjectNested<A> withNewUserRestrictionObjectLike(io.dekorate.deps.openshift.api.model.UserRestriction);

  public abstract A withCSIPersistentVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.CSIPersistentVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CSIPersistentVolumeSourceObjectNested<A> withNewCSIPersistentVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CSIPersistentVolumeSourceObjectNested<A> withNewCSIPersistentVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.CSIPersistentVolumeSource);

  public abstract A withAllowedFlexVolumeObject(io.dekorate.deps.kubernetes.api.model.policy.AllowedFlexVolume);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$AllowedFlexVolumeObjectNested<A> withNewAllowedFlexVolumeObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$AllowedFlexVolumeObjectNested<A> withNewAllowedFlexVolumeObjectLike(io.dekorate.deps.kubernetes.api.model.policy.AllowedFlexVolume);

  public abstract A withNewAllowedFlexVolumeObject(java.lang.String);

  public abstract A withImageStreamImportObject(io.dekorate.deps.openshift.api.model.ImageStreamImport);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageStreamImportObjectNested<A> withNewImageStreamImportObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageStreamImportObjectNested<A> withNewImageStreamImportObjectLike(io.dekorate.deps.openshift.api.model.ImageStreamImport);

  public abstract A withReplicaSetSpecObject(io.dekorate.deps.kubernetes.api.model.apps.ReplicaSetSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ReplicaSetSpecObjectNested<A> withNewReplicaSetSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ReplicaSetSpecObjectNested<A> withNewReplicaSetSpecObjectLike(io.dekorate.deps.kubernetes.api.model.apps.ReplicaSetSpec);

  public abstract A withExternalMetricSourceObject(io.dekorate.deps.kubernetes.api.model.ExternalMetricSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ExternalMetricSourceObjectNested<A> withNewExternalMetricSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ExternalMetricSourceObjectNested<A> withNewExternalMetricSourceObjectLike(io.dekorate.deps.kubernetes.api.model.ExternalMetricSource);

  public abstract A withResourceRequirementsObject(io.dekorate.deps.kubernetes.api.model.ResourceRequirements);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ResourceRequirementsObjectNested<A> withNewResourceRequirementsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ResourceRequirementsObjectNested<A> withNewResourceRequirementsObjectLike(io.dekorate.deps.kubernetes.api.model.ResourceRequirements);

  public abstract A withGitHubWebHookCauseObject(io.dekorate.deps.openshift.api.model.GitHubWebHookCause);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$GitHubWebHookCauseObjectNested<A> withNewGitHubWebHookCauseObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$GitHubWebHookCauseObjectNested<A> withNewGitHubWebHookCauseObjectLike(io.dekorate.deps.openshift.api.model.GitHubWebHookCause);

  public abstract A withSelfSubjectAccessReviewSpecObject(io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectAccessReviewSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SelfSubjectAccessReviewSpecObjectNested<A> withNewSelfSubjectAccessReviewSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SelfSubjectAccessReviewSpecObjectNested<A> withNewSelfSubjectAccessReviewSpecObjectLike(io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectAccessReviewSpec);

  public abstract A withPersistentVolumeClaimListObject(io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PersistentVolumeClaimListObjectNested<A> withNewPersistentVolumeClaimListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PersistentVolumeClaimListObjectNested<A> withNewPersistentVolumeClaimListObjectLike(io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimList);

  public abstract A withOAuthClientListObject(io.dekorate.deps.openshift.api.model.OAuthClientList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OAuthClientListObjectNested<A> withNewOAuthClientListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OAuthClientListObjectNested<A> withNewOAuthClientListObjectLike(io.dekorate.deps.openshift.api.model.OAuthClientList);

  public abstract A withControllerRevisionObject(io.dekorate.deps.kubernetes.api.model.apps.ControllerRevision);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ControllerRevisionObjectNested<A> withNewControllerRevisionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ControllerRevisionObjectNested<A> withNewControllerRevisionObjectLike(io.dekorate.deps.kubernetes.api.model.apps.ControllerRevision);

  public abstract A withOpenshiftRoleBindingListObject(io.dekorate.deps.openshift.api.model.OpenshiftRoleBindingList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OpenshiftRoleBindingListObjectNested<A> withNewOpenshiftRoleBindingListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OpenshiftRoleBindingListObjectNested<A> withNewOpenshiftRoleBindingListObjectLike(io.dekorate.deps.openshift.api.model.OpenshiftRoleBindingList);

  public abstract A withFSGroupStrategyOptionsObject(io.dekorate.deps.kubernetes.api.model.policy.FSGroupStrategyOptions);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$FSGroupStrategyOptionsObjectNested<A> withNewFSGroupStrategyOptionsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$FSGroupStrategyOptionsObjectNested<A> withNewFSGroupStrategyOptionsObjectLike(io.dekorate.deps.kubernetes.api.model.policy.FSGroupStrategyOptions);

  public abstract A withResourceMetricSourceObject(io.dekorate.deps.kubernetes.api.model.ResourceMetricSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ResourceMetricSourceObjectNested<A> withNewResourceMetricSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ResourceMetricSourceObjectNested<A> withNewResourceMetricSourceObjectLike(io.dekorate.deps.kubernetes.api.model.ResourceMetricSource);

  public abstract A withReplicationControllerStatusObject(io.dekorate.deps.kubernetes.api.model.ReplicationControllerStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ReplicationControllerStatusObjectNested<A> withNewReplicationControllerStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ReplicationControllerStatusObjectNested<A> withNewReplicationControllerStatusObjectLike(io.dekorate.deps.kubernetes.api.model.ReplicationControllerStatus);

  public abstract A withIngressListObject(io.dekorate.deps.kubernetes.api.model.extensions.IngressList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$IngressListObjectNested<A> withNewIngressListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$IngressListObjectNested<A> withNewIngressListObjectLike(io.dekorate.deps.kubernetes.api.model.extensions.IngressList);

  public abstract A withMicroTimeObject(io.dekorate.deps.kubernetes.api.model.MicroTime);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$MicroTimeObjectNested<A> withNewMicroTimeObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$MicroTimeObjectNested<A> withNewMicroTimeObjectLike(io.dekorate.deps.kubernetes.api.model.MicroTime);

  public abstract A withNewMicroTimeObject(java.lang.String);

  public abstract A withValidatingWebhookConfigurationListObject(io.dekorate.deps.kubernetes.api.model.admissionregistration.ValidatingWebhookConfigurationList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ValidatingWebhookConfigurationListObjectNested<A> withNewValidatingWebhookConfigurationListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ValidatingWebhookConfigurationListObjectNested<A> withNewValidatingWebhookConfigurationListObjectLike(io.dekorate.deps.kubernetes.api.model.admissionregistration.ValidatingWebhookConfigurationList);

  public abstract A withPolicyRuleObject(io.dekorate.deps.kubernetes.api.model.rbac.PolicyRule);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PolicyRuleObjectNested<A> withNewPolicyRuleObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PolicyRuleObjectNested<A> withNewPolicyRuleObjectLike(io.dekorate.deps.kubernetes.api.model.rbac.PolicyRule);

  public abstract A withLifecycleObject(io.dekorate.deps.kubernetes.api.model.Lifecycle);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$LifecycleObjectNested<A> withNewLifecycleObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$LifecycleObjectNested<A> withNewLifecycleObjectLike(io.dekorate.deps.kubernetes.api.model.Lifecycle);

  public abstract A withRepositoryImportSpecObject(io.dekorate.deps.openshift.api.model.RepositoryImportSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RepositoryImportSpecObjectNested<A> withNewRepositoryImportSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RepositoryImportSpecObjectNested<A> withNewRepositoryImportSpecObjectLike(io.dekorate.deps.openshift.api.model.RepositoryImportSpec);

  public abstract A withPortworxVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.PortworxVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PortworxVolumeSourceObjectNested<A> withNewPortworxVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PortworxVolumeSourceObjectNested<A> withNewPortworxVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.PortworxVolumeSource);

  public abstract A withNewPortworxVolumeSourceObject(java.lang.String, java.lang.Boolean, java.lang.String);

  public abstract A withEventSourceObject(io.dekorate.deps.kubernetes.api.model.EventSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EventSourceObjectNested<A> withNewEventSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EventSourceObjectNested<A> withNewEventSourceObjectLike(io.dekorate.deps.kubernetes.api.model.EventSource);

  public abstract A withNewEventSourceObject(java.lang.String, java.lang.String);

  public abstract A withImageStreamImportStatusObject(io.dekorate.deps.openshift.api.model.ImageStreamImportStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageStreamImportStatusObjectNested<A> withNewImageStreamImportStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageStreamImportStatusObjectNested<A> withNewImageStreamImportStatusObjectLike(io.dekorate.deps.openshift.api.model.ImageStreamImportStatus);

  public abstract A withHTTPIngressRuleValueObject(io.dekorate.deps.kubernetes.api.model.extensions.HTTPIngressRuleValue);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$HTTPIngressRuleValueObjectNested<A> withNewHTTPIngressRuleValueObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$HTTPIngressRuleValueObjectNested<A> withNewHTTPIngressRuleValueObjectLike(io.dekorate.deps.kubernetes.api.model.extensions.HTTPIngressRuleValue);

  public abstract A withHostPortRangeObject(io.dekorate.deps.kubernetes.api.model.policy.HostPortRange);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$HostPortRangeObjectNested<A> withNewHostPortRangeObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$HostPortRangeObjectNested<A> withNewHostPortRangeObjectLike(io.dekorate.deps.kubernetes.api.model.policy.HostPortRange);

  public abstract A withNewHostPortRangeObject(java.lang.Integer, java.lang.Integer);

  public abstract A withOpenshiftRoleBindingRestrictionObject(io.dekorate.deps.openshift.api.model.OpenshiftRoleBindingRestriction);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OpenshiftRoleBindingRestrictionObjectNested<A> withNewOpenshiftRoleBindingRestrictionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OpenshiftRoleBindingRestrictionObjectNested<A> withNewOpenshiftRoleBindingRestrictionObjectLike(io.dekorate.deps.openshift.api.model.OpenshiftRoleBindingRestriction);

  public abstract A withComponentConditionObject(io.dekorate.deps.kubernetes.api.model.ComponentCondition);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ComponentConditionObjectNested<A> withNewComponentConditionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ComponentConditionObjectNested<A> withNewComponentConditionObjectLike(io.dekorate.deps.kubernetes.api.model.ComponentCondition);

  public abstract A withNewComponentConditionObject(java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract A withReplicationControllerSpecObject(io.dekorate.deps.kubernetes.api.model.ReplicationControllerSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ReplicationControllerSpecObjectNested<A> withNewReplicationControllerSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ReplicationControllerSpecObjectNested<A> withNewReplicationControllerSpecObjectLike(io.dekorate.deps.kubernetes.api.model.ReplicationControllerSpec);

  public abstract A withDeploymentTriggerImageChangeParamsObject(io.dekorate.deps.openshift.api.model.DeploymentTriggerImageChangeParams);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DeploymentTriggerImageChangeParamsObjectNested<A> withNewDeploymentTriggerImageChangeParamsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DeploymentTriggerImageChangeParamsObjectNested<A> withNewDeploymentTriggerImageChangeParamsObjectLike(io.dekorate.deps.openshift.api.model.DeploymentTriggerImageChangeParams);

  public abstract A withWebhookClientConfigObject(io.dekorate.deps.kubernetes.api.model.admissionregistration.WebhookClientConfig);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$WebhookClientConfigObjectNested<A> withNewWebhookClientConfigObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$WebhookClientConfigObjectNested<A> withNewWebhookClientConfigObjectLike(io.dekorate.deps.kubernetes.api.model.admissionregistration.WebhookClientConfig);

  public abstract A withRoleBindingObject(io.dekorate.deps.kubernetes.api.model.rbac.RoleBinding);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RoleBindingObjectNested<A> withNewRoleBindingObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RoleBindingObjectNested<A> withNewRoleBindingObjectLike(io.dekorate.deps.kubernetes.api.model.rbac.RoleBinding);

  public abstract A withPodPresetObject(io.dekorate.deps.kubernetes.api.model.settings.PodPreset);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodPresetObjectNested<A> withNewPodPresetObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodPresetObjectNested<A> withNewPodPresetObjectLike(io.dekorate.deps.kubernetes.api.model.settings.PodPreset);

  public abstract A withEmptyDirVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.EmptyDirVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EmptyDirVolumeSourceObjectNested<A> withNewEmptyDirVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EmptyDirVolumeSourceObjectNested<A> withNewEmptyDirVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.EmptyDirVolumeSource);

  public abstract A withRollingUpdateDeploymentObject(io.dekorate.deps.kubernetes.api.model.apps.RollingUpdateDeployment);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RollingUpdateDeploymentObjectNested<A> withNewRollingUpdateDeploymentObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RollingUpdateDeploymentObjectNested<A> withNewRollingUpdateDeploymentObjectLike(io.dekorate.deps.kubernetes.api.model.apps.RollingUpdateDeployment);

  public abstract A withRuntimeClassStrategyOptionsObject(io.dekorate.deps.kubernetes.api.model.policy.RuntimeClassStrategyOptions);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RuntimeClassStrategyOptionsObjectNested<A> withNewRuntimeClassStrategyOptionsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RuntimeClassStrategyOptionsObjectNested<A> withNewRuntimeClassStrategyOptionsObjectLike(io.dekorate.deps.kubernetes.api.model.policy.RuntimeClassStrategyOptions);

  public abstract A withTagImageHookObject(io.dekorate.deps.openshift.api.model.TagImageHook);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TagImageHookObjectNested<A> withNewTagImageHookObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TagImageHookObjectNested<A> withNewTagImageHookObjectLike(io.dekorate.deps.openshift.api.model.TagImageHook);

  public abstract A withRouteTargetReferenceObject(io.dekorate.deps.openshift.api.model.RouteTargetReference);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RouteTargetReferenceObjectNested<A> withNewRouteTargetReferenceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RouteTargetReferenceObjectNested<A> withNewRouteTargetReferenceObjectLike(io.dekorate.deps.openshift.api.model.RouteTargetReference);

  public abstract A withNewRouteTargetReferenceObject(java.lang.String, java.lang.String, java.lang.Integer);

  public abstract A withAzureDiskVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.AzureDiskVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$AzureDiskVolumeSourceObjectNested<A> withNewAzureDiskVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$AzureDiskVolumeSourceObjectNested<A> withNewAzureDiskVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.AzureDiskVolumeSource);

  public abstract A withInfoObject(io.dekorate.deps.kubernetes.api.model.version.Info);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$InfoObjectNested<A> withNewInfoObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$InfoObjectNested<A> withNewInfoObjectLike(io.dekorate.deps.kubernetes.api.model.version.Info);

  public abstract A withProjectObject(io.dekorate.deps.openshift.api.model.Project);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ProjectObjectNested<A> withNewProjectObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ProjectObjectNested<A> withNewProjectObjectLike(io.dekorate.deps.openshift.api.model.Project);

  public abstract A withMetricValueStatusObject(io.dekorate.deps.kubernetes.api.model.MetricValueStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$MetricValueStatusObjectNested<A> withNewMetricValueStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$MetricValueStatusObjectNested<A> withNewMetricValueStatusObjectLike(io.dekorate.deps.kubernetes.api.model.MetricValueStatus);

  public abstract A withNodeMetricsObject(io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.NodeMetrics);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NodeMetricsObjectNested<A> withNewNodeMetricsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NodeMetricsObjectNested<A> withNewNodeMetricsObjectLike(io.dekorate.deps.kubernetes.api.model.metrics.v1beta1.NodeMetrics);

  public abstract A withServiceStatusObject(io.dekorate.deps.kubernetes.api.model.ServiceStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ServiceStatusObjectNested<A> withNewServiceStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ServiceStatusObjectNested<A> withNewServiceStatusObjectLike(io.dekorate.deps.kubernetes.api.model.ServiceStatus);

  public abstract A withTaintObject(io.dekorate.deps.kubernetes.api.model.Taint);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TaintObjectNested<A> withNewTaintObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TaintObjectNested<A> withNewTaintObjectLike(io.dekorate.deps.kubernetes.api.model.Taint);

  public abstract A withNewTaintObject(java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract A withOpenshiftRoleBindingRestrictionSpecObject(io.dekorate.deps.openshift.api.model.OpenshiftRoleBindingRestrictionSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OpenshiftRoleBindingRestrictionSpecObjectNested<A> withNewOpenshiftRoleBindingRestrictionSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OpenshiftRoleBindingRestrictionSpecObjectNested<A> withNewOpenshiftRoleBindingRestrictionSpecObjectLike(io.dekorate.deps.openshift.api.model.OpenshiftRoleBindingRestrictionSpec);

  public abstract A withDeploymentConfigListObject(io.dekorate.deps.openshift.api.model.DeploymentConfigList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DeploymentConfigListObjectNested<A> withNewDeploymentConfigListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DeploymentConfigListObjectNested<A> withNewDeploymentConfigListObjectLike(io.dekorate.deps.openshift.api.model.DeploymentConfigList);

  public abstract A withBuildConfigObject(io.dekorate.deps.openshift.api.model.BuildConfig);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildConfigObjectNested<A> withNewBuildConfigObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildConfigObjectNested<A> withNewBuildConfigObjectLike(io.dekorate.deps.openshift.api.model.BuildConfig);

  public abstract A withCustomResourceDefinitionNamesObject(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceDefinitionNames);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CustomResourceDefinitionNamesObjectNested<A> withNewCustomResourceDefinitionNamesObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CustomResourceDefinitionNamesObjectNested<A> withNewCustomResourceDefinitionNamesObjectLike(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceDefinitionNames);

  public abstract A withCustomResourceConversionObject(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceConversion);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CustomResourceConversionObjectNested<A> withNewCustomResourceConversionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CustomResourceConversionObjectNested<A> withNewCustomResourceConversionObjectLike(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceConversion);

  public abstract A withImageImportStatusObject(io.dekorate.deps.openshift.api.model.ImageImportStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageImportStatusObjectNested<A> withNewImageImportStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageImportStatusObjectNested<A> withNewImageImportStatusObjectLike(io.dekorate.deps.openshift.api.model.ImageImportStatus);

  public abstract A withIngressTLSObject(io.dekorate.deps.kubernetes.api.model.extensions.IngressTLS);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$IngressTLSObjectNested<A> withNewIngressTLSObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$IngressTLSObjectNested<A> withNewIngressTLSObjectLike(io.dekorate.deps.kubernetes.api.model.extensions.IngressTLS);

  public abstract A withCustomResourceValidationObject(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceValidation);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CustomResourceValidationObjectNested<A> withNewCustomResourceValidationObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CustomResourceValidationObjectNested<A> withNewCustomResourceValidationObjectLike(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceValidation);

  public abstract A withPodDisruptionBudgetListObject(io.dekorate.deps.kubernetes.api.model.policy.PodDisruptionBudgetList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodDisruptionBudgetListObjectNested<A> withNewPodDisruptionBudgetListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodDisruptionBudgetListObjectNested<A> withNewPodDisruptionBudgetListObjectLike(io.dekorate.deps.kubernetes.api.model.policy.PodDisruptionBudgetList);

  public abstract A withDeploymentConfigStatusObject(io.dekorate.deps.openshift.api.model.DeploymentConfigStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DeploymentConfigStatusObjectNested<A> withNewDeploymentConfigStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DeploymentConfigStatusObjectNested<A> withNewDeploymentConfigStatusObjectLike(io.dekorate.deps.openshift.api.model.DeploymentConfigStatus);

  public abstract A withClusterRoleObject(io.dekorate.deps.kubernetes.api.model.rbac.ClusterRole);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ClusterRoleObjectNested<A> withNewClusterRoleObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ClusterRoleObjectNested<A> withNewClusterRoleObjectLike(io.dekorate.deps.kubernetes.api.model.rbac.ClusterRole);

  public abstract A withGlusterfsPersistentVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.GlusterfsPersistentVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$GlusterfsPersistentVolumeSourceObjectNested<A> withNewGlusterfsPersistentVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$GlusterfsPersistentVolumeSourceObjectNested<A> withNewGlusterfsPersistentVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.GlusterfsPersistentVolumeSource);

  public abstract A withNewGlusterfsPersistentVolumeSourceObject(java.lang.String, java.lang.String, java.lang.String, java.lang.Boolean);

  public abstract A withClusterRoleBindingListObject(io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBindingList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ClusterRoleBindingListObjectNested<A> withNewClusterRoleBindingListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ClusterRoleBindingListObjectNested<A> withNewClusterRoleBindingListObjectLike(io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBindingList);

  public abstract A withTokenReviewStatusObject(io.dekorate.deps.kubernetes.api.model.authentication.TokenReviewStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TokenReviewStatusObjectNested<A> withNewTokenReviewStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TokenReviewStatusObjectNested<A> withNewTokenReviewStatusObjectLike(io.dekorate.deps.kubernetes.api.model.authentication.TokenReviewStatus);

  public abstract A withTagEventObject(io.dekorate.deps.openshift.api.model.TagEvent);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TagEventObjectNested<A> withNewTagEventObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TagEventObjectNested<A> withNewTagEventObjectLike(io.dekorate.deps.openshift.api.model.TagEvent);

  public abstract A withNewTagEventObject(java.lang.String, java.lang.String, java.lang.Long, java.lang.String);

  public abstract A withImageStreamTagListObject(io.dekorate.deps.openshift.api.model.ImageStreamTagList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageStreamTagListObjectNested<A> withNewImageStreamTagListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageStreamTagListObjectNested<A> withNewImageStreamTagListObjectLike(io.dekorate.deps.openshift.api.model.ImageStreamTagList);

  public abstract A withCustomResourceSubresourceStatusObject(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceSubresourceStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CustomResourceSubresourceStatusObjectNested<A> withNewCustomResourceSubresourceStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CustomResourceSubresourceStatusObjectNested<A> withNewCustomResourceSubresourceStatusObjectLike(io.dekorate.deps.kubernetes.api.model.apiextensions.CustomResourceSubresourceStatus);

  public abstract A withWindowsSecurityContextOptionsObject(io.dekorate.deps.kubernetes.api.model.WindowsSecurityContextOptions);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$WindowsSecurityContextOptionsObjectNested<A> withNewWindowsSecurityContextOptionsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$WindowsSecurityContextOptionsObjectNested<A> withNewWindowsSecurityContextOptionsObjectLike(io.dekorate.deps.kubernetes.api.model.WindowsSecurityContextOptions);

  public abstract A withNewWindowsSecurityContextOptionsObject(java.lang.String, java.lang.String, java.lang.String);

  public abstract A withISCSIPersistentVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.ISCSIPersistentVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ISCSIPersistentVolumeSourceObjectNested<A> withNewISCSIPersistentVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ISCSIPersistentVolumeSourceObjectNested<A> withNewISCSIPersistentVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.ISCSIPersistentVolumeSource);

  public abstract A withDownwardAPIVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.DownwardAPIVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DownwardAPIVolumeSourceObjectNested<A> withNewDownwardAPIVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DownwardAPIVolumeSourceObjectNested<A> withNewDownwardAPIVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.DownwardAPIVolumeSource);

  public abstract A withCreateOptionsObject(io.dekorate.deps.kubernetes.api.model.CreateOptions);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CreateOptionsObjectNested<A> withNewCreateOptionsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CreateOptionsObjectNested<A> withNewCreateOptionsObjectLike(io.dekorate.deps.kubernetes.api.model.CreateOptions);

  public abstract A withVolumeAttachmentObject(io.dekorate.deps.kubernetes.api.model.storage.VolumeAttachment);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$VolumeAttachmentObjectNested<A> withNewVolumeAttachmentObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$VolumeAttachmentObjectNested<A> withNewVolumeAttachmentObjectLike(io.dekorate.deps.kubernetes.api.model.storage.VolumeAttachment);

  public abstract A withRootPathsObject(io.dekorate.deps.kubernetes.api.model.RootPaths);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RootPathsObjectNested<A> withNewRootPathsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RootPathsObjectNested<A> withNewRootPathsObjectLike(io.dekorate.deps.kubernetes.api.model.RootPaths);

  public abstract A withListMetaObject(io.dekorate.deps.kubernetes.api.model.ListMeta);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ListMetaObjectNested<A> withNewListMetaObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ListMetaObjectNested<A> withNewListMetaObjectLike(io.dekorate.deps.kubernetes.api.model.ListMeta);

  public abstract A withNewListMetaObject(java.lang.String, java.lang.Long, java.lang.String, java.lang.String);

  public abstract A withSourceStrategyOptionsObject(io.dekorate.deps.openshift.api.model.SourceStrategyOptions);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SourceStrategyOptionsObjectNested<A> withNewSourceStrategyOptionsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SourceStrategyOptionsObjectNested<A> withNewSourceStrategyOptionsObjectLike(io.dekorate.deps.openshift.api.model.SourceStrategyOptions);

  public abstract A withNewSourceStrategyOptionsObject(java.lang.Boolean);

  public abstract A withSecretReferenceObject(io.dekorate.deps.kubernetes.api.model.SecretReference);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SecretReferenceObjectNested<A> withNewSecretReferenceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SecretReferenceObjectNested<A> withNewSecretReferenceObjectLike(io.dekorate.deps.kubernetes.api.model.SecretReference);

  public abstract A withNewSecretReferenceObject(java.lang.String, java.lang.String);

  public abstract A withAPIGroupObject(io.dekorate.deps.kubernetes.api.model.APIGroup);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$APIGroupObjectNested<A> withNewAPIGroupObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$APIGroupObjectNested<A> withNewAPIGroupObjectLike(io.dekorate.deps.kubernetes.api.model.APIGroup);

  public abstract A withISCSIVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.ISCSIVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ISCSIVolumeSourceObjectNested<A> withNewISCSIVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ISCSIVolumeSourceObjectNested<A> withNewISCSIVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.ISCSIVolumeSource);

  public abstract A withOAuthAuthorizeTokenObject(io.dekorate.deps.openshift.api.model.OAuthAuthorizeToken);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OAuthAuthorizeTokenObjectNested<A> withNewOAuthAuthorizeTokenObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OAuthAuthorizeTokenObjectNested<A> withNewOAuthAuthorizeTokenObjectLike(io.dekorate.deps.openshift.api.model.OAuthAuthorizeToken);

  public abstract A withSecretKeySelectorObject(io.dekorate.deps.kubernetes.api.model.SecretKeySelector);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SecretKeySelectorObjectNested<A> withNewSecretKeySelectorObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SecretKeySelectorObjectNested<A> withNewSecretKeySelectorObjectLike(io.dekorate.deps.kubernetes.api.model.SecretKeySelector);

  public abstract A withNewSecretKeySelectorObject(java.lang.String, java.lang.String, java.lang.Boolean);

  public abstract A withQuobyteVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.QuobyteVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$QuobyteVolumeSourceObjectNested<A> withNewQuobyteVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$QuobyteVolumeSourceObjectNested<A> withNewQuobyteVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.QuobyteVolumeSource);

  public abstract A withDockerBuildStrategyObject(io.dekorate.deps.openshift.api.model.DockerBuildStrategy);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DockerBuildStrategyObjectNested<A> withNewDockerBuildStrategyObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DockerBuildStrategyObjectNested<A> withNewDockerBuildStrategyObjectLike(io.dekorate.deps.openshift.api.model.DockerBuildStrategy);

  public abstract A withSignatureConditionObject(io.dekorate.deps.openshift.api.model.SignatureCondition);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SignatureConditionObjectNested<A> withNewSignatureConditionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SignatureConditionObjectNested<A> withNewSignatureConditionObjectLike(io.dekorate.deps.openshift.api.model.SignatureCondition);

  public abstract A withJobSpecObject(io.dekorate.deps.kubernetes.api.model.batch.JobSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$JobSpecObjectNested<A> withNewJobSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$JobSpecObjectNested<A> withNewJobSpecObjectLike(io.dekorate.deps.kubernetes.api.model.batch.JobSpec);

  public abstract A withResourceQuotaStatusObject(io.dekorate.deps.kubernetes.api.model.ResourceQuotaStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ResourceQuotaStatusObjectNested<A> withNewResourceQuotaStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ResourceQuotaStatusObjectNested<A> withNewResourceQuotaStatusObjectLike(io.dekorate.deps.kubernetes.api.model.ResourceQuotaStatus);

  public abstract A withExternalMetricStatusObject(io.dekorate.deps.kubernetes.api.model.ExternalMetricStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ExternalMetricStatusObjectNested<A> withNewExternalMetricStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ExternalMetricStatusObjectNested<A> withNewExternalMetricStatusObjectLike(io.dekorate.deps.kubernetes.api.model.ExternalMetricStatus);

  public abstract A withScopedResourceSelectorRequirementObject(io.dekorate.deps.kubernetes.api.model.ScopedResourceSelectorRequirement);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ScopedResourceSelectorRequirementObjectNested<A> withNewScopedResourceSelectorRequirementObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ScopedResourceSelectorRequirementObjectNested<A> withNewScopedResourceSelectorRequirementObjectLike(io.dekorate.deps.kubernetes.api.model.ScopedResourceSelectorRequirement);

  public abstract A withRepositoryImportStatusObject(io.dekorate.deps.openshift.api.model.RepositoryImportStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RepositoryImportStatusObjectNested<A> withNewRepositoryImportStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RepositoryImportStatusObjectNested<A> withNewRepositoryImportStatusObjectLike(io.dekorate.deps.openshift.api.model.RepositoryImportStatus);

  public abstract A withDeploymentCauseObject(io.dekorate.deps.openshift.api.model.DeploymentCause);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DeploymentCauseObjectNested<A> withNewDeploymentCauseObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DeploymentCauseObjectNested<A> withNewDeploymentCauseObjectLike(io.dekorate.deps.openshift.api.model.DeploymentCause);

  public abstract A withGroupListObject(io.dekorate.deps.openshift.api.model.GroupList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$GroupListObjectNested<A> withNewGroupListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$GroupListObjectNested<A> withNewGroupListObjectLike(io.dekorate.deps.openshift.api.model.GroupList);

  public abstract A withProjectedVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.ProjectedVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ProjectedVolumeSourceObjectNested<A> withNewProjectedVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ProjectedVolumeSourceObjectNested<A> withNewProjectedVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.ProjectedVolumeSource);

  public abstract A withLifecycleHookObject(io.dekorate.deps.openshift.api.model.LifecycleHook);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$LifecycleHookObjectNested<A> withNewLifecycleHookObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$LifecycleHookObjectNested<A> withNewLifecycleHookObjectLike(io.dekorate.deps.openshift.api.model.LifecycleHook);

  public abstract A withHandlerObject(io.dekorate.deps.kubernetes.api.model.Handler);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$HandlerObjectNested<A> withNewHandlerObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$HandlerObjectNested<A> withNewHandlerObjectLike(io.dekorate.deps.kubernetes.api.model.Handler);

  public abstract A withServiceAccountTokenProjectionObject(io.dekorate.deps.kubernetes.api.model.ServiceAccountTokenProjection);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ServiceAccountTokenProjectionObjectNested<A> withNewServiceAccountTokenProjectionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ServiceAccountTokenProjectionObjectNested<A> withNewServiceAccountTokenProjectionObjectLike(io.dekorate.deps.kubernetes.api.model.ServiceAccountTokenProjection);

  public abstract A withNewServiceAccountTokenProjectionObject(java.lang.String, java.lang.Long, java.lang.String);

  public abstract A withContainerObject(io.dekorate.deps.kubernetes.api.model.Container);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ContainerObjectNested<A> withNewContainerObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ContainerObjectNested<A> withNewContainerObjectLike(io.dekorate.deps.kubernetes.api.model.Container);

  public abstract A withTypedLocalObjectReference(io.dekorate.deps.kubernetes.api.model.TypedLocalObjectReference);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TypedLocalObjectReferenceNested<A> withNewTypedLocalObjectReference();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TypedLocalObjectReferenceNested<A> withNewTypedLocalObjectReferenceLike(io.dekorate.deps.kubernetes.api.model.TypedLocalObjectReference);

  public abstract A withNewTypedLocalObjectReference(java.lang.String, java.lang.String, java.lang.String);

  public abstract A withEndpointSliceListObject(io.dekorate.deps.kubernetes.api.model.discovery.EndpointSliceList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EndpointSliceListObjectNested<A> withNewEndpointSliceListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EndpointSliceListObjectNested<A> withNewEndpointSliceListObjectLike(io.dekorate.deps.kubernetes.api.model.discovery.EndpointSliceList);

  public abstract A withCronJobListObject(io.dekorate.deps.kubernetes.api.model.batch.CronJobList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CronJobListObjectNested<A> withNewCronJobListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CronJobListObjectNested<A> withNewCronJobListObjectLike(io.dekorate.deps.kubernetes.api.model.batch.CronJobList);

  public abstract A withRollbackConfigObject(io.dekorate.deps.kubernetes.api.model.extensions.RollbackConfig);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RollbackConfigObjectNested<A> withNewRollbackConfigObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RollbackConfigObjectNested<A> withNewRollbackConfigObjectLike(io.dekorate.deps.kubernetes.api.model.extensions.RollbackConfig);

  public abstract A withNewRollbackConfigObject(java.lang.Long);

  public abstract A withFieldsV1Object(io.dekorate.deps.kubernetes.api.model.FieldsV1);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$FieldsV1ObjectNested<A> withNewFieldsV1Object();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$FieldsV1ObjectNested<A> withNewFieldsV1ObjectLike(io.dekorate.deps.kubernetes.api.model.FieldsV1);

  public abstract A withSelfSubjectAccessReviewObject(io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectAccessReview);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SelfSubjectAccessReviewObjectNested<A> withNewSelfSubjectAccessReviewObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SelfSubjectAccessReviewObjectNested<A> withNewSelfSubjectAccessReviewObjectLike(io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectAccessReview);

  public abstract A withRouteStatusObject(io.dekorate.deps.openshift.api.model.RouteStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RouteStatusObjectNested<A> withNewRouteStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RouteStatusObjectNested<A> withNewRouteStatusObjectLike(io.dekorate.deps.openshift.api.model.RouteStatus);

  public abstract A withClusterVersionListObject(io.dekorate.deps.openshift.api.model.ClusterVersionList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ClusterVersionListObjectNested<A> withNewClusterVersionListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ClusterVersionListObjectNested<A> withNewClusterVersionListObjectLike(io.dekorate.deps.openshift.api.model.ClusterVersionList);

  public abstract A withPodConditionObject(io.dekorate.deps.kubernetes.api.model.PodCondition);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodConditionObjectNested<A> withNewPodConditionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodConditionObjectNested<A> withNewPodConditionObjectLike(io.dekorate.deps.kubernetes.api.model.PodCondition);

  public abstract A withDaemonSetConditionObject(io.dekorate.deps.kubernetes.api.model.apps.DaemonSetCondition);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DaemonSetConditionObjectNested<A> withNewDaemonSetConditionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DaemonSetConditionObjectNested<A> withNewDaemonSetConditionObjectLike(io.dekorate.deps.kubernetes.api.model.apps.DaemonSetCondition);

  public abstract A withNewDaemonSetConditionObject(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract A withTopologySpreadConstraintObject(io.dekorate.deps.kubernetes.api.model.TopologySpreadConstraint);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TopologySpreadConstraintObjectNested<A> withNewTopologySpreadConstraintObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TopologySpreadConstraintObjectNested<A> withNewTopologySpreadConstraintObjectLike(io.dekorate.deps.kubernetes.api.model.TopologySpreadConstraint);

  public abstract A withDeploymentRollbackObject(io.dekorate.deps.kubernetes.api.model.extensions.DeploymentRollback);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DeploymentRollbackObjectNested<A> withNewDeploymentRollbackObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DeploymentRollbackObjectNested<A> withNewDeploymentRollbackObjectLike(io.dekorate.deps.kubernetes.api.model.extensions.DeploymentRollback);

  public abstract A withExecActionObject(io.dekorate.deps.kubernetes.api.model.ExecAction);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ExecActionObjectNested<A> withNewExecActionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ExecActionObjectNested<A> withNewExecActionObjectLike(io.dekorate.deps.kubernetes.api.model.ExecAction);

  public abstract A withNamedTagEventListObject(io.dekorate.deps.openshift.api.model.NamedTagEventList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NamedTagEventListObjectNested<A> withNewNamedTagEventListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NamedTagEventListObjectNested<A> withNewNamedTagEventListObjectLike(io.dekorate.deps.openshift.api.model.NamedTagEventList);

  public abstract A withUpdateHistoryObject(io.dekorate.deps.openshift.api.model.UpdateHistory);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$UpdateHistoryObjectNested<A> withNewUpdateHistoryObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$UpdateHistoryObjectNested<A> withNewUpdateHistoryObjectLike(io.dekorate.deps.openshift.api.model.UpdateHistory);

  public abstract A withTolerationObject(io.dekorate.deps.kubernetes.api.model.Toleration);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TolerationObjectNested<A> withNewTolerationObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TolerationObjectNested<A> withNewTolerationObjectLike(io.dekorate.deps.kubernetes.api.model.Toleration);

  public abstract A withNewTolerationObject(java.lang.String, java.lang.String, java.lang.String, java.lang.Long, java.lang.String);

  public abstract A withNodeSelectorObject(io.dekorate.deps.kubernetes.api.model.NodeSelector);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NodeSelectorObjectNested<A> withNewNodeSelectorObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NodeSelectorObjectNested<A> withNewNodeSelectorObjectLike(io.dekorate.deps.kubernetes.api.model.NodeSelector);

  public abstract A withRouteSpecObject(io.dekorate.deps.openshift.api.model.RouteSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RouteSpecObjectNested<A> withNewRouteSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RouteSpecObjectNested<A> withNewRouteSpecObjectLike(io.dekorate.deps.openshift.api.model.RouteSpec);

  public abstract A withPersistentVolumeClaimConditionObject(io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimCondition);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PersistentVolumeClaimConditionObjectNested<A> withNewPersistentVolumeClaimConditionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PersistentVolumeClaimConditionObjectNested<A> withNewPersistentVolumeClaimConditionObjectLike(io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimCondition);

  public abstract A withCephFSPersistentVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.CephFSPersistentVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CephFSPersistentVolumeSourceObjectNested<A> withNewCephFSPersistentVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CephFSPersistentVolumeSourceObjectNested<A> withNewCephFSPersistentVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.CephFSPersistentVolumeSource);

  public abstract A withProjectRequestObject(io.dekorate.deps.openshift.api.model.ProjectRequest);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ProjectRequestObjectNested<A> withNewProjectRequestObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ProjectRequestObjectNested<A> withNewProjectRequestObjectLike(io.dekorate.deps.openshift.api.model.ProjectRequest);

  public abstract A withPersistentVolumeListObject(io.dekorate.deps.kubernetes.api.model.PersistentVolumeList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PersistentVolumeListObjectNested<A> withNewPersistentVolumeListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PersistentVolumeListObjectNested<A> withNewPersistentVolumeListObjectLike(io.dekorate.deps.kubernetes.api.model.PersistentVolumeList);

  public abstract A withTemplateObject(io.dekorate.deps.openshift.api.model.Template);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TemplateObjectNested<A> withNewTemplateObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TemplateObjectNested<A> withNewTemplateObjectLike(io.dekorate.deps.openshift.api.model.Template);

  public abstract A withPriorityClassObject(io.dekorate.deps.kubernetes.api.model.scheduling.PriorityClass);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PriorityClassObjectNested<A> withNewPriorityClassObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PriorityClassObjectNested<A> withNewPriorityClassObjectLike(io.dekorate.deps.kubernetes.api.model.scheduling.PriorityClass);

  public abstract A withPodDNSConfigOptionObject(io.dekorate.deps.kubernetes.api.model.PodDNSConfigOption);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodDNSConfigOptionObjectNested<A> withNewPodDNSConfigOptionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodDNSConfigOptionObjectNested<A> withNewPodDNSConfigOptionObjectLike(io.dekorate.deps.kubernetes.api.model.PodDNSConfigOption);

  public abstract A withNewPodDNSConfigOptionObject(java.lang.String, java.lang.String);

  public abstract A withGCEPersistentDiskVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.GCEPersistentDiskVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$GCEPersistentDiskVolumeSourceObjectNested<A> withNewGCEPersistentDiskVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$GCEPersistentDiskVolumeSourceObjectNested<A> withNewGCEPersistentDiskVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.GCEPersistentDiskVolumeSource);

  public abstract A withNewGCEPersistentDiskVolumeSourceObject(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Boolean);

  public abstract A withOAuthClientAuthorizationObject(io.dekorate.deps.openshift.api.model.OAuthClientAuthorization);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OAuthClientAuthorizationObjectNested<A> withNewOAuthClientAuthorizationObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OAuthClientAuthorizationObjectNested<A> withNewOAuthClientAuthorizationObjectLike(io.dekorate.deps.openshift.api.model.OAuthClientAuthorization);

  public abstract A withNetworkPolicyIngressRuleObject(io.dekorate.deps.kubernetes.api.model.networking.NetworkPolicyIngressRule);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NetworkPolicyIngressRuleObjectNested<A> withNewNetworkPolicyIngressRuleObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NetworkPolicyIngressRuleObjectNested<A> withNewNetworkPolicyIngressRuleObjectLike(io.dekorate.deps.kubernetes.api.model.networking.NetworkPolicyIngressRule);

  public abstract A withJobTemplateSpecObject(io.dekorate.deps.kubernetes.api.model.batch.JobTemplateSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$JobTemplateSpecObjectNested<A> withNewJobTemplateSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$JobTemplateSpecObjectNested<A> withNewJobTemplateSpecObjectLike(io.dekorate.deps.kubernetes.api.model.batch.JobTemplateSpec);

  public abstract A withImageChangeCauseObject(io.dekorate.deps.openshift.api.model.ImageChangeCause);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageChangeCauseObjectNested<A> withNewImageChangeCauseObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageChangeCauseObjectNested<A> withNewImageChangeCauseObjectLike(io.dekorate.deps.openshift.api.model.ImageChangeCause);

  public abstract A withEventListObject(io.dekorate.deps.kubernetes.api.model.EventList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EventListObjectNested<A> withNewEventListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EventListObjectNested<A> withNewEventListObjectLike(io.dekorate.deps.kubernetes.api.model.EventList);

  public abstract A withVolumeAttachmentListObject(io.dekorate.deps.kubernetes.api.model.storage.VolumeAttachmentList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$VolumeAttachmentListObjectNested<A> withNewVolumeAttachmentListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$VolumeAttachmentListObjectNested<A> withNewVolumeAttachmentListObjectLike(io.dekorate.deps.kubernetes.api.model.storage.VolumeAttachmentList);

  public abstract A withPodReadinessGateObject(io.dekorate.deps.kubernetes.api.model.PodReadinessGate);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodReadinessGateObjectNested<A> withNewPodReadinessGateObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodReadinessGateObjectNested<A> withNewPodReadinessGateObjectLike(io.dekorate.deps.kubernetes.api.model.PodReadinessGate);

  public abstract A withNewPodReadinessGateObject(java.lang.String);

  public abstract A withDeploymentObject(io.dekorate.deps.kubernetes.api.model.apps.Deployment);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DeploymentObjectNested<A> withNewDeploymentObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DeploymentObjectNested<A> withNewDeploymentObjectLike(io.dekorate.deps.kubernetes.api.model.apps.Deployment);

  public abstract A withContainerStateWaitingObject(io.dekorate.deps.kubernetes.api.model.ContainerStateWaiting);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ContainerStateWaitingObjectNested<A> withNewContainerStateWaitingObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ContainerStateWaitingObjectNested<A> withNewContainerStateWaitingObjectLike(io.dekorate.deps.kubernetes.api.model.ContainerStateWaiting);

  public abstract A withNewContainerStateWaitingObject(java.lang.String, java.lang.String);

  public abstract A withTagEventConditionObject(io.dekorate.deps.openshift.api.model.TagEventCondition);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TagEventConditionObjectNested<A> withNewTagEventConditionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TagEventConditionObjectNested<A> withNewTagEventConditionObjectLike(io.dekorate.deps.openshift.api.model.TagEventCondition);

  public abstract A withOpenshiftRoleListObject(io.dekorate.deps.openshift.api.model.OpenshiftRoleList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OpenshiftRoleListObjectNested<A> withNewOpenshiftRoleListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OpenshiftRoleListObjectNested<A> withNewOpenshiftRoleListObjectLike(io.dekorate.deps.openshift.api.model.OpenshiftRoleList);

  public abstract A withNetNamespaceListObject(io.dekorate.deps.openshift.api.model.NetNamespaceList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NetNamespaceListObjectNested<A> withNewNetNamespaceListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NetNamespaceListObjectNested<A> withNewNetNamespaceListObjectLike(io.dekorate.deps.openshift.api.model.NetNamespaceList);

  public abstract A withBinaryBuildSourceObject(io.dekorate.deps.openshift.api.model.BinaryBuildSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BinaryBuildSourceObjectNested<A> withNewBinaryBuildSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BinaryBuildSourceObjectNested<A> withNewBinaryBuildSourceObjectLike(io.dekorate.deps.openshift.api.model.BinaryBuildSource);

  public abstract A withNewBinaryBuildSourceObject(java.lang.String);

  public abstract A withOAuthClientAuthorizationListObject(io.dekorate.deps.openshift.api.model.OAuthClientAuthorizationList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OAuthClientAuthorizationListObjectNested<A> withNewOAuthClientAuthorizationListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OAuthClientAuthorizationListObjectNested<A> withNewOAuthClientAuthorizationListObjectLike(io.dekorate.deps.openshift.api.model.OAuthClientAuthorizationList);

  public abstract A withLocalSubjectAccessReviewObject(io.dekorate.deps.openshift.api.model.LocalSubjectAccessReview);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ModelLocalSubjectAccessReviewObjectNested<A> withNewModelLocalSubjectAccessReviewObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ModelLocalSubjectAccessReviewObjectNested<A> withNewLocalSubjectAccessReviewObjectLike(io.dekorate.deps.openshift.api.model.LocalSubjectAccessReview);

  public abstract A withIngressSpecObject(io.dekorate.deps.kubernetes.api.model.extensions.IngressSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$IngressSpecObjectNested<A> withNewIngressSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$IngressSpecObjectNested<A> withNewIngressSpecObjectLike(io.dekorate.deps.kubernetes.api.model.extensions.IngressSpec);

  public abstract A withAdmissionReviewObject(io.dekorate.deps.kubernetes.api.model.admission.AdmissionReview);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$AdmissionReviewObjectNested<A> withNewAdmissionReviewObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$AdmissionReviewObjectNested<A> withNewAdmissionReviewObjectLike(io.dekorate.deps.kubernetes.api.model.admission.AdmissionReview);

  public abstract A withRollingDeploymentStrategyParamsObject(io.dekorate.deps.openshift.api.model.RollingDeploymentStrategyParams);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RollingDeploymentStrategyParamsObjectNested<A> withNewRollingDeploymentStrategyParamsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RollingDeploymentStrategyParamsObjectNested<A> withNewRollingDeploymentStrategyParamsObjectLike(io.dekorate.deps.openshift.api.model.RollingDeploymentStrategyParams);

  public abstract A withDownwardAPIVolumeFileObject(io.dekorate.deps.kubernetes.api.model.DownwardAPIVolumeFile);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DownwardAPIVolumeFileObjectNested<A> withNewDownwardAPIVolumeFileObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DownwardAPIVolumeFileObjectNested<A> withNewDownwardAPIVolumeFileObjectLike(io.dekorate.deps.kubernetes.api.model.DownwardAPIVolumeFile);

  public abstract A withImageLabelObject(io.dekorate.deps.openshift.api.model.ImageLabel);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageLabelObjectNested<A> withNewImageLabelObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageLabelObjectNested<A> withNewImageLabelObjectLike(io.dekorate.deps.openshift.api.model.ImageLabel);

  public abstract A withNewImageLabelObject(java.lang.String, java.lang.String);

  public abstract A withVolumeAttachmentStatusObject(io.dekorate.deps.kubernetes.api.model.storage.VolumeAttachmentStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$VolumeAttachmentStatusObjectNested<A> withNewVolumeAttachmentStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$VolumeAttachmentStatusObjectNested<A> withNewVolumeAttachmentStatusObjectLike(io.dekorate.deps.kubernetes.api.model.storage.VolumeAttachmentStatus);

  public abstract A withPodTemplateObject(io.dekorate.deps.kubernetes.api.model.PodTemplate);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodTemplateObjectNested<A> withNewPodTemplateObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodTemplateObjectNested<A> withNewPodTemplateObjectLike(io.dekorate.deps.kubernetes.api.model.PodTemplate);

  public abstract A withTCPSocketActionObject(io.dekorate.deps.kubernetes.api.model.TCPSocketAction);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TCPSocketActionObjectNested<A> withNewTCPSocketActionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TCPSocketActionObjectNested<A> withNewTCPSocketActionObjectLike(io.dekorate.deps.kubernetes.api.model.TCPSocketAction);

  public abstract A withDaemonSetListObject(io.dekorate.deps.kubernetes.api.model.apps.DaemonSetList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DaemonSetListObjectNested<A> withNewDaemonSetListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DaemonSetListObjectNested<A> withNewDaemonSetListObjectLike(io.dekorate.deps.kubernetes.api.model.apps.DaemonSetList);

  public abstract A withEventObject(io.dekorate.deps.kubernetes.api.model.Event);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EventObjectNested<A> withNewEventObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EventObjectNested<A> withNewEventObjectLike(io.dekorate.deps.kubernetes.api.model.Event);

  public abstract A withPreferencesObject(io.dekorate.deps.kubernetes.api.model.Preferences);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PreferencesObjectNested<A> withNewPreferencesObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PreferencesObjectNested<A> withNewPreferencesObjectLike(io.dekorate.deps.kubernetes.api.model.Preferences);

  public abstract A withIngressObject(io.dekorate.deps.kubernetes.api.model.extensions.Ingress);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$IngressObjectNested<A> withNewIngressObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$IngressObjectNested<A> withNewIngressObjectLike(io.dekorate.deps.kubernetes.api.model.extensions.Ingress);

  public abstract A withDeploymentConfigObject(io.dekorate.deps.openshift.api.model.DeploymentConfig);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DeploymentConfigObjectNested<A> withNewDeploymentConfigObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DeploymentConfigObjectNested<A> withNewDeploymentConfigObjectLike(io.dekorate.deps.openshift.api.model.DeploymentConfig);

  public abstract A withOAuthAccessTokenObject(io.dekorate.deps.openshift.api.model.OAuthAccessToken);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OAuthAccessTokenObjectNested<A> withNewOAuthAccessTokenObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OAuthAccessTokenObjectNested<A> withNewOAuthAccessTokenObjectLike(io.dekorate.deps.openshift.api.model.OAuthAccessToken);

  public abstract A withObjectFieldSelectorObject(io.dekorate.deps.kubernetes.api.model.ObjectFieldSelector);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ObjectFieldSelectorObjectNested<A> withNewObjectFieldSelectorObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ObjectFieldSelectorObjectNested<A> withNewObjectFieldSelectorObjectLike(io.dekorate.deps.kubernetes.api.model.ObjectFieldSelector);

  public abstract A withNewObjectFieldSelectorObject(java.lang.String, java.lang.String);

  public abstract A withPersistentVolumeObject(io.dekorate.deps.kubernetes.api.model.PersistentVolume);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PersistentVolumeObjectNested<A> withNewPersistentVolumeObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PersistentVolumeObjectNested<A> withNewPersistentVolumeObjectLike(io.dekorate.deps.kubernetes.api.model.PersistentVolume);

  public abstract A withCinderVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.CinderVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CinderVolumeSourceObjectNested<A> withNewCinderVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CinderVolumeSourceObjectNested<A> withNewCinderVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.CinderVolumeSource);

  public abstract A withObjectMetaObject(io.dekorate.deps.kubernetes.api.model.ObjectMeta);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ObjectMetaObjectNested<A> withNewObjectMetaObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ObjectMetaObjectNested<A> withNewObjectMetaObjectLike(io.dekorate.deps.kubernetes.api.model.ObjectMeta);

  public abstract A withPersistentVolumeClaimObject(io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaim);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PersistentVolumeClaimObjectNested<A> withNewPersistentVolumeClaimObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PersistentVolumeClaimObjectNested<A> withNewPersistentVolumeClaimObjectLike(io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaim);

  public abstract A withLeaseListObject(io.dekorate.deps.kubernetes.api.model.coordination.v1.LeaseList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$LeaseListObjectNested<A> withNewLeaseListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$LeaseListObjectNested<A> withNewLeaseListObjectLike(io.dekorate.deps.kubernetes.api.model.coordination.v1.LeaseList);

  public abstract A withPodSecurityPolicyObject(io.dekorate.deps.kubernetes.api.model.policy.PodSecurityPolicy);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodSecurityPolicyObjectNested<A> withNewPodSecurityPolicyObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodSecurityPolicyObjectNested<A> withNewPodSecurityPolicyObjectLike(io.dekorate.deps.kubernetes.api.model.policy.PodSecurityPolicy);

  public abstract A withJSONSchemaPropsObject(io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$JSONSchemaPropsObjectNested<A> withNewJSONSchemaPropsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$JSONSchemaPropsObjectNested<A> withNewJSONSchemaPropsObjectLike(io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaProps);

  public abstract A withComponentOverrideObject(io.dekorate.deps.openshift.api.model.ComponentOverride);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ComponentOverrideObjectNested<A> withNewComponentOverrideObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ComponentOverrideObjectNested<A> withNewComponentOverrideObjectLike(io.dekorate.deps.openshift.api.model.ComponentOverride);

  public abstract A withNewComponentOverrideObject(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Boolean);

  public abstract A withDeploymentConditionObject(io.dekorate.deps.openshift.api.model.DeploymentCondition);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ModelDeploymentConditionObjectNested<A> withNewModelDeploymentConditionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ModelDeploymentConditionObjectNested<A> withNewDeploymentConditionObjectLike(io.dekorate.deps.openshift.api.model.DeploymentCondition);

  public abstract A withNetworkPolicyPortObject(io.dekorate.deps.kubernetes.api.model.networking.NetworkPolicyPort);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NetworkPolicyPortObjectNested<A> withNewNetworkPolicyPortObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NetworkPolicyPortObjectNested<A> withNewNetworkPolicyPortObjectLike(io.dekorate.deps.kubernetes.api.model.networking.NetworkPolicyPort);

  public abstract A withCinderPersistentVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.CinderPersistentVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CinderPersistentVolumeSourceObjectNested<A> withNewCinderPersistentVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CinderPersistentVolumeSourceObjectNested<A> withNewCinderPersistentVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.CinderPersistentVolumeSource);

  public abstract A withDeploymentCauseImageTriggerObject(io.dekorate.deps.openshift.api.model.DeploymentCauseImageTrigger);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DeploymentCauseImageTriggerObjectNested<A> withNewDeploymentCauseImageTriggerObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DeploymentCauseImageTriggerObjectNested<A> withNewDeploymentCauseImageTriggerObjectLike(io.dekorate.deps.openshift.api.model.DeploymentCauseImageTrigger);

  public abstract A withOwnerReferenceObject(io.dekorate.deps.kubernetes.api.model.OwnerReference);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OwnerReferenceObjectNested<A> withNewOwnerReferenceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OwnerReferenceObjectNested<A> withNewOwnerReferenceObjectLike(io.dekorate.deps.kubernetes.api.model.OwnerReference);

  public abstract A withReplicationControllerConditionObject(io.dekorate.deps.kubernetes.api.model.ReplicationControllerCondition);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ReplicationControllerConditionObjectNested<A> withNewReplicationControllerConditionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ReplicationControllerConditionObjectNested<A> withNewReplicationControllerConditionObjectLike(io.dekorate.deps.kubernetes.api.model.ReplicationControllerCondition);

  public abstract A withNewReplicationControllerConditionObject(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract A withPodAntiAffinityObject(io.dekorate.deps.kubernetes.api.model.PodAntiAffinity);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodAntiAffinityObjectNested<A> withNewPodAntiAffinityObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodAntiAffinityObjectNested<A> withNewPodAntiAffinityObjectLike(io.dekorate.deps.kubernetes.api.model.PodAntiAffinity);

  public abstract A withMetricSpecObject(io.dekorate.deps.kubernetes.api.model.MetricSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$MetricSpecObjectNested<A> withNewMetricSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$MetricSpecObjectNested<A> withNewMetricSpecObjectLike(io.dekorate.deps.kubernetes.api.model.MetricSpec);

  public abstract A withPodDisruptionBudgetSpecObject(io.dekorate.deps.kubernetes.api.model.policy.PodDisruptionBudgetSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodDisruptionBudgetSpecObjectNested<A> withNewPodDisruptionBudgetSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodDisruptionBudgetSpecObjectNested<A> withNewPodDisruptionBudgetSpecObjectLike(io.dekorate.deps.kubernetes.api.model.policy.PodDisruptionBudgetSpec);

  public abstract A withReplicationControllerListObject(io.dekorate.deps.kubernetes.api.model.ReplicationControllerList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ReplicationControllerListObjectNested<A> withNewReplicationControllerListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ReplicationControllerListObjectNested<A> withNewReplicationControllerListObjectLike(io.dekorate.deps.kubernetes.api.model.ReplicationControllerList);

  public abstract A withEventObject(io.dekorate.deps.kubernetes.api.model.events.Event);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EventsEventObjectNested<A> withNewEventsEventObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EventsEventObjectNested<A> withNewEventObjectLike(io.dekorate.deps.kubernetes.api.model.events.Event);

  public abstract A withHorizontalPodAutoscalerStatusObject(io.dekorate.deps.kubernetes.api.model.HorizontalPodAutoscalerStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$HorizontalPodAutoscalerStatusObjectNested<A> withNewHorizontalPodAutoscalerStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$HorizontalPodAutoscalerStatusObjectNested<A> withNewHorizontalPodAutoscalerStatusObjectLike(io.dekorate.deps.kubernetes.api.model.HorizontalPodAutoscalerStatus);

  public abstract A withContainerStateRunningObject(io.dekorate.deps.kubernetes.api.model.ContainerStateRunning);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ContainerStateRunningObjectNested<A> withNewContainerStateRunningObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ContainerStateRunningObjectNested<A> withNewContainerStateRunningObjectLike(io.dekorate.deps.kubernetes.api.model.ContainerStateRunning);

  public abstract A withNewContainerStateRunningObject(java.lang.String);

  public abstract A withJSONSchemaPropsOrArrayObject(io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsOrArray);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$JSONSchemaPropsOrArrayObjectNested<A> withNewJSONSchemaPropsOrArrayObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$JSONSchemaPropsOrArrayObjectNested<A> withNewJSONSchemaPropsOrArrayObjectLike(io.dekorate.deps.kubernetes.api.model.apiextensions.JSONSchemaPropsOrArray);

  public abstract A withHTTPIngressPathObject(io.dekorate.deps.kubernetes.api.model.extensions.HTTPIngressPath);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$HTTPIngressPathObjectNested<A> withNewHTTPIngressPathObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$HTTPIngressPathObjectNested<A> withNewHTTPIngressPathObjectLike(io.dekorate.deps.kubernetes.api.model.extensions.HTTPIngressPath);

  public abstract A withUpdateOptionsObject(io.dekorate.deps.kubernetes.api.model.UpdateOptions);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$UpdateOptionsObjectNested<A> withNewUpdateOptionsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$UpdateOptionsObjectNested<A> withNewUpdateOptionsObjectLike(io.dekorate.deps.kubernetes.api.model.UpdateOptions);

  public abstract A withNamedExtensionObject(io.dekorate.deps.kubernetes.api.model.NamedExtension);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NamedExtensionObjectNested<A> withNewNamedExtensionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NamedExtensionObjectNested<A> withNewNamedExtensionObjectLike(io.dekorate.deps.kubernetes.api.model.NamedExtension);

  public abstract A withAzureFilePersistentVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.AzureFilePersistentVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$AzureFilePersistentVolumeSourceObjectNested<A> withNewAzureFilePersistentVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$AzureFilePersistentVolumeSourceObjectNested<A> withNewAzureFilePersistentVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.AzureFilePersistentVolumeSource);

  public abstract A withNewAzureFilePersistentVolumeSourceObject(java.lang.Boolean, java.lang.String, java.lang.String, java.lang.String);

  public abstract A withSourceBuildStrategyObject(io.dekorate.deps.openshift.api.model.SourceBuildStrategy);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SourceBuildStrategyObjectNested<A> withNewSourceBuildStrategyObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SourceBuildStrategyObjectNested<A> withNewSourceBuildStrategyObjectLike(io.dekorate.deps.openshift.api.model.SourceBuildStrategy);

  public abstract A withStatefulSetObject(io.dekorate.deps.kubernetes.api.model.apps.StatefulSet);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$StatefulSetObjectNested<A> withNewStatefulSetObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$StatefulSetObjectNested<A> withNewStatefulSetObjectLike(io.dekorate.deps.kubernetes.api.model.apps.StatefulSet);

  public abstract A withContainerPortObject(io.dekorate.deps.kubernetes.api.model.ContainerPort);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ContainerPortObjectNested<A> withNewContainerPortObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ContainerPortObjectNested<A> withNewContainerPortObjectLike(io.dekorate.deps.kubernetes.api.model.ContainerPort);

  public abstract A withNewContainerPortObject(java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.String);

  public abstract A withPodListObject(io.dekorate.deps.kubernetes.api.model.PodList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodListObjectNested<A> withNewPodListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodListObjectNested<A> withNewPodListObjectLike(io.dekorate.deps.kubernetes.api.model.PodList);

  public abstract A withBuildPostCommitSpecObject(io.dekorate.deps.openshift.api.model.BuildPostCommitSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildPostCommitSpecObjectNested<A> withNewBuildPostCommitSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildPostCommitSpecObjectNested<A> withNewBuildPostCommitSpecObjectLike(io.dekorate.deps.openshift.api.model.BuildPostCommitSpec);

  public abstract A withOpenshiftClusterRoleObject(io.dekorate.deps.openshift.api.model.OpenshiftClusterRole);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OpenshiftClusterRoleObjectNested<A> withNewOpenshiftClusterRoleObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OpenshiftClusterRoleObjectNested<A> withNewOpenshiftClusterRoleObjectLike(io.dekorate.deps.openshift.api.model.OpenshiftClusterRole);

  public abstract A withResourceFieldSelectorObject(io.dekorate.deps.kubernetes.api.model.ResourceFieldSelector);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ResourceFieldSelectorObjectNested<A> withNewResourceFieldSelectorObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ResourceFieldSelectorObjectNested<A> withNewResourceFieldSelectorObjectLike(io.dekorate.deps.kubernetes.api.model.ResourceFieldSelector);

  public abstract A withDeploymentStrategyObject(io.dekorate.deps.openshift.api.model.DeploymentStrategy);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ModelDeploymentStrategyObjectNested<A> withNewModelDeploymentStrategyObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ModelDeploymentStrategyObjectNested<A> withNewDeploymentStrategyObjectLike(io.dekorate.deps.openshift.api.model.DeploymentStrategy);

  public abstract A withSignatureSubjectObject(io.dekorate.deps.openshift.api.model.SignatureSubject);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SignatureSubjectObjectNested<A> withNewSignatureSubjectObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SignatureSubjectObjectNested<A> withNewSignatureSubjectObjectLike(io.dekorate.deps.openshift.api.model.SignatureSubject);

  public abstract A withNewSignatureSubjectObject(java.lang.String, java.lang.String, java.lang.String);

  public abstract A withPersistentVolumeClaimSpecObject(io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PersistentVolumeClaimSpecObjectNested<A> withNewPersistentVolumeClaimSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PersistentVolumeClaimSpecObjectNested<A> withNewPersistentVolumeClaimSpecObjectLike(io.dekorate.deps.kubernetes.api.model.PersistentVolumeClaimSpec);

  public abstract A withRouteIngressConditionObject(io.dekorate.deps.openshift.api.model.RouteIngressCondition);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RouteIngressConditionObjectNested<A> withNewRouteIngressConditionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RouteIngressConditionObjectNested<A> withNewRouteIngressConditionObjectLike(io.dekorate.deps.openshift.api.model.RouteIngressCondition);

  public abstract A withNewRouteIngressConditionObject(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract A withLoadBalancerStatusObject(io.dekorate.deps.kubernetes.api.model.LoadBalancerStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$LoadBalancerStatusObjectNested<A> withNewLoadBalancerStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$LoadBalancerStatusObjectNested<A> withNewLoadBalancerStatusObjectLike(io.dekorate.deps.kubernetes.api.model.LoadBalancerStatus);

  public abstract A withScopeSelectorObject(io.dekorate.deps.kubernetes.api.model.ScopeSelector);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ScopeSelectorObjectNested<A> withNewScopeSelectorObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ScopeSelectorObjectNested<A> withNewScopeSelectorObjectLike(io.dekorate.deps.kubernetes.api.model.ScopeSelector);

  public abstract A withAllowedHostPathObject(io.dekorate.deps.kubernetes.api.model.policy.AllowedHostPath);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$AllowedHostPathObjectNested<A> withNewAllowedHostPathObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$AllowedHostPathObjectNested<A> withNewAllowedHostPathObjectLike(io.dekorate.deps.kubernetes.api.model.policy.AllowedHostPath);

  public abstract A withNewAllowedHostPathObject(java.lang.String, java.lang.Boolean);

  public abstract A withStageInfoObject(io.dekorate.deps.openshift.api.model.StageInfo);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$StageInfoObjectNested<A> withNewStageInfoObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$StageInfoObjectNested<A> withNewStageInfoObjectLike(io.dekorate.deps.openshift.api.model.StageInfo);

  public abstract A withUserListObject(io.dekorate.deps.openshift.api.model.UserList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$UserListObjectNested<A> withNewUserListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$UserListObjectNested<A> withNewUserListObjectLike(io.dekorate.deps.openshift.api.model.UserList);

  public abstract A withSelfSubjectRulesReviewObject(io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectRulesReview);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SelfSubjectRulesReviewObjectNested<A> withNewSelfSubjectRulesReviewObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SelfSubjectRulesReviewObjectNested<A> withNewSelfSubjectRulesReviewObjectLike(io.dekorate.deps.kubernetes.api.model.authorization.SelfSubjectRulesReview);

  public abstract A withRoleObject(io.dekorate.deps.kubernetes.api.model.rbac.Role);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RoleObjectNested<A> withNewRoleObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RoleObjectNested<A> withNewRoleObjectLike(io.dekorate.deps.kubernetes.api.model.rbac.Role);

  public abstract A withServicePortObject(io.dekorate.deps.kubernetes.api.model.ServicePort);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ServicePortObjectNested<A> withNewServicePortObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ServicePortObjectNested<A> withNewServicePortObjectLike(io.dekorate.deps.kubernetes.api.model.ServicePort);

  public abstract A withUserObject(io.dekorate.deps.openshift.api.model.User);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$UserObjectNested<A> withNewUserObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$UserObjectNested<A> withNewUserObjectLike(io.dekorate.deps.openshift.api.model.User);

  public abstract A withSessionAffinityConfigObject(io.dekorate.deps.kubernetes.api.model.SessionAffinityConfig);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SessionAffinityConfigObjectNested<A> withNewSessionAffinityConfigObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SessionAffinityConfigObjectNested<A> withNewSessionAffinityConfigObjectLike(io.dekorate.deps.kubernetes.api.model.SessionAffinityConfig);

  public abstract A withBuildConditionObject(io.dekorate.deps.openshift.api.model.BuildCondition);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildConditionObjectNested<A> withNewBuildConditionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildConditionObjectNested<A> withNewBuildConditionObjectLike(io.dekorate.deps.openshift.api.model.BuildCondition);

  public abstract A withBuildStatusOutputToObject(io.dekorate.deps.openshift.api.model.BuildStatusOutputTo);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildStatusOutputToObjectNested<A> withNewBuildStatusOutputToObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildStatusOutputToObjectNested<A> withNewBuildStatusOutputToObjectLike(io.dekorate.deps.openshift.api.model.BuildStatusOutputTo);

  public abstract A withNewBuildStatusOutputToObject(java.lang.String);

  public abstract A withExecNewPodHookObject(io.dekorate.deps.openshift.api.model.ExecNewPodHook);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ExecNewPodHookObjectNested<A> withNewExecNewPodHookObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ExecNewPodHookObjectNested<A> withNewExecNewPodHookObjectLike(io.dekorate.deps.openshift.api.model.ExecNewPodHook);

  public abstract A withSecretSpecObject(io.dekorate.deps.openshift.api.model.SecretSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SecretSpecObjectNested<A> withNewSecretSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SecretSpecObjectNested<A> withNewSecretSpecObjectLike(io.dekorate.deps.openshift.api.model.SecretSpec);

  public abstract A withServiceAccountListObject(io.dekorate.deps.kubernetes.api.model.ServiceAccountList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ServiceAccountListObjectNested<A> withNewServiceAccountListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ServiceAccountListObjectNested<A> withNewServiceAccountListObjectLike(io.dekorate.deps.kubernetes.api.model.ServiceAccountList);

  public abstract A withComponentStatusObject(io.dekorate.deps.kubernetes.api.model.ComponentStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ComponentStatusObjectNested<A> withNewComponentStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ComponentStatusObjectNested<A> withNewComponentStatusObjectLike(io.dekorate.deps.kubernetes.api.model.ComponentStatus);

  public abstract A withCertificateSigningRequestConditionObject(io.dekorate.deps.kubernetes.api.model.certificates.CertificateSigningRequestCondition);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CertificateSigningRequestConditionObjectNested<A> withNewCertificateSigningRequestConditionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CertificateSigningRequestConditionObjectNested<A> withNewCertificateSigningRequestConditionObjectLike(io.dekorate.deps.kubernetes.api.model.certificates.CertificateSigningRequestCondition);

  public abstract A withNewCertificateSigningRequestConditionObject(java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract A withUpdateObject(io.dekorate.deps.openshift.api.model.Update);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$UpdateObjectNested<A> withNewUpdateObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$UpdateObjectNested<A> withNewUpdateObjectLike(io.dekorate.deps.openshift.api.model.Update);

  public abstract A withNewUpdateObject(java.lang.Boolean, java.lang.String, java.lang.String);

  public abstract A withDaemonEndpointObject(io.dekorate.deps.kubernetes.api.model.DaemonEndpoint);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DaemonEndpointObjectNested<A> withNewDaemonEndpointObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DaemonEndpointObjectNested<A> withNewDaemonEndpointObjectLike(io.dekorate.deps.kubernetes.api.model.DaemonEndpoint);

  public abstract A withNewDaemonEndpointObject(java.lang.Integer);

  public abstract A withBuildTriggerPolicyObject(io.dekorate.deps.openshift.api.model.BuildTriggerPolicy);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildTriggerPolicyObjectNested<A> withNewBuildTriggerPolicyObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildTriggerPolicyObjectNested<A> withNewBuildTriggerPolicyObjectLike(io.dekorate.deps.openshift.api.model.BuildTriggerPolicy);

  public abstract A withTokenReviewObject(io.dekorate.deps.kubernetes.api.model.authentication.TokenReview);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TokenReviewObjectNested<A> withNewTokenReviewObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TokenReviewObjectNested<A> withNewTokenReviewObjectLike(io.dekorate.deps.kubernetes.api.model.authentication.TokenReview);

  public abstract A withStorageClassListObject(io.dekorate.deps.kubernetes.api.model.storage.StorageClassList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$StorageClassListObjectNested<A> withNewStorageClassListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$StorageClassListObjectNested<A> withNewStorageClassListObjectLike(io.dekorate.deps.kubernetes.api.model.storage.StorageClassList);

  public abstract A withRoleListObject(io.dekorate.deps.kubernetes.api.model.rbac.RoleList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RoleListObjectNested<A> withNewRoleListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RoleListObjectNested<A> withNewRoleListObjectLike(io.dekorate.deps.kubernetes.api.model.rbac.RoleList);

  public abstract A withRoleRefObject(io.dekorate.deps.kubernetes.api.model.rbac.RoleRef);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RoleRefObjectNested<A> withNewRoleRefObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RoleRefObjectNested<A> withNewRoleRefObjectLike(io.dekorate.deps.kubernetes.api.model.rbac.RoleRef);

  public abstract A withNewRoleRefObject(java.lang.String, java.lang.String, java.lang.String);

  public abstract A withMetricTargetObject(io.dekorate.deps.kubernetes.api.model.MetricTarget);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$MetricTargetObjectNested<A> withNewMetricTargetObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$MetricTargetObjectNested<A> withNewMetricTargetObjectLike(io.dekorate.deps.kubernetes.api.model.MetricTarget);

  public abstract A withValidatingWebhookObject(io.dekorate.deps.kubernetes.api.model.admissionregistration.ValidatingWebhook);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ValidatingWebhookObjectNested<A> withNewValidatingWebhookObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ValidatingWebhookObjectNested<A> withNewValidatingWebhookObjectLike(io.dekorate.deps.kubernetes.api.model.admissionregistration.ValidatingWebhook);

  public abstract A withBindingObject(io.dekorate.deps.kubernetes.api.model.Binding);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BindingObjectNested<A> withNewBindingObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BindingObjectNested<A> withNewBindingObjectLike(io.dekorate.deps.kubernetes.api.model.Binding);

  public abstract A withDeploymentConfigSpecObject(io.dekorate.deps.openshift.api.model.DeploymentConfigSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DeploymentConfigSpecObjectNested<A> withNewDeploymentConfigSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$DeploymentConfigSpecObjectNested<A> withNewDeploymentConfigSpecObjectLike(io.dekorate.deps.openshift.api.model.DeploymentConfigSpec);

  public abstract A withNetworkPolicySpecObject(io.dekorate.deps.kubernetes.api.model.networking.NetworkPolicySpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NetworkPolicySpecObjectNested<A> withNewNetworkPolicySpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NetworkPolicySpecObjectNested<A> withNewNetworkPolicySpecObjectLike(io.dekorate.deps.kubernetes.api.model.networking.NetworkPolicySpec);

  public abstract A withRollingUpdateDaemonSetObject(io.dekorate.deps.kubernetes.api.model.apps.RollingUpdateDaemonSet);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RollingUpdateDaemonSetObjectNested<A> withNewRollingUpdateDaemonSetObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RollingUpdateDaemonSetObjectNested<A> withNewRollingUpdateDaemonSetObjectLike(io.dekorate.deps.kubernetes.api.model.apps.RollingUpdateDaemonSet);

  public abstract A withSecretObject(io.dekorate.deps.kubernetes.api.model.Secret);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SecretObjectNested<A> withNewSecretObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SecretObjectNested<A> withNewSecretObjectLike(io.dekorate.deps.kubernetes.api.model.Secret);

  public abstract A withServiceListObject(io.dekorate.deps.kubernetes.api.model.ServiceList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ServiceListObjectNested<A> withNewServiceListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ServiceListObjectNested<A> withNewServiceListObjectLike(io.dekorate.deps.kubernetes.api.model.ServiceList);

  public abstract A withCSINodeListObject(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSINodeList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CSINodeListObjectNested<A> withNewCSINodeListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CSINodeListObjectNested<A> withNewCSINodeListObjectLike(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSINodeList);

  public abstract A withEventSeriesObject(io.dekorate.deps.kubernetes.api.model.events.EventSeries);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EventsEventSeriesObjectNested<A> withNewEventsEventSeriesObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EventsEventSeriesObjectNested<A> withNewEventSeriesObjectLike(io.dekorate.deps.kubernetes.api.model.events.EventSeries);

  public abstract A withVolumeNodeAffinityObject(io.dekorate.deps.kubernetes.api.model.VolumeNodeAffinity);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$VolumeNodeAffinityObjectNested<A> withNewVolumeNodeAffinityObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$VolumeNodeAffinityObjectNested<A> withNewVolumeNodeAffinityObjectLike(io.dekorate.deps.kubernetes.api.model.VolumeNodeAffinity);

  public abstract A withClusterVersionSpecObject(io.dekorate.deps.openshift.api.model.ClusterVersionSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ClusterVersionSpecObjectNested<A> withNewClusterVersionSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ClusterVersionSpecObjectNested<A> withNewClusterVersionSpecObjectLike(io.dekorate.deps.openshift.api.model.ClusterVersionSpec);

  public abstract A withStatefulSetUpdateStrategyObject(io.dekorate.deps.kubernetes.api.model.apps.StatefulSetUpdateStrategy);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$StatefulSetUpdateStrategyObjectNested<A> withNewStatefulSetUpdateStrategyObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$StatefulSetUpdateStrategyObjectNested<A> withNewStatefulSetUpdateStrategyObjectLike(io.dekorate.deps.kubernetes.api.model.apps.StatefulSetUpdateStrategy);

  public abstract A withResourceQuotaSpecObject(io.dekorate.deps.kubernetes.api.model.ResourceQuotaSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ResourceQuotaSpecObjectNested<A> withNewResourceQuotaSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ResourceQuotaSpecObjectNested<A> withNewResourceQuotaSpecObjectLike(io.dekorate.deps.kubernetes.api.model.ResourceQuotaSpec);

  public abstract A withPodsMetricStatusObject(io.dekorate.deps.kubernetes.api.model.PodsMetricStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodsMetricStatusObjectNested<A> withNewPodsMetricStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodsMetricStatusObjectNested<A> withNewPodsMetricStatusObjectLike(io.dekorate.deps.kubernetes.api.model.PodsMetricStatus);

  public abstract A withGroupRestrictionObject(io.dekorate.deps.openshift.api.model.GroupRestriction);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$GroupRestrictionObjectNested<A> withNewGroupRestrictionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$GroupRestrictionObjectNested<A> withNewGroupRestrictionObjectLike(io.dekorate.deps.openshift.api.model.GroupRestriction);

  public abstract A withJenkinsPipelineBuildStrategyObject(io.dekorate.deps.openshift.api.model.JenkinsPipelineBuildStrategy);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$JenkinsPipelineBuildStrategyObjectNested<A> withNewJenkinsPipelineBuildStrategyObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$JenkinsPipelineBuildStrategyObjectNested<A> withNewJenkinsPipelineBuildStrategyObjectLike(io.dekorate.deps.openshift.api.model.JenkinsPipelineBuildStrategy);

  public abstract A withSecurityContextConstraintsObject(io.dekorate.deps.openshift.api.model.SecurityContextConstraints);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SecurityContextConstraintsObjectNested<A> withNewSecurityContextConstraintsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SecurityContextConstraintsObjectNested<A> withNewSecurityContextConstraintsObjectLike(io.dekorate.deps.openshift.api.model.SecurityContextConstraints);

  public abstract A withPodSecurityPolicyListObject(io.dekorate.deps.kubernetes.api.model.policy.PodSecurityPolicyList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodSecurityPolicyListObjectNested<A> withNewPodSecurityPolicyListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodSecurityPolicyListObjectNested<A> withNewPodSecurityPolicyListObjectLike(io.dekorate.deps.kubernetes.api.model.policy.PodSecurityPolicyList);

  public abstract A withSubjectObject(io.dekorate.deps.kubernetes.api.model.rbac.Subject);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SubjectObjectNested<A> withNewSubjectObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SubjectObjectNested<A> withNewSubjectObjectLike(io.dekorate.deps.kubernetes.api.model.rbac.Subject);

  public abstract A withNewSubjectObject(java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract A withReplicaSetConditionObject(io.dekorate.deps.kubernetes.api.model.apps.ReplicaSetCondition);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ReplicaSetConditionObjectNested<A> withNewReplicaSetConditionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ReplicaSetConditionObjectNested<A> withNewReplicaSetConditionObjectLike(io.dekorate.deps.kubernetes.api.model.apps.ReplicaSetCondition);

  public abstract A withNewReplicaSetConditionObject(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract A withBaseKubernetesListObject(io.dekorate.deps.kubernetes.api.model.BaseKubernetesList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BaseKubernetesListObjectNested<A> withNewBaseKubernetesListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BaseKubernetesListObjectNested<A> withNewBaseKubernetesListObjectLike(io.dekorate.deps.kubernetes.api.model.BaseKubernetesList);

  public abstract A withScaleStatusObject(io.dekorate.deps.kubernetes.api.model.v1.ScaleStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ScaleStatusObjectNested<A> withNewScaleStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ScaleStatusObjectNested<A> withNewScaleStatusObjectLike(io.dekorate.deps.kubernetes.api.model.v1.ScaleStatus);

  public abstract A withNewScaleStatusObject(java.lang.Integer, java.lang.String);

  public abstract A withSELinuxContextStrategyOptionsObject(io.dekorate.deps.openshift.api.model.SELinuxContextStrategyOptions);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SELinuxContextStrategyOptionsObjectNested<A> withNewSELinuxContextStrategyOptionsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SELinuxContextStrategyOptionsObjectNested<A> withNewSELinuxContextStrategyOptionsObjectLike(io.dekorate.deps.openshift.api.model.SELinuxContextStrategyOptions);

  public abstract A withTopologySelectorLabelRequirementObject(io.dekorate.deps.kubernetes.api.model.TopologySelectorLabelRequirement);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TopologySelectorLabelRequirementObjectNested<A> withNewTopologySelectorLabelRequirementObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$TopologySelectorLabelRequirementObjectNested<A> withNewTopologySelectorLabelRequirementObjectLike(io.dekorate.deps.kubernetes.api.model.TopologySelectorLabelRequirement);

  public abstract A withCSIDriverSpecObject(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSIDriverSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CSIDriverSpecObjectNested<A> withNewCSIDriverSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CSIDriverSpecObjectNested<A> withNewCSIDriverSpecObjectLike(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSIDriverSpec);

  public abstract A withRBDPersistentVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.RBDPersistentVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RBDPersistentVolumeSourceObjectNested<A> withNewRBDPersistentVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RBDPersistentVolumeSourceObjectNested<A> withNewRBDPersistentVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.RBDPersistentVolumeSource);

  public abstract A withSELinuxOptionsObject(io.dekorate.deps.kubernetes.api.model.SELinuxOptions);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SELinuxOptionsObjectNested<A> withNewSELinuxOptionsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SELinuxOptionsObjectNested<A> withNewSELinuxOptionsObjectLike(io.dekorate.deps.kubernetes.api.model.SELinuxOptions);

  public abstract A withNewSELinuxOptionsObject(java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract A withHostAliasObject(io.dekorate.deps.kubernetes.api.model.HostAlias);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$HostAliasObjectNested<A> withNewHostAliasObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$HostAliasObjectNested<A> withNewHostAliasObjectLike(io.dekorate.deps.kubernetes.api.model.HostAlias);

  public abstract A withImageStreamStatusObject(io.dekorate.deps.openshift.api.model.ImageStreamStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageStreamStatusObjectNested<A> withNewImageStreamStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ImageStreamStatusObjectNested<A> withNewImageStreamStatusObjectLike(io.dekorate.deps.openshift.api.model.ImageStreamStatus);

  public abstract A withNodeDaemonEndpointsObject(io.dekorate.deps.kubernetes.api.model.NodeDaemonEndpoints);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NodeDaemonEndpointsObjectNested<A> withNewNodeDaemonEndpointsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NodeDaemonEndpointsObjectNested<A> withNewNodeDaemonEndpointsObjectLike(io.dekorate.deps.kubernetes.api.model.NodeDaemonEndpoints);

  public abstract A withCSIVolumeSourceObject(io.dekorate.deps.kubernetes.api.model.CSIVolumeSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CSIVolumeSourceObjectNested<A> withNewCSIVolumeSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CSIVolumeSourceObjectNested<A> withNewCSIVolumeSourceObjectLike(io.dekorate.deps.kubernetes.api.model.CSIVolumeSource);

  public abstract A withNetNamespaceObject(io.dekorate.deps.openshift.api.model.NetNamespace);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NetNamespaceObjectNested<A> withNewNetNamespaceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NetNamespaceObjectNested<A> withNewNetNamespaceObjectLike(io.dekorate.deps.openshift.api.model.NetNamespace);

  public abstract A withPersistentVolumeSpecObject(io.dekorate.deps.kubernetes.api.model.PersistentVolumeSpec);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PersistentVolumeSpecObjectNested<A> withNewPersistentVolumeSpecObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PersistentVolumeSpecObjectNested<A> withNewPersistentVolumeSpecObjectLike(io.dekorate.deps.kubernetes.api.model.PersistentVolumeSpec);

  public abstract A withStatefulSetListObject(io.dekorate.deps.kubernetes.api.model.apps.StatefulSetList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$StatefulSetListObjectNested<A> withNewStatefulSetListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$StatefulSetListObjectNested<A> withNewStatefulSetListObjectLike(io.dekorate.deps.kubernetes.api.model.apps.StatefulSetList);

  public abstract A withSubjectRulesReviewStatusObject(io.dekorate.deps.kubernetes.api.model.authorization.SubjectRulesReviewStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SubjectRulesReviewStatusObjectNested<A> withNewSubjectRulesReviewStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SubjectRulesReviewStatusObjectNested<A> withNewSubjectRulesReviewStatusObjectLike(io.dekorate.deps.kubernetes.api.model.authorization.SubjectRulesReviewStatus);

  public abstract A withIDRangeObject(io.dekorate.deps.kubernetes.api.model.policy.IDRange);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$IDRangeObjectNested<A> withNewIDRangeObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$IDRangeObjectNested<A> withNewIDRangeObjectLike(io.dekorate.deps.kubernetes.api.model.policy.IDRange);

  public abstract A withNewIDRangeObject(java.lang.Long, java.lang.Long);

  public abstract A withOpenshiftClusterRoleBindingListObject(io.dekorate.deps.openshift.api.model.OpenshiftClusterRoleBindingList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OpenshiftClusterRoleBindingListObjectNested<A> withNewOpenshiftClusterRoleBindingListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$OpenshiftClusterRoleBindingListObjectNested<A> withNewOpenshiftClusterRoleBindingListObjectLike(io.dekorate.deps.openshift.api.model.OpenshiftClusterRoleBindingList);

  public abstract A withReplicaSetStatusObject(io.dekorate.deps.kubernetes.api.model.apps.ReplicaSetStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ReplicaSetStatusObjectNested<A> withNewReplicaSetStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ReplicaSetStatusObjectNested<A> withNewReplicaSetStatusObjectLike(io.dekorate.deps.kubernetes.api.model.apps.ReplicaSetStatus);

  public abstract A withNodeObject(io.dekorate.deps.kubernetes.api.model.Node);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NodeObjectNested<A> withNewNodeObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$NodeObjectNested<A> withNewNodeObjectLike(io.dekorate.deps.kubernetes.api.model.Node);

  public abstract A withPriorityClassListObject(io.dekorate.deps.kubernetes.api.model.scheduling.PriorityClassList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PriorityClassListObjectNested<A> withNewPriorityClassListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PriorityClassListObjectNested<A> withNewPriorityClassListObjectLike(io.dekorate.deps.kubernetes.api.model.scheduling.PriorityClassList);

  public abstract A withJobObject(io.dekorate.deps.kubernetes.api.model.batch.Job);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$JobObjectNested<A> withNewJobObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$JobObjectNested<A> withNewJobObjectLike(io.dekorate.deps.kubernetes.api.model.batch.Job);

  public abstract A withExecConfigObject(io.dekorate.deps.kubernetes.api.model.ExecConfig);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ExecConfigObjectNested<A> withNewExecConfigObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ExecConfigObjectNested<A> withNewExecConfigObjectLike(io.dekorate.deps.kubernetes.api.model.ExecConfig);

  public abstract A withPodStatusObject(io.dekorate.deps.kubernetes.api.model.PodStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodStatusObjectNested<A> withNewPodStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodStatusObjectNested<A> withNewPodStatusObjectLike(io.dekorate.deps.kubernetes.api.model.PodStatus);

  public abstract A withBuildOutputObject(io.dekorate.deps.openshift.api.model.BuildOutput);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildOutputObjectNested<A> withNewBuildOutputObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$BuildOutputObjectNested<A> withNewBuildOutputObjectLike(io.dekorate.deps.openshift.api.model.BuildOutput);

  public abstract A withPersistentVolumeStatusObject(io.dekorate.deps.kubernetes.api.model.PersistentVolumeStatus);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PersistentVolumeStatusObjectNested<A> withNewPersistentVolumeStatusObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PersistentVolumeStatusObjectNested<A> withNewPersistentVolumeStatusObjectLike(io.dekorate.deps.kubernetes.api.model.PersistentVolumeStatus);

  public abstract A withNewPersistentVolumeStatusObject(java.lang.String, java.lang.String, java.lang.String);

  public abstract A withCSINodeDriverObject(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSINodeDriver);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CSINodeDriverObjectNested<A> withNewCSINodeDriverObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CSINodeDriverObjectNested<A> withNewCSINodeDriverObjectLike(io.dekorate.deps.kubernetes.api.model.storage.v1beta1.CSINodeDriver);

  public abstract A withEndpointPortObject(io.dekorate.deps.kubernetes.api.model.EndpointPort);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EndpointPortObjectNested<A> withNewEndpointPortObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$EndpointPortObjectNested<A> withNewEndpointPortObjectLike(io.dekorate.deps.kubernetes.api.model.EndpointPort);

  public abstract A withNewEndpointPortObject(java.lang.String, java.lang.String, java.lang.Integer, java.lang.String);

  public abstract A withSourceRevisionObject(io.dekorate.deps.openshift.api.model.SourceRevision);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SourceRevisionObjectNested<A> withNewSourceRevisionObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SourceRevisionObjectNested<A> withNewSourceRevisionObjectLike(io.dekorate.deps.openshift.api.model.SourceRevision);

  public abstract A withJSONObject(io.dekorate.deps.kubernetes.api.model.apiextensions.JSON);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$JSONObjectNested<A> withNewJSONObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$JSONObjectNested<A> withNewJSONObjectLike(io.dekorate.deps.kubernetes.api.model.apiextensions.JSON);

  public abstract A withNewJSONObject(java.lang.String);

  public abstract A withLimitRangeItemObject(io.dekorate.deps.kubernetes.api.model.LimitRangeItem);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$LimitRangeItemObjectNested<A> withNewLimitRangeItemObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$LimitRangeItemObjectNested<A> withNewLimitRangeItemObjectLike(io.dekorate.deps.kubernetes.api.model.LimitRangeItem);

  public abstract A withCertificateSigningRequestObject(io.dekorate.deps.kubernetes.api.model.certificates.CertificateSigningRequest);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CertificateSigningRequestObjectNested<A> withNewCertificateSigningRequestObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$CertificateSigningRequestObjectNested<A> withNewCertificateSigningRequestObjectLike(io.dekorate.deps.kubernetes.api.model.certificates.CertificateSigningRequest);

  public abstract A withGetOptionsObject(io.dekorate.deps.kubernetes.api.model.GetOptions);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$GetOptionsObjectNested<A> withNewGetOptionsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$GetOptionsObjectNested<A> withNewGetOptionsObjectLike(io.dekorate.deps.kubernetes.api.model.GetOptions);

  public abstract A withNewGetOptionsObject(java.lang.String, java.lang.String, java.lang.String);

  public abstract A withClusterRoleListObject(io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleList);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ClusterRoleListObjectNested<A> withNewClusterRoleListObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ClusterRoleListObjectNested<A> withNewClusterRoleListObjectLike(io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleList);

  public abstract A withRouteIngressObject(io.dekorate.deps.openshift.api.model.RouteIngress);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RouteIngressObjectNested<A> withNewRouteIngressObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$RouteIngressObjectNested<A> withNewRouteIngressObjectLike(io.dekorate.deps.openshift.api.model.RouteIngress);

  public abstract A withServiceAccountObject(io.dekorate.deps.kubernetes.api.model.ServiceAccount);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ServiceAccountObjectNested<A> withNewServiceAccountObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$ServiceAccountObjectNested<A> withNewServiceAccountObjectLike(io.dekorate.deps.kubernetes.api.model.ServiceAccount);

  public abstract A withSupplementalGroupsStrategyOptionsObject(io.dekorate.deps.kubernetes.api.model.policy.SupplementalGroupsStrategyOptions);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SupplementalGroupsStrategyOptionsObjectNested<A> withNewSupplementalGroupsStrategyOptionsObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$SupplementalGroupsStrategyOptionsObjectNested<A> withNewSupplementalGroupsStrategyOptionsObjectLike(io.dekorate.deps.kubernetes.api.model.policy.SupplementalGroupsStrategyOptions);

  public abstract A withVolumeAttachmentSourceObject(io.dekorate.deps.kubernetes.api.model.storage.VolumeAttachmentSource);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$VolumeAttachmentSourceObjectNested<A> withNewVolumeAttachmentSourceObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$VolumeAttachmentSourceObjectNested<A> withNewVolumeAttachmentSourceObjectLike(io.dekorate.deps.kubernetes.api.model.storage.VolumeAttachmentSource);

  public abstract A withPodIPObject(io.dekorate.deps.kubernetes.api.model.PodIP);

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodIPObjectNested<A> withNewPodIPObject();

  public abstract io.dekorate.deps.kubernetes.api.model.WatchEventFluent$PodIPObjectNested<A> withNewPodIPObjectLike(io.dekorate.deps.kubernetes.api.model.PodIP);

  public abstract A withNewPodIPObject(java.lang.String);

  public abstract java.lang.String getType();

  public abstract A withType(java.lang.String);

  public abstract java.lang.Boolean hasType();

  public abstract A withNewType(java.lang.String);

  public abstract A withNewType(java.lang.StringBuilder);

  public abstract A withNewType(java.lang.StringBuffer);
}
