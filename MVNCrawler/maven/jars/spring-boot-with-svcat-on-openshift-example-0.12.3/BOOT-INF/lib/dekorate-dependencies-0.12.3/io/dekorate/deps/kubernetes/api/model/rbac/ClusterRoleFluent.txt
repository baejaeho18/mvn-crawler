Compiled from "ClusterRoleFluent.java"
public interface io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleFluent<A extends io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract io.dekorate.deps.kubernetes.api.model.rbac.AggregationRule getAggregationRule();

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.AggregationRule buildAggregationRule();

  public abstract A withAggregationRule(io.dekorate.deps.kubernetes.api.model.rbac.AggregationRule);

  public abstract java.lang.Boolean hasAggregationRule();

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleFluent$AggregationRuleNested<A> withNewAggregationRule();

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleFluent$AggregationRuleNested<A> withNewAggregationRuleLike(io.dekorate.deps.kubernetes.api.model.rbac.AggregationRule);

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleFluent$AggregationRuleNested<A> editAggregationRule();

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleFluent$AggregationRuleNested<A> editOrNewAggregationRule();

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleFluent$AggregationRuleNested<A> editOrNewAggregationRuleLike(io.dekorate.deps.kubernetes.api.model.rbac.AggregationRule);

  public abstract java.lang.String getApiVersion();

  public abstract A withApiVersion(java.lang.String);

  public abstract java.lang.Boolean hasApiVersion();

  public abstract A withNewApiVersion(java.lang.String);

  public abstract A withNewApiVersion(java.lang.StringBuilder);

  public abstract A withNewApiVersion(java.lang.StringBuffer);

  public abstract java.lang.String getKind();

  public abstract A withKind(java.lang.String);

  public abstract java.lang.Boolean hasKind();

  public abstract A withNewKind(java.lang.String);

  public abstract A withNewKind(java.lang.StringBuilder);

  public abstract A withNewKind(java.lang.StringBuffer);

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectMeta getMetadata();

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectMeta buildMetadata();

  public abstract A withMetadata(io.dekorate.deps.kubernetes.api.model.ObjectMeta);

  public abstract java.lang.Boolean hasMetadata();

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleFluent$MetadataNested<A> withNewMetadata();

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleFluent$MetadataNested<A> withNewMetadataLike(io.dekorate.deps.kubernetes.api.model.ObjectMeta);

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleFluent$MetadataNested<A> editMetadata();

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleFluent$MetadataNested<A> editOrNewMetadata();

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleFluent$MetadataNested<A> editOrNewMetadataLike(io.dekorate.deps.kubernetes.api.model.ObjectMeta);

  public abstract A addToRules(int, io.dekorate.deps.kubernetes.api.model.rbac.PolicyRule);

  public abstract A setToRules(int, io.dekorate.deps.kubernetes.api.model.rbac.PolicyRule);

  public abstract A addToRules(io.dekorate.deps.kubernetes.api.model.rbac.PolicyRule...);

  public abstract A addAllToRules(java.util.Collection<io.dekorate.deps.kubernetes.api.model.rbac.PolicyRule>);

  public abstract A removeFromRules(io.dekorate.deps.kubernetes.api.model.rbac.PolicyRule...);

  public abstract A removeAllFromRules(java.util.Collection<io.dekorate.deps.kubernetes.api.model.rbac.PolicyRule>);

  public abstract A removeMatchingFromRules(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.rbac.PolicyRuleBuilder>);

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.rbac.PolicyRule> getRules();

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.rbac.PolicyRule> buildRules();

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.PolicyRule buildRule(int);

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.PolicyRule buildFirstRule();

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.PolicyRule buildLastRule();

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.PolicyRule buildMatchingRule(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.rbac.PolicyRuleBuilder>);

  public abstract java.lang.Boolean hasMatchingRule(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.rbac.PolicyRuleBuilder>);

  public abstract A withRules(java.util.List<io.dekorate.deps.kubernetes.api.model.rbac.PolicyRule>);

  public abstract A withRules(io.dekorate.deps.kubernetes.api.model.rbac.PolicyRule...);

  public abstract java.lang.Boolean hasRules();

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleFluent$RulesNested<A> addNewRule();

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleFluent$RulesNested<A> addNewRuleLike(io.dekorate.deps.kubernetes.api.model.rbac.PolicyRule);

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleFluent$RulesNested<A> setNewRuleLike(int, io.dekorate.deps.kubernetes.api.model.rbac.PolicyRule);

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleFluent$RulesNested<A> editRule(int);

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleFluent$RulesNested<A> editFirstRule();

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleFluent$RulesNested<A> editLastRule();

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleFluent$RulesNested<A> editMatchingRule(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.rbac.PolicyRuleBuilder>);
}
