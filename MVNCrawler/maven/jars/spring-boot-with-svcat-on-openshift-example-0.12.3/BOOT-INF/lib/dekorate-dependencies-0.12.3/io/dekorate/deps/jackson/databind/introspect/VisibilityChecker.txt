Compiled from "VisibilityChecker.java"
public interface io.dekorate.deps.jackson.databind.introspect.VisibilityChecker<T extends io.dekorate.deps.jackson.databind.introspect.VisibilityChecker<T>> {
  public abstract T with(io.dekorate.deps.jackson.annotation.JsonAutoDetect);

  public abstract T withOverrides(io.dekorate.deps.jackson.annotation.JsonAutoDetect$Value);

  public abstract T with(io.dekorate.deps.jackson.annotation.JsonAutoDetect$Visibility);

  public abstract T withVisibility(io.dekorate.deps.jackson.annotation.PropertyAccessor, io.dekorate.deps.jackson.annotation.JsonAutoDetect$Visibility);

  public abstract T withGetterVisibility(io.dekorate.deps.jackson.annotation.JsonAutoDetect$Visibility);

  public abstract T withIsGetterVisibility(io.dekorate.deps.jackson.annotation.JsonAutoDetect$Visibility);

  public abstract T withSetterVisibility(io.dekorate.deps.jackson.annotation.JsonAutoDetect$Visibility);

  public abstract T withCreatorVisibility(io.dekorate.deps.jackson.annotation.JsonAutoDetect$Visibility);

  public abstract T withFieldVisibility(io.dekorate.deps.jackson.annotation.JsonAutoDetect$Visibility);

  public abstract boolean isGetterVisible(java.lang.reflect.Method);

  public abstract boolean isGetterVisible(io.dekorate.deps.jackson.databind.introspect.AnnotatedMethod);

  public abstract boolean isIsGetterVisible(java.lang.reflect.Method);

  public abstract boolean isIsGetterVisible(io.dekorate.deps.jackson.databind.introspect.AnnotatedMethod);

  public abstract boolean isSetterVisible(java.lang.reflect.Method);

  public abstract boolean isSetterVisible(io.dekorate.deps.jackson.databind.introspect.AnnotatedMethod);

  public abstract boolean isCreatorVisible(java.lang.reflect.Member);

  public abstract boolean isCreatorVisible(io.dekorate.deps.jackson.databind.introspect.AnnotatedMember);

  public abstract boolean isFieldVisible(java.lang.reflect.Field);

  public abstract boolean isFieldVisible(io.dekorate.deps.jackson.databind.introspect.AnnotatedField);
}
