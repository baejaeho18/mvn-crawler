Compiled from "ApplicationSpecFluent.java"
public interface io.dekorate.deps.applicationcrd.api.model.ApplicationSpecFluent<A extends io.dekorate.deps.applicationcrd.api.model.ApplicationSpecFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getAssemblyPhase();

  public abstract A withAssemblyPhase(java.lang.String);

  public abstract java.lang.Boolean hasAssemblyPhase();

  public abstract A withNewAssemblyPhase(java.lang.String);

  public abstract A withNewAssemblyPhase(java.lang.StringBuilder);

  public abstract A withNewAssemblyPhase(java.lang.StringBuffer);

  public abstract A addToComponentKinds(int, io.dekorate.deps.applicationcrd.api.model.GroupKind);

  public abstract A setToComponentKinds(int, io.dekorate.deps.applicationcrd.api.model.GroupKind);

  public abstract A addToComponentKinds(io.dekorate.deps.applicationcrd.api.model.GroupKind...);

  public abstract A addAllToComponentKinds(java.util.Collection<io.dekorate.deps.applicationcrd.api.model.GroupKind>);

  public abstract A removeFromComponentKinds(io.dekorate.deps.applicationcrd.api.model.GroupKind...);

  public abstract A removeAllFromComponentKinds(java.util.Collection<io.dekorate.deps.applicationcrd.api.model.GroupKind>);

  public abstract java.util.List<io.dekorate.deps.applicationcrd.api.model.GroupKind> getComponentKinds();

  public abstract java.util.List<io.dekorate.deps.applicationcrd.api.model.GroupKind> buildComponentKinds();

  public abstract io.dekorate.deps.applicationcrd.api.model.GroupKind buildComponentKind(int);

  public abstract io.dekorate.deps.applicationcrd.api.model.GroupKind buildFirstComponentKind();

  public abstract io.dekorate.deps.applicationcrd.api.model.GroupKind buildLastComponentKind();

  public abstract io.dekorate.deps.applicationcrd.api.model.GroupKind buildMatchingComponentKind(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.applicationcrd.api.model.GroupKindBuilder>);

  public abstract java.lang.Boolean hasMatchingComponentKind(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.applicationcrd.api.model.GroupKindBuilder>);

  public abstract A withComponentKinds(java.util.List<io.dekorate.deps.applicationcrd.api.model.GroupKind>);

  public abstract A withComponentKinds(io.dekorate.deps.applicationcrd.api.model.GroupKind...);

  public abstract java.lang.Boolean hasComponentKinds();

  public abstract A addNewComponentKind(java.lang.String, java.lang.String);

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationSpecFluent$ComponentKindsNested<A> addNewComponentKind();

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationSpecFluent$ComponentKindsNested<A> addNewComponentKindLike(io.dekorate.deps.applicationcrd.api.model.GroupKind);

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationSpecFluent$ComponentKindsNested<A> setNewComponentKindLike(int, io.dekorate.deps.applicationcrd.api.model.GroupKind);

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationSpecFluent$ComponentKindsNested<A> editComponentKind(int);

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationSpecFluent$ComponentKindsNested<A> editFirstComponentKind();

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationSpecFluent$ComponentKindsNested<A> editLastComponentKind();

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationSpecFluent$ComponentKindsNested<A> editMatchingComponentKind(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.applicationcrd.api.model.GroupKindBuilder>);

  public abstract io.dekorate.deps.applicationcrd.api.model.Descriptor getDescriptor();

  public abstract io.dekorate.deps.applicationcrd.api.model.Descriptor buildDescriptor();

  public abstract A withDescriptor(io.dekorate.deps.applicationcrd.api.model.Descriptor);

  public abstract java.lang.Boolean hasDescriptor();

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationSpecFluent$DescriptorNested<A> withNewDescriptor();

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationSpecFluent$DescriptorNested<A> withNewDescriptorLike(io.dekorate.deps.applicationcrd.api.model.Descriptor);

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationSpecFluent$DescriptorNested<A> editDescriptor();

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationSpecFluent$DescriptorNested<A> editOrNewDescriptor();

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationSpecFluent$DescriptorNested<A> editOrNewDescriptorLike(io.dekorate.deps.applicationcrd.api.model.Descriptor);

  public abstract A addToInfo(int, io.dekorate.deps.applicationcrd.api.model.InfoItem);

  public abstract A setToInfo(int, io.dekorate.deps.applicationcrd.api.model.InfoItem);

  public abstract A addToInfo(io.dekorate.deps.applicationcrd.api.model.InfoItem...);

  public abstract A addAllToInfo(java.util.Collection<io.dekorate.deps.applicationcrd.api.model.InfoItem>);

  public abstract A removeFromInfo(io.dekorate.deps.applicationcrd.api.model.InfoItem...);

  public abstract A removeAllFromInfo(java.util.Collection<io.dekorate.deps.applicationcrd.api.model.InfoItem>);

  public abstract java.util.List<io.dekorate.deps.applicationcrd.api.model.InfoItem> getInfo();

  public abstract java.util.List<io.dekorate.deps.applicationcrd.api.model.InfoItem> buildInfo();

  public abstract io.dekorate.deps.applicationcrd.api.model.InfoItem buildInfo(int);

  public abstract io.dekorate.deps.applicationcrd.api.model.InfoItem buildFirstInfo();

  public abstract io.dekorate.deps.applicationcrd.api.model.InfoItem buildLastInfo();

  public abstract io.dekorate.deps.applicationcrd.api.model.InfoItem buildMatchingInfo(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.applicationcrd.api.model.InfoItemBuilder>);

  public abstract java.lang.Boolean hasMatchingInfo(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.applicationcrd.api.model.InfoItemBuilder>);

  public abstract A withInfo(java.util.List<io.dekorate.deps.applicationcrd.api.model.InfoItem>);

  public abstract A withInfo(io.dekorate.deps.applicationcrd.api.model.InfoItem...);

  public abstract java.lang.Boolean hasInfo();

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationSpecFluent$InfoNested<A> addNewInfo();

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationSpecFluent$InfoNested<A> addNewInfoLike(io.dekorate.deps.applicationcrd.api.model.InfoItem);

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationSpecFluent$InfoNested<A> setNewInfoLike(int, io.dekorate.deps.applicationcrd.api.model.InfoItem);

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationSpecFluent$InfoNested<A> editInfo(int);

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationSpecFluent$InfoNested<A> editFirstInfo();

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationSpecFluent$InfoNested<A> editLastInfo();

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationSpecFluent$InfoNested<A> editMatchingInfo(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.applicationcrd.api.model.InfoItemBuilder>);

  public abstract io.dekorate.deps.kubernetes.api.model.LabelSelector getSelector();

  public abstract io.dekorate.deps.kubernetes.api.model.LabelSelector buildSelector();

  public abstract A withSelector(io.dekorate.deps.kubernetes.api.model.LabelSelector);

  public abstract java.lang.Boolean hasSelector();

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationSpecFluent$SelectorNested<A> withNewSelector();

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationSpecFluent$SelectorNested<A> withNewSelectorLike(io.dekorate.deps.kubernetes.api.model.LabelSelector);

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationSpecFluent$SelectorNested<A> editSelector();

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationSpecFluent$SelectorNested<A> editOrNewSelector();

  public abstract io.dekorate.deps.applicationcrd.api.model.ApplicationSpecFluent$SelectorNested<A> editOrNewSelectorLike(io.dekorate.deps.kubernetes.api.model.LabelSelector);
}
