Compiled from "HuffmanDecoder.java"
class io.dekorate.deps.commons.compress.compressors.deflate64.HuffmanDecoder$BinaryTreeNode {
  private final int bits;

  int literal;

  io.dekorate.deps.commons.compress.compressors.deflate64.HuffmanDecoder$BinaryTreeNode leftNode;

  io.dekorate.deps.commons.compress.compressors.deflate64.HuffmanDecoder$BinaryTreeNode rightNode;

  private io.dekorate.deps.commons.compress.compressors.deflate64.HuffmanDecoder$BinaryTreeNode(int);
    Code:
       0: aload_0
       1: invokespecial #21                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #23                 // Field literal:I
       9: aload_0
      10: iload_1
      11: putfield      #25                 // Field bits:I
      14: return

  void leaf(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #23                 // Field literal:I
       5: aload_0
       6: aconst_null
       7: putfield      #29                 // Field leftNode:Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;
      10: aload_0
      11: aconst_null
      12: putfield      #31                 // Field rightNode:Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;
      15: return

  io.dekorate.deps.commons.compress.compressors.deflate64.HuffmanDecoder$BinaryTreeNode left();
    Code:
       0: aload_0
       1: getfield      #29                 // Field leftNode:Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;
       4: ifnonnull     32
       7: aload_0
       8: getfield      #23                 // Field literal:I
      11: iconst_m1
      12: if_icmpne     32
      15: aload_0
      16: new           #2                  // class io/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode
      19: dup
      20: aload_0
      21: getfield      #25                 // Field bits:I
      24: iconst_1
      25: iadd
      26: invokespecial #36                 // Method "<init>":(I)V
      29: putfield      #29                 // Field leftNode:Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;
      32: aload_0
      33: getfield      #29                 // Field leftNode:Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;
      36: areturn

  io.dekorate.deps.commons.compress.compressors.deflate64.HuffmanDecoder$BinaryTreeNode right();
    Code:
       0: aload_0
       1: getfield      #31                 // Field rightNode:Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;
       4: ifnonnull     32
       7: aload_0
       8: getfield      #23                 // Field literal:I
      11: iconst_m1
      12: if_icmpne     32
      15: aload_0
      16: new           #2                  // class io/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode
      19: dup
      20: aload_0
      21: getfield      #25                 // Field bits:I
      24: iconst_1
      25: iadd
      26: invokespecial #36                 // Method "<init>":(I)V
      29: putfield      #31                 // Field rightNode:Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;
      32: aload_0
      33: getfield      #31                 // Field rightNode:Lio/dekorate/deps/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;
      36: areturn

  io.dekorate.deps.commons.compress.compressors.deflate64.HuffmanDecoder$BinaryTreeNode(int, io.dekorate.deps.commons.compress.compressors.deflate64.HuffmanDecoder$1);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #36                 // Method "<init>":(I)V
       5: return
}
