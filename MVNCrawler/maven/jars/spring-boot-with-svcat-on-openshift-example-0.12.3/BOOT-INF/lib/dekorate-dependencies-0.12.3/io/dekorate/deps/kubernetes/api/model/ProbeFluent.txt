Compiled from "ProbeFluent.java"
public interface io.dekorate.deps.kubernetes.api.model.ProbeFluent<A extends io.dekorate.deps.kubernetes.api.model.ProbeFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract io.dekorate.deps.kubernetes.api.model.ExecAction getExec();

  public abstract io.dekorate.deps.kubernetes.api.model.ExecAction buildExec();

  public abstract A withExec(io.dekorate.deps.kubernetes.api.model.ExecAction);

  public abstract java.lang.Boolean hasExec();

  public abstract io.dekorate.deps.kubernetes.api.model.ProbeFluent$ExecNested<A> withNewExec();

  public abstract io.dekorate.deps.kubernetes.api.model.ProbeFluent$ExecNested<A> withNewExecLike(io.dekorate.deps.kubernetes.api.model.ExecAction);

  public abstract io.dekorate.deps.kubernetes.api.model.ProbeFluent$ExecNested<A> editExec();

  public abstract io.dekorate.deps.kubernetes.api.model.ProbeFluent$ExecNested<A> editOrNewExec();

  public abstract io.dekorate.deps.kubernetes.api.model.ProbeFluent$ExecNested<A> editOrNewExecLike(io.dekorate.deps.kubernetes.api.model.ExecAction);

  public abstract java.lang.Integer getFailureThreshold();

  public abstract A withFailureThreshold(java.lang.Integer);

  public abstract java.lang.Boolean hasFailureThreshold();

  public abstract io.dekorate.deps.kubernetes.api.model.HTTPGetAction getHttpGet();

  public abstract io.dekorate.deps.kubernetes.api.model.HTTPGetAction buildHttpGet();

  public abstract A withHttpGet(io.dekorate.deps.kubernetes.api.model.HTTPGetAction);

  public abstract java.lang.Boolean hasHttpGet();

  public abstract io.dekorate.deps.kubernetes.api.model.ProbeFluent$HttpGetNested<A> withNewHttpGet();

  public abstract io.dekorate.deps.kubernetes.api.model.ProbeFluent$HttpGetNested<A> withNewHttpGetLike(io.dekorate.deps.kubernetes.api.model.HTTPGetAction);

  public abstract io.dekorate.deps.kubernetes.api.model.ProbeFluent$HttpGetNested<A> editHttpGet();

  public abstract io.dekorate.deps.kubernetes.api.model.ProbeFluent$HttpGetNested<A> editOrNewHttpGet();

  public abstract io.dekorate.deps.kubernetes.api.model.ProbeFluent$HttpGetNested<A> editOrNewHttpGetLike(io.dekorate.deps.kubernetes.api.model.HTTPGetAction);

  public abstract java.lang.Integer getInitialDelaySeconds();

  public abstract A withInitialDelaySeconds(java.lang.Integer);

  public abstract java.lang.Boolean hasInitialDelaySeconds();

  public abstract java.lang.Integer getPeriodSeconds();

  public abstract A withPeriodSeconds(java.lang.Integer);

  public abstract java.lang.Boolean hasPeriodSeconds();

  public abstract java.lang.Integer getSuccessThreshold();

  public abstract A withSuccessThreshold(java.lang.Integer);

  public abstract java.lang.Boolean hasSuccessThreshold();

  public abstract io.dekorate.deps.kubernetes.api.model.TCPSocketAction getTcpSocket();

  public abstract io.dekorate.deps.kubernetes.api.model.TCPSocketAction buildTcpSocket();

  public abstract A withTcpSocket(io.dekorate.deps.kubernetes.api.model.TCPSocketAction);

  public abstract java.lang.Boolean hasTcpSocket();

  public abstract io.dekorate.deps.kubernetes.api.model.ProbeFluent$TcpSocketNested<A> withNewTcpSocket();

  public abstract io.dekorate.deps.kubernetes.api.model.ProbeFluent$TcpSocketNested<A> withNewTcpSocketLike(io.dekorate.deps.kubernetes.api.model.TCPSocketAction);

  public abstract io.dekorate.deps.kubernetes.api.model.ProbeFluent$TcpSocketNested<A> editTcpSocket();

  public abstract io.dekorate.deps.kubernetes.api.model.ProbeFluent$TcpSocketNested<A> editOrNewTcpSocket();

  public abstract io.dekorate.deps.kubernetes.api.model.ProbeFluent$TcpSocketNested<A> editOrNewTcpSocketLike(io.dekorate.deps.kubernetes.api.model.TCPSocketAction);

  public abstract java.lang.Integer getTimeoutSeconds();

  public abstract A withTimeoutSeconds(java.lang.Integer);

  public abstract java.lang.Boolean hasTimeoutSeconds();
}
