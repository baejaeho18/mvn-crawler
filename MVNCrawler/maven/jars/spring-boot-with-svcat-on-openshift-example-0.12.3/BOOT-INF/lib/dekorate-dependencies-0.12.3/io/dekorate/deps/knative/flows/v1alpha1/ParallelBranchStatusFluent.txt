Compiled from "ParallelBranchStatusFluent.java"
public interface io.dekorate.deps.knative.flows.v1alpha1.ParallelBranchStatusFluent<A extends io.dekorate.deps.knative.flows.v1alpha1.ParallelBranchStatusFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract io.dekorate.deps.knative.flows.v1alpha1.ParallelChannelStatus getFilterChannelStatus();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.ParallelChannelStatus buildFilterChannelStatus();

  public abstract A withFilterChannelStatus(io.dekorate.deps.knative.flows.v1alpha1.ParallelChannelStatus);

  public abstract java.lang.Boolean hasFilterChannelStatus();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.ParallelBranchStatusFluent$FilterChannelStatusNested<A> withNewFilterChannelStatus();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.ParallelBranchStatusFluent$FilterChannelStatusNested<A> withNewFilterChannelStatusLike(io.dekorate.deps.knative.flows.v1alpha1.ParallelChannelStatus);

  public abstract io.dekorate.deps.knative.flows.v1alpha1.ParallelBranchStatusFluent$FilterChannelStatusNested<A> editFilterChannelStatus();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.ParallelBranchStatusFluent$FilterChannelStatusNested<A> editOrNewFilterChannelStatus();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.ParallelBranchStatusFluent$FilterChannelStatusNested<A> editOrNewFilterChannelStatusLike(io.dekorate.deps.knative.flows.v1alpha1.ParallelChannelStatus);

  public abstract io.dekorate.deps.knative.flows.v1alpha1.ParallelSubscriptionStatus getFilterSubscriptionStatus();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.ParallelSubscriptionStatus buildFilterSubscriptionStatus();

  public abstract A withFilterSubscriptionStatus(io.dekorate.deps.knative.flows.v1alpha1.ParallelSubscriptionStatus);

  public abstract java.lang.Boolean hasFilterSubscriptionStatus();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.ParallelBranchStatusFluent$FilterSubscriptionStatusNested<A> withNewFilterSubscriptionStatus();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.ParallelBranchStatusFluent$FilterSubscriptionStatusNested<A> withNewFilterSubscriptionStatusLike(io.dekorate.deps.knative.flows.v1alpha1.ParallelSubscriptionStatus);

  public abstract io.dekorate.deps.knative.flows.v1alpha1.ParallelBranchStatusFluent$FilterSubscriptionStatusNested<A> editFilterSubscriptionStatus();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.ParallelBranchStatusFluent$FilterSubscriptionStatusNested<A> editOrNewFilterSubscriptionStatus();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.ParallelBranchStatusFluent$FilterSubscriptionStatusNested<A> editOrNewFilterSubscriptionStatusLike(io.dekorate.deps.knative.flows.v1alpha1.ParallelSubscriptionStatus);

  public abstract io.dekorate.deps.knative.flows.v1alpha1.ParallelSubscriptionStatus getSubscriberSubscriptionStatus();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.ParallelSubscriptionStatus buildSubscriberSubscriptionStatus();

  public abstract A withSubscriberSubscriptionStatus(io.dekorate.deps.knative.flows.v1alpha1.ParallelSubscriptionStatus);

  public abstract java.lang.Boolean hasSubscriberSubscriptionStatus();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.ParallelBranchStatusFluent$SubscriberSubscriptionStatusNested<A> withNewSubscriberSubscriptionStatus();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.ParallelBranchStatusFluent$SubscriberSubscriptionStatusNested<A> withNewSubscriberSubscriptionStatusLike(io.dekorate.deps.knative.flows.v1alpha1.ParallelSubscriptionStatus);

  public abstract io.dekorate.deps.knative.flows.v1alpha1.ParallelBranchStatusFluent$SubscriberSubscriptionStatusNested<A> editSubscriberSubscriptionStatus();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.ParallelBranchStatusFluent$SubscriberSubscriptionStatusNested<A> editOrNewSubscriberSubscriptionStatus();

  public abstract io.dekorate.deps.knative.flows.v1alpha1.ParallelBranchStatusFluent$SubscriberSubscriptionStatusNested<A> editOrNewSubscriberSubscriptionStatusLike(io.dekorate.deps.knative.flows.v1alpha1.ParallelSubscriptionStatus);
}
