Compiled from "SequenceNode.java"
public class io.dekorate.deps.snakeyaml.nodes.SequenceNode extends io.dekorate.deps.snakeyaml.nodes.CollectionNode<io.dekorate.deps.snakeyaml.nodes.Node> {
  private final java.util.List<io.dekorate.deps.snakeyaml.nodes.Node> value;

  public io.dekorate.deps.snakeyaml.nodes.SequenceNode(io.dekorate.deps.snakeyaml.nodes.Tag, boolean, java.util.List<io.dekorate.deps.snakeyaml.nodes.Node>, io.dekorate.deps.snakeyaml.error.Mark, io.dekorate.deps.snakeyaml.error.Mark, io.dekorate.deps.snakeyaml.DumperOptions$FlowStyle);
    Code:
       0: aload_0
       1: aload_1
       2: aload         4
       4: aload         5
       6: aload         6
       8: invokespecial #20                 // Method io/dekorate/deps/snakeyaml/nodes/CollectionNode."<init>":(Lio/dekorate/deps/snakeyaml/nodes/Tag;Lio/dekorate/deps/snakeyaml/error/Mark;Lio/dekorate/deps/snakeyaml/error/Mark;Lio/dekorate/deps/snakeyaml/DumperOptions$FlowStyle;)V
      11: aload_3
      12: ifnonnull     25
      15: new           #22                 // class java/lang/NullPointerException
      18: dup
      19: ldc           #24                 // String value in a Node is required.
      21: invokespecial #27                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: aload_0
      26: aload_3
      27: putfield      #35                 // Field value:Ljava/util/List;
      30: aload_0
      31: iload_2
      32: putfield      #39                 // Field resolved:Z
      35: return

  public io.dekorate.deps.snakeyaml.nodes.SequenceNode(io.dekorate.deps.snakeyaml.nodes.Tag, java.util.List<io.dekorate.deps.snakeyaml.nodes.Node>, io.dekorate.deps.snakeyaml.DumperOptions$FlowStyle);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: aload_2
       4: aconst_null
       5: aconst_null
       6: aload_3
       7: invokespecial #52                 // Method "<init>":(Lio/dekorate/deps/snakeyaml/nodes/Tag;ZLjava/util/List;Lio/dekorate/deps/snakeyaml/error/Mark;Lio/dekorate/deps/snakeyaml/error/Mark;Lio/dekorate/deps/snakeyaml/DumperOptions$FlowStyle;)V
      10: return

  public io.dekorate.deps.snakeyaml.nodes.SequenceNode(io.dekorate.deps.snakeyaml.nodes.Tag, java.util.List<io.dekorate.deps.snakeyaml.nodes.Node>, java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #59                 // Method io/dekorate/deps/snakeyaml/DumperOptions$FlowStyle.fromBoolean:(Ljava/lang/Boolean;)Lio/dekorate/deps/snakeyaml/DumperOptions$FlowStyle;
       7: invokespecial #61                 // Method "<init>":(Lio/dekorate/deps/snakeyaml/nodes/Tag;Ljava/util/List;Lio/dekorate/deps/snakeyaml/DumperOptions$FlowStyle;)V
      10: return

  public io.dekorate.deps.snakeyaml.nodes.SequenceNode(io.dekorate.deps.snakeyaml.nodes.Tag, boolean, java.util.List<io.dekorate.deps.snakeyaml.nodes.Node>, io.dekorate.deps.snakeyaml.error.Mark, io.dekorate.deps.snakeyaml.error.Mark, java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #59                 // Method io/dekorate/deps/snakeyaml/DumperOptions$FlowStyle.fromBoolean:(Ljava/lang/Boolean;)Lio/dekorate/deps/snakeyaml/DumperOptions$FlowStyle;
      13: invokespecial #52                 // Method "<init>":(Lio/dekorate/deps/snakeyaml/nodes/Tag;ZLjava/util/List;Lio/dekorate/deps/snakeyaml/error/Mark;Lio/dekorate/deps/snakeyaml/error/Mark;Lio/dekorate/deps/snakeyaml/DumperOptions$FlowStyle;)V
      16: return

  public io.dekorate.deps.snakeyaml.nodes.NodeId getNodeId();
    Code:
       0: getstatic     #73                 // Field io/dekorate/deps/snakeyaml/nodes/NodeId.sequence:Lio/dekorate/deps/snakeyaml/nodes/NodeId;
       3: areturn

  public java.util.List<io.dekorate.deps.snakeyaml.nodes.Node> getValue();
    Code:
       0: aload_0
       1: getfield      #35                 // Field value:Ljava/util/List;
       4: areturn

  public void setListType(java.lang.Class<? extends java.lang.Object>);
    Code:
       0: aload_0
       1: getfield      #35                 // Field value:Ljava/util/List;
       4: invokeinterface #83,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #89,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          37
      19: aload_2
      20: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #95                 // class io/dekorate/deps/snakeyaml/nodes/Node
      28: astore_3
      29: aload_3
      30: aload_1
      31: invokevirtual #98                 // Method io/dekorate/deps/snakeyaml/nodes/Node.setType:(Ljava/lang/Class;)V
      34: goto          10
      37: return

  public java.lang.String toString();
    Code:
       0: new           #109                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #112                // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #114                // String <
       9: invokevirtual #118                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #124                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      16: invokevirtual #129                // Method java/lang/Class.getName:()Ljava/lang/String;
      19: invokevirtual #118                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #131                // String  (tag=
      24: invokevirtual #118                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: invokevirtual #135                // Method getTag:()Lio/dekorate/deps/snakeyaml/nodes/Tag;
      31: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      34: ldc           #140                // String , value=
      36: invokevirtual #118                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: invokevirtual #142                // Method getValue:()Ljava/util/List;
      43: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      46: ldc           #144                // String )>
      48: invokevirtual #118                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #146                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: areturn
}
