Compiled from "ClusterRoleBindingFluent.java"
public interface io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBindingFluent<A extends io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBindingFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getApiVersion();

  public abstract A withApiVersion(java.lang.String);

  public abstract java.lang.Boolean hasApiVersion();

  public abstract A withNewApiVersion(java.lang.String);

  public abstract A withNewApiVersion(java.lang.StringBuilder);

  public abstract A withNewApiVersion(java.lang.StringBuffer);

  public abstract java.lang.String getKind();

  public abstract A withKind(java.lang.String);

  public abstract java.lang.Boolean hasKind();

  public abstract A withNewKind(java.lang.String);

  public abstract A withNewKind(java.lang.StringBuilder);

  public abstract A withNewKind(java.lang.StringBuffer);

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectMeta getMetadata();

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectMeta buildMetadata();

  public abstract A withMetadata(io.dekorate.deps.kubernetes.api.model.ObjectMeta);

  public abstract java.lang.Boolean hasMetadata();

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBindingFluent$MetadataNested<A> withNewMetadata();

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBindingFluent$MetadataNested<A> withNewMetadataLike(io.dekorate.deps.kubernetes.api.model.ObjectMeta);

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBindingFluent$MetadataNested<A> editMetadata();

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBindingFluent$MetadataNested<A> editOrNewMetadata();

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBindingFluent$MetadataNested<A> editOrNewMetadataLike(io.dekorate.deps.kubernetes.api.model.ObjectMeta);

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.RoleRef getRoleRef();

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.RoleRef buildRoleRef();

  public abstract A withRoleRef(io.dekorate.deps.kubernetes.api.model.rbac.RoleRef);

  public abstract java.lang.Boolean hasRoleRef();

  public abstract A withNewRoleRef(java.lang.String, java.lang.String, java.lang.String);

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBindingFluent$RoleRefNested<A> withNewRoleRef();

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBindingFluent$RoleRefNested<A> withNewRoleRefLike(io.dekorate.deps.kubernetes.api.model.rbac.RoleRef);

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBindingFluent$RoleRefNested<A> editRoleRef();

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBindingFluent$RoleRefNested<A> editOrNewRoleRef();

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBindingFluent$RoleRefNested<A> editOrNewRoleRefLike(io.dekorate.deps.kubernetes.api.model.rbac.RoleRef);

  public abstract A addToSubjects(int, io.dekorate.deps.kubernetes.api.model.rbac.Subject);

  public abstract A setToSubjects(int, io.dekorate.deps.kubernetes.api.model.rbac.Subject);

  public abstract A addToSubjects(io.dekorate.deps.kubernetes.api.model.rbac.Subject...);

  public abstract A addAllToSubjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.rbac.Subject>);

  public abstract A removeFromSubjects(io.dekorate.deps.kubernetes.api.model.rbac.Subject...);

  public abstract A removeAllFromSubjects(java.util.Collection<io.dekorate.deps.kubernetes.api.model.rbac.Subject>);

  public abstract A removeMatchingFromSubjects(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.rbac.SubjectBuilder>);

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.rbac.Subject> getSubjects();

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.rbac.Subject> buildSubjects();

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.Subject buildSubject(int);

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.Subject buildFirstSubject();

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.Subject buildLastSubject();

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.Subject buildMatchingSubject(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.rbac.SubjectBuilder>);

  public abstract java.lang.Boolean hasMatchingSubject(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.rbac.SubjectBuilder>);

  public abstract A withSubjects(java.util.List<io.dekorate.deps.kubernetes.api.model.rbac.Subject>);

  public abstract A withSubjects(io.dekorate.deps.kubernetes.api.model.rbac.Subject...);

  public abstract java.lang.Boolean hasSubjects();

  public abstract A addNewSubject(java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBindingFluent$SubjectsNested<A> addNewSubject();

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBindingFluent$SubjectsNested<A> addNewSubjectLike(io.dekorate.deps.kubernetes.api.model.rbac.Subject);

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBindingFluent$SubjectsNested<A> setNewSubjectLike(int, io.dekorate.deps.kubernetes.api.model.rbac.Subject);

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBindingFluent$SubjectsNested<A> editSubject(int);

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBindingFluent$SubjectsNested<A> editFirstSubject();

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBindingFluent$SubjectsNested<A> editLastSubject();

  public abstract io.dekorate.deps.kubernetes.api.model.rbac.ClusterRoleBindingFluent$SubjectsNested<A> editMatchingSubject(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.rbac.SubjectBuilder>);
}
