Compiled from "BrokerSpecFluent.java"
public interface io.dekorate.deps.knative.eventing.v1alpha1.BrokerSpecFluent<A extends io.dekorate.deps.knative.eventing.v1alpha1.BrokerSpecFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract io.dekorate.deps.knative.dev.messaging.v1beta1.ChannelTemplateSpec getChannelTemplateSpec();

  public abstract io.dekorate.deps.knative.dev.messaging.v1beta1.ChannelTemplateSpec buildChannelTemplateSpec();

  public abstract A withChannelTemplateSpec(io.dekorate.deps.knative.dev.messaging.v1beta1.ChannelTemplateSpec);

  public abstract java.lang.Boolean hasChannelTemplateSpec();

  public abstract io.dekorate.deps.knative.eventing.v1alpha1.BrokerSpecFluent$ChannelTemplateSpecNested<A> withNewChannelTemplateSpec();

  public abstract io.dekorate.deps.knative.eventing.v1alpha1.BrokerSpecFluent$ChannelTemplateSpecNested<A> withNewChannelTemplateSpecLike(io.dekorate.deps.knative.dev.messaging.v1beta1.ChannelTemplateSpec);

  public abstract io.dekorate.deps.knative.eventing.v1alpha1.BrokerSpecFluent$ChannelTemplateSpecNested<A> editChannelTemplateSpec();

  public abstract io.dekorate.deps.knative.eventing.v1alpha1.BrokerSpecFluent$ChannelTemplateSpecNested<A> editOrNewChannelTemplateSpec();

  public abstract io.dekorate.deps.knative.eventing.v1alpha1.BrokerSpecFluent$ChannelTemplateSpecNested<A> editOrNewChannelTemplateSpecLike(io.dekorate.deps.knative.dev.messaging.v1beta1.ChannelTemplateSpec);

  public abstract io.dekorate.deps.knative.duck.v1.KReference getConfig();

  public abstract io.dekorate.deps.knative.duck.v1.KReference buildConfig();

  public abstract A withConfig(io.dekorate.deps.knative.duck.v1.KReference);

  public abstract java.lang.Boolean hasConfig();

  public abstract A withNewConfig(java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract io.dekorate.deps.knative.eventing.v1alpha1.BrokerSpecFluent$ConfigNested<A> withNewConfig();

  public abstract io.dekorate.deps.knative.eventing.v1alpha1.BrokerSpecFluent$ConfigNested<A> withNewConfigLike(io.dekorate.deps.knative.duck.v1.KReference);

  public abstract io.dekorate.deps.knative.eventing.v1alpha1.BrokerSpecFluent$ConfigNested<A> editConfig();

  public abstract io.dekorate.deps.knative.eventing.v1alpha1.BrokerSpecFluent$ConfigNested<A> editOrNewConfig();

  public abstract io.dekorate.deps.knative.eventing.v1alpha1.BrokerSpecFluent$ConfigNested<A> editOrNewConfigLike(io.dekorate.deps.knative.duck.v1.KReference);

  public abstract io.dekorate.deps.knative.dev.duck.v1beta1.DeliverySpec getDelivery();

  public abstract io.dekorate.deps.knative.dev.duck.v1beta1.DeliverySpec buildDelivery();

  public abstract A withDelivery(io.dekorate.deps.knative.dev.duck.v1beta1.DeliverySpec);

  public abstract java.lang.Boolean hasDelivery();

  public abstract io.dekorate.deps.knative.eventing.v1alpha1.BrokerSpecFluent$DeliveryNested<A> withNewDelivery();

  public abstract io.dekorate.deps.knative.eventing.v1alpha1.BrokerSpecFluent$DeliveryNested<A> withNewDeliveryLike(io.dekorate.deps.knative.dev.duck.v1beta1.DeliverySpec);

  public abstract io.dekorate.deps.knative.eventing.v1alpha1.BrokerSpecFluent$DeliveryNested<A> editDelivery();

  public abstract io.dekorate.deps.knative.eventing.v1alpha1.BrokerSpecFluent$DeliveryNested<A> editOrNewDelivery();

  public abstract io.dekorate.deps.knative.eventing.v1alpha1.BrokerSpecFluent$DeliveryNested<A> editOrNewDeliveryLike(io.dekorate.deps.knative.dev.duck.v1beta1.DeliverySpec);
}
