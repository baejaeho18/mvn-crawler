Compiled from "EndpointsFluent.java"
public interface io.dekorate.deps.kubernetes.api.model.EndpointsFluent<A extends io.dekorate.deps.kubernetes.api.model.EndpointsFluent<A>> extends io.dekorate.deps.kubernetes.api.builder.Fluent<A> {
  public abstract java.lang.String getApiVersion();

  public abstract A withApiVersion(java.lang.String);

  public abstract java.lang.Boolean hasApiVersion();

  public abstract A withNewApiVersion(java.lang.String);

  public abstract A withNewApiVersion(java.lang.StringBuilder);

  public abstract A withNewApiVersion(java.lang.StringBuffer);

  public abstract java.lang.String getKind();

  public abstract A withKind(java.lang.String);

  public abstract java.lang.Boolean hasKind();

  public abstract A withNewKind(java.lang.String);

  public abstract A withNewKind(java.lang.StringBuilder);

  public abstract A withNewKind(java.lang.StringBuffer);

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectMeta getMetadata();

  public abstract io.dekorate.deps.kubernetes.api.model.ObjectMeta buildMetadata();

  public abstract A withMetadata(io.dekorate.deps.kubernetes.api.model.ObjectMeta);

  public abstract java.lang.Boolean hasMetadata();

  public abstract io.dekorate.deps.kubernetes.api.model.EndpointsFluent$MetadataNested<A> withNewMetadata();

  public abstract io.dekorate.deps.kubernetes.api.model.EndpointsFluent$MetadataNested<A> withNewMetadataLike(io.dekorate.deps.kubernetes.api.model.ObjectMeta);

  public abstract io.dekorate.deps.kubernetes.api.model.EndpointsFluent$MetadataNested<A> editMetadata();

  public abstract io.dekorate.deps.kubernetes.api.model.EndpointsFluent$MetadataNested<A> editOrNewMetadata();

  public abstract io.dekorate.deps.kubernetes.api.model.EndpointsFluent$MetadataNested<A> editOrNewMetadataLike(io.dekorate.deps.kubernetes.api.model.ObjectMeta);

  public abstract A addToSubsets(int, io.dekorate.deps.kubernetes.api.model.EndpointSubset);

  public abstract A setToSubsets(int, io.dekorate.deps.kubernetes.api.model.EndpointSubset);

  public abstract A addToSubsets(io.dekorate.deps.kubernetes.api.model.EndpointSubset...);

  public abstract A addAllToSubsets(java.util.Collection<io.dekorate.deps.kubernetes.api.model.EndpointSubset>);

  public abstract A removeFromSubsets(io.dekorate.deps.kubernetes.api.model.EndpointSubset...);

  public abstract A removeAllFromSubsets(java.util.Collection<io.dekorate.deps.kubernetes.api.model.EndpointSubset>);

  public abstract A removeMatchingFromSubsets(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.EndpointSubsetBuilder>);

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.EndpointSubset> getSubsets();

  public abstract java.util.List<io.dekorate.deps.kubernetes.api.model.EndpointSubset> buildSubsets();

  public abstract io.dekorate.deps.kubernetes.api.model.EndpointSubset buildSubset(int);

  public abstract io.dekorate.deps.kubernetes.api.model.EndpointSubset buildFirstSubset();

  public abstract io.dekorate.deps.kubernetes.api.model.EndpointSubset buildLastSubset();

  public abstract io.dekorate.deps.kubernetes.api.model.EndpointSubset buildMatchingSubset(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.EndpointSubsetBuilder>);

  public abstract java.lang.Boolean hasMatchingSubset(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.EndpointSubsetBuilder>);

  public abstract A withSubsets(java.util.List<io.dekorate.deps.kubernetes.api.model.EndpointSubset>);

  public abstract A withSubsets(io.dekorate.deps.kubernetes.api.model.EndpointSubset...);

  public abstract java.lang.Boolean hasSubsets();

  public abstract io.dekorate.deps.kubernetes.api.model.EndpointsFluent$SubsetsNested<A> addNewSubset();

  public abstract io.dekorate.deps.kubernetes.api.model.EndpointsFluent$SubsetsNested<A> addNewSubsetLike(io.dekorate.deps.kubernetes.api.model.EndpointSubset);

  public abstract io.dekorate.deps.kubernetes.api.model.EndpointsFluent$SubsetsNested<A> setNewSubsetLike(int, io.dekorate.deps.kubernetes.api.model.EndpointSubset);

  public abstract io.dekorate.deps.kubernetes.api.model.EndpointsFluent$SubsetsNested<A> editSubset(int);

  public abstract io.dekorate.deps.kubernetes.api.model.EndpointsFluent$SubsetsNested<A> editFirstSubset();

  public abstract io.dekorate.deps.kubernetes.api.model.EndpointsFluent$SubsetsNested<A> editLastSubset();

  public abstract io.dekorate.deps.kubernetes.api.model.EndpointsFluent$SubsetsNested<A> editMatchingSubset(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.deps.kubernetes.api.model.EndpointSubsetBuilder>);
}
