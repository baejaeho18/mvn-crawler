Compiled from "DataSourceUtils.java"
public abstract class org.springframework.jdbc.datasource.DataSourceUtils {
  public static final int CONNECTION_SYNCHRONIZATION_ORDER;

  private static final org.apache.commons.logging.Log logger;

  public org.springframework.jdbc.datasource.DataSourceUtils();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.sql.Connection getConnection(javax.sql.DataSource) throws org.springframework.jdbc.CannotGetJdbcConnectionException;
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method doGetConnection:(Ljavax/sql/DataSource;)Ljava/sql/Connection;
       4: areturn
       5: astore_1
       6: new           #5                  // class org/springframework/jdbc/CannotGetJdbcConnectionException
       9: dup
      10: ldc           #6                  // String Failed to obtain JDBC Connection
      12: aload_1
      13: invokespecial #7                  // Method org/springframework/jdbc/CannotGetJdbcConnectionException."<init>":(Ljava/lang/String;Ljava/sql/SQLException;)V
      16: athrow
      17: astore_1
      18: new           #5                  // class org/springframework/jdbc/CannotGetJdbcConnectionException
      21: dup
      22: new           #9                  // class java/lang/StringBuilder
      25: dup
      26: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #11                 // String Failed to obtain JDBC Connection:
      31: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_1
      35: invokevirtual #13                 // Method java/lang/IllegalStateException.getMessage:()Ljava/lang/String;
      38: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #15                 // Method org/springframework/jdbc/CannotGetJdbcConnectionException."<init>":(Ljava/lang/String;)V
      47: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/sql/SQLException
           0     4    17   Class java/lang/IllegalStateException

  public static java.sql.Connection doGetConnection(javax.sql.DataSource) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ldc           #16                 // String No DataSource specified
       3: invokestatic  #17                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokestatic  #18                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.getResource:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #19                 // class org/springframework/jdbc/datasource/ConnectionHolder
      13: astore_1
      14: aload_1
      15: ifnull        66
      18: aload_1
      19: invokevirtual #20                 // Method org/springframework/jdbc/datasource/ConnectionHolder.hasConnection:()Z
      22: ifne          32
      25: aload_1
      26: invokevirtual #21                 // Method org/springframework/jdbc/datasource/ConnectionHolder.isSynchronizedWithTransaction:()Z
      29: ifeq          66
      32: aload_1
      33: invokevirtual #22                 // Method org/springframework/jdbc/datasource/ConnectionHolder.requested:()V
      36: aload_1
      37: invokevirtual #20                 // Method org/springframework/jdbc/datasource/ConnectionHolder.hasConnection:()Z
      40: ifne          61
      43: getstatic     #23                 // Field logger:Lorg/apache/commons/logging/Log;
      46: ldc           #24                 // String Fetching resumed JDBC Connection from DataSource
      48: invokeinterface #25,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      53: aload_1
      54: aload_0
      55: invokestatic  #26                 // Method fetchConnection:(Ljavax/sql/DataSource;)Ljava/sql/Connection;
      58: invokevirtual #27                 // Method org/springframework/jdbc/datasource/ConnectionHolder.setConnection:(Ljava/sql/Connection;)V
      61: aload_1
      62: invokevirtual #28                 // Method org/springframework/jdbc/datasource/ConnectionHolder.getConnection:()Ljava/sql/Connection;
      65: areturn
      66: getstatic     #23                 // Field logger:Lorg/apache/commons/logging/Log;
      69: ldc           #29                 // String Fetching JDBC Connection from DataSource
      71: invokeinterface #25,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      76: aload_0
      77: invokestatic  #26                 // Method fetchConnection:(Ljavax/sql/DataSource;)Ljava/sql/Connection;
      80: astore_2
      81: invokestatic  #30                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.isSynchronizationActive:()Z
      84: ifeq          152
      87: aload_1
      88: astore_3
      89: aload_3
      90: ifnonnull     105
      93: new           #19                 // class org/springframework/jdbc/datasource/ConnectionHolder
      96: dup
      97: aload_2
      98: invokespecial #31                 // Method org/springframework/jdbc/datasource/ConnectionHolder."<init>":(Ljava/sql/Connection;)V
     101: astore_3
     102: goto          110
     105: aload_3
     106: aload_2
     107: invokevirtual #27                 // Method org/springframework/jdbc/datasource/ConnectionHolder.setConnection:(Ljava/sql/Connection;)V
     110: aload_3
     111: invokevirtual #22                 // Method org/springframework/jdbc/datasource/ConnectionHolder.requested:()V
     114: new           #32                 // class org/springframework/jdbc/datasource/DataSourceUtils$ConnectionSynchronization
     117: dup
     118: aload_3
     119: aload_0
     120: invokespecial #33                 // Method org/springframework/jdbc/datasource/DataSourceUtils$ConnectionSynchronization."<init>":(Lorg/springframework/jdbc/datasource/ConnectionHolder;Ljavax/sql/DataSource;)V
     123: invokestatic  #34                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.registerSynchronization:(Lorg/springframework/transaction/support/TransactionSynchronization;)V
     126: aload_3
     127: iconst_1
     128: invokevirtual #35                 // Method org/springframework/jdbc/datasource/ConnectionHolder.setSynchronizedWithTransaction:(Z)V
     131: aload_3
     132: aload_1
     133: if_acmpeq     141
     136: aload_0
     137: aload_3
     138: invokestatic  #36                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.bindResource:(Ljava/lang/Object;Ljava/lang/Object;)V
     141: goto          152
     144: astore_3
     145: aload_2
     146: aload_0
     147: invokestatic  #38                 // Method releaseConnection:(Ljava/sql/Connection;Ljavax/sql/DataSource;)V
     150: aload_3
     151: athrow
     152: aload_2
     153: areturn
    Exception table:
       from    to  target type
          87   141   144   Class java/lang/RuntimeException

  private static java.sql.Connection fetchConnection(javax.sql.DataSource) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokeinterface #39,  1           // InterfaceMethod javax/sql/DataSource.getConnection:()Ljava/sql/Connection;
       6: astore_1
       7: aload_1
       8: ifnonnull     38
      11: new           #8                  // class java/lang/IllegalStateException
      14: dup
      15: new           #9                  // class java/lang/StringBuilder
      18: dup
      19: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #40                 // String DataSource returned null from getConnection():
      24: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #42                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_1
      39: areturn

  public static java.lang.Integer prepareConnectionForTransaction(java.sql.Connection, org.springframework.transaction.TransactionDefinition) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ldc           #43                 // String No Connection specified
       3: invokestatic  #17                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ifnull        115
      10: aload_1
      11: invokeinterface #44,  1           // InterfaceMethod org/springframework/transaction/TransactionDefinition.isReadOnly:()Z
      16: ifeq          115
      19: getstatic     #23                 // Field logger:Lorg/apache/commons/logging/Log;
      22: invokeinterface #45,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      27: ifeq          62
      30: getstatic     #23                 // Field logger:Lorg/apache/commons/logging/Log;
      33: new           #9                  // class java/lang/StringBuilder
      36: dup
      37: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #46                 // String Setting JDBC Connection [
      42: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_0
      46: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      49: ldc           #47                 // String ] read-only
      51: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokeinterface #25,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      62: aload_0
      63: iconst_1
      64: invokeinterface #48,  2           // InterfaceMethod java/sql/Connection.setReadOnly:(Z)V
      69: goto          115
      72: astore_2
      73: aload_2
      74: astore_3
      75: aload_3
      76: ifnull        104
      79: aload_3
      80: invokevirtual #49                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      83: invokevirtual #50                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      86: ldc           #51                 // String Timeout
      88: invokevirtual #52                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      91: ifeq          96
      94: aload_2
      95: athrow
      96: aload_3
      97: invokevirtual #53                 // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
     100: astore_3
     101: goto          75
     104: getstatic     #23                 // Field logger:Lorg/apache/commons/logging/Log;
     107: ldc           #54                 // String Could not set JDBC Connection read-only
     109: aload_2
     110: invokeinterface #55,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     115: aconst_null
     116: astore_2
     117: aload_1
     118: ifnull        217
     121: aload_1
     122: invokeinterface #56,  1           // InterfaceMethod org/springframework/transaction/TransactionDefinition.getIsolationLevel:()I
     127: iconst_m1
     128: if_icmpeq     217
     131: getstatic     #23                 // Field logger:Lorg/apache/commons/logging/Log;
     134: invokeinterface #45,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     139: ifeq          183
     142: getstatic     #23                 // Field logger:Lorg/apache/commons/logging/Log;
     145: new           #9                  // class java/lang/StringBuilder
     148: dup
     149: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     152: ldc           #58                 // String Changing isolation level of JDBC Connection [
     154: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     157: aload_0
     158: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     161: ldc           #59                 // String ] to
     163: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     166: aload_1
     167: invokeinterface #56,  1           // InterfaceMethod org/springframework/transaction/TransactionDefinition.getIsolationLevel:()I
     172: invokevirtual #60                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     175: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     178: invokeinterface #25,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     183: aload_0
     184: invokeinterface #61,  1           // InterfaceMethod java/sql/Connection.getTransactionIsolation:()I
     189: istore_3
     190: iload_3
     191: aload_1
     192: invokeinterface #56,  1           // InterfaceMethod org/springframework/transaction/TransactionDefinition.getIsolationLevel:()I
     197: if_icmpeq     217
     200: iload_3
     201: invokestatic  #62                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     204: astore_2
     205: aload_0
     206: aload_1
     207: invokeinterface #56,  1           // InterfaceMethod org/springframework/transaction/TransactionDefinition.getIsolationLevel:()I
     212: invokeinterface #63,  2           // InterfaceMethod java/sql/Connection.setTransactionIsolation:(I)V
     217: aload_2
     218: areturn
    Exception table:
       from    to  target type
          19    69    72   Class java/sql/SQLException
          19    69    72   Class java/lang/RuntimeException

  public static void resetConnectionAfterTransaction(java.sql.Connection, java.lang.Integer);
    Code:
       0: aload_0
       1: ldc           #43                 // String No Connection specified
       3: invokestatic  #17                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ifnull        67
      10: getstatic     #23                 // Field logger:Lorg/apache/commons/logging/Log;
      13: invokeinterface #45,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      18: ifeq          57
      21: getstatic     #23                 // Field logger:Lorg/apache/commons/logging/Log;
      24: new           #9                  // class java/lang/StringBuilder
      27: dup
      28: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #64                 // String Resetting isolation level of JDBC Connection [
      33: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      40: ldc           #59                 // String ] to
      42: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_1
      46: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      49: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokeinterface #25,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      57: aload_0
      58: aload_1
      59: invokevirtual #65                 // Method java/lang/Integer.intValue:()I
      62: invokeinterface #63,  2           // InterfaceMethod java/sql/Connection.setTransactionIsolation:(I)V
      67: aload_0
      68: invokeinterface #66,  1           // InterfaceMethod java/sql/Connection.isReadOnly:()Z
      73: ifeq          126
      76: getstatic     #23                 // Field logger:Lorg/apache/commons/logging/Log;
      79: invokeinterface #45,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      84: ifeq          119
      87: getstatic     #23                 // Field logger:Lorg/apache/commons/logging/Log;
      90: new           #9                  // class java/lang/StringBuilder
      93: dup
      94: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      97: ldc           #67                 // String Resetting read-only flag of JDBC Connection [
      99: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: aload_0
     103: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     106: ldc           #68                 // String ]
     108: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     114: invokeinterface #25,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     119: aload_0
     120: iconst_0
     121: invokeinterface #48,  2           // InterfaceMethod java/sql/Connection.setReadOnly:(Z)V
     126: goto          141
     129: astore_2
     130: getstatic     #23                 // Field logger:Lorg/apache/commons/logging/Log;
     133: ldc           #70                 // String Could not reset JDBC Connection after transaction
     135: aload_2
     136: invokeinterface #55,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     141: return
    Exception table:
       from    to  target type
           6   126   129   Class java/lang/Throwable

  public static boolean isConnectionTransactional(java.sql.Connection, javax.sql.DataSource);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: invokestatic  #18                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.getResource:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #19                 // class org/springframework/jdbc/datasource/ConnectionHolder
      13: astore_2
      14: aload_2
      15: ifnull        30
      18: aload_2
      19: aload_0
      20: invokestatic  #71                 // Method connectionEquals:(Lorg/springframework/jdbc/datasource/ConnectionHolder;Ljava/sql/Connection;)Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public static void applyTransactionTimeout(java.sql.Statement, javax.sql.DataSource) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_m1
       3: invokestatic  #72                 // Method applyTimeout:(Ljava/sql/Statement;Ljavax/sql/DataSource;I)V
       6: return

  public static void applyTimeout(java.sql.Statement, javax.sql.DataSource, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ldc           #73                 // String No Statement specified
       3: invokestatic  #17                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aconst_null
       7: astore_3
       8: aload_1
       9: ifnull        20
      12: aload_1
      13: invokestatic  #18                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.getResource:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #19                 // class org/springframework/jdbc/datasource/ConnectionHolder
      19: astore_3
      20: aload_3
      21: ifnull        44
      24: aload_3
      25: invokevirtual #74                 // Method org/springframework/jdbc/datasource/ConnectionHolder.hasTimeout:()Z
      28: ifeq          44
      31: aload_0
      32: aload_3
      33: invokevirtual #75                 // Method org/springframework/jdbc/datasource/ConnectionHolder.getTimeToLiveInSeconds:()I
      36: invokeinterface #76,  2           // InterfaceMethod java/sql/Statement.setQueryTimeout:(I)V
      41: goto          55
      44: iload_2
      45: iflt          55
      48: aload_0
      49: iload_2
      50: invokeinterface #76,  2           // InterfaceMethod java/sql/Statement.setQueryTimeout:(I)V
      55: return

  public static void releaseConnection(java.sql.Connection, javax.sql.DataSource);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #77                 // Method doReleaseConnection:(Ljava/sql/Connection;Ljavax/sql/DataSource;)V
       5: goto          35
       8: astore_2
       9: getstatic     #23                 // Field logger:Lorg/apache/commons/logging/Log;
      12: ldc           #78                 // String Could not close JDBC Connection
      14: aload_2
      15: invokeinterface #55,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      20: goto          35
      23: astore_2
      24: getstatic     #23                 // Field logger:Lorg/apache/commons/logging/Log;
      27: ldc           #79                 // String Unexpected exception on closing JDBC Connection
      29: aload_2
      30: invokeinterface #55,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      35: return
    Exception table:
       from    to  target type
           0     5     8   Class java/sql/SQLException
           0     5    23   Class java/lang/Throwable

  public static void doReleaseConnection(java.sql.Connection, javax.sql.DataSource) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ifnonnull     5
       4: return
       5: aload_1
       6: ifnull        34
       9: aload_1
      10: invokestatic  #18                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.getResource:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #19                 // class org/springframework/jdbc/datasource/ConnectionHolder
      16: astore_2
      17: aload_2
      18: ifnull        34
      21: aload_2
      22: aload_0
      23: invokestatic  #71                 // Method connectionEquals:(Lorg/springframework/jdbc/datasource/ConnectionHolder;Ljava/sql/Connection;)Z
      26: ifeq          34
      29: aload_2
      30: invokevirtual #80                 // Method org/springframework/jdbc/datasource/ConnectionHolder.released:()V
      33: return
      34: aload_0
      35: aload_1
      36: invokestatic  #81                 // Method doCloseConnection:(Ljava/sql/Connection;Ljavax/sql/DataSource;)V
      39: return

  public static void doCloseConnection(java.sql.Connection, javax.sql.DataSource) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: instanceof    #82                 // class org/springframework/jdbc/datasource/SmartDataSource
       4: ifeq          20
       7: aload_1
       8: checkcast     #82                 // class org/springframework/jdbc/datasource/SmartDataSource
      11: aload_0
      12: invokeinterface #83,  2           // InterfaceMethod org/springframework/jdbc/datasource/SmartDataSource.shouldClose:(Ljava/sql/Connection;)Z
      17: ifeq          26
      20: aload_0
      21: invokeinterface #84,  1           // InterfaceMethod java/sql/Connection.close:()V
      26: return

  private static boolean connectionEquals(org.springframework.jdbc.datasource.ConnectionHolder, java.sql.Connection);
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method org/springframework/jdbc/datasource/ConnectionHolder.hasConnection:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: invokevirtual #28                 // Method org/springframework/jdbc/datasource/ConnectionHolder.getConnection:()Ljava/sql/Connection;
      13: astore_2
      14: aload_2
      15: aload_1
      16: if_acmpeq     38
      19: aload_2
      20: aload_1
      21: invokevirtual #85                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      24: ifne          38
      27: aload_2
      28: invokestatic  #86                 // Method getTargetConnection:(Ljava/sql/Connection;)Ljava/sql/Connection;
      31: aload_1
      32: invokevirtual #85                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      35: ifeq          42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: ireturn

  public static java.sql.Connection getTargetConnection(java.sql.Connection);
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: instanceof    #87                 // class org/springframework/jdbc/datasource/ConnectionProxy
       6: ifeq          22
       9: aload_1
      10: checkcast     #87                 // class org/springframework/jdbc/datasource/ConnectionProxy
      13: invokeinterface #88,  1           // InterfaceMethod org/springframework/jdbc/datasource/ConnectionProxy.getTargetConnection:()Ljava/sql/Connection;
      18: astore_1
      19: goto          2
      22: aload_1
      23: areturn

  private static int getConnectionSynchronizationOrder(javax.sql.DataSource);
    Code:
       0: sipush        1000
       3: istore_1
       4: aload_0
       5: astore_2
       6: aload_2
       7: instanceof    #90                 // class org/springframework/jdbc/datasource/DelegatingDataSource
      10: ifeq          27
      13: iinc          1, -1
      16: aload_2
      17: checkcast     #90                 // class org/springframework/jdbc/datasource/DelegatingDataSource
      20: invokevirtual #91                 // Method org/springframework/jdbc/datasource/DelegatingDataSource.getTargetDataSource:()Ljavax/sql/DataSource;
      23: astore_2
      24: goto          6
      27: iload_1
      28: ireturn

  static int access$000(javax.sql.DataSource);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method getConnectionSynchronizationOrder:(Ljavax/sql/DataSource;)I
       4: ireturn

  static {};
    Code:
       0: ldc           #89                 // class org/springframework/jdbc/datasource/DataSourceUtils
       2: invokestatic  #92                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #23                 // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
