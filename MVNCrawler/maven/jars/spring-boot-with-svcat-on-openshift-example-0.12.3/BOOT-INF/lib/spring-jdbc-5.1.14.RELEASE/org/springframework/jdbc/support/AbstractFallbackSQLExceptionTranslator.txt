Compiled from "AbstractFallbackSQLExceptionTranslator.java"
public abstract class org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator implements org.springframework.jdbc.support.SQLExceptionTranslator {
  protected final org.apache.commons.logging.Log logger;

  private org.springframework.jdbc.support.SQLExceptionTranslator fallbackTranslator;

  public org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: return

  public void setFallbackTranslator(org.springframework.jdbc.support.SQLExceptionTranslator);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field fallbackTranslator:Lorg/springframework/jdbc/support/SQLExceptionTranslator;
       5: return

  public org.springframework.jdbc.support.SQLExceptionTranslator getFallbackTranslator();
    Code:
       0: aload_0
       1: getfield      #5                  // Field fallbackTranslator:Lorg/springframework/jdbc/support/SQLExceptionTranslator;
       4: areturn

  public org.springframework.dao.DataAccessException translate(java.lang.String, java.lang.String, java.sql.SQLException);
    Code:
       0: aload_3
       1: ldc           #6                  // String Cannot translate a null SQLException
       3: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokevirtual #8                  // Method doTranslate:(Ljava/lang/String;Ljava/lang/String;Ljava/sql/SQLException;)Lorg/springframework/dao/DataAccessException;
      13: astore        4
      15: aload         4
      17: ifnull        23
      20: aload         4
      22: areturn
      23: aload_0
      24: invokevirtual #9                  // Method getFallbackTranslator:()Lorg/springframework/jdbc/support/SQLExceptionTranslator;
      27: astore        5
      29: aload         5
      31: ifnull        54
      34: aload         5
      36: aload_1
      37: aload_2
      38: aload_3
      39: invokeinterface #10,  4           // InterfaceMethod org/springframework/jdbc/support/SQLExceptionTranslator.translate:(Ljava/lang/String;Ljava/lang/String;Ljava/sql/SQLException;)Lorg/springframework/dao/DataAccessException;
      44: astore        4
      46: aload         4
      48: ifnull        54
      51: aload         4
      53: areturn
      54: new           #11                 // class org/springframework/jdbc/UncategorizedSQLException
      57: dup
      58: aload_1
      59: aload_2
      60: aload_3
      61: invokespecial #12                 // Method org/springframework/jdbc/UncategorizedSQLException."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/sql/SQLException;)V
      64: areturn

  protected abstract org.springframework.dao.DataAccessException doTranslate(java.lang.String, java.lang.String, java.sql.SQLException);

  protected java.lang.String buildMessage(java.lang.String, java.lang.String, java.sql.SQLException);
    Code:
       0: new           #13                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_1
       8: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: ldc           #16                 // String ;
      13: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_2
      17: ifnull        47
      20: new           #13                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #17                 // String SQL [
      29: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_2
      33: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: ldc           #18                 // String ];
      38: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: goto          49
      47: ldc           #20                 // String
      49: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_3
      53: invokevirtual #21                 // Method java/sql/SQLException.getMessage:()Ljava/lang/String;
      56: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: areturn
}
