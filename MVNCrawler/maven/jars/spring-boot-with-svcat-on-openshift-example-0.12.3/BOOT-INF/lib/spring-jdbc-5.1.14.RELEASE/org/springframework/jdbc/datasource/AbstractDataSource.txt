Compiled from "AbstractDataSource.java"
public abstract class org.springframework.jdbc.datasource.AbstractDataSource implements javax.sql.DataSource {
  protected final org.apache.commons.logging.Log logger;

  public org.springframework.jdbc.datasource.AbstractDataSource();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: return

  public int getLoginTimeout() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public void setLoginTimeout(int) throws java.sql.SQLException;
    Code:
       0: new           #5                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #6                  // String setLoginTimeout
       6: invokespecial #7                  // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.io.PrintWriter getLogWriter();
    Code:
       0: new           #5                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #8                  // String getLogWriter
       6: invokespecial #7                  // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void setLogWriter(java.io.PrintWriter) throws java.sql.SQLException;
    Code:
       0: new           #5                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #9                  // String setLogWriter
       6: invokespecial #7                  // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public <T> T unwrap(java.lang.Class<T>) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #10                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
       5: ifeq          10
       8: aload_0
       9: areturn
      10: new           #11                 // class java/sql/SQLException
      13: dup
      14: new           #12                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #14                 // String DataSource of type [
      23: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      30: invokevirtual #16                 // Method java/lang/Class.getName:()Ljava/lang/String;
      33: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: ldc           #17                 // String ] cannot be unwrapped as [
      38: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_1
      42: invokevirtual #16                 // Method java/lang/Class.getName:()Ljava/lang/String;
      45: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: ldc           #18                 // String ]
      50: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokespecial #20                 // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
      59: athrow

  public boolean isWrapperFor(java.lang.Class<?>) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #10                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
       5: ireturn

  public java.util.logging.Logger getParentLogger();
    Code:
       0: ldc           #22                 // String global
       2: invokestatic  #23                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       5: areturn
}
