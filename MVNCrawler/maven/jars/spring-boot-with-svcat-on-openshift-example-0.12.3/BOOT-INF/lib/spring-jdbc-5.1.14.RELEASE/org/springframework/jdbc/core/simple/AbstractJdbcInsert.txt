Compiled from "AbstractJdbcInsert.java"
public abstract class org.springframework.jdbc.core.simple.AbstractJdbcInsert {
  protected final org.apache.commons.logging.Log logger;

  private final org.springframework.jdbc.core.JdbcTemplate jdbcTemplate;

  private final org.springframework.jdbc.core.metadata.TableMetaDataContext tableMetaDataContext;

  private final java.util.List<java.lang.String> declaredColumns;

  private java.lang.String[] generatedKeyNames;

  private volatile boolean compiled;

  private java.lang.String insertString;

  private int[] insertTypes;

  protected org.springframework.jdbc.core.simple.AbstractJdbcInsert(javax.sql.DataSource);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #3                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #4                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: new           #6                  // class org/springframework/jdbc/core/metadata/TableMetaDataContext
      19: dup
      20: invokespecial #7                  // Method org/springframework/jdbc/core/metadata/TableMetaDataContext."<init>":()V
      23: putfield      #8                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
      26: aload_0
      27: new           #9                  // class java/util/ArrayList
      30: dup
      31: invokespecial #10                 // Method java/util/ArrayList."<init>":()V
      34: putfield      #11                 // Field declaredColumns:Ljava/util/List;
      37: aload_0
      38: iconst_0
      39: anewarray     #12                 // class java/lang/String
      42: putfield      #13                 // Field generatedKeyNames:[Ljava/lang/String;
      45: aload_0
      46: iconst_0
      47: putfield      #14                 // Field compiled:Z
      50: aload_0
      51: ldc           #15                 // String
      53: putfield      #16                 // Field insertString:Ljava/lang/String;
      56: aload_0
      57: iconst_0
      58: newarray       int
      60: putfield      #17                 // Field insertTypes:[I
      63: aload_0
      64: new           #18                 // class org/springframework/jdbc/core/JdbcTemplate
      67: dup
      68: aload_1
      69: invokespecial #19                 // Method org/springframework/jdbc/core/JdbcTemplate."<init>":(Ljavax/sql/DataSource;)V
      72: putfield      #20                 // Field jdbcTemplate:Lorg/springframework/jdbc/core/JdbcTemplate;
      75: return

  protected org.springframework.jdbc.core.simple.AbstractJdbcInsert(org.springframework.jdbc.core.JdbcTemplate);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #3                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #4                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: new           #6                  // class org/springframework/jdbc/core/metadata/TableMetaDataContext
      19: dup
      20: invokespecial #7                  // Method org/springframework/jdbc/core/metadata/TableMetaDataContext."<init>":()V
      23: putfield      #8                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
      26: aload_0
      27: new           #9                  // class java/util/ArrayList
      30: dup
      31: invokespecial #10                 // Method java/util/ArrayList."<init>":()V
      34: putfield      #11                 // Field declaredColumns:Ljava/util/List;
      37: aload_0
      38: iconst_0
      39: anewarray     #12                 // class java/lang/String
      42: putfield      #13                 // Field generatedKeyNames:[Ljava/lang/String;
      45: aload_0
      46: iconst_0
      47: putfield      #14                 // Field compiled:Z
      50: aload_0
      51: ldc           #15                 // String
      53: putfield      #16                 // Field insertString:Ljava/lang/String;
      56: aload_0
      57: iconst_0
      58: newarray       int
      60: putfield      #17                 // Field insertTypes:[I
      63: aload_1
      64: ldc           #21                 // String JdbcTemplate must not be null
      66: invokestatic  #22                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      69: aload_0
      70: aload_1
      71: putfield      #20                 // Field jdbcTemplate:Lorg/springframework/jdbc/core/JdbcTemplate;
      74: return

  public org.springframework.jdbc.core.JdbcTemplate getJdbcTemplate();
    Code:
       0: aload_0
       1: getfield      #20                 // Field jdbcTemplate:Lorg/springframework/jdbc/core/JdbcTemplate;
       4: areturn

  public void setTableName(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method checkIfConfigurationModificationIsAllowed:()V
       4: aload_0
       5: getfield      #8                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
       8: aload_1
       9: invokevirtual #24                 // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.setTableName:(Ljava/lang/String;)V
      12: return

  public java.lang.String getTableName();
    Code:
       0: aload_0
       1: getfield      #8                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
       4: invokevirtual #25                 // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.getTableName:()Ljava/lang/String;
       7: areturn

  public void setSchemaName(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method checkIfConfigurationModificationIsAllowed:()V
       4: aload_0
       5: getfield      #8                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
       8: aload_1
       9: invokevirtual #26                 // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.setSchemaName:(Ljava/lang/String;)V
      12: return

  public java.lang.String getSchemaName();
    Code:
       0: aload_0
       1: getfield      #8                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
       4: invokevirtual #27                 // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.getSchemaName:()Ljava/lang/String;
       7: areturn

  public void setCatalogName(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method checkIfConfigurationModificationIsAllowed:()V
       4: aload_0
       5: getfield      #8                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
       8: aload_1
       9: invokevirtual #28                 // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.setCatalogName:(Ljava/lang/String;)V
      12: return

  public java.lang.String getCatalogName();
    Code:
       0: aload_0
       1: getfield      #8                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
       4: invokevirtual #29                 // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.getCatalogName:()Ljava/lang/String;
       7: areturn

  public void setColumnNames(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method checkIfConfigurationModificationIsAllowed:()V
       4: aload_0
       5: getfield      #11                 // Field declaredColumns:Ljava/util/List;
       8: invokeinterface #30,  1           // InterfaceMethod java/util/List.clear:()V
      13: aload_0
      14: getfield      #11                 // Field declaredColumns:Ljava/util/List;
      17: aload_1
      18: invokeinterface #31,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      23: pop
      24: return

  public java.util.List<java.lang.String> getColumnNames();
    Code:
       0: aload_0
       1: getfield      #11                 // Field declaredColumns:Ljava/util/List;
       4: invokestatic  #32                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
       7: areturn

  public void setGeneratedKeyName(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method checkIfConfigurationModificationIsAllowed:()V
       4: aload_0
       5: iconst_1
       6: anewarray     #12                 // class java/lang/String
       9: dup
      10: iconst_0
      11: aload_1
      12: aastore
      13: putfield      #13                 // Field generatedKeyNames:[Ljava/lang/String;
      16: return

  public void setGeneratedKeyNames(java.lang.String...);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method checkIfConfigurationModificationIsAllowed:()V
       4: aload_0
       5: aload_1
       6: putfield      #13                 // Field generatedKeyNames:[Ljava/lang/String;
       9: return

  public java.lang.String[] getGeneratedKeyNames();
    Code:
       0: aload_0
       1: getfield      #13                 // Field generatedKeyNames:[Ljava/lang/String;
       4: areturn

  public void setAccessTableColumnMetaData(boolean);
    Code:
       0: aload_0
       1: getfield      #8                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
       4: iload_1
       5: invokevirtual #33                 // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.setAccessTableColumnMetaData:(Z)V
       8: return

  public void setOverrideIncludeSynonymsDefault(boolean);
    Code:
       0: aload_0
       1: getfield      #8                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
       4: iload_1
       5: invokevirtual #34                 // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.setOverrideIncludeSynonymsDefault:(Z)V
       8: return

  public java.lang.String getInsertString();
    Code:
       0: aload_0
       1: getfield      #16                 // Field insertString:Ljava/lang/String;
       4: areturn

  public int[] getInsertTypes();
    Code:
       0: aload_0
       1: getfield      #17                 // Field insertTypes:[I
       4: areturn

  public final synchronized void compile() throws org.springframework.dao.InvalidDataAccessApiUsageException;
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method isCompiled:()Z
       4: ifne          104
       7: aload_0
       8: invokevirtual #36                 // Method getTableName:()Ljava/lang/String;
      11: ifnonnull     24
      14: new           #37                 // class org/springframework/dao/InvalidDataAccessApiUsageException
      17: dup
      18: ldc           #38                 // String Table name is required
      20: invokespecial #39                 // Method org/springframework/dao/InvalidDataAccessApiUsageException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: getfield      #20                 // Field jdbcTemplate:Lorg/springframework/jdbc/core/JdbcTemplate;
      28: invokevirtual #40                 // Method org/springframework/jdbc/core/JdbcTemplate.afterPropertiesSet:()V
      31: goto          47
      34: astore_1
      35: new           #37                 // class org/springframework/dao/InvalidDataAccessApiUsageException
      38: dup
      39: aload_1
      40: invokevirtual #42                 // Method java/lang/IllegalArgumentException.getMessage:()Ljava/lang/String;
      43: invokespecial #39                 // Method org/springframework/dao/InvalidDataAccessApiUsageException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: invokevirtual #43                 // Method compileInternal:()V
      51: aload_0
      52: iconst_1
      53: putfield      #14                 // Field compiled:Z
      56: aload_0
      57: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      60: invokeinterface #44,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      65: ifeq          104
      68: aload_0
      69: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      72: new           #45                 // class java/lang/StringBuilder
      75: dup
      76: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      79: ldc           #47                 // String JdbcInsert for table [
      81: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: invokevirtual #36                 // Method getTableName:()Ljava/lang/String;
      88: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: ldc           #49                 // String ] compiled
      93: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: invokeinterface #51,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     104: return
    Exception table:
       from    to  target type
          24    31    34   Class java/lang/IllegalArgumentException

  protected void compileInternal();
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
       4: invokevirtual #53                 // Method org/springframework/jdbc/core/JdbcTemplate.getDataSource:()Ljavax/sql/DataSource;
       7: astore_1
       8: aload_1
       9: ifnull        16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ldc           #54                 // String No DataSource set
      19: invokestatic  #55                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      22: aload_0
      23: getfield      #8                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
      26: aload_1
      27: aload_0
      28: invokevirtual #56                 // Method getColumnNames:()Ljava/util/List;
      31: aload_0
      32: invokevirtual #57                 // Method getGeneratedKeyNames:()[Ljava/lang/String;
      35: invokevirtual #58                 // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.processMetaData:(Ljavax/sql/DataSource;Ljava/util/List;[Ljava/lang/String;)V
      38: aload_0
      39: aload_0
      40: getfield      #8                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
      43: aload_0
      44: invokevirtual #57                 // Method getGeneratedKeyNames:()[Ljava/lang/String;
      47: invokevirtual #59                 // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.createInsertString:([Ljava/lang/String;)Ljava/lang/String;
      50: putfield      #16                 // Field insertString:Ljava/lang/String;
      53: aload_0
      54: aload_0
      55: getfield      #8                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
      58: invokevirtual #60                 // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.createInsertTypes:()[I
      61: putfield      #17                 // Field insertTypes:[I
      64: aload_0
      65: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      68: invokeinterface #44,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      73: ifeq          112
      76: aload_0
      77: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      80: new           #45                 // class java/lang/StringBuilder
      83: dup
      84: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      87: ldc           #61                 // String Compiled insert object: insert string is [
      89: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: aload_0
      93: getfield      #16                 // Field insertString:Ljava/lang/String;
      96: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: ldc           #62                 // String ]
     101: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     107: invokeinterface #51,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     112: aload_0
     113: invokevirtual #63                 // Method onCompileInternal:()V
     116: return

  protected void onCompileInternal();
    Code:
       0: return

  public boolean isCompiled();
    Code:
       0: aload_0
       1: getfield      #14                 // Field compiled:Z
       4: ireturn

  protected void checkCompiled();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method isCompiled:()Z
       4: ifne          22
       7: aload_0
       8: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      11: ldc           #64                 // String JdbcInsert not compiled before execution - invoking compile
      13: invokeinterface #51,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      18: aload_0
      19: invokevirtual #65                 // Method compile:()V
      22: return

  protected void checkIfConfigurationModificationIsAllowed();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method isCompiled:()Z
       4: ifeq          17
       7: new           #37                 // class org/springframework/dao/InvalidDataAccessApiUsageException
      10: dup
      11: ldc           #66                 // String Configuration cannot be altered once the class has been compiled or used
      13: invokespecial #39                 // Method org/springframework/dao/InvalidDataAccessApiUsageException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  protected int doExecute(java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method checkCompiled:()V
       4: aload_0
       5: aload_1
       6: invokevirtual #68                 // Method matchInParameterValuesWithInsertColumns:(Ljava/util/Map;)Ljava/util/List;
       9: astore_2
      10: aload_0
      11: aload_2
      12: invokespecial #69                 // Method executeInsertInternal:(Ljava/util/List;)I
      15: ireturn

  protected int doExecute(org.springframework.jdbc.core.namedparam.SqlParameterSource);
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method checkCompiled:()V
       4: aload_0
       5: aload_1
       6: invokevirtual #70                 // Method matchInParameterValuesWithInsertColumns:(Lorg/springframework/jdbc/core/namedparam/SqlParameterSource;)Ljava/util/List;
       9: astore_2
      10: aload_0
      11: aload_2
      12: invokespecial #69                 // Method executeInsertInternal:(Ljava/util/List;)I
      15: ireturn

  private int executeInsertInternal(java.util.List<?>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #44,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          52
      12: aload_0
      13: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      16: new           #45                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #71                 // String The following parameters are used for insert
      25: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: invokevirtual #72                 // Method getInsertString:()Ljava/lang/String;
      32: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #73                 // String  with:
      37: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_1
      41: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      44: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokeinterface #51,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      52: aload_0
      53: invokevirtual #52                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
      56: aload_0
      57: invokevirtual #72                 // Method getInsertString:()Ljava/lang/String;
      60: aload_1
      61: invokeinterface #75,  1           // InterfaceMethod java/util/List.toArray:()[Ljava/lang/Object;
      66: aload_0
      67: invokevirtual #76                 // Method getInsertTypes:()[I
      70: invokevirtual #77                 // Method org/springframework/jdbc/core/JdbcTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;[I)I
      73: ireturn

  protected java.lang.Number doExecuteAndReturnKey(java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method checkCompiled:()V
       4: aload_0
       5: aload_1
       6: invokevirtual #68                 // Method matchInParameterValuesWithInsertColumns:(Ljava/util/Map;)Ljava/util/List;
       9: astore_2
      10: aload_0
      11: aload_2
      12: invokespecial #78                 // Method executeInsertAndReturnKeyInternal:(Ljava/util/List;)Ljava/lang/Number;
      15: areturn

  protected java.lang.Number doExecuteAndReturnKey(org.springframework.jdbc.core.namedparam.SqlParameterSource);
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method checkCompiled:()V
       4: aload_0
       5: aload_1
       6: invokevirtual #70                 // Method matchInParameterValuesWithInsertColumns:(Lorg/springframework/jdbc/core/namedparam/SqlParameterSource;)Ljava/util/List;
       9: astore_2
      10: aload_0
      11: aload_2
      12: invokespecial #78                 // Method executeInsertAndReturnKeyInternal:(Ljava/util/List;)Ljava/lang/Number;
      15: areturn

  protected org.springframework.jdbc.support.KeyHolder doExecuteAndReturnKeyHolder(java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method checkCompiled:()V
       4: aload_0
       5: aload_1
       6: invokevirtual #68                 // Method matchInParameterValuesWithInsertColumns:(Ljava/util/Map;)Ljava/util/List;
       9: astore_2
      10: aload_0
      11: aload_2
      12: invokespecial #79                 // Method executeInsertAndReturnKeyHolderInternal:(Ljava/util/List;)Lorg/springframework/jdbc/support/KeyHolder;
      15: areturn

  protected org.springframework.jdbc.support.KeyHolder doExecuteAndReturnKeyHolder(org.springframework.jdbc.core.namedparam.SqlParameterSource);
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method checkCompiled:()V
       4: aload_0
       5: aload_1
       6: invokevirtual #70                 // Method matchInParameterValuesWithInsertColumns:(Lorg/springframework/jdbc/core/namedparam/SqlParameterSource;)Ljava/util/List;
       9: astore_2
      10: aload_0
      11: aload_2
      12: invokespecial #79                 // Method executeInsertAndReturnKeyHolderInternal:(Ljava/util/List;)Lorg/springframework/jdbc/support/KeyHolder;
      15: areturn

  private java.lang.Number executeInsertAndReturnKeyInternal(java.util.List<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #79                 // Method executeInsertAndReturnKeyHolderInternal:(Ljava/util/List;)Lorg/springframework/jdbc/support/KeyHolder;
       5: astore_2
       6: aload_2
       7: invokeinterface #80,  1           // InterfaceMethod org/springframework/jdbc/support/KeyHolder.getKey:()Ljava/lang/Number;
      12: ifnull        22
      15: aload_2
      16: invokeinterface #80,  1           // InterfaceMethod org/springframework/jdbc/support/KeyHolder.getKey:()Ljava/lang/Number;
      21: areturn
      22: new           #81                 // class org/springframework/dao/DataIntegrityViolationException
      25: dup
      26: new           #45                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #82                 // String Unable to retrieve the generated key for the insert:
      35: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: invokevirtual #72                 // Method getInsertString:()Ljava/lang/String;
      42: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokespecial #83                 // Method org/springframework/dao/DataIntegrityViolationException."<init>":(Ljava/lang/String;)V
      51: athrow

  private org.springframework.jdbc.support.KeyHolder executeInsertAndReturnKeyHolderInternal(java.util.List<?>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #44,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          52
      12: aload_0
      13: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      16: new           #45                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #84                 // String The following parameters are used for call
      25: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: invokevirtual #72                 // Method getInsertString:()Ljava/lang/String;
      32: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #73                 // String  with:
      37: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_1
      41: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      44: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokeinterface #51,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      52: new           #85                 // class org/springframework/jdbc/support/GeneratedKeyHolder
      55: dup
      56: invokespecial #86                 // Method org/springframework/jdbc/support/GeneratedKeyHolder."<init>":()V
      59: astore_2
      60: aload_0
      61: getfield      #8                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
      64: invokevirtual #87                 // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.isGetGeneratedKeysSupported:()Z
      67: ifeq          89
      70: aload_0
      71: invokevirtual #52                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
      74: aload_0
      75: aload_1
      76: invokedynamic #88,  0             // InvokeDynamic #0:createPreparedStatement:(Lorg/springframework/jdbc/core/simple/AbstractJdbcInsert;Ljava/util/List;)Lorg/springframework/jdbc/core/PreparedStatementCreator;
      81: aload_2
      82: invokevirtual #89                 // Method org/springframework/jdbc/core/JdbcTemplate.update:(Lorg/springframework/jdbc/core/PreparedStatementCreator;Lorg/springframework/jdbc/support/KeyHolder;)I
      85: pop
      86: goto          350
      89: aload_0
      90: getfield      #8                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
      93: invokevirtual #90                 // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.isGetGeneratedKeysSimulated:()Z
      96: ifne          109
      99: new           #91                 // class org/springframework/dao/InvalidDataAccessResourceUsageException
     102: dup
     103: ldc           #92                 // String The getGeneratedKeys feature is not supported by this database
     105: invokespecial #93                 // Method org/springframework/dao/InvalidDataAccessResourceUsageException."<init>":(Ljava/lang/String;)V
     108: athrow
     109: aload_0
     110: invokevirtual #57                 // Method getGeneratedKeyNames:()[Ljava/lang/String;
     113: arraylength
     114: iconst_1
     115: if_icmpge     128
     118: new           #37                 // class org/springframework/dao/InvalidDataAccessApiUsageException
     121: dup
     122: ldc           #94                 // String Generated Key Name(s) not specified. Using the generated keys features requires specifying the name(s) of the generated column(s)
     124: invokespecial #39                 // Method org/springframework/dao/InvalidDataAccessApiUsageException."<init>":(Ljava/lang/String;)V
     127: athrow
     128: aload_0
     129: invokevirtual #57                 // Method getGeneratedKeyNames:()[Ljava/lang/String;
     132: arraylength
     133: iconst_1
     134: if_icmple     183
     137: new           #37                 // class org/springframework/dao/InvalidDataAccessApiUsageException
     140: dup
     141: new           #45                 // class java/lang/StringBuilder
     144: dup
     145: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
     148: ldc           #95                 // String Current database only supports retrieving the key for a single column. There are
     150: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     153: aload_0
     154: invokevirtual #57                 // Method getGeneratedKeyNames:()[Ljava/lang/String;
     157: arraylength
     158: invokevirtual #96                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     161: ldc           #97                 // String  columns specified:
     163: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     166: aload_0
     167: invokevirtual #57                 // Method getGeneratedKeyNames:()[Ljava/lang/String;
     170: invokestatic  #98                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     173: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     176: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     179: invokespecial #39                 // Method org/springframework/dao/InvalidDataAccessApiUsageException."<init>":(Ljava/lang/String;)V
     182: athrow
     183: aload_0
     184: invokevirtual #36                 // Method getTableName:()Ljava/lang/String;
     187: ifnull        194
     190: iconst_1
     191: goto          195
     194: iconst_0
     195: ldc           #99                 // String No table name set
     197: invokestatic  #55                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
     200: aload_0
     201: getfield      #8                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
     204: aload_0
     205: invokevirtual #36                 // Method getTableName:()Ljava/lang/String;
     208: aload_0
     209: invokevirtual #57                 // Method getGeneratedKeyNames:()[Ljava/lang/String;
     212: iconst_0
     213: aaload
     214: invokevirtual #100                // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.getSimpleQueryForGetGeneratedKey:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     217: astore_3
     218: aload_3
     219: ifnull        226
     222: iconst_1
     223: goto          227
     226: iconst_0
     227: ldc           #101                // String Query for simulating get generated keys must not be null
     229: invokestatic  #55                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
     232: aload_3
     233: invokevirtual #102                // Method java/lang/String.toUpperCase:()Ljava/lang/String;
     236: ldc           #103                // String RETURNING
     238: invokevirtual #104                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     241: ifeq          333
     244: aload_0
     245: invokevirtual #52                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
     248: new           #45                 // class java/lang/StringBuilder
     251: dup
     252: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
     255: aload_0
     256: invokevirtual #72                 // Method getInsertString:()Ljava/lang/String;
     259: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     262: ldc           #105                // String
     264: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     267: aload_3
     268: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     271: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     274: aload_1
     275: invokeinterface #75,  1           // InterfaceMethod java/util/List.toArray:()[Ljava/lang/Object;
     280: ldc           #106                // class java/lang/Long
     282: invokevirtual #107                // Method org/springframework/jdbc/core/JdbcTemplate.queryForObject:(Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
     285: checkcast     #106                // class java/lang/Long
     288: astore        4
     290: new           #108                // class java/util/HashMap
     293: dup
     294: iconst_2
     295: invokespecial #109                // Method java/util/HashMap."<init>":(I)V
     298: astore        5
     300: aload         5
     302: aload_0
     303: invokevirtual #57                 // Method getGeneratedKeyNames:()[Ljava/lang/String;
     306: iconst_0
     307: aaload
     308: aload         4
     310: invokeinterface #110,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     315: pop
     316: aload_2
     317: invokeinterface #111,  1          // InterfaceMethod org/springframework/jdbc/support/KeyHolder.getKeyList:()Ljava/util/List;
     322: aload         5
     324: invokeinterface #112,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     329: pop
     330: goto          350
     333: aload_0
     334: invokevirtual #52                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
     337: aload_0
     338: aload_1
     339: aload_3
     340: aload_2
     341: invokedynamic #113,  0            // InvokeDynamic #1:doInConnection:(Lorg/springframework/jdbc/core/simple/AbstractJdbcInsert;Ljava/util/List;Ljava/lang/String;Lorg/springframework/jdbc/support/KeyHolder;)Lorg/springframework/jdbc/core/ConnectionCallback;
     346: invokevirtual #114                // Method org/springframework/jdbc/core/JdbcTemplate.execute:(Lorg/springframework/jdbc/core/ConnectionCallback;)Ljava/lang/Object;
     349: pop
     350: aload_2
     351: areturn

  private java.sql.PreparedStatement prepareStatementForGeneratedKeys(java.sql.Connection) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method getGeneratedKeyNames:()[Ljava/lang/String;
       4: arraylength
       5: iconst_1
       6: if_icmpge     19
       9: new           #37                 // class org/springframework/dao/InvalidDataAccessApiUsageException
      12: dup
      13: ldc           #115                // String Generated Key Name(s) not specified. Using the generated keys features requires specifying the name(s) of the generated column(s).
      15: invokespecial #39                 // Method org/springframework/dao/InvalidDataAccessApiUsageException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: getfield      #8                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
      23: invokevirtual #116                // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.isGeneratedKeysColumnNameArraySupported:()Z
      26: ifeq          70
      29: aload_0
      30: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      33: invokeinterface #44,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      38: ifeq          52
      41: aload_0
      42: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      45: ldc           #117                // String Using generated keys support with array of column names.
      47: invokeinterface #51,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      52: aload_1
      53: aload_0
      54: invokevirtual #72                 // Method getInsertString:()Ljava/lang/String;
      57: aload_0
      58: invokevirtual #57                 // Method getGeneratedKeyNames:()[Ljava/lang/String;
      61: invokeinterface #118,  3          // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement;
      66: astore_2
      67: goto          105
      70: aload_0
      71: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      74: invokeinterface #44,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      79: ifeq          93
      82: aload_0
      83: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      86: ldc           #119                // String Using generated keys support with Statement.RETURN_GENERATED_KEYS.
      88: invokeinterface #51,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      93: aload_1
      94: aload_0
      95: invokevirtual #72                 // Method getInsertString:()Ljava/lang/String;
      98: iconst_1
      99: invokeinterface #121,  3          // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;I)Ljava/sql/PreparedStatement;
     104: astore_2
     105: aload_2
     106: areturn

  protected int[] doExecuteBatch(java.util.Map<java.lang.String, ?>...);
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method checkCompiled:()V
       4: new           #9                  // class java/util/ArrayList
       7: dup
       8: aload_1
       9: arraylength
      10: invokespecial #122                // Method java/util/ArrayList."<init>":(I)V
      13: astore_2
      14: aload_1
      15: astore_3
      16: aload_3
      17: arraylength
      18: istore        4
      20: iconst_0
      21: istore        5
      23: iload         5
      25: iload         4
      27: if_icmpge     55
      30: aload_3
      31: iload         5
      33: aaload
      34: astore        6
      36: aload_2
      37: aload_0
      38: aload         6
      40: invokevirtual #68                 // Method matchInParameterValuesWithInsertColumns:(Ljava/util/Map;)Ljava/util/List;
      43: invokeinterface #112,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      48: pop
      49: iinc          5, 1
      52: goto          23
      55: aload_0
      56: aload_2
      57: invokespecial #123                // Method executeBatchInternal:(Ljava/util/List;)[I
      60: areturn

  protected int[] doExecuteBatch(org.springframework.jdbc.core.namedparam.SqlParameterSource...);
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method checkCompiled:()V
       4: new           #9                  // class java/util/ArrayList
       7: dup
       8: aload_1
       9: arraylength
      10: invokespecial #122                // Method java/util/ArrayList."<init>":(I)V
      13: astore_2
      14: aload_1
      15: astore_3
      16: aload_3
      17: arraylength
      18: istore        4
      20: iconst_0
      21: istore        5
      23: iload         5
      25: iload         4
      27: if_icmpge     55
      30: aload_3
      31: iload         5
      33: aaload
      34: astore        6
      36: aload_2
      37: aload_0
      38: aload         6
      40: invokevirtual #70                 // Method matchInParameterValuesWithInsertColumns:(Lorg/springframework/jdbc/core/namedparam/SqlParameterSource;)Ljava/util/List;
      43: invokeinterface #112,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      48: pop
      49: iinc          5, 1
      52: goto          23
      55: aload_0
      56: aload_2
      57: invokespecial #123                // Method executeBatchInternal:(Ljava/util/List;)[I
      60: areturn

  private int[] executeBatchInternal(java.util.List<java.util.List<java.lang.Object>>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #44,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          57
      12: aload_0
      13: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      16: new           #45                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #124                // String Executing statement
      25: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: invokevirtual #72                 // Method getInsertString:()Ljava/lang/String;
      32: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #125                // String  with batch of size:
      37: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_1
      41: invokeinterface #126,  1          // InterfaceMethod java/util/List.size:()I
      46: invokevirtual #96                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      49: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokeinterface #51,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      57: aload_0
      58: invokevirtual #52                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
      61: aload_0
      62: invokevirtual #72                 // Method getInsertString:()Ljava/lang/String;
      65: new           #127                // class org/springframework/jdbc/core/simple/AbstractJdbcInsert$1
      68: dup
      69: aload_0
      70: aload_1
      71: invokespecial #128                // Method org/springframework/jdbc/core/simple/AbstractJdbcInsert$1."<init>":(Lorg/springframework/jdbc/core/simple/AbstractJdbcInsert;Ljava/util/List;)V
      74: invokevirtual #129                // Method org/springframework/jdbc/core/JdbcTemplate.batchUpdate:(Ljava/lang/String;Lorg/springframework/jdbc/core/BatchPreparedStatementSetter;)[I
      77: areturn

  private void setParameterValues(java.sql.PreparedStatement, java.util.List<?>, int...) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: istore        4
       3: aload_2
       4: invokeinterface #130,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore        5
      11: aload         5
      13: invokeinterface #131,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          74
      21: aload         5
      23: invokeinterface #132,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: astore        6
      30: iinc          4, 1
      33: aload_3
      34: ifnull        44
      37: iload         4
      39: aload_3
      40: arraylength
      41: if_icmple     57
      44: aload_1
      45: iload         4
      47: ldc           #134                // int -2147483648
      49: aload         6
      51: invokestatic  #135                // Method org/springframework/jdbc/core/StatementCreatorUtils.setParameterValue:(Ljava/sql/PreparedStatement;IILjava/lang/Object;)V
      54: goto          71
      57: aload_1
      58: iload         4
      60: aload_3
      61: iload         4
      63: iconst_1
      64: isub
      65: iaload
      66: aload         6
      68: invokestatic  #135                // Method org/springframework/jdbc/core/StatementCreatorUtils.setParameterValue:(Ljava/sql/PreparedStatement;IILjava/lang/Object;)V
      71: goto          11
      74: return

  protected java.util.List<java.lang.Object> matchInParameterValuesWithInsertColumns(org.springframework.jdbc.core.namedparam.SqlParameterSource);
    Code:
       0: aload_0
       1: getfield      #8                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
       4: aload_1
       5: invokevirtual #136                // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.matchInParameterValuesWithInsertColumns:(Lorg/springframework/jdbc/core/namedparam/SqlParameterSource;)Ljava/util/List;
       8: areturn

  protected java.util.List<java.lang.Object> matchInParameterValuesWithInsertColumns(java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_0
       1: getfield      #8                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
       4: aload_1
       5: invokevirtual #137                // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.matchInParameterValuesWithInsertColumns:(Ljava/util/Map;)Ljava/util/List;
       8: areturn

  private java.lang.Object lambda$executeInsertAndReturnKeyHolderInternal$1(java.util.List, java.lang.String, org.springframework.jdbc.support.KeyHolder, java.sql.Connection) throws java.sql.SQLException, org.springframework.dao.DataAccessException;
    Code:
       0: aconst_null
       1: astore        5
       3: aload         4
       5: aload_0
       6: invokevirtual #72                 // Method getInsertString:()Ljava/lang/String;
       9: invokeinterface #138,  2          // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      14: astore        5
      16: aload_0
      17: aload         5
      19: aload_1
      20: aload_0
      21: invokevirtual #76                 // Method getInsertTypes:()[I
      24: invokespecial #1                  // Method setParameterValues:(Ljava/sql/PreparedStatement;Ljava/util/List;[I)V
      27: aload         5
      29: invokeinterface #139,  1          // InterfaceMethod java/sql/PreparedStatement.executeUpdate:()I
      34: pop
      35: aload         5
      37: invokestatic  #140                // Method org/springframework/jdbc/support/JdbcUtils.closeStatement:(Ljava/sql/Statement;)V
      40: goto          53
      43: astore        6
      45: aload         5
      47: invokestatic  #140                // Method org/springframework/jdbc/support/JdbcUtils.closeStatement:(Ljava/sql/Statement;)V
      50: aload         6
      52: athrow
      53: aconst_null
      54: astore        6
      56: aconst_null
      57: astore        7
      59: new           #108                // class java/util/HashMap
      62: dup
      63: iconst_2
      64: invokespecial #109                // Method java/util/HashMap."<init>":(I)V
      67: astore        8
      69: aload         4
      71: invokeinterface #141,  1          // InterfaceMethod java/sql/Connection.createStatement:()Ljava/sql/Statement;
      76: astore        6
      78: aload         6
      80: aload_2
      81: invokeinterface #142,  2          // InterfaceMethod java/sql/Statement.executeQuery:(Ljava/lang/String;)Ljava/sql/ResultSet;
      86: astore        7
      88: aload         7
      90: invokeinterface #143,  1          // InterfaceMethod java/sql/ResultSet.next:()Z
      95: ifeq          141
      98: aload         7
     100: iconst_1
     101: invokeinterface #144,  2          // InterfaceMethod java/sql/ResultSet.getLong:(I)J
     106: lstore        9
     108: aload         8
     110: aload_0
     111: invokevirtual #57                 // Method getGeneratedKeyNames:()[Ljava/lang/String;
     114: iconst_0
     115: aaload
     116: lload         9
     118: invokestatic  #145                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     121: invokeinterface #110,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     126: pop
     127: aload_3
     128: invokeinterface #111,  1          // InterfaceMethod org/springframework/jdbc/support/KeyHolder.getKeyList:()Ljava/util/List;
     133: aload         8
     135: invokeinterface #112,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     140: pop
     141: aload         7
     143: invokestatic  #146                // Method org/springframework/jdbc/support/JdbcUtils.closeResultSet:(Ljava/sql/ResultSet;)V
     146: aload         6
     148: invokestatic  #140                // Method org/springframework/jdbc/support/JdbcUtils.closeStatement:(Ljava/sql/Statement;)V
     151: goto          169
     154: astore        11
     156: aload         7
     158: invokestatic  #146                // Method org/springframework/jdbc/support/JdbcUtils.closeResultSet:(Ljava/sql/ResultSet;)V
     161: aload         6
     163: invokestatic  #140                // Method org/springframework/jdbc/support/JdbcUtils.closeStatement:(Ljava/sql/Statement;)V
     166: aload         11
     168: athrow
     169: aconst_null
     170: areturn
    Exception table:
       from    to  target type
           3    35    43   any
          43    45    43   any
          69   141   154   any
         154   156   154   any

  private java.sql.PreparedStatement lambda$executeInsertAndReturnKeyHolderInternal$0(java.util.List, java.sql.Connection) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #147                // Method prepareStatementForGeneratedKeys:(Ljava/sql/Connection;)Ljava/sql/PreparedStatement;
       5: astore_3
       6: aload_0
       7: aload_3
       8: aload_1
       9: aload_0
      10: invokevirtual #76                 // Method getInsertTypes:()[I
      13: invokespecial #1                  // Method setParameterValues:(Ljava/sql/PreparedStatement;Ljava/util/List;[I)V
      16: aload_3
      17: areturn

  static void access$000(org.springframework.jdbc.core.simple.AbstractJdbcInsert, java.sql.PreparedStatement, java.util.List, int[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method setParameterValues:(Ljava/sql/PreparedStatement;Ljava/util/List;[I)V
       7: return
}
