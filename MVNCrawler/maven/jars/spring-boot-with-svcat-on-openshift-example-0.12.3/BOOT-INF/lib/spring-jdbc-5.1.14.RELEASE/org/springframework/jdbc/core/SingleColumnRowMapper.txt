Compiled from "SingleColumnRowMapper.java"
public class org.springframework.jdbc.core.SingleColumnRowMapper<T> implements org.springframework.jdbc.core.RowMapper<T> {
  private java.lang.Class<?> requiredType;

  private org.springframework.core.convert.ConversionService conversionService;

  public org.springframework.jdbc.core.SingleColumnRowMapper();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/springframework/core/convert/support/DefaultConversionService.getSharedInstance:()Lorg/springframework/core/convert/ConversionService;
       8: putfield      #3                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      11: return

  public org.springframework.jdbc.core.SingleColumnRowMapper(java.lang.Class<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/springframework/core/convert/support/DefaultConversionService.getSharedInstance:()Lorg/springframework/core/convert/ConversionService;
       8: putfield      #3                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      11: aload_0
      12: aload_1
      13: invokevirtual #4                  // Method setRequiredType:(Ljava/lang/Class;)V
      16: return

  public void setRequiredType(java.lang.Class<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #5                  // Method org/springframework/util/ClassUtils.resolvePrimitiveIfNecessary:(Ljava/lang/Class;)Ljava/lang/Class;
       5: putfield      #6                  // Field requiredType:Ljava/lang/Class;
       8: return

  public void setConversionService(org.springframework.core.convert.ConversionService);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
       5: return

  public T mapRow(java.sql.ResultSet, int) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: invokeinterface #7,  1            // InterfaceMethod java/sql/ResultSet.getMetaData:()Ljava/sql/ResultSetMetaData;
       6: astore_3
       7: aload_3
       8: invokeinterface #8,  1            // InterfaceMethod java/sql/ResultSetMetaData.getColumnCount:()I
      13: istore        4
      15: iload         4
      17: iconst_1
      18: if_icmpeq     32
      21: new           #9                  // class org/springframework/jdbc/IncorrectResultSetColumnCountException
      24: dup
      25: iconst_1
      26: iload         4
      28: invokespecial #10                 // Method org/springframework/jdbc/IncorrectResultSetColumnCountException."<init>":(II)V
      31: athrow
      32: aload_0
      33: aload_1
      34: iconst_1
      35: aload_0
      36: getfield      #6                  // Field requiredType:Ljava/lang/Class;
      39: invokevirtual #11                 // Method getColumnValue:(Ljava/sql/ResultSet;ILjava/lang/Class;)Ljava/lang/Object;
      42: astore        5
      44: aload         5
      46: ifnull        136
      49: aload_0
      50: getfield      #6                  // Field requiredType:Ljava/lang/Class;
      53: ifnull        136
      56: aload_0
      57: getfield      #6                  // Field requiredType:Ljava/lang/Class;
      60: aload         5
      62: invokevirtual #12                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      65: ifne          136
      68: aload_0
      69: aload         5
      71: aload_0
      72: getfield      #6                  // Field requiredType:Ljava/lang/Class;
      75: invokevirtual #13                 // Method convertValueToRequiredType:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      78: areturn
      79: astore        6
      81: new           #15                 // class org/springframework/dao/TypeMismatchDataAccessException
      84: dup
      85: new           #16                 // class java/lang/StringBuilder
      88: dup
      89: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      92: ldc           #18                 // String Type mismatch affecting row number
      94: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: iload_2
      98: invokevirtual #20                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     101: ldc           #21                 // String  and column type \'
     103: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: aload_3
     107: iconst_1
     108: invokeinterface #22,  2           // InterfaceMethod java/sql/ResultSetMetaData.getColumnTypeName:(I)Ljava/lang/String;
     113: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: ldc           #23                 // String \':
     118: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: aload         6
     123: invokevirtual #24                 // Method java/lang/IllegalArgumentException.getMessage:()Ljava/lang/String;
     126: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     132: invokespecial #26                 // Method org/springframework/dao/TypeMismatchDataAccessException."<init>":(Ljava/lang/String;)V
     135: athrow
     136: aload         5
     138: areturn
    Exception table:
       from    to  target type
          68    78    79   Class java/lang/IllegalArgumentException

  protected java.lang.Object getColumnValue(java.sql.ResultSet, int, java.lang.Class<?>) throws java.sql.SQLException;
    Code:
       0: aload_3
       1: ifnull        11
       4: aload_1
       5: iload_2
       6: aload_3
       7: invokestatic  #27                 // Method org/springframework/jdbc/support/JdbcUtils.getResultSetValue:(Ljava/sql/ResultSet;ILjava/lang/Class;)Ljava/lang/Object;
      10: areturn
      11: aload_0
      12: aload_1
      13: iload_2
      14: invokevirtual #28                 // Method getColumnValue:(Ljava/sql/ResultSet;I)Ljava/lang/Object;
      17: areturn

  protected java.lang.Object getColumnValue(java.sql.ResultSet, int) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: iload_2
       2: invokestatic  #29                 // Method org/springframework/jdbc/support/JdbcUtils.getResultSetValue:(Ljava/sql/ResultSet;I)Ljava/lang/Object;
       5: areturn

  protected java.lang.Object convertValueToRequiredType(java.lang.Object, java.lang.Class<?>);
    Code:
       0: ldc           #30                 // class java/lang/String
       2: aload_2
       3: if_acmpne     11
       6: aload_1
       7: invokevirtual #31                 // Method java/lang/Object.toString:()Ljava/lang/String;
      10: areturn
      11: ldc           #32                 // class java/lang/Number
      13: aload_2
      14: invokevirtual #33                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      17: ifeq          45
      20: aload_1
      21: instanceof    #32                 // class java/lang/Number
      24: ifeq          36
      27: aload_1
      28: checkcast     #32                 // class java/lang/Number
      31: aload_2
      32: invokestatic  #34                 // Method org/springframework/util/NumberUtils.convertNumberToTargetClass:(Ljava/lang/Number;Ljava/lang/Class;)Ljava/lang/Number;
      35: areturn
      36: aload_1
      37: invokevirtual #31                 // Method java/lang/Object.toString:()Ljava/lang/String;
      40: aload_2
      41: invokestatic  #35                 // Method org/springframework/util/NumberUtils.parseNumber:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Number;
      44: areturn
      45: aload_0
      46: getfield      #3                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      49: ifnull        81
      52: aload_0
      53: getfield      #3                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      56: aload_1
      57: invokevirtual #36                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      60: aload_2
      61: invokeinterface #37,  3           // InterfaceMethod org/springframework/core/convert/ConversionService.canConvert:(Ljava/lang/Class;Ljava/lang/Class;)Z
      66: ifeq          81
      69: aload_0
      70: getfield      #3                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      73: aload_1
      74: aload_2
      75: invokeinterface #38,  3           // InterfaceMethod org/springframework/core/convert/ConversionService.convert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      80: areturn
      81: new           #14                 // class java/lang/IllegalArgumentException
      84: dup
      85: new           #16                 // class java/lang/StringBuilder
      88: dup
      89: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      92: ldc           #39                 // String Value [
      94: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: aload_1
      98: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     101: ldc           #41                 // String ] is of type [
     103: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: aload_1
     107: invokevirtual #36                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     110: invokevirtual #42                 // Method java/lang/Class.getName:()Ljava/lang/String;
     113: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: ldc           #43                 // String ] and cannot be converted to required type [
     118: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: aload_2
     122: invokevirtual #42                 // Method java/lang/Class.getName:()Ljava/lang/String;
     125: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: ldc           #44                 // String ]
     130: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     136: invokespecial #45                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     139: athrow

  public static <T> org.springframework.jdbc.core.SingleColumnRowMapper<T> newInstance(java.lang.Class<T>);
    Code:
       0: new           #46                 // class org/springframework/jdbc/core/SingleColumnRowMapper
       3: dup
       4: aload_0
       5: invokespecial #47                 // Method "<init>":(Ljava/lang/Class;)V
       8: areturn

  public static <T> org.springframework.jdbc.core.SingleColumnRowMapper<T> newInstance(java.lang.Class<T>, org.springframework.core.convert.ConversionService);
    Code:
       0: aload_0
       1: invokestatic  #48                 // Method newInstance:(Ljava/lang/Class;)Lorg/springframework/jdbc/core/SingleColumnRowMapper;
       4: astore_2
       5: aload_2
       6: aload_1
       7: invokevirtual #49                 // Method setConversionService:(Lorg/springframework/core/convert/ConversionService;)V
      10: aload_2
      11: areturn
}
