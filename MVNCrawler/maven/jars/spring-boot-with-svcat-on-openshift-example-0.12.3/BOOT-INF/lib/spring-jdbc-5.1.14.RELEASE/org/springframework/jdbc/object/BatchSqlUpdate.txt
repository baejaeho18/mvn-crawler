Compiled from "BatchSqlUpdate.java"
public class org.springframework.jdbc.object.BatchSqlUpdate extends org.springframework.jdbc.object.SqlUpdate {
  public static final int DEFAULT_BATCH_SIZE;

  private int batchSize;

  private boolean trackRowsAffected;

  private final java.util.Deque<java.lang.Object[]> parameterQueue;

  private final java.util.List<java.lang.Integer> rowsAffected;

  public org.springframework.jdbc.object.BatchSqlUpdate();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/springframework/jdbc/object/SqlUpdate."<init>":()V
       4: aload_0
       5: sipush        5000
       8: putfield      #4                  // Field batchSize:I
      11: aload_0
      12: iconst_1
      13: putfield      #5                  // Field trackRowsAffected:Z
      16: aload_0
      17: new           #6                  // class java/util/ArrayDeque
      20: dup
      21: invokespecial #7                  // Method java/util/ArrayDeque."<init>":()V
      24: putfield      #1                  // Field parameterQueue:Ljava/util/Deque;
      27: aload_0
      28: new           #8                  // class java/util/ArrayList
      31: dup
      32: invokespecial #9                  // Method java/util/ArrayList."<init>":()V
      35: putfield      #10                 // Field rowsAffected:Ljava/util/List;
      38: return

  public org.springframework.jdbc.object.BatchSqlUpdate(javax.sql.DataSource, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #11                 // Method org/springframework/jdbc/object/SqlUpdate."<init>":(Ljavax/sql/DataSource;Ljava/lang/String;)V
       6: aload_0
       7: sipush        5000
      10: putfield      #4                  // Field batchSize:I
      13: aload_0
      14: iconst_1
      15: putfield      #5                  // Field trackRowsAffected:Z
      18: aload_0
      19: new           #6                  // class java/util/ArrayDeque
      22: dup
      23: invokespecial #7                  // Method java/util/ArrayDeque."<init>":()V
      26: putfield      #1                  // Field parameterQueue:Ljava/util/Deque;
      29: aload_0
      30: new           #8                  // class java/util/ArrayList
      33: dup
      34: invokespecial #9                  // Method java/util/ArrayList."<init>":()V
      37: putfield      #10                 // Field rowsAffected:Ljava/util/List;
      40: return

  public org.springframework.jdbc.object.BatchSqlUpdate(javax.sql.DataSource, java.lang.String, int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #12                 // Method org/springframework/jdbc/object/SqlUpdate."<init>":(Ljavax/sql/DataSource;Ljava/lang/String;[I)V
       7: aload_0
       8: sipush        5000
      11: putfield      #4                  // Field batchSize:I
      14: aload_0
      15: iconst_1
      16: putfield      #5                  // Field trackRowsAffected:Z
      19: aload_0
      20: new           #6                  // class java/util/ArrayDeque
      23: dup
      24: invokespecial #7                  // Method java/util/ArrayDeque."<init>":()V
      27: putfield      #1                  // Field parameterQueue:Ljava/util/Deque;
      30: aload_0
      31: new           #8                  // class java/util/ArrayList
      34: dup
      35: invokespecial #9                  // Method java/util/ArrayList."<init>":()V
      38: putfield      #10                 // Field rowsAffected:Ljava/util/List;
      41: return

  public org.springframework.jdbc.object.BatchSqlUpdate(javax.sql.DataSource, java.lang.String, int[], int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #12                 // Method org/springframework/jdbc/object/SqlUpdate."<init>":(Ljavax/sql/DataSource;Ljava/lang/String;[I)V
       7: aload_0
       8: sipush        5000
      11: putfield      #4                  // Field batchSize:I
      14: aload_0
      15: iconst_1
      16: putfield      #5                  // Field trackRowsAffected:Z
      19: aload_0
      20: new           #6                  // class java/util/ArrayDeque
      23: dup
      24: invokespecial #7                  // Method java/util/ArrayDeque."<init>":()V
      27: putfield      #1                  // Field parameterQueue:Ljava/util/Deque;
      30: aload_0
      31: new           #8                  // class java/util/ArrayList
      34: dup
      35: invokespecial #9                  // Method java/util/ArrayList."<init>":()V
      38: putfield      #10                 // Field rowsAffected:Ljava/util/List;
      41: aload_0
      42: iload         4
      44: invokevirtual #13                 // Method setBatchSize:(I)V
      47: return

  public void setBatchSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field batchSize:I
       5: return

  public void setTrackRowsAffected(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field trackRowsAffected:Z
       5: return

  protected boolean supportsLobParameters();
    Code:
       0: iconst_0
       1: ireturn

  public int update(java.lang.Object...) throws org.springframework.dao.DataAccessException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method validateParameters:([Ljava/lang/Object;)V
       5: aload_0
       6: getfield      #1                  // Field parameterQueue:Ljava/util/Deque;
       9: aload_1
      10: invokevirtual #15                 // Method "[Ljava/lang/Object;".clone:()Ljava/lang/Object;
      13: invokeinterface #16,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
      18: pop
      19: aload_0
      20: getfield      #1                  // Field parameterQueue:Ljava/util/Deque;
      23: invokeinterface #17,  1           // InterfaceMethod java/util/Deque.size:()I
      28: aload_0
      29: getfield      #4                  // Field batchSize:I
      32: if_icmpne     83
      35: aload_0
      36: getfield      #18                 // Field logger:Lorg/apache/commons/logging/Log;
      39: invokeinterface #19,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      44: ifeq          78
      47: aload_0
      48: getfield      #18                 // Field logger:Lorg/apache/commons/logging/Log;
      51: new           #20                 // class java/lang/StringBuilder
      54: dup
      55: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      58: ldc           #22                 // String Triggering auto-flush because queue reached batch size of
      60: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_0
      64: getfield      #4                  // Field batchSize:I
      67: invokevirtual #24                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      70: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: invokeinterface #26,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      78: aload_0
      79: invokevirtual #27                 // Method flush:()[I
      82: pop
      83: iconst_m1
      84: ireturn

  public int[] flush();
    Code:
       0: aload_0
       1: getfield      #1                  // Field parameterQueue:Ljava/util/Deque;
       4: invokeinterface #28,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
       9: ifeq          16
      12: iconst_0
      13: newarray       int
      15: areturn
      16: aload_0
      17: invokevirtual #29                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
      20: aload_0
      21: invokevirtual #30                 // Method resolveSql:()Ljava/lang/String;
      24: new           #31                 // class org/springframework/jdbc/object/BatchSqlUpdate$1
      27: dup
      28: aload_0
      29: invokespecial #32                 // Method org/springframework/jdbc/object/BatchSqlUpdate$1."<init>":(Lorg/springframework/jdbc/object/BatchSqlUpdate;)V
      32: invokevirtual #33                 // Method org/springframework/jdbc/core/JdbcTemplate.batchUpdate:(Ljava/lang/String;Lorg/springframework/jdbc/core/BatchPreparedStatementSetter;)[I
      35: astore_1
      36: aload_1
      37: astore_2
      38: aload_2
      39: arraylength
      40: istore_3
      41: iconst_0
      42: istore        4
      44: iload         4
      46: iload_3
      47: if_icmpge     90
      50: aload_2
      51: iload         4
      53: iaload
      54: istore        5
      56: aload_0
      57: iload         5
      59: invokevirtual #34                 // Method checkRowsAffected:(I)V
      62: aload_0
      63: getfield      #5                  // Field trackRowsAffected:Z
      66: ifeq          84
      69: aload_0
      70: getfield      #10                 // Field rowsAffected:Ljava/util/List;
      73: iload         5
      75: invokestatic  #35                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      78: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      83: pop
      84: iinc          4, 1
      87: goto          44
      90: aload_1
      91: areturn

  public int getQueueCount();
    Code:
       0: aload_0
       1: getfield      #1                  // Field parameterQueue:Ljava/util/Deque;
       4: invokeinterface #17,  1           // InterfaceMethod java/util/Deque.size:()I
       9: ireturn

  public int getExecutionCount();
    Code:
       0: aload_0
       1: getfield      #10                 // Field rowsAffected:Ljava/util/List;
       4: invokeinterface #37,  1           // InterfaceMethod java/util/List.size:()I
       9: ireturn

  public int[] getRowsAffected();
    Code:
       0: aload_0
       1: getfield      #10                 // Field rowsAffected:Ljava/util/List;
       4: invokeinterface #37,  1           // InterfaceMethod java/util/List.size:()I
       9: newarray       int
      11: astore_1
      12: iconst_0
      13: istore_2
      14: aload_0
      15: getfield      #10                 // Field rowsAffected:Ljava/util/List;
      18: invokeinterface #38,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      23: astore_3
      24: aload_3
      25: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          54
      33: aload_1
      34: iload_2
      35: aload_3
      36: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #41                 // class java/lang/Integer
      44: invokevirtual #42                 // Method java/lang/Integer.intValue:()I
      47: iastore
      48: iinc          2, 1
      51: goto          24
      54: aload_1
      55: areturn

  public void reset();
    Code:
       0: aload_0
       1: getfield      #1                  // Field parameterQueue:Ljava/util/Deque;
       4: invokeinterface #43,  1           // InterfaceMethod java/util/Deque.clear:()V
       9: aload_0
      10: getfield      #10                 // Field rowsAffected:Ljava/util/List;
      13: invokeinterface #44,  1           // InterfaceMethod java/util/List.clear:()V
      18: return

  static java.util.Deque access$000(org.springframework.jdbc.object.BatchSqlUpdate);
    Code:
       0: aload_0
       1: getfield      #1                  // Field parameterQueue:Ljava/util/Deque;
       4: areturn
}
