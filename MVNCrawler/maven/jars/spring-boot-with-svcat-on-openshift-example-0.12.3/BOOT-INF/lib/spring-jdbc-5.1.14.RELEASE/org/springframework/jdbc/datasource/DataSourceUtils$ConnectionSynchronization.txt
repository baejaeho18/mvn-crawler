Compiled from "DataSourceUtils.java"
class org.springframework.jdbc.datasource.DataSourceUtils$ConnectionSynchronization extends org.springframework.transaction.support.TransactionSynchronizationAdapter {
  private final org.springframework.jdbc.datasource.ConnectionHolder connectionHolder;

  private final javax.sql.DataSource dataSource;

  private int order;

  private boolean holderActive;

  public org.springframework.jdbc.datasource.DataSourceUtils$ConnectionSynchronization(org.springframework.jdbc.datasource.ConnectionHolder, javax.sql.DataSource);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/transaction/support/TransactionSynchronizationAdapter."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field holderActive:Z
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field connectionHolder:Lorg/springframework/jdbc/datasource/ConnectionHolder;
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field dataSource:Ljavax/sql/DataSource;
      19: aload_0
      20: aload_2
      21: invokestatic  #5                  // Method org/springframework/jdbc/datasource/DataSourceUtils.access$000:(Ljavax/sql/DataSource;)I
      24: putfield      #6                  // Field order:I
      27: return

  public int getOrder();
    Code:
       0: aload_0
       1: getfield      #6                  // Field order:I
       4: ireturn

  public void suspend();
    Code:
       0: aload_0
       1: getfield      #2                  // Field holderActive:Z
       4: ifeq          57
       7: aload_0
       8: getfield      #4                  // Field dataSource:Ljavax/sql/DataSource;
      11: invokestatic  #7                  // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_0
      16: getfield      #3                  // Field connectionHolder:Lorg/springframework/jdbc/datasource/ConnectionHolder;
      19: invokevirtual #8                  // Method org/springframework/jdbc/datasource/ConnectionHolder.hasConnection:()Z
      22: ifeq          57
      25: aload_0
      26: getfield      #3                  // Field connectionHolder:Lorg/springframework/jdbc/datasource/ConnectionHolder;
      29: invokevirtual #9                  // Method org/springframework/jdbc/datasource/ConnectionHolder.isOpen:()Z
      32: ifne          57
      35: aload_0
      36: getfield      #3                  // Field connectionHolder:Lorg/springframework/jdbc/datasource/ConnectionHolder;
      39: invokevirtual #10                 // Method org/springframework/jdbc/datasource/ConnectionHolder.getConnection:()Ljava/sql/Connection;
      42: aload_0
      43: getfield      #4                  // Field dataSource:Ljavax/sql/DataSource;
      46: invokestatic  #11                 // Method org/springframework/jdbc/datasource/DataSourceUtils.releaseConnection:(Ljava/sql/Connection;Ljavax/sql/DataSource;)V
      49: aload_0
      50: getfield      #3                  // Field connectionHolder:Lorg/springframework/jdbc/datasource/ConnectionHolder;
      53: aconst_null
      54: invokevirtual #12                 // Method org/springframework/jdbc/datasource/ConnectionHolder.setConnection:(Ljava/sql/Connection;)V
      57: return

  public void resume();
    Code:
       0: aload_0
       1: getfield      #2                  // Field holderActive:Z
       4: ifeq          18
       7: aload_0
       8: getfield      #4                  // Field dataSource:Ljavax/sql/DataSource;
      11: aload_0
      12: getfield      #3                  // Field connectionHolder:Lorg/springframework/jdbc/datasource/ConnectionHolder;
      15: invokestatic  #13                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.bindResource:(Ljava/lang/Object;Ljava/lang/Object;)V
      18: return

  public void beforeCompletion();
    Code:
       0: aload_0
       1: getfield      #3                  // Field connectionHolder:Lorg/springframework/jdbc/datasource/ConnectionHolder;
       4: invokevirtual #9                  // Method org/springframework/jdbc/datasource/ConnectionHolder.isOpen:()Z
       7: ifne          47
      10: aload_0
      11: getfield      #4                  // Field dataSource:Ljavax/sql/DataSource;
      14: invokestatic  #7                  // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
      17: pop
      18: aload_0
      19: iconst_0
      20: putfield      #2                  // Field holderActive:Z
      23: aload_0
      24: getfield      #3                  // Field connectionHolder:Lorg/springframework/jdbc/datasource/ConnectionHolder;
      27: invokevirtual #8                  // Method org/springframework/jdbc/datasource/ConnectionHolder.hasConnection:()Z
      30: ifeq          47
      33: aload_0
      34: getfield      #3                  // Field connectionHolder:Lorg/springframework/jdbc/datasource/ConnectionHolder;
      37: invokevirtual #10                 // Method org/springframework/jdbc/datasource/ConnectionHolder.getConnection:()Ljava/sql/Connection;
      40: aload_0
      41: getfield      #4                  // Field dataSource:Ljavax/sql/DataSource;
      44: invokestatic  #11                 // Method org/springframework/jdbc/datasource/DataSourceUtils.releaseConnection:(Ljava/sql/Connection;Ljavax/sql/DataSource;)V
      47: return

  public void afterCompletion(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field holderActive:Z
       4: ifeq          52
       7: aload_0
       8: getfield      #4                  // Field dataSource:Ljavax/sql/DataSource;
      11: invokestatic  #14                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResourceIfPossible:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_0
      16: iconst_0
      17: putfield      #2                  // Field holderActive:Z
      20: aload_0
      21: getfield      #3                  // Field connectionHolder:Lorg/springframework/jdbc/datasource/ConnectionHolder;
      24: invokevirtual #8                  // Method org/springframework/jdbc/datasource/ConnectionHolder.hasConnection:()Z
      27: ifeq          52
      30: aload_0
      31: getfield      #3                  // Field connectionHolder:Lorg/springframework/jdbc/datasource/ConnectionHolder;
      34: invokevirtual #10                 // Method org/springframework/jdbc/datasource/ConnectionHolder.getConnection:()Ljava/sql/Connection;
      37: aload_0
      38: getfield      #4                  // Field dataSource:Ljavax/sql/DataSource;
      41: invokestatic  #11                 // Method org/springframework/jdbc/datasource/DataSourceUtils.releaseConnection:(Ljava/sql/Connection;Ljavax/sql/DataSource;)V
      44: aload_0
      45: getfield      #3                  // Field connectionHolder:Lorg/springframework/jdbc/datasource/ConnectionHolder;
      48: aconst_null
      49: invokevirtual #12                 // Method org/springframework/jdbc/datasource/ConnectionHolder.setConnection:(Ljava/sql/Connection;)V
      52: aload_0
      53: getfield      #3                  // Field connectionHolder:Lorg/springframework/jdbc/datasource/ConnectionHolder;
      56: invokevirtual #15                 // Method org/springframework/jdbc/datasource/ConnectionHolder.reset:()V
      59: return
}
