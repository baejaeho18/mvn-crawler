Compiled from "NamingConvention.java"
public interface io.micrometer.core.instrument.config.NamingConvention {
  public static final io.micrometer.core.instrument.config.NamingConvention identity;

  public static final io.micrometer.core.instrument.config.NamingConvention dot;

  public static final io.micrometer.core.instrument.config.NamingConvention snakeCase;

  public static final io.micrometer.core.instrument.config.NamingConvention camelCase;

  public static final io.micrometer.core.instrument.config.NamingConvention upperCamelCase;

  public static final io.micrometer.core.instrument.config.NamingConvention slashes;

  public default java.lang.String name(java.lang.String, io.micrometer.core.instrument.Meter$Type);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokeinterface #35,  4           // InterfaceMethod name:(Ljava/lang/String;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/String;)Ljava/lang/String;
       9: areturn

  public abstract java.lang.String name(java.lang.String, io.micrometer.core.instrument.Meter$Type, java.lang.String);

  public default java.lang.String tagKey(java.lang.String);
    Code:
       0: aload_1
       1: areturn

  public default java.lang.String tagValue(java.lang.String);
    Code:
       0: aload_1
       1: areturn

  private static java.lang.String lambda$static$0(java.lang.String, io.micrometer.core.instrument.Meter$Type, java.lang.String);
    Code:
       0: aload_0
       1: areturn

  static {};
    Code:
       0: invokedynamic #63,  0             // InvokeDynamic #0:name:()Lio/micrometer/core/instrument/config/NamingConvention;
       5: putstatic     #65                 // Field identity:Lio/micrometer/core/instrument/config/NamingConvention;
       8: getstatic     #65                 // Field identity:Lio/micrometer/core/instrument/config/NamingConvention;
      11: putstatic     #67                 // Field dot:Lio/micrometer/core/instrument/config/NamingConvention;
      14: new           #13                 // class io/micrometer/core/instrument/config/NamingConvention$1
      17: dup
      18: invokespecial #70                 // Method io/micrometer/core/instrument/config/NamingConvention$1."<init>":()V
      21: putstatic     #72                 // Field snakeCase:Lio/micrometer/core/instrument/config/NamingConvention;
      24: new           #11                 // class io/micrometer/core/instrument/config/NamingConvention$2
      27: dup
      28: invokespecial #73                 // Method io/micrometer/core/instrument/config/NamingConvention$2."<init>":()V
      31: putstatic     #75                 // Field camelCase:Lio/micrometer/core/instrument/config/NamingConvention;
      34: new           #9                  // class io/micrometer/core/instrument/config/NamingConvention$3
      37: dup
      38: invokespecial #76                 // Method io/micrometer/core/instrument/config/NamingConvention$3."<init>":()V
      41: putstatic     #78                 // Field upperCamelCase:Lio/micrometer/core/instrument/config/NamingConvention;
      44: new           #7                  // class io/micrometer/core/instrument/config/NamingConvention$4
      47: dup
      48: invokespecial #79                 // Method io/micrometer/core/instrument/config/NamingConvention$4."<init>":()V
      51: putstatic     #81                 // Field slashes:Lio/micrometer/core/instrument/config/NamingConvention;
      54: return
}
