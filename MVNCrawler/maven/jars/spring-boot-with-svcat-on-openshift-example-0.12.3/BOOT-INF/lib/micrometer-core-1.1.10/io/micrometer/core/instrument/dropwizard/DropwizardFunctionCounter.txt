Compiled from "DropwizardFunctionCounter.java"
public class io.micrometer.core.instrument.dropwizard.DropwizardFunctionCounter<T> extends io.micrometer.core.instrument.AbstractMeter implements io.micrometer.core.instrument.FunctionCounter {
  private final java.lang.ref.WeakReference<T> ref;

  private final java.util.function.ToDoubleFunction<T> f;

  private final java.util.concurrent.atomic.AtomicLong last;

  private final io.micrometer.core.instrument.dropwizard.DropwizardRate rate;

  private final com.codahale.metrics.Meter dropwizardMeter;

  io.micrometer.core.instrument.dropwizard.DropwizardFunctionCounter(io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.Clock, T, java.util.function.ToDoubleFunction<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #38                 // Method io/micrometer/core/instrument/AbstractMeter."<init>":(Lio/micrometer/core/instrument/Meter$Id;)V
       5: aload_0
       6: new           #40                 // class java/util/concurrent/atomic/AtomicLong
       9: dup
      10: lconst_0
      11: invokespecial #43                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      14: putfield      #45                 // Field last:Ljava/util/concurrent/atomic/AtomicLong;
      17: aload_0
      18: new           #47                 // class java/lang/ref/WeakReference
      21: dup
      22: aload_3
      23: invokespecial #50                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      26: putfield      #52                 // Field ref:Ljava/lang/ref/WeakReference;
      29: aload_0
      30: aload         4
      32: putfield      #54                 // Field f:Ljava/util/function/ToDoubleFunction;
      35: aload_0
      36: new           #56                 // class io/micrometer/core/instrument/dropwizard/DropwizardRate
      39: dup
      40: aload_2
      41: invokespecial #59                 // Method io/micrometer/core/instrument/dropwizard/DropwizardRate."<init>":(Lio/micrometer/core/instrument/Clock;)V
      44: putfield      #61                 // Field rate:Lio/micrometer/core/instrument/dropwizard/DropwizardRate;
      47: aload_0
      48: new           #10                 // class io/micrometer/core/instrument/dropwizard/DropwizardFunctionCounter$1
      51: dup
      52: aload_0
      53: new           #63                 // class io/micrometer/core/instrument/dropwizard/DropwizardClock
      56: dup
      57: aload_2
      58: invokespecial #64                 // Method io/micrometer/core/instrument/dropwizard/DropwizardClock."<init>":(Lio/micrometer/core/instrument/Clock;)V
      61: invokespecial #67                 // Method io/micrometer/core/instrument/dropwizard/DropwizardFunctionCounter$1."<init>":(Lio/micrometer/core/instrument/dropwizard/DropwizardFunctionCounter;Lcom/codahale/metrics/Clock;)V
      64: putfield      #69                 // Field dropwizardMeter:Lcom/codahale/metrics/Meter;
      67: return

  public com.codahale.metrics.Meter getDropwizardMeter();
    Code:
       0: aload_0
       1: getfield      #69                 // Field dropwizardMeter:Lcom/codahale/metrics/Meter;
       4: areturn

  public double count();
    Code:
       0: aload_0
       1: getfield      #52                 // Field ref:Ljava/lang/ref/WeakReference;
       4: invokevirtual #87                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
       7: astore_1
       8: aload_1
       9: ifnonnull     21
      12: aload_0
      13: getfield      #45                 // Field last:Ljava/util/concurrent/atomic/AtomicLong;
      16: invokevirtual #90                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      19: l2d
      20: dreturn
      21: aload_0
      22: getfield      #45                 // Field last:Ljava/util/concurrent/atomic/AtomicLong;
      25: aload_0
      26: aload_1
      27: invokedynamic #110,  0            // InvokeDynamic #0:applyAsLong:(Lio/micrometer/core/instrument/dropwizard/DropwizardFunctionCounter;Ljava/lang/Object;)Ljava/util/function/LongUnaryOperator;
      32: invokevirtual #114                // Method java/util/concurrent/atomic/AtomicLong.updateAndGet:(Ljava/util/function/LongUnaryOperator;)J
      35: l2d
      36: dreturn

  private long lambda$count$0(java.lang.Object, long);
    Code:
       0: aload_0
       1: getfield      #54                 // Field f:Ljava/util/function/ToDoubleFunction;
       4: aload_1
       5: invokeinterface #120,  2          // InterfaceMethod java/util/function/ToDoubleFunction.applyAsDouble:(Ljava/lang/Object;)D
      10: d2l
      11: lstore        4
      13: lload         4
      15: lload_2
      16: lsub
      17: lstore        6
      19: aload_0
      20: getfield      #61                 // Field rate:Lio/micrometer/core/instrument/dropwizard/DropwizardRate;
      23: lload         6
      25: invokevirtual #123                // Method io/micrometer/core/instrument/dropwizard/DropwizardRate.increment:(J)V
      28: lload         4
      30: lreturn

  static io.micrometer.core.instrument.dropwizard.DropwizardRate access$000(io.micrometer.core.instrument.dropwizard.DropwizardFunctionCounter);
    Code:
       0: aload_0
       1: getfield      #61                 // Field rate:Lio/micrometer/core/instrument/dropwizard/DropwizardRate;
       4: areturn
}
