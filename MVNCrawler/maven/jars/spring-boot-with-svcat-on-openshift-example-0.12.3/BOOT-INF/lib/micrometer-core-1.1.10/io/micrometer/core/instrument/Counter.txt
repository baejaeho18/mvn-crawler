Compiled from "Counter.java"
public interface io.micrometer.core.instrument.Counter extends io.micrometer.core.instrument.Meter {
  public static io.micrometer.core.instrument.Counter$Builder builder(java.lang.String);
    Code:
       0: new           #11                 // class io/micrometer/core/instrument/Counter$Builder
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #23                 // Method io/micrometer/core/instrument/Counter$Builder."<init>":(Ljava/lang/String;Lio/micrometer/core/instrument/Counter$1;)V
       9: areturn

  public default void increment();
    Code:
       0: aload_0
       1: dconst_1
       2: invokeinterface #30,  3           // InterfaceMethod increment:(D)V
       7: return

  public abstract void increment(double);

  public abstract double count();

  public default java.lang.Iterable<io.micrometer.core.instrument.Measurement> measure();
    Code:
       0: new           #39                 // class io/micrometer/core/instrument/Measurement
       3: dup
       4: aload_0
       5: invokedynamic #57,  0             // InvokeDynamic #0:get:(Lio/micrometer/core/instrument/Counter;)Ljava/util/function/Supplier;
      10: getstatic     #63                 // Field io/micrometer/core/instrument/Statistic.COUNT:Lio/micrometer/core/instrument/Statistic;
      13: invokespecial #66                 // Method io/micrometer/core/instrument/Measurement."<init>":(Ljava/util/function/Supplier;Lio/micrometer/core/instrument/Statistic;)V
      16: invokestatic  #72                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      19: areturn
}
