Compiled from "CaffeineCacheMetrics.java"
public class io.micrometer.core.instrument.binder.cache.CaffeineCacheMetrics extends io.micrometer.core.instrument.binder.cache.CacheMeterBinder {
  private final com.github.benmanes.caffeine.cache.Cache<?, ?> cache;

  public io.micrometer.core.instrument.binder.cache.CaffeineCacheMetrics(com.github.benmanes.caffeine.cache.Cache<?, ?>, java.lang.String, java.lang.Iterable<io.micrometer.core.instrument.Tag>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #34                 // Method io/micrometer/core/instrument/binder/cache/CacheMeterBinder."<init>":(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Iterable;)V
       7: aload_0
       8: aload_1
       9: putfield      #36                 // Field cache:Lcom/github/benmanes/caffeine/cache/Cache;
      12: return

  public static <C extends com.github.benmanes.caffeine.cache.Cache> C monitor(io.micrometer.core.instrument.MeterRegistry, C, java.lang.String, java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #52                 // Method io/micrometer/core/instrument/Tags.of:([Ljava/lang/String;)Lio/micrometer/core/instrument/Tags;
       7: invokestatic  #55                 // Method monitor:(Lio/micrometer/core/instrument/MeterRegistry;Lcom/github/benmanes/caffeine/cache/Cache;Ljava/lang/String;Ljava/lang/Iterable;)Lcom/github/benmanes/caffeine/cache/Cache;
      10: areturn

  public static <C extends com.github.benmanes.caffeine.cache.Cache> C monitor(io.micrometer.core.instrument.MeterRegistry, C, java.lang.String, java.lang.Iterable<io.micrometer.core.instrument.Tag>);
    Code:
       0: new           #2                  // class io/micrometer/core/instrument/binder/cache/CaffeineCacheMetrics
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokespecial #62                 // Method "<init>":(Lcom/github/benmanes/caffeine/cache/Cache;Ljava/lang/String;Ljava/lang/Iterable;)V
      10: aload_0
      11: invokevirtual #66                 // Method bindTo:(Lio/micrometer/core/instrument/MeterRegistry;)V
      14: aload_1
      15: areturn

  public static <C extends com.github.benmanes.caffeine.cache.AsyncLoadingCache> C monitor(io.micrometer.core.instrument.MeterRegistry, C, java.lang.String, java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #52                 // Method io/micrometer/core/instrument/Tags.of:([Ljava/lang/String;)Lio/micrometer/core/instrument/Tags;
       7: invokestatic  #71                 // Method monitor:(Lio/micrometer/core/instrument/MeterRegistry;Lcom/github/benmanes/caffeine/cache/AsyncLoadingCache;Ljava/lang/String;Ljava/lang/Iterable;)Lcom/github/benmanes/caffeine/cache/AsyncLoadingCache;
      10: areturn

  public static <C extends com.github.benmanes.caffeine.cache.AsyncLoadingCache> C monitor(io.micrometer.core.instrument.MeterRegistry, C, java.lang.String, java.lang.Iterable<io.micrometer.core.instrument.Tag>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #79,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/AsyncLoadingCache.synchronous:()Lcom/github/benmanes/caffeine/cache/LoadingCache;
       7: aload_2
       8: aload_3
       9: invokestatic  #55                 // Method monitor:(Lio/micrometer/core/instrument/MeterRegistry;Lcom/github/benmanes/caffeine/cache/Cache;Ljava/lang/String;Ljava/lang/Iterable;)Lcom/github/benmanes/caffeine/cache/Cache;
      12: pop
      13: aload_1
      14: areturn

  protected java.lang.Long size();
    Code:
       0: aload_0
       1: getfield      #36                 // Field cache:Lcom/github/benmanes/caffeine/cache/Cache;
       4: invokeinterface #87,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Cache.estimatedSize:()J
       9: invokestatic  #93                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      12: areturn

  protected long hitCount();
    Code:
       0: aload_0
       1: getfield      #36                 // Field cache:Lcom/github/benmanes/caffeine/cache/Cache;
       4: invokeinterface #98,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Cache.stats:()Lcom/github/benmanes/caffeine/cache/stats/CacheStats;
       9: invokevirtual #102                // Method com/github/benmanes/caffeine/cache/stats/CacheStats.hitCount:()J
      12: lreturn

  protected java.lang.Long missCount();
    Code:
       0: aload_0
       1: getfield      #36                 // Field cache:Lcom/github/benmanes/caffeine/cache/Cache;
       4: invokeinterface #98,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Cache.stats:()Lcom/github/benmanes/caffeine/cache/stats/CacheStats;
       9: invokevirtual #105                // Method com/github/benmanes/caffeine/cache/stats/CacheStats.missCount:()J
      12: invokestatic  #93                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      15: areturn

  protected java.lang.Long evictionCount();
    Code:
       0: aload_0
       1: getfield      #36                 // Field cache:Lcom/github/benmanes/caffeine/cache/Cache;
       4: invokeinterface #98,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Cache.stats:()Lcom/github/benmanes/caffeine/cache/stats/CacheStats;
       9: invokevirtual #108                // Method com/github/benmanes/caffeine/cache/stats/CacheStats.evictionCount:()J
      12: invokestatic  #93                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      15: areturn

  protected long putCount();
    Code:
       0: aload_0
       1: getfield      #36                 // Field cache:Lcom/github/benmanes/caffeine/cache/Cache;
       4: invokeinterface #98,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Cache.stats:()Lcom/github/benmanes/caffeine/cache/stats/CacheStats;
       9: invokevirtual #112                // Method com/github/benmanes/caffeine/cache/stats/CacheStats.loadCount:()J
      12: lreturn

  protected void bindImplementationSpecificMetrics(io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: ldc           #115                // String cache.eviction.weight
       2: aload_0
       3: getfield      #36                 // Field cache:Lcom/github/benmanes/caffeine/cache/Cache;
       6: invokedynamic #134,  0            // InvokeDynamic #0:applyAsDouble:()Ljava/util/function/ToDoubleFunction;
      11: invokestatic  #138                // InterfaceMethod io/micrometer/core/instrument/Gauge.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge$Builder;
      14: aload_0
      15: invokevirtual #142                // Method getTagsWithCacheName:()Ljava/lang/Iterable;
      18: invokevirtual #145                // Method io/micrometer/core/instrument/Gauge$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Gauge$Builder;
      21: ldc           #147                // String The sum of weights of evicted entries. This total does not include manual invalidations.
      23: invokevirtual #151                // Method io/micrometer/core/instrument/Gauge$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
      26: aload_1
      27: invokevirtual #155                // Method io/micrometer/core/instrument/Gauge$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Gauge;
      30: pop
      31: aload_0
      32: getfield      #36                 // Field cache:Lcom/github/benmanes/caffeine/cache/Cache;
      35: instanceof    #157                // class com/github/benmanes/caffeine/cache/LoadingCache
      38: ifeq          171
      41: ldc           #159                // String cache.load.duration
      43: aload_0
      44: getfield      #36                 // Field cache:Lcom/github/benmanes/caffeine/cache/Cache;
      47: getstatic     #165                // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      50: invokedynamic #170,  0            // InvokeDynamic #1:applyAsDouble:()Ljava/util/function/ToDoubleFunction;
      55: invokestatic  #173                // InterfaceMethod io/micrometer/core/instrument/TimeGauge.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/concurrent/TimeUnit;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/TimeGauge$Builder;
      58: aload_0
      59: invokevirtual #142                // Method getTagsWithCacheName:()Ljava/lang/Iterable;
      62: invokevirtual #176                // Method io/micrometer/core/instrument/TimeGauge$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/TimeGauge$Builder;
      65: ldc           #178                // String The time the cache has spent loading new values
      67: invokevirtual #181                // Method io/micrometer/core/instrument/TimeGauge$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/TimeGauge$Builder;
      70: aload_1
      71: invokevirtual #184                // Method io/micrometer/core/instrument/TimeGauge$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/TimeGauge;
      74: pop
      75: ldc           #186                // String cache.load
      77: aload_0
      78: getfield      #36                 // Field cache:Lcom/github/benmanes/caffeine/cache/Cache;
      81: invokedynamic #191,  0            // InvokeDynamic #2:applyAsDouble:()Ljava/util/function/ToDoubleFunction;
      86: invokestatic  #194                // InterfaceMethod io/micrometer/core/instrument/FunctionCounter.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
      89: aload_0
      90: invokevirtual #142                // Method getTagsWithCacheName:()Ljava/lang/Iterable;
      93: invokevirtual #197                // Method io/micrometer/core/instrument/FunctionCounter$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
      96: iconst_2
      97: anewarray     #199                // class java/lang/String
     100: dup
     101: iconst_0
     102: ldc           #201                // String result
     104: aastore
     105: dup
     106: iconst_1
     107: ldc           #203                // String success
     109: aastore
     110: invokevirtual #206                // Method io/micrometer/core/instrument/FunctionCounter$Builder.tags:([Ljava/lang/String;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
     113: ldc           #208                // String The number of times cache lookup methods have successfully loaded a new value
     115: invokevirtual #211                // Method io/micrometer/core/instrument/FunctionCounter$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
     118: aload_1
     119: invokevirtual #214                // Method io/micrometer/core/instrument/FunctionCounter$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/FunctionCounter;
     122: pop
     123: ldc           #186                // String cache.load
     125: aload_0
     126: getfield      #36                 // Field cache:Lcom/github/benmanes/caffeine/cache/Cache;
     129: invokedynamic #219,  0            // InvokeDynamic #3:applyAsDouble:()Ljava/util/function/ToDoubleFunction;
     134: invokestatic  #194                // InterfaceMethod io/micrometer/core/instrument/FunctionCounter.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
     137: aload_0
     138: invokevirtual #142                // Method getTagsWithCacheName:()Ljava/lang/Iterable;
     141: invokevirtual #197                // Method io/micrometer/core/instrument/FunctionCounter$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
     144: iconst_2
     145: anewarray     #199                // class java/lang/String
     148: dup
     149: iconst_0
     150: ldc           #201                // String result
     152: aastore
     153: dup
     154: iconst_1
     155: ldc           #221                // String failure
     157: aastore
     158: invokevirtual #206                // Method io/micrometer/core/instrument/FunctionCounter$Builder.tags:([Ljava/lang/String;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
     161: ldc           #223                // String The number of times {@link Cache} lookup methods failed to load a new value, either because no value was found or an exception was thrown while loading
     163: invokevirtual #211                // Method io/micrometer/core/instrument/FunctionCounter$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
     166: aload_1
     167: invokevirtual #214                // Method io/micrometer/core/instrument/FunctionCounter$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/FunctionCounter;
     170: pop
     171: return

  private static double lambda$bindImplementationSpecificMetrics$3(com.github.benmanes.caffeine.cache.Cache);
    Code:
       0: aload_0
       1: invokeinterface #98,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Cache.stats:()Lcom/github/benmanes/caffeine/cache/stats/CacheStats;
       6: invokevirtual #226                // Method com/github/benmanes/caffeine/cache/stats/CacheStats.loadFailureCount:()J
       9: l2d
      10: dreturn

  private static double lambda$bindImplementationSpecificMetrics$2(com.github.benmanes.caffeine.cache.Cache);
    Code:
       0: aload_0
       1: invokeinterface #98,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Cache.stats:()Lcom/github/benmanes/caffeine/cache/stats/CacheStats;
       6: invokevirtual #230                // Method com/github/benmanes/caffeine/cache/stats/CacheStats.loadSuccessCount:()J
       9: l2d
      10: dreturn

  private static double lambda$bindImplementationSpecificMetrics$1(com.github.benmanes.caffeine.cache.Cache);
    Code:
       0: aload_0
       1: invokeinterface #98,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Cache.stats:()Lcom/github/benmanes/caffeine/cache/stats/CacheStats;
       6: invokevirtual #233                // Method com/github/benmanes/caffeine/cache/stats/CacheStats.totalLoadTime:()J
       9: l2d
      10: dreturn

  private static double lambda$bindImplementationSpecificMetrics$0(com.github.benmanes.caffeine.cache.Cache);
    Code:
       0: aload_0
       1: invokeinterface #98,  1           // InterfaceMethod com/github/benmanes/caffeine/cache/Cache.stats:()Lcom/github/benmanes/caffeine/cache/stats/CacheStats;
       6: invokevirtual #236                // Method com/github/benmanes/caffeine/cache/stats/CacheStats.evictionWeight:()J
       9: l2d
      10: dreturn
}
