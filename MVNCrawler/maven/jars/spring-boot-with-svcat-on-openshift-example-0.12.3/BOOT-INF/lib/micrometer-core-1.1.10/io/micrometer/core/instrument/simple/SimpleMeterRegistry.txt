Compiled from "SimpleMeterRegistry.java"
public class io.micrometer.core.instrument.simple.SimpleMeterRegistry extends io.micrometer.core.instrument.MeterRegistry {
  private final io.micrometer.core.instrument.simple.SimpleConfig config;

  public io.micrometer.core.instrument.simple.SimpleMeterRegistry();
    Code:
       0: aload_0
       1: getstatic     #29                 // Field io/micrometer/core/instrument/simple/SimpleConfig.DEFAULT:Lio/micrometer/core/instrument/simple/SimpleConfig;
       4: getstatic     #35                 // Field io/micrometer/core/instrument/Clock.SYSTEM:Lio/micrometer/core/instrument/Clock;
       7: invokespecial #38                 // Method "<init>":(Lio/micrometer/core/instrument/simple/SimpleConfig;Lio/micrometer/core/instrument/Clock;)V
      10: return

  public io.micrometer.core.instrument.simple.SimpleMeterRegistry(io.micrometer.core.instrument.simple.SimpleConfig, io.micrometer.core.instrument.Clock);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #43                 // Method io/micrometer/core/instrument/MeterRegistry."<init>":(Lio/micrometer/core/instrument/Clock;)V
       5: aload_0
       6: aload_1
       7: putfield      #45                 // Field config:Lio/micrometer/core/instrument/simple/SimpleConfig;
      10: return

  protected io.micrometer.core.instrument.DistributionSummary newDistributionSummary(io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.distribution.DistributionStatisticConfig, double);
    Code:
       0: aload_2
       1: invokestatic  #52                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.builder:()Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
       4: aload_0
       5: getfield      #45                 // Field config:Lio/micrometer/core/instrument/simple/SimpleConfig;
       8: invokeinterface #56,  1           // InterfaceMethod io/micrometer/core/instrument/simple/SimpleConfig.step:()Ljava/time/Duration;
      13: invokevirtual #60                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.expiry:(Ljava/time/Duration;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
      16: invokevirtual #64                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.build:()Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
      19: invokevirtual #68                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.merge:(Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
      22: astore        5
      24: getstatic     #72                 // Field io/micrometer/core/instrument/simple/SimpleMeterRegistry$1.$SwitchMap$io$micrometer$core$instrument$simple$CountingMode:[I
      27: aload_0
      28: getfield      #45                 // Field config:Lio/micrometer/core/instrument/simple/SimpleConfig;
      31: invokeinterface #76,  1           // InterfaceMethod io/micrometer/core/instrument/simple/SimpleConfig.mode:()Lio/micrometer/core/instrument/simple/CountingMode;
      36: invokevirtual #82                 // Method io/micrometer/core/instrument/simple/CountingMode.ordinal:()I
      39: iaload
      40: lookupswitch  { // 2
                     1: 68
                     2: 89
               default: 89
          }
      68: new           #84                 // class io/micrometer/core/instrument/cumulative/CumulativeDistributionSummary
      71: dup
      72: aload_1
      73: aload_0
      74: getfield      #86                 // Field clock:Lio/micrometer/core/instrument/Clock;
      77: aload         5
      79: dload_3
      80: iconst_0
      81: invokespecial #89                 // Method io/micrometer/core/instrument/cumulative/CumulativeDistributionSummary."<init>":(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;DZ)V
      84: astore        6
      86: goto          119
      89: new           #91                 // class io/micrometer/core/instrument/step/StepDistributionSummary
      92: dup
      93: aload_1
      94: aload_0
      95: getfield      #86                 // Field clock:Lio/micrometer/core/instrument/Clock;
      98: aload         5
     100: dload_3
     101: aload_0
     102: getfield      #45                 // Field config:Lio/micrometer/core/instrument/simple/SimpleConfig;
     105: invokeinterface #56,  1           // InterfaceMethod io/micrometer/core/instrument/simple/SimpleConfig.step:()Ljava/time/Duration;
     110: invokevirtual #97                 // Method java/time/Duration.toMillis:()J
     113: iconst_0
     114: invokespecial #100                // Method io/micrometer/core/instrument/step/StepDistributionSummary."<init>":(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;DJZ)V
     117: astore        6
     119: aload         6
     121: aload_0
     122: invokestatic  #108                // Method io/micrometer/core/instrument/distribution/HistogramGauges.registerWithCommonFormat:(Lio/micrometer/core/instrument/DistributionSummary;Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/distribution/HistogramGauges;
     125: pop
     126: aload         6
     128: areturn

  protected io.micrometer.core.instrument.Meter newMeter(io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.Meter$Type, java.lang.Iterable<io.micrometer.core.instrument.Measurement>);
    Code:
       0: new           #122                // class io/micrometer/core/instrument/internal/DefaultMeter
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokespecial #125                // Method io/micrometer/core/instrument/internal/DefaultMeter."<init>":(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/Iterable;)V
      10: areturn

  protected io.micrometer.core.instrument.Timer newTimer(io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.distribution.DistributionStatisticConfig, io.micrometer.core.instrument.distribution.pause.PauseDetector);
    Code:
       0: aload_2
       1: invokestatic  #52                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.builder:()Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
       4: aload_0
       5: getfield      #45                 // Field config:Lio/micrometer/core/instrument/simple/SimpleConfig;
       8: invokeinterface #56,  1           // InterfaceMethod io/micrometer/core/instrument/simple/SimpleConfig.step:()Ljava/time/Duration;
      13: invokevirtual #60                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.expiry:(Ljava/time/Duration;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
      16: invokevirtual #64                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.build:()Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
      19: invokevirtual #68                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.merge:(Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
      22: astore        4
      24: getstatic     #72                 // Field io/micrometer/core/instrument/simple/SimpleMeterRegistry$1.$SwitchMap$io$micrometer$core$instrument$simple$CountingMode:[I
      27: aload_0
      28: getfield      #45                 // Field config:Lio/micrometer/core/instrument/simple/SimpleConfig;
      31: invokeinterface #76,  1           // InterfaceMethod io/micrometer/core/instrument/simple/SimpleConfig.mode:()Lio/micrometer/core/instrument/simple/CountingMode;
      36: invokevirtual #82                 // Method io/micrometer/core/instrument/simple/CountingMode.ordinal:()I
      39: iaload
      40: lookupswitch  { // 2
                     1: 68
                     2: 93
               default: 93
          }
      68: new           #134                // class io/micrometer/core/instrument/cumulative/CumulativeTimer
      71: dup
      72: aload_1
      73: aload_0
      74: getfield      #86                 // Field clock:Lio/micrometer/core/instrument/Clock;
      77: aload         4
      79: aload_3
      80: aload_0
      81: invokevirtual #138                // Method getBaseTimeUnit:()Ljava/util/concurrent/TimeUnit;
      84: iconst_0
      85: invokespecial #141                // Method io/micrometer/core/instrument/cumulative/CumulativeTimer."<init>":(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Lio/micrometer/core/instrument/distribution/pause/PauseDetector;Ljava/util/concurrent/TimeUnit;Z)V
      88: astore        5
      90: goto          127
      93: new           #143                // class io/micrometer/core/instrument/step/StepTimer
      96: dup
      97: aload_1
      98: aload_0
      99: getfield      #86                 // Field clock:Lio/micrometer/core/instrument/Clock;
     102: aload         4
     104: aload_3
     105: aload_0
     106: invokevirtual #138                // Method getBaseTimeUnit:()Ljava/util/concurrent/TimeUnit;
     109: aload_0
     110: getfield      #45                 // Field config:Lio/micrometer/core/instrument/simple/SimpleConfig;
     113: invokeinterface #56,  1           // InterfaceMethod io/micrometer/core/instrument/simple/SimpleConfig.step:()Ljava/time/Duration;
     118: invokevirtual #97                 // Method java/time/Duration.toMillis:()J
     121: iconst_0
     122: invokespecial #146                // Method io/micrometer/core/instrument/step/StepTimer."<init>":(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Lio/micrometer/core/instrument/distribution/pause/PauseDetector;Ljava/util/concurrent/TimeUnit;JZ)V
     125: astore        5
     127: aload         5
     129: aload_0
     130: invokestatic  #151                // Method io/micrometer/core/instrument/distribution/HistogramGauges.registerWithCommonFormat:(Lio/micrometer/core/instrument/Timer;Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/distribution/HistogramGauges;
     133: pop
     134: aload         5
     136: areturn

  protected <T> io.micrometer.core.instrument.Gauge newGauge(io.micrometer.core.instrument.Meter$Id, T, java.util.function.ToDoubleFunction<T>);
    Code:
       0: new           #161                // class io/micrometer/core/instrument/internal/DefaultGauge
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokespecial #164                // Method io/micrometer/core/instrument/internal/DefaultGauge."<init>":(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)V
      10: areturn

  protected io.micrometer.core.instrument.Counter newCounter(io.micrometer.core.instrument.Meter$Id);
    Code:
       0: getstatic     #72                 // Field io/micrometer/core/instrument/simple/SimpleMeterRegistry$1.$SwitchMap$io$micrometer$core$instrument$simple$CountingMode:[I
       3: aload_0
       4: getfield      #45                 // Field config:Lio/micrometer/core/instrument/simple/SimpleConfig;
       7: invokeinterface #76,  1           // InterfaceMethod io/micrometer/core/instrument/simple/SimpleConfig.mode:()Lio/micrometer/core/instrument/simple/CountingMode;
      12: invokevirtual #82                 // Method io/micrometer/core/instrument/simple/CountingMode.ordinal:()I
      15: iaload
      16: lookupswitch  { // 2
                     1: 44
                     2: 53
               default: 53
          }
      44: new           #174                // class io/micrometer/core/instrument/cumulative/CumulativeCounter
      47: dup
      48: aload_1
      49: invokespecial #177                // Method io/micrometer/core/instrument/cumulative/CumulativeCounter."<init>":(Lio/micrometer/core/instrument/Meter$Id;)V
      52: areturn
      53: new           #179                // class io/micrometer/core/instrument/step/StepCounter
      56: dup
      57: aload_1
      58: aload_0
      59: getfield      #86                 // Field clock:Lio/micrometer/core/instrument/Clock;
      62: aload_0
      63: getfield      #45                 // Field config:Lio/micrometer/core/instrument/simple/SimpleConfig;
      66: invokeinterface #56,  1           // InterfaceMethod io/micrometer/core/instrument/simple/SimpleConfig.step:()Ljava/time/Duration;
      71: invokevirtual #97                 // Method java/time/Duration.toMillis:()J
      74: invokespecial #182                // Method io/micrometer/core/instrument/step/StepCounter."<init>":(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;J)V
      77: areturn

  protected io.micrometer.core.instrument.LongTaskTimer newLongTaskTimer(io.micrometer.core.instrument.Meter$Id);
    Code:
       0: new           #186                // class io/micrometer/core/instrument/internal/DefaultLongTaskTimer
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #86                 // Field clock:Lio/micrometer/core/instrument/Clock;
       9: invokespecial #189                // Method io/micrometer/core/instrument/internal/DefaultLongTaskTimer."<init>":(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;)V
      12: areturn

  protected <T> io.micrometer.core.instrument.FunctionTimer newFunctionTimer(io.micrometer.core.instrument.Meter$Id, T, java.util.function.ToLongFunction<T>, java.util.function.ToDoubleFunction<T>, java.util.concurrent.TimeUnit);
    Code:
       0: getstatic     #72                 // Field io/micrometer/core/instrument/simple/SimpleMeterRegistry$1.$SwitchMap$io$micrometer$core$instrument$simple$CountingMode:[I
       3: aload_0
       4: getfield      #45                 // Field config:Lio/micrometer/core/instrument/simple/SimpleConfig;
       7: invokeinterface #76,  1           // InterfaceMethod io/micrometer/core/instrument/simple/SimpleConfig.mode:()Lio/micrometer/core/instrument/simple/CountingMode;
      12: invokevirtual #82                 // Method io/micrometer/core/instrument/simple/CountingMode.ordinal:()I
      15: iaload
      16: lookupswitch  { // 2
                     1: 44
                     2: 63
               default: 63
          }
      44: new           #194                // class io/micrometer/core/instrument/cumulative/CumulativeFunctionTimer
      47: dup
      48: aload_1
      49: aload_2
      50: aload_3
      51: aload         4
      53: aload         5
      55: aload_0
      56: invokevirtual #138                // Method getBaseTimeUnit:()Ljava/util/concurrent/TimeUnit;
      59: invokespecial #197                // Method io/micrometer/core/instrument/cumulative/CumulativeFunctionTimer."<init>":(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;Ljava/util/function/ToLongFunction;Ljava/util/function/ToDoubleFunction;Ljava/util/concurrent/TimeUnit;Ljava/util/concurrent/TimeUnit;)V
      62: areturn
      63: new           #199                // class io/micrometer/core/instrument/step/StepFunctionTimer
      66: dup
      67: aload_1
      68: aload_0
      69: getfield      #86                 // Field clock:Lio/micrometer/core/instrument/Clock;
      72: aload_0
      73: getfield      #45                 // Field config:Lio/micrometer/core/instrument/simple/SimpleConfig;
      76: invokeinterface #56,  1           // InterfaceMethod io/micrometer/core/instrument/simple/SimpleConfig.step:()Ljava/time/Duration;
      81: invokevirtual #97                 // Method java/time/Duration.toMillis:()J
      84: aload_2
      85: aload_3
      86: aload         4
      88: aload         5
      90: aload_0
      91: invokevirtual #138                // Method getBaseTimeUnit:()Ljava/util/concurrent/TimeUnit;
      94: invokespecial #202                // Method io/micrometer/core/instrument/step/StepFunctionTimer."<init>":(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;JLjava/lang/Object;Ljava/util/function/ToLongFunction;Ljava/util/function/ToDoubleFunction;Ljava/util/concurrent/TimeUnit;Ljava/util/concurrent/TimeUnit;)V
      97: areturn

  protected <T> io.micrometer.core.instrument.FunctionCounter newFunctionCounter(io.micrometer.core.instrument.Meter$Id, T, java.util.function.ToDoubleFunction<T>);
    Code:
       0: getstatic     #72                 // Field io/micrometer/core/instrument/simple/SimpleMeterRegistry$1.$SwitchMap$io$micrometer$core$instrument$simple$CountingMode:[I
       3: aload_0
       4: getfield      #45                 // Field config:Lio/micrometer/core/instrument/simple/SimpleConfig;
       7: invokeinterface #76,  1           // InterfaceMethod io/micrometer/core/instrument/simple/SimpleConfig.mode:()Lio/micrometer/core/instrument/simple/CountingMode;
      12: invokevirtual #82                 // Method io/micrometer/core/instrument/simple/CountingMode.ordinal:()I
      15: iaload
      16: lookupswitch  { // 2
                     1: 44
                     2: 55
               default: 55
          }
      44: new           #213                // class io/micrometer/core/instrument/cumulative/CumulativeFunctionCounter
      47: dup
      48: aload_1
      49: aload_2
      50: aload_3
      51: invokespecial #214                // Method io/micrometer/core/instrument/cumulative/CumulativeFunctionCounter."<init>":(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)V
      54: areturn
      55: new           #216                // class io/micrometer/core/instrument/step/StepFunctionCounter
      58: dup
      59: aload_1
      60: aload_0
      61: getfield      #86                 // Field clock:Lio/micrometer/core/instrument/Clock;
      64: aload_0
      65: getfield      #45                 // Field config:Lio/micrometer/core/instrument/simple/SimpleConfig;
      68: invokeinterface #56,  1           // InterfaceMethod io/micrometer/core/instrument/simple/SimpleConfig.step:()Ljava/time/Duration;
      73: invokevirtual #97                 // Method java/time/Duration.toMillis:()J
      76: aload_2
      77: aload_3
      78: invokespecial #219                // Method io/micrometer/core/instrument/step/StepFunctionCounter."<init>":(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;JLjava/lang/Object;Ljava/util/function/ToDoubleFunction;)V
      81: areturn

  protected java.util.concurrent.TimeUnit getBaseTimeUnit();
    Code:
       0: getstatic     #224                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
       3: areturn

  protected io.micrometer.core.instrument.distribution.DistributionStatisticConfig defaultHistogramConfig();
    Code:
       0: invokestatic  #52                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.builder:()Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
       3: aload_0
       4: getfield      #45                 // Field config:Lio/micrometer/core/instrument/simple/SimpleConfig;
       7: invokeinterface #56,  1           // InterfaceMethod io/micrometer/core/instrument/simple/SimpleConfig.step:()Ljava/time/Duration;
      12: invokevirtual #60                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.expiry:(Ljava/time/Duration;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
      15: invokevirtual #64                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.build:()Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
      18: getstatic     #227                // Field io/micrometer/core/instrument/distribution/DistributionStatisticConfig.DEFAULT:Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
      21: invokevirtual #68                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.merge:(Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
      24: areturn
}
