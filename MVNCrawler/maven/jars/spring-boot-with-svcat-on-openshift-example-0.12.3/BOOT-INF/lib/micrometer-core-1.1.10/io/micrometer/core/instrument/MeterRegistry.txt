Compiled from "MeterRegistry.java"
public abstract class io.micrometer.core.instrument.MeterRegistry {
  protected final io.micrometer.core.instrument.Clock clock;

  private final java.lang.Object meterMapLock;

  private volatile io.micrometer.core.instrument.config.MeterFilter[] filters;

  private final java.util.List<java.util.function.Consumer<io.micrometer.core.instrument.Meter>> meterAddedListeners;

  private final java.util.List<java.util.function.Consumer<io.micrometer.core.instrument.Meter>> meterRemovedListeners;

  private final io.micrometer.core.instrument.MeterRegistry$Config config;

  private final io.micrometer.core.instrument.MeterRegistry$More more;

  private volatile io.micrometer.shaded.org.pcollections.PMap<io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.Meter> meterMap;

  private volatile io.micrometer.shaded.org.pcollections.PMap<io.micrometer.core.instrument.Meter$Id, io.micrometer.shaded.org.pcollections.PSet<io.micrometer.core.instrument.Meter$Id>> syntheticAssociations;

  private final java.util.concurrent.atomic.AtomicBoolean closed;

  private io.micrometer.core.instrument.distribution.pause.PauseDetector pauseDetector;

  private io.micrometer.core.instrument.config.NamingConvention namingConvention;

  protected io.micrometer.core.instrument.MeterRegistry(io.micrometer.core.instrument.Clock);
    Code:
       0: aload_0
       1: invokespecial #73                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/lang/Object
       8: dup
       9: invokespecial #73                 // Method java/lang/Object."<init>":()V
      12: putfield      #75                 // Field meterMapLock:Ljava/lang/Object;
      15: aload_0
      16: iconst_0
      17: anewarray     #77                 // class io/micrometer/core/instrument/config/MeterFilter
      20: putfield      #79                 // Field filters:[Lio/micrometer/core/instrument/config/MeterFilter;
      23: aload_0
      24: new           #81                 // class java/util/concurrent/CopyOnWriteArrayList
      27: dup
      28: invokespecial #82                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      31: putfield      #84                 // Field meterAddedListeners:Ljava/util/List;
      34: aload_0
      35: new           #81                 // class java/util/concurrent/CopyOnWriteArrayList
      38: dup
      39: invokespecial #82                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      42: putfield      #86                 // Field meterRemovedListeners:Ljava/util/List;
      45: aload_0
      46: new           #10                 // class io/micrometer/core/instrument/MeterRegistry$Config
      49: dup
      50: aload_0
      51: invokespecial #89                 // Method io/micrometer/core/instrument/MeterRegistry$Config."<init>":(Lio/micrometer/core/instrument/MeterRegistry;)V
      54: putfield      #91                 // Field config:Lio/micrometer/core/instrument/MeterRegistry$Config;
      57: aload_0
      58: new           #7                  // class io/micrometer/core/instrument/MeterRegistry$More
      61: dup
      62: aload_0
      63: invokespecial #92                 // Method io/micrometer/core/instrument/MeterRegistry$More."<init>":(Lio/micrometer/core/instrument/MeterRegistry;)V
      66: putfield      #94                 // Field more:Lio/micrometer/core/instrument/MeterRegistry$More;
      69: aload_0
      70: invokestatic  #100                // Method io/micrometer/shaded/org/pcollections/HashTreePMap.empty:()Lio/micrometer/shaded/org/pcollections/HashPMap;
      73: putfield      #102                // Field meterMap:Lio/micrometer/shaded/org/pcollections/PMap;
      76: aload_0
      77: invokestatic  #100                // Method io/micrometer/shaded/org/pcollections/HashTreePMap.empty:()Lio/micrometer/shaded/org/pcollections/HashPMap;
      80: putfield      #104                // Field syntheticAssociations:Lio/micrometer/shaded/org/pcollections/PMap;
      83: aload_0
      84: new           #106                // class java/util/concurrent/atomic/AtomicBoolean
      87: dup
      88: iconst_0
      89: invokespecial #109                // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      92: putfield      #111                // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
      95: aload_0
      96: new           #113                // class io/micrometer/core/instrument/distribution/pause/NoPauseDetector
      99: dup
     100: invokespecial #114                // Method io/micrometer/core/instrument/distribution/pause/NoPauseDetector."<init>":()V
     103: putfield      #116                // Field pauseDetector:Lio/micrometer/core/instrument/distribution/pause/PauseDetector;
     106: aload_0
     107: getstatic     #121                // Field io/micrometer/core/instrument/config/NamingConvention.snakeCase:Lio/micrometer/core/instrument/config/NamingConvention;
     110: putfield      #123                // Field namingConvention:Lio/micrometer/core/instrument/config/NamingConvention;
     113: aload_1
     114: invokestatic  #129                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
     117: pop
     118: aload_0
     119: aload_1
     120: putfield      #131                // Field clock:Lio/micrometer/core/instrument/Clock;
     123: return

  protected abstract <T> io.micrometer.core.instrument.Gauge newGauge(io.micrometer.core.instrument.Meter$Id, T, java.util.function.ToDoubleFunction<T>);

  protected abstract io.micrometer.core.instrument.Counter newCounter(io.micrometer.core.instrument.Meter$Id);

  protected abstract io.micrometer.core.instrument.LongTaskTimer newLongTaskTimer(io.micrometer.core.instrument.Meter$Id);

  protected abstract io.micrometer.core.instrument.Timer newTimer(io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.distribution.DistributionStatisticConfig, io.micrometer.core.instrument.distribution.pause.PauseDetector);

  protected abstract io.micrometer.core.instrument.DistributionSummary newDistributionSummary(io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.distribution.DistributionStatisticConfig, double);

  protected abstract io.micrometer.core.instrument.Meter newMeter(io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.Meter$Type, java.lang.Iterable<io.micrometer.core.instrument.Measurement>);

  protected <T> io.micrometer.core.instrument.TimeGauge newTimeGauge(io.micrometer.core.instrument.Meter$Id, T, java.util.concurrent.TimeUnit, java.util.function.ToDoubleFunction<T>);
    Code:
       0: aload_1
       1: aload_0
       2: invokespecial #155                // Method getBaseTimeUnitStr:()Ljava/lang/String;
       5: invokevirtual #159                // Method io/micrometer/core/instrument/Meter$Id.withBaseUnit:(Ljava/lang/String;)Lio/micrometer/core/instrument/Meter$Id;
       8: astore        5
      10: aload_0
      11: aload         5
      13: aload_2
      14: aload_0
      15: aload         4
      17: aload_3
      18: invokedynamic #177,  0            // InvokeDynamic #0:applyAsDouble:(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/function/ToDoubleFunction;Ljava/util/concurrent/TimeUnit;)Ljava/util/function/ToDoubleFunction;
      23: invokevirtual #179                // Method newGauge:(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge;
      26: astore        6
      28: new           #13                 // class io/micrometer/core/instrument/MeterRegistry$1
      31: dup
      32: aload_0
      33: aload         5
      35: aload         6
      37: invokespecial #182                // Method io/micrometer/core/instrument/MeterRegistry$1."<init>":(Lio/micrometer/core/instrument/MeterRegistry;Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Gauge;)V
      40: areturn

  protected abstract <T> io.micrometer.core.instrument.FunctionTimer newFunctionTimer(io.micrometer.core.instrument.Meter$Id, T, java.util.function.ToLongFunction<T>, java.util.function.ToDoubleFunction<T>, java.util.concurrent.TimeUnit);

  protected abstract <T> io.micrometer.core.instrument.FunctionCounter newFunctionCounter(io.micrometer.core.instrument.Meter$Id, T, java.util.function.ToDoubleFunction<T>);

  protected java.util.List<io.micrometer.core.instrument.Tag> getConventionTags(io.micrometer.core.instrument.Meter$Id);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #206                // Method config:()Lio/micrometer/core/instrument/MeterRegistry$Config;
       5: invokevirtual #209                // Method io/micrometer/core/instrument/MeterRegistry$Config.namingConvention:()Lio/micrometer/core/instrument/config/NamingConvention;
       8: invokevirtual #212                // Method io/micrometer/core/instrument/Meter$Id.getConventionTags:(Lio/micrometer/core/instrument/config/NamingConvention;)Ljava/util/List;
      11: areturn

  protected java.lang.String getConventionName(io.micrometer.core.instrument.Meter$Id);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #206                // Method config:()Lio/micrometer/core/instrument/MeterRegistry$Config;
       5: invokevirtual #209                // Method io/micrometer/core/instrument/MeterRegistry$Config.namingConvention:()Lio/micrometer/core/instrument/config/NamingConvention;
       8: invokevirtual #217                // Method io/micrometer/core/instrument/Meter$Id.getConventionName:(Lio/micrometer/core/instrument/config/NamingConvention;)Ljava/lang/String;
      11: areturn

  protected abstract java.util.concurrent.TimeUnit getBaseTimeUnit();

  protected abstract io.micrometer.core.instrument.distribution.DistributionStatisticConfig defaultHistogramConfig();

  private java.lang.String getBaseTimeUnitStr();
    Code:
       0: aload_0
       1: invokevirtual #223                // Method getBaseTimeUnit:()Ljava/util/concurrent/TimeUnit;
       4: invokevirtual #228                // Method java/util/concurrent/TimeUnit.toString:()Ljava/lang/String;
       7: invokevirtual #233                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      10: areturn

  io.micrometer.core.instrument.Counter counter(io.micrometer.core.instrument.Meter$Id);
    Code:
       0: aload_0
       1: ldc           #25                 // class io/micrometer/core/instrument/Counter
       3: aload_1
       4: aload_0
       5: invokedynamic #243,  0            // InvokeDynamic #1:apply:(Lio/micrometer/core/instrument/MeterRegistry;)Ljava/util/function/Function;
      10: invokedynamic #252,  0            // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      15: invokespecial #256                // Method registerMeterIfNecessary:(Ljava/lang/Class;Lio/micrometer/core/instrument/Meter$Id;Ljava/util/function/Function;Ljava/util/function/Function;)Lio/micrometer/core/instrument/Meter;
      18: checkcast     #25                 // class io/micrometer/core/instrument/Counter
      21: areturn

  <T> io.micrometer.core.instrument.Gauge gauge(io.micrometer.core.instrument.Meter$Id, T, java.util.function.ToDoubleFunction<T>);
    Code:
       0: aload_0
       1: ldc           #38                 // class io/micrometer/core/instrument/Gauge
       3: aload_1
       4: aload_0
       5: aload_2
       6: aload_3
       7: invokedynamic #266,  0            // InvokeDynamic #3:apply:(Lio/micrometer/core/instrument/MeterRegistry;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/util/function/Function;
      12: invokedynamic #271,  0            // InvokeDynamic #4:apply:()Ljava/util/function/Function;
      17: invokespecial #256                // Method registerMeterIfNecessary:(Ljava/lang/Class;Lio/micrometer/core/instrument/Meter$Id;Ljava/util/function/Function;Ljava/util/function/Function;)Lio/micrometer/core/instrument/Meter;
      20: checkcast     #38                 // class io/micrometer/core/instrument/Gauge
      23: areturn

  io.micrometer.core.instrument.Timer timer(io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.distribution.DistributionStatisticConfig, io.micrometer.core.instrument.distribution.pause.PauseDetector);
    Code:
       0: aload_0
       1: ldc           #34                 // class io/micrometer/core/instrument/Timer
       3: aload_1
       4: aload_2
       5: aload_0
       6: aload_3
       7: invokedynamic #284,  0            // InvokeDynamic #5:apply:(Lio/micrometer/core/instrument/MeterRegistry;Lio/micrometer/core/instrument/distribution/pause/PauseDetector;)Ljava/util/function/BiFunction;
      12: invokedynamic #291,  0            // InvokeDynamic #6:apply:()Ljava/util/function/Function;
      17: invokespecial #294                // Method registerMeterIfNecessary:(Ljava/lang/Class;Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Ljava/util/function/BiFunction;Ljava/util/function/Function;)Lio/micrometer/core/instrument/Meter;
      20: checkcast     #34                 // class io/micrometer/core/instrument/Timer
      23: areturn

  io.micrometer.core.instrument.DistributionSummary summary(io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.distribution.DistributionStatisticConfig, double);
    Code:
       0: aload_0
       1: ldc           #30                 // class io/micrometer/core/instrument/DistributionSummary
       3: aload_1
       4: aload_2
       5: aload_0
       6: dload_3
       7: invokedynamic #308,  0            // InvokeDynamic #7:apply:(Lio/micrometer/core/instrument/MeterRegistry;D)Ljava/util/function/BiFunction;
      12: invokedynamic #315,  0            // InvokeDynamic #8:apply:()Ljava/util/function/Function;
      17: invokespecial #294                // Method registerMeterIfNecessary:(Ljava/lang/Class;Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Ljava/util/function/BiFunction;Ljava/util/function/Function;)Lio/micrometer/core/instrument/Meter;
      20: checkcast     #30                 // class io/micrometer/core/instrument/DistributionSummary
      23: areturn

  io.micrometer.core.instrument.Meter register(io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.Meter$Type, java.lang.Iterable<io.micrometer.core.instrument.Measurement>);
    Code:
       0: aload_0
       1: ldc           #17                 // class io/micrometer/core/instrument/Meter
       3: aload_1
       4: aload_0
       5: aload_2
       6: aload_3
       7: invokedynamic #328,  0            // InvokeDynamic #9:apply:(Lio/micrometer/core/instrument/MeterRegistry;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/Iterable;)Ljava/util/function/Function;
      12: invokedynamic #333,  0            // InvokeDynamic #10:apply:()Ljava/util/function/Function;
      17: invokespecial #256                // Method registerMeterIfNecessary:(Ljava/lang/Class;Lio/micrometer/core/instrument/Meter$Id;Ljava/util/function/Function;Ljava/util/function/Function;)Lio/micrometer/core/instrument/Meter;
      20: areturn

  public java.util.List<io.micrometer.core.instrument.Meter> getMeters();
    Code:
       0: new           #343                // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #102                // Field meterMap:Lio/micrometer/shaded/org/pcollections/PMap;
       8: invokeinterface #349,  1          // InterfaceMethod io/micrometer/shaded/org/pcollections/PMap.values:()Ljava/util/Collection;
      13: invokespecial #352                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      16: invokestatic  #358                // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      19: areturn

  public void forEachMeter(java.util.function.Consumer<? super io.micrometer.core.instrument.Meter>);
    Code:
       0: aload_0
       1: getfield      #102                // Field meterMap:Lio/micrometer/shaded/org/pcollections/PMap;
       4: invokeinterface #349,  1          // InterfaceMethod io/micrometer/shaded/org/pcollections/PMap.values:()Ljava/util/Collection;
       9: aload_1
      10: invokeinterface #366,  2          // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      15: return

  public io.micrometer.core.instrument.MeterRegistry$Config config();
    Code:
       0: aload_0
       1: getfield      #91                 // Field config:Lio/micrometer/core/instrument/MeterRegistry$Config;
       4: areturn

  public io.micrometer.core.instrument.search.Search find(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #377                // Method io/micrometer/core/instrument/search/Search.in:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/search/Search;
       4: aload_1
       5: invokevirtual #380                // Method io/micrometer/core/instrument/search/Search.name:(Ljava/lang/String;)Lio/micrometer/core/instrument/search/Search;
       8: areturn

  public io.micrometer.core.instrument.search.RequiredSearch get(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #388                // Method io/micrometer/core/instrument/search/RequiredSearch.in:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/search/RequiredSearch;
       4: aload_1
       5: invokevirtual #390                // Method io/micrometer/core/instrument/search/RequiredSearch.name:(Ljava/lang/String;)Lio/micrometer/core/instrument/search/RequiredSearch;
       8: areturn

  public io.micrometer.core.instrument.Counter counter(java.lang.String, java.lang.Iterable<io.micrometer.core.instrument.Tag>);
    Code:
       0: aload_1
       1: invokestatic  #396                // InterfaceMethod io/micrometer/core/instrument/Counter.builder:(Ljava/lang/String;)Lio/micrometer/core/instrument/Counter$Builder;
       4: aload_2
       5: invokevirtual #400                // Method io/micrometer/core/instrument/Counter$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Counter$Builder;
       8: aload_0
       9: invokevirtual #403                // Method io/micrometer/core/instrument/Counter$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Counter;
      12: areturn

  public io.micrometer.core.instrument.Counter counter(java.lang.String, java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #411                // Method io/micrometer/core/instrument/Tags.of:([Ljava/lang/String;)Lio/micrometer/core/instrument/Tags;
       6: invokevirtual #413                // Method counter:(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Counter;
       9: areturn

  public io.micrometer.core.instrument.DistributionSummary summary(java.lang.String, java.lang.Iterable<io.micrometer.core.instrument.Tag>);
    Code:
       0: aload_1
       1: invokestatic  #419                // InterfaceMethod io/micrometer/core/instrument/DistributionSummary.builder:(Ljava/lang/String;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
       4: aload_2
       5: invokevirtual #422                // Method io/micrometer/core/instrument/DistributionSummary$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
       8: aload_0
       9: invokevirtual #425                // Method io/micrometer/core/instrument/DistributionSummary$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/DistributionSummary;
      12: areturn

  public io.micrometer.core.instrument.DistributionSummary summary(java.lang.String, java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #411                // Method io/micrometer/core/instrument/Tags.of:([Ljava/lang/String;)Lio/micrometer/core/instrument/Tags;
       6: invokevirtual #428                // Method summary:(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/DistributionSummary;
       9: areturn

  public io.micrometer.core.instrument.Timer timer(java.lang.String, java.lang.Iterable<io.micrometer.core.instrument.Tag>);
    Code:
       0: aload_1
       1: invokestatic  #433                // InterfaceMethod io/micrometer/core/instrument/Timer.builder:(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
       4: aload_2
       5: invokevirtual #436                // Method io/micrometer/core/instrument/Timer$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Timer$Builder;
       8: aload_0
       9: invokevirtual #439                // Method io/micrometer/core/instrument/Timer$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Timer;
      12: areturn

  public io.micrometer.core.instrument.Timer timer(java.lang.String, java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #411                // Method io/micrometer/core/instrument/Tags.of:([Ljava/lang/String;)Lio/micrometer/core/instrument/Tags;
       6: invokevirtual #442                // Method timer:(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Timer;
       9: areturn

  public io.micrometer.core.instrument.MeterRegistry$More more();
    Code:
       0: aload_0
       1: getfield      #94                 // Field more:Lio/micrometer/core/instrument/MeterRegistry$More;
       4: areturn

  public <T> T gauge(java.lang.String, java.lang.Iterable<io.micrometer.core.instrument.Tag>, T, java.util.function.ToDoubleFunction<T>);
    Code:
       0: aload_1
       1: aload_3
       2: aload         4
       4: invokestatic  #448                // InterfaceMethod io/micrometer/core/instrument/Gauge.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge$Builder;
       7: aload_2
       8: invokevirtual #451                // Method io/micrometer/core/instrument/Gauge$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Gauge$Builder;
      11: aload_0
      12: invokevirtual #454                // Method io/micrometer/core/instrument/Gauge$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Gauge;
      15: pop
      16: aload_3
      17: areturn

  public <T extends java.lang.Number> T gauge(java.lang.String, java.lang.Iterable<io.micrometer.core.instrument.Tag>, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokedynamic #468,  0            // InvokeDynamic #11:applyAsDouble:()Ljava/util/function/ToDoubleFunction;
       9: invokevirtual #470                // Method gauge:(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
      12: checkcast     #458                // class java/lang/Number
      15: areturn

  public <T extends java.lang.Number> T gauge(java.lang.String, T);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #477                // Method java/util/Collections.emptyList:()Ljava/util/List;
       5: aload_2
       6: invokevirtual #479                // Method gauge:(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Number;)Ljava/lang/Number;
       9: areturn

  public <T> T gauge(java.lang.String, T, java.util.function.ToDoubleFunction<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #477                // Method java/util/Collections.emptyList:()Ljava/util/List;
       5: aload_2
       6: aload_3
       7: invokevirtual #470                // Method gauge:(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
      10: areturn

  public <T extends java.util.Collection<?>> T gaugeCollectionSize(java.lang.String, java.lang.Iterable<io.micrometer.core.instrument.Tag>, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokedynamic #492,  0            // InvokeDynamic #12:applyAsDouble:()Ljava/util/function/ToDoubleFunction;
       9: invokevirtual #470                // Method gauge:(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
      12: checkcast     #363                // class java/util/Collection
      15: areturn

  public <T extends java.util.Map<?, ?>> T gaugeMapSize(java.lang.String, java.lang.Iterable<io.micrometer.core.instrument.Tag>, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokedynamic #504,  0            // InvokeDynamic #13:applyAsDouble:()Ljava/util/function/ToDoubleFunction;
       9: invokevirtual #470                // Method gauge:(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Ljava/lang/Object;
      12: checkcast     #499                // class java/util/Map
      15: areturn

  private <M extends io.micrometer.core.instrument.Meter> M registerMeterIfNecessary(java.lang.Class<M>, io.micrometer.core.instrument.Meter$Id, java.util.function.Function<io.micrometer.core.instrument.Meter$Id, M>, java.util.function.Function<io.micrometer.core.instrument.Meter$Id, M>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: aload_3
       5: invokedynamic #517,  0            // InvokeDynamic #14:apply:(Ljava/util/function/Function;)Ljava/util/function/BiFunction;
      10: aload         4
      12: invokespecial #294                // Method registerMeterIfNecessary:(Ljava/lang/Class;Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Ljava/util/function/BiFunction;Ljava/util/function/Function;)Lio/micrometer/core/instrument/Meter;
      15: areturn

  private <M extends io.micrometer.core.instrument.Meter> M registerMeterIfNecessary(java.lang.Class<M>, io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.distribution.DistributionStatisticConfig, java.util.function.BiFunction<io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.distribution.DistributionStatisticConfig, M>, java.util.function.Function<io.micrometer.core.instrument.Meter$Id, M>);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #528                // Method getMappedId:(Lio/micrometer/core/instrument/Meter$Id;)Lio/micrometer/core/instrument/Meter$Id;
       5: astore        6
       7: aload_0
       8: aload_3
       9: aload         4
      11: aload_2
      12: aload         6
      14: aload         5
      16: invokespecial #532                // Method getOrCreateMeter:(Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Ljava/util/function/BiFunction;Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Meter$Id;Ljava/util/function/Function;)Lio/micrometer/core/instrument/Meter;
      19: astore        7
      21: aload_1
      22: aload         7
      24: invokevirtual #538                // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      27: ifne          41
      30: new           #540                // class java/lang/IllegalArgumentException
      33: dup
      34: ldc_w         #542                // String There is already a registered meter of a different type with the same name
      37: invokespecial #545                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: aload_1
      42: aload         7
      44: invokevirtual #548                // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      47: checkcast     #17                 // class io/micrometer/core/instrument/Meter
      50: areturn

  private io.micrometer.core.instrument.Meter$Id getMappedId(io.micrometer.core.instrument.Meter$Id);
    Code:
       0: aload_1
       1: invokevirtual #557                // Method io/micrometer/core/instrument/Meter$Id.syntheticAssociation:()Lio/micrometer/core/instrument/Meter$Id;
       4: ifnull        9
       7: aload_1
       8: areturn
       9: aload_1
      10: astore_2
      11: aload_0
      12: getfield      #79                 // Field filters:[Lio/micrometer/core/instrument/config/MeterFilter;
      15: astore_3
      16: aload_3
      17: arraylength
      18: istore        4
      20: iconst_0
      21: istore        5
      23: iload         5
      25: iload         4
      27: if_icmpge     51
      30: aload_3
      31: iload         5
      33: aaload
      34: astore        6
      36: aload         6
      38: aload_2
      39: invokeinterface #560,  2          // InterfaceMethod io/micrometer/core/instrument/config/MeterFilter.map:(Lio/micrometer/core/instrument/Meter$Id;)Lio/micrometer/core/instrument/Meter$Id;
      44: astore_2
      45: iinc          5, 1
      48: goto          23
      51: aload_2
      52: areturn

  private io.micrometer.core.instrument.Meter getOrCreateMeter(io.micrometer.core.instrument.distribution.DistributionStatisticConfig, java.util.function.BiFunction<io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.distribution.DistributionStatisticConfig, ? extends io.micrometer.core.instrument.Meter>, io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.Meter$Id, java.util.function.Function<io.micrometer.core.instrument.Meter$Id, ? extends io.micrometer.core.instrument.Meter>);
    Code:
       0: aload_0
       1: getfield      #102                // Field meterMap:Lio/micrometer/shaded/org/pcollections/PMap;
       4: aload         4
       6: invokeinterface #565,  2          // InterfaceMethod io/micrometer/shaded/org/pcollections/PMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #17                 // class io/micrometer/core/instrument/Meter
      14: astore        6
      16: aload         6
      18: ifnonnull     295
      21: aload_0
      22: invokevirtual #569                // Method isClosed:()Z
      25: ifeq          41
      28: aload         5
      30: aload         4
      32: invokeinterface #573,  2          // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #17                 // class io/micrometer/core/instrument/Meter
      40: areturn
      41: aload_0
      42: getfield      #75                 // Field meterMapLock:Ljava/lang/Object;
      45: dup
      46: astore        7
      48: monitorenter
      49: aload_0
      50: getfield      #102                // Field meterMap:Lio/micrometer/shaded/org/pcollections/PMap;
      53: aload         4
      55: invokeinterface #565,  2          // InterfaceMethod io/micrometer/shaded/org/pcollections/PMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      60: checkcast     #17                 // class io/micrometer/core/instrument/Meter
      63: astore        6
      65: aload         6
      67: ifnonnull     281
      70: aload_0
      71: aload_3
      72: invokespecial #577                // Method accept:(Lio/micrometer/core/instrument/Meter$Id;)Z
      75: ifne          94
      78: aload         5
      80: aload         4
      82: invokeinterface #573,  2          // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      87: checkcast     #17                 // class io/micrometer/core/instrument/Meter
      90: aload         7
      92: monitorexit
      93: areturn
      94: aload_1
      95: ifnull        152
      98: aload_0
      99: getfield      #79                 // Field filters:[Lio/micrometer/core/instrument/config/MeterFilter;
     102: astore        8
     104: aload         8
     106: arraylength
     107: istore        9
     109: iconst_0
     110: istore        10
     112: iload         10
     114: iload         9
     116: if_icmpge     152
     119: aload         8
     121: iload         10
     123: aaload
     124: astore        11
     126: aload         11
     128: aload         4
     130: aload_1
     131: invokeinterface #581,  3          // InterfaceMethod io/micrometer/core/instrument/config/MeterFilter.configure:(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
     136: astore        12
     138: aload         12
     140: ifnull        146
     143: aload         12
     145: astore_1
     146: iinc          10, 1
     149: goto          112
     152: aload_2
     153: aload         4
     155: aload_1
     156: invokeinterface #585,  3          // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     161: checkcast     #17                 // class io/micrometer/core/instrument/Meter
     164: astore        6
     166: aload_3
     167: invokevirtual #557                // Method io/micrometer/core/instrument/Meter$Id.syntheticAssociation:()Lio/micrometer/core/instrument/Meter$Id;
     170: astore        8
     172: aload         8
     174: ifnull        219
     177: aload_0
     178: getfield      #104                // Field syntheticAssociations:Lio/micrometer/shaded/org/pcollections/PMap;
     181: aload         8
     183: invokestatic  #590                // Method io/micrometer/shaded/org/pcollections/HashTreePSet.empty:()Lio/micrometer/shaded/org/pcollections/MapPSet;
     186: invokeinterface #593,  3          // InterfaceMethod io/micrometer/shaded/org/pcollections/PMap.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     191: checkcast     #595                // class io/micrometer/shaded/org/pcollections/PSet
     194: astore        9
     196: aload_0
     197: aload_0
     198: getfield      #104                // Field syntheticAssociations:Lio/micrometer/shaded/org/pcollections/PMap;
     201: aload         8
     203: aload         9
     205: aload_3
     206: invokeinterface #599,  2          // InterfaceMethod io/micrometer/shaded/org/pcollections/PSet.plus:(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSet;
     211: invokeinterface #602,  3          // InterfaceMethod io/micrometer/shaded/org/pcollections/PMap.plus:(Ljava/lang/Object;Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PMap;
     216: putfield      #104                // Field syntheticAssociations:Lio/micrometer/shaded/org/pcollections/PMap;
     219: aload_0
     220: getfield      #84                 // Field meterAddedListeners:Ljava/util/List;
     223: invokeinterface #608,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     228: astore        9
     230: aload         9
     232: invokeinterface #613,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     237: ifeq          264
     240: aload         9
     242: invokeinterface #617,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     247: checkcast     #619                // class java/util/function/Consumer
     250: astore        10
     252: aload         10
     254: aload         6
     256: invokeinterface #622,  2          // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
     261: goto          230
     264: aload_0
     265: aload_0
     266: getfield      #102                // Field meterMap:Lio/micrometer/shaded/org/pcollections/PMap;
     269: aload         4
     271: aload         6
     273: invokeinterface #602,  3          // InterfaceMethod io/micrometer/shaded/org/pcollections/PMap.plus:(Ljava/lang/Object;Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PMap;
     278: putfield      #102                // Field meterMap:Lio/micrometer/shaded/org/pcollections/PMap;
     281: aload         7
     283: monitorexit
     284: goto          295
     287: astore        13
     289: aload         7
     291: monitorexit
     292: aload         13
     294: athrow
     295: aload         6
     297: areturn
    Exception table:
       from    to  target type
          49    93   287   any
          94   284   287   any
         287   292   287   any

  private boolean accept(io.micrometer.core.instrument.Meter$Id);
    Code:
       0: aload_0
       1: getfield      #79                 // Field filters:[Lio/micrometer/core/instrument/config/MeterFilter;
       4: astore_2
       5: aload_2
       6: arraylength
       7: istore_3
       8: iconst_0
       9: istore        4
      11: iload         4
      13: iload_3
      14: if_icmpge     59
      17: aload_2
      18: iload         4
      20: aaload
      21: astore        5
      23: aload         5
      25: aload_1
      26: invokeinterface #637,  2          // InterfaceMethod io/micrometer/core/instrument/config/MeterFilter.accept:(Lio/micrometer/core/instrument/Meter$Id;)Lio/micrometer/core/instrument/config/MeterFilterReply;
      31: astore        6
      33: aload         6
      35: getstatic     #643                // Field io/micrometer/core/instrument/config/MeterFilterReply.DENY:Lio/micrometer/core/instrument/config/MeterFilterReply;
      38: if_acmpne     43
      41: iconst_0
      42: ireturn
      43: aload         6
      45: getstatic     #646                // Field io/micrometer/core/instrument/config/MeterFilterReply.ACCEPT:Lio/micrometer/core/instrument/config/MeterFilterReply;
      48: if_acmpne     53
      51: iconst_1
      52: ireturn
      53: iinc          4, 1
      56: goto          11
      59: iconst_1
      60: ireturn

  public io.micrometer.core.instrument.Meter remove(io.micrometer.core.instrument.Meter);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #655,  1          // InterfaceMethod io/micrometer/core/instrument/Meter.getId:()Lio/micrometer/core/instrument/Meter$Id;
       7: invokevirtual #657                // Method remove:(Lio/micrometer/core/instrument/Meter$Id;)Lio/micrometer/core/instrument/Meter;
      10: areturn

  public io.micrometer.core.instrument.Meter remove(io.micrometer.core.instrument.Meter$Id);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #528                // Method getMappedId:(Lio/micrometer/core/instrument/Meter$Id;)Lio/micrometer/core/instrument/Meter$Id;
       5: astore_2
       6: aload_0
       7: getfield      #102                // Field meterMap:Lio/micrometer/shaded/org/pcollections/PMap;
      10: aload_2
      11: invokeinterface #565,  2          // InterfaceMethod io/micrometer/shaded/org/pcollections/PMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #17                 // class io/micrometer/core/instrument/Meter
      19: astore_3
      20: aload_3
      21: ifnull        196
      24: aload_0
      25: getfield      #75                 // Field meterMapLock:Ljava/lang/Object;
      28: dup
      29: astore        4
      31: monitorenter
      32: aload_0
      33: getfield      #102                // Field meterMap:Lio/micrometer/shaded/org/pcollections/PMap;
      36: aload_2
      37: invokeinterface #565,  2          // InterfaceMethod io/micrometer/shaded/org/pcollections/PMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      42: checkcast     #17                 // class io/micrometer/core/instrument/Meter
      45: astore_3
      46: aload_3
      47: ifnull        182
      50: aload_0
      51: aload_0
      52: getfield      #102                // Field meterMap:Lio/micrometer/shaded/org/pcollections/PMap;
      55: aload_2
      56: invokeinterface #662,  2          // InterfaceMethod io/micrometer/shaded/org/pcollections/PMap.minus:(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PMap;
      61: putfield      #102                // Field meterMap:Lio/micrometer/shaded/org/pcollections/PMap;
      64: aload_0
      65: getfield      #104                // Field syntheticAssociations:Lio/micrometer/shaded/org/pcollections/PMap;
      68: aload_1
      69: invokestatic  #590                // Method io/micrometer/shaded/org/pcollections/HashTreePSet.empty:()Lio/micrometer/shaded/org/pcollections/MapPSet;
      72: invokeinterface #593,  3          // InterfaceMethod io/micrometer/shaded/org/pcollections/PMap.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      77: checkcast     #595                // class io/micrometer/shaded/org/pcollections/PSet
      80: invokeinterface #663,  1          // InterfaceMethod io/micrometer/shaded/org/pcollections/PSet.iterator:()Ljava/util/Iterator;
      85: astore        5
      87: aload         5
      89: invokeinterface #613,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      94: ifeq          119
      97: aload         5
      99: invokeinterface #617,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     104: checkcast     #15                 // class io/micrometer/core/instrument/Meter$Id
     107: astore        6
     109: aload_0
     110: aload         6
     112: invokevirtual #657                // Method remove:(Lio/micrometer/core/instrument/Meter$Id;)Lio/micrometer/core/instrument/Meter;
     115: pop
     116: goto          87
     119: aload_0
     120: aload_0
     121: getfield      #104                // Field syntheticAssociations:Lio/micrometer/shaded/org/pcollections/PMap;
     124: aload_1
     125: invokeinterface #662,  2          // InterfaceMethod io/micrometer/shaded/org/pcollections/PMap.minus:(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PMap;
     130: putfield      #104                // Field syntheticAssociations:Lio/micrometer/shaded/org/pcollections/PMap;
     133: aload_0
     134: getfield      #86                 // Field meterRemovedListeners:Ljava/util/List;
     137: invokeinterface #608,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     142: astore        5
     144: aload         5
     146: invokeinterface #613,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     151: ifeq          177
     154: aload         5
     156: invokeinterface #617,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     161: checkcast     #619                // class java/util/function/Consumer
     164: astore        6
     166: aload         6
     168: aload_3
     169: invokeinterface #622,  2          // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
     174: goto          144
     177: aload_3
     178: aload         4
     180: monitorexit
     181: areturn
     182: aload         4
     184: monitorexit
     185: goto          196
     188: astore        7
     190: aload         4
     192: monitorexit
     193: aload         7
     195: athrow
     196: aconst_null
     197: areturn
    Exception table:
       from    to  target type
          32   181   188   any
         182   185   188   any
         188   193   188   any

  public void close();
    Code:
       0: aload_0
       1: getfield      #111                // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #670                // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          74
      12: aload_0
      13: getfield      #75                 // Field meterMapLock:Ljava/lang/Object;
      16: dup
      17: astore_1
      18: monitorenter
      19: aload_0
      20: getfield      #102                // Field meterMap:Lio/micrometer/shaded/org/pcollections/PMap;
      23: invokeinterface #349,  1          // InterfaceMethod io/micrometer/shaded/org/pcollections/PMap.values:()Ljava/util/Collection;
      28: invokeinterface #671,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      33: astore_2
      34: aload_2
      35: invokeinterface #613,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          62
      43: aload_2
      44: invokeinterface #617,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #17                 // class io/micrometer/core/instrument/Meter
      52: astore_3
      53: aload_3
      54: invokeinterface #673,  1          // InterfaceMethod io/micrometer/core/instrument/Meter.close:()V
      59: goto          34
      62: aload_1
      63: monitorexit
      64: goto          74
      67: astore        4
      69: aload_1
      70: monitorexit
      71: aload         4
      73: athrow
      74: return
    Exception table:
       from    to  target type
          19    64    67   any
          67    71    67   any

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #111                // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #675                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  private static io.micrometer.core.instrument.Meter lambda$registerMeterIfNecessary$5(java.util.function.Function, io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.distribution.DistributionStatisticConfig);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #573,  2          // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #17                 // class io/micrometer/core/instrument/Meter
      10: areturn

  private io.micrometer.core.instrument.Meter lambda$register$4(io.micrometer.core.instrument.Meter$Type, java.lang.Iterable, io.micrometer.core.instrument.Meter$Id);
    Code:
       0: aload_0
       1: aload_3
       2: aload_1
       3: aload_2
       4: invokevirtual #679                // Method newMeter:(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Meter;
       7: areturn

  private io.micrometer.core.instrument.DistributionSummary lambda$summary$3(double, io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.distribution.DistributionStatisticConfig);
    Code:
       0: aload_0
       1: aload_3
       2: aload         4
       4: aload_0
       5: invokevirtual #681                // Method defaultHistogramConfig:()Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
       8: invokevirtual #687                // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.merge:(Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
      11: dload_1
      12: invokevirtual #689                // Method newDistributionSummary:(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;D)Lio/micrometer/core/instrument/DistributionSummary;
      15: areturn

  private io.micrometer.core.instrument.Timer lambda$timer$2(io.micrometer.core.instrument.distribution.pause.PauseDetector, io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.distribution.DistributionStatisticConfig);
    Code:
       0: aload_2
       1: aload_0
       2: invokespecial #155                // Method getBaseTimeUnitStr:()Ljava/lang/String;
       5: invokevirtual #159                // Method io/micrometer/core/instrument/Meter$Id.withBaseUnit:(Ljava/lang/String;)Lio/micrometer/core/instrument/Meter$Id;
       8: astore        4
      10: aload_0
      11: aload         4
      13: aload_3
      14: aload_0
      15: invokevirtual #681                // Method defaultHistogramConfig:()Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
      18: invokevirtual #687                // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.merge:(Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
      21: aload_1
      22: invokevirtual #691                // Method newTimer:(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Lio/micrometer/core/instrument/distribution/pause/PauseDetector;)Lio/micrometer/core/instrument/Timer;
      25: areturn

  private io.micrometer.core.instrument.Gauge lambda$gauge$1(java.lang.Object, java.util.function.ToDoubleFunction, io.micrometer.core.instrument.Meter$Id);
    Code:
       0: aload_0
       1: aload_3
       2: aload_1
       3: aload_2
       4: invokevirtual #179                // Method newGauge:(Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge;
       7: areturn

  private double lambda$newTimeGauge$0(java.util.function.ToDoubleFunction, java.util.concurrent.TimeUnit, java.lang.Object);
    Code:
       0: aload_1
       1: aload_3
       2: invokeinterface #695,  2          // InterfaceMethod java/util/function/ToDoubleFunction.applyAsDouble:(Ljava/lang/Object;)D
       7: aload_2
       8: aload_0
       9: invokevirtual #223                // Method getBaseTimeUnit:()Ljava/util/concurrent/TimeUnit;
      12: invokestatic  #701                // Method io/micrometer/core/instrument/util/TimeUtils.convert:(DLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/TimeUnit;)D
      15: dreturn

  static io.micrometer.core.instrument.config.MeterFilter[] access$000(io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: aload_0
       1: getfield      #79                 // Field filters:[Lio/micrometer/core/instrument/config/MeterFilter;
       4: areturn

  static io.micrometer.core.instrument.config.MeterFilter[] access$002(io.micrometer.core.instrument.MeterRegistry, io.micrometer.core.instrument.config.MeterFilter[]);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #79                 // Field filters:[Lio/micrometer/core/instrument/config/MeterFilter;
       6: areturn

  static java.util.List access$100(io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: aload_0
       1: getfield      #84                 // Field meterAddedListeners:Ljava/util/List;
       4: areturn

  static java.util.List access$200(io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: aload_0
       1: getfield      #86                 // Field meterRemovedListeners:Ljava/util/List;
       4: areturn

  static io.micrometer.core.instrument.config.NamingConvention access$302(io.micrometer.core.instrument.MeterRegistry, io.micrometer.core.instrument.config.NamingConvention);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #123                // Field namingConvention:Lio/micrometer/core/instrument/config/NamingConvention;
       6: areturn

  static io.micrometer.core.instrument.config.NamingConvention access$300(io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: aload_0
       1: getfield      #123                // Field namingConvention:Lio/micrometer/core/instrument/config/NamingConvention;
       4: areturn

  static io.micrometer.core.instrument.distribution.pause.PauseDetector access$402(io.micrometer.core.instrument.MeterRegistry, io.micrometer.core.instrument.distribution.pause.PauseDetector);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #116                // Field pauseDetector:Lio/micrometer/core/instrument/distribution/pause/PauseDetector;
       6: areturn

  static io.micrometer.core.instrument.distribution.pause.PauseDetector access$400(io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: aload_0
       1: getfield      #116                // Field pauseDetector:Lio/micrometer/core/instrument/distribution/pause/PauseDetector;
       4: areturn

  static io.micrometer.core.instrument.Meter access$500(io.micrometer.core.instrument.MeterRegistry, java.lang.Class, io.micrometer.core.instrument.Meter$Id, java.util.function.Function, java.util.function.Function);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #256                // Method registerMeterIfNecessary:(Ljava/lang/Class;Lio/micrometer/core/instrument/Meter$Id;Ljava/util/function/Function;Ljava/util/function/Function;)Lio/micrometer/core/instrument/Meter;
       9: areturn

  static java.lang.String access$600(io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: aload_0
       1: invokespecial #155                // Method getBaseTimeUnitStr:()Ljava/lang/String;
       4: areturn
}
