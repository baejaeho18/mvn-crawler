Compiled from "DistributionStatisticConfig.java"
public class io.micrometer.core.instrument.distribution.DistributionStatisticConfig implements io.micrometer.core.instrument.internal.Mergeable<io.micrometer.core.instrument.distribution.DistributionStatisticConfig> {
  public static final io.micrometer.core.instrument.distribution.DistributionStatisticConfig DEFAULT;

  public static final io.micrometer.core.instrument.distribution.DistributionStatisticConfig NONE;

  private java.lang.Boolean percentileHistogram;

  private double[] percentiles;

  private java.lang.Integer percentilePrecision;

  private long[] sla;

  private java.lang.Long minimumExpectedValue;

  private java.lang.Long maximumExpectedValue;

  private java.time.Duration expiry;

  private java.lang.Integer bufferLength;

  public io.micrometer.core.instrument.distribution.DistributionStatisticConfig();
    Code:
       0: aload_0
       1: invokespecial #33                 // Method java/lang/Object."<init>":()V
       4: return

  public static io.micrometer.core.instrument.distribution.DistributionStatisticConfig$Builder builder();
    Code:
       0: new           #10                 // class io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder
       3: dup
       4: invokespecial #37                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder."<init>":()V
       7: areturn

  public io.micrometer.core.instrument.distribution.DistributionStatisticConfig merge(io.micrometer.core.instrument.distribution.DistributionStatisticConfig);
    Code:
       0: invokestatic  #41                 // Method builder:()Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
       3: aload_0
       4: getfield      #43                 // Field percentileHistogram:Ljava/lang/Boolean;
       7: ifnonnull     17
      10: aload_1
      11: getfield      #43                 // Field percentileHistogram:Ljava/lang/Boolean;
      14: goto          21
      17: aload_0
      18: getfield      #43                 // Field percentileHistogram:Ljava/lang/Boolean;
      21: invokevirtual #49                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.percentilesHistogram:(Ljava/lang/Boolean;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
      24: aload_0
      25: getfield      #51                 // Field percentiles:[D
      28: ifnonnull     38
      31: aload_1
      32: getfield      #51                 // Field percentiles:[D
      35: goto          42
      38: aload_0
      39: getfield      #51                 // Field percentiles:[D
      42: invokevirtual #55                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.percentiles:([D)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
      45: aload_0
      46: getfield      #57                 // Field sla:[J
      49: ifnonnull     59
      52: aload_1
      53: getfield      #57                 // Field sla:[J
      56: goto          63
      59: aload_0
      60: getfield      #57                 // Field sla:[J
      63: invokevirtual #61                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.sla:([J)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
      66: aload_0
      67: getfield      #63                 // Field percentilePrecision:Ljava/lang/Integer;
      70: ifnonnull     80
      73: aload_1
      74: getfield      #63                 // Field percentilePrecision:Ljava/lang/Integer;
      77: goto          84
      80: aload_0
      81: getfield      #63                 // Field percentilePrecision:Ljava/lang/Integer;
      84: invokevirtual #68                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.percentilePrecision:(Ljava/lang/Integer;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
      87: aload_0
      88: getfield      #70                 // Field minimumExpectedValue:Ljava/lang/Long;
      91: ifnonnull     101
      94: aload_1
      95: getfield      #70                 // Field minimumExpectedValue:Ljava/lang/Long;
      98: goto          105
     101: aload_0
     102: getfield      #70                 // Field minimumExpectedValue:Ljava/lang/Long;
     105: invokevirtual #75                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.minimumExpectedValue:(Ljava/lang/Long;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
     108: aload_0
     109: getfield      #77                 // Field maximumExpectedValue:Ljava/lang/Long;
     112: ifnonnull     122
     115: aload_1
     116: getfield      #77                 // Field maximumExpectedValue:Ljava/lang/Long;
     119: goto          126
     122: aload_0
     123: getfield      #77                 // Field maximumExpectedValue:Ljava/lang/Long;
     126: invokevirtual #79                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.maximumExpectedValue:(Ljava/lang/Long;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
     129: aload_0
     130: getfield      #81                 // Field expiry:Ljava/time/Duration;
     133: ifnonnull     143
     136: aload_1
     137: getfield      #81                 // Field expiry:Ljava/time/Duration;
     140: goto          147
     143: aload_0
     144: getfield      #81                 // Field expiry:Ljava/time/Duration;
     147: invokevirtual #86                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.expiry:(Ljava/time/Duration;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
     150: aload_0
     151: getfield      #88                 // Field bufferLength:Ljava/lang/Integer;
     154: ifnonnull     164
     157: aload_1
     158: getfield      #88                 // Field bufferLength:Ljava/lang/Integer;
     161: goto          168
     164: aload_0
     165: getfield      #88                 // Field bufferLength:Ljava/lang/Integer;
     168: invokevirtual #90                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.bufferLength:(Ljava/lang/Integer;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
     171: invokevirtual #94                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.build:()Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
     174: areturn

  public java.util.NavigableSet<java.lang.Long> getHistogramBuckets(boolean);
    Code:
       0: new           #100                // class java/util/TreeSet
       3: dup
       4: invokespecial #101                // Method java/util/TreeSet."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #43                 // Field percentileHistogram:Ljava/lang/Boolean;
      12: ifnull        62
      15: aload_0
      16: getfield      #43                 // Field percentileHistogram:Ljava/lang/Boolean;
      19: invokevirtual #105                // Method java/lang/Boolean.booleanValue:()Z
      22: ifeq          62
      25: iload_1
      26: ifeq          62
      29: aload_2
      30: aload_0
      31: invokestatic  #111                // Method io/micrometer/core/instrument/distribution/PercentileHistogramBuckets.buckets:(Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;)Ljava/util/NavigableSet;
      34: invokeinterface #117,  2          // InterfaceMethod java/util/NavigableSet.addAll:(Ljava/util/Collection;)Z
      39: pop
      40: aload_2
      41: aload_0
      42: getfield      #70                 // Field minimumExpectedValue:Ljava/lang/Long;
      45: invokeinterface #121,  2          // InterfaceMethod java/util/NavigableSet.add:(Ljava/lang/Object;)Z
      50: pop
      51: aload_2
      52: aload_0
      53: getfield      #77                 // Field maximumExpectedValue:Ljava/lang/Long;
      56: invokeinterface #121,  2          // InterfaceMethod java/util/NavigableSet.add:(Ljava/lang/Object;)Z
      61: pop
      62: aload_0
      63: getfield      #57                 // Field sla:[J
      66: ifnull        112
      69: aload_0
      70: getfield      #57                 // Field sla:[J
      73: astore_3
      74: aload_3
      75: arraylength
      76: istore        4
      78: iconst_0
      79: istore        5
      81: iload         5
      83: iload         4
      85: if_icmpge     112
      88: aload_3
      89: iload         5
      91: laload
      92: lstore        6
      94: aload_2
      95: lload         6
      97: invokestatic  #125                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     100: invokeinterface #121,  2          // InterfaceMethod java/util/NavigableSet.add:(Ljava/lang/Object;)Z
     105: pop
     106: iinc          5, 1
     109: goto          81
     112: aload_2
     113: areturn

  public java.lang.Boolean isPercentileHistogram();
    Code:
       0: aload_0
       1: getfield      #43                 // Field percentileHistogram:Ljava/lang/Boolean;
       4: areturn

  public double[] getPercentiles();
    Code:
       0: aload_0
       1: getfield      #51                 // Field percentiles:[D
       4: areturn

  public java.lang.Integer getPercentilePrecision();
    Code:
       0: aload_0
       1: getfield      #63                 // Field percentilePrecision:Ljava/lang/Integer;
       4: areturn

  public java.lang.Long getMinimumExpectedValue();
    Code:
       0: aload_0
       1: getfield      #70                 // Field minimumExpectedValue:Ljava/lang/Long;
       4: areturn

  public java.lang.Long getMaximumExpectedValue();
    Code:
       0: aload_0
       1: getfield      #77                 // Field maximumExpectedValue:Ljava/lang/Long;
       4: areturn

  public java.time.Duration getExpiry();
    Code:
       0: aload_0
       1: getfield      #81                 // Field expiry:Ljava/time/Duration;
       4: areturn

  public java.lang.Integer getBufferLength();
    Code:
       0: aload_0
       1: getfield      #88                 // Field bufferLength:Ljava/lang/Integer;
       4: areturn

  public long[] getSlaBoundaries();
    Code:
       0: aload_0
       1: getfield      #57                 // Field sla:[J
       4: areturn

  public boolean isPublishingPercentiles();
    Code:
       0: aload_0
       1: getfield      #51                 // Field percentiles:[D
       4: ifnull        19
       7: aload_0
       8: getfield      #51                 // Field percentiles:[D
      11: arraylength
      12: ifle          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public boolean isPublishingHistogram();
    Code:
       0: aload_0
       1: getfield      #43                 // Field percentileHistogram:Ljava/lang/Boolean;
       4: ifnull        17
       7: aload_0
       8: getfield      #43                 // Field percentileHistogram:Ljava/lang/Boolean;
      11: invokevirtual #105                // Method java/lang/Boolean.booleanValue:()Z
      14: ifne          32
      17: aload_0
      18: getfield      #57                 // Field sla:[J
      21: ifnull        36
      24: aload_0
      25: getfield      #57                 // Field sla:[J
      28: arraylength
      29: ifle          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn

  public java.lang.Object merge(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class io/micrometer/core/instrument/distribution/DistributionStatisticConfig
       5: invokevirtual #150                // Method merge:(Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
       8: areturn

  static java.lang.Boolean access$002(io.micrometer.core.instrument.distribution.DistributionStatisticConfig, java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #43                 // Field percentileHistogram:Ljava/lang/Boolean;
       6: areturn

  static double[] access$102(io.micrometer.core.instrument.distribution.DistributionStatisticConfig, double[]);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #51                 // Field percentiles:[D
       6: areturn

  static java.lang.Integer access$202(io.micrometer.core.instrument.distribution.DistributionStatisticConfig, java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #63                 // Field percentilePrecision:Ljava/lang/Integer;
       6: areturn

  static long[] access$302(io.micrometer.core.instrument.distribution.DistributionStatisticConfig, long[]);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #57                 // Field sla:[J
       6: areturn

  static java.lang.Long access$402(io.micrometer.core.instrument.distribution.DistributionStatisticConfig, java.lang.Long);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #70                 // Field minimumExpectedValue:Ljava/lang/Long;
       6: areturn

  static java.lang.Long access$502(io.micrometer.core.instrument.distribution.DistributionStatisticConfig, java.lang.Long);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #77                 // Field maximumExpectedValue:Ljava/lang/Long;
       6: areturn

  static java.time.Duration access$602(io.micrometer.core.instrument.distribution.DistributionStatisticConfig, java.time.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #81                 // Field expiry:Ljava/time/Duration;
       6: areturn

  static java.lang.Integer access$702(io.micrometer.core.instrument.distribution.DistributionStatisticConfig, java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #88                 // Field bufferLength:Ljava/lang/Integer;
       6: areturn

  static {};
    Code:
       0: invokestatic  #41                 // Method builder:()Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
       3: iconst_0
       4: invokestatic  #170                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #49                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.percentilesHistogram:(Ljava/lang/Boolean;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
      10: iconst_1
      11: invokestatic  #173                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      14: invokevirtual #68                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.percentilePrecision:(Ljava/lang/Integer;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
      17: lconst_1
      18: invokestatic  #125                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      21: invokevirtual #75                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.minimumExpectedValue:(Ljava/lang/Long;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
      24: ldc2_w        #174                // long 9223372036854775807l
      27: invokestatic  #125                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      30: invokevirtual #79                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.maximumExpectedValue:(Ljava/lang/Long;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
      33: ldc2_w        #176                // long 2l
      36: invokestatic  #181                // Method java/time/Duration.ofMinutes:(J)Ljava/time/Duration;
      39: invokevirtual #86                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.expiry:(Ljava/time/Duration;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
      42: iconst_3
      43: invokestatic  #173                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      46: invokevirtual #90                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.bufferLength:(Ljava/lang/Integer;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
      49: invokevirtual #94                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.build:()Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
      52: putstatic     #183                // Field DEFAULT:Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
      55: invokestatic  #41                 // Method builder:()Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
      58: invokevirtual #94                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.build:()Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
      61: putstatic     #185                // Field NONE:Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
      64: return
}
