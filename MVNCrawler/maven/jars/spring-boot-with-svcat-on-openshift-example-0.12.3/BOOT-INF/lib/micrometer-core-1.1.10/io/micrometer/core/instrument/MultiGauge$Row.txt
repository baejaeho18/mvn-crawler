Compiled from "MultiGauge.java"
public class io.micrometer.core.instrument.MultiGauge$Row<T> {
  private final io.micrometer.core.instrument.Tags uniqueTags;

  private final T obj;

  private final java.util.function.ToDoubleFunction<T> valueFunction;

  private io.micrometer.core.instrument.MultiGauge$Row(io.micrometer.core.instrument.Tags, T, java.util.function.ToDoubleFunction<T>);
    Code:
       0: aload_0
       1: invokespecial #28                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #30                 // Field uniqueTags:Lio/micrometer/core/instrument/Tags;
       9: aload_0
      10: aload_2
      11: putfield      #32                 // Field obj:Ljava/lang/Object;
      14: aload_0
      15: aload_3
      16: putfield      #34                 // Field valueFunction:Ljava/util/function/ToDoubleFunction;
      19: return

  public static <T> io.micrometer.core.instrument.MultiGauge$Row<T> of(io.micrometer.core.instrument.Tags, T, java.util.function.ToDoubleFunction<T>);
    Code:
       0: new           #2                  // class io/micrometer/core/instrument/MultiGauge$Row
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #42                 // Method "<init>":(Lio/micrometer/core/instrument/Tags;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)V
      10: areturn

  public static io.micrometer.core.instrument.MultiGauge$Row<java.lang.Number> of(io.micrometer.core.instrument.Tags, java.lang.Number);
    Code:
       0: new           #2                  // class io/micrometer/core/instrument/MultiGauge$Row
       3: dup
       4: aload_0
       5: aload_1
       6: invokedynamic #66,  0             // InvokeDynamic #0:applyAsDouble:()Ljava/util/function/ToDoubleFunction;
      11: invokespecial #42                 // Method "<init>":(Lio/micrometer/core/instrument/Tags;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)V
      14: areturn

  public static io.micrometer.core.instrument.MultiGauge$Row<java.util.function.Supplier<java.lang.Number>> of(io.micrometer.core.instrument.Tags, java.util.function.Supplier<java.lang.Number>);
    Code:
       0: new           #2                  // class io/micrometer/core/instrument/MultiGauge$Row
       3: dup
       4: aload_0
       5: aload_1
       6: aload_1
       7: invokedynamic #80,  0             // InvokeDynamic #1:applyAsDouble:(Ljava/util/function/Supplier;)Ljava/util/function/ToDoubleFunction;
      12: invokespecial #42                 // Method "<init>":(Lio/micrometer/core/instrument/Tags;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)V
      15: areturn

  private static double lambda$of$0(java.util.function.Supplier, java.util.function.Supplier);
    Code:
       0: aload_0
       1: invokeinterface #88,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
       6: checkcast     #55                 // class java/lang/Number
       9: astore_2
      10: aload_2
      11: ifnonnull     20
      14: ldc2_w        #89                 // double NaNd
      17: goto          24
      20: aload_2
      21: invokevirtual #59                 // Method java/lang/Number.doubleValue:()D
      24: dreturn

  static io.micrometer.core.instrument.Tags access$200(io.micrometer.core.instrument.MultiGauge$Row);
    Code:
       0: aload_0
       1: getfield      #30                 // Field uniqueTags:Lio/micrometer/core/instrument/Tags;
       4: areturn

  static java.lang.Object access$300(io.micrometer.core.instrument.MultiGauge$Row);
    Code:
       0: aload_0
       1: getfield      #32                 // Field obj:Ljava/lang/Object;
       4: areturn

  static java.util.function.ToDoubleFunction access$400(io.micrometer.core.instrument.MultiGauge$Row);
    Code:
       0: aload_0
       1: getfield      #34                 // Field valueFunction:Ljava/util/function/ToDoubleFunction;
       4: areturn
}
