Compiled from "DefaultLongTaskTimer.java"
public class io.micrometer.core.instrument.internal.DefaultLongTaskTimer extends io.micrometer.core.instrument.AbstractMeter implements io.micrometer.core.instrument.LongTaskTimer {
  private final java.util.concurrent.ConcurrentMap<java.lang.Long, java.lang.Long> tasks;

  private final java.util.concurrent.atomic.AtomicLong nextTask;

  private final io.micrometer.core.instrument.Clock clock;

  public io.micrometer.core.instrument.internal.DefaultLongTaskTimer(io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.Clock);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #27                 // Method io/micrometer/core/instrument/AbstractMeter."<init>":(Lio/micrometer/core/instrument/Meter$Id;)V
       5: aload_0
       6: new           #29                 // class java/util/concurrent/ConcurrentHashMap
       9: dup
      10: invokespecial #32                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      13: putfield      #34                 // Field tasks:Ljava/util/concurrent/ConcurrentMap;
      16: aload_0
      17: new           #36                 // class java/util/concurrent/atomic/AtomicLong
      20: dup
      21: lconst_0
      22: invokespecial #39                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      25: putfield      #41                 // Field nextTask:Ljava/util/concurrent/atomic/AtomicLong;
      28: aload_0
      29: aload_2
      30: putfield      #43                 // Field clock:Lio/micrometer/core/instrument/Clock;
      33: return

  public io.micrometer.core.instrument.LongTaskTimer$Sample start();
    Code:
       0: aload_0
       1: getfield      #41                 // Field nextTask:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #53                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
       7: lstore_1
       8: aload_0
       9: getfield      #34                 // Field tasks:Ljava/util/concurrent/ConcurrentMap;
      12: lload_1
      13: invokestatic  #59                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      16: aload_0
      17: getfield      #43                 // Field clock:Lio/micrometer/core/instrument/Clock;
      20: invokeinterface #64,  1           // InterfaceMethod io/micrometer/core/instrument/Clock.monotonicTime:()J
      25: invokestatic  #59                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      28: invokeinterface #70,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      33: pop
      34: new           #14                 // class io/micrometer/core/instrument/LongTaskTimer$Sample
      37: dup
      38: aload_0
      39: lload_1
      40: invokespecial #73                 // Method io/micrometer/core/instrument/LongTaskTimer$Sample."<init>":(Lio/micrometer/core/instrument/LongTaskTimer;J)V
      43: areturn

  public long stop(long);
    Code:
       0: aload_0
       1: getfield      #34                 // Field tasks:Ljava/util/concurrent/ConcurrentMap;
       4: lload_1
       5: invokestatic  #59                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       8: invokeinterface #81,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #55                 // class java/lang/Long
      16: astore_3
      17: aload_3
      18: ifnull        50
      21: aload_0
      22: getfield      #34                 // Field tasks:Ljava/util/concurrent/ConcurrentMap;
      25: lload_1
      26: invokestatic  #59                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      29: invokeinterface #84,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: aload_0
      36: getfield      #43                 // Field clock:Lio/micrometer/core/instrument/Clock;
      39: invokeinterface #64,  1           // InterfaceMethod io/micrometer/core/instrument/Clock.monotonicTime:()J
      44: aload_3
      45: invokevirtual #87                 // Method java/lang/Long.longValue:()J
      48: lsub
      49: lreturn
      50: ldc2_w        #88                 // long -1l
      53: lreturn

  public double duration(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #34                 // Field tasks:Ljava/util/concurrent/ConcurrentMap;
       4: lload_1
       5: invokestatic  #59                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       8: invokeinterface #81,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #55                 // class java/lang/Long
      16: astore        4
      18: aload         4
      20: ifnull        46
      23: aload_0
      24: getfield      #43                 // Field clock:Lio/micrometer/core/instrument/Clock;
      27: invokeinterface #64,  1           // InterfaceMethod io/micrometer/core/instrument/Clock.monotonicTime:()J
      32: aload         4
      34: invokevirtual #87                 // Method java/lang/Long.longValue:()J
      37: lsub
      38: l2d
      39: aload_3
      40: invokestatic  #99                 // Method io/micrometer/core/instrument/util/TimeUtils.nanosToUnit:(DLjava/util/concurrent/TimeUnit;)D
      43: goto          49
      46: ldc2_w        #100                // double -1.0d
      49: dreturn

  public double duration(java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #43                 // Field clock:Lio/micrometer/core/instrument/Clock;
       4: invokeinterface #64,  1           // InterfaceMethod io/micrometer/core/instrument/Clock.monotonicTime:()J
       9: lstore_2
      10: lconst_0
      11: lstore        4
      13: aload_0
      14: getfield      #34                 // Field tasks:Ljava/util/concurrent/ConcurrentMap;
      17: invokeinterface #108,  1          // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      22: invokeinterface #114,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      27: astore        6
      29: aload         6
      31: invokeinterface #120,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          66
      39: aload         6
      41: invokeinterface #124,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: checkcast     #55                 // class java/lang/Long
      49: invokevirtual #87                 // Method java/lang/Long.longValue:()J
      52: lstore        7
      54: lload         4
      56: lload_2
      57: lload         7
      59: lsub
      60: ladd
      61: lstore        4
      63: goto          29
      66: lload         4
      68: l2d
      69: aload_1
      70: invokestatic  #99                 // Method io/micrometer/core/instrument/util/TimeUtils.nanosToUnit:(DLjava/util/concurrent/TimeUnit;)D
      73: dreturn

  public int activeTasks();
    Code:
       0: aload_0
       1: getfield      #34                 // Field tasks:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #131,  1          // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
       9: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #138                // Method io/micrometer/core/instrument/util/MeterEquivalence.equals:(Lio/micrometer/core/instrument/Meter;Ljava/lang/Object;)Z
       5: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #144                // Method io/micrometer/core/instrument/util/MeterEquivalence.hashCode:(Lio/micrometer/core/instrument/Meter;)I
       4: ireturn
}
