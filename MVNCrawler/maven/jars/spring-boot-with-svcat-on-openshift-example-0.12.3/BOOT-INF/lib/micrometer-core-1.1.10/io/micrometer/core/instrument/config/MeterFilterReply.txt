Compiled from "MeterFilterReply.java"
public final class io.micrometer.core.instrument.config.MeterFilterReply extends java.lang.Enum<io.micrometer.core.instrument.config.MeterFilterReply> {
  public static final io.micrometer.core.instrument.config.MeterFilterReply DENY;

  public static final io.micrometer.core.instrument.config.MeterFilterReply NEUTRAL;

  public static final io.micrometer.core.instrument.config.MeterFilterReply ACCEPT;

  private static final io.micrometer.core.instrument.config.MeterFilterReply[] $VALUES;

  public static io.micrometer.core.instrument.config.MeterFilterReply[] values();
    Code:
       0: getstatic     #16                 // Field $VALUES:[Lio/micrometer/core/instrument/config/MeterFilterReply;
       3: invokevirtual #21                 // Method "[Lio/micrometer/core/instrument/config/MeterFilterReply;".clone:()Ljava/lang/Object;
       6: checkcast     #17                 // class "[Lio/micrometer/core/instrument/config/MeterFilterReply;"
       9: areturn

  public static io.micrometer.core.instrument.config.MeterFilterReply valueOf(java.lang.String);
    Code:
       0: ldc           #2                  // class io/micrometer/core/instrument/config/MeterFilterReply
       2: aload_0
       3: invokestatic  #26                 // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #2                  // class io/micrometer/core/instrument/config/MeterFilterReply
       9: areturn

  private io.micrometer.core.instrument.config.MeterFilterReply();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #33                 // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  static {};
    Code:
       0: new           #2                  // class io/micrometer/core/instrument/config/MeterFilterReply
       3: dup
       4: ldc           #36                 // String DENY
       6: iconst_0
       7: invokespecial #37                 // Method "<init>":(Ljava/lang/String;I)V
      10: putstatic     #39                 // Field DENY:Lio/micrometer/core/instrument/config/MeterFilterReply;
      13: new           #2                  // class io/micrometer/core/instrument/config/MeterFilterReply
      16: dup
      17: ldc           #40                 // String NEUTRAL
      19: iconst_1
      20: invokespecial #37                 // Method "<init>":(Ljava/lang/String;I)V
      23: putstatic     #42                 // Field NEUTRAL:Lio/micrometer/core/instrument/config/MeterFilterReply;
      26: new           #2                  // class io/micrometer/core/instrument/config/MeterFilterReply
      29: dup
      30: ldc           #43                 // String ACCEPT
      32: iconst_2
      33: invokespecial #37                 // Method "<init>":(Ljava/lang/String;I)V
      36: putstatic     #45                 // Field ACCEPT:Lio/micrometer/core/instrument/config/MeterFilterReply;
      39: iconst_3
      40: anewarray     #2                  // class io/micrometer/core/instrument/config/MeterFilterReply
      43: dup
      44: iconst_0
      45: getstatic     #39                 // Field DENY:Lio/micrometer/core/instrument/config/MeterFilterReply;
      48: aastore
      49: dup
      50: iconst_1
      51: getstatic     #42                 // Field NEUTRAL:Lio/micrometer/core/instrument/config/MeterFilterReply;
      54: aastore
      55: dup
      56: iconst_2
      57: getstatic     #45                 // Field ACCEPT:Lio/micrometer/core/instrument/config/MeterFilterReply;
      60: aastore
      61: putstatic     #16                 // Field $VALUES:[Lio/micrometer/core/instrument/config/MeterFilterReply;
      64: return
}
