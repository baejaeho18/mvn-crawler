Compiled from "StepTimer.java"
public class io.micrometer.core.instrument.step.StepTimer extends io.micrometer.core.instrument.AbstractTimer {
  private final io.micrometer.core.instrument.step.StepLong count;

  private final io.micrometer.core.instrument.step.StepLong total;

  private final io.micrometer.core.instrument.distribution.TimeWindowMax max;

  public io.micrometer.core.instrument.step.StepTimer(io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.Clock, io.micrometer.core.instrument.distribution.DistributionStatisticConfig, io.micrometer.core.instrument.distribution.pause.PauseDetector, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iconst_0
       9: invokespecial #21                 // Method "<init>":(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Lio/micrometer/core/instrument/distribution/pause/PauseDetector;Ljava/util/concurrent/TimeUnit;Z)V
      12: return

  public io.micrometer.core.instrument.step.StepTimer(io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.Clock, io.micrometer.core.instrument.distribution.DistributionStatisticConfig, io.micrometer.core.instrument.distribution.pause.PauseDetector, java.util.concurrent.TimeUnit, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload_3
       9: invokevirtual #39                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.getExpiry:()Ljava/time/Duration;
      12: invokevirtual #45                 // Method java/time/Duration.toMillis:()J
      15: iload         6
      17: invokespecial #48                 // Method "<init>":(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Lio/micrometer/core/instrument/distribution/pause/PauseDetector;Ljava/util/concurrent/TimeUnit;JZ)V
      20: return

  public io.micrometer.core.instrument.step.StepTimer(io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.Clock, io.micrometer.core.instrument.distribution.DistributionStatisticConfig, io.micrometer.core.instrument.distribution.pause.PauseDetector, java.util.concurrent.TimeUnit, long, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iload         8
      10: invokespecial #51                 // Method io/micrometer/core/instrument/AbstractTimer."<init>":(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Lio/micrometer/core/instrument/distribution/pause/PauseDetector;Ljava/util/concurrent/TimeUnit;Z)V
      13: aload_0
      14: new           #53                 // class io/micrometer/core/instrument/step/StepLong
      17: dup
      18: aload_2
      19: lload         6
      21: invokespecial #56                 // Method io/micrometer/core/instrument/step/StepLong."<init>":(Lio/micrometer/core/instrument/Clock;J)V
      24: putfield      #58                 // Field count:Lio/micrometer/core/instrument/step/StepLong;
      27: aload_0
      28: new           #53                 // class io/micrometer/core/instrument/step/StepLong
      31: dup
      32: aload_2
      33: lload         6
      35: invokespecial #56                 // Method io/micrometer/core/instrument/step/StepLong."<init>":(Lio/micrometer/core/instrument/Clock;J)V
      38: putfield      #60                 // Field total:Lio/micrometer/core/instrument/step/StepLong;
      41: aload_0
      42: new           #62                 // class io/micrometer/core/instrument/distribution/TimeWindowMax
      45: dup
      46: aload_2
      47: aload_3
      48: invokespecial #65                 // Method io/micrometer/core/instrument/distribution/TimeWindowMax."<init>":(Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;)V
      51: putfield      #67                 // Field max:Lio/micrometer/core/instrument/distribution/TimeWindowMax;
      54: return

  protected void recordNonNegative(long, java.util.concurrent.TimeUnit);
    Code:
       0: lload_1
       1: l2d
       2: aload_3
       3: getstatic     #76                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
       6: invokestatic  #82                 // Method io/micrometer/core/instrument/util/TimeUtils.convert:(DLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/TimeUnit;)D
       9: d2l
      10: lstore        4
      12: aload_0
      13: getfield      #58                 // Field count:Lio/micrometer/core/instrument/step/StepLong;
      16: invokevirtual #86                 // Method io/micrometer/core/instrument/step/StepLong.getCurrent:()Ljava/util/concurrent/atomic/LongAdder;
      19: lconst_1
      20: invokevirtual #92                 // Method java/util/concurrent/atomic/LongAdder.add:(J)V
      23: aload_0
      24: getfield      #60                 // Field total:Lio/micrometer/core/instrument/step/StepLong;
      27: invokevirtual #86                 // Method io/micrometer/core/instrument/step/StepLong.getCurrent:()Ljava/util/concurrent/atomic/LongAdder;
      30: lload         4
      32: invokevirtual #92                 // Method java/util/concurrent/atomic/LongAdder.add:(J)V
      35: aload_0
      36: getfield      #67                 // Field max:Lio/micrometer/core/instrument/distribution/TimeWindowMax;
      39: lload_1
      40: l2d
      41: aload_3
      42: invokevirtual #96                 // Method io/micrometer/core/instrument/distribution/TimeWindowMax.record:(DLjava/util/concurrent/TimeUnit;)V
      45: return

  public long count();
    Code:
       0: aload_0
       1: getfield      #58                 // Field count:Lio/micrometer/core/instrument/step/StepLong;
       4: invokevirtual #103                // Method io/micrometer/core/instrument/step/StepLong.poll:()D
       7: d2l
       8: lreturn

  public double totalTime(java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #60                 // Field total:Lio/micrometer/core/instrument/step/StepLong;
       4: invokevirtual #103                // Method io/micrometer/core/instrument/step/StepLong.poll:()D
       7: aload_1
       8: invokestatic  #109                // Method io/micrometer/core/instrument/util/TimeUtils.nanosToUnit:(DLjava/util/concurrent/TimeUnit;)D
      11: dreturn

  public double max(java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #67                 // Field max:Lio/micrometer/core/instrument/distribution/TimeWindowMax;
       4: aload_1
       5: invokevirtual #111                // Method io/micrometer/core/instrument/distribution/TimeWindowMax.poll:(Ljava/util/concurrent/TimeUnit;)D
       8: dreturn
}
