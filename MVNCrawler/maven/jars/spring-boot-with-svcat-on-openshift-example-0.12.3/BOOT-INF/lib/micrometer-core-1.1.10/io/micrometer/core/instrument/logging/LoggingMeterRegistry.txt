Compiled from "LoggingMeterRegistry.java"
public class io.micrometer.core.instrument.logging.LoggingMeterRegistry extends io.micrometer.core.instrument.step.StepMeterRegistry {
  private static final io.micrometer.core.util.internal.logging.InternalLogger log;

  private final io.micrometer.core.instrument.logging.LoggingRegistryConfig config;

  private final java.util.function.Consumer<java.lang.String> loggingSink;

  public io.micrometer.core.instrument.logging.LoggingMeterRegistry();
    Code:
       0: aload_0
       1: getstatic     #48                 // Field io/micrometer/core/instrument/logging/LoggingRegistryConfig.DEFAULT:Lio/micrometer/core/instrument/logging/LoggingRegistryConfig;
       4: getstatic     #54                 // Field io/micrometer/core/instrument/Clock.SYSTEM:Lio/micrometer/core/instrument/Clock;
       7: invokespecial #57                 // Method "<init>":(Lio/micrometer/core/instrument/logging/LoggingRegistryConfig;Lio/micrometer/core/instrument/Clock;)V
      10: return

  public io.micrometer.core.instrument.logging.LoggingMeterRegistry(io.micrometer.core.instrument.logging.LoggingRegistryConfig, io.micrometer.core.instrument.Clock);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: new           #61                 // class io/micrometer/core/instrument/util/NamedThreadFactory
       6: dup
       7: ldc           #63                 // String logging-metrics-publisher
       9: invokespecial #66                 // Method io/micrometer/core/instrument/util/NamedThreadFactory."<init>":(Ljava/lang/String;)V
      12: getstatic     #68                 // Field log:Lio/micrometer/core/util/internal/logging/InternalLogger;
      15: dup
      16: invokevirtual #74                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: pop
      20: invokedynamic #94,  0             // InvokeDynamic #0:accept:(Lio/micrometer/core/util/internal/logging/InternalLogger;)Ljava/util/function/Consumer;
      25: invokespecial #97                 // Method "<init>":(Lio/micrometer/core/instrument/logging/LoggingRegistryConfig;Lio/micrometer/core/instrument/Clock;Ljava/util/concurrent/ThreadFactory;Ljava/util/function/Consumer;)V
      28: return

  private io.micrometer.core.instrument.logging.LoggingMeterRegistry(io.micrometer.core.instrument.logging.LoggingRegistryConfig, io.micrometer.core.instrument.Clock, java.util.concurrent.ThreadFactory, java.util.function.Consumer<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #102                // Method io/micrometer/core/instrument/step/StepMeterRegistry."<init>":(Lio/micrometer/core/instrument/step/StepRegistryConfig;Lio/micrometer/core/instrument/Clock;)V
       6: aload_0
       7: aload_1
       8: putfield      #104                // Field config:Lio/micrometer/core/instrument/logging/LoggingRegistryConfig;
      11: aload_0
      12: aload         4
      14: putfield      #106                // Field loggingSink:Ljava/util/function/Consumer;
      17: aload_0
      18: invokevirtual #109                // Method config:()Lio/micrometer/core/instrument/MeterRegistry$Config;
      21: getstatic     #115                // Field io/micrometer/core/instrument/config/NamingConvention.dot:Lio/micrometer/core/instrument/config/NamingConvention;
      24: invokevirtual #119                // Method io/micrometer/core/instrument/MeterRegistry$Config.namingConvention:(Lio/micrometer/core/instrument/config/NamingConvention;)Lio/micrometer/core/instrument/MeterRegistry$Config;
      27: pop
      28: aload_0
      29: aload_3
      30: invokevirtual #123                // Method start:(Ljava/util/concurrent/ThreadFactory;)V
      33: return

  public void start(java.util.concurrent.ThreadFactory);
    Code:
       0: aload_0
       1: getfield      #104                // Field config:Lio/micrometer/core/instrument/logging/LoggingRegistryConfig;
       4: invokeinterface #129,  1          // InterfaceMethod io/micrometer/core/instrument/logging/LoggingRegistryConfig.enabled:()Z
       9: ifeq          51
      12: aload_0
      13: getfield      #106                // Field loggingSink:Ljava/util/function/Consumer;
      16: new           #131                // class java/lang/StringBuilder
      19: dup
      20: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #135                // String publishing metrics to logs every
      25: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: getfield      #104                // Field config:Lio/micrometer/core/instrument/logging/LoggingRegistryConfig;
      32: invokeinterface #143,  1          // InterfaceMethod io/micrometer/core/instrument/logging/LoggingRegistryConfig.step:()Ljava/time/Duration;
      37: invokestatic  #149                // Method io/micrometer/core/instrument/util/TimeUtils.format:(Ljava/time/Duration;)Ljava/lang/String;
      40: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #153                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokeinterface #157,  2          // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      51: aload_0
      52: aload_1
      53: invokespecial #158                // Method io/micrometer/core/instrument/step/StepMeterRegistry.start:(Ljava/util/concurrent/ThreadFactory;)V
      56: return

  protected void publish();
    Code:
       0: aload_0
       1: getfield      #104                // Field config:Lio/micrometer/core/instrument/logging/LoggingRegistryConfig;
       4: invokeinterface #129,  1          // InterfaceMethod io/micrometer/core/instrument/logging/LoggingRegistryConfig.enabled:()Z
       9: ifeq          42
      12: aload_0
      13: invokevirtual #163                // Method getMeters:()Ljava/util/List;
      16: invokeinterface #169,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      21: invokedynamic #181,  0            // InvokeDynamic #1:compare:()Ljava/util/Comparator;
      26: invokeinterface #187,  2          // InterfaceMethod java/util/stream/Stream.sorted:(Ljava/util/Comparator;)Ljava/util/stream/Stream;
      31: aload_0
      32: invokedynamic #196,  0            // InvokeDynamic #2:accept:(Lio/micrometer/core/instrument/logging/LoggingMeterRegistry;)Ljava/util/function/Consumer;
      37: invokeinterface #200,  2          // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      42: return

  java.lang.String writeMeter(io.micrometer.core.instrument.Meter, io.micrometer.core.instrument.logging.LoggingMeterRegistry$Printer);
    Code:
       0: aload_1
       1: invokeinterface #206,  1          // InterfaceMethod io/micrometer/core/instrument/Meter.measure:()Ljava/lang/Iterable;
       6: invokeinterface #212,  1          // InterfaceMethod java/lang/Iterable.spliterator:()Ljava/util/Spliterator;
      11: iconst_0
      12: invokestatic  #217                // Method java/util/stream/StreamSupport.stream:(Ljava/util/Spliterator;Z)Ljava/util/stream/Stream;
      15: aload_2
      16: invokedynamic #230,  0            // InvokeDynamic #3:apply:(Lio/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer;)Ljava/util/function/Function;
      21: invokeinterface #234,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      26: ldc           #236                // String ,
      28: new           #131                // class java/lang/StringBuilder
      31: dup
      32: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
      35: aload_2
      36: invokevirtual #239                // Method io/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer.id:()Ljava/lang/String;
      39: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #241                // String
      44: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #153                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: ldc           #243                // String
      52: invokestatic  #249                // Method java/util/stream/Collectors.joining:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/util/stream/Collector;
      55: invokeinterface #253,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      60: checkcast     #255                // class java/lang/String
      63: areturn

  protected io.micrometer.core.instrument.Timer newTimer(io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.distribution.DistributionStatisticConfig, io.micrometer.core.instrument.distribution.pause.PauseDetector);
    Code:
       0: new           #263                // class io/micrometer/core/instrument/step/StepTimer
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #265                // Field clock:Lio/micrometer/core/instrument/Clock;
       9: aload_2
      10: aload_3
      11: aload_0
      12: invokevirtual #269                // Method getBaseTimeUnit:()Ljava/util/concurrent/TimeUnit;
      15: aload_0
      16: getfield      #104                // Field config:Lio/micrometer/core/instrument/logging/LoggingRegistryConfig;
      19: invokeinterface #143,  1          // InterfaceMethod io/micrometer/core/instrument/logging/LoggingRegistryConfig.step:()Ljava/time/Duration;
      24: invokevirtual #275                // Method java/time/Duration.toMillis:()J
      27: iconst_0
      28: invokespecial #278                // Method io/micrometer/core/instrument/step/StepTimer."<init>":(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Lio/micrometer/core/instrument/distribution/pause/PauseDetector;Ljava/util/concurrent/TimeUnit;JZ)V
      31: areturn

  protected io.micrometer.core.instrument.DistributionSummary newDistributionSummary(io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.distribution.DistributionStatisticConfig, double);
    Code:
       0: new           #287                // class io/micrometer/core/instrument/step/StepDistributionSummary
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #265                // Field clock:Lio/micrometer/core/instrument/Clock;
       9: aload_2
      10: dload_3
      11: aload_0
      12: getfield      #104                // Field config:Lio/micrometer/core/instrument/logging/LoggingRegistryConfig;
      15: invokeinterface #143,  1          // InterfaceMethod io/micrometer/core/instrument/logging/LoggingRegistryConfig.step:()Ljava/time/Duration;
      20: invokevirtual #275                // Method java/time/Duration.toMillis:()J
      23: iconst_0
      24: invokespecial #290                // Method io/micrometer/core/instrument/step/StepDistributionSummary."<init>":(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;DJZ)V
      27: areturn

  protected java.util.concurrent.TimeUnit getBaseTimeUnit();
    Code:
       0: getstatic     #298                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       3: areturn

  public static io.micrometer.core.instrument.logging.LoggingMeterRegistry$Builder builder(io.micrometer.core.instrument.logging.LoggingRegistryConfig);
    Code:
       0: new           #12                 // class io/micrometer/core/instrument/logging/LoggingMeterRegistry$Builder
       3: dup
       4: aload_0
       5: invokespecial #303                // Method io/micrometer/core/instrument/logging/LoggingMeterRegistry$Builder."<init>":(Lio/micrometer/core/instrument/logging/LoggingRegistryConfig;)V
       8: areturn

  private static java.lang.String lambda$writeMeter$11(io.micrometer.core.instrument.logging.LoggingMeterRegistry$Printer, io.micrometer.core.instrument.Measurement);
    Code:
       0: new           #131                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
       7: aload_1
       8: invokevirtual #309                // Method io/micrometer/core/instrument/Measurement.getStatistic:()Lio/micrometer/core/instrument/Statistic;
      11: invokevirtual #314                // Method io/micrometer/core/instrument/Statistic.getTagValueRepresentation:()Ljava/lang/String;
      14: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc_w         #316                // String =
      20: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #153                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: astore_2
      27: getstatic     #320                // Field io/micrometer/core/instrument/logging/LoggingMeterRegistry$1.$SwitchMap$io$micrometer$core$instrument$Statistic:[I
      30: aload_1
      31: invokevirtual #309                // Method io/micrometer/core/instrument/Measurement.getStatistic:()Lio/micrometer/core/instrument/Statistic;
      34: invokevirtual #324                // Method io/micrometer/core/instrument/Statistic.ordinal:()I
      37: iaload
      38: tableswitch   { // 1 to 6
                     1: 76
                     2: 76
                     3: 76
                     4: 102
                     5: 102
                     6: 128
               default: 156
          }
      76: new           #131                // class java/lang/StringBuilder
      79: dup
      80: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
      83: aload_2
      84: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: aload_0
      88: aload_1
      89: invokevirtual #328                // Method io/micrometer/core/instrument/Measurement.getValue:()D
      92: invokevirtual #332                // Method io/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer.value:(D)Ljava/lang/String;
      95: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: invokevirtual #153                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: areturn
     102: new           #131                // class java/lang/StringBuilder
     105: dup
     106: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
     109: aload_2
     110: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_0
     114: aload_1
     115: invokevirtual #328                // Method io/micrometer/core/instrument/Measurement.getValue:()D
     118: invokevirtual #335                // Method io/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer.time:(D)Ljava/lang/String;
     121: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: invokevirtual #153                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     127: areturn
     128: new           #131                // class java/lang/StringBuilder
     131: dup
     132: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
     135: ldc_w         #337                // String throughput=
     138: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: aload_0
     142: aload_1
     143: invokevirtual #328                // Method io/micrometer/core/instrument/Measurement.getValue:()D
     146: invokevirtual #340                // Method io/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer.rate:(D)Ljava/lang/String;
     149: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: invokevirtual #153                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     155: areturn
     156: new           #131                // class java/lang/StringBuilder
     159: dup
     160: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
     163: aload_2
     164: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     167: aload_1
     168: invokevirtual #328                // Method io/micrometer/core/instrument/Measurement.getValue:()D
     171: invokestatic  #345                // Method io/micrometer/core/instrument/util/DoubleFormat.decimalOrNan:(D)Ljava/lang/String;
     174: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     177: invokevirtual #153                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     180: areturn

  private void lambda$publish$10(io.micrometer.core.instrument.Meter);
    Code:
       0: new           #15                 // class io/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #352                // Method io/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer."<init>":(Lio/micrometer/core/instrument/logging/LoggingMeterRegistry;Lio/micrometer/core/instrument/Meter;)V
       9: astore_2
      10: aload_1
      11: aload_0
      12: aload_2
      13: invokedynamic #362,  0            // InvokeDynamic #4:accept:(Lio/micrometer/core/instrument/logging/LoggingMeterRegistry;Lio/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer;)Ljava/util/function/Consumer;
      18: aload_0
      19: aload_2
      20: invokedynamic #370,  0            // InvokeDynamic #5:accept:(Lio/micrometer/core/instrument/logging/LoggingMeterRegistry;Lio/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer;)Ljava/util/function/Consumer;
      25: aload_0
      26: aload_2
      27: invokedynamic #378,  0            // InvokeDynamic #6:accept:(Lio/micrometer/core/instrument/logging/LoggingMeterRegistry;Lio/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer;)Ljava/util/function/Consumer;
      32: aload_0
      33: aload_2
      34: invokedynamic #386,  0            // InvokeDynamic #7:accept:(Lio/micrometer/core/instrument/logging/LoggingMeterRegistry;Lio/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer;)Ljava/util/function/Consumer;
      39: aload_0
      40: aload_2
      41: invokedynamic #394,  0            // InvokeDynamic #8:accept:(Lio/micrometer/core/instrument/logging/LoggingMeterRegistry;Lio/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer;)Ljava/util/function/Consumer;
      46: aload_0
      47: aload_2
      48: invokedynamic #402,  0            // InvokeDynamic #9:accept:(Lio/micrometer/core/instrument/logging/LoggingMeterRegistry;Lio/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer;)Ljava/util/function/Consumer;
      53: aload_0
      54: aload_2
      55: invokedynamic #410,  0            // InvokeDynamic #10:accept:(Lio/micrometer/core/instrument/logging/LoggingMeterRegistry;Lio/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer;)Ljava/util/function/Consumer;
      60: aload_0
      61: aload_2
      62: invokedynamic #418,  0            // InvokeDynamic #11:accept:(Lio/micrometer/core/instrument/logging/LoggingMeterRegistry;Lio/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer;)Ljava/util/function/Consumer;
      67: aload_0
      68: aload_2
      69: invokedynamic #424,  0            // InvokeDynamic #12:accept:(Lio/micrometer/core/instrument/logging/LoggingMeterRegistry;Lio/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer;)Ljava/util/function/Consumer;
      74: invokeinterface #428,  10         // InterfaceMethod io/micrometer/core/instrument/Meter.use:(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V
      79: return

  private void lambda$null$9(io.micrometer.core.instrument.logging.LoggingMeterRegistry$Printer, io.micrometer.core.instrument.Meter);
    Code:
       0: aload_0
       1: getfield      #106                // Field loggingSink:Ljava/util/function/Consumer;
       4: aload_0
       5: aload_2
       6: aload_1
       7: invokevirtual #431                // Method writeMeter:(Lio/micrometer/core/instrument/Meter;Lio/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer;)Ljava/lang/String;
      10: invokeinterface #157,  2          // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      15: return

  private void lambda$null$8(io.micrometer.core.instrument.logging.LoggingMeterRegistry$Printer, io.micrometer.core.instrument.FunctionTimer);
    Code:
       0: aload_2
       1: invokeinterface #436,  1          // InterfaceMethod io/micrometer/core/instrument/FunctionTimer.count:()D
       6: dstore_3
       7: aload_0
       8: getfield      #104                // Field config:Lio/micrometer/core/instrument/logging/LoggingRegistryConfig;
      11: invokeinterface #439,  1          // InterfaceMethod io/micrometer/core/instrument/logging/LoggingRegistryConfig.logInactive:()Z
      16: ifne          26
      19: dload_3
      20: dconst_0
      21: dcmpl
      22: ifne          26
      25: return
      26: aload_0
      27: getfield      #106                // Field loggingSink:Ljava/util/function/Consumer;
      30: new           #131                // class java/lang/StringBuilder
      33: dup
      34: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
      37: aload_1
      38: invokevirtual #239                // Method io/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer.id:()Ljava/lang/String;
      41: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc_w         #441                // String  throughput=
      47: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_1
      51: dload_3
      52: invokevirtual #340                // Method io/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer.rate:(D)Ljava/lang/String;
      55: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: ldc_w         #443                // String  mean=
      61: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload_1
      65: aload_2
      66: aload_0
      67: invokevirtual #269                // Method getBaseTimeUnit:()Ljava/util/concurrent/TimeUnit;
      70: invokeinterface #447,  2          // InterfaceMethod io/micrometer/core/instrument/FunctionTimer.mean:(Ljava/util/concurrent/TimeUnit;)D
      75: invokevirtual #335                // Method io/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer.time:(D)Ljava/lang/String;
      78: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: invokevirtual #153                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: invokeinterface #157,  2          // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      89: return

  private void lambda$null$7(io.micrometer.core.instrument.logging.LoggingMeterRegistry$Printer, io.micrometer.core.instrument.FunctionCounter);
    Code:
       0: aload_2
       1: invokeinterface #452,  1          // InterfaceMethod io/micrometer/core/instrument/FunctionCounter.count:()D
       6: dstore_3
       7: aload_0
       8: getfield      #104                // Field config:Lio/micrometer/core/instrument/logging/LoggingRegistryConfig;
      11: invokeinterface #439,  1          // InterfaceMethod io/micrometer/core/instrument/logging/LoggingRegistryConfig.logInactive:()Z
      16: ifne          26
      19: dload_3
      20: dconst_0
      21: dcmpl
      22: ifne          26
      25: return
      26: aload_0
      27: getfield      #106                // Field loggingSink:Ljava/util/function/Consumer;
      30: new           #131                // class java/lang/StringBuilder
      33: dup
      34: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
      37: aload_1
      38: invokevirtual #239                // Method io/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer.id:()Ljava/lang/String;
      41: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc_w         #441                // String  throughput=
      47: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_1
      51: dload_3
      52: invokevirtual #340                // Method io/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer.rate:(D)Ljava/lang/String;
      55: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #153                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokeinterface #157,  2          // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      66: return

  private void lambda$null$6(io.micrometer.core.instrument.logging.LoggingMeterRegistry$Printer, io.micrometer.core.instrument.TimeGauge);
    Code:
       0: aload_2
       1: aload_0
       2: invokevirtual #269                // Method getBaseTimeUnit:()Ljava/util/concurrent/TimeUnit;
       5: invokeinterface #458,  2          // InterfaceMethod io/micrometer/core/instrument/TimeGauge.value:(Ljava/util/concurrent/TimeUnit;)D
      10: dstore_3
      11: aload_0
      12: getfield      #104                // Field config:Lio/micrometer/core/instrument/logging/LoggingRegistryConfig;
      15: invokeinterface #439,  1          // InterfaceMethod io/micrometer/core/instrument/logging/LoggingRegistryConfig.logInactive:()Z
      20: ifne          30
      23: dload_3
      24: dconst_0
      25: dcmpl
      26: ifne          30
      29: return
      30: aload_0
      31: getfield      #106                // Field loggingSink:Ljava/util/function/Consumer;
      34: new           #131                // class java/lang/StringBuilder
      37: dup
      38: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
      41: aload_1
      42: invokevirtual #239                // Method io/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer.id:()Ljava/lang/String;
      45: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: ldc_w         #460                // String  value=
      51: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_1
      55: dload_3
      56: invokevirtual #335                // Method io/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer.time:(D)Ljava/lang/String;
      59: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #153                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokeinterface #157,  2          // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      70: return

  private void lambda$null$5(io.micrometer.core.instrument.logging.LoggingMeterRegistry$Printer, io.micrometer.core.instrument.LongTaskTimer);
    Code:
       0: aload_2
       1: invokeinterface #467,  1          // InterfaceMethod io/micrometer/core/instrument/LongTaskTimer.activeTasks:()I
       6: istore_3
       7: aload_0
       8: getfield      #104                // Field config:Lio/micrometer/core/instrument/logging/LoggingRegistryConfig;
      11: invokeinterface #439,  1          // InterfaceMethod io/micrometer/core/instrument/logging/LoggingRegistryConfig.logInactive:()Z
      16: ifne          24
      19: iload_3
      20: ifne          24
      23: return
      24: aload_0
      25: getfield      #106                // Field loggingSink:Ljava/util/function/Consumer;
      28: new           #131                // class java/lang/StringBuilder
      31: dup
      32: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
      35: aload_1
      36: invokevirtual #239                // Method io/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer.id:()Ljava/lang/String;
      39: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc_w         #469                // String  active=
      45: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_1
      49: iload_3
      50: i2d
      51: invokevirtual #332                // Method io/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer.value:(D)Ljava/lang/String;
      54: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: ldc_w         #471                // String  duration=
      60: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_1
      64: aload_2
      65: aload_0
      66: invokevirtual #269                // Method getBaseTimeUnit:()Ljava/util/concurrent/TimeUnit;
      69: invokeinterface #474,  2          // InterfaceMethod io/micrometer/core/instrument/LongTaskTimer.duration:(Ljava/util/concurrent/TimeUnit;)D
      74: invokevirtual #335                // Method io/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer.time:(D)Ljava/lang/String;
      77: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: invokevirtual #153                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      83: invokeinterface #157,  2          // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      88: return

  private void lambda$null$4(io.micrometer.core.instrument.logging.LoggingMeterRegistry$Printer, io.micrometer.core.instrument.DistributionSummary);
    Code:
       0: aload_2
       1: invokeinterface #483,  1          // InterfaceMethod io/micrometer/core/instrument/DistributionSummary.takeSnapshot:()Lio/micrometer/core/instrument/distribution/HistogramSnapshot;
       6: astore_3
       7: aload_3
       8: invokevirtual #487                // Method io/micrometer/core/instrument/distribution/HistogramSnapshot.count:()J
      11: lstore        4
      13: aload_0
      14: getfield      #104                // Field config:Lio/micrometer/core/instrument/logging/LoggingRegistryConfig;
      17: invokeinterface #439,  1          // InterfaceMethod io/micrometer/core/instrument/logging/LoggingRegistryConfig.logInactive:()Z
      22: ifne          33
      25: lload         4
      27: lconst_0
      28: lcmp
      29: ifne          33
      32: return
      33: aload_0
      34: getfield      #106                // Field loggingSink:Ljava/util/function/Consumer;
      37: new           #131                // class java/lang/StringBuilder
      40: dup
      41: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
      44: aload_1
      45: invokevirtual #239                // Method io/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer.id:()Ljava/lang/String;
      48: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: ldc_w         #441                // String  throughput=
      54: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_1
      58: lload         4
      60: l2d
      61: invokevirtual #490                // Method io/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer.unitlessRate:(D)Ljava/lang/String;
      64: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: ldc_w         #443                // String  mean=
      70: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_1
      74: aload_3
      75: invokevirtual #492                // Method io/micrometer/core/instrument/distribution/HistogramSnapshot.mean:()D
      78: invokevirtual #332                // Method io/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer.value:(D)Ljava/lang/String;
      81: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: ldc_w         #494                // String  max=
      87: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: aload_1
      91: aload_3
      92: invokevirtual #497                // Method io/micrometer/core/instrument/distribution/HistogramSnapshot.max:()D
      95: invokevirtual #332                // Method io/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer.value:(D)Ljava/lang/String;
      98: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: invokevirtual #153                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     104: invokeinterface #157,  2          // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
     109: return

  private void lambda$null$3(io.micrometer.core.instrument.logging.LoggingMeterRegistry$Printer, io.micrometer.core.instrument.Timer);
    Code:
       0: aload_2
       1: invokeinterface #505,  1          // InterfaceMethod io/micrometer/core/instrument/Timer.takeSnapshot:()Lio/micrometer/core/instrument/distribution/HistogramSnapshot;
       6: astore_3
       7: aload_3
       8: invokevirtual #487                // Method io/micrometer/core/instrument/distribution/HistogramSnapshot.count:()J
      11: lstore        4
      13: aload_0
      14: getfield      #104                // Field config:Lio/micrometer/core/instrument/logging/LoggingRegistryConfig;
      17: invokeinterface #439,  1          // InterfaceMethod io/micrometer/core/instrument/logging/LoggingRegistryConfig.logInactive:()Z
      22: ifne          33
      25: lload         4
      27: lconst_0
      28: lcmp
      29: ifne          33
      32: return
      33: aload_0
      34: getfield      #106                // Field loggingSink:Ljava/util/function/Consumer;
      37: new           #131                // class java/lang/StringBuilder
      40: dup
      41: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
      44: aload_1
      45: invokevirtual #239                // Method io/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer.id:()Ljava/lang/String;
      48: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: ldc_w         #441                // String  throughput=
      54: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_1
      58: lload         4
      60: l2d
      61: invokevirtual #490                // Method io/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer.unitlessRate:(D)Ljava/lang/String;
      64: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: ldc_w         #443                // String  mean=
      70: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_1
      74: aload_3
      75: aload_0
      76: invokevirtual #269                // Method getBaseTimeUnit:()Ljava/util/concurrent/TimeUnit;
      79: invokevirtual #506                // Method io/micrometer/core/instrument/distribution/HistogramSnapshot.mean:(Ljava/util/concurrent/TimeUnit;)D
      82: invokevirtual #335                // Method io/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer.time:(D)Ljava/lang/String;
      85: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: ldc_w         #494                // String  max=
      91: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: aload_1
      95: aload_3
      96: aload_0
      97: invokevirtual #269                // Method getBaseTimeUnit:()Ljava/util/concurrent/TimeUnit;
     100: invokevirtual #508                // Method io/micrometer/core/instrument/distribution/HistogramSnapshot.max:(Ljava/util/concurrent/TimeUnit;)D
     103: invokevirtual #335                // Method io/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer.time:(D)Ljava/lang/String;
     106: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: invokevirtual #153                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     112: invokeinterface #157,  2          // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
     117: return

  private void lambda$null$2(io.micrometer.core.instrument.logging.LoggingMeterRegistry$Printer, io.micrometer.core.instrument.Counter);
    Code:
       0: aload_2
       1: invokeinterface #512,  1          // InterfaceMethod io/micrometer/core/instrument/Counter.count:()D
       6: dstore_3
       7: aload_0
       8: getfield      #104                // Field config:Lio/micrometer/core/instrument/logging/LoggingRegistryConfig;
      11: invokeinterface #439,  1          // InterfaceMethod io/micrometer/core/instrument/logging/LoggingRegistryConfig.logInactive:()Z
      16: ifne          26
      19: dload_3
      20: dconst_0
      21: dcmpl
      22: ifne          26
      25: return
      26: aload_0
      27: getfield      #106                // Field loggingSink:Ljava/util/function/Consumer;
      30: new           #131                // class java/lang/StringBuilder
      33: dup
      34: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
      37: aload_1
      38: invokevirtual #239                // Method io/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer.id:()Ljava/lang/String;
      41: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc_w         #441                // String  throughput=
      47: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_1
      51: dload_3
      52: invokevirtual #340                // Method io/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer.rate:(D)Ljava/lang/String;
      55: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #153                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokeinterface #157,  2          // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      66: return

  private void lambda$null$1(io.micrometer.core.instrument.logging.LoggingMeterRegistry$Printer, io.micrometer.core.instrument.Gauge);
    Code:
       0: aload_0
       1: getfield      #106                // Field loggingSink:Ljava/util/function/Consumer;
       4: new           #131                // class java/lang/StringBuilder
       7: dup
       8: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
      11: aload_1
      12: invokevirtual #239                // Method io/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer.id:()Ljava/lang/String;
      15: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: ldc_w         #460                // String  value=
      21: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: aload_2
      26: invokeinterface #517,  1          // InterfaceMethod io/micrometer/core/instrument/Gauge.value:()D
      31: invokevirtual #332                // Method io/micrometer/core/instrument/logging/LoggingMeterRegistry$Printer.value:(D)Ljava/lang/String;
      34: invokevirtual #139                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #153                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokeinterface #157,  2          // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      45: return

  private static int lambda$publish$0(io.micrometer.core.instrument.Meter, io.micrometer.core.instrument.Meter);
    Code:
       0: aload_0
       1: invokeinterface #523,  1          // InterfaceMethod io/micrometer/core/instrument/Meter.getId:()Lio/micrometer/core/instrument/Meter$Id;
       6: invokevirtual #527                // Method io/micrometer/core/instrument/Meter$Id.getType:()Lio/micrometer/core/instrument/Meter$Type;
       9: aload_1
      10: invokeinterface #523,  1          // InterfaceMethod io/micrometer/core/instrument/Meter.getId:()Lio/micrometer/core/instrument/Meter$Id;
      15: invokevirtual #527                // Method io/micrometer/core/instrument/Meter$Id.getType:()Lio/micrometer/core/instrument/Meter$Type;
      18: invokevirtual #531                // Method io/micrometer/core/instrument/Meter$Type.compareTo:(Ljava/lang/Enum;)I
      21: istore_2
      22: iload_2
      23: ifne          48
      26: aload_0
      27: invokeinterface #523,  1          // InterfaceMethod io/micrometer/core/instrument/Meter.getId:()Lio/micrometer/core/instrument/Meter$Id;
      32: invokevirtual #534                // Method io/micrometer/core/instrument/Meter$Id.getName:()Ljava/lang/String;
      35: aload_1
      36: invokeinterface #523,  1          // InterfaceMethod io/micrometer/core/instrument/Meter.getId:()Lio/micrometer/core/instrument/Meter$Id;
      41: invokevirtual #534                // Method io/micrometer/core/instrument/Meter$Id.getName:()Ljava/lang/String;
      44: invokevirtual #537                // Method java/lang/String.compareTo:(Ljava/lang/String;)I
      47: ireturn
      48: iload_2
      49: ireturn

  static java.lang.String access$000(io.micrometer.core.instrument.logging.LoggingMeterRegistry, io.micrometer.core.instrument.Meter$Id);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #546                // Method getConventionName:(Lio/micrometer/core/instrument/Meter$Id;)Ljava/lang/String;
       5: areturn

  static java.util.List access$100(io.micrometer.core.instrument.logging.LoggingMeterRegistry, io.micrometer.core.instrument.Meter$Id);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #554                // Method getConventionTags:(Lio/micrometer/core/instrument/Meter$Id;)Ljava/util/List;
       5: areturn

  static io.micrometer.core.instrument.logging.LoggingRegistryConfig access$200(io.micrometer.core.instrument.logging.LoggingMeterRegistry);
    Code:
       0: aload_0
       1: getfield      #104                // Field config:Lio/micrometer/core/instrument/logging/LoggingRegistryConfig;
       4: areturn

  static io.micrometer.core.util.internal.logging.InternalLogger access$300();
    Code:
       0: getstatic     #68                 // Field log:Lio/micrometer/core/util/internal/logging/InternalLogger;
       3: areturn

  io.micrometer.core.instrument.logging.LoggingMeterRegistry(io.micrometer.core.instrument.logging.LoggingRegistryConfig, io.micrometer.core.instrument.Clock, java.util.concurrent.ThreadFactory, java.util.function.Consumer, io.micrometer.core.instrument.logging.LoggingMeterRegistry$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #97                 // Method "<init>":(Lio/micrometer/core/instrument/logging/LoggingRegistryConfig;Lio/micrometer/core/instrument/Clock;Ljava/util/concurrent/ThreadFactory;Ljava/util/function/Consumer;)V
       9: return

  static {};
    Code:
       0: ldc           #2                  // class io/micrometer/core/instrument/logging/LoggingMeterRegistry
       2: invokestatic  #570                // Method io/micrometer/core/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/micrometer/core/util/internal/logging/InternalLogger;
       5: putstatic     #68                 // Field log:Lio/micrometer/core/util/internal/logging/InternalLogger;
       8: return
}
