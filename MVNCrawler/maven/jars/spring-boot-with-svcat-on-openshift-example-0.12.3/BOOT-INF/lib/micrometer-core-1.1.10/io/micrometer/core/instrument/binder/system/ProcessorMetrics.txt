Compiled from "ProcessorMetrics.java"
public class io.micrometer.core.instrument.binder.system.ProcessorMetrics implements io.micrometer.core.instrument.binder.MeterBinder {
  private static final java.util.List<java.lang.String> OPERATING_SYSTEM_BEAN_CLASS_NAMES;

  private final java.lang.Iterable<io.micrometer.core.instrument.Tag> tags;

  private final java.lang.management.OperatingSystemMXBean operatingSystemBean;

  private final java.lang.Class<?> operatingSystemBeanClass;

  private final java.lang.reflect.Method systemCpuUsage;

  private final java.lang.reflect.Method processCpuUsage;

  public io.micrometer.core.instrument.binder.system.ProcessorMetrics();
    Code:
       0: aload_0
       1: invokestatic  #42                 // Method java/util/Collections.emptyList:()Ljava/util/List;
       4: invokespecial #45                 // Method "<init>":(Ljava/lang/Iterable;)V
       7: return

  public io.micrometer.core.instrument.binder.system.ProcessorMetrics(java.lang.Iterable<io.micrometer.core.instrument.Tag>);
    Code:
       0: aload_0
       1: invokespecial #50                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #52                 // Field tags:Ljava/lang/Iterable;
       9: aload_0
      10: invokestatic  #58                 // Method java/lang/management/ManagementFactory.getOperatingSystemMXBean:()Ljava/lang/management/OperatingSystemMXBean;
      13: putfield      #60                 // Field operatingSystemBean:Ljava/lang/management/OperatingSystemMXBean;
      16: aload_0
      17: aload_0
      18: getstatic     #62                 // Field OPERATING_SYSTEM_BEAN_CLASS_NAMES:Ljava/util/List;
      21: invokespecial #66                 // Method getFirstClassFound:(Ljava/util/List;)Ljava/lang/Class;
      24: putfield      #68                 // Field operatingSystemBeanClass:Ljava/lang/Class;
      27: aload_0
      28: aload_0
      29: ldc           #70                 // String getSystemCpuLoad
      31: invokespecial #74                 // Method detectMethod:(Ljava/lang/String;)Ljava/lang/reflect/Method;
      34: putfield      #76                 // Field systemCpuUsage:Ljava/lang/reflect/Method;
      37: aload_0
      38: aload_0
      39: ldc           #78                 // String getProcessCpuLoad
      41: invokespecial #74                 // Method detectMethod:(Ljava/lang/String;)Ljava/lang/reflect/Method;
      44: putfield      #80                 // Field processCpuUsage:Ljava/lang/reflect/Method;
      47: return

  public void bindTo(io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: invokestatic  #88                 // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
       3: astore_2
       4: ldc           #90                 // String system.cpu.count
       6: aload_2
       7: invokedynamic #110,  0            // InvokeDynamic #0:applyAsDouble:()Ljava/util/function/ToDoubleFunction;
      12: invokestatic  #114                // InterfaceMethod io/micrometer/core/instrument/Gauge.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge$Builder;
      15: aload_0
      16: getfield      #52                 // Field tags:Ljava/lang/Iterable;
      19: invokevirtual #117                // Method io/micrometer/core/instrument/Gauge$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Gauge$Builder;
      22: ldc           #119                // String The number of processors available to the Java virtual machine
      24: invokevirtual #123                // Method io/micrometer/core/instrument/Gauge$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
      27: aload_1
      28: invokevirtual #127                // Method io/micrometer/core/instrument/Gauge$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Gauge;
      31: pop
      32: aload_0
      33: getfield      #60                 // Field operatingSystemBean:Ljava/lang/management/OperatingSystemMXBean;
      36: invokeinterface #133,  1          // InterfaceMethod java/lang/management/OperatingSystemMXBean.getSystemLoadAverage:()D
      41: dconst_0
      42: dcmpl
      43: iflt          77
      46: ldc           #135                // String system.load.average.1m
      48: aload_0
      49: getfield      #60                 // Field operatingSystemBean:Ljava/lang/management/OperatingSystemMXBean;
      52: invokedynamic #139,  0            // InvokeDynamic #1:applyAsDouble:()Ljava/util/function/ToDoubleFunction;
      57: invokestatic  #114                // InterfaceMethod io/micrometer/core/instrument/Gauge.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge$Builder;
      60: aload_0
      61: getfield      #52                 // Field tags:Ljava/lang/Iterable;
      64: invokevirtual #117                // Method io/micrometer/core/instrument/Gauge$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Gauge$Builder;
      67: ldc           #141                // String The sum of the number of runnable entities queued to available processors and the number of runnable entities running on the available processors averaged over a period of time
      69: invokevirtual #123                // Method io/micrometer/core/instrument/Gauge$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
      72: aload_1
      73: invokevirtual #127                // Method io/micrometer/core/instrument/Gauge$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Gauge;
      76: pop
      77: aload_0
      78: getfield      #76                 // Field systemCpuUsage:Ljava/lang/reflect/Method;
      81: ifnull        116
      84: ldc           #143                // String system.cpu.usage
      86: aload_0
      87: getfield      #60                 // Field operatingSystemBean:Ljava/lang/management/OperatingSystemMXBean;
      90: aload_0
      91: invokedynamic #150,  0            // InvokeDynamic #2:applyAsDouble:(Lio/micrometer/core/instrument/binder/system/ProcessorMetrics;)Ljava/util/function/ToDoubleFunction;
      96: invokestatic  #114                // InterfaceMethod io/micrometer/core/instrument/Gauge.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge$Builder;
      99: aload_0
     100: getfield      #52                 // Field tags:Ljava/lang/Iterable;
     103: invokevirtual #117                // Method io/micrometer/core/instrument/Gauge$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Gauge$Builder;
     106: ldc           #152                // String The \"recent cpu usage\" for the whole system
     108: invokevirtual #123                // Method io/micrometer/core/instrument/Gauge$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
     111: aload_1
     112: invokevirtual #127                // Method io/micrometer/core/instrument/Gauge$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Gauge;
     115: pop
     116: aload_0
     117: getfield      #80                 // Field processCpuUsage:Ljava/lang/reflect/Method;
     120: ifnull        155
     123: ldc           #154                // String process.cpu.usage
     125: aload_0
     126: getfield      #60                 // Field operatingSystemBean:Ljava/lang/management/OperatingSystemMXBean;
     129: aload_0
     130: invokedynamic #159,  0            // InvokeDynamic #3:applyAsDouble:(Lio/micrometer/core/instrument/binder/system/ProcessorMetrics;)Ljava/util/function/ToDoubleFunction;
     135: invokestatic  #114                // InterfaceMethod io/micrometer/core/instrument/Gauge.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge$Builder;
     138: aload_0
     139: getfield      #52                 // Field tags:Ljava/lang/Iterable;
     142: invokevirtual #117                // Method io/micrometer/core/instrument/Gauge$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Gauge$Builder;
     145: ldc           #161                // String The \"recent cpu usage\" for the Java Virtual Machine process
     147: invokevirtual #123                // Method io/micrometer/core/instrument/Gauge$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
     150: aload_1
     151: invokevirtual #127                // Method io/micrometer/core/instrument/Gauge$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Gauge;
     154: pop
     155: return

  private double invoke(java.lang.reflect.Method);
    Code:
       0: aload_1
       1: ifnull        25
       4: aload_1
       5: aload_0
       6: getfield      #60                 // Field operatingSystemBean:Ljava/lang/management/OperatingSystemMXBean;
       9: iconst_0
      10: anewarray     #4                  // class java/lang/Object
      13: invokevirtual #178                // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #180                // class java/lang/Double
      19: invokevirtual #183                // Method java/lang/Double.doubleValue:()D
      22: goto          28
      25: ldc2_w        #184                // double NaNd
      28: dreturn
      29: astore_2
      30: ldc2_w        #184                // double NaNd
      33: dreturn
    Exception table:
       from    to  target type
           0    28    29   Class java/lang/IllegalAccessException
           0    28    29   Class java/lang/IllegalArgumentException
           0    28    29   Class java/lang/reflect/InvocationTargetException

  private java.lang.reflect.Method detectMethod(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #202                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getfield      #68                 // Field operatingSystemBeanClass:Ljava/lang/Class;
       9: ifnonnull     14
      12: aconst_null
      13: areturn
      14: aload_0
      15: getfield      #68                 // Field operatingSystemBeanClass:Ljava/lang/Class;
      18: aload_0
      19: getfield      #60                 // Field operatingSystemBean:Ljava/lang/management/OperatingSystemMXBean;
      22: invokevirtual #207                // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      25: pop
      26: aload_0
      27: getfield      #68                 // Field operatingSystemBeanClass:Ljava/lang/Class;
      30: aload_1
      31: iconst_0
      32: anewarray     #204                // class java/lang/Class
      35: invokevirtual #211                // Method java/lang/Class.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      38: areturn
      39: astore_2
      40: aconst_null
      41: areturn
    Exception table:
       from    to  target type
          14    38    39   Class java/lang/ClassCastException
          14    38    39   Class java/lang/NoSuchMethodException
          14    38    39   Class java/lang/SecurityException

  private java.lang.Class<?> getFirstClassFound(java.util.List<java.lang.String>);
    Code:
       0: aload_1
       1: invokeinterface #222,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #228,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          36
      16: aload_2
      17: invokeinterface #232,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #234                // class java/lang/String
      25: astore_3
      26: aload_3
      27: invokestatic  #238                // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      30: areturn
      31: astore        4
      33: goto          7
      36: aconst_null
      37: areturn
    Exception table:
       from    to  target type
          26    30    31   Class java/lang/ClassNotFoundException

  private double lambda$bindTo$1(java.lang.management.OperatingSystemMXBean);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #80                 // Field processCpuUsage:Ljava/lang/reflect/Method;
       5: invokespecial #242                // Method invoke:(Ljava/lang/reflect/Method;)D
       8: dreturn

  private double lambda$bindTo$0(java.lang.management.OperatingSystemMXBean);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #76                 // Field systemCpuUsage:Ljava/lang/reflect/Method;
       5: invokespecial #242                // Method invoke:(Ljava/lang/reflect/Method;)D
       8: dreturn

  static {};
    Code:
       0: iconst_2
       1: anewarray     #234                // class java/lang/String
       4: dup
       5: iconst_0
       6: ldc           #246                // String com.sun.management.OperatingSystemMXBean
       8: aastore
       9: dup
      10: iconst_1
      11: ldc           #248                // String com.ibm.lang.management.OperatingSystemMXBean
      13: aastore
      14: invokestatic  #254                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      17: putstatic     #62                 // Field OPERATING_SYSTEM_BEAN_CLASS_NAMES:Ljava/util/List;
      20: return
}
