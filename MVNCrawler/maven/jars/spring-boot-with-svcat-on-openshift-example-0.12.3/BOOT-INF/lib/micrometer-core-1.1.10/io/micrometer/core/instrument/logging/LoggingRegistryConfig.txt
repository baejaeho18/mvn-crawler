Compiled from "LoggingRegistryConfig.java"
public interface io.micrometer.core.instrument.logging.LoggingRegistryConfig extends io.micrometer.core.instrument.step.StepRegistryConfig {
  public static final io.micrometer.core.instrument.logging.LoggingRegistryConfig DEFAULT;

  public default java.lang.String prefix();
    Code:
       0: ldc           #18                 // String logging
       2: areturn

  public default boolean logInactive();
    Code:
       0: aload_0
       1: new           #23                 // class java/lang/StringBuilder
       4: dup
       5: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
       8: aload_0
       9: invokeinterface #29,  1           // InterfaceMethod prefix:()Ljava/lang/String;
      14: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #35                 // String .logInactive
      19: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: invokeinterface #42,  2           // InterfaceMethod get:(Ljava/lang/String;)Ljava/lang/String;
      30: astore_1
      31: aload_1
      32: invokestatic  #48                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      35: ireturn

  private static java.lang.String lambda$static$0(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  static {};
    Code:
       0: invokedynamic #67,  0             // InvokeDynamic #0:get:()Lio/micrometer/core/instrument/logging/LoggingRegistryConfig;
       5: putstatic     #69                 // Field DEFAULT:Lio/micrometer/core/instrument/logging/LoggingRegistryConfig;
       8: return
}
