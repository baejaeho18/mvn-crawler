Compiled from "NamingConvention.java"
final class io.micrometer.core.instrument.config.NamingConvention$2 implements io.micrometer.core.instrument.config.NamingConvention {
  io.micrometer.core.instrument.config.NamingConvention$2();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.String name(java.lang.String, io.micrometer.core.instrument.Meter$Type, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #25                 // Method toCamelCase:(Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String tagKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #25                 // Method toCamelCase:(Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  private java.lang.String toCamelCase(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #33                 // String \\.
       3: invokevirtual #39                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       6: astore_2
       7: new           #41                 // class java/lang/StringBuilder
      10: dup
      11: aload_1
      12: invokevirtual #45                 // Method java/lang/String.length:()I
      15: invokespecial #48                 // Method java/lang/StringBuilder."<init>":(I)V
      18: astore_3
      19: iconst_0
      20: istore        4
      22: iload         4
      24: aload_2
      25: arraylength
      26: if_icmpge     114
      29: aload_2
      30: iload         4
      32: aaload
      33: astore        5
      35: aload         5
      37: invokestatic  #56                 // Method io/micrometer/core/instrument/util/StringUtils.isEmpty:(Ljava/lang/String;)Z
      40: ifeq          46
      43: goto          108
      46: iload         4
      48: ifne          61
      51: aload_3
      52: aload         5
      54: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: pop
      58: goto          108
      61: aload         5
      63: iconst_0
      64: invokevirtual #64                 // Method java/lang/String.charAt:(I)C
      67: istore        6
      69: iload         6
      71: invokestatic  #70                 // Method java/lang/Character.isUpperCase:(C)Z
      74: ifeq          87
      77: aload_3
      78: aload         5
      80: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: pop
      84: goto          108
      87: aload_3
      88: iload         6
      90: invokestatic  #74                 // Method java/lang/Character.toUpperCase:(C)C
      93: invokevirtual #77                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      96: aload         5
      98: iconst_1
      99: aload         5
     101: invokevirtual #45                 // Method java/lang/String.length:()I
     104: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
     107: pop
     108: iinc          4, 1
     111: goto          22
     114: aload_3
     115: invokevirtual #84                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     118: areturn
}
