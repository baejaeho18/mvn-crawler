Compiled from "DropwizardMeterRegistry.java"
public abstract class io.micrometer.core.instrument.dropwizard.DropwizardMeterRegistry extends io.micrometer.core.instrument.MeterRegistry {
  private static final io.micrometer.core.util.internal.logging.WarnThenDebugLogger logger;

  private final com.codahale.metrics.MetricRegistry registry;

  private final io.micrometer.core.instrument.util.HierarchicalNameMapper nameMapper;

  private final io.micrometer.core.instrument.dropwizard.DropwizardClock dropwizardClock;

  private final io.micrometer.core.instrument.dropwizard.DropwizardConfig dropwizardConfig;

  private final java.util.concurrent.atomic.AtomicBoolean warnLogged;

  public io.micrometer.core.instrument.dropwizard.DropwizardMeterRegistry(io.micrometer.core.instrument.dropwizard.DropwizardConfig, com.codahale.metrics.MetricRegistry, io.micrometer.core.instrument.util.HierarchicalNameMapper, io.micrometer.core.instrument.Clock);
    Code:
       0: aload_0
       1: aload         4
       3: invokespecial #43                 // Method io/micrometer/core/instrument/MeterRegistry."<init>":(Lio/micrometer/core/instrument/Clock;)V
       6: aload_0
       7: new           #45                 // class java/util/concurrent/atomic/AtomicBoolean
      10: dup
      11: invokespecial #48                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      14: putfield      #50                 // Field warnLogged:Ljava/util/concurrent/atomic/AtomicBoolean;
      17: aload_0
      18: aload_1
      19: putfield      #52                 // Field dropwizardConfig:Lio/micrometer/core/instrument/dropwizard/DropwizardConfig;
      22: aload_0
      23: new           #54                 // class io/micrometer/core/instrument/dropwizard/DropwizardClock
      26: dup
      27: aload         4
      29: invokespecial #55                 // Method io/micrometer/core/instrument/dropwizard/DropwizardClock."<init>":(Lio/micrometer/core/instrument/Clock;)V
      32: putfield      #57                 // Field dropwizardClock:Lio/micrometer/core/instrument/dropwizard/DropwizardClock;
      35: aload_0
      36: aload_2
      37: putfield      #59                 // Field registry:Lcom/codahale/metrics/MetricRegistry;
      40: aload_0
      41: aload_3
      42: putfield      #61                 // Field nameMapper:Lio/micrometer/core/instrument/util/HierarchicalNameMapper;
      45: aload_0
      46: invokevirtual #65                 // Method config:()Lio/micrometer/core/instrument/MeterRegistry$Config;
      49: getstatic     #71                 // Field io/micrometer/core/instrument/config/NamingConvention.camelCase:Lio/micrometer/core/instrument/config/NamingConvention;
      52: invokevirtual #75                 // Method io/micrometer/core/instrument/MeterRegistry$Config.namingConvention:(Lio/micrometer/core/instrument/config/NamingConvention;)Lio/micrometer/core/instrument/MeterRegistry$Config;
      55: aload_0
      56: invokedynamic #94,  0             // InvokeDynamic #0:accept:(Lio/micrometer/core/instrument/dropwizard/DropwizardMeterRegistry;)Ljava/util/function/Consumer;
      61: invokevirtual #97                 // Method io/micrometer/core/instrument/MeterRegistry$Config.onMeterRemoved:(Ljava/util/function/Consumer;)Lio/micrometer/core/instrument/MeterRegistry$Config;
      64: pop
      65: return

  private void onMeterRemoved(io.micrometer.core.instrument.Meter);
    Code:
       0: aload_0
       1: getfield      #59                 // Field registry:Lcom/codahale/metrics/MetricRegistry;
       4: aload_0
       5: aload_1
       6: invokeinterface #105,  1          // InterfaceMethod io/micrometer/core/instrument/Meter.getId:()Lio/micrometer/core/instrument/Meter$Id;
      11: invokespecial #109                // Method hierarchicalName:(Lio/micrometer/core/instrument/Meter$Id;)Ljava/lang/String;
      14: invokevirtual #115                // Method com/codahale/metrics/MetricRegistry.remove:(Ljava/lang/String;)Z
      17: pop
      18: return

  public com.codahale.metrics.MetricRegistry getDropwizardRegistry();
    Code:
       0: aload_0
       1: getfield      #59                 // Field registry:Lcom/codahale/metrics/MetricRegistry;
       4: areturn

  protected io.micrometer.core.instrument.Counter newCounter(io.micrometer.core.instrument.Meter$Id);
    Code:
       0: new           #123                // class com/codahale/metrics/Meter
       3: dup
       4: aload_0
       5: getfield      #57                 // Field dropwizardClock:Lio/micrometer/core/instrument/dropwizard/DropwizardClock;
       8: invokespecial #126                // Method com/codahale/metrics/Meter."<init>":(Lcom/codahale/metrics/Clock;)V
      11: astore_2
      12: aload_0
      13: getfield      #59                 // Field registry:Lcom/codahale/metrics/MetricRegistry;
      16: aload_0
      17: aload_1
      18: invokespecial #109                // Method hierarchicalName:(Lio/micrometer/core/instrument/Meter$Id;)Ljava/lang/String;
      21: aload_2
      22: invokevirtual #130                // Method com/codahale/metrics/MetricRegistry.register:(Ljava/lang/String;Lcom/codahale/metrics/Metric;)Lcom/codahale/metrics/Metric;
      25: pop
      26: new           #132                // class io/micrometer/core/instrument/dropwizard/DropwizardCounter
      29: dup
      30: aload_1
      31: aload_2
      32: invokespecial #135                // Method io/micrometer/core/instrument/dropwizard/DropwizardCounter."<init>":(Lio/micrometer/core/instrument/Meter$Id;Lcom/codahale/metrics/Meter;)V
      35: areturn

  protected <T> io.micrometer.core.instrument.Gauge newGauge(io.micrometer.core.instrument.Meter$Id, T, java.util.function.ToDoubleFunction<T>);
    Code:
       0: new           #144                // class java/lang/ref/WeakReference
       3: dup
       4: aload_2
       5: invokespecial #146                // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
       8: astore        4
      10: aload_0
      11: aload         4
      13: aload_3
      14: aload_1
      15: invokedynamic #159,  0            // InvokeDynamic #1:getValue:(Lio/micrometer/core/instrument/dropwizard/DropwizardMeterRegistry;Ljava/lang/ref/WeakReference;Ljava/util/function/ToDoubleFunction;Lio/micrometer/core/instrument/Meter$Id;)Lcom/codahale/metrics/Gauge;
      20: astore        5
      22: aload_0
      23: getfield      #59                 // Field registry:Lcom/codahale/metrics/MetricRegistry;
      26: aload_0
      27: aload_1
      28: invokespecial #109                // Method hierarchicalName:(Lio/micrometer/core/instrument/Meter$Id;)Ljava/lang/String;
      31: aload         5
      33: invokevirtual #130                // Method com/codahale/metrics/MetricRegistry.register:(Ljava/lang/String;Lcom/codahale/metrics/Metric;)Lcom/codahale/metrics/Metric;
      36: pop
      37: new           #161                // class io/micrometer/core/instrument/dropwizard/DropwizardGauge
      40: dup
      41: aload_1
      42: aload         5
      44: invokespecial #164                // Method io/micrometer/core/instrument/dropwizard/DropwizardGauge."<init>":(Lio/micrometer/core/instrument/Meter$Id;Lcom/codahale/metrics/Gauge;)V
      47: areturn

  protected io.micrometer.core.instrument.Timer newTimer(io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.distribution.DistributionStatisticConfig, io.micrometer.core.instrument.distribution.pause.PauseDetector);
    Code:
       0: new           #180                // class io/micrometer/core/instrument/dropwizard/DropwizardTimer
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #59                 // Field registry:Lcom/codahale/metrics/MetricRegistry;
       9: aload_0
      10: aload_1
      11: invokespecial #109                // Method hierarchicalName:(Lio/micrometer/core/instrument/Meter$Id;)Ljava/lang/String;
      14: invokevirtual #184                // Method com/codahale/metrics/MetricRegistry.timer:(Ljava/lang/String;)Lcom/codahale/metrics/Timer;
      17: aload_0
      18: getfield      #186                // Field clock:Lio/micrometer/core/instrument/Clock;
      21: aload_2
      22: aload_3
      23: invokespecial #189                // Method io/micrometer/core/instrument/dropwizard/DropwizardTimer."<init>":(Lio/micrometer/core/instrument/Meter$Id;Lcom/codahale/metrics/Timer;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Lio/micrometer/core/instrument/distribution/pause/PauseDetector;)V
      26: astore        4
      28: aload         4
      30: aload_0
      31: invokestatic  #195                // Method io/micrometer/core/instrument/distribution/HistogramGauges.registerWithCommonFormat:(Lio/micrometer/core/instrument/Timer;Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/distribution/HistogramGauges;
      34: pop
      35: aload         4
      37: areturn

  protected io.micrometer.core.instrument.DistributionSummary newDistributionSummary(io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.distribution.DistributionStatisticConfig, double);
    Code:
       0: new           #204                // class io/micrometer/core/instrument/dropwizard/DropwizardDistributionSummary
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #186                // Field clock:Lio/micrometer/core/instrument/Clock;
       9: aload_0
      10: getfield      #59                 // Field registry:Lcom/codahale/metrics/MetricRegistry;
      13: aload_0
      14: aload_1
      15: invokespecial #109                // Method hierarchicalName:(Lio/micrometer/core/instrument/Meter$Id;)Ljava/lang/String;
      18: invokevirtual #208                // Method com/codahale/metrics/MetricRegistry.histogram:(Ljava/lang/String;)Lcom/codahale/metrics/Histogram;
      21: aload_2
      22: dload_3
      23: invokespecial #211                // Method io/micrometer/core/instrument/dropwizard/DropwizardDistributionSummary."<init>":(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lcom/codahale/metrics/Histogram;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;D)V
      26: astore        5
      28: aload         5
      30: aload_0
      31: invokestatic  #214                // Method io/micrometer/core/instrument/distribution/HistogramGauges.registerWithCommonFormat:(Lio/micrometer/core/instrument/DistributionSummary;Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/distribution/HistogramGauges;
      34: pop
      35: aload         5
      37: areturn

  protected io.micrometer.core.instrument.LongTaskTimer newLongTaskTimer(io.micrometer.core.instrument.Meter$Id);
    Code:
       0: new           #222                // class io/micrometer/core/instrument/internal/DefaultLongTaskTimer
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #186                // Field clock:Lio/micrometer/core/instrument/Clock;
       9: invokespecial #225                // Method io/micrometer/core/instrument/internal/DefaultLongTaskTimer."<init>":(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;)V
      12: astore_2
      13: aload_0
      14: getfield      #59                 // Field registry:Lcom/codahale/metrics/MetricRegistry;
      17: aload_0
      18: aload_1
      19: getstatic     #231                // Field io/micrometer/core/instrument/Statistic.ACTIVE_TASKS:Lio/micrometer/core/instrument/Statistic;
      22: invokevirtual #235                // Method io/micrometer/core/instrument/Meter$Id.withTag:(Lio/micrometer/core/instrument/Statistic;)Lio/micrometer/core/instrument/Meter$Id;
      25: invokespecial #109                // Method hierarchicalName:(Lio/micrometer/core/instrument/Meter$Id;)Ljava/lang/String;
      28: aload_2
      29: dup
      30: invokevirtual #241                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      33: pop
      34: invokedynamic #253,  0            // InvokeDynamic #2:getValue:(Lio/micrometer/core/instrument/LongTaskTimer;)Lcom/codahale/metrics/Gauge;
      39: invokevirtual #130                // Method com/codahale/metrics/MetricRegistry.register:(Ljava/lang/String;Lcom/codahale/metrics/Metric;)Lcom/codahale/metrics/Metric;
      42: pop
      43: aload_0
      44: getfield      #59                 // Field registry:Lcom/codahale/metrics/MetricRegistry;
      47: aload_0
      48: aload_1
      49: getstatic     #256                // Field io/micrometer/core/instrument/Statistic.DURATION:Lio/micrometer/core/instrument/Statistic;
      52: invokevirtual #235                // Method io/micrometer/core/instrument/Meter$Id.withTag:(Lio/micrometer/core/instrument/Statistic;)Lio/micrometer/core/instrument/Meter$Id;
      55: invokespecial #109                // Method hierarchicalName:(Lio/micrometer/core/instrument/Meter$Id;)Ljava/lang/String;
      58: aload_2
      59: invokedynamic #262,  0            // InvokeDynamic #3:getValue:(Lio/micrometer/core/instrument/LongTaskTimer;)Lcom/codahale/metrics/Gauge;
      64: invokevirtual #130                // Method com/codahale/metrics/MetricRegistry.register:(Ljava/lang/String;Lcom/codahale/metrics/Metric;)Lcom/codahale/metrics/Metric;
      67: pop
      68: aload_2
      69: areturn

  protected <T> io.micrometer.core.instrument.FunctionTimer newFunctionTimer(io.micrometer.core.instrument.Meter$Id, T, java.util.function.ToLongFunction<T>, java.util.function.ToDoubleFunction<T>, java.util.concurrent.TimeUnit);
    Code:
       0: new           #269                // class io/micrometer/core/instrument/dropwizard/DropwizardFunctionTimer
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #186                // Field clock:Lio/micrometer/core/instrument/Clock;
       9: aload_2
      10: aload_3
      11: aload         4
      13: aload         5
      15: aload_0
      16: invokevirtual #273                // Method getBaseTimeUnit:()Ljava/util/concurrent/TimeUnit;
      19: invokespecial #276                // Method io/micrometer/core/instrument/dropwizard/DropwizardFunctionTimer."<init>":(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Ljava/lang/Object;Ljava/util/function/ToLongFunction;Ljava/util/function/ToDoubleFunction;Ljava/util/concurrent/TimeUnit;Ljava/util/concurrent/TimeUnit;)V
      22: astore        6
      24: aload_0
      25: getfield      #59                 // Field registry:Lcom/codahale/metrics/MetricRegistry;
      28: aload_0
      29: aload_1
      30: invokespecial #109                // Method hierarchicalName:(Lio/micrometer/core/instrument/Meter$Id;)Ljava/lang/String;
      33: aload         6
      35: invokevirtual #280                // Method io/micrometer/core/instrument/dropwizard/DropwizardFunctionTimer.getDropwizardMeter:()Lcom/codahale/metrics/Timer;
      38: invokevirtual #130                // Method com/codahale/metrics/MetricRegistry.register:(Ljava/lang/String;Lcom/codahale/metrics/Metric;)Lcom/codahale/metrics/Metric;
      41: pop
      42: aload         6
      44: areturn

  protected <T> io.micrometer.core.instrument.FunctionCounter newFunctionCounter(io.micrometer.core.instrument.Meter$Id, T, java.util.function.ToDoubleFunction<T>);
    Code:
       0: new           #293                // class io/micrometer/core/instrument/dropwizard/DropwizardFunctionCounter
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #186                // Field clock:Lio/micrometer/core/instrument/Clock;
       9: aload_2
      10: aload_3
      11: invokespecial #296                // Method io/micrometer/core/instrument/dropwizard/DropwizardFunctionCounter."<init>":(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)V
      14: astore        4
      16: aload_0
      17: getfield      #59                 // Field registry:Lcom/codahale/metrics/MetricRegistry;
      20: aload_0
      21: aload_1
      22: invokespecial #109                // Method hierarchicalName:(Lio/micrometer/core/instrument/Meter$Id;)Ljava/lang/String;
      25: aload         4
      27: invokevirtual #299                // Method io/micrometer/core/instrument/dropwizard/DropwizardFunctionCounter.getDropwizardMeter:()Lcom/codahale/metrics/Meter;
      30: invokevirtual #130                // Method com/codahale/metrics/MetricRegistry.register:(Ljava/lang/String;Lcom/codahale/metrics/Metric;)Lcom/codahale/metrics/Metric;
      33: pop
      34: aload         4
      36: areturn

  protected io.micrometer.core.instrument.Meter newMeter(io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.Meter$Type, java.lang.Iterable<io.micrometer.core.instrument.Measurement>);
    Code:
       0: aload_3
       1: aload_0
       2: aload_1
       3: invokedynamic #315,  0            // InvokeDynamic #4:accept:(Lio/micrometer/core/instrument/dropwizard/DropwizardMeterRegistry;Lio/micrometer/core/instrument/Meter$Id;)Ljava/util/function/Consumer;
       8: invokeinterface #321,  2          // InterfaceMethod java/lang/Iterable.forEach:(Ljava/util/function/Consumer;)V
      13: new           #323                // class io/micrometer/core/instrument/internal/DefaultMeter
      16: dup
      17: aload_1
      18: aload_2
      19: aload_3
      20: invokespecial #326                // Method io/micrometer/core/instrument/internal/DefaultMeter."<init>":(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/Iterable;)V
      23: areturn

  protected java.util.concurrent.TimeUnit getBaseTimeUnit();
    Code:
       0: getstatic     #336                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       3: areturn

  private java.lang.String hierarchicalName(io.micrometer.core.instrument.Meter$Id);
    Code:
       0: aload_0
       1: getfield      #61                 // Field nameMapper:Lio/micrometer/core/instrument/util/HierarchicalNameMapper;
       4: aload_1
       5: aload_0
       6: invokevirtual #65                 // Method config:()Lio/micrometer/core/instrument/MeterRegistry$Config;
       9: invokevirtual #339                // Method io/micrometer/core/instrument/MeterRegistry$Config.namingConvention:()Lio/micrometer/core/instrument/config/NamingConvention;
      12: invokeinterface #345,  3          // InterfaceMethod io/micrometer/core/instrument/util/HierarchicalNameMapper.toHierarchicalName:(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/config/NamingConvention;)Ljava/lang/String;
      17: areturn

  protected io.micrometer.core.instrument.distribution.DistributionStatisticConfig defaultHistogramConfig();
    Code:
       0: invokestatic  #351                // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.builder:()Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
       3: aload_0
       4: getfield      #52                 // Field dropwizardConfig:Lio/micrometer/core/instrument/dropwizard/DropwizardConfig;
       7: invokeinterface #357,  1          // InterfaceMethod io/micrometer/core/instrument/dropwizard/DropwizardConfig.step:()Ljava/time/Duration;
      12: invokevirtual #361                // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.expiry:(Ljava/time/Duration;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
      15: invokevirtual #364                // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.build:()Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
      18: getstatic     #367                // Field io/micrometer/core/instrument/distribution/DistributionStatisticConfig.DEFAULT:Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
      21: invokevirtual #371                // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.merge:(Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
      24: areturn

  protected abstract java.lang.Double nullGaugeValue();

  private void lambda$newMeter$2(io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.Measurement);
    Code:
       0: aload_0
       1: getfield      #59                 // Field registry:Lcom/codahale/metrics/MetricRegistry;
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokevirtual #378                // Method io/micrometer/core/instrument/Measurement.getStatistic:()Lio/micrometer/core/instrument/Statistic;
      10: invokevirtual #235                // Method io/micrometer/core/instrument/Meter$Id.withTag:(Lio/micrometer/core/instrument/Statistic;)Lio/micrometer/core/instrument/Meter$Id;
      13: invokespecial #109                // Method hierarchicalName:(Lio/micrometer/core/instrument/Meter$Id;)Ljava/lang/String;
      16: aload_2
      17: dup
      18: invokevirtual #241                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: pop
      22: invokedynamic #385,  0            // InvokeDynamic #5:getValue:(Lio/micrometer/core/instrument/Measurement;)Lcom/codahale/metrics/Gauge;
      27: invokevirtual #130                // Method com/codahale/metrics/MetricRegistry.register:(Ljava/lang/String;Lcom/codahale/metrics/Metric;)Lcom/codahale/metrics/Metric;
      30: checkcast     #387                // class com/codahale/metrics/Gauge
      33: pop
      34: return

  private static java.lang.Double lambda$newLongTaskTimer$1(io.micrometer.core.instrument.LongTaskTimer);
    Code:
       0: aload_0
       1: getstatic     #392                // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
       4: invokeinterface #396,  2          // InterfaceMethod io/micrometer/core/instrument/LongTaskTimer.duration:(Ljava/util/concurrent/TimeUnit;)D
       9: invokestatic  #402                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      12: areturn

  private java.lang.Double lambda$newGauge$0(java.lang.ref.WeakReference, java.util.function.ToDoubleFunction, io.micrometer.core.instrument.Meter$Id);
    Code:
       0: aload_1
       1: invokevirtual #407                // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
       4: astore        4
       6: aload         4
       8: ifnull        62
      11: aload_2
      12: aload         4
      14: invokeinterface #413,  2          // InterfaceMethod java/util/function/ToDoubleFunction.applyAsDouble:(Ljava/lang/Object;)D
      19: invokestatic  #402                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      22: areturn
      23: astore        5
      25: getstatic     #415                // Field logger:Lio/micrometer/core/util/internal/logging/WarnThenDebugLogger;
      28: new           #417                // class java/lang/StringBuilder
      31: dup
      32: invokespecial #418                // Method java/lang/StringBuilder."<init>":()V
      35: ldc_w         #420                // String Failed to apply the value function for the gauge \'
      38: invokevirtual #424                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_3
      42: invokevirtual #428                // Method io/micrometer/core/instrument/Meter$Id.getName:()Ljava/lang/String;
      45: invokevirtual #424                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: ldc_w         #430                // String \'.
      51: invokevirtual #424                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #433                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: aload         5
      59: invokevirtual #439                // Method io/micrometer/core/util/internal/logging/WarnThenDebugLogger.log:(Ljava/lang/String;Ljava/lang/Throwable;)V
      62: aload_0
      63: invokevirtual #441                // Method nullGaugeValue:()Ljava/lang/Double;
      66: areturn
    Exception table:
       from    to  target type
          11    22    23   Class java/lang/Throwable

  static {};
    Code:
       0: new           #435                // class io/micrometer/core/util/internal/logging/WarnThenDebugLogger
       3: dup
       4: ldc           #2                  // class io/micrometer/core/instrument/dropwizard/DropwizardMeterRegistry
       6: invokespecial #448                // Method io/micrometer/core/util/internal/logging/WarnThenDebugLogger."<init>":(Ljava/lang/Class;)V
       9: putstatic     #415                // Field logger:Lio/micrometer/core/util/internal/logging/WarnThenDebugLogger;
      12: return
}
