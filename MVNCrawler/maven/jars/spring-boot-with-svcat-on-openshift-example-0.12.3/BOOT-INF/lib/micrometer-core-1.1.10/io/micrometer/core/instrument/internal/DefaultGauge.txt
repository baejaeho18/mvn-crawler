Compiled from "DefaultGauge.java"
public class io.micrometer.core.instrument.internal.DefaultGauge<T> extends io.micrometer.core.instrument.AbstractMeter implements io.micrometer.core.instrument.Gauge {
  private static final io.micrometer.core.util.internal.logging.WarnThenDebugLogger logger;

  private final java.lang.ref.WeakReference<T> ref;

  private final java.util.function.ToDoubleFunction<T> value;

  public io.micrometer.core.instrument.internal.DefaultGauge(io.micrometer.core.instrument.Meter$Id, T, java.util.function.ToDoubleFunction<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #28                 // Method io/micrometer/core/instrument/AbstractMeter."<init>":(Lio/micrometer/core/instrument/Meter$Id;)V
       5: aload_0
       6: new           #30                 // class java/lang/ref/WeakReference
       9: dup
      10: aload_2
      11: invokespecial #33                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      14: putfield      #35                 // Field ref:Ljava/lang/ref/WeakReference;
      17: aload_0
      18: aload_3
      19: putfield      #37                 // Field value:Ljava/util/function/ToDoubleFunction;
      22: return

  public double value();
    Code:
       0: aload_0
       1: getfield      #35                 // Field ref:Ljava/lang/ref/WeakReference;
       4: invokevirtual #52                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
       7: astore_1
       8: aload_1
       9: ifnull        67
      12: aload_0
      13: getfield      #37                 // Field value:Ljava/util/function/ToDoubleFunction;
      16: aload_0
      17: getfield      #35                 // Field ref:Ljava/lang/ref/WeakReference;
      20: invokevirtual #52                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      23: invokeinterface #58,  2           // InterfaceMethod java/util/function/ToDoubleFunction.applyAsDouble:(Ljava/lang/Object;)D
      28: dreturn
      29: astore_2
      30: getstatic     #62                 // Field logger:Lio/micrometer/core/util/internal/logging/WarnThenDebugLogger;
      33: new           #64                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #67                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #69                 // String Failed to apply the value function for the gauge \'
      42: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_0
      46: invokevirtual #77                 // Method getId:()Lio/micrometer/core/instrument/Meter$Id;
      49: invokevirtual #81                 // Method io/micrometer/core/instrument/Meter$Id.getName:()Ljava/lang/String;
      52: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #83                 // String \'.
      57: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #86                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: aload_2
      64: invokevirtual #92                 // Method io/micrometer/core/util/internal/logging/WarnThenDebugLogger.log:(Ljava/lang/String;Ljava/lang/Throwable;)V
      67: ldc2_w        #93                 // double NaNd
      70: dreturn
    Exception table:
       from    to  target type
          12    28    29   Class java/lang/Throwable

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #103                // Method io/micrometer/core/instrument/util/MeterEquivalence.equals:(Lio/micrometer/core/instrument/Meter;Ljava/lang/Object;)Z
       5: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #109                // Method io/micrometer/core/instrument/util/MeterEquivalence.hashCode:(Lio/micrometer/core/instrument/Meter;)I
       4: ireturn

  static {};
    Code:
       0: new           #88                 // class io/micrometer/core/util/internal/logging/WarnThenDebugLogger
       3: dup
       4: ldc           #2                  // class io/micrometer/core/instrument/internal/DefaultGauge
       6: invokespecial #113                // Method io/micrometer/core/util/internal/logging/WarnThenDebugLogger."<init>":(Ljava/lang/Class;)V
       9: putstatic     #62                 // Field logger:Lio/micrometer/core/util/internal/logging/WarnThenDebugLogger;
      12: return
}
