Compiled from "TimedExecutor.java"
class io.micrometer.core.instrument.internal.TimedExecutor$TimedRunnable implements java.lang.Runnable {
  private final java.lang.Runnable command;

  private final io.micrometer.core.instrument.Timer$Sample idleSample;

  final io.micrometer.core.instrument.internal.TimedExecutor this$0;

  public io.micrometer.core.instrument.internal.TimedExecutor$TimedRunnable(io.micrometer.core.instrument.internal.TimedExecutor, java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field this$0:Lio/micrometer/core/instrument/internal/TimedExecutor;
       5: aload_0
       6: invokespecial #28                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #30                 // Field command:Ljava/lang/Runnable;
      14: aload_0
      15: aload_1
      16: invokestatic  #34                 // Method io/micrometer/core/instrument/internal/TimedExecutor.access$000:(Lio/micrometer/core/instrument/internal/TimedExecutor;)Lio/micrometer/core/instrument/MeterRegistry;
      19: invokestatic  #38                 // InterfaceMethod io/micrometer/core/instrument/Timer.start:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Timer$Sample;
      22: putfield      #40                 // Field idleSample:Lio/micrometer/core/instrument/Timer$Sample;
      25: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #40                 // Field idleSample:Lio/micrometer/core/instrument/Timer$Sample;
       4: aload_0
       5: getfield      #25                 // Field this$0:Lio/micrometer/core/instrument/internal/TimedExecutor;
       8: invokestatic  #47                 // Method io/micrometer/core/instrument/internal/TimedExecutor.access$100:(Lio/micrometer/core/instrument/internal/TimedExecutor;)Lio/micrometer/core/instrument/Timer;
      11: invokevirtual #51                 // Method io/micrometer/core/instrument/Timer$Sample.stop:(Lio/micrometer/core/instrument/Timer;)J
      14: pop2
      15: aload_0
      16: getfield      #25                 // Field this$0:Lio/micrometer/core/instrument/internal/TimedExecutor;
      19: invokestatic  #34                 // Method io/micrometer/core/instrument/internal/TimedExecutor.access$000:(Lio/micrometer/core/instrument/internal/TimedExecutor;)Lio/micrometer/core/instrument/MeterRegistry;
      22: invokestatic  #38                 // InterfaceMethod io/micrometer/core/instrument/Timer.start:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Timer$Sample;
      25: astore_1
      26: aload_0
      27: getfield      #30                 // Field command:Ljava/lang/Runnable;
      30: invokeinterface #53,  1           // InterfaceMethod java/lang/Runnable.run:()V
      35: aload_1
      36: aload_0
      37: getfield      #25                 // Field this$0:Lio/micrometer/core/instrument/internal/TimedExecutor;
      40: invokestatic  #56                 // Method io/micrometer/core/instrument/internal/TimedExecutor.access$200:(Lio/micrometer/core/instrument/internal/TimedExecutor;)Lio/micrometer/core/instrument/Timer;
      43: invokevirtual #51                 // Method io/micrometer/core/instrument/Timer$Sample.stop:(Lio/micrometer/core/instrument/Timer;)J
      46: pop2
      47: goto          65
      50: astore_2
      51: aload_1
      52: aload_0
      53: getfield      #25                 // Field this$0:Lio/micrometer/core/instrument/internal/TimedExecutor;
      56: invokestatic  #56                 // Method io/micrometer/core/instrument/internal/TimedExecutor.access$200:(Lio/micrometer/core/instrument/internal/TimedExecutor;)Lio/micrometer/core/instrument/Timer;
      59: invokevirtual #51                 // Method io/micrometer/core/instrument/Timer$Sample.stop:(Lio/micrometer/core/instrument/Timer;)J
      62: pop2
      63: aload_2
      64: athrow
      65: return
    Exception table:
       from    to  target type
          26    35    50   any
}
