Compiled from "CompositeTimeGauge.java"
class io.micrometer.core.instrument.composite.CompositeTimeGauge<T> extends io.micrometer.core.instrument.composite.AbstractCompositeMeter<io.micrometer.core.instrument.TimeGauge> implements io.micrometer.core.instrument.TimeGauge {
  private final java.lang.ref.WeakReference<T> ref;

  private final java.util.function.ToDoubleFunction<T> f;

  private final java.util.concurrent.TimeUnit fUnit;

  io.micrometer.core.instrument.composite.CompositeTimeGauge(io.micrometer.core.instrument.Meter$Id, T, java.util.concurrent.TimeUnit, java.util.function.ToDoubleFunction<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #31                 // Method io/micrometer/core/instrument/composite/AbstractCompositeMeter."<init>":(Lio/micrometer/core/instrument/Meter$Id;)V
       5: aload_0
       6: new           #33                 // class java/lang/ref/WeakReference
       9: dup
      10: aload_2
      11: invokespecial #36                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      14: putfield      #38                 // Field ref:Ljava/lang/ref/WeakReference;
      17: aload_0
      18: aload         4
      20: putfield      #40                 // Field f:Ljava/util/function/ToDoubleFunction;
      23: aload_0
      24: aload_3
      25: putfield      #42                 // Field fUnit:Ljava/util/concurrent/TimeUnit;
      28: return

  public double value();
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method firstChild:()Lio/micrometer/core/instrument/Meter;
       4: checkcast     #7                  // class io/micrometer/core/instrument/TimeGauge
       7: invokeinterface #58,  1           // InterfaceMethod io/micrometer/core/instrument/TimeGauge.value:()D
      12: dreturn

  public java.util.concurrent.TimeUnit baseTimeUnit();
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method firstChild:()Lio/micrometer/core/instrument/Meter;
       4: checkcast     #7                  // class io/micrometer/core/instrument/TimeGauge
       7: invokeinterface #62,  1           // InterfaceMethod io/micrometer/core/instrument/TimeGauge.baseTimeUnit:()Ljava/util/concurrent/TimeUnit;
      12: areturn

  io.micrometer.core.instrument.TimeGauge newNoopMeter();
    Code:
       0: new           #66                 // class io/micrometer/core/instrument/noop/NoopTimeGauge
       3: dup
       4: aload_0
       5: invokevirtual #70                 // Method getId:()Lio/micrometer/core/instrument/Meter$Id;
       8: invokespecial #71                 // Method io/micrometer/core/instrument/noop/NoopTimeGauge."<init>":(Lio/micrometer/core/instrument/Meter$Id;)V
      11: areturn

  io.micrometer.core.instrument.TimeGauge registerNewMeter(io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: aload_0
       1: getfield      #38                 // Field ref:Ljava/lang/ref/WeakReference;
       4: invokevirtual #77                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
       7: astore_2
       8: aload_2
       9: ifnonnull     14
      12: aconst_null
      13: areturn
      14: aload_0
      15: invokevirtual #70                 // Method getId:()Lio/micrometer/core/instrument/Meter$Id;
      18: invokevirtual #83                 // Method io/micrometer/core/instrument/Meter$Id.getName:()Ljava/lang/String;
      21: aload_2
      22: aload_0
      23: getfield      #42                 // Field fUnit:Ljava/util/concurrent/TimeUnit;
      26: aload_0
      27: getfield      #40                 // Field f:Ljava/util/function/ToDoubleFunction;
      30: invokestatic  #87                 // InterfaceMethod io/micrometer/core/instrument/TimeGauge.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/concurrent/TimeUnit;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/TimeGauge$Builder;
      33: aload_0
      34: invokevirtual #70                 // Method getId:()Lio/micrometer/core/instrument/Meter$Id;
      37: invokevirtual #91                 // Method io/micrometer/core/instrument/Meter$Id.getTagsAsIterable:()Ljava/lang/Iterable;
      40: invokevirtual #95                 // Method io/micrometer/core/instrument/TimeGauge$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/TimeGauge$Builder;
      43: aload_0
      44: invokevirtual #70                 // Method getId:()Lio/micrometer/core/instrument/Meter$Id;
      47: invokevirtual #98                 // Method io/micrometer/core/instrument/Meter$Id.getDescription:()Ljava/lang/String;
      50: invokevirtual #102                // Method io/micrometer/core/instrument/TimeGauge$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/TimeGauge$Builder;
      53: aload_1
      54: invokevirtual #105                // Method io/micrometer/core/instrument/TimeGauge$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/TimeGauge;
      57: areturn

  io.micrometer.core.instrument.Meter registerNewMeter(io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #110                // Method registerNewMeter:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/TimeGauge;
       5: areturn

  io.micrometer.core.instrument.Meter newNoopMeter();
    Code:
       0: aload_0
       1: invokevirtual #112                // Method newNoopMeter:()Lio/micrometer/core/instrument/TimeGauge;
       4: areturn
}
