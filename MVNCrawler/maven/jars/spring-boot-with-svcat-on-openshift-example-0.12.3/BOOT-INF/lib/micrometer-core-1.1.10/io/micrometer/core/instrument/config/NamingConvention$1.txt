Compiled from "NamingConvention.java"
final class io.micrometer.core.instrument.config.NamingConvention$1 implements io.micrometer.core.instrument.config.NamingConvention {
  io.micrometer.core.instrument.config.NamingConvention$1();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.String name(java.lang.String, io.micrometer.core.instrument.Meter$Type, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #30                 // Method toSnakeCase:(Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String tagKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #30                 // Method toSnakeCase:(Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  private java.lang.String toSnakeCase(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #38                 // String \\.
       3: invokevirtual #44                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       6: invokestatic  #50                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
       9: invokedynamic #71,  0             // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      14: invokeinterface #77,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      19: ldc           #79                 // String _
      21: invokestatic  #85                 // Method java/util/stream/Collectors.joining:(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;
      24: invokeinterface #89,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      29: checkcast     #40                 // class java/lang/String
      32: areturn
}
