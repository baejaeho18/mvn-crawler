Compiled from "LogbackMetrics.java"
public class io.micrometer.core.instrument.binder.logging.LogbackMetrics implements io.micrometer.core.instrument.binder.MeterBinder,java.lang.AutoCloseable {
  static java.lang.ThreadLocal<java.lang.Boolean> ignoreMetrics;

  private final java.lang.Iterable<io.micrometer.core.instrument.Tag> tags;

  private final ch.qos.logback.classic.LoggerContext loggerContext;

  private final java.util.Map<io.micrometer.core.instrument.MeterRegistry, io.micrometer.core.instrument.binder.logging.MetricsTurboFilter> metricsTurboFilters;

  public io.micrometer.core.instrument.binder.logging.LogbackMetrics();
    Code:
       0: aload_0
       1: invokestatic  #30                 // Method java/util/Collections.emptyList:()Ljava/util/List;
       4: invokespecial #33                 // Method "<init>":(Ljava/lang/Iterable;)V
       7: return

  public io.micrometer.core.instrument.binder.logging.LogbackMetrics(java.lang.Iterable<io.micrometer.core.instrument.Tag>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #42                 // Method org/slf4j/LoggerFactory.getILoggerFactory:()Lorg/slf4j/ILoggerFactory;
       5: checkcast     #44                 // class ch/qos/logback/classic/LoggerContext
       8: invokespecial #47                 // Method "<init>":(Ljava/lang/Iterable;Lch/qos/logback/classic/LoggerContext;)V
      11: return

  public io.micrometer.core.instrument.binder.logging.LogbackMetrics(java.lang.Iterable<io.micrometer.core.instrument.Tag>, ch.qos.logback.classic.LoggerContext);
    Code:
       0: aload_0
       1: invokespecial #50                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #52                 // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #53                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #55                 // Field metricsTurboFilters:Ljava/util/Map;
      15: aload_0
      16: aload_1
      17: putfield      #57                 // Field tags:Ljava/lang/Iterable;
      20: aload_0
      21: aload_2
      22: putfield      #59                 // Field loggerContext:Lch/qos/logback/classic/LoggerContext;
      25: return

  public void bindTo(io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: new           #64                 // class io/micrometer/core/instrument/binder/logging/MetricsTurboFilter
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #57                 // Field tags:Ljava/lang/Iterable;
       9: invokespecial #67                 // Method io/micrometer/core/instrument/binder/logging/MetricsTurboFilter."<init>":(Lio/micrometer/core/instrument/MeterRegistry;Ljava/lang/Iterable;)V
      12: astore_2
      13: aload_0
      14: getfield      #55                 // Field metricsTurboFilters:Ljava/util/Map;
      17: aload_1
      18: aload_2
      19: invokeinterface #73,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: aload_0
      26: getfield      #59                 // Field loggerContext:Lch/qos/logback/classic/LoggerContext;
      29: aload_2
      30: invokevirtual #77                 // Method ch/qos/logback/classic/LoggerContext.addTurboFilter:(Lch/qos/logback/classic/turbo/TurboFilter;)V
      33: return

  public static void ignoreMetrics(java.lang.Runnable);
    Code:
       0: getstatic     #84                 // Field ignoreMetrics:Ljava/lang/ThreadLocal;
       3: iconst_1
       4: invokestatic  #90                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #96                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      10: aload_0
      11: invokeinterface #101,  1          // InterfaceMethod java/lang/Runnable.run:()V
      16: getstatic     #84                 // Field ignoreMetrics:Ljava/lang/ThreadLocal;
      19: invokevirtual #104                // Method java/lang/ThreadLocal.remove:()V
      22: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #55                 // Field metricsTurboFilters:Ljava/util/Map;
       4: invokeinterface #111,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokeinterface #117,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #123,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          49
      24: aload_1
      25: invokeinterface #127,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #64                 // class io/micrometer/core/instrument/binder/logging/MetricsTurboFilter
      33: astore_2
      34: aload_0
      35: getfield      #59                 // Field loggerContext:Lch/qos/logback/classic/LoggerContext;
      38: invokevirtual #131                // Method ch/qos/logback/classic/LoggerContext.getTurboFilterList:()Lch/qos/logback/classic/spi/TurboFilterList;
      41: aload_2
      42: invokevirtual #136                // Method ch/qos/logback/classic/spi/TurboFilterList.remove:(Ljava/lang/Object;)Z
      45: pop
      46: goto          15
      49: return

  static {};
    Code:
       0: new           #92                 // class java/lang/ThreadLocal
       3: dup
       4: invokespecial #139                // Method java/lang/ThreadLocal."<init>":()V
       7: putstatic     #84                 // Field ignoreMetrics:Ljava/lang/ThreadLocal;
      10: return
}
