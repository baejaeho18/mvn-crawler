Compiled from "HashPMap.java"
public final class io.micrometer.shaded.org.pcollections.HashPMap<K, V> extends java.util.AbstractMap<K, V> implements io.micrometer.shaded.org.pcollections.PMap<K, V>, java.io.Serializable {
  private static final long serialVersionUID;

  private final io.micrometer.shaded.org.pcollections.PMap<java.lang.Integer, io.micrometer.shaded.org.pcollections.PSequence<java.util.Map$Entry<K, V>>> intMap;

  private final int size;

  private transient java.util.Set<java.util.Map$Entry<K, V>> entrySet;

  public static <K, V> io.micrometer.shaded.org.pcollections.HashPMap<K, V> empty(io.micrometer.shaded.org.pcollections.PMap<java.lang.Integer, io.micrometer.shaded.org.pcollections.PSequence<java.util.Map$Entry<K, V>>>);
    Code:
       0: new           #2                  // class io/micrometer/shaded/org/pcollections/HashPMap
       3: dup
       4: aload_0
       5: aload_0
       6: invokeinterface #42,  1           // InterfaceMethod io/micrometer/shaded/org/pcollections/PMap.keySet:()Ljava/util/Set;
      11: invokeinterface #46,  2           // InterfaceMethod io/micrometer/shaded/org/pcollections/PMap.minusAll:(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/PMap;
      16: iconst_0
      17: invokespecial #50                 // Method "<init>":(Lio/micrometer/shaded/org/pcollections/PMap;I)V
      20: areturn

  private io.micrometer.shaded.org.pcollections.HashPMap(io.micrometer.shaded.org.pcollections.PMap<java.lang.Integer, io.micrometer.shaded.org.pcollections.PSequence<java.util.Map$Entry<K, V>>>, int);
    Code:
       0: aload_0
       1: invokespecial #54                 // Method java/util/AbstractMap."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #56                 // Field entrySet:Ljava/util/Set;
       9: aload_0
      10: aload_1
      11: putfield      #58                 // Field intMap:Lio/micrometer/shaded/org/pcollections/PMap;
      14: aload_0
      15: iload_2
      16: putfield      #60                 // Field size:I
      19: return

  public java.util.Set<java.util.Map$Entry<K, V>> entrySet();
    Code:
       0: aload_0
       1: getfield      #56                 // Field entrySet:Ljava/util/Set;
       4: ifnonnull     19
       7: aload_0
       8: new           #15                 // class io/micrometer/shaded/org/pcollections/HashPMap$1
      11: dup
      12: aload_0
      13: invokespecial #67                 // Method io/micrometer/shaded/org/pcollections/HashPMap$1."<init>":(Lio/micrometer/shaded/org/pcollections/HashPMap;)V
      16: putfield      #56                 // Field entrySet:Ljava/util/Set;
      19: aload_0
      20: getfield      #56                 // Field entrySet:Ljava/util/Set;
      23: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #60                 // Field size:I
       4: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #75                 // Method java/lang/Object.hashCode:()I
       5: invokespecial #79                 // Method getEntries:(I)Lio/micrometer/shaded/org/pcollections/PSequence;
       8: aload_1
       9: invokestatic  #83                 // Method keyIndexIn:(Lio/micrometer/shaded/org/pcollections/PSequence;Ljava/lang/Object;)I
      12: iconst_m1
      13: if_icmpeq     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public V get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #75                 // Method java/lang/Object.hashCode:()I
       5: invokespecial #79                 // Method getEntries:(I)Lio/micrometer/shaded/org/pcollections/PSequence;
       8: astore_2
       9: aload_2
      10: invokeinterface #94,  1           // InterfaceMethod io/micrometer/shaded/org/pcollections/PSequence.iterator:()Ljava/util/Iterator;
      15: astore_3
      16: aload_3
      17: invokeinterface #100,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          61
      25: aload_3
      26: invokeinterface #104,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #17                 // class java/util/Map$Entry
      34: astore        4
      36: aload         4
      38: invokeinterface #107,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      43: aload_1
      44: invokevirtual #110                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      47: ifeq          58
      50: aload         4
      52: invokeinterface #113,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      57: areturn
      58: goto          16
      61: aconst_null
      62: areturn

  public io.micrometer.shaded.org.pcollections.HashPMap<K, V> plusAll(java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: astore_2
       2: aload_1
       3: invokeinterface #124,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       8: invokeinterface #127,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      13: astore_3
      14: aload_3
      15: invokeinterface #100,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          56
      23: aload_3
      24: invokeinterface #104,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #17                 // class java/util/Map$Entry
      32: astore        4
      34: aload_2
      35: aload         4
      37: invokeinterface #107,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      42: aload         4
      44: invokeinterface #113,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      49: invokevirtual #131                // Method plus:(Ljava/lang/Object;Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/HashPMap;
      52: astore_2
      53: goto          14
      56: aload_2
      57: areturn

  public io.micrometer.shaded.org.pcollections.HashPMap<K, V> minusAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: astore_2
       2: aload_1
       3: invokeinterface #141,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       8: astore_3
       9: aload_3
      10: invokeinterface #100,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          36
      18: aload_3
      19: invokeinterface #104,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: astore        4
      26: aload_2
      27: aload         4
      29: invokevirtual #145                // Method minus:(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/HashPMap;
      32: astore_2
      33: goto          9
      36: aload_2
      37: areturn

  public io.micrometer.shaded.org.pcollections.HashPMap<K, V> plus(K, V);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #75                 // Method java/lang/Object.hashCode:()I
       5: invokespecial #79                 // Method getEntries:(I)Lio/micrometer/shaded/org/pcollections/PSequence;
       8: astore_3
       9: aload_3
      10: invokeinterface #151,  1          // InterfaceMethod io/micrometer/shaded/org/pcollections/PSequence.size:()I
      15: istore        4
      17: aload_3
      18: aload_1
      19: invokestatic  #83                 // Method keyIndexIn:(Lio/micrometer/shaded/org/pcollections/PSequence;Ljava/lang/Object;)I
      22: istore        5
      24: iload         5
      26: iconst_m1
      27: if_icmpeq     39
      30: aload_3
      31: iload         5
      33: invokeinterface #153,  2          // InterfaceMethod io/micrometer/shaded/org/pcollections/PSequence.minus:(I)Lio/micrometer/shaded/org/pcollections/PSequence;
      38: astore_3
      39: aload_3
      40: new           #22                 // class java/util/AbstractMap$SimpleImmutableEntry
      43: dup
      44: aload_1
      45: aload_2
      46: invokespecial #156                // Method java/util/AbstractMap$SimpleImmutableEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      49: invokeinterface #159,  2          // InterfaceMethod io/micrometer/shaded/org/pcollections/PSequence.plus:(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PSequence;
      54: astore_3
      55: new           #2                  // class io/micrometer/shaded/org/pcollections/HashPMap
      58: dup
      59: aload_0
      60: getfield      #58                 // Field intMap:Lio/micrometer/shaded/org/pcollections/PMap;
      63: aload_1
      64: invokevirtual #75                 // Method java/lang/Object.hashCode:()I
      67: invokestatic  #165                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      70: aload_3
      71: invokeinterface #168,  3          // InterfaceMethod io/micrometer/shaded/org/pcollections/PMap.plus:(Ljava/lang/Object;Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PMap;
      76: aload_0
      77: getfield      #60                 // Field size:I
      80: iload         4
      82: isub
      83: aload_3
      84: invokeinterface #151,  1          // InterfaceMethod io/micrometer/shaded/org/pcollections/PSequence.size:()I
      89: iadd
      90: invokespecial #50                 // Method "<init>":(Lio/micrometer/shaded/org/pcollections/PMap;I)V
      93: areturn

  public io.micrometer.shaded.org.pcollections.HashPMap<K, V> minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #75                 // Method java/lang/Object.hashCode:()I
       5: invokespecial #79                 // Method getEntries:(I)Lio/micrometer/shaded/org/pcollections/PSequence;
       8: astore_2
       9: aload_2
      10: aload_1
      11: invokestatic  #83                 // Method keyIndexIn:(Lio/micrometer/shaded/org/pcollections/PSequence;Ljava/lang/Object;)I
      14: istore_3
      15: iload_3
      16: iconst_m1
      17: if_icmpne     22
      20: aload_0
      21: areturn
      22: aload_2
      23: iload_3
      24: invokeinterface #153,  2          // InterfaceMethod io/micrometer/shaded/org/pcollections/PSequence.minus:(I)Lio/micrometer/shaded/org/pcollections/PSequence;
      29: astore_2
      30: aload_2
      31: invokeinterface #151,  1          // InterfaceMethod io/micrometer/shaded/org/pcollections/PSequence.size:()I
      36: ifne          69
      39: new           #2                  // class io/micrometer/shaded/org/pcollections/HashPMap
      42: dup
      43: aload_0
      44: getfield      #58                 // Field intMap:Lio/micrometer/shaded/org/pcollections/PMap;
      47: aload_1
      48: invokevirtual #75                 // Method java/lang/Object.hashCode:()I
      51: invokestatic  #165                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      54: invokeinterface #177,  2          // InterfaceMethod io/micrometer/shaded/org/pcollections/PMap.minus:(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PMap;
      59: aload_0
      60: getfield      #60                 // Field size:I
      63: iconst_1
      64: isub
      65: invokespecial #50                 // Method "<init>":(Lio/micrometer/shaded/org/pcollections/PMap;I)V
      68: areturn
      69: new           #2                  // class io/micrometer/shaded/org/pcollections/HashPMap
      72: dup
      73: aload_0
      74: getfield      #58                 // Field intMap:Lio/micrometer/shaded/org/pcollections/PMap;
      77: aload_1
      78: invokevirtual #75                 // Method java/lang/Object.hashCode:()I
      81: invokestatic  #165                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      84: aload_2
      85: invokeinterface #168,  3          // InterfaceMethod io/micrometer/shaded/org/pcollections/PMap.plus:(Ljava/lang/Object;Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PMap;
      90: aload_0
      91: getfield      #60                 // Field size:I
      94: iconst_1
      95: isub
      96: invokespecial #50                 // Method "<init>":(Lio/micrometer/shaded/org/pcollections/PMap;I)V
      99: areturn

  private io.micrometer.shaded.org.pcollections.PSequence<java.util.Map$Entry<K, V>> getEntries(int);
    Code:
       0: aload_0
       1: getfield      #58                 // Field intMap:Lio/micrometer/shaded/org/pcollections/PMap;
       4: iload_1
       5: invokestatic  #165                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #180,  2          // InterfaceMethod io/micrometer/shaded/org/pcollections/PMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #90                 // class io/micrometer/shaded/org/pcollections/PSequence
      16: astore_2
      17: aload_2
      18: ifnonnull     25
      21: invokestatic  #185                // Method io/micrometer/shaded/org/pcollections/ConsPStack.empty:()Lio/micrometer/shaded/org/pcollections/ConsPStack;
      24: areturn
      25: aload_2
      26: areturn

  private static <K, V> int keyIndexIn(io.micrometer.shaded.org.pcollections.PSequence<java.util.Map$Entry<K, V>>, java.lang.Object);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: invokeinterface #94,  1           // InterfaceMethod io/micrometer/shaded/org/pcollections/PSequence.iterator:()Ljava/util/Iterator;
       8: astore_3
       9: aload_3
      10: invokeinterface #100,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          51
      18: aload_3
      19: invokeinterface #104,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #17                 // class java/util/Map$Entry
      27: astore        4
      29: aload         4
      31: invokeinterface #107,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      36: aload_1
      37: invokevirtual #110                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      40: ifeq          45
      43: iload_2
      44: ireturn
      45: iinc          2, 1
      48: goto          9
      51: iconst_m1
      52: ireturn

  public io.micrometer.shaded.org.pcollections.PMap minusAll(java.util.Collection);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #189                // Method minusAll:(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/HashPMap;
       5: areturn

  public io.micrometer.shaded.org.pcollections.PMap minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #145                // Method minus:(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/HashPMap;
       5: areturn

  public io.micrometer.shaded.org.pcollections.PMap plusAll(java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #192                // Method plusAll:(Ljava/util/Map;)Lio/micrometer/shaded/org/pcollections/HashPMap;
       5: areturn

  public io.micrometer.shaded.org.pcollections.PMap plus(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #131                // Method plus:(Ljava/lang/Object;Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/HashPMap;
       6: areturn

  static int access$000(io.micrometer.shaded.org.pcollections.HashPMap);
    Code:
       0: aload_0
       1: getfield      #60                 // Field size:I
       4: ireturn

  static io.micrometer.shaded.org.pcollections.PMap access$100(io.micrometer.shaded.org.pcollections.HashPMap);
    Code:
       0: aload_0
       1: getfield      #58                 // Field intMap:Lio/micrometer/shaded/org/pcollections/PMap;
       4: areturn
}
