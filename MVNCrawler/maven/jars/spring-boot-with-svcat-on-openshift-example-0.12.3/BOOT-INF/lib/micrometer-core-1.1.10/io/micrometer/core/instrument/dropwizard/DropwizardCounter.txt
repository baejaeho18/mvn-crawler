Compiled from "DropwizardCounter.java"
public class io.micrometer.core.instrument.dropwizard.DropwizardCounter extends io.micrometer.core.instrument.AbstractMeter implements io.micrometer.core.instrument.Counter {
  private final com.codahale.metrics.Meter impl;

  io.micrometer.core.instrument.dropwizard.DropwizardCounter(io.micrometer.core.instrument.Meter$Id, com.codahale.metrics.Meter);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #19                 // Method io/micrometer/core/instrument/AbstractMeter."<init>":(Lio/micrometer/core/instrument/Meter$Id;)V
       5: aload_0
       6: aload_2
       7: putfield      #21                 // Field impl:Lcom/codahale/metrics/Meter;
      10: return

  public void increment(double);
    Code:
       0: aload_0
       1: getfield      #21                 // Field impl:Lcom/codahale/metrics/Meter;
       4: dload_1
       5: d2l
       6: invokevirtual #33                 // Method com/codahale/metrics/Meter.mark:(J)V
       9: return

  public double count();
    Code:
       0: aload_0
       1: getfield      #21                 // Field impl:Lcom/codahale/metrics/Meter;
       4: invokevirtual #41                 // Method com/codahale/metrics/Meter.getCount:()J
       7: l2d
       8: dreturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #48                 // Method io/micrometer/core/instrument/util/MeterEquivalence.equals:(Lio/micrometer/core/instrument/Meter;Ljava/lang/Object;)Z
       5: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #55                 // Method io/micrometer/core/instrument/util/MeterEquivalence.hashCode:(Lio/micrometer/core/instrument/Meter;)I
       4: ireturn
}
