Compiled from "CompositeFunctionCounter.java"
public class io.micrometer.core.instrument.composite.CompositeFunctionCounter<T> extends io.micrometer.core.instrument.composite.AbstractCompositeMeter<io.micrometer.core.instrument.FunctionCounter> implements io.micrometer.core.instrument.FunctionCounter {
  private final java.lang.ref.WeakReference<T> ref;

  private final java.util.function.ToDoubleFunction<T> f;

  io.micrometer.core.instrument.composite.CompositeFunctionCounter(io.micrometer.core.instrument.Meter$Id, T, java.util.function.ToDoubleFunction<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #28                 // Method io/micrometer/core/instrument/composite/AbstractCompositeMeter."<init>":(Lio/micrometer/core/instrument/Meter$Id;)V
       5: aload_0
       6: new           #30                 // class java/lang/ref/WeakReference
       9: dup
      10: aload_2
      11: invokespecial #33                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      14: putfield      #35                 // Field ref:Ljava/lang/ref/WeakReference;
      17: aload_0
      18: aload_3
      19: putfield      #37                 // Field f:Ljava/util/function/ToDoubleFunction;
      22: return

  public double count();
    Code:
       0: aload_0
       1: getfield      #35                 // Field ref:Ljava/lang/ref/WeakReference;
       4: invokevirtual #51                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
       7: astore_1
       8: aload_1
       9: ifnull        25
      12: aload_0
      13: getfield      #37                 // Field f:Ljava/util/function/ToDoubleFunction;
      16: aload_1
      17: invokeinterface #57,  2           // InterfaceMethod java/util/function/ToDoubleFunction.applyAsDouble:(Ljava/lang/Object;)D
      22: goto          26
      25: dconst_0
      26: dreturn

  io.micrometer.core.instrument.FunctionCounter newNoopMeter();
    Code:
       0: new           #64                 // class io/micrometer/core/instrument/noop/NoopFunctionCounter
       3: dup
       4: aload_0
       5: invokevirtual #68                 // Method getId:()Lio/micrometer/core/instrument/Meter$Id;
       8: invokespecial #69                 // Method io/micrometer/core/instrument/noop/NoopFunctionCounter."<init>":(Lio/micrometer/core/instrument/Meter$Id;)V
      11: areturn

  io.micrometer.core.instrument.FunctionCounter registerNewMeter(io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: aload_0
       1: getfield      #35                 // Field ref:Ljava/lang/ref/WeakReference;
       4: invokevirtual #51                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
       7: astore_2
       8: aload_2
       9: ifnonnull     14
      12: aconst_null
      13: areturn
      14: aload_0
      15: invokevirtual #68                 // Method getId:()Lio/micrometer/core/instrument/Meter$Id;
      18: invokevirtual #75                 // Method io/micrometer/core/instrument/Meter$Id.getName:()Ljava/lang/String;
      21: aload_2
      22: aload_0
      23: getfield      #37                 // Field f:Ljava/util/function/ToDoubleFunction;
      26: invokestatic  #79                 // InterfaceMethod io/micrometer/core/instrument/FunctionCounter.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
      29: aload_0
      30: invokevirtual #68                 // Method getId:()Lio/micrometer/core/instrument/Meter$Id;
      33: invokevirtual #83                 // Method io/micrometer/core/instrument/Meter$Id.getTagsAsIterable:()Ljava/lang/Iterable;
      36: invokevirtual #87                 // Method io/micrometer/core/instrument/FunctionCounter$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
      39: aload_0
      40: invokevirtual #68                 // Method getId:()Lio/micrometer/core/instrument/Meter$Id;
      43: invokevirtual #90                 // Method io/micrometer/core/instrument/Meter$Id.getDescription:()Ljava/lang/String;
      46: invokevirtual #94                 // Method io/micrometer/core/instrument/FunctionCounter$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
      49: aload_0
      50: invokevirtual #68                 // Method getId:()Lio/micrometer/core/instrument/Meter$Id;
      53: invokevirtual #97                 // Method io/micrometer/core/instrument/Meter$Id.getBaseUnit:()Ljava/lang/String;
      56: invokevirtual #100                // Method io/micrometer/core/instrument/FunctionCounter$Builder.baseUnit:(Ljava/lang/String;)Lio/micrometer/core/instrument/FunctionCounter$Builder;
      59: aload_1
      60: invokevirtual #103                // Method io/micrometer/core/instrument/FunctionCounter$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/FunctionCounter;
      63: areturn

  io.micrometer.core.instrument.Meter registerNewMeter(io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #108                // Method registerNewMeter:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/FunctionCounter;
       5: areturn

  io.micrometer.core.instrument.Meter newNoopMeter();
    Code:
       0: aload_0
       1: invokevirtual #111                // Method newNoopMeter:()Lio/micrometer/core/instrument/FunctionCounter;
       4: areturn
}
