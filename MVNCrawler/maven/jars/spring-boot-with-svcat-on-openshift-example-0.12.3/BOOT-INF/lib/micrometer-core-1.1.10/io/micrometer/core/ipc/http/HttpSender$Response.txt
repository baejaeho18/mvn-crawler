Compiled from "HttpSender.java"
public class io.micrometer.core.ipc.http.HttpSender$Response {
  public static final java.lang.String NO_RESPONSE_BODY;

  private final int code;

  private final java.lang.String body;

  public io.micrometer.core.ipc.http.HttpSender$Response(int, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #25                 // Field code:I
       9: aload_0
      10: aload_2
      11: invokestatic  #31                 // Method io/micrometer/core/instrument/util/StringUtils.isBlank:(Ljava/lang/String;)Z
      14: ifeq          22
      17: ldc           #14                 // String <no response body>
      19: goto          23
      22: aload_2
      23: putfield      #35                 // Field body:Ljava/lang/String;
      26: return

  public int code();
    Code:
       0: aload_0
       1: getfield      #25                 // Field code:I
       4: ireturn

  public java.lang.String body();
    Code:
       0: aload_0
       1: getfield      #35                 // Field body:Ljava/lang/String;
       4: areturn

  public io.micrometer.core.ipc.http.HttpSender$Response onSuccess(java.util.function.Consumer<io.micrometer.core.ipc.http.HttpSender$Response>);
    Code:
       0: getstatic     #46                 // Field io/micrometer/core/ipc/http/HttpSender$1.$SwitchMap$io$micrometer$core$ipc$http$HttpStatusClass:[I
       3: aload_0
       4: getfield      #25                 // Field code:I
       7: invokestatic  #52                 // Method io/micrometer/core/ipc/http/HttpStatusClass.valueOf:(I)Lio/micrometer/core/ipc/http/HttpStatusClass;
      10: invokevirtual #55                 // Method io/micrometer/core/ipc/http/HttpStatusClass.ordinal:()I
      13: iaload
      14: lookupswitch  { // 2
                     1: 40
                     2: 40
               default: 47
          }
      40: aload_1
      41: aload_0
      42: invokeinterface #61,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      47: aload_0
      48: areturn

  public io.micrometer.core.ipc.http.HttpSender$Response onError(java.util.function.Consumer<io.micrometer.core.ipc.http.HttpSender$Response>);
    Code:
       0: getstatic     #46                 // Field io/micrometer/core/ipc/http/HttpSender$1.$SwitchMap$io$micrometer$core$ipc$http$HttpStatusClass:[I
       3: aload_0
       4: getfield      #25                 // Field code:I
       7: invokestatic  #52                 // Method io/micrometer/core/ipc/http/HttpStatusClass.valueOf:(I)Lio/micrometer/core/ipc/http/HttpStatusClass;
      10: invokevirtual #55                 // Method io/micrometer/core/ipc/http/HttpStatusClass.ordinal:()I
      13: iaload
      14: lookupswitch  { // 2
                     3: 40
                     4: 40
               default: 47
          }
      40: aload_1
      41: aload_0
      42: invokeinterface #61,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      47: aload_0
      48: areturn

  public boolean isSuccessful();
    Code:
       0: getstatic     #46                 // Field io/micrometer/core/ipc/http/HttpSender$1.$SwitchMap$io$micrometer$core$ipc$http$HttpStatusClass:[I
       3: aload_0
       4: getfield      #25                 // Field code:I
       7: invokestatic  #52                 // Method io/micrometer/core/ipc/http/HttpStatusClass.valueOf:(I)Lio/micrometer/core/ipc/http/HttpStatusClass;
      10: invokevirtual #55                 // Method io/micrometer/core/ipc/http/HttpStatusClass.ordinal:()I
      13: iaload
      14: lookupswitch  { // 2
                     1: 40
                     2: 40
               default: 42
          }
      40: iconst_1
      41: ireturn
      42: iconst_0
      43: ireturn
}
