Compiled from "Timer.java"
public class io.micrometer.core.instrument.Timer$Sample {
  private final long startTime;

  private final io.micrometer.core.instrument.Clock clock;

  io.micrometer.core.instrument.Timer$Sample(io.micrometer.core.instrument.Clock);
    Code:
       0: aload_0
       1: invokespecial #17                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #19                 // Field clock:Lio/micrometer/core/instrument/Clock;
       9: aload_0
      10: aload_1
      11: invokeinterface #25,  1           // InterfaceMethod io/micrometer/core/instrument/Clock.monotonicTime:()J
      16: putfield      #27                 // Field startTime:J
      19: return

  public long stop(io.micrometer.core.instrument.Timer);
    Code:
       0: aload_0
       1: getfield      #19                 // Field clock:Lio/micrometer/core/instrument/Clock;
       4: invokeinterface #25,  1           // InterfaceMethod io/micrometer/core/instrument/Clock.monotonicTime:()J
       9: aload_0
      10: getfield      #27                 // Field startTime:J
      13: lsub
      14: lstore_2
      15: aload_1
      16: lload_2
      17: getstatic     #37                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      20: invokeinterface #41,  4           // InterfaceMethod io/micrometer/core/instrument/Timer.record:(JLjava/util/concurrent/TimeUnit;)V
      25: lload_2
      26: lreturn
}
