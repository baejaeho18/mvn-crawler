Compiled from "Counter.java"
public class io.micrometer.core.instrument.Counter$Builder {
  private final java.lang.String name;

  private io.micrometer.core.instrument.Tags tags;

  private java.lang.String description;

  private java.lang.String baseUnit;

  private io.micrometer.core.instrument.Counter$Builder(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #30                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #36                 // Method io/micrometer/core/instrument/Tags.empty:()Lio/micrometer/core/instrument/Tags;
       8: putfield      #38                 // Field tags:Lio/micrometer/core/instrument/Tags;
      11: aload_0
      12: aload_1
      13: putfield      #40                 // Field name:Ljava/lang/String;
      16: return

  public io.micrometer.core.instrument.Counter$Builder tags(java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #47                 // Method io/micrometer/core/instrument/Tags.of:([Ljava/lang/String;)Lio/micrometer/core/instrument/Tags;
       5: invokevirtual #50                 // Method tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Counter$Builder;
       8: areturn

  public io.micrometer.core.instrument.Counter$Builder tags(java.lang.Iterable<io.micrometer.core.instrument.Tag>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #38                 // Field tags:Lio/micrometer/core/instrument/Tags;
       5: aload_1
       6: invokevirtual #56                 // Method io/micrometer/core/instrument/Tags.and:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Tags;
       9: putfield      #38                 // Field tags:Lio/micrometer/core/instrument/Tags;
      12: aload_0
      13: areturn

  public io.micrometer.core.instrument.Counter$Builder tag(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #38                 // Field tags:Lio/micrometer/core/instrument/Tags;
       5: aload_1
       6: aload_2
       7: invokevirtual #63                 // Method io/micrometer/core/instrument/Tags.and:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tags;
      10: putfield      #38                 // Field tags:Lio/micrometer/core/instrument/Tags;
      13: aload_0
      14: areturn

  public io.micrometer.core.instrument.Counter$Builder description(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #68                 // Field description:Ljava/lang/String;
       5: aload_0
       6: areturn

  public io.micrometer.core.instrument.Counter$Builder baseUnit(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #70                 // Field baseUnit:Ljava/lang/String;
       5: aload_0
       6: areturn

  public io.micrometer.core.instrument.Counter register(io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: aload_1
       1: new           #12                 // class io/micrometer/core/instrument/Meter$Id
       4: dup
       5: aload_0
       6: getfield      #40                 // Field name:Ljava/lang/String;
       9: aload_0
      10: getfield      #38                 // Field tags:Lio/micrometer/core/instrument/Tags;
      13: aload_0
      14: getfield      #70                 // Field baseUnit:Ljava/lang/String;
      17: aload_0
      18: getfield      #68                 // Field description:Ljava/lang/String;
      21: getstatic     #77                 // Field io/micrometer/core/instrument/Meter$Type.COUNTER:Lio/micrometer/core/instrument/Meter$Type;
      24: invokespecial #80                 // Method io/micrometer/core/instrument/Meter$Id."<init>":(Ljava/lang/String;Lio/micrometer/core/instrument/Tags;Ljava/lang/String;Ljava/lang/String;Lio/micrometer/core/instrument/Meter$Type;)V
      27: invokevirtual #86                 // Method io/micrometer/core/instrument/MeterRegistry.counter:(Lio/micrometer/core/instrument/Meter$Id;)Lio/micrometer/core/instrument/Counter;
      30: areturn

  io.micrometer.core.instrument.Counter$Builder(java.lang.String, io.micrometer.core.instrument.Counter$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #91                 // Method "<init>":(Ljava/lang/String;)V
       5: return
}
