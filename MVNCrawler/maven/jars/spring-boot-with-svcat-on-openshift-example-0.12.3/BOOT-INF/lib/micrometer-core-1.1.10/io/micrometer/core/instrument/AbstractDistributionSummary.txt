Compiled from "AbstractDistributionSummary.java"
public abstract class io.micrometer.core.instrument.AbstractDistributionSummary extends io.micrometer.core.instrument.AbstractMeter implements io.micrometer.core.instrument.DistributionSummary {
  protected final io.micrometer.core.instrument.distribution.Histogram histogram;

  private final double scale;

  protected io.micrometer.core.instrument.AbstractDistributionSummary(io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.Clock, io.micrometer.core.instrument.distribution.DistributionStatisticConfig, double, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #21                 // Method io/micrometer/core/instrument/AbstractMeter."<init>":(Lio/micrometer/core/instrument/Meter$Id;)V
       5: aload_0
       6: dload         4
       8: putfield      #23                 // Field scale:D
      11: aload_3
      12: invokevirtual #29                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.isPublishingPercentiles:()Z
      15: ifeq          36
      18: aload_0
      19: new           #31                 // class io/micrometer/core/instrument/distribution/TimeWindowPercentileHistogram
      22: dup
      23: aload_2
      24: aload_3
      25: iload         6
      27: invokespecial #34                 // Method io/micrometer/core/instrument/distribution/TimeWindowPercentileHistogram."<init>":(Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Z)V
      30: putfield      #36                 // Field histogram:Lio/micrometer/core/instrument/distribution/Histogram;
      33: goto          68
      36: aload_3
      37: invokevirtual #41                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.isPublishingHistogram:()Z
      40: ifeq          61
      43: aload_0
      44: new           #43                 // class io/micrometer/core/instrument/distribution/TimeWindowFixedBoundaryHistogram
      47: dup
      48: aload_2
      49: aload_3
      50: iload         6
      52: invokespecial #44                 // Method io/micrometer/core/instrument/distribution/TimeWindowFixedBoundaryHistogram."<init>":(Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;Z)V
      55: putfield      #36                 // Field histogram:Lio/micrometer/core/instrument/distribution/Histogram;
      58: goto          68
      61: aload_0
      62: getstatic     #50                 // Field io/micrometer/core/instrument/distribution/NoopHistogram.INSTANCE:Lio/micrometer/core/instrument/distribution/NoopHistogram;
      65: putfield      #36                 // Field histogram:Lio/micrometer/core/instrument/distribution/Histogram;
      68: return

  public final void record(double);
    Code:
       0: dload_1
       1: dconst_0
       2: dcmpl
       3: iflt          28
       6: aload_0
       7: getfield      #23                 // Field scale:D
      10: dload_1
      11: dmul
      12: dstore_3
      13: aload_0
      14: getfield      #36                 // Field histogram:Lio/micrometer/core/instrument/distribution/Histogram;
      17: dload_3
      18: invokeinterface #67,  3           // InterfaceMethod io/micrometer/core/instrument/distribution/Histogram.recordDouble:(D)V
      23: aload_0
      24: dload_3
      25: invokevirtual #70                 // Method recordNonNegative:(D)V
      28: return

  protected abstract void recordNonNegative(double);

  public io.micrometer.core.instrument.distribution.HistogramSnapshot takeSnapshot();
    Code:
       0: aload_0
       1: getfield      #36                 // Field histogram:Lio/micrometer/core/instrument/distribution/Histogram;
       4: aload_0
       5: invokevirtual #78                 // Method count:()J
       8: aload_0
       9: invokevirtual #82                 // Method totalAmount:()D
      12: aload_0
      13: invokevirtual #85                 // Method max:()D
      16: invokeinterface #88,  7           // InterfaceMethod io/micrometer/core/instrument/distribution/Histogram.takeSnapshot:(JDD)Lio/micrometer/core/instrument/distribution/HistogramSnapshot;
      21: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #96                 // Method io/micrometer/core/instrument/util/MeterEquivalence.equals:(Lio/micrometer/core/instrument/Meter;Ljava/lang/Object;)Z
       5: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #103                // Method io/micrometer/core/instrument/util/MeterEquivalence.hashCode:(Lio/micrometer/core/instrument/Meter;)I
       4: ireturn
}
