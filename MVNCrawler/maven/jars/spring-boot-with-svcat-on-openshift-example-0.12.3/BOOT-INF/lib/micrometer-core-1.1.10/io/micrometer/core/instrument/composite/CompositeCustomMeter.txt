Compiled from "CompositeCustomMeter.java"
class io.micrometer.core.instrument.composite.CompositeCustomMeter extends io.micrometer.core.instrument.internal.DefaultMeter implements io.micrometer.core.instrument.composite.CompositeMeter {
  io.micrometer.core.instrument.composite.CompositeCustomMeter(io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.Meter$Type, java.lang.Iterable<io.micrometer.core.instrument.Measurement>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #23                 // Method io/micrometer/core/instrument/internal/DefaultMeter."<init>":(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/Iterable;)V
       7: return

  public void add(io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method getId:()Lio/micrometer/core/instrument/Meter$Id;
       4: invokevirtual #42                 // Method io/micrometer/core/instrument/Meter$Id.getName:()Ljava/lang/String;
       7: aload_0
       8: invokevirtual #46                 // Method getType:()Lio/micrometer/core/instrument/Meter$Type;
      11: aload_0
      12: invokevirtual #50                 // Method measure:()Ljava/lang/Iterable;
      15: invokestatic  #54                 // InterfaceMethod io/micrometer/core/instrument/Meter.builder:(Ljava/lang/String;Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Meter$Builder;
      18: aload_0
      19: invokevirtual #38                 // Method getId:()Lio/micrometer/core/instrument/Meter$Id;
      22: invokevirtual #57                 // Method io/micrometer/core/instrument/Meter$Id.getTagsAsIterable:()Ljava/lang/Iterable;
      25: invokevirtual #61                 // Method io/micrometer/core/instrument/Meter$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Meter$Builder;
      28: aload_0
      29: invokevirtual #38                 // Method getId:()Lio/micrometer/core/instrument/Meter$Id;
      32: invokevirtual #64                 // Method io/micrometer/core/instrument/Meter$Id.getDescription:()Ljava/lang/String;
      35: invokevirtual #68                 // Method io/micrometer/core/instrument/Meter$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Meter$Builder;
      38: aload_0
      39: invokevirtual #38                 // Method getId:()Lio/micrometer/core/instrument/Meter$Id;
      42: invokevirtual #71                 // Method io/micrometer/core/instrument/Meter$Id.getBaseUnit:()Ljava/lang/String;
      45: invokevirtual #74                 // Method io/micrometer/core/instrument/Meter$Builder.baseUnit:(Ljava/lang/String;)Lio/micrometer/core/instrument/Meter$Builder;
      48: aload_1
      49: invokevirtual #78                 // Method io/micrometer/core/instrument/Meter$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Meter;
      52: pop
      53: return

  public void remove(io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: return
}
