Compiled from "DropwizardDistributionSummary.java"
public class io.micrometer.core.instrument.dropwizard.DropwizardDistributionSummary extends io.micrometer.core.instrument.AbstractDistributionSummary {
  private final com.codahale.metrics.Histogram impl;

  private final java.util.concurrent.atomic.DoubleAdder totalAmount;

  private final io.micrometer.core.instrument.distribution.TimeWindowMax max;

  io.micrometer.core.instrument.dropwizard.DropwizardDistributionSummary(io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.Clock, com.codahale.metrics.Histogram, io.micrometer.core.instrument.distribution.DistributionStatisticConfig, double);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload         4
       5: dload         5
       7: iconst_0
       8: invokespecial #21                 // Method io/micrometer/core/instrument/AbstractDistributionSummary."<init>":(Lio/micrometer/core/instrument/Meter$Id;Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;DZ)V
      11: aload_0
      12: new           #23                 // class java/util/concurrent/atomic/DoubleAdder
      15: dup
      16: invokespecial #26                 // Method java/util/concurrent/atomic/DoubleAdder."<init>":()V
      19: putfield      #28                 // Field totalAmount:Ljava/util/concurrent/atomic/DoubleAdder;
      22: aload_0
      23: aload_3
      24: putfield      #30                 // Field impl:Lcom/codahale/metrics/Histogram;
      27: aload_0
      28: new           #32                 // class io/micrometer/core/instrument/distribution/TimeWindowMax
      31: dup
      32: aload_2
      33: aload         4
      35: invokespecial #35                 // Method io/micrometer/core/instrument/distribution/TimeWindowMax."<init>":(Lio/micrometer/core/instrument/Clock;Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;)V
      38: putfield      #37                 // Field max:Lio/micrometer/core/instrument/distribution/TimeWindowMax;
      41: return

  protected void recordNonNegative(double);
    Code:
       0: dload_1
       1: dconst_0
       2: dcmpl
       3: iflt          31
       6: aload_0
       7: getfield      #30                 // Field impl:Lcom/codahale/metrics/Histogram;
      10: dload_1
      11: d2l
      12: invokevirtual #55                 // Method com/codahale/metrics/Histogram.update:(J)V
      15: aload_0
      16: getfield      #28                 // Field totalAmount:Ljava/util/concurrent/atomic/DoubleAdder;
      19: dload_1
      20: invokevirtual #58                 // Method java/util/concurrent/atomic/DoubleAdder.add:(D)V
      23: aload_0
      24: getfield      #37                 // Field max:Lio/micrometer/core/instrument/distribution/TimeWindowMax;
      27: dload_1
      28: invokevirtual #61                 // Method io/micrometer/core/instrument/distribution/TimeWindowMax.record:(D)V
      31: return

  public long count();
    Code:
       0: aload_0
       1: getfield      #30                 // Field impl:Lcom/codahale/metrics/Histogram;
       4: invokevirtual #67                 // Method com/codahale/metrics/Histogram.getCount:()J
       7: lreturn

  public double totalAmount();
    Code:
       0: aload_0
       1: getfield      #28                 // Field totalAmount:Ljava/util/concurrent/atomic/DoubleAdder;
       4: invokevirtual #71                 // Method java/util/concurrent/atomic/DoubleAdder.doubleValue:()D
       7: dreturn

  public double max();
    Code:
       0: aload_0
       1: getfield      #37                 // Field max:Lio/micrometer/core/instrument/distribution/TimeWindowMax;
       4: invokevirtual #74                 // Method io/micrometer/core/instrument/distribution/TimeWindowMax.poll:()D
       7: dreturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // Method io/micrometer/core/instrument/util/MeterEquivalence.equals:(Lio/micrometer/core/instrument/Meter;Ljava/lang/Object;)Z
       5: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #89                 // Method io/micrometer/core/instrument/util/MeterEquivalence.hashCode:(Lio/micrometer/core/instrument/Meter;)I
       4: ireturn
}
