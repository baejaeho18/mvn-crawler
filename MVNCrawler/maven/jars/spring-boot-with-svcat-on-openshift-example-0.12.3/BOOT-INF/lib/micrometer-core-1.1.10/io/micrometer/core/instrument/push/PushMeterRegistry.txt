Compiled from "PushMeterRegistry.java"
public abstract class io.micrometer.core.instrument.push.PushMeterRegistry extends io.micrometer.core.instrument.MeterRegistry {
  private static final io.micrometer.core.util.internal.logging.InternalLogger logger;

  private final io.micrometer.core.instrument.push.PushRegistryConfig config;

  private java.util.concurrent.ScheduledExecutorService scheduledExecutorService;

  protected io.micrometer.core.instrument.push.PushMeterRegistry(io.micrometer.core.instrument.push.PushRegistryConfig, io.micrometer.core.instrument.Clock);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #22                 // Method io/micrometer/core/instrument/MeterRegistry."<init>":(Lio/micrometer/core/instrument/Clock;)V
       5: aload_0
       6: aload_1
       7: putfield      #24                 // Field config:Lio/micrometer/core/instrument/push/PushRegistryConfig;
      10: return

  protected abstract void publish();

  private void publishSafely();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method publish:()V
       4: goto          42
       7: astore_1
       8: getstatic     #37                 // Field logger:Lio/micrometer/core/util/internal/logging/InternalLogger;
      11: new           #39                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #43                 // String Unexpected exception thrown while publishing metrics for
      20: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: invokevirtual #53                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: invokevirtual #59                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      30: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: aload_1
      37: invokeinterface #68,  3           // InterfaceMethod io/micrometer/core/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      42: return
    Exception table:
       from    to  target type
           0     4     7   Class java/lang/Throwable

  public final void start();
    Code:
       0: aload_0
       1: invokestatic  #78                 // Method java/util/concurrent/Executors.defaultThreadFactory:()Ljava/util/concurrent/ThreadFactory;
       4: invokevirtual #81                 // Method start:(Ljava/util/concurrent/ThreadFactory;)V
       7: return

  public void start(java.util.concurrent.ThreadFactory);
    Code:
       0: aload_0
       1: getfield      #83                 // Field scheduledExecutorService:Ljava/util/concurrent/ScheduledExecutorService;
       4: ifnull        11
       7: aload_0
       8: invokevirtual #86                 // Method stop:()V
      11: aload_0
      12: getfield      #24                 // Field config:Lio/micrometer/core/instrument/push/PushRegistryConfig;
      15: invokeinterface #92,  1           // InterfaceMethod io/micrometer/core/instrument/push/PushRegistryConfig.enabled:()Z
      20: ifeq          74
      23: aload_0
      24: aload_1
      25: invokestatic  #96                 // Method java/util/concurrent/Executors.newSingleThreadScheduledExecutor:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;
      28: putfield      #83                 // Field scheduledExecutorService:Ljava/util/concurrent/ScheduledExecutorService;
      31: aload_0
      32: getfield      #83                 // Field scheduledExecutorService:Ljava/util/concurrent/ScheduledExecutorService;
      35: aload_0
      36: invokedynamic #111,  0            // InvokeDynamic #0:run:(Lio/micrometer/core/instrument/push/PushMeterRegistry;)Ljava/lang/Runnable;
      41: aload_0
      42: getfield      #24                 // Field config:Lio/micrometer/core/instrument/push/PushRegistryConfig;
      45: invokeinterface #115,  1          // InterfaceMethod io/micrometer/core/instrument/push/PushRegistryConfig.step:()Ljava/time/Duration;
      50: invokevirtual #121                // Method java/time/Duration.toMillis:()J
      53: aload_0
      54: getfield      #24                 // Field config:Lio/micrometer/core/instrument/push/PushRegistryConfig;
      57: invokeinterface #115,  1          // InterfaceMethod io/micrometer/core/instrument/push/PushRegistryConfig.step:()Ljava/time/Duration;
      62: invokevirtual #121                // Method java/time/Duration.toMillis:()J
      65: getstatic     #127                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      68: invokeinterface #133,  7          // InterfaceMethod java/util/concurrent/ScheduledExecutorService.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      73: pop
      74: return

  public void stop();
    Code:
       0: aload_0
       1: getfield      #83                 // Field scheduledExecutorService:Ljava/util/concurrent/ScheduledExecutorService;
       4: ifnull        21
       7: aload_0
       8: getfield      #83                 // Field scheduledExecutorService:Ljava/util/concurrent/ScheduledExecutorService;
      11: invokeinterface #138,  1          // InterfaceMethod java/util/concurrent/ScheduledExecutorService.shutdown:()V
      16: aload_0
      17: aconst_null
      18: putfield      #83                 // Field scheduledExecutorService:Ljava/util/concurrent/ScheduledExecutorService;
      21: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #24                 // Field config:Lio/micrometer/core/instrument/push/PushRegistryConfig;
       4: invokeinterface #92,  1           // InterfaceMethod io/micrometer/core/instrument/push/PushRegistryConfig.enabled:()Z
       9: ifeq          16
      12: aload_0
      13: invokespecial #106                // Method publishSafely:()V
      16: aload_0
      17: invokevirtual #86                 // Method stop:()V
      20: aload_0
      21: invokespecial #141                // Method io/micrometer/core/instrument/MeterRegistry.close:()V
      24: return

  static {};
    Code:
       0: ldc           #2                  // class io/micrometer/core/instrument/push/PushMeterRegistry
       2: invokestatic  #148                // Method io/micrometer/core/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/micrometer/core/util/internal/logging/InternalLogger;
       5: putstatic     #37                 // Field logger:Lio/micrometer/core/util/internal/logging/InternalLogger;
       8: return
}
