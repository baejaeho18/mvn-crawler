Compiled from "TreePVector.java"
public class io.micrometer.shaded.org.pcollections.TreePVector<E> extends java.util.AbstractList<E> implements io.micrometer.shaded.org.pcollections.PVector<E>, java.io.Serializable {
  private static final long serialVersionUID;

  private static final io.micrometer.shaded.org.pcollections.TreePVector<java.lang.Object> EMPTY;

  private final io.micrometer.shaded.org.pcollections.IntTreePMap<E> map;

  public static <E> io.micrometer.shaded.org.pcollections.TreePVector<E> empty();
    Code:
       0: getstatic     #30                 // Field EMPTY:Lio/micrometer/shaded/org/pcollections/TreePVector;
       3: areturn

  public static <E> io.micrometer.shaded.org.pcollections.TreePVector<E> singleton(E);
    Code:
       0: invokestatic  #35                 // Method empty:()Lio/micrometer/shaded/org/pcollections/TreePVector;
       3: aload_0
       4: invokevirtual #38                 // Method plus:(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/TreePVector;
       7: areturn

  public static <E> io.micrometer.shaded.org.pcollections.TreePVector<E> from(java.util.Collection<? extends E>);
    Code:
       0: aload_0
       1: instanceof    #2                  // class io/micrometer/shaded/org/pcollections/TreePVector
       4: ifeq          12
       7: aload_0
       8: checkcast     #2                  // class io/micrometer/shaded/org/pcollections/TreePVector
      11: areturn
      12: invokestatic  #35                 // Method empty:()Lio/micrometer/shaded/org/pcollections/TreePVector;
      15: aload_0
      16: invokevirtual #47                 // Method plusAll:(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/TreePVector;
      19: areturn

  private io.micrometer.shaded.org.pcollections.TreePVector(io.micrometer.shaded.org.pcollections.IntTreePMap<E>);
    Code:
       0: aload_0
       1: invokespecial #56                 // Method java/util/AbstractList."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #58                 // Field map:Lio/micrometer/shaded/org/pcollections/IntTreePMap;
       9: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #58                 // Field map:Lio/micrometer/shaded/org/pcollections/IntTreePMap;
       4: invokevirtual #66                 // Method io/micrometer/shaded/org/pcollections/IntTreePMap.size:()I
       7: ireturn

  public E get(int);
    Code:
       0: iload_1
       1: iflt          12
       4: iload_1
       5: aload_0
       6: invokevirtual #70                 // Method size:()I
       9: if_icmplt     20
      12: new           #72                 // class java/lang/IndexOutOfBoundsException
      15: dup
      16: invokespecial #73                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      19: athrow
      20: aload_0
      21: getfield      #58                 // Field map:Lio/micrometer/shaded/org/pcollections/IntTreePMap;
      24: iload_1
      25: invokestatic  #79                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      28: invokevirtual #82                 // Method io/micrometer/shaded/org/pcollections/IntTreePMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      31: areturn

  public java.util.Iterator<E> iterator();
    Code:
       0: aload_0
       1: getfield      #58                 // Field map:Lio/micrometer/shaded/org/pcollections/IntTreePMap;
       4: invokevirtual #91                 // Method io/micrometer/shaded/org/pcollections/IntTreePMap.values:()Ljava/util/Collection;
       7: invokeinterface #95,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      12: areturn

  public io.micrometer.shaded.org.pcollections.TreePVector<E> subList(int, int);
    Code:
       0: aload_0
       1: invokevirtual #70                 // Method size:()I
       4: istore_3
       5: iload_1
       6: iflt          19
       9: iload_2
      10: iload_3
      11: if_icmpgt     19
      14: iload_1
      15: iload_2
      16: if_icmple     27
      19: new           #72                 // class java/lang/IndexOutOfBoundsException
      22: dup
      23: invokespecial #73                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      26: athrow
      27: iload_1
      28: ifne          38
      31: iload_2
      32: iload_3
      33: if_icmpne     38
      36: aload_0
      37: areturn
      38: iload_1
      39: iload_2
      40: if_icmpne     47
      43: invokestatic  #35                 // Method empty:()Lio/micrometer/shaded/org/pcollections/TreePVector;
      46: areturn
      47: new           #2                  // class io/micrometer/shaded/org/pcollections/TreePVector
      50: dup
      51: aload_0
      52: getfield      #58                 // Field map:Lio/micrometer/shaded/org/pcollections/IntTreePMap;
      55: iload_2
      56: iload_3
      57: invokevirtual #102                // Method io/micrometer/shaded/org/pcollections/IntTreePMap.minusRange:(II)Lio/micrometer/shaded/org/pcollections/IntTreePMap;
      60: iconst_0
      61: iload_1
      62: invokevirtual #102                // Method io/micrometer/shaded/org/pcollections/IntTreePMap.minusRange:(II)Lio/micrometer/shaded/org/pcollections/IntTreePMap;
      65: iload_1
      66: iload_1
      67: ineg
      68: invokevirtual #105                // Method io/micrometer/shaded/org/pcollections/IntTreePMap.withKeysChangedAbove:(II)Lio/micrometer/shaded/org/pcollections/IntTreePMap;
      71: invokespecial #107                // Method "<init>":(Lio/micrometer/shaded/org/pcollections/IntTreePMap;)V
      74: areturn

  public io.micrometer.shaded.org.pcollections.TreePVector<E> plus(E);
    Code:
       0: new           #2                  // class io/micrometer/shaded/org/pcollections/TreePVector
       3: dup
       4: aload_0
       5: getfield      #58                 // Field map:Lio/micrometer/shaded/org/pcollections/IntTreePMap;
       8: aload_0
       9: invokevirtual #70                 // Method size:()I
      12: invokestatic  #79                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: aload_1
      16: invokevirtual #113                // Method io/micrometer/shaded/org/pcollections/IntTreePMap.plus:(Ljava/lang/Integer;Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/IntTreePMap;
      19: invokespecial #107                // Method "<init>":(Lio/micrometer/shaded/org/pcollections/IntTreePMap;)V
      22: areturn

  public io.micrometer.shaded.org.pcollections.TreePVector<E> plus(int, E);
    Code:
       0: iload_1
       1: iflt          12
       4: iload_1
       5: aload_0
       6: invokevirtual #70                 // Method size:()I
       9: if_icmple     20
      12: new           #72                 // class java/lang/IndexOutOfBoundsException
      15: dup
      16: invokespecial #73                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      19: athrow
      20: new           #2                  // class io/micrometer/shaded/org/pcollections/TreePVector
      23: dup
      24: aload_0
      25: getfield      #58                 // Field map:Lio/micrometer/shaded/org/pcollections/IntTreePMap;
      28: iload_1
      29: iconst_1
      30: invokevirtual #105                // Method io/micrometer/shaded/org/pcollections/IntTreePMap.withKeysChangedAbove:(II)Lio/micrometer/shaded/org/pcollections/IntTreePMap;
      33: iload_1
      34: invokestatic  #79                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      37: aload_2
      38: invokevirtual #113                // Method io/micrometer/shaded/org/pcollections/IntTreePMap.plus:(Ljava/lang/Integer;Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/IntTreePMap;
      41: invokespecial #107                // Method "<init>":(Lio/micrometer/shaded/org/pcollections/IntTreePMap;)V
      44: areturn

  public io.micrometer.shaded.org.pcollections.TreePVector<E> minus(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #58                 // Field map:Lio/micrometer/shaded/org/pcollections/IntTreePMap;
       4: invokevirtual #122                // Method io/micrometer/shaded/org/pcollections/IntTreePMap.entrySet:()Ljava/util/Set;
       7: invokeinterface #125,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      12: astore_2
      13: aload_2
      14: invokeinterface #131,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          65
      22: aload_2
      23: invokeinterface #135,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #12                 // class java/util/Map$Entry
      31: astore_3
      32: aload_3
      33: invokeinterface #138,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      38: aload_1
      39: invokevirtual #144                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      42: ifeq          62
      45: aload_0
      46: aload_3
      47: invokeinterface #147,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      52: checkcast     #75                 // class java/lang/Integer
      55: invokevirtual #150                // Method java/lang/Integer.intValue:()I
      58: invokevirtual #153                // Method minus:(I)Lio/micrometer/shaded/org/pcollections/TreePVector;
      61: areturn
      62: goto          13
      65: aload_0
      66: areturn

  public io.micrometer.shaded.org.pcollections.TreePVector<E> minus(int);
    Code:
       0: iload_1
       1: iflt          12
       4: iload_1
       5: aload_0
       6: invokevirtual #70                 // Method size:()I
       9: if_icmplt     20
      12: new           #72                 // class java/lang/IndexOutOfBoundsException
      15: dup
      16: invokespecial #73                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      19: athrow
      20: new           #2                  // class io/micrometer/shaded/org/pcollections/TreePVector
      23: dup
      24: aload_0
      25: getfield      #58                 // Field map:Lio/micrometer/shaded/org/pcollections/IntTreePMap;
      28: iload_1
      29: invokestatic  #79                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      32: invokevirtual #160                // Method io/micrometer/shaded/org/pcollections/IntTreePMap.minus:(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/IntTreePMap;
      35: iload_1
      36: iconst_m1
      37: invokevirtual #105                // Method io/micrometer/shaded/org/pcollections/IntTreePMap.withKeysChangedAbove:(II)Lio/micrometer/shaded/org/pcollections/IntTreePMap;
      40: invokespecial #107                // Method "<init>":(Lio/micrometer/shaded/org/pcollections/IntTreePMap;)V
      43: areturn

  public io.micrometer.shaded.org.pcollections.TreePVector<E> plusAll(java.util.Collection<? extends E>);
    Code:
       0: aload_0
       1: astore_2
       2: aload_1
       3: invokeinterface #95,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       8: astore_3
       9: aload_3
      10: invokeinterface #131,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          36
      18: aload_3
      19: invokeinterface #135,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: astore        4
      26: aload_2
      27: aload         4
      29: invokevirtual #38                 // Method plus:(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/TreePVector;
      32: astore_2
      33: goto          9
      36: aload_2
      37: areturn

  public io.micrometer.shaded.org.pcollections.TreePVector<E> minusAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: astore_2
       2: aload_1
       3: invokeinterface #95,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       8: astore_3
       9: aload_3
      10: invokeinterface #131,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          36
      18: aload_3
      19: invokeinterface #135,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: astore        4
      26: aload_2
      27: aload         4
      29: invokevirtual #166                // Method minus:(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/TreePVector;
      32: astore_2
      33: goto          9
      36: aload_2
      37: areturn

  public io.micrometer.shaded.org.pcollections.TreePVector<E> plusAll(int, java.util.Collection<? extends E>);
    Code:
       0: iload_1
       1: iflt          12
       4: iload_1
       5: aload_0
       6: invokevirtual #70                 // Method size:()I
       9: if_icmple     20
      12: new           #72                 // class java/lang/IndexOutOfBoundsException
      15: dup
      16: invokespecial #73                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      19: athrow
      20: aload_2
      21: invokeinterface #170,  1          // InterfaceMethod java/util/Collection.size:()I
      26: ifne          31
      29: aload_0
      30: areturn
      31: aload_0
      32: getfield      #58                 // Field map:Lio/micrometer/shaded/org/pcollections/IntTreePMap;
      35: iload_1
      36: aload_2
      37: invokeinterface #170,  1          // InterfaceMethod java/util/Collection.size:()I
      42: invokevirtual #105                // Method io/micrometer/shaded/org/pcollections/IntTreePMap.withKeysChangedAbove:(II)Lio/micrometer/shaded/org/pcollections/IntTreePMap;
      45: astore_3
      46: aload_2
      47: invokeinterface #95,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      52: astore        4
      54: aload         4
      56: invokeinterface #131,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      61: ifeq          90
      64: aload         4
      66: invokeinterface #135,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      71: astore        5
      73: aload_3
      74: iload_1
      75: iinc          1, 1
      78: invokestatic  #79                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      81: aload         5
      83: invokevirtual #113                // Method io/micrometer/shaded/org/pcollections/IntTreePMap.plus:(Ljava/lang/Integer;Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/IntTreePMap;
      86: astore_3
      87: goto          54
      90: new           #2                  // class io/micrometer/shaded/org/pcollections/TreePVector
      93: dup
      94: aload_3
      95: invokespecial #107                // Method "<init>":(Lio/micrometer/shaded/org/pcollections/IntTreePMap;)V
      98: areturn

  public io.micrometer.shaded.org.pcollections.PVector<E> with(int, E);
    Code:
       0: iload_1
       1: iflt          12
       4: iload_1
       5: aload_0
       6: invokevirtual #70                 // Method size:()I
       9: if_icmplt     20
      12: new           #72                 // class java/lang/IndexOutOfBoundsException
      15: dup
      16: invokespecial #73                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      19: athrow
      20: aload_0
      21: getfield      #58                 // Field map:Lio/micrometer/shaded/org/pcollections/IntTreePMap;
      24: iload_1
      25: invokestatic  #79                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      28: aload_2
      29: invokevirtual #113                // Method io/micrometer/shaded/org/pcollections/IntTreePMap.plus:(Ljava/lang/Integer;Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/IntTreePMap;
      32: astore_3
      33: aload_3
      34: aload_0
      35: getfield      #58                 // Field map:Lio/micrometer/shaded/org/pcollections/IntTreePMap;
      38: if_acmpne     43
      41: aload_0
      42: areturn
      43: new           #2                  // class io/micrometer/shaded/org/pcollections/TreePVector
      46: dup
      47: aload_3
      48: invokespecial #107                // Method "<init>":(Lio/micrometer/shaded/org/pcollections/IntTreePMap;)V
      51: areturn

  public java.util.List subList(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #176                // Method subList:(II)Lio/micrometer/shaded/org/pcollections/TreePVector;
       6: areturn

  public io.micrometer.shaded.org.pcollections.PVector subList(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #176                // Method subList:(II)Lio/micrometer/shaded/org/pcollections/TreePVector;
       6: areturn

  public io.micrometer.shaded.org.pcollections.PVector minus(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #153                // Method minus:(I)Lio/micrometer/shaded/org/pcollections/TreePVector;
       5: areturn

  public io.micrometer.shaded.org.pcollections.PVector minusAll(java.util.Collection);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #181                // Method minusAll:(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/TreePVector;
       5: areturn

  public io.micrometer.shaded.org.pcollections.PVector minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #166                // Method minus:(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/TreePVector;
       5: areturn

  public io.micrometer.shaded.org.pcollections.PVector plusAll(int, java.util.Collection);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #185                // Method plusAll:(ILjava/util/Collection;)Lio/micrometer/shaded/org/pcollections/TreePVector;
       6: areturn

  public io.micrometer.shaded.org.pcollections.PVector plus(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #187                // Method plus:(ILjava/lang/Object;)Lio/micrometer/shaded/org/pcollections/TreePVector;
       6: areturn

  public io.micrometer.shaded.org.pcollections.PVector plusAll(java.util.Collection);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #47                 // Method plusAll:(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/TreePVector;
       5: areturn

  public io.micrometer.shaded.org.pcollections.PVector plus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #38                 // Method plus:(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/TreePVector;
       5: areturn

  public io.micrometer.shaded.org.pcollections.PSequence subList(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #176                // Method subList:(II)Lio/micrometer/shaded/org/pcollections/TreePVector;
       6: areturn

  public io.micrometer.shaded.org.pcollections.PSequence minus(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #153                // Method minus:(I)Lio/micrometer/shaded/org/pcollections/TreePVector;
       5: areturn

  public io.micrometer.shaded.org.pcollections.PSequence minusAll(java.util.Collection);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #181                // Method minusAll:(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/TreePVector;
       5: areturn

  public io.micrometer.shaded.org.pcollections.PSequence minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #166                // Method minus:(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/TreePVector;
       5: areturn

  public io.micrometer.shaded.org.pcollections.PSequence plusAll(int, java.util.Collection);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #185                // Method plusAll:(ILjava/util/Collection;)Lio/micrometer/shaded/org/pcollections/TreePVector;
       6: areturn

  public io.micrometer.shaded.org.pcollections.PSequence plus(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #187                // Method plus:(ILjava/lang/Object;)Lio/micrometer/shaded/org/pcollections/TreePVector;
       6: areturn

  public io.micrometer.shaded.org.pcollections.PSequence with(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #195                // Method with:(ILjava/lang/Object;)Lio/micrometer/shaded/org/pcollections/PVector;
       6: areturn

  public io.micrometer.shaded.org.pcollections.PSequence plusAll(java.util.Collection);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #47                 // Method plusAll:(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/TreePVector;
       5: areturn

  public io.micrometer.shaded.org.pcollections.PSequence plus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #38                 // Method plus:(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/TreePVector;
       5: areturn

  public io.micrometer.shaded.org.pcollections.PCollection minusAll(java.util.Collection);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #181                // Method minusAll:(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/TreePVector;
       5: areturn

  public io.micrometer.shaded.org.pcollections.PCollection minus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #166                // Method minus:(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/TreePVector;
       5: areturn

  public io.micrometer.shaded.org.pcollections.PCollection plusAll(java.util.Collection);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #47                 // Method plusAll:(Ljava/util/Collection;)Lio/micrometer/shaded/org/pcollections/TreePVector;
       5: areturn

  public io.micrometer.shaded.org.pcollections.PCollection plus(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #38                 // Method plus:(Ljava/lang/Object;)Lio/micrometer/shaded/org/pcollections/TreePVector;
       5: areturn

  static {};
    Code:
       0: new           #2                  // class io/micrometer/shaded/org/pcollections/TreePVector
       3: dup
       4: invokestatic  #201                // Method io/micrometer/shaded/org/pcollections/IntTreePMap.empty:()Lio/micrometer/shaded/org/pcollections/IntTreePMap;
       7: invokespecial #107                // Method "<init>":(Lio/micrometer/shaded/org/pcollections/IntTreePMap;)V
      10: putstatic     #30                 // Field EMPTY:Lio/micrometer/shaded/org/pcollections/TreePVector;
      13: return
}
