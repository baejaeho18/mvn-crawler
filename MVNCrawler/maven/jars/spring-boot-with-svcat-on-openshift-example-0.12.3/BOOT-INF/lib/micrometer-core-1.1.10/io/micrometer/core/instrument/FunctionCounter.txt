Compiled from "FunctionCounter.java"
public interface io.micrometer.core.instrument.FunctionCounter extends io.micrometer.core.instrument.Meter {
  public static <T> io.micrometer.core.instrument.FunctionCounter$Builder<T> builder(java.lang.String, T, java.util.function.ToDoubleFunction<T>);
    Code:
       0: new           #11                 // class io/micrometer/core/instrument/FunctionCounter$Builder
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aconst_null
       8: invokespecial #25                 // Method io/micrometer/core/instrument/FunctionCounter$Builder."<init>":(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;Lio/micrometer/core/instrument/FunctionCounter$1;)V
      11: areturn

  public abstract double count();

  public default java.lang.Iterable<io.micrometer.core.instrument.Measurement> measure();
    Code:
       0: new           #40                 // class io/micrometer/core/instrument/Measurement
       3: dup
       4: aload_0
       5: invokedynamic #58,  0             // InvokeDynamic #0:get:(Lio/micrometer/core/instrument/FunctionCounter;)Ljava/util/function/Supplier;
      10: getstatic     #64                 // Field io/micrometer/core/instrument/Statistic.COUNT:Lio/micrometer/core/instrument/Statistic;
      13: invokespecial #67                 // Method io/micrometer/core/instrument/Measurement."<init>":(Ljava/util/function/Supplier;Lio/micrometer/core/instrument/Statistic;)V
      16: invokestatic  #73                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      19: areturn
}
