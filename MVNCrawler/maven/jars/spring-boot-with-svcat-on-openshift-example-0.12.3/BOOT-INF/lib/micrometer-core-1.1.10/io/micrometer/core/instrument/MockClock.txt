Compiled from "MockClock.java"
public class io.micrometer.core.instrument.MockClock implements io.micrometer.core.instrument.Clock {
  private long timeNanos;

  public io.micrometer.core.instrument.MockClock();
    Code:
       0: aload_0
       1: invokespecial #18                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: dconst_1
       6: getstatic     #24                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
       9: invokestatic  #30                 // Method io/micrometer/core/instrument/util/TimeUtils.millisToUnit:(DLjava/util/concurrent/TimeUnit;)D
      12: d2l
      13: putfield      #32                 // Field timeNanos:J
      16: return

  public long monotonicTime();
    Code:
       0: aload_0
       1: getfield      #32                 // Field timeNanos:J
       4: lreturn

  public long wallTime();
    Code:
       0: getstatic     #40                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       3: aload_0
       4: getfield      #32                 // Field timeNanos:J
       7: getstatic     #24                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      10: invokevirtual #44                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      13: lreturn

  public long add(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: dup
       2: getfield      #32                 // Field timeNanos:J
       5: aload_3
       6: lload_1
       7: invokevirtual #49                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      10: ladd
      11: putfield      #32                 // Field timeNanos:J
      14: aload_0
      15: getfield      #32                 // Field timeNanos:J
      18: lreturn

  public long add(java.time.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #56                 // Method java/time/Duration.toNanos:()J
       5: getstatic     #24                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
       8: invokevirtual #58                 // Method add:(JLjava/util/concurrent/TimeUnit;)J
      11: lreturn

  public long addSeconds(long);
    Code:
       0: aload_0
       1: lload_1
       2: getstatic     #64                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
       5: invokevirtual #58                 // Method add:(JLjava/util/concurrent/TimeUnit;)J
       8: lreturn

  public static io.micrometer.core.instrument.MockClock clock(io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: aload_0
       1: invokevirtual #70                 // Method io/micrometer/core/instrument/MeterRegistry.config:()Lio/micrometer/core/instrument/MeterRegistry$Config;
       4: invokevirtual #73                 // Method io/micrometer/core/instrument/MeterRegistry$Config.clock:()Lio/micrometer/core/instrument/Clock;
       7: checkcast     #2                  // class io/micrometer/core/instrument/MockClock
      10: areturn
}
