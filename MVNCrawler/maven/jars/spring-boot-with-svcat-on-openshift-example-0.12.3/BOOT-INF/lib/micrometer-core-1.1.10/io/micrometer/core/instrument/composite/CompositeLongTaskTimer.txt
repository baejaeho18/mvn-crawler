Compiled from "CompositeLongTaskTimer.java"
class io.micrometer.core.instrument.composite.CompositeLongTaskTimer extends io.micrometer.core.instrument.composite.AbstractCompositeMeter<io.micrometer.core.instrument.LongTaskTimer> implements io.micrometer.core.instrument.LongTaskTimer {
  private final java.util.concurrent.atomic.AtomicLong nextTask;

  private final java.util.concurrent.ConcurrentMap<java.lang.Long, java.util.Collection<io.micrometer.core.instrument.LongTaskTimer$Sample>> timings;

  io.micrometer.core.instrument.composite.CompositeLongTaskTimer(io.micrometer.core.instrument.Meter$Id);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #33                 // Method io/micrometer/core/instrument/composite/AbstractCompositeMeter."<init>":(Lio/micrometer/core/instrument/Meter$Id;)V
       5: aload_0
       6: new           #35                 // class java/util/concurrent/atomic/AtomicLong
       9: dup
      10: lconst_0
      11: invokespecial #38                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      14: putfield      #40                 // Field nextTask:Ljava/util/concurrent/atomic/AtomicLong;
      17: aload_0
      18: new           #42                 // class java/util/concurrent/ConcurrentHashMap
      21: dup
      22: invokespecial #45                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      25: putfield      #47                 // Field timings:Ljava/util/concurrent/ConcurrentMap;
      28: return

  public io.micrometer.core.instrument.LongTaskTimer$Sample start();
    Code:
       0: aload_0
       1: getfield      #40                 // Field nextTask:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #57                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
       7: lstore_1
       8: new           #59                 // class java/util/ArrayList
      11: dup
      12: invokespecial #60                 // Method java/util/ArrayList."<init>":()V
      15: astore_3
      16: aload_0
      17: aload_3
      18: invokedynamic #80,  0             // InvokeDynamic #0:accept:(Ljava/util/Collection;)Ljava/util/function/Consumer;
      23: invokevirtual #84                 // Method forEachChild:(Ljava/util/function/Consumer;)V
      26: aload_0
      27: getfield      #47                 // Field timings:Ljava/util/concurrent/ConcurrentMap;
      30: lload_1
      31: invokestatic  #90                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      34: aload_3
      35: invokeinterface #96,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: new           #10                 // class io/micrometer/core/instrument/LongTaskTimer$Sample
      44: dup
      45: aload_0
      46: lload_1
      47: invokespecial #99                 // Method io/micrometer/core/instrument/LongTaskTimer$Sample."<init>":(Lio/micrometer/core/instrument/LongTaskTimer;J)V
      50: areturn

  public long stop(long);
    Code:
       0: aload_0
       1: getfield      #47                 // Field timings:Ljava/util/concurrent/ConcurrentMap;
       4: lload_1
       5: invokestatic  #90                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       8: invokeinterface #110,  2          // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #112                // class java/util/Collection
      16: astore_3
      17: lconst_0
      18: lstore        4
      20: aload_3
      21: ifnull        64
      24: aload_3
      25: invokeinterface #116,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      30: astore        6
      32: aload         6
      34: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          64
      42: aload         6
      44: invokeinterface #126,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #10                 // class io/micrometer/core/instrument/LongTaskTimer$Sample
      52: astore        7
      54: aload         7
      56: invokevirtual #128                // Method io/micrometer/core/instrument/LongTaskTimer$Sample.stop:()J
      59: lstore        4
      61: goto          32
      64: lload         4
      66: lreturn

  public double duration(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #47                 // Field timings:Ljava/util/concurrent/ConcurrentMap;
       4: lload_1
       5: invokestatic  #90                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       8: invokeinterface #137,  2          // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #112                // class java/util/Collection
      16: astore        4
      18: aload         4
      20: ifnull        60
      23: aload         4
      25: invokeinterface #141,  1          // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      30: invokeinterface #147,  1          // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      35: aload_3
      36: invokedynamic #159,  0            // InvokeDynamic #1:apply:(Ljava/util/concurrent/TimeUnit;)Ljava/util/function/Function;
      41: invokevirtual #165                // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      44: ldc2_w        #166                // double -1.0d
      47: invokestatic  #172                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      50: invokevirtual #175                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      53: checkcast     #169                // class java/lang/Double
      56: invokevirtual #179                // Method java/lang/Double.doubleValue:()D
      59: dreturn
      60: ldc2_w        #166                // double -1.0d
      63: dreturn

  public double duration(java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokevirtual #187                // Method firstChild:()Lio/micrometer/core/instrument/Meter;
       4: checkcast     #7                  // class io/micrometer/core/instrument/LongTaskTimer
       7: aload_1
       8: invokeinterface #189,  2          // InterfaceMethod io/micrometer/core/instrument/LongTaskTimer.duration:(Ljava/util/concurrent/TimeUnit;)D
      13: dreturn

  public int activeTasks();
    Code:
       0: aload_0
       1: invokevirtual #187                // Method firstChild:()Lio/micrometer/core/instrument/Meter;
       4: checkcast     #7                  // class io/micrometer/core/instrument/LongTaskTimer
       7: invokeinterface #193,  1          // InterfaceMethod io/micrometer/core/instrument/LongTaskTimer.activeTasks:()I
      12: ireturn

  io.micrometer.core.instrument.LongTaskTimer newNoopMeter();
    Code:
       0: new           #197                // class io/micrometer/core/instrument/noop/NoopLongTaskTimer
       3: dup
       4: aload_0
       5: invokevirtual #201                // Method getId:()Lio/micrometer/core/instrument/Meter$Id;
       8: invokespecial #202                // Method io/micrometer/core/instrument/noop/NoopLongTaskTimer."<init>":(Lio/micrometer/core/instrument/Meter$Id;)V
      11: areturn

  io.micrometer.core.instrument.LongTaskTimer registerNewMeter(io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: aload_0
       1: invokevirtual #201                // Method getId:()Lio/micrometer/core/instrument/Meter$Id;
       4: invokevirtual #208                // Method io/micrometer/core/instrument/Meter$Id.getName:()Ljava/lang/String;
       7: invokestatic  #212                // InterfaceMethod io/micrometer/core/instrument/LongTaskTimer.builder:(Ljava/lang/String;)Lio/micrometer/core/instrument/LongTaskTimer$Builder;
      10: aload_0
      11: invokevirtual #201                // Method getId:()Lio/micrometer/core/instrument/Meter$Id;
      14: invokevirtual #216                // Method io/micrometer/core/instrument/Meter$Id.getTagsAsIterable:()Ljava/lang/Iterable;
      17: invokevirtual #220                // Method io/micrometer/core/instrument/LongTaskTimer$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/LongTaskTimer$Builder;
      20: aload_0
      21: invokevirtual #201                // Method getId:()Lio/micrometer/core/instrument/Meter$Id;
      24: invokevirtual #223                // Method io/micrometer/core/instrument/Meter$Id.getDescription:()Ljava/lang/String;
      27: invokevirtual #226                // Method io/micrometer/core/instrument/LongTaskTimer$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/LongTaskTimer$Builder;
      30: aload_1
      31: invokevirtual #229                // Method io/micrometer/core/instrument/LongTaskTimer$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/LongTaskTimer;
      34: areturn

  io.micrometer.core.instrument.Meter registerNewMeter(io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #234                // Method registerNewMeter:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/LongTaskTimer;
       5: areturn

  io.micrometer.core.instrument.Meter newNoopMeter();
    Code:
       0: aload_0
       1: invokevirtual #236                // Method newNoopMeter:()Lio/micrometer/core/instrument/LongTaskTimer;
       4: areturn

  private static java.lang.Double lambda$duration$1(java.util.concurrent.TimeUnit, io.micrometer.core.instrument.LongTaskTimer$Sample);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #237                // Method io/micrometer/core/instrument/LongTaskTimer$Sample.duration:(Ljava/util/concurrent/TimeUnit;)D
       5: invokestatic  #172                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
       8: areturn

  private static void lambda$start$0(java.util.Collection, io.micrometer.core.instrument.LongTaskTimer);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #240,  1          // InterfaceMethod io/micrometer/core/instrument/LongTaskTimer.start:()Lio/micrometer/core/instrument/LongTaskTimer$Sample;
       7: invokeinterface #244,  2          // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      12: pop
      13: return
}
