Compiled from "CumulativeFunctionTimer.java"
public class io.micrometer.core.instrument.cumulative.CumulativeFunctionTimer<T> implements io.micrometer.core.instrument.FunctionTimer {
  private final io.micrometer.core.instrument.Meter$Id id;

  private final java.lang.ref.WeakReference<T> ref;

  private final java.util.function.ToLongFunction<T> countFunction;

  private final java.util.function.ToDoubleFunction<T> totalTimeFunction;

  private final java.util.concurrent.TimeUnit totalTimeFunctionUnit;

  private final java.util.concurrent.TimeUnit baseTimeUnit;

  private volatile long lastCount;

  private volatile double lastTime;

  public io.micrometer.core.instrument.cumulative.CumulativeFunctionTimer(io.micrometer.core.instrument.Meter$Id, T, java.util.function.ToLongFunction<T>, java.util.function.ToDoubleFunction<T>, java.util.concurrent.TimeUnit, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokespecial #40                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #42                 // Field lastCount:J
       9: aload_0
      10: dconst_0
      11: putfield      #44                 // Field lastTime:D
      14: aload_0
      15: aload_1
      16: putfield      #46                 // Field id:Lio/micrometer/core/instrument/Meter$Id;
      19: aload_0
      20: new           #48                 // class java/lang/ref/WeakReference
      23: dup
      24: aload_2
      25: invokespecial #51                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      28: putfield      #53                 // Field ref:Ljava/lang/ref/WeakReference;
      31: aload_0
      32: aload_3
      33: putfield      #55                 // Field countFunction:Ljava/util/function/ToLongFunction;
      36: aload_0
      37: aload         4
      39: putfield      #57                 // Field totalTimeFunction:Ljava/util/function/ToDoubleFunction;
      42: aload_0
      43: aload         5
      45: putfield      #59                 // Field totalTimeFunctionUnit:Ljava/util/concurrent/TimeUnit;
      48: aload_0
      49: aload         6
      51: putfield      #61                 // Field baseTimeUnit:Ljava/util/concurrent/TimeUnit;
      54: return

  public double count();
    Code:
       0: aload_0
       1: getfield      #53                 // Field ref:Ljava/lang/ref/WeakReference;
       4: invokevirtual #73                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
       7: astore_1
       8: aload_1
       9: ifnull        35
      12: aload_0
      13: aload_0
      14: getfield      #55                 // Field countFunction:Ljava/util/function/ToLongFunction;
      17: aload_1
      18: invokeinterface #79,  2           // InterfaceMethod java/util/function/ToLongFunction.applyAsLong:(Ljava/lang/Object;)J
      23: lconst_0
      24: invokestatic  #85                 // Method java/lang/Math.max:(JJ)J
      27: dup2_x1
      28: putfield      #42                 // Field lastCount:J
      31: l2d
      32: goto          40
      35: aload_0
      36: getfield      #42                 // Field lastCount:J
      39: l2d
      40: dreturn

  public double totalTime(java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #53                 // Field ref:Ljava/lang/ref/WeakReference;
       4: invokevirtual #73                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
       7: astore_2
       8: aload_2
       9: ifnull        41
      12: aload_0
      13: aload_0
      14: getfield      #57                 // Field totalTimeFunction:Ljava/util/function/ToDoubleFunction;
      17: aload_2
      18: invokeinterface #94,  2           // InterfaceMethod java/util/function/ToDoubleFunction.applyAsDouble:(Ljava/lang/Object;)D
      23: aload_0
      24: getfield      #59                 // Field totalTimeFunctionUnit:Ljava/util/concurrent/TimeUnit;
      27: aload_0
      28: invokevirtual #97                 // Method baseTimeUnit:()Ljava/util/concurrent/TimeUnit;
      31: invokestatic  #103                // Method io/micrometer/core/instrument/util/TimeUtils.convert:(DLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/TimeUnit;)D
      34: dconst_0
      35: invokestatic  #106                // Method java/lang/Math.max:(DD)D
      38: putfield      #44                 // Field lastTime:D
      41: aload_0
      42: getfield      #44                 // Field lastTime:D
      45: aload_0
      46: invokevirtual #97                 // Method baseTimeUnit:()Ljava/util/concurrent/TimeUnit;
      49: aload_1
      50: invokestatic  #103                // Method io/micrometer/core/instrument/util/TimeUtils.convert:(DLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/TimeUnit;)D
      53: dreturn

  public io.micrometer.core.instrument.Meter$Id getId();
    Code:
       0: aload_0
       1: getfield      #46                 // Field id:Lio/micrometer/core/instrument/Meter$Id;
       4: areturn

  public java.util.concurrent.TimeUnit baseTimeUnit();
    Code:
       0: aload_0
       1: getfield      #61                 // Field baseTimeUnit:Ljava/util/concurrent/TimeUnit;
       4: areturn

  public io.micrometer.core.instrument.Meter$Type type();
    Code:
       0: getstatic     #115                // Field io/micrometer/core/instrument/Meter$Type.TIMER:Lio/micrometer/core/instrument/Meter$Type;
       3: areturn
}
