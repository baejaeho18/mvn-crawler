Compiled from "JdkLogger.java"
class io.micrometer.core.util.internal.logging.JdkLogger extends io.micrometer.core.util.internal.logging.AbstractInternalLogger {
  private static final long serialVersionUID;

  final transient java.util.logging.Logger logger;

  static final java.lang.String SELF;

  static final java.lang.String SUPER;

  io.micrometer.core.util.internal.logging.JdkLogger(java.util.logging.Logger);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #22                 // Method java/util/logging/Logger.getName:()Ljava/lang/String;
       5: invokespecial #25                 // Method io/micrometer/core/util/internal/logging/AbstractInternalLogger."<init>":(Ljava/lang/String;)V
       8: aload_0
       9: aload_1
      10: putfield      #27                 // Field logger:Ljava/util/logging/Logger;
      13: return

  public boolean isTraceEnabled();
    Code:
       0: aload_0
       1: getfield      #27                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #37                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
       7: invokevirtual #41                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ireturn

  public void trace(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #27                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #37                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
       7: invokevirtual #41                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          25
      13: aload_0
      14: getstatic     #44                 // Field SELF:Ljava/lang/String;
      17: getstatic     #37                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
      20: aload_1
      21: aconst_null
      22: invokespecial #48                 // Method log:(Ljava/lang/String;Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      25: return

  public void trace(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #27                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #37                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
       7: invokevirtual #41                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          37
      13: aload_1
      14: aload_2
      15: invokestatic  #56                 // Method io/micrometer/core/util/internal/logging/MessageFormatter.format:(Ljava/lang/String;Ljava/lang/Object;)Lio/micrometer/core/util/internal/logging/FormattingTuple;
      18: astore_3
      19: aload_0
      20: getstatic     #44                 // Field SELF:Ljava/lang/String;
      23: getstatic     #37                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
      26: aload_3
      27: invokevirtual #61                 // Method io/micrometer/core/util/internal/logging/FormattingTuple.getMessage:()Ljava/lang/String;
      30: aload_3
      31: invokevirtual #65                 // Method io/micrometer/core/util/internal/logging/FormattingTuple.getThrowable:()Ljava/lang/Throwable;
      34: invokespecial #48                 // Method log:(Ljava/lang/String;Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      37: return

  public void trace(java.lang.String, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #27                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #37                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
       7: invokevirtual #41                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          41
      13: aload_1
      14: aload_2
      15: aload_3
      16: invokestatic  #73                 // Method io/micrometer/core/util/internal/logging/MessageFormatter.format:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Lio/micrometer/core/util/internal/logging/FormattingTuple;
      19: astore        4
      21: aload_0
      22: getstatic     #44                 // Field SELF:Ljava/lang/String;
      25: getstatic     #37                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
      28: aload         4
      30: invokevirtual #61                 // Method io/micrometer/core/util/internal/logging/FormattingTuple.getMessage:()Ljava/lang/String;
      33: aload         4
      35: invokevirtual #65                 // Method io/micrometer/core/util/internal/logging/FormattingTuple.getThrowable:()Ljava/lang/Throwable;
      38: invokespecial #48                 // Method log:(Ljava/lang/String;Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      41: return

  public void trace(java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: getfield      #27                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #37                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
       7: invokevirtual #41                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          37
      13: aload_1
      14: aload_2
      15: invokestatic  #80                 // Method io/micrometer/core/util/internal/logging/MessageFormatter.arrayFormat:(Ljava/lang/String;[Ljava/lang/Object;)Lio/micrometer/core/util/internal/logging/FormattingTuple;
      18: astore_3
      19: aload_0
      20: getstatic     #44                 // Field SELF:Ljava/lang/String;
      23: getstatic     #37                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
      26: aload_3
      27: invokevirtual #61                 // Method io/micrometer/core/util/internal/logging/FormattingTuple.getMessage:()Ljava/lang/String;
      30: aload_3
      31: invokevirtual #65                 // Method io/micrometer/core/util/internal/logging/FormattingTuple.getThrowable:()Ljava/lang/Throwable;
      34: invokespecial #48                 // Method log:(Ljava/lang/String;Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      37: return

  public void trace(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #27                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #37                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
       7: invokevirtual #41                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          25
      13: aload_0
      14: getstatic     #44                 // Field SELF:Ljava/lang/String;
      17: getstatic     #37                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
      20: aload_1
      21: aload_2
      22: invokespecial #48                 // Method log:(Ljava/lang/String;Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      25: return

  public boolean isDebugEnabled();
    Code:
       0: aload_0
       1: getfield      #27                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #89                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
       7: invokevirtual #41                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ireturn

  public void debug(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #27                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #89                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
       7: invokevirtual #41                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          25
      13: aload_0
      14: getstatic     #44                 // Field SELF:Ljava/lang/String;
      17: getstatic     #89                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      20: aload_1
      21: aconst_null
      22: invokespecial #48                 // Method log:(Ljava/lang/String;Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      25: return

  public void debug(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #27                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #89                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
       7: invokevirtual #41                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          37
      13: aload_1
      14: aload_2
      15: invokestatic  #56                 // Method io/micrometer/core/util/internal/logging/MessageFormatter.format:(Ljava/lang/String;Ljava/lang/Object;)Lio/micrometer/core/util/internal/logging/FormattingTuple;
      18: astore_3
      19: aload_0
      20: getstatic     #44                 // Field SELF:Ljava/lang/String;
      23: getstatic     #89                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      26: aload_3
      27: invokevirtual #61                 // Method io/micrometer/core/util/internal/logging/FormattingTuple.getMessage:()Ljava/lang/String;
      30: aload_3
      31: invokevirtual #65                 // Method io/micrometer/core/util/internal/logging/FormattingTuple.getThrowable:()Ljava/lang/Throwable;
      34: invokespecial #48                 // Method log:(Ljava/lang/String;Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      37: return

  public void debug(java.lang.String, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #27                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #89                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
       7: invokevirtual #41                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          41
      13: aload_1
      14: aload_2
      15: aload_3
      16: invokestatic  #73                 // Method io/micrometer/core/util/internal/logging/MessageFormatter.format:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Lio/micrometer/core/util/internal/logging/FormattingTuple;
      19: astore        4
      21: aload_0
      22: getstatic     #44                 // Field SELF:Ljava/lang/String;
      25: getstatic     #89                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      28: aload         4
      30: invokevirtual #61                 // Method io/micrometer/core/util/internal/logging/FormattingTuple.getMessage:()Ljava/lang/String;
      33: aload         4
      35: invokevirtual #65                 // Method io/micrometer/core/util/internal/logging/FormattingTuple.getThrowable:()Ljava/lang/Throwable;
      38: invokespecial #48                 // Method log:(Ljava/lang/String;Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      41: return

  public void debug(java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: getfield      #27                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #89                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
       7: invokevirtual #41                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          37
      13: aload_1
      14: aload_2
      15: invokestatic  #80                 // Method io/micrometer/core/util/internal/logging/MessageFormatter.arrayFormat:(Ljava/lang/String;[Ljava/lang/Object;)Lio/micrometer/core/util/internal/logging/FormattingTuple;
      18: astore_3
      19: aload_0
      20: getstatic     #44                 // Field SELF:Ljava/lang/String;
      23: getstatic     #89                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      26: aload_3
      27: invokevirtual #61                 // Method io/micrometer/core/util/internal/logging/FormattingTuple.getMessage:()Ljava/lang/String;
      30: aload_3
      31: invokevirtual #65                 // Method io/micrometer/core/util/internal/logging/FormattingTuple.getThrowable:()Ljava/lang/Throwable;
      34: invokespecial #48                 // Method log:(Ljava/lang/String;Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      37: return

  public void debug(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #27                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #89                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
       7: invokevirtual #41                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          25
      13: aload_0
      14: getstatic     #44                 // Field SELF:Ljava/lang/String;
      17: getstatic     #89                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      20: aload_1
      21: aload_2
      22: invokespecial #48                 // Method log:(Ljava/lang/String;Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      25: return

  public boolean isInfoEnabled();
    Code:
       0: aload_0
       1: getfield      #27                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #94                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
       7: invokevirtual #41                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ireturn

  public void info(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #27                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #94                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
       7: invokevirtual #41                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          25
      13: aload_0
      14: getstatic     #44                 // Field SELF:Ljava/lang/String;
      17: getstatic     #94                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
      20: aload_1
      21: aconst_null
      22: invokespecial #48                 // Method log:(Ljava/lang/String;Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      25: return

  public void info(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #27                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #94                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
       7: invokevirtual #41                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          37
      13: aload_1
      14: aload_2
      15: invokestatic  #56                 // Method io/micrometer/core/util/internal/logging/MessageFormatter.format:(Ljava/lang/String;Ljava/lang/Object;)Lio/micrometer/core/util/internal/logging/FormattingTuple;
      18: astore_3
      19: aload_0
      20: getstatic     #44                 // Field SELF:Ljava/lang/String;
      23: getstatic     #94                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
      26: aload_3
      27: invokevirtual #61                 // Method io/micrometer/core/util/internal/logging/FormattingTuple.getMessage:()Ljava/lang/String;
      30: aload_3
      31: invokevirtual #65                 // Method io/micrometer/core/util/internal/logging/FormattingTuple.getThrowable:()Ljava/lang/Throwable;
      34: invokespecial #48                 // Method log:(Ljava/lang/String;Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      37: return

  public void info(java.lang.String, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #27                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #94                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
       7: invokevirtual #41                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          41
      13: aload_1
      14: aload_2
      15: aload_3
      16: invokestatic  #73                 // Method io/micrometer/core/util/internal/logging/MessageFormatter.format:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Lio/micrometer/core/util/internal/logging/FormattingTuple;
      19: astore        4
      21: aload_0
      22: getstatic     #44                 // Field SELF:Ljava/lang/String;
      25: getstatic     #94                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
      28: aload         4
      30: invokevirtual #61                 // Method io/micrometer/core/util/internal/logging/FormattingTuple.getMessage:()Ljava/lang/String;
      33: aload         4
      35: invokevirtual #65                 // Method io/micrometer/core/util/internal/logging/FormattingTuple.getThrowable:()Ljava/lang/Throwable;
      38: invokespecial #48                 // Method log:(Ljava/lang/String;Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      41: return

  public void info(java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: getfield      #27                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #94                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
       7: invokevirtual #41                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          37
      13: aload_1
      14: aload_2
      15: invokestatic  #80                 // Method io/micrometer/core/util/internal/logging/MessageFormatter.arrayFormat:(Ljava/lang/String;[Ljava/lang/Object;)Lio/micrometer/core/util/internal/logging/FormattingTuple;
      18: astore_3
      19: aload_0
      20: getstatic     #44                 // Field SELF:Ljava/lang/String;
      23: getstatic     #94                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
      26: aload_3
      27: invokevirtual #61                 // Method io/micrometer/core/util/internal/logging/FormattingTuple.getMessage:()Ljava/lang/String;
      30: aload_3
      31: invokevirtual #65                 // Method io/micrometer/core/util/internal/logging/FormattingTuple.getThrowable:()Ljava/lang/Throwable;
      34: invokespecial #48                 // Method log:(Ljava/lang/String;Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      37: return

  public void info(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #27                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #94                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
       7: invokevirtual #41                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          25
      13: aload_0
      14: getstatic     #44                 // Field SELF:Ljava/lang/String;
      17: getstatic     #94                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
      20: aload_1
      21: aload_2
      22: invokespecial #48                 // Method log:(Ljava/lang/String;Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      25: return

  public boolean isWarnEnabled();
    Code:
       0: aload_0
       1: getfield      #27                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #99                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
       7: invokevirtual #41                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ireturn

  public void warn(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #27                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #99                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
       7: invokevirtual #41                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          25
      13: aload_0
      14: getstatic     #44                 // Field SELF:Ljava/lang/String;
      17: getstatic     #99                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      20: aload_1
      21: aconst_null
      22: invokespecial #48                 // Method log:(Ljava/lang/String;Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      25: return

  public void warn(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #27                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #99                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
       7: invokevirtual #41                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          37
      13: aload_1
      14: aload_2
      15: invokestatic  #56                 // Method io/micrometer/core/util/internal/logging/MessageFormatter.format:(Ljava/lang/String;Ljava/lang/Object;)Lio/micrometer/core/util/internal/logging/FormattingTuple;
      18: astore_3
      19: aload_0
      20: getstatic     #44                 // Field SELF:Ljava/lang/String;
      23: getstatic     #99                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      26: aload_3
      27: invokevirtual #61                 // Method io/micrometer/core/util/internal/logging/FormattingTuple.getMessage:()Ljava/lang/String;
      30: aload_3
      31: invokevirtual #65                 // Method io/micrometer/core/util/internal/logging/FormattingTuple.getThrowable:()Ljava/lang/Throwable;
      34: invokespecial #48                 // Method log:(Ljava/lang/String;Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      37: return

  public void warn(java.lang.String, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #27                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #99                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
       7: invokevirtual #41                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          41
      13: aload_1
      14: aload_2
      15: aload_3
      16: invokestatic  #73                 // Method io/micrometer/core/util/internal/logging/MessageFormatter.format:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Lio/micrometer/core/util/internal/logging/FormattingTuple;
      19: astore        4
      21: aload_0
      22: getstatic     #44                 // Field SELF:Ljava/lang/String;
      25: getstatic     #99                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      28: aload         4
      30: invokevirtual #61                 // Method io/micrometer/core/util/internal/logging/FormattingTuple.getMessage:()Ljava/lang/String;
      33: aload         4
      35: invokevirtual #65                 // Method io/micrometer/core/util/internal/logging/FormattingTuple.getThrowable:()Ljava/lang/Throwable;
      38: invokespecial #48                 // Method log:(Ljava/lang/String;Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      41: return

  public void warn(java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: getfield      #27                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #99                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
       7: invokevirtual #41                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          37
      13: aload_1
      14: aload_2
      15: invokestatic  #80                 // Method io/micrometer/core/util/internal/logging/MessageFormatter.arrayFormat:(Ljava/lang/String;[Ljava/lang/Object;)Lio/micrometer/core/util/internal/logging/FormattingTuple;
      18: astore_3
      19: aload_0
      20: getstatic     #44                 // Field SELF:Ljava/lang/String;
      23: getstatic     #99                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      26: aload_3
      27: invokevirtual #61                 // Method io/micrometer/core/util/internal/logging/FormattingTuple.getMessage:()Ljava/lang/String;
      30: aload_3
      31: invokevirtual #65                 // Method io/micrometer/core/util/internal/logging/FormattingTuple.getThrowable:()Ljava/lang/Throwable;
      34: invokespecial #48                 // Method log:(Ljava/lang/String;Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      37: return

  public void warn(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #27                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #99                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
       7: invokevirtual #41                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          25
      13: aload_0
      14: getstatic     #44                 // Field SELF:Ljava/lang/String;
      17: getstatic     #99                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      20: aload_1
      21: aload_2
      22: invokespecial #48                 // Method log:(Ljava/lang/String;Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      25: return

  public boolean isErrorEnabled();
    Code:
       0: aload_0
       1: getfield      #27                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #104                // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
       7: invokevirtual #41                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ireturn

  public void error(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #27                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #104                // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
       7: invokevirtual #41                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          25
      13: aload_0
      14: getstatic     #44                 // Field SELF:Ljava/lang/String;
      17: getstatic     #104                // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      20: aload_1
      21: aconst_null
      22: invokespecial #48                 // Method log:(Ljava/lang/String;Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      25: return

  public void error(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #27                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #104                // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
       7: invokevirtual #41                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          37
      13: aload_1
      14: aload_2
      15: invokestatic  #56                 // Method io/micrometer/core/util/internal/logging/MessageFormatter.format:(Ljava/lang/String;Ljava/lang/Object;)Lio/micrometer/core/util/internal/logging/FormattingTuple;
      18: astore_3
      19: aload_0
      20: getstatic     #44                 // Field SELF:Ljava/lang/String;
      23: getstatic     #104                // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      26: aload_3
      27: invokevirtual #61                 // Method io/micrometer/core/util/internal/logging/FormattingTuple.getMessage:()Ljava/lang/String;
      30: aload_3
      31: invokevirtual #65                 // Method io/micrometer/core/util/internal/logging/FormattingTuple.getThrowable:()Ljava/lang/Throwable;
      34: invokespecial #48                 // Method log:(Ljava/lang/String;Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      37: return

  public void error(java.lang.String, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #27                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #104                // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
       7: invokevirtual #41                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          41
      13: aload_1
      14: aload_2
      15: aload_3
      16: invokestatic  #73                 // Method io/micrometer/core/util/internal/logging/MessageFormatter.format:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Lio/micrometer/core/util/internal/logging/FormattingTuple;
      19: astore        4
      21: aload_0
      22: getstatic     #44                 // Field SELF:Ljava/lang/String;
      25: getstatic     #104                // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      28: aload         4
      30: invokevirtual #61                 // Method io/micrometer/core/util/internal/logging/FormattingTuple.getMessage:()Ljava/lang/String;
      33: aload         4
      35: invokevirtual #65                 // Method io/micrometer/core/util/internal/logging/FormattingTuple.getThrowable:()Ljava/lang/Throwable;
      38: invokespecial #48                 // Method log:(Ljava/lang/String;Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      41: return

  public void error(java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: getfield      #27                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #104                // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
       7: invokevirtual #41                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          37
      13: aload_1
      14: aload_2
      15: invokestatic  #80                 // Method io/micrometer/core/util/internal/logging/MessageFormatter.arrayFormat:(Ljava/lang/String;[Ljava/lang/Object;)Lio/micrometer/core/util/internal/logging/FormattingTuple;
      18: astore_3
      19: aload_0
      20: getstatic     #44                 // Field SELF:Ljava/lang/String;
      23: getstatic     #104                // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      26: aload_3
      27: invokevirtual #61                 // Method io/micrometer/core/util/internal/logging/FormattingTuple.getMessage:()Ljava/lang/String;
      30: aload_3
      31: invokevirtual #65                 // Method io/micrometer/core/util/internal/logging/FormattingTuple.getThrowable:()Ljava/lang/Throwable;
      34: invokespecial #48                 // Method log:(Ljava/lang/String;Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      37: return

  public void error(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #27                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #104                // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
       7: invokevirtual #41                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          25
      13: aload_0
      14: getstatic     #44                 // Field SELF:Ljava/lang/String;
      17: getstatic     #104                // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      20: aload_1
      21: aload_2
      22: invokespecial #48                 // Method log:(Ljava/lang/String;Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      25: return

  private void log(java.lang.String, java.util.logging.Level, java.lang.String, java.lang.Throwable);
    Code:
       0: new           #108                // class java/util/logging/LogRecord
       3: dup
       4: aload_2
       5: aload_3
       6: invokespecial #111                // Method java/util/logging/LogRecord."<init>":(Ljava/util/logging/Level;Ljava/lang/String;)V
       9: astore        5
      11: aload         5
      13: aload_0
      14: invokevirtual #114                // Method name:()Ljava/lang/String;
      17: invokevirtual #117                // Method java/util/logging/LogRecord.setLoggerName:(Ljava/lang/String;)V
      20: aload         5
      22: aload         4
      24: invokevirtual #121                // Method java/util/logging/LogRecord.setThrown:(Ljava/lang/Throwable;)V
      27: aload_1
      28: aload         5
      30: invokestatic  #125                // Method fillCallerData:(Ljava/lang/String;Ljava/util/logging/LogRecord;)V
      33: aload_0
      34: getfield      #27                 // Field logger:Ljava/util/logging/Logger;
      37: aload         5
      39: invokevirtual #128                // Method java/util/logging/Logger.log:(Ljava/util/logging/LogRecord;)V
      42: return

  private static void fillCallerData(java.lang.String, java.util.logging.LogRecord);
    Code:
       0: new           #134                // class java/lang/Throwable
       3: dup
       4: invokespecial #137                // Method java/lang/Throwable."<init>":()V
       7: invokevirtual #141                // Method java/lang/Throwable.getStackTrace:()[Ljava/lang/StackTraceElement;
      10: astore_2
      11: iconst_m1
      12: istore_3
      13: iconst_0
      14: istore        4
      16: iload         4
      18: aload_2
      19: arraylength
      20: if_icmpge     64
      23: aload_2
      24: iload         4
      26: aaload
      27: invokevirtual #148                // Method java/lang/StackTraceElement.getClassName:()Ljava/lang/String;
      30: astore        5
      32: aload         5
      34: aload_0
      35: invokevirtual #154                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      38: ifne          52
      41: aload         5
      43: getstatic     #156                // Field SUPER:Ljava/lang/String;
      46: invokevirtual #154                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      49: ifeq          58
      52: iload         4
      54: istore_3
      55: goto          64
      58: iinc          4, 1
      61: goto          16
      64: iconst_m1
      65: istore        4
      67: iload_3
      68: iconst_1
      69: iadd
      70: istore        5
      72: iload         5
      74: aload_2
      75: arraylength
      76: if_icmpge     121
      79: aload_2
      80: iload         5
      82: aaload
      83: invokevirtual #148                // Method java/lang/StackTraceElement.getClassName:()Ljava/lang/String;
      86: astore        6
      88: aload         6
      90: aload_0
      91: invokevirtual #154                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      94: ifne          115
      97: aload         6
      99: getstatic     #156                // Field SUPER:Ljava/lang/String;
     102: invokevirtual #154                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     105: ifne          115
     108: iload         5
     110: istore        4
     112: goto          121
     115: iinc          5, 1
     118: goto          72
     121: iload         4
     123: iconst_m1
     124: if_icmpeq     151
     127: aload_2
     128: iload         4
     130: aaload
     131: astore        5
     133: aload_1
     134: aload         5
     136: invokevirtual #148                // Method java/lang/StackTraceElement.getClassName:()Ljava/lang/String;
     139: invokevirtual #159                // Method java/util/logging/LogRecord.setSourceClassName:(Ljava/lang/String;)V
     142: aload_1
     143: aload         5
     145: invokevirtual #162                // Method java/lang/StackTraceElement.getMethodName:()Ljava/lang/String;
     148: invokevirtual #165                // Method java/util/logging/LogRecord.setSourceMethodName:(Ljava/lang/String;)V
     151: return

  static {};
    Code:
       0: ldc           #2                  // class io/micrometer/core/util/internal/logging/JdkLogger
       2: invokevirtual #177                // Method java/lang/Class.getName:()Ljava/lang/String;
       5: putstatic     #44                 // Field SELF:Ljava/lang/String;
       8: ldc           #4                  // class io/micrometer/core/util/internal/logging/AbstractInternalLogger
      10: invokevirtual #177                // Method java/lang/Class.getName:()Ljava/lang/String;
      13: putstatic     #156                // Field SUPER:Ljava/lang/String;
      16: return
}
