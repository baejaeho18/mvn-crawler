Compiled from "DropwizardGauge.java"
public class io.micrometer.core.instrument.dropwizard.DropwizardGauge extends io.micrometer.core.instrument.AbstractMeter implements io.micrometer.core.instrument.Gauge {
  private final com.codahale.metrics.Gauge<java.lang.Double> impl;

  io.micrometer.core.instrument.dropwizard.DropwizardGauge(io.micrometer.core.instrument.Meter$Id, com.codahale.metrics.Gauge<java.lang.Double>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #21                 // Method io/micrometer/core/instrument/AbstractMeter."<init>":(Lio/micrometer/core/instrument/Meter$Id;)V
       5: aload_0
       6: aload_2
       7: putfield      #23                 // Field impl:Lcom/codahale/metrics/Gauge;
      10: return

  public double value();
    Code:
       0: aload_0
       1: getfield      #23                 // Field impl:Lcom/codahale/metrics/Gauge;
       4: invokeinterface #35,  1           // InterfaceMethod com/codahale/metrics/Gauge.getValue:()Ljava/lang/Object;
       9: checkcast     #37                 // class java/lang/Double
      12: astore_1
      13: aload_1
      14: ifnonnull     23
      17: ldc2_w        #38                 // double NaNd
      20: goto          27
      23: aload_1
      24: invokevirtual #42                 // Method java/lang/Double.doubleValue:()D
      27: dreturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #50                 // Method io/micrometer/core/instrument/util/MeterEquivalence.equals:(Lio/micrometer/core/instrument/Meter;Ljava/lang/Object;)Z
       5: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #57                 // Method io/micrometer/core/instrument/util/MeterEquivalence.hashCode:(Lio/micrometer/core/instrument/Meter;)I
       4: ireturn
}
