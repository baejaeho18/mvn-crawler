Compiled from "JpaQueryExecution.java"
class org.springframework.data.jpa.repository.query.JpaQueryExecution$StreamExecution extends org.springframework.data.jpa.repository.query.JpaQueryExecution {
  private static final java.lang.String NO_SURROUNDING_TRANSACTION;

  private static java.lang.reflect.Method streamMethod;

  org.springframework.data.jpa.repository.query.JpaQueryExecution$StreamExecution();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/data/jpa/repository/query/JpaQueryExecution."<init>":()V
       4: return

  protected java.lang.Object doExecute(org.springframework.data.jpa.repository.query.AbstractJpaQuery, java.lang.Object[]);
    Code:
       0: getstatic     #2                  // Field org/springframework/data/repository/core/support/SurroundingTransactionDetectorMethodInterceptor.INSTANCE:Lorg/springframework/data/repository/core/support/SurroundingTransactionDetectorMethodInterceptor;
       3: invokevirtual #3                  // Method org/springframework/data/repository/core/support/SurroundingTransactionDetectorMethodInterceptor.isSurroundingTransactionActive:()Z
       6: ifne          19
       9: new           #4                  // class org/springframework/dao/InvalidDataAccessApiUsageException
      12: dup
      13: ldc           #6                  // String You\'re trying to execute a streaming query method without a surrounding transaction that keeps the connection open so that the Stream can actually be consumed. Make sure the code consuming the stream uses @Transactional or any other way of declaring a (read-only) transaction.
      15: invokespecial #7                  // Method org/springframework/dao/InvalidDataAccessApiUsageException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_1
      20: aload_2
      21: invokevirtual #8                  // Method org/springframework/data/jpa/repository/query/AbstractJpaQuery.createQuery:([Ljava/lang/Object;)Ljavax/persistence/Query;
      24: astore_3
      25: getstatic     #9                  // Field streamMethod:Ljava/lang/reflect/Method;
      28: ifnull        39
      31: getstatic     #9                  // Field streamMethod:Ljava/lang/reflect/Method;
      34: aload_3
      35: invokestatic  #10                 // Method org/springframework/util/ReflectionUtils.invokeMethod:(Ljava/lang/reflect/Method;Ljava/lang/Object;)Ljava/lang/Object;
      38: areturn
      39: aload_1
      40: invokevirtual #11                 // Method org/springframework/data/jpa/repository/query/AbstractJpaQuery.getEntityManager:()Ljavax/persistence/EntityManager;
      43: invokestatic  #12                 // Method org/springframework/data/jpa/provider/PersistenceProvider.fromEntityManager:(Ljavax/persistence/EntityManager;)Lorg/springframework/data/jpa/provider/PersistenceProvider;
      46: astore        4
      48: aload         4
      50: aload_3
      51: invokevirtual #13                 // Method org/springframework/data/jpa/provider/PersistenceProvider.executeQueryWithResultStream:(Ljavax/persistence/Query;)Lorg/springframework/data/util/CloseableIterator;
      54: astore        5
      56: aload         5
      58: invokestatic  #14                 // InterfaceMethod org/springframework/data/util/StreamUtils.createStreamFromIterator:(Lorg/springframework/data/util/CloseableIterator;)Ljava/util/stream/Stream;
      61: areturn

  static {};
    Code:
       0: ldc           #15                 // class javax/persistence/Query
       2: ldc           #16                 // String getResultStream
       4: invokestatic  #17                 // Method org/springframework/util/ReflectionUtils.findMethod:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Method;
       7: putstatic     #9                  // Field streamMethod:Ljava/lang/reflect/Method;
      10: return
}
