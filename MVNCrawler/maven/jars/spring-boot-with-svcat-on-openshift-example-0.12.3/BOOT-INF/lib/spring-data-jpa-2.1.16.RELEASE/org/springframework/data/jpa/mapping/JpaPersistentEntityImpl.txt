Compiled from "JpaPersistentEntityImpl.java"
class org.springframework.data.jpa.mapping.JpaPersistentEntityImpl<T> extends org.springframework.data.mapping.model.BasicPersistentEntity<T, org.springframework.data.jpa.mapping.JpaPersistentProperty> implements org.springframework.data.jpa.mapping.JpaPersistentEntity<T> {
  private static final java.lang.String INVALID_VERSION_ANNOTATION;

  private final org.springframework.data.jpa.provider.ProxyIdAccessor proxyIdAccessor;

  private final org.springframework.data.jpa.util.JpaMetamodel metamodel;

  public org.springframework.data.jpa.mapping.JpaPersistentEntityImpl(org.springframework.data.util.TypeInformation<T>, org.springframework.data.jpa.provider.ProxyIdAccessor, org.springframework.data.jpa.util.JpaMetamodel);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #1                  // Method org/springframework/data/mapping/model/BasicPersistentEntity."<init>":(Lorg/springframework/data/util/TypeInformation;Ljava/util/Comparator;)V
       6: aload_2
       7: ldc           #2                  // String ProxyIdAccessor must not be null!
       9: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: aload_2
      14: putfield      #4                  // Field proxyIdAccessor:Lorg/springframework/data/jpa/provider/ProxyIdAccessor;
      17: aload_0
      18: aload_3
      19: putfield      #5                  // Field metamodel:Lorg/springframework/data/jpa/util/JpaMetamodel;
      22: return

  protected org.springframework.data.jpa.mapping.JpaPersistentProperty returnPropertyIfBetterIdPropertyCandidateOrNull(org.springframework.data.jpa.mapping.JpaPersistentProperty);
    Code:
       0: aload_1
       1: invokeinterface #6,  1            // InterfaceMethod org/springframework/data/jpa/mapping/JpaPersistentProperty.isIdProperty:()Z
       6: ifeq          13
       9: aload_1
      10: goto          14
      13: aconst_null
      14: areturn

  public org.springframework.data.mapping.IdentifierAccessor getIdentifierAccessor(java.lang.Object);
    Code:
       0: new           #7                  // class org/springframework/data/jpa/mapping/JpaPersistentEntityImpl$JpaProxyAwareIdentifierAccessor
       3: dup
       4: aload_0
       5: aload_1
       6: aload_0
       7: getfield      #4                  // Field proxyIdAccessor:Lorg/springframework/data/jpa/provider/ProxyIdAccessor;
      10: invokespecial #8                  // Method org/springframework/data/jpa/mapping/JpaPersistentEntityImpl$JpaProxyAwareIdentifierAccessor."<init>":(Lorg/springframework/data/jpa/mapping/JpaPersistentEntity;Ljava/lang/Object;Lorg/springframework/data/jpa/provider/ProxyIdAccessor;)V
      13: areturn

  public void verify();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method org/springframework/data/mapping/model/BasicPersistentEntity.verify:()V
       4: aload_0
       5: invokevirtual #10                 // Method getVersionProperty:()Lorg/springframework/data/mapping/PersistentProperty;
       8: checkcast     #11                 // class org/springframework/data/jpa/mapping/JpaPersistentProperty
      11: astore_1
      12: aload_1
      13: ifnull        49
      16: aload_1
      17: ldc           #12                 // class org/springframework/data/annotation/Version
      19: invokeinterface #13,  2           // InterfaceMethod org/springframework/data/jpa/mapping/JpaPersistentProperty.isAnnotationPresent:(Ljava/lang/Class;)Z
      24: ifeq          49
      27: new           #14                 // class java/lang/IllegalArgumentException
      30: dup
      31: getstatic     #15                 // Field INVALID_VERSION_ANNOTATION:Ljava/lang/String;
      34: iconst_1
      35: anewarray     #16                 // class java/lang/Object
      38: dup
      39: iconst_0
      40: aload_1
      41: aastore
      42: invokestatic  #17                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      45: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: return

  org.springframework.data.jpa.util.JpaMetamodel getMetamodel();
    Code:
       0: aload_0
       1: getfield      #5                  // Field metamodel:Lorg/springframework/data/jpa/util/JpaMetamodel;
       4: areturn

  protected org.springframework.data.mapping.PersistentProperty returnPropertyIfBetterIdPropertyCandidateOrNull(org.springframework.data.mapping.PersistentProperty);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #11                 // class org/springframework/data/jpa/mapping/JpaPersistentProperty
       5: invokevirtual #19                 // Method returnPropertyIfBetterIdPropertyCandidateOrNull:(Lorg/springframework/data/jpa/mapping/JpaPersistentProperty;)Lorg/springframework/data/jpa/mapping/JpaPersistentProperty;
       8: areturn

  static {};
    Code:
       0: new           #20                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #22                 // String %s is annotated with
       9: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: ldc           #12                 // class org/springframework/data/annotation/Version
      14: invokevirtual #24                 // Method java/lang/Class.getName:()Ljava/lang/String;
      17: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc           #25                 // String  but needs to use
      22: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: ldc           #26                 // class javax/persistence/Version
      27: invokevirtual #24                 // Method java/lang/Class.getName:()Ljava/lang/String;
      30: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: ldc           #27                 // String  to trigger optimistic locking correctly!
      35: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: putstatic     #15                 // Field INVALID_VERSION_ANNOTATION:Ljava/lang/String;
      44: return
}
