Compiled from "JpaRepositoryFactory.java"
class org.springframework.data.jpa.repository.support.JpaRepositoryFactory$EclipseLinkProjectionQueryCreationListener implements org.springframework.data.repository.core.support.QueryCreationListener<org.springframework.data.jpa.repository.query.AbstractJpaQuery> {
  private static final org.slf4j.Logger log;

  private static final java.lang.String ECLIPSELINK_PROJECTIONS;

  private final org.springframework.data.jpa.util.JpaMetamodel metamodel;

  private boolean warningLogged;

  public org.springframework.data.jpa.repository.support.JpaRepositoryFactory$EclipseLinkProjectionQueryCreationListener(javax.persistence.EntityManager);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field warningLogged:Z
       9: aload_1
      10: ldc           #3                  // String EntityManager must not be null!
      12: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      15: aload_0
      16: aload_1
      17: invokeinterface #5,  1            // InterfaceMethod javax/persistence/EntityManager.getMetamodel:()Ljavax/persistence/metamodel/Metamodel;
      22: invokestatic  #6                  // Method org/springframework/data/jpa/util/JpaMetamodel.of:(Ljavax/persistence/metamodel/Metamodel;)Lorg/springframework/data/jpa/util/JpaMetamodel;
      25: putfield      #7                  // Field metamodel:Lorg/springframework/data/jpa/util/JpaMetamodel;
      28: return

  public void onCreation(org.springframework.data.jpa.repository.query.AbstractJpaQuery);
    Code:
       0: aload_1
       1: invokevirtual #8                  // Method org/springframework/data/jpa/repository/query/AbstractJpaQuery.getQueryMethod:()Lorg/springframework/data/jpa/repository/query/JpaQueryMethod;
       4: astore_2
       5: aload_2
       6: invokevirtual #9                  // Method org/springframework/data/jpa/repository/query/JpaQueryMethod.getResultProcessor:()Lorg/springframework/data/repository/query/ResultProcessor;
       9: invokevirtual #10                 // Method org/springframework/data/repository/query/ResultProcessor.getReturnedType:()Lorg/springframework/data/repository/query/ReturnedType;
      12: astore_3
      13: aload_3
      14: invokevirtual #11                 // Method org/springframework/data/repository/query/ReturnedType.isProjecting:()Z
      17: ifeq          67
      20: aload_0
      21: getfield      #7                  // Field metamodel:Lorg/springframework/data/jpa/util/JpaMetamodel;
      24: aload_3
      25: invokevirtual #12                 // Method org/springframework/data/repository/query/ReturnedType.getReturnedType:()Ljava/lang/Class;
      28: invokevirtual #13                 // Method org/springframework/data/jpa/util/JpaMetamodel.isJpaManaged:(Ljava/lang/Class;)Z
      31: ifne          67
      34: aload_0
      35: getfield      #2                  // Field warningLogged:Z
      38: ifne          56
      41: getstatic     #14                 // Field log:Lorg/slf4j/Logger;
      44: ldc           #16                 // String Usage of Spring Data projections detected on persistence provider EclipseLink. Make sure the following query methods declare result columns in exactly the order the accessors are declared in the projecting interface or the order of parameters for DTOs:
      46: invokeinterface #17,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      51: aload_0
      52: iconst_1
      53: putfield      #2                  // Field warningLogged:Z
      56: getstatic     #14                 // Field log:Lorg/slf4j/Logger;
      59: ldc           #18                 // String  - {}
      61: aload_2
      62: invokeinterface #19,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      67: return

  public void onCreation(org.springframework.data.repository.query.RepositoryQuery);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class org/springframework/data/jpa/repository/query/AbstractJpaQuery
       5: invokevirtual #21                 // Method onCreation:(Lorg/springframework/data/jpa/repository/query/AbstractJpaQuery;)V
       8: return

  static {};
    Code:
       0: ldc           #15                 // class org/springframework/data/jpa/repository/support/JpaRepositoryFactory$EclipseLinkProjectionQueryCreationListener
       2: invokestatic  #22                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #14                 // Field log:Lorg/slf4j/Logger;
       8: return
}
