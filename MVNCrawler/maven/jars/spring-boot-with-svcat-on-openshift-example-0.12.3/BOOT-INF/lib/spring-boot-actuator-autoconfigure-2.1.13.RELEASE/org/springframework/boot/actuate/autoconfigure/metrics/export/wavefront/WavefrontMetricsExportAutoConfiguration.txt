Compiled from "WavefrontMetricsExportAutoConfiguration.java"
public class org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontMetricsExportAutoConfiguration {
  private final org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties properties;

  public org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontMetricsExportAutoConfiguration(org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field properties:Lorg/springframework/boot/actuate/autoconfigure/metrics/export/wavefront/WavefrontProperties;
       9: return

  public io.micrometer.wavefront.WavefrontConfig wavefrontConfig();
    Code:
       0: new           #3                  // class org/springframework/boot/actuate/autoconfigure/metrics/export/wavefront/WavefrontPropertiesConfigAdapter
       3: dup
       4: aload_0
       5: getfield      #2                  // Field properties:Lorg/springframework/boot/actuate/autoconfigure/metrics/export/wavefront/WavefrontProperties;
       8: invokespecial #4                  // Method org/springframework/boot/actuate/autoconfigure/metrics/export/wavefront/WavefrontPropertiesConfigAdapter."<init>":(Lorg/springframework/boot/actuate/autoconfigure/metrics/export/wavefront/WavefrontProperties;)V
      11: areturn

  public io.micrometer.wavefront.WavefrontMeterRegistry wavefrontMeterRegistry(io.micrometer.wavefront.WavefrontConfig, io.micrometer.core.instrument.Clock);
    Code:
       0: aload_1
       1: invokestatic  #5                  // Method io/micrometer/wavefront/WavefrontMeterRegistry.builder:(Lio/micrometer/wavefront/WavefrontConfig;)Lio/micrometer/wavefront/WavefrontMeterRegistry$Builder;
       4: aload_2
       5: invokevirtual #6                  // Method io/micrometer/wavefront/WavefrontMeterRegistry$Builder.clock:(Lio/micrometer/core/instrument/Clock;)Lio/micrometer/wavefront/WavefrontMeterRegistry$Builder;
       8: new           #7                  // class io/micrometer/core/ipc/http/HttpUrlConnectionSender
      11: dup
      12: aload_0
      13: getfield      #2                  // Field properties:Lorg/springframework/boot/actuate/autoconfigure/metrics/export/wavefront/WavefrontProperties;
      16: invokevirtual #8                  // Method org/springframework/boot/actuate/autoconfigure/metrics/export/wavefront/WavefrontProperties.getConnectTimeout:()Ljava/time/Duration;
      19: aload_0
      20: getfield      #2                  // Field properties:Lorg/springframework/boot/actuate/autoconfigure/metrics/export/wavefront/WavefrontProperties;
      23: invokevirtual #9                  // Method org/springframework/boot/actuate/autoconfigure/metrics/export/wavefront/WavefrontProperties.getReadTimeout:()Ljava/time/Duration;
      26: invokespecial #10                 // Method io/micrometer/core/ipc/http/HttpUrlConnectionSender."<init>":(Ljava/time/Duration;Ljava/time/Duration;)V
      29: invokevirtual #11                 // Method io/micrometer/wavefront/WavefrontMeterRegistry$Builder.httpClient:(Lio/micrometer/core/ipc/http/HttpSender;)Lio/micrometer/wavefront/WavefrontMeterRegistry$Builder;
      32: invokevirtual #12                 // Method io/micrometer/wavefront/WavefrontMeterRegistry$Builder.build:()Lio/micrometer/wavefront/WavefrontMeterRegistry;
      35: areturn
}
