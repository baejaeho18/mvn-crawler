Compiled from "CacheMetricsRegistrarConfiguration.java"
class org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMetricsRegistrarConfiguration {
  private static final java.lang.String CACHE_MANAGER_SUFFIX;

  private final io.micrometer.core.instrument.MeterRegistry registry;

  private final java.util.Collection<org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider<?>> binderProviders;

  private final java.util.Map<java.lang.String, org.springframework.cache.CacheManager> cacheManagers;

  org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMetricsRegistrarConfiguration(io.micrometer.core.instrument.MeterRegistry, java.util.Collection<org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider<?>>, java.util.Map<java.lang.String, org.springframework.cache.CacheManager>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field binderProviders:Ljava/util/Collection;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field cacheManagers:Ljava/util/Map;
      19: return

  public org.springframework.boot.actuate.metrics.cache.CacheMetricsRegistrar cacheMetricsRegistrar();
    Code:
       0: new           #5                  // class org/springframework/boot/actuate/metrics/cache/CacheMetricsRegistrar
       3: dup
       4: aload_0
       5: getfield      #2                  // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
       8: aload_0
       9: getfield      #3                  // Field binderProviders:Ljava/util/Collection;
      12: invokespecial #6                  // Method org/springframework/boot/actuate/metrics/cache/CacheMetricsRegistrar."<init>":(Lio/micrometer/core/instrument/MeterRegistry;Ljava/util/Collection;)V
      15: areturn

  public void bindCachesToRegistry();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cacheManagers:Ljava/util/Map;
       4: aload_0
       5: invokedynamic #7,  0              // InvokeDynamic #0:accept:(Lorg/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsRegistrarConfiguration;)Ljava/util/function/BiConsumer;
      10: invokeinterface #8,  2            // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      15: return

  private void bindCacheManagerToRegistry(java.lang.String, org.springframework.cache.CacheManager);
    Code:
       0: aload_2
       1: invokeinterface #9,  1            // InterfaceMethod org/springframework/cache/CacheManager.getCacheNames:()Ljava/util/Collection;
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokedynamic #10,  0             // InvokeDynamic #1:accept:(Lorg/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsRegistrarConfiguration;Ljava/lang/String;Lorg/springframework/cache/CacheManager;)Ljava/util/function/Consumer;
      14: invokeinterface #11,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      19: return

  private void bindCacheToRegistry(java.lang.String, org.springframework.cache.Cache);
    Code:
       0: ldc           #12                 // String cacheManager
       2: aload_0
       3: aload_1
       4: invokespecial #13                 // Method getCacheManagerName:(Ljava/lang/String;)Ljava/lang/String;
       7: invokestatic  #14                 // InterfaceMethod io/micrometer/core/instrument/Tag.of:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tag;
      10: astore_3
      11: aload_0
      12: invokevirtual #15                 // Method cacheMetricsRegistrar:()Lorg/springframework/boot/actuate/metrics/cache/CacheMetricsRegistrar;
      15: aload_2
      16: iconst_1
      17: anewarray     #16                 // class io/micrometer/core/instrument/Tag
      20: dup
      21: iconst_0
      22: aload_3
      23: aastore
      24: invokevirtual #17                 // Method org/springframework/boot/actuate/metrics/cache/CacheMetricsRegistrar.bindCacheToRegistry:(Lorg/springframework/cache/Cache;[Lio/micrometer/core/instrument/Tag;)Z
      27: pop
      28: return

  private java.lang.String getCacheManagerName(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #18                 // Method java/lang/String.length:()I
       4: ldc           #12                 // String cacheManager
       6: invokevirtual #18                 // Method java/lang/String.length:()I
       9: if_icmple     37
      12: aload_1
      13: ldc           #12                 // String cacheManager
      15: invokestatic  #20                 // Method org/springframework/util/StringUtils.endsWithIgnoreCase:(Ljava/lang/String;Ljava/lang/String;)Z
      18: ifeq          37
      21: aload_1
      22: iconst_0
      23: aload_1
      24: invokevirtual #18                 // Method java/lang/String.length:()I
      27: ldc           #12                 // String cacheManager
      29: invokevirtual #18                 // Method java/lang/String.length:()I
      32: isub
      33: invokevirtual #21                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      36: areturn
      37: aload_1
      38: areturn

  private void lambda$bindCacheManagerToRegistry$0(java.lang.String, org.springframework.cache.CacheManager, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokeinterface #22,  2           // InterfaceMethod org/springframework/cache/CacheManager.getCache:(Ljava/lang/String;)Lorg/springframework/cache/Cache;
       9: invokespecial #23                 // Method bindCacheToRegistry:(Ljava/lang/String;Lorg/springframework/cache/Cache;)V
      12: return
}
