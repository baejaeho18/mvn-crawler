Compiled from "PropertiesMeterFilter.java"
public class org.springframework.boot.actuate.autoconfigure.metrics.PropertiesMeterFilter implements io.micrometer.core.instrument.config.MeterFilter {
  private final org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties properties;

  private final io.micrometer.core.instrument.config.MeterFilter mapFilter;

  public org.springframework.boot.actuate.autoconfigure.metrics.PropertiesMeterFilter(org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Properties must not be null
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field properties:Lorg/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties;
      15: aload_0
      16: aload_1
      17: invokevirtual #5                  // Method org/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties.getTags:()Ljava/util/Map;
      20: invokestatic  #6                  // Method createMapFilter:(Ljava/util/Map;)Lio/micrometer/core/instrument/config/MeterFilter;
      23: putfield      #7                  // Field mapFilter:Lio/micrometer/core/instrument/config/MeterFilter;
      26: return

  private static io.micrometer.core.instrument.config.MeterFilter createMapFilter(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: invokeinterface #8,  1            // InterfaceMethod java/util/Map.isEmpty:()Z
       6: ifeq          17
       9: new           #9                  // class org/springframework/boot/actuate/autoconfigure/metrics/PropertiesMeterFilter$1
      12: dup
      13: invokespecial #10                 // Method org/springframework/boot/actuate/autoconfigure/metrics/PropertiesMeterFilter$1."<init>":()V
      16: areturn
      17: aload_0
      18: invokeinterface #11,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      23: invokeinterface #12,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      28: invokedynamic #13,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      33: invokeinterface #14,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      38: invokestatic  #15                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      41: invokeinterface #16,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      46: checkcast     #17                 // class java/lang/Iterable
      49: invokestatic  #18                 // Method io/micrometer/core/instrument/Tags.of:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Tags;
      52: astore_1
      53: aload_1
      54: invokestatic  #19                 // InterfaceMethod io/micrometer/core/instrument/config/MeterFilter.commonTags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/config/MeterFilter;
      57: areturn

  public io.micrometer.core.instrument.config.MeterFilterReply accept(io.micrometer.core.instrument.Meter$Id);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field properties:Lorg/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties;
       5: invokevirtual #20                 // Method org/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties.getEnable:()Ljava/util/Map;
       8: aload_1
       9: iconst_1
      10: invokestatic  #21                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      13: invokespecial #22                 // Method lookupWithFallbackToAll:(Ljava/util/Map;Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #23                 // class java/lang/Boolean
      19: invokevirtual #24                 // Method java/lang/Boolean.booleanValue:()Z
      22: istore_2
      23: iload_2
      24: ifeq          33
      27: getstatic     #25                 // Field io/micrometer/core/instrument/config/MeterFilterReply.NEUTRAL:Lio/micrometer/core/instrument/config/MeterFilterReply;
      30: goto          36
      33: getstatic     #26                 // Field io/micrometer/core/instrument/config/MeterFilterReply.DENY:Lio/micrometer/core/instrument/config/MeterFilterReply;
      36: areturn

  public io.micrometer.core.instrument.Meter$Id map(io.micrometer.core.instrument.Meter$Id);
    Code:
       0: aload_0
       1: getfield      #7                  // Field mapFilter:Lio/micrometer/core/instrument/config/MeterFilter;
       4: aload_1
       5: invokeinterface #27,  2           // InterfaceMethod io/micrometer/core/instrument/config/MeterFilter.map:(Lio/micrometer/core/instrument/Meter$Id;)Lio/micrometer/core/instrument/Meter$Id;
      10: areturn

  public io.micrometer.core.instrument.distribution.DistributionStatisticConfig configure(io.micrometer.core.instrument.Meter$Id, io.micrometer.core.instrument.distribution.DistributionStatisticConfig);
    Code:
       0: aload_0
       1: getfield      #4                  // Field properties:Lorg/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties;
       4: invokevirtual #28                 // Method org/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties.getDistribution:()Lorg/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties$Distribution;
       7: astore_3
       8: invokestatic  #29                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.builder:()Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
      11: aload_0
      12: aload_3
      13: invokevirtual #30                 // Method org/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties$Distribution.getPercentilesHistogram:()Ljava/util/Map;
      16: aload_1
      17: aconst_null
      18: invokespecial #22                 // Method lookupWithFallbackToAll:(Ljava/util/Map;Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #23                 // class java/lang/Boolean
      24: invokevirtual #31                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.percentilesHistogram:(Ljava/lang/Boolean;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
      27: aload_0
      28: aload_3
      29: invokevirtual #32                 // Method org/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties$Distribution.getPercentiles:()Ljava/util/Map;
      32: aload_1
      33: aconst_null
      34: invokespecial #22                 // Method lookupWithFallbackToAll:(Ljava/util/Map;Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #33                 // class "[D"
      40: invokevirtual #34                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.percentiles:([D)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
      43: aload_0
      44: aload_1
      45: invokevirtual #35                 // Method io/micrometer/core/instrument/Meter$Id.getType:()Lio/micrometer/core/instrument/Meter$Type;
      48: aload_0
      49: aload_3
      50: invokevirtual #36                 // Method org/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties$Distribution.getSla:()Ljava/util/Map;
      53: aload_1
      54: aconst_null
      55: invokespecial #37                 // Method lookup:(Ljava/util/Map;Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;)Ljava/lang/Object;
      58: checkcast     #38                 // class "[Lorg/springframework/boot/actuate/autoconfigure/metrics/ServiceLevelAgreementBoundary;"
      61: invokespecial #39                 // Method convertSla:(Lio/micrometer/core/instrument/Meter$Type;[Lorg/springframework/boot/actuate/autoconfigure/metrics/ServiceLevelAgreementBoundary;)[J
      64: invokevirtual #40                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.sla:([J)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
      67: aload_0
      68: aload_1
      69: invokevirtual #35                 // Method io/micrometer/core/instrument/Meter$Id.getType:()Lio/micrometer/core/instrument/Meter$Type;
      72: aload_0
      73: aload_3
      74: invokevirtual #41                 // Method org/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties$Distribution.getMinimumExpectedValue:()Ljava/util/Map;
      77: aload_1
      78: aconst_null
      79: invokespecial #37                 // Method lookup:(Ljava/util/Map;Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;)Ljava/lang/Object;
      82: checkcast     #42                 // class java/lang/String
      85: invokespecial #43                 // Method convertMeterValue:(Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/String;)Ljava/lang/Long;
      88: invokevirtual #44                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.minimumExpectedValue:(Ljava/lang/Long;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
      91: aload_0
      92: aload_1
      93: invokevirtual #35                 // Method io/micrometer/core/instrument/Meter$Id.getType:()Lio/micrometer/core/instrument/Meter$Type;
      96: aload_0
      97: aload_3
      98: invokevirtual #45                 // Method org/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties$Distribution.getMaximumExpectedValue:()Ljava/util/Map;
     101: aload_1
     102: aconst_null
     103: invokespecial #37                 // Method lookup:(Ljava/util/Map;Lio/micrometer/core/instrument/Meter$Id;Ljava/lang/Object;)Ljava/lang/Object;
     106: checkcast     #42                 // class java/lang/String
     109: invokespecial #43                 // Method convertMeterValue:(Lio/micrometer/core/instrument/Meter$Type;Ljava/lang/String;)Ljava/lang/Long;
     112: invokevirtual #46                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.maximumExpectedValue:(Ljava/lang/Long;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder;
     115: invokevirtual #47                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig$Builder.build:()Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
     118: aload_2
     119: invokevirtual #48                 // Method io/micrometer/core/instrument/distribution/DistributionStatisticConfig.merge:(Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;)Lio/micrometer/core/instrument/distribution/DistributionStatisticConfig;
     122: areturn

  private long[] convertSla(io.micrometer.core.instrument.Meter$Type, org.springframework.boot.actuate.autoconfigure.metrics.ServiceLevelAgreementBoundary[]);
    Code:
       0: aload_2
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_2
       7: invokestatic  #49                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      10: aload_1
      11: invokedynamic #50,  0             // InvokeDynamic #1:apply:(Lio/micrometer/core/instrument/Meter$Type;)Ljava/util/function/Function;
      16: invokeinterface #14,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      21: invokedynamic #51,  0             // InvokeDynamic #2:test:()Ljava/util/function/Predicate;
      26: invokeinterface #52,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      31: invokedynamic #53,  0             // InvokeDynamic #3:applyAsLong:()Ljava/util/function/ToLongFunction;
      36: invokeinterface #54,  2           // InterfaceMethod java/util/stream/Stream.mapToLong:(Ljava/util/function/ToLongFunction;)Ljava/util/stream/LongStream;
      41: invokeinterface #55,  1           // InterfaceMethod java/util/stream/LongStream.toArray:()[J
      46: astore_3
      47: aload_3
      48: arraylength
      49: ifeq          56
      52: aload_3
      53: goto          57
      56: aconst_null
      57: areturn

  private java.lang.Long convertMeterValue(io.micrometer.core.instrument.Meter$Type, java.lang.String);
    Code:
       0: aload_2
       1: ifnull        15
       4: aload_2
       5: invokestatic  #56                 // Method org/springframework/boot/actuate/autoconfigure/metrics/MeterValue.valueOf:(Ljava/lang/String;)Lorg/springframework/boot/actuate/autoconfigure/metrics/MeterValue;
       8: aload_1
       9: invokevirtual #57                 // Method org/springframework/boot/actuate/autoconfigure/metrics/MeterValue.getValue:(Lio/micrometer/core/instrument/Meter$Type;)Ljava/lang/Long;
      12: goto          16
      15: aconst_null
      16: areturn

  private <T> T lookup(java.util.Map<java.lang.String, T>, io.micrometer.core.instrument.Meter$Id, T);
    Code:
       0: aload_1
       1: invokeinterface #8,  1            // InterfaceMethod java/util/Map.isEmpty:()Z
       6: ifeq          11
       9: aload_3
      10: areturn
      11: aload_0
      12: aload_1
      13: aload_2
      14: aload_3
      15: invokedynamic #58,  0             // InvokeDynamic #4:get:(Ljava/lang/Object;)Ljava/util/function/Supplier;
      20: invokespecial #59                 // Method doLookup:(Ljava/util/Map;Lio/micrometer/core/instrument/Meter$Id;Ljava/util/function/Supplier;)Ljava/lang/Object;
      23: areturn

  private <T> T lookupWithFallbackToAll(java.util.Map<java.lang.String, T>, io.micrometer.core.instrument.Meter$Id, T);
    Code:
       0: aload_1
       1: invokeinterface #8,  1            // InterfaceMethod java/util/Map.isEmpty:()Z
       6: ifeq          11
       9: aload_3
      10: areturn
      11: aload_0
      12: aload_1
      13: aload_2
      14: aload_1
      15: aload_3
      16: invokedynamic #60,  0             // InvokeDynamic #5:get:(Ljava/util/Map;Ljava/lang/Object;)Ljava/util/function/Supplier;
      21: invokespecial #59                 // Method doLookup:(Ljava/util/Map;Lio/micrometer/core/instrument/Meter$Id;Ljava/util/function/Supplier;)Ljava/lang/Object;
      24: areturn

  private <T> T doLookup(java.util.Map<java.lang.String, T>, io.micrometer.core.instrument.Meter$Id, java.util.function.Supplier<T>);
    Code:
       0: aload_2
       1: invokevirtual #61                 // Method io/micrometer/core/instrument/Meter$Id.getName:()Ljava/lang/String;
       4: astore        4
       6: aload         4
       8: invokestatic  #62                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      11: ifeq          65
      14: aload_1
      15: aload         4
      17: invokeinterface #63,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      22: astore        5
      24: aload         5
      26: ifnull        32
      29: aload         5
      31: areturn
      32: aload         4
      34: bipush        46
      36: invokevirtual #64                 // Method java/lang/String.lastIndexOf:(I)I
      39: istore        6
      41: iload         6
      43: iconst_m1
      44: if_icmpeq     58
      47: aload         4
      49: iconst_0
      50: iload         6
      52: invokevirtual #65                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      55: goto          60
      58: ldc           #66                 // String
      60: astore        4
      62: goto          6
      65: aload_3
      66: invokeinterface #67,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      71: areturn

  private static java.lang.Object lambda$lookupWithFallbackToAll$3(java.util.Map, java.lang.Object);
    Code:
       0: aload_0
       1: ldc           #68                 // String all
       3: aload_1
       4: invokeinterface #69,  3           // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  private static java.lang.Object lambda$lookup$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  private static java.lang.Long lambda$convertSla$1(io.micrometer.core.instrument.Meter$Type, org.springframework.boot.actuate.autoconfigure.metrics.ServiceLevelAgreementBoundary);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #70                 // Method org/springframework/boot/actuate/autoconfigure/metrics/ServiceLevelAgreementBoundary.getValue:(Lio/micrometer/core/instrument/Meter$Type;)Ljava/lang/Long;
       5: areturn

  private static io.micrometer.core.instrument.Tag lambda$createMapFilter$0(java.util.Map$Entry);
    Code:
       0: aload_0
       1: invokeinterface #71,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
       6: checkcast     #42                 // class java/lang/String
       9: aload_0
      10: invokeinterface #72,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      15: checkcast     #42                 // class java/lang/String
      18: invokestatic  #73                 // InterfaceMethod io/micrometer/core/instrument/Tag.of:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tag;
      21: areturn
}
