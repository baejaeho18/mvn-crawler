Compiled from "WebEndpointProperties.java"
public class org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties {
  private final org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure exposure;

  private java.lang.String basePath;

  private final java.util.Map<java.lang.String, java.lang.String> pathMapping;

  public org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointProperties$Exposure
       8: dup
       9: invokespecial #3                  // Method org/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointProperties$Exposure."<init>":()V
      12: putfield      #4                  // Field exposure:Lorg/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointProperties$Exposure;
      15: aload_0
      16: ldc           #5                  // String /actuator
      18: putfield      #6                  // Field basePath:Ljava/lang/String;
      21: aload_0
      22: new           #7                  // class java/util/LinkedHashMap
      25: dup
      26: invokespecial #8                  // Method java/util/LinkedHashMap."<init>":()V
      29: putfield      #9                  // Field pathMapping:Ljava/util/Map;
      32: return

  public org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure getExposure();
    Code:
       0: aload_0
       1: getfield      #4                  // Field exposure:Lorg/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointProperties$Exposure;
       4: areturn

  public java.lang.String getBasePath();
    Code:
       0: aload_0
       1: getfield      #6                  // Field basePath:Ljava/lang/String;
       4: areturn

  public void setBasePath(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #10                 // Method java/lang/String.isEmpty:()Z
       4: ifne          16
       7: aload_1
       8: ldc           #11                 // String /
      10: invokevirtual #12                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ldc           #13                 // String Base path must start with \'/\' or be empty
      23: invokestatic  #14                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      26: aload_0
      27: aload_0
      28: aload_1
      29: invokespecial #15                 // Method cleanBasePath:(Ljava/lang/String;)Ljava/lang/String;
      32: putfield      #6                  // Field basePath:Ljava/lang/String;
      35: return

  private java.lang.String cleanBasePath(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #16                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
       4: ifeq          28
       7: aload_1
       8: ldc           #11                 // String /
      10: invokevirtual #17                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      13: ifeq          28
      16: aload_1
      17: iconst_0
      18: aload_1
      19: invokevirtual #18                 // Method java/lang/String.length:()I
      22: iconst_1
      23: isub
      24: invokevirtual #19                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      27: areturn
      28: aload_1
      29: areturn

  public java.util.Map<java.lang.String, java.lang.String> getPathMapping();
    Code:
       0: aload_0
       1: getfield      #9                  // Field pathMapping:Ljava/util/Map;
       4: areturn
}
