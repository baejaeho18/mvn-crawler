Compiled from "HttpClientMetricsAutoConfiguration.java"
public class org.springframework.boot.actuate.autoconfigure.metrics.web.client.HttpClientMetricsAutoConfiguration {
  private final org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties properties;

  public org.springframework.boot.actuate.autoconfigure.metrics.web.client.HttpClientMetricsAutoConfiguration(org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field properties:Lorg/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties;
       9: return

  public io.micrometer.core.instrument.config.MeterFilter metricsHttpClientUriTagFilter();
    Code:
       0: aload_0
       1: getfield      #2                  // Field properties:Lorg/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties;
       4: invokevirtual #3                  // Method org/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties.getWeb:()Lorg/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties$Web;
       7: invokevirtual #4                  // Method org/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties$Web.getClient:()Lorg/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties$Web$Client;
      10: invokevirtual #5                  // Method org/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties$Web$Client.getRequestsMetricName:()Ljava/lang/String;
      13: astore_1
      14: new           #6                  // class org/springframework/boot/actuate/autoconfigure/metrics/OnlyOnceLoggingDenyMeterFilter
      17: dup
      18: aload_1
      19: invokedynamic #7,  0              // InvokeDynamic #0:get:(Ljava/lang/String;)Ljava/util/function/Supplier;
      24: invokespecial #8                  // Method org/springframework/boot/actuate/autoconfigure/metrics/OnlyOnceLoggingDenyMeterFilter."<init>":(Ljava/util/function/Supplier;)V
      27: astore_2
      28: aload_1
      29: ldc           #9                  // String uri
      31: aload_0
      32: getfield      #2                  // Field properties:Lorg/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties;
      35: invokevirtual #3                  // Method org/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties.getWeb:()Lorg/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties$Web;
      38: invokevirtual #4                  // Method org/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties$Web.getClient:()Lorg/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties$Web$Client;
      41: invokevirtual #10                 // Method org/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties$Web$Client.getMaxUriTags:()I
      44: aload_2
      45: invokestatic  #11                 // InterfaceMethod io/micrometer/core/instrument/config/MeterFilter.maximumAllowableTags:(Ljava/lang/String;Ljava/lang/String;ILio/micrometer/core/instrument/config/MeterFilter;)Lio/micrometer/core/instrument/config/MeterFilter;
      48: areturn

  private static java.lang.String lambda$metricsHttpClientUriTagFilter$0(java.lang.String);
    Code:
       0: ldc           #12                 // String Reached the maximum number of URI tags for \'%s\'. Are you using \'uriVariables\'?
       2: iconst_1
       3: anewarray     #13                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: aastore
      10: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      13: areturn
}
