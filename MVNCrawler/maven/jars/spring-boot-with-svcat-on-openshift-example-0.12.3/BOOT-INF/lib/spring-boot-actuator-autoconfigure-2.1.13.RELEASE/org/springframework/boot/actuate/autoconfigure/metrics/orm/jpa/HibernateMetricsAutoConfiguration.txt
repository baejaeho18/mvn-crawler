Compiled from "HibernateMetricsAutoConfiguration.java"
public class org.springframework.boot.actuate.autoconfigure.metrics.orm.jpa.HibernateMetricsAutoConfiguration {
  private static final java.lang.String ENTITY_MANAGER_FACTORY_SUFFIX;

  private final io.micrometer.core.instrument.MeterRegistry registry;

  public org.springframework.boot.actuate.autoconfigure.metrics.orm.jpa.HibernateMetricsAutoConfiguration(io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
       9: return

  public void bindEntityManagerFactoriesToRegistry(java.util.Map<java.lang.String, javax.persistence.EntityManagerFactory>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #3,  0              // InvokeDynamic #0:accept:(Lorg/springframework/boot/actuate/autoconfigure/metrics/orm/jpa/HibernateMetricsAutoConfiguration;)Ljava/util/function/BiConsumer;
       7: invokeinterface #4,  2            // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      12: return

  private void bindEntityManagerFactoryToRegistry(java.lang.String, javax.persistence.EntityManagerFactory);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method getEntityManagerFactoryName:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_3
       6: new           #6                  // class io/micrometer/core/instrument/binder/jpa/HibernateMetrics
       9: dup
      10: aload_2
      11: ldc           #7                  // class org/hibernate/SessionFactory
      13: invokeinterface #8,  2            // InterfaceMethod javax/persistence/EntityManagerFactory.unwrap:(Ljava/lang/Class;)Ljava/lang/Object;
      18: checkcast     #7                  // class org/hibernate/SessionFactory
      21: aload_3
      22: invokestatic  #9                  // Method java/util/Collections.emptyList:()Ljava/util/List;
      25: invokespecial #10                 // Method io/micrometer/core/instrument/binder/jpa/HibernateMetrics."<init>":(Lorg/hibernate/SessionFactory;Ljava/lang/String;Ljava/lang/Iterable;)V
      28: aload_0
      29: getfield      #2                  // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
      32: invokevirtual #11                 // Method io/micrometer/core/instrument/binder/jpa/HibernateMetrics.bindTo:(Lio/micrometer/core/instrument/MeterRegistry;)V
      35: goto          40
      38: astore        4
      40: return
    Exception table:
       from    to  target type
           6    35    38   Class javax/persistence/PersistenceException

  private java.lang.String getEntityManagerFactoryName(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #13                 // Method java/lang/String.length:()I
       4: ldc           #15                 // String entityManagerFactory
       6: invokevirtual #13                 // Method java/lang/String.length:()I
       9: if_icmple     37
      12: aload_1
      13: ldc           #15                 // String entityManagerFactory
      15: invokestatic  #16                 // Method org/springframework/util/StringUtils.endsWithIgnoreCase:(Ljava/lang/String;Ljava/lang/String;)Z
      18: ifeq          37
      21: aload_1
      22: iconst_0
      23: aload_1
      24: invokevirtual #13                 // Method java/lang/String.length:()I
      27: ldc           #15                 // String entityManagerFactory
      29: invokevirtual #13                 // Method java/lang/String.length:()I
      32: isub
      33: invokevirtual #17                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      36: areturn
      37: aload_1
      38: areturn
}
