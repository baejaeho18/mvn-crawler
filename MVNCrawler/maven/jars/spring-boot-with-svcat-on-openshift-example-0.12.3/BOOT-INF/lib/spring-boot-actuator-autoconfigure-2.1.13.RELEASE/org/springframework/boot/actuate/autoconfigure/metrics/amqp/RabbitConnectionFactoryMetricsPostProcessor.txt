Compiled from "RabbitConnectionFactoryMetricsPostProcessor.java"
class org.springframework.boot.actuate.autoconfigure.metrics.amqp.RabbitConnectionFactoryMetricsPostProcessor implements org.springframework.beans.factory.config.BeanPostProcessor,org.springframework.core.Ordered {
  private static final java.lang.String CONNECTION_FACTORY_SUFFIX;

  private final org.springframework.context.ApplicationContext context;

  private volatile io.micrometer.core.instrument.MeterRegistry meterRegistry;

  org.springframework.boot.actuate.autoconfigure.metrics.amqp.RabbitConnectionFactoryMetricsPostProcessor(org.springframework.context.ApplicationContext);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field context:Lorg/springframework/context/ApplicationContext;
       9: return

  public java.lang.Object postProcessAfterInitialization(java.lang.Object, java.lang.String);
    Code:
       0: aload_1
       1: instanceof    #3                  // class org/springframework/amqp/rabbit/connection/AbstractConnectionFactory
       4: ifeq          20
       7: aload_0
       8: aload_0
       9: invokespecial #4                  // Method getMeterRegistry:()Lio/micrometer/core/instrument/MeterRegistry;
      12: aload_2
      13: aload_1
      14: checkcast     #3                  // class org/springframework/amqp/rabbit/connection/AbstractConnectionFactory
      17: invokespecial #5                  // Method bindConnectionFactoryToRegistry:(Lio/micrometer/core/instrument/MeterRegistry;Ljava/lang/String;Lorg/springframework/amqp/rabbit/connection/AbstractConnectionFactory;)V
      20: aload_1
      21: areturn

  private void bindConnectionFactoryToRegistry(io.micrometer.core.instrument.MeterRegistry, java.lang.String, org.springframework.amqp.rabbit.connection.AbstractConnectionFactory);
    Code:
       0: aload_3
       1: invokevirtual #6                  // Method org/springframework/amqp/rabbit/connection/AbstractConnectionFactory.getRabbitConnectionFactory:()Lcom/rabbitmq/client/ConnectionFactory;
       4: astore        4
       6: aload_0
       7: aload_2
       8: invokespecial #7                  // Method getConnectionFactoryName:(Ljava/lang/String;)Ljava/lang/String;
      11: astore        5
      13: new           #8                  // class org/springframework/boot/actuate/metrics/amqp/RabbitMetrics
      16: dup
      17: aload         4
      19: ldc           #9                  // String name
      21: aload         5
      23: invokestatic  #10                 // Method io/micrometer/core/instrument/Tags.of:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tags;
      26: invokespecial #11                 // Method org/springframework/boot/actuate/metrics/amqp/RabbitMetrics."<init>":(Lcom/rabbitmq/client/ConnectionFactory;Ljava/lang/Iterable;)V
      29: aload_1
      30: invokevirtual #12                 // Method org/springframework/boot/actuate/metrics/amqp/RabbitMetrics.bindTo:(Lio/micrometer/core/instrument/MeterRegistry;)V
      33: return

  private java.lang.String getConnectionFactoryName(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #13                 // Method java/lang/String.length:()I
       4: ldc           #15                 // String connectionFactory
       6: invokevirtual #13                 // Method java/lang/String.length:()I
       9: if_icmple     37
      12: aload_1
      13: ldc           #15                 // String connectionFactory
      15: invokestatic  #16                 // Method org/springframework/util/StringUtils.endsWithIgnoreCase:(Ljava/lang/String;Ljava/lang/String;)Z
      18: ifeq          37
      21: aload_1
      22: iconst_0
      23: aload_1
      24: invokevirtual #13                 // Method java/lang/String.length:()I
      27: ldc           #15                 // String connectionFactory
      29: invokevirtual #13                 // Method java/lang/String.length:()I
      32: isub
      33: invokevirtual #17                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      36: areturn
      37: aload_1
      38: areturn

  private io.micrometer.core.instrument.MeterRegistry getMeterRegistry();
    Code:
       0: aload_0
       1: getfield      #18                 // Field meterRegistry:Lio/micrometer/core/instrument/MeterRegistry;
       4: ifnonnull     25
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field context:Lorg/springframework/context/ApplicationContext;
      12: ldc           #19                 // class io/micrometer/core/instrument/MeterRegistry
      14: invokeinterface #20,  2           // InterfaceMethod org/springframework/context/ApplicationContext.getBean:(Ljava/lang/Class;)Ljava/lang/Object;
      19: checkcast     #19                 // class io/micrometer/core/instrument/MeterRegistry
      22: putfield      #18                 // Field meterRegistry:Lio/micrometer/core/instrument/MeterRegistry;
      25: aload_0
      26: getfield      #18                 // Field meterRegistry:Lio/micrometer/core/instrument/MeterRegistry;
      29: areturn

  public int getOrder();
    Code:
       0: ldc           #22                 // int -2147483648
       2: ireturn
}
