Compiled from "ReactiveTokenValidator.java"
class org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveTokenValidator {
  private final org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundrySecurityService securityService;

  private volatile java.util.concurrent.ConcurrentMap<java.lang.String, java.lang.String> cachedTokenKeys;

  org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveTokenValidator(org.springframework.boot.actuate.autoconfigure.cloudfoundry.reactive.ReactiveCloudFoundrySecurityService);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field cachedTokenKeys:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field securityService:Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundrySecurityService;
      20: return

  public reactor.core.publisher.Mono<java.lang.Void> validate(org.springframework.boot.actuate.autoconfigure.cloudfoundry.Token);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method validateAlgorithm:(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/Token;)Lreactor/core/publisher/Mono;
       5: aload_0
       6: aload_1
       7: invokespecial #7                  // Method validateKeyIdAndSignature:(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/Token;)Lreactor/core/publisher/Mono;
      10: invokevirtual #8                  // Method reactor/core/publisher/Mono.then:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      13: aload_0
      14: aload_1
      15: invokespecial #9                  // Method validateExpiry:(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/Token;)Lreactor/core/publisher/Mono;
      18: invokevirtual #8                  // Method reactor/core/publisher/Mono.then:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      21: aload_0
      22: aload_1
      23: invokespecial #10                 // Method validateIssuer:(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/Token;)Lreactor/core/publisher/Mono;
      26: invokevirtual #8                  // Method reactor/core/publisher/Mono.then:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      29: aload_0
      30: aload_1
      31: invokespecial #11                 // Method validateAudience:(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/Token;)Lreactor/core/publisher/Mono;
      34: invokevirtual #8                  // Method reactor/core/publisher/Mono.then:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      37: areturn

  private reactor.core.publisher.Mono<java.lang.Void> validateAlgorithm(org.springframework.boot.actuate.autoconfigure.cloudfoundry.Token);
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method org/springframework/boot/actuate/autoconfigure/cloudfoundry/Token.getSignatureAlgorithm:()Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: ifnonnull     25
       9: new           #13                 // class org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException
      12: dup
      13: getstatic     #14                 // Field org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException$Reason.INVALID_SIGNATURE:Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException$Reason;
      16: ldc           #15                 // String Signing algorithm cannot be null
      18: invokespecial #16                 // Method org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException."<init>":(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException$Reason;Ljava/lang/String;)V
      21: invokestatic  #17                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      24: areturn
      25: aload_2
      26: ldc           #18                 // String RS256
      28: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      31: ifne          72
      34: new           #13                 // class org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException
      37: dup
      38: getstatic     #20                 // Field org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException$Reason.UNSUPPORTED_TOKEN_SIGNING_ALGORITHM:Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException$Reason;
      41: new           #21                 // class java/lang/StringBuilder
      44: dup
      45: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #23                 // String Signing algorithm
      50: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_2
      54: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: ldc           #25                 // String  not supported
      59: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokespecial #16                 // Method org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException."<init>":(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException$Reason;Ljava/lang/String;)V
      68: invokestatic  #17                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      71: areturn
      72: invokestatic  #27                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      75: areturn

  private reactor.core.publisher.Mono<java.lang.Void> validateKeyIdAndSignature(org.springframework.boot.actuate.autoconfigure.cloudfoundry.Token);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #28                 // Method getTokenKey:(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/Token;)Lreactor/core/publisher/Mono;
       5: aload_0
       6: aload_1
       7: invokedynamic #29,  0             // InvokeDynamic #0:test:(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveTokenValidator;Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/Token;)Ljava/util/function/Predicate;
      12: invokevirtual #30                 // Method reactor/core/publisher/Mono.filter:(Ljava/util/function/Predicate;)Lreactor/core/publisher/Mono;
      15: new           #13                 // class org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException
      18: dup
      19: getstatic     #14                 // Field org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException$Reason.INVALID_SIGNATURE:Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException$Reason;
      22: ldc           #31                 // String RSA Signature did not match content
      24: invokespecial #16                 // Method org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException."<init>":(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException$Reason;Ljava/lang/String;)V
      27: invokestatic  #17                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      30: invokevirtual #32                 // Method reactor/core/publisher/Mono.switchIfEmpty:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      33: invokevirtual #33                 // Method reactor/core/publisher/Mono.then:()Lreactor/core/publisher/Mono;
      36: areturn

  private reactor.core.publisher.Mono<java.lang.String> getTokenKey(org.springframework.boot.actuate.autoconfigure.cloudfoundry.Token);
    Code:
       0: aload_1
       1: invokevirtual #34                 // Method org/springframework/boot/actuate/autoconfigure/cloudfoundry/Token.getKeyId:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: getfield      #4                  // Field cachedTokenKeys:Ljava/util/concurrent/ConcurrentMap;
       9: aload_2
      10: invokeinterface #35,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #36                 // class java/lang/String
      18: astore_3
      19: aload_3
      20: ifnull        28
      23: aload_3
      24: invokestatic  #37                 // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      27: areturn
      28: aload_0
      29: getfield      #5                  // Field securityService:Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundrySecurityService;
      32: invokevirtual #38                 // Method org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundrySecurityService.fetchTokenKeys:()Lreactor/core/publisher/Mono;
      35: aload_0
      36: invokedynamic #39,  0             // InvokeDynamic #1:accept:(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveTokenValidator;)Ljava/util/function/Consumer;
      41: invokevirtual #40                 // Method reactor/core/publisher/Mono.doOnSuccess:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;
      44: aload_2
      45: invokedynamic #41,  0             // InvokeDynamic #2:test:(Ljava/lang/String;)Ljava/util/function/Predicate;
      50: invokevirtual #30                 // Method reactor/core/publisher/Mono.filter:(Ljava/util/function/Predicate;)Lreactor/core/publisher/Mono;
      53: aload_2
      54: invokedynamic #42,  0             // InvokeDynamic #3:apply:(Ljava/lang/String;)Ljava/util/function/Function;
      59: invokevirtual #43                 // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      62: new           #13                 // class org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException
      65: dup
      66: getstatic     #44                 // Field org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException$Reason.INVALID_KEY_ID:Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException$Reason;
      69: ldc           #45                 // String Key Id present in token header does not match
      71: invokespecial #16                 // Method org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException."<init>":(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException$Reason;Ljava/lang/String;)V
      74: invokestatic  #17                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      77: invokevirtual #32                 // Method reactor/core/publisher/Mono.switchIfEmpty:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      80: areturn

  private void cacheTokenKeys(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       4: dup
       5: aload_1
       6: invokespecial #46                 // Method java/util/concurrent/ConcurrentHashMap."<init>":(Ljava/util/Map;)V
       9: putfield      #4                  // Field cachedTokenKeys:Ljava/util/concurrent/ConcurrentMap;
      12: return

  private boolean hasValidSignature(org.springframework.boot.actuate.autoconfigure.cloudfoundry.Token, java.lang.String);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #47                 // Method getPublicKey:(Ljava/lang/String;)Ljava/security/PublicKey;
       5: astore_3
       6: ldc           #48                 // String SHA256withRSA
       8: invokestatic  #49                 // Method java/security/Signature.getInstance:(Ljava/lang/String;)Ljava/security/Signature;
      11: astore        4
      13: aload         4
      15: aload_3
      16: invokevirtual #50                 // Method java/security/Signature.initVerify:(Ljava/security/PublicKey;)V
      19: aload         4
      21: aload_1
      22: invokevirtual #51                 // Method org/springframework/boot/actuate/autoconfigure/cloudfoundry/Token.getContent:()[B
      25: invokevirtual #52                 // Method java/security/Signature.update:([B)V
      28: aload         4
      30: aload_1
      31: invokevirtual #53                 // Method org/springframework/boot/actuate/autoconfigure/cloudfoundry/Token.getSignature:()[B
      34: invokevirtual #54                 // Method java/security/Signature.verify:([B)Z
      37: ireturn
      38: astore_3
      39: iconst_0
      40: ireturn
    Exception table:
       from    to  target type
           0    37    38   Class java/security/GeneralSecurityException

  private java.security.PublicKey getPublicKey(java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.spec.InvalidKeySpecException;
    Code:
       0: aload_1
       1: ldc           #56                 // String -----BEGIN PUBLIC KEY-----\n
       3: ldc           #57                 // String
       5: invokevirtual #58                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
       8: astore_1
       9: aload_1
      10: ldc           #59                 // String -----END PUBLIC KEY-----
      12: ldc           #57                 // String
      14: invokevirtual #58                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      17: astore_1
      18: aload_1
      19: invokevirtual #60                 // Method java/lang/String.trim:()Ljava/lang/String;
      22: ldc           #61                 // String \n
      24: ldc           #57                 // String
      26: invokevirtual #58                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      29: astore_1
      30: aload_1
      31: invokestatic  #62                 // Method org/springframework/util/Base64Utils.decodeFromString:(Ljava/lang/String;)[B
      34: astore_2
      35: new           #63                 // class java/security/spec/X509EncodedKeySpec
      38: dup
      39: aload_2
      40: invokespecial #64                 // Method java/security/spec/X509EncodedKeySpec."<init>":([B)V
      43: astore_3
      44: ldc           #65                 // String RSA
      46: invokestatic  #66                 // Method java/security/KeyFactory.getInstance:(Ljava/lang/String;)Ljava/security/KeyFactory;
      49: aload_3
      50: invokevirtual #67                 // Method java/security/KeyFactory.generatePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;
      53: areturn

  private reactor.core.publisher.Mono<java.lang.Void> validateExpiry(org.springframework.boot.actuate.autoconfigure.cloudfoundry.Token);
    Code:
       0: getstatic     #68                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       3: invokestatic  #69                 // Method java/lang/System.currentTimeMillis:()J
       6: invokevirtual #70                 // Method java/util/concurrent/TimeUnit.toSeconds:(J)J
       9: lstore_2
      10: lload_2
      11: aload_1
      12: invokevirtual #71                 // Method org/springframework/boot/actuate/autoconfigure/cloudfoundry/Token.getExpiry:()J
      15: lcmp
      16: ifle          35
      19: new           #13                 // class org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException
      22: dup
      23: getstatic     #72                 // Field org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException$Reason.TOKEN_EXPIRED:Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException$Reason;
      26: ldc           #73                 // String Token expired
      28: invokespecial #16                 // Method org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException."<init>":(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException$Reason;Ljava/lang/String;)V
      31: invokestatic  #17                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      34: areturn
      35: invokestatic  #27                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      38: areturn

  private reactor.core.publisher.Mono<java.lang.Void> validateIssuer(org.springframework.boot.actuate.autoconfigure.cloudfoundry.Token);
    Code:
       0: aload_0
       1: getfield      #5                  // Field securityService:Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundrySecurityService;
       4: invokevirtual #74                 // Method org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundrySecurityService.getUaaUrl:()Lreactor/core/publisher/Mono;
       7: invokedynamic #75,  0             // InvokeDynamic #4:apply:()Ljava/util/function/Function;
      12: invokevirtual #43                 // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      15: aload_1
      16: invokedynamic #76,  0             // InvokeDynamic #5:test:(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/Token;)Ljava/util/function/Predicate;
      21: invokevirtual #30                 // Method reactor/core/publisher/Mono.filter:(Ljava/util/function/Predicate;)Lreactor/core/publisher/Mono;
      24: new           #13                 // class org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException
      27: dup
      28: getstatic     #77                 // Field org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException$Reason.INVALID_ISSUER:Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException$Reason;
      31: ldc           #78                 // String Token issuer does not match
      33: invokespecial #16                 // Method org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException."<init>":(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException$Reason;Ljava/lang/String;)V
      36: invokestatic  #17                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      39: invokevirtual #32                 // Method reactor/core/publisher/Mono.switchIfEmpty:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      42: invokevirtual #33                 // Method reactor/core/publisher/Mono.then:()Lreactor/core/publisher/Mono;
      45: areturn

  private reactor.core.publisher.Mono<java.lang.Void> validateAudience(org.springframework.boot.actuate.autoconfigure.cloudfoundry.Token);
    Code:
       0: aload_1
       1: invokevirtual #79                 // Method org/springframework/boot/actuate/autoconfigure/cloudfoundry/Token.getScope:()Ljava/util/List;
       4: ldc           #80                 // String actuator.read
       6: invokeinterface #81,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      11: ifne          30
      14: new           #13                 // class org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException
      17: dup
      18: getstatic     #82                 // Field org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException$Reason.INVALID_AUDIENCE:Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException$Reason;
      21: ldc           #83                 // String Token does not have audience actuator
      23: invokespecial #16                 // Method org/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException."<init>":(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/CloudFoundryAuthorizationException$Reason;Ljava/lang/String;)V
      26: invokestatic  #17                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      29: areturn
      30: invokestatic  #27                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      33: areturn

  private static boolean lambda$validateIssuer$4(org.springframework.boot.actuate.autoconfigure.cloudfoundry.Token, java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #84                 // Method org/springframework/boot/actuate/autoconfigure/cloudfoundry/Token.getIssuer:()Ljava/lang/String;
       5: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       8: ireturn

  private static java.lang.String lambda$validateIssuer$3(java.lang.String);
    Code:
       0: ldc           #85                 // String %s/oauth/token
       2: iconst_1
       3: anewarray     #86                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: aastore
      10: invokestatic  #87                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      13: areturn

  private static java.lang.String lambda$getTokenKey$2(java.lang.String, java.util.Map);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #88,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #36                 // class java/lang/String
      10: areturn

  private static boolean lambda$getTokenKey$1(java.lang.String, java.util.Map);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #89,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
       7: ireturn

  private boolean lambda$validateKeyIdAndSignature$0(org.springframework.boot.actuate.autoconfigure.cloudfoundry.Token, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #90                 // Method hasValidSignature:(Lorg/springframework/boot/actuate/autoconfigure/cloudfoundry/Token;Ljava/lang/String;)Z
       6: ireturn
}
