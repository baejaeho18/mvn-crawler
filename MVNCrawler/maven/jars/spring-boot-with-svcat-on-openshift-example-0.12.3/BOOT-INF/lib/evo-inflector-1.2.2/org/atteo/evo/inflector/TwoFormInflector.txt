Compiled from "TwoFormInflector.java"
public abstract class org.atteo.evo.inflector.TwoFormInflector {
  private final java.util.List<org.atteo.evo.inflector.TwoFormInflector$Rule> rules;

  public org.atteo.evo.inflector.TwoFormInflector();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field rules:Ljava/util/List;
      15: return

  protected java.lang.String getPlural(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field rules:Ljava/util/List;
       4: invokeinterface #5,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          49
      19: aload_2
      20: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #8                  // class org/atteo/evo/inflector/TwoFormInflector$Rule
      28: astore_3
      29: aload_3
      30: aload_1
      31: invokeinterface #9,  2            // InterfaceMethod org/atteo/evo/inflector/TwoFormInflector$Rule.getPlural:(Ljava/lang/String;)Ljava/lang/String;
      36: astore        4
      38: aload         4
      40: ifnull        46
      43: aload         4
      45: areturn
      46: goto          10
      49: aconst_null
      50: areturn

  protected void uncountable(java.lang.String[]);
    Code:
       0: aload_0
       1: getfield      #4                  // Field rules:Ljava/util/List;
       4: new           #10                 // class org/atteo/evo/inflector/TwoFormInflector$CategoryRule
       7: dup
       8: aload_1
       9: ldc           #11                 // String
      11: ldc           #11                 // String
      13: invokespecial #12                 // Method org/atteo/evo/inflector/TwoFormInflector$CategoryRule."<init>":([Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      16: invokeinterface #13,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      21: pop
      22: return

  protected void irregular(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: iconst_0
       2: invokevirtual #14                 // Method java/lang/String.charAt:(I)C
       5: aload_2
       6: iconst_0
       7: invokevirtual #14                 // Method java/lang/String.charAt:(I)C
      10: if_icmpne     101
      13: aload_0
      14: getfield      #4                  // Field rules:Ljava/util/List;
      17: new           #15                 // class org/atteo/evo/inflector/TwoFormInflector$RegExpRule
      20: dup
      21: new           #16                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #18                 // String (?i)(
      30: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_1
      34: iconst_0
      35: invokevirtual #14                 // Method java/lang/String.charAt:(I)C
      38: invokevirtual #20                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      41: ldc           #21                 // String )
      43: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_1
      47: iconst_1
      48: invokevirtual #22                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      51: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: ldc           #23                 // String $
      56: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: invokestatic  #25                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      65: new           #16                 // class java/lang/StringBuilder
      68: dup
      69: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      72: ldc           #26                 // String $1
      74: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_2
      78: iconst_1
      79: invokevirtual #22                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      82: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      88: aconst_null
      89: invokespecial #27                 // Method org/atteo/evo/inflector/TwoFormInflector$RegExpRule."<init>":(Ljava/util/regex/Pattern;Ljava/lang/String;Lorg/atteo/evo/inflector/TwoFormInflector$1;)V
      92: invokeinterface #13,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      97: pop
      98: goto          279
     101: aload_0
     102: getfield      #4                  // Field rules:Ljava/util/List;
     105: new           #15                 // class org/atteo/evo/inflector/TwoFormInflector$RegExpRule
     108: dup
     109: new           #16                 // class java/lang/StringBuilder
     112: dup
     113: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
     116: aload_1
     117: iconst_0
     118: invokevirtual #14                 // Method java/lang/String.charAt:(I)C
     121: invokestatic  #28                 // Method java/lang/Character.toUpperCase:(C)C
     124: invokevirtual #20                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     127: ldc           #29                 // String (?i)
     129: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: aload_1
     133: iconst_1
     134: invokevirtual #22                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     137: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: ldc           #23                 // String $
     142: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     148: invokestatic  #25                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
     151: new           #16                 // class java/lang/StringBuilder
     154: dup
     155: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
     158: aload_2
     159: iconst_0
     160: invokevirtual #14                 // Method java/lang/String.charAt:(I)C
     163: invokestatic  #28                 // Method java/lang/Character.toUpperCase:(C)C
     166: invokevirtual #20                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     169: aload_2
     170: iconst_1
     171: invokevirtual #22                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     174: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     177: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     180: aconst_null
     181: invokespecial #27                 // Method org/atteo/evo/inflector/TwoFormInflector$RegExpRule."<init>":(Ljava/util/regex/Pattern;Ljava/lang/String;Lorg/atteo/evo/inflector/TwoFormInflector$1;)V
     184: invokeinterface #13,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     189: pop
     190: aload_0
     191: getfield      #4                  // Field rules:Ljava/util/List;
     194: new           #15                 // class org/atteo/evo/inflector/TwoFormInflector$RegExpRule
     197: dup
     198: new           #16                 // class java/lang/StringBuilder
     201: dup
     202: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
     205: aload_1
     206: iconst_0
     207: invokevirtual #14                 // Method java/lang/String.charAt:(I)C
     210: invokestatic  #30                 // Method java/lang/Character.toLowerCase:(C)C
     213: invokevirtual #20                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     216: ldc           #29                 // String (?i)
     218: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     221: aload_1
     222: iconst_1
     223: invokevirtual #22                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     226: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     229: ldc           #23                 // String $
     231: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     234: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     237: invokestatic  #25                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
     240: new           #16                 // class java/lang/StringBuilder
     243: dup
     244: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
     247: aload_2
     248: iconst_0
     249: invokevirtual #14                 // Method java/lang/String.charAt:(I)C
     252: invokestatic  #30                 // Method java/lang/Character.toLowerCase:(C)C
     255: invokevirtual #20                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     258: aload_2
     259: iconst_1
     260: invokevirtual #22                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     263: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     266: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     269: aconst_null
     270: invokespecial #27                 // Method org/atteo/evo/inflector/TwoFormInflector$RegExpRule."<init>":(Ljava/util/regex/Pattern;Ljava/lang/String;Lorg/atteo/evo/inflector/TwoFormInflector$1;)V
     273: invokeinterface #13,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     278: pop
     279: return

  protected void irregular(java.lang.String[][]);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     38
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload_0
      21: aload         5
      23: iconst_0
      24: aaload
      25: aload         5
      27: iconst_1
      28: aaload
      29: invokevirtual #31                 // Method irregular:(Ljava/lang/String;Ljava/lang/String;)V
      32: iinc          4, 1
      35: goto          8
      38: return

  protected void rule(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field rules:Ljava/util/List;
       4: new           #15                 // class org/atteo/evo/inflector/TwoFormInflector$RegExpRule
       7: dup
       8: aload_1
       9: iconst_2
      10: invokestatic  #33                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;
      13: aload_2
      14: aconst_null
      15: invokespecial #27                 // Method org/atteo/evo/inflector/TwoFormInflector$RegExpRule."<init>":(Ljava/util/regex/Pattern;Ljava/lang/String;Lorg/atteo/evo/inflector/TwoFormInflector$1;)V
      18: invokeinterface #13,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      23: pop
      24: return

  protected void rule(java.lang.String[][]);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     56
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload_0
      21: getfield      #4                  // Field rules:Ljava/util/List;
      24: new           #15                 // class org/atteo/evo/inflector/TwoFormInflector$RegExpRule
      27: dup
      28: aload         5
      30: iconst_0
      31: aaload
      32: iconst_2
      33: invokestatic  #33                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;
      36: aload         5
      38: iconst_1
      39: aaload
      40: aconst_null
      41: invokespecial #27                 // Method org/atteo/evo/inflector/TwoFormInflector$RegExpRule."<init>":(Ljava/util/regex/Pattern;Ljava/lang/String;Lorg/atteo/evo/inflector/TwoFormInflector$1;)V
      44: invokeinterface #13,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          8
      56: return

  protected void categoryRule(java.lang.String[], java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field rules:Ljava/util/List;
       4: new           #10                 // class org/atteo/evo/inflector/TwoFormInflector$CategoryRule
       7: dup
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokespecial #12                 // Method org/atteo/evo/inflector/TwoFormInflector$CategoryRule."<init>":([Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      14: invokeinterface #13,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      19: pop
      20: return
}
