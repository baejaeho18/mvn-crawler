Compiled from "ParamsRequestCondition.java"
class org.springframework.web.servlet.mvc.condition.ParamsRequestCondition$ParamExpression extends org.springframework.web.servlet.mvc.condition.AbstractNameValueExpression<java.lang.String> {
  org.springframework.web.servlet.mvc.condition.ParamsRequestCondition$ParamExpression(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/springframework/web/servlet/mvc/condition/AbstractNameValueExpression."<init>":(Ljava/lang/String;)V
       5: return

  protected boolean isCaseSensitiveName();
    Code:
       0: iconst_1
       1: ireturn

  protected java.lang.String parseValue(java.lang.String);
    Code:
       0: aload_1
       1: areturn

  protected boolean matchName(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field name:Ljava/lang/String;
       5: invokestatic  #3                  // Method org/springframework/web/util/WebUtils.hasSubmitParameter:(Ljavax/servlet/ServletRequest;Ljava/lang/String;)Z
       8: ifne          29
      11: aload_1
      12: invokeinterface #4,  1            // InterfaceMethod javax/servlet/http/HttpServletRequest.getParameterMap:()Ljava/util/Map;
      17: aload_0
      18: getfield      #2                  // Field name:Ljava/lang/String;
      21: invokeinterface #5,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      26: ifeq          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ireturn

  protected boolean matchValue(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: getfield      #6                  // Field value:Ljava/lang/Object;
       4: aload_1
       5: aload_0
       6: getfield      #2                  // Field name:Ljava/lang/String;
       9: invokeinterface #7,  2            // InterfaceMethod javax/servlet/http/HttpServletRequest.getParameter:(Ljava/lang/String;)Ljava/lang/String;
      14: invokestatic  #8                  // Method org/springframework/util/ObjectUtils.nullSafeEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      17: ireturn

  protected java.lang.Object parseValue(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method parseValue:(Ljava/lang/String;)Ljava/lang/String;
       5: areturn
}
