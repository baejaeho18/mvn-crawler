Compiled from "AbstractHandlerExceptionResolver.java"
public abstract class org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver implements org.springframework.web.servlet.HandlerExceptionResolver,org.springframework.core.Ordered {
  private static final java.lang.String HEADER_CACHE_CONTROL;

  protected final org.apache.commons.logging.Log logger;

  private int order;

  private java.util.Set<?> mappedHandlers;

  private java.lang.Class<?>[] mappedHandlerClasses;

  private org.apache.commons.logging.Log warnLogger;

  private boolean preventResponseCaching;

  public org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: ldc           #6                  // int 2147483647
      18: putfield      #7                  // Field order:I
      21: aload_0
      22: iconst_0
      23: putfield      #8                  // Field preventResponseCaching:Z
      26: return

  public void setOrder(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field order:I
       5: return

  public int getOrder();
    Code:
       0: aload_0
       1: getfield      #7                  // Field order:I
       4: ireturn

  public void setMappedHandlers(java.util.Set<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field mappedHandlers:Ljava/util/Set;
       5: return

  public void setMappedHandlerClasses(java.lang.Class<?>...);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field mappedHandlerClasses:[Ljava/lang/Class;
       5: return

  public void setWarnLogCategory(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #11                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
       5: ifeq          15
       8: aload_1
       9: invokestatic  #12                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/String;)Lorg/apache/commons/logging/Log;
      12: goto          16
      15: aconst_null
      16: putfield      #13                 // Field warnLogger:Lorg/apache/commons/logging/Log;
      19: return

  public void setPreventResponseCaching(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field preventResponseCaching:Z
       5: return

  public org.springframework.web.servlet.ModelAndView resolveException(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, java.lang.Exception);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokevirtual #14                 // Method shouldApplyTo:(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/Object;)Z
       6: ifeq          143
       9: aload_0
      10: aload         4
      12: aload_2
      13: invokevirtual #15                 // Method prepareResponse:(Ljava/lang/Exception;Ljavax/servlet/http/HttpServletResponse;)V
      16: aload_0
      17: aload_1
      18: aload_2
      19: aload_3
      20: aload         4
      22: invokevirtual #16                 // Method doResolveException:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/Object;Ljava/lang/Exception;)Lorg/springframework/web/servlet/ModelAndView;
      25: astore        5
      27: aload         5
      29: ifnull        140
      32: aload_0
      33: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      36: invokeinterface #17,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      41: ifeq          133
      44: aload_0
      45: getfield      #13                 // Field warnLogger:Lorg/apache/commons/logging/Log;
      48: ifnull        63
      51: aload_0
      52: getfield      #13                 // Field warnLogger:Lorg/apache/commons/logging/Log;
      55: invokeinterface #18,  1           // InterfaceMethod org/apache/commons/logging/Log.isWarnEnabled:()Z
      60: ifne          133
      63: aload_0
      64: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      67: new           #19                 // class java/lang/StringBuilder
      70: dup
      71: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      74: ldc           #21                 // String Resolved [
      76: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload         4
      81: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      84: ldc           #24                 // String ]
      86: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: aload         5
      91: invokevirtual #25                 // Method org/springframework/web/servlet/ModelAndView.isEmpty:()Z
      94: ifeq          102
      97: ldc           #26                 // String
      99: goto          122
     102: new           #19                 // class java/lang/StringBuilder
     105: dup
     106: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
     109: ldc           #27                 // String  to
     111: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: aload         5
     116: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     119: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     122: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     133: aload_0
     134: aload         4
     136: aload_1
     137: invokevirtual #30                 // Method logException:(Ljava/lang/Exception;Ljavax/servlet/http/HttpServletRequest;)V
     140: aload         5
     142: areturn
     143: aconst_null
     144: areturn

  protected boolean shouldApplyTo(javax.servlet.http.HttpServletRequest, java.lang.Object);
    Code:
       0: aload_2
       1: ifnull        75
       4: aload_0
       5: getfield      #9                  // Field mappedHandlers:Ljava/util/Set;
       8: ifnull        26
      11: aload_0
      12: getfield      #9                  // Field mappedHandlers:Ljava/util/Set;
      15: aload_2
      16: invokeinterface #31,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      21: ifeq          26
      24: iconst_1
      25: ireturn
      26: aload_0
      27: getfield      #10                 // Field mappedHandlerClasses:[Ljava/lang/Class;
      30: ifnull        75
      33: aload_0
      34: getfield      #10                 // Field mappedHandlerClasses:[Ljava/lang/Class;
      37: astore_3
      38: aload_3
      39: arraylength
      40: istore        4
      42: iconst_0
      43: istore        5
      45: iload         5
      47: iload         4
      49: if_icmpge     75
      52: aload_3
      53: iload         5
      55: aaload
      56: astore        6
      58: aload         6
      60: aload_2
      61: invokevirtual #32                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      64: ifeq          69
      67: iconst_1
      68: ireturn
      69: iinc          5, 1
      72: goto          45
      75: aload_0
      76: getfield      #9                  // Field mappedHandlers:Ljava/util/Set;
      79: ifnonnull     93
      82: aload_0
      83: getfield      #10                 // Field mappedHandlerClasses:[Ljava/lang/Class;
      86: ifnonnull     93
      89: iconst_1
      90: goto          94
      93: iconst_0
      94: ireturn

  protected void logException(java.lang.Exception, javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: getfield      #13                 // Field warnLogger:Lorg/apache/commons/logging/Log;
       4: ifnull        34
       7: aload_0
       8: getfield      #13                 // Field warnLogger:Lorg/apache/commons/logging/Log;
      11: invokeinterface #18,  1           // InterfaceMethod org/apache/commons/logging/Log.isWarnEnabled:()Z
      16: ifeq          34
      19: aload_0
      20: getfield      #13                 // Field warnLogger:Lorg/apache/commons/logging/Log;
      23: aload_0
      24: aload_1
      25: aload_2
      26: invokevirtual #33                 // Method buildLogMessage:(Ljava/lang/Exception;Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
      29: invokeinterface #34,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      34: return

  protected java.lang.String buildLogMessage(java.lang.Exception, javax.servlet.http.HttpServletRequest);
    Code:
       0: new           #19                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #21                 // String Resolved [
       9: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_1
      13: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      16: ldc           #24                 // String ]
      18: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      24: areturn

  protected void prepareResponse(java.lang.Exception, javax.servlet.http.HttpServletResponse);
    Code:
       0: aload_0
       1: getfield      #8                  // Field preventResponseCaching:Z
       4: ifeq          12
       7: aload_0
       8: aload_2
       9: invokevirtual #35                 // Method preventCaching:(Ljavax/servlet/http/HttpServletResponse;)V
      12: return

  protected void preventCaching(javax.servlet.http.HttpServletResponse);
    Code:
       0: aload_1
       1: ldc           #37                 // String Cache-Control
       3: ldc           #38                 // String no-store
       5: invokeinterface #39,  3           // InterfaceMethod javax/servlet/http/HttpServletResponse.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      10: return

  protected abstract org.springframework.web.servlet.ModelAndView doResolveException(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, java.lang.Exception);
}
