Compiled from "AbstractCachingViewResolver.java"
public abstract class org.springframework.web.servlet.view.AbstractCachingViewResolver extends org.springframework.web.context.support.WebApplicationObjectSupport implements org.springframework.web.servlet.ViewResolver {
  public static final int DEFAULT_CACHE_LIMIT;

  private static final org.springframework.web.servlet.View UNRESOLVED_VIEW;

  private volatile int cacheLimit;

  private boolean cacheUnresolved;

  private final java.util.Map<java.lang.Object, org.springframework.web.servlet.View> viewAccessCache;

  private final java.util.Map<java.lang.Object, org.springframework.web.servlet.View> viewCreationCache;

  public org.springframework.web.servlet.view.AbstractCachingViewResolver();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/springframework/web/context/support/WebApplicationObjectSupport."<init>":()V
       4: aload_0
       5: sipush        1024
       8: putfield      #4                  // Field cacheLimit:I
      11: aload_0
      12: iconst_1
      13: putfield      #5                  // Field cacheUnresolved:Z
      16: aload_0
      17: new           #6                  // class java/util/concurrent/ConcurrentHashMap
      20: dup
      21: sipush        1024
      24: invokespecial #7                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      27: putfield      #1                  // Field viewAccessCache:Ljava/util/Map;
      30: aload_0
      31: new           #8                  // class org/springframework/web/servlet/view/AbstractCachingViewResolver$2
      34: dup
      35: aload_0
      36: sipush        1024
      39: ldc           #9                  // float 0.75f
      41: iconst_1
      42: invokespecial #10                 // Method org/springframework/web/servlet/view/AbstractCachingViewResolver$2."<init>":(Lorg/springframework/web/servlet/view/AbstractCachingViewResolver;IFZ)V
      45: putfield      #11                 // Field viewCreationCache:Ljava/util/Map;
      48: return

  public void setCacheLimit(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field cacheLimit:I
       5: return

  public int getCacheLimit();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cacheLimit:I
       4: ireturn

  public void setCache(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: ifeq          11
       5: sipush        1024
       8: goto          12
      11: iconst_0
      12: putfield      #4                  // Field cacheLimit:I
      15: return

  public boolean isCache();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cacheLimit:I
       4: ifle          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void setCacheUnresolved(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field cacheUnresolved:Z
       5: return

  public boolean isCacheUnresolved();
    Code:
       0: aload_0
       1: getfield      #5                  // Field cacheUnresolved:Z
       4: ireturn

  public org.springframework.web.servlet.View resolveViewName(java.lang.String, java.util.Locale) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method isCache:()Z
       4: ifne          14
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokevirtual #13                 // Method createView:(Ljava/lang/String;Ljava/util/Locale;)Lorg/springframework/web/servlet/View;
      13: areturn
      14: aload_0
      15: aload_1
      16: aload_2
      17: invokevirtual #14                 // Method getCacheKey:(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;
      20: astore_3
      21: aload_0
      22: getfield      #1                  // Field viewAccessCache:Ljava/util/Map;
      25: aload_3
      26: invokeinterface #15,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #16                 // class org/springframework/web/servlet/View
      34: astore        4
      36: aload         4
      38: ifnonnull     142
      41: aload_0
      42: getfield      #11                 // Field viewCreationCache:Ljava/util/Map;
      45: dup
      46: astore        5
      48: monitorenter
      49: aload_0
      50: getfield      #11                 // Field viewCreationCache:Ljava/util/Map;
      53: aload_3
      54: invokeinterface #15,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      59: checkcast     #16                 // class org/springframework/web/servlet/View
      62: astore        4
      64: aload         4
      66: ifnonnull     125
      69: aload_0
      70: aload_1
      71: aload_2
      72: invokevirtual #13                 // Method createView:(Ljava/lang/String;Ljava/util/Locale;)Lorg/springframework/web/servlet/View;
      75: astore        4
      77: aload         4
      79: ifnonnull     94
      82: aload_0
      83: getfield      #5                  // Field cacheUnresolved:Z
      86: ifeq          94
      89: getstatic     #17                 // Field UNRESOLVED_VIEW:Lorg/springframework/web/servlet/View;
      92: astore        4
      94: aload         4
      96: ifnull        125
      99: aload_0
     100: getfield      #1                  // Field viewAccessCache:Ljava/util/Map;
     103: aload_3
     104: aload         4
     106: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     111: pop
     112: aload_0
     113: getfield      #11                 // Field viewCreationCache:Ljava/util/Map;
     116: aload_3
     117: aload         4
     119: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     124: pop
     125: aload         5
     127: monitorexit
     128: goto          139
     131: astore        6
     133: aload         5
     135: monitorexit
     136: aload         6
     138: athrow
     139: goto          185
     142: aload_0
     143: getfield      #19                 // Field logger:Lorg/apache/commons/logging/Log;
     146: invokeinterface #20,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
     151: ifeq          185
     154: aload_0
     155: getfield      #19                 // Field logger:Lorg/apache/commons/logging/Log;
     158: new           #21                 // class java/lang/StringBuilder
     161: dup
     162: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
     165: aload_3
     166: invokestatic  #23                 // Method formatKey:(Ljava/lang/Object;)Ljava/lang/String;
     169: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     172: ldc           #25                 // String served from cache
     174: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     177: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     180: invokeinterface #27,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
     185: aload         4
     187: getstatic     #17                 // Field UNRESOLVED_VIEW:Lorg/springframework/web/servlet/View;
     190: if_acmpeq     198
     193: aload         4
     195: goto          199
     198: aconst_null
     199: areturn
    Exception table:
       from    to  target type
          49   128   131   any
         131   136   131   any

  private static java.lang.String formatKey(java.lang.Object);
    Code:
       0: new           #21                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #28                 // String View with key [
       9: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      16: ldc           #30                 // String ]
      18: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      24: areturn

  protected java.lang.Object getCacheKey(java.lang.String, java.util.Locale);
    Code:
       0: new           #21                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_1
       8: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: bipush        95
      13: invokevirtual #31                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      16: aload_2
      17: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      20: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: areturn

  public void removeFromCache(java.lang.String, java.util.Locale);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method isCache:()Z
       4: ifne          21
       7: aload_0
       8: getfield      #19                 // Field logger:Lorg/apache/commons/logging/Log;
      11: ldc           #32                 // String Caching is OFF (removal not necessary)
      13: invokeinterface #33,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      18: goto          126
      21: aload_0
      22: aload_1
      23: aload_2
      24: invokevirtual #14                 // Method getCacheKey:(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;
      27: astore_3
      28: aload_0
      29: getfield      #11                 // Field viewCreationCache:Ljava/util/Map;
      32: dup
      33: astore        5
      35: monitorenter
      36: aload_0
      37: getfield      #1                  // Field viewAccessCache:Ljava/util/Map;
      40: aload_3
      41: invokeinterface #34,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: aload_0
      48: getfield      #11                 // Field viewCreationCache:Ljava/util/Map;
      51: aload_3
      52: invokeinterface #34,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      57: astore        4
      59: aload         5
      61: monitorexit
      62: goto          73
      65: astore        6
      67: aload         5
      69: monitorexit
      70: aload         6
      72: athrow
      73: aload_0
      74: getfield      #19                 // Field logger:Lorg/apache/commons/logging/Log;
      77: invokeinterface #35,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      82: ifeq          126
      85: aload_0
      86: getfield      #19                 // Field logger:Lorg/apache/commons/logging/Log;
      89: new           #21                 // class java/lang/StringBuilder
      92: dup
      93: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      96: aload_3
      97: invokestatic  #23                 // Method formatKey:(Ljava/lang/Object;)Ljava/lang/String;
     100: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: aload         4
     105: ifnull        113
     108: ldc           #36                 // String cleared from cache
     110: goto          115
     113: ldc           #37                 // String not found in the cache
     115: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     121: invokeinterface #38,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     126: return
    Exception table:
       from    to  target type
          36    62    65   any
          65    70    65   any

  public void clearCache();
    Code:
       0: aload_0
       1: getfield      #19                 // Field logger:Lorg/apache/commons/logging/Log;
       4: ldc           #39                 // String Clearing all views from the cache
       6: invokeinterface #38,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      11: aload_0
      12: getfield      #11                 // Field viewCreationCache:Ljava/util/Map;
      15: dup
      16: astore_1
      17: monitorenter
      18: aload_0
      19: getfield      #1                  // Field viewAccessCache:Ljava/util/Map;
      22: invokeinterface #40,  1           // InterfaceMethod java/util/Map.clear:()V
      27: aload_0
      28: getfield      #11                 // Field viewCreationCache:Ljava/util/Map;
      31: invokeinterface #40,  1           // InterfaceMethod java/util/Map.clear:()V
      36: aload_1
      37: monitorexit
      38: goto          46
      41: astore_2
      42: aload_1
      43: monitorexit
      44: aload_2
      45: athrow
      46: return
    Exception table:
       from    to  target type
          18    38    41   any
          41    44    41   any

  protected org.springframework.web.servlet.View createView(java.lang.String, java.util.Locale) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #41                 // Method loadView:(Ljava/lang/String;Ljava/util/Locale;)Lorg/springframework/web/servlet/View;
       6: areturn

  protected abstract org.springframework.web.servlet.View loadView(java.lang.String, java.util.Locale) throws java.lang.Exception;

  static java.util.Map access$000(org.springframework.web.servlet.view.AbstractCachingViewResolver);
    Code:
       0: aload_0
       1: getfield      #1                  // Field viewAccessCache:Ljava/util/Map;
       4: areturn

  static {};
    Code:
       0: new           #42                 // class org/springframework/web/servlet/view/AbstractCachingViewResolver$1
       3: dup
       4: invokespecial #43                 // Method org/springframework/web/servlet/view/AbstractCachingViewResolver$1."<init>":()V
       7: putstatic     #17                 // Field UNRESOLVED_VIEW:Lorg/springframework/web/servlet/View;
      10: return
}
