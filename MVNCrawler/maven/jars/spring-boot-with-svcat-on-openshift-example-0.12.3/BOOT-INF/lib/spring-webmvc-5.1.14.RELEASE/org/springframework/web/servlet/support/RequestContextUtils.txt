Compiled from "RequestContextUtils.java"
public abstract class org.springframework.web.servlet.support.RequestContextUtils {
  public static final java.lang.String REQUEST_DATA_VALUE_PROCESSOR_BEAN_NAME;

  public org.springframework.web.servlet.support.RequestContextUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static org.springframework.web.context.WebApplicationContext findWebApplicationContext(javax.servlet.http.HttpServletRequest, javax.servlet.ServletContext);
    Code:
       0: aload_0
       1: getstatic     #2                  // Field org/springframework/web/servlet/DispatcherServlet.WEB_APPLICATION_CONTEXT_ATTRIBUTE:Ljava/lang/String;
       4: invokeinterface #3,  2            // InterfaceMethod javax/servlet/http/HttpServletRequest.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
       9: checkcast     #4                  // class org/springframework/web/context/WebApplicationContext
      12: astore_2
      13: aload_2
      14: ifnonnull     34
      17: aload_1
      18: ifnull        26
      21: aload_1
      22: invokestatic  #5                  // Method org/springframework/web/context/support/WebApplicationContextUtils.getWebApplicationContext:(Ljavax/servlet/ServletContext;)Lorg/springframework/web/context/WebApplicationContext;
      25: astore_2
      26: aload_2
      27: ifnonnull     34
      30: invokestatic  #6                  // Method org/springframework/web/context/ContextLoader.getCurrentWebApplicationContext:()Lorg/springframework/web/context/WebApplicationContext;
      33: astore_2
      34: aload_2
      35: areturn

  public static org.springframework.web.context.WebApplicationContext findWebApplicationContext(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #7,  1            // InterfaceMethod javax/servlet/http/HttpServletRequest.getServletContext:()Ljavax/servlet/ServletContext;
       7: invokestatic  #8                  // Method findWebApplicationContext:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/ServletContext;)Lorg/springframework/web/context/WebApplicationContext;
      10: areturn

  public static org.springframework.web.servlet.LocaleResolver getLocaleResolver(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: getstatic     #9                  // Field org/springframework/web/servlet/DispatcherServlet.LOCALE_RESOLVER_ATTRIBUTE:Ljava/lang/String;
       4: invokeinterface #3,  2            // InterfaceMethod javax/servlet/http/HttpServletRequest.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
       9: checkcast     #10                 // class org/springframework/web/servlet/LocaleResolver
      12: areturn

  public static java.util.Locale getLocale(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: invokestatic  #11                 // Method getLocaleResolver:(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/LocaleResolver;
       4: astore_1
       5: aload_1
       6: ifnull        19
       9: aload_1
      10: aload_0
      11: invokeinterface #12,  2           // InterfaceMethod org/springframework/web/servlet/LocaleResolver.resolveLocale:(Ljavax/servlet/http/HttpServletRequest;)Ljava/util/Locale;
      16: goto          25
      19: aload_0
      20: invokeinterface #13,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getLocale:()Ljava/util/Locale;
      25: areturn

  public static java.util.TimeZone getTimeZone(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: invokestatic  #11                 // Method getLocaleResolver:(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/LocaleResolver;
       4: astore_1
       5: aload_1
       6: instanceof    #14                 // class org/springframework/web/servlet/LocaleContextResolver
       9: ifeq          40
      12: aload_1
      13: checkcast     #14                 // class org/springframework/web/servlet/LocaleContextResolver
      16: aload_0
      17: invokeinterface #15,  2           // InterfaceMethod org/springframework/web/servlet/LocaleContextResolver.resolveLocaleContext:(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/context/i18n/LocaleContext;
      22: astore_2
      23: aload_2
      24: instanceof    #16                 // class org/springframework/context/i18n/TimeZoneAwareLocaleContext
      27: ifeq          40
      30: aload_2
      31: checkcast     #16                 // class org/springframework/context/i18n/TimeZoneAwareLocaleContext
      34: invokeinterface #17,  1           // InterfaceMethod org/springframework/context/i18n/TimeZoneAwareLocaleContext.getTimeZone:()Ljava/util/TimeZone;
      39: areturn
      40: aconst_null
      41: areturn

  public static org.springframework.web.servlet.ThemeResolver getThemeResolver(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: getstatic     #18                 // Field org/springframework/web/servlet/DispatcherServlet.THEME_RESOLVER_ATTRIBUTE:Ljava/lang/String;
       4: invokeinterface #3,  2            // InterfaceMethod javax/servlet/http/HttpServletRequest.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
       9: checkcast     #19                 // class org/springframework/web/servlet/ThemeResolver
      12: areturn

  public static org.springframework.ui.context.ThemeSource getThemeSource(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: getstatic     #20                 // Field org/springframework/web/servlet/DispatcherServlet.THEME_SOURCE_ATTRIBUTE:Ljava/lang/String;
       4: invokeinterface #3,  2            // InterfaceMethod javax/servlet/http/HttpServletRequest.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
       9: checkcast     #21                 // class org/springframework/ui/context/ThemeSource
      12: areturn

  public static org.springframework.ui.context.Theme getTheme(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: invokestatic  #22                 // Method getThemeResolver:(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ThemeResolver;
       4: astore_1
       5: aload_0
       6: invokestatic  #23                 // Method getThemeSource:(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/ui/context/ThemeSource;
       9: astore_2
      10: aload_1
      11: ifnull        34
      14: aload_2
      15: ifnull        34
      18: aload_1
      19: aload_0
      20: invokeinterface #24,  2           // InterfaceMethod org/springframework/web/servlet/ThemeResolver.resolveThemeName:(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
      25: astore_3
      26: aload_2
      27: aload_3
      28: invokeinterface #25,  2           // InterfaceMethod org/springframework/ui/context/ThemeSource.getTheme:(Ljava/lang/String;)Lorg/springframework/ui/context/Theme;
      33: areturn
      34: aconst_null
      35: areturn

  public static java.util.Map<java.lang.String, ?> getInputFlashMap(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: getstatic     #26                 // Field org/springframework/web/servlet/DispatcherServlet.INPUT_FLASH_MAP_ATTRIBUTE:Ljava/lang/String;
       4: invokeinterface #3,  2            // InterfaceMethod javax/servlet/http/HttpServletRequest.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
       9: checkcast     #27                 // class java/util/Map
      12: areturn

  public static org.springframework.web.servlet.FlashMap getOutputFlashMap(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: getstatic     #28                 // Field org/springframework/web/servlet/DispatcherServlet.OUTPUT_FLASH_MAP_ATTRIBUTE:Ljava/lang/String;
       4: invokeinterface #3,  2            // InterfaceMethod javax/servlet/http/HttpServletRequest.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
       9: checkcast     #29                 // class org/springframework/web/servlet/FlashMap
      12: areturn

  public static org.springframework.web.servlet.FlashMapManager getFlashMapManager(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: getstatic     #30                 // Field org/springframework/web/servlet/DispatcherServlet.FLASH_MAP_MANAGER_ATTRIBUTE:Ljava/lang/String;
       4: invokeinterface #3,  2            // InterfaceMethod javax/servlet/http/HttpServletRequest.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
       9: checkcast     #31                 // class org/springframework/web/servlet/FlashMapManager
      12: areturn

  public static void saveOutputFlashMap(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse);
    Code:
       0: aload_1
       1: invokestatic  #32                 // Method getOutputFlashMap:(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/FlashMap;
       4: astore_3
       5: aload_3
       6: invokestatic  #33                 // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Map;)Z
       9: ifeq          13
      12: return
      13: aload_0
      14: invokestatic  #34                 // Method org/springframework/web/util/UriComponentsBuilder.fromUriString:(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
      17: invokevirtual #35                 // Method org/springframework/web/util/UriComponentsBuilder.build:()Lorg/springframework/web/util/UriComponents;
      20: astore        4
      22: aload_3
      23: aload         4
      25: invokevirtual #36                 // Method org/springframework/web/util/UriComponents.getPath:()Ljava/lang/String;
      28: invokevirtual #37                 // Method org/springframework/web/servlet/FlashMap.setTargetRequestPath:(Ljava/lang/String;)V
      31: aload_3
      32: aload         4
      34: invokevirtual #38                 // Method org/springframework/web/util/UriComponents.getQueryParams:()Lorg/springframework/util/MultiValueMap;
      37: invokevirtual #39                 // Method org/springframework/web/servlet/FlashMap.addTargetRequestParams:(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/web/servlet/FlashMap;
      40: pop
      41: aload_1
      42: invokestatic  #40                 // Method getFlashMapManager:(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/FlashMapManager;
      45: astore        5
      47: aload         5
      49: ifnull        56
      52: iconst_1
      53: goto          57
      56: iconst_0
      57: ldc           #41                 // String No FlashMapManager. Is this a DispatcherServlet handled request?
      59: invokestatic  #42                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      62: aload         5
      64: aload_3
      65: aload_1
      66: aload_2
      67: invokeinterface #43,  4           // InterfaceMethod org/springframework/web/servlet/FlashMapManager.saveOutputFlashMap:(Lorg/springframework/web/servlet/FlashMap;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      72: return
}
