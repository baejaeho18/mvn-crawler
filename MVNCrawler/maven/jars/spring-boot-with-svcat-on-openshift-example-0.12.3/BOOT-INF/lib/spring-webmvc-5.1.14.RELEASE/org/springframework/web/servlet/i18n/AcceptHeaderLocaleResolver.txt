Compiled from "AcceptHeaderLocaleResolver.java"
public class org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver implements org.springframework.web.servlet.LocaleResolver {
  private final java.util.List<java.util.Locale> supportedLocales;

  private java.util.Locale defaultLocale;

  public org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: iconst_4
      10: invokespecial #3                  // Method java/util/ArrayList."<init>":(I)V
      13: putfield      #4                  // Field supportedLocales:Ljava/util/List;
      16: return

  public void setSupportedLocales(java.util.List<java.util.Locale>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field supportedLocales:Ljava/util/List;
       4: invokeinterface #5,  1            // InterfaceMethod java/util/List.clear:()V
       9: aload_0
      10: getfield      #4                  // Field supportedLocales:Ljava/util/List;
      13: aload_1
      14: invokeinterface #6,  2            // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      19: pop
      20: return

  public java.util.List<java.util.Locale> getSupportedLocales();
    Code:
       0: aload_0
       1: getfield      #4                  // Field supportedLocales:Ljava/util/List;
       4: areturn

  public void setDefaultLocale(java.util.Locale);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field defaultLocale:Ljava/util/Locale;
       5: return

  public java.util.Locale getDefaultLocale();
    Code:
       0: aload_0
       1: getfield      #7                  // Field defaultLocale:Ljava/util/Locale;
       4: areturn

  public java.util.Locale resolveLocale(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method getDefaultLocale:()Ljava/util/Locale;
       4: astore_2
       5: aload_2
       6: ifnull        22
       9: aload_1
      10: ldc           #9                  // String Accept-Language
      12: invokeinterface #10,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeader:(Ljava/lang/String;)Ljava/lang/String;
      17: ifnonnull     22
      20: aload_2
      21: areturn
      22: aload_1
      23: invokeinterface #11,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getLocale:()Ljava/util/Locale;
      28: astore_3
      29: aload_0
      30: invokevirtual #12                 // Method getSupportedLocales:()Ljava/util/List;
      33: astore        4
      35: aload         4
      37: invokeinterface #13,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      42: ifne          56
      45: aload         4
      47: aload_3
      48: invokeinterface #14,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      53: ifeq          58
      56: aload_3
      57: areturn
      58: aload_0
      59: aload_1
      60: aload         4
      62: invokespecial #15                 // Method findSupportedLocale:(Ljavax/servlet/http/HttpServletRequest;Ljava/util/List;)Ljava/util/Locale;
      65: astore        5
      67: aload         5
      69: ifnull        75
      72: aload         5
      74: areturn
      75: aload_2
      76: ifnull        83
      79: aload_2
      80: goto          84
      83: aload_3
      84: areturn

  private java.util.Locale findSupportedLocale(javax.servlet.http.HttpServletRequest, java.util.List<java.util.Locale>);
    Code:
       0: aload_1
       1: invokeinterface #16,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getLocales:()Ljava/util/Enumeration;
       6: astore_3
       7: aconst_null
       8: astore        4
      10: aload_3
      11: invokeinterface #17,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      16: ifeq          140
      19: aload_3
      20: invokeinterface #18,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      25: checkcast     #19                 // class java/util/Locale
      28: astore        5
      30: aload_2
      31: aload         5
      33: invokeinterface #14,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      38: ifeq          65
      41: aload         4
      43: ifnull        62
      46: aload         4
      48: invokevirtual #20                 // Method java/util/Locale.getLanguage:()Ljava/lang/String;
      51: aload         5
      53: invokevirtual #20                 // Method java/util/Locale.getLanguage:()Ljava/lang/String;
      56: invokevirtual #21                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      59: ifeq          137
      62: aload         5
      64: areturn
      65: aload         4
      67: ifnonnull     137
      70: aload_2
      71: invokeinterface #22,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      76: astore        6
      78: aload         6
      80: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      85: ifeq          137
      88: aload         6
      90: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      95: checkcast     #19                 // class java/util/Locale
      98: astore        7
     100: aload         7
     102: invokevirtual #25                 // Method java/util/Locale.getCountry:()Ljava/lang/String;
     105: invokestatic  #26                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
     108: ifne          134
     111: aload         7
     113: invokevirtual #20                 // Method java/util/Locale.getLanguage:()Ljava/lang/String;
     116: aload         5
     118: invokevirtual #20                 // Method java/util/Locale.getLanguage:()Ljava/lang/String;
     121: invokevirtual #21                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     124: ifeq          134
     127: aload         7
     129: astore        4
     131: goto          137
     134: goto          78
     137: goto          10
     140: aload         4
     142: areturn

  public void setLocale(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.util.Locale);
    Code:
       0: new           #27                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #28                 // String Cannot change HTTP accept header - use a different locale resolution strategy
       6: invokespecial #29                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow
}
