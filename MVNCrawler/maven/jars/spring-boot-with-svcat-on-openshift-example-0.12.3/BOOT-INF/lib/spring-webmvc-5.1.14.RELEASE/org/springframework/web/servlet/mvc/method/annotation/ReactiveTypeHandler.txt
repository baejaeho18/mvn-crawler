Compiled from "ReactiveTypeHandler.java"
class org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler {
  private static final long STREAMING_TIMEOUT_VALUE;

  private static org.apache.commons.logging.Log logger;

  private final org.springframework.core.ReactiveAdapterRegistry adapterRegistry;

  private final org.springframework.core.task.TaskExecutor taskExecutor;

  private final org.springframework.web.accept.ContentNegotiationManager contentNegotiationManager;

  private boolean taskExecutorWarning;

  public org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler();
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method org/springframework/core/ReactiveAdapterRegistry.getSharedInstance:()Lorg/springframework/core/ReactiveAdapterRegistry;
       4: new           #3                  // class org/springframework/core/task/SyncTaskExecutor
       7: dup
       8: invokespecial #4                  // Method org/springframework/core/task/SyncTaskExecutor."<init>":()V
      11: new           #5                  // class org/springframework/web/accept/ContentNegotiationManager
      14: dup
      15: invokespecial #6                  // Method org/springframework/web/accept/ContentNegotiationManager."<init>":()V
      18: invokespecial #7                  // Method "<init>":(Lorg/springframework/core/ReactiveAdapterRegistry;Lorg/springframework/core/task/TaskExecutor;Lorg/springframework/web/accept/ContentNegotiationManager;)V
      21: return

  org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler(org.springframework.core.ReactiveAdapterRegistry, org.springframework.core.task.TaskExecutor, org.springframework.web.accept.ContentNegotiationManager);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #9                  // String ReactiveAdapterRegistry is required
       7: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_2
      11: ldc           #11                 // String TaskExecutor is required
      13: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_3
      17: ldc           #12                 // String ContentNegotiationManager is required
      19: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      22: aload_0
      23: aload_1
      24: putfield      #13                 // Field adapterRegistry:Lorg/springframework/core/ReactiveAdapterRegistry;
      27: aload_0
      28: aload_2
      29: putfield      #14                 // Field taskExecutor:Lorg/springframework/core/task/TaskExecutor;
      32: aload_0
      33: aload_3
      34: putfield      #15                 // Field contentNegotiationManager:Lorg/springframework/web/accept/ContentNegotiationManager;
      37: aload_0
      38: aload_2
      39: instanceof    #16                 // class org/springframework/core/task/SimpleAsyncTaskExecutor
      42: ifne          52
      45: aload_2
      46: instanceof    #3                  // class org/springframework/core/task/SyncTaskExecutor
      49: ifeq          56
      52: iconst_1
      53: goto          57
      56: iconst_0
      57: putfield      #17                 // Field taskExecutorWarning:Z
      60: return

  public boolean isReactiveType(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field adapterRegistry:Lorg/springframework/core/ReactiveAdapterRegistry;
       4: aload_1
       5: invokevirtual #18                 // Method org/springframework/core/ReactiveAdapterRegistry.getAdapter:(Ljava/lang/Class;)Lorg/springframework/core/ReactiveAdapter;
       8: ifnull        15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter handleValue(java.lang.Object, org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest) throws java.lang.Exception;
    Code:
       0: aload_1
       1: ldc           #19                 // String Expected return value
       3: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #13                 // Field adapterRegistry:Lorg/springframework/core/ReactiveAdapterRegistry;
      10: aload_1
      11: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: invokevirtual #18                 // Method org/springframework/core/ReactiveAdapterRegistry.getAdapter:(Ljava/lang/Class;)Lorg/springframework/core/ReactiveAdapter;
      17: astore        5
      19: aload         5
      21: ifnull        28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: aload_1
      30: invokedynamic #21,  0             // InvokeDynamic #0:get:(Ljava/lang/Object;)Ljava/util/function/Supplier;
      35: invokestatic  #22                 // Method org/springframework/util/Assert.state:(ZLjava/util/function/Supplier;)V
      38: aload_2
      39: invokestatic  #23                 // Method org/springframework/core/ResolvableType.forMethodParameter:(Lorg/springframework/core/MethodParameter;)Lorg/springframework/core/ResolvableType;
      42: iconst_0
      43: newarray       int
      45: invokevirtual #24                 // Method org/springframework/core/ResolvableType.getGeneric:([I)Lorg/springframework/core/ResolvableType;
      48: astore        6
      50: aload         6
      52: invokevirtual #25                 // Method org/springframework/core/ResolvableType.toClass:()Ljava/lang/Class;
      55: astore        7
      57: aload_0
      58: aload         4
      60: invokespecial #26                 // Method getMediaTypes:(Lorg/springframework/web/context/request/NativeWebRequest;)Ljava/util/Collection;
      63: astore        8
      65: aload         8
      67: invokeinterface #27,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      72: invokedynamic #28,  0             // InvokeDynamic #1:test:()Ljava/util/function/Predicate;
      77: invokeinterface #29,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      82: invokeinterface #30,  1           // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      87: astore        9
      89: aload         5
      91: invokevirtual #31                 // Method org/springframework/core/ReactiveAdapter.isMultiValue:()Z
      94: ifeq          295
      97: aload         8
      99: invokeinterface #27,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
     104: getstatic     #32                 // Field org/springframework/http/MediaType.TEXT_EVENT_STREAM:Lorg/springframework/http/MediaType;
     107: dup
     108: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     111: pop
     112: invokedynamic #33,  0             // InvokeDynamic #2:test:(Lorg/springframework/http/MediaType;)Ljava/util/function/Predicate;
     117: invokeinterface #34,  2           // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
     122: ifne          135
     125: ldc           #35                 // class org/springframework/http/codec/ServerSentEvent
     127: aload         7
     129: invokevirtual #36                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     132: ifeq          177
     135: aload_0
     136: aload_2
     137: invokespecial #37                 // Method logExecutorWarning:(Lorg/springframework/core/MethodParameter;)V
     140: new           #38                 // class org/springframework/web/servlet/mvc/method/annotation/SseEmitter
     143: dup
     144: ldc2_w        #40                 // long -1l
     147: invokestatic  #42                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     150: invokespecial #43                 // Method org/springframework/web/servlet/mvc/method/annotation/SseEmitter."<init>":(Ljava/lang/Long;)V
     153: astore        10
     155: new           #44                 // class org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler$SseEmitterSubscriber
     158: dup
     159: aload         10
     161: aload_0
     162: getfield      #14                 // Field taskExecutor:Lorg/springframework/core/task/TaskExecutor;
     165: invokespecial #45                 // Method org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler$SseEmitterSubscriber."<init>":(Lorg/springframework/web/servlet/mvc/method/annotation/SseEmitter;Lorg/springframework/core/task/TaskExecutor;)V
     168: aload         5
     170: aload_1
     171: invokevirtual #46                 // Method org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler$SseEmitterSubscriber.connect:(Lorg/springframework/core/ReactiveAdapter;Ljava/lang/Object;)V
     174: aload         10
     176: areturn
     177: ldc           #47                 // class java/lang/CharSequence
     179: aload         7
     181: invokevirtual #36                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     184: ifeq          231
     187: aload_0
     188: aload_2
     189: invokespecial #37                 // Method logExecutorWarning:(Lorg/springframework/core/MethodParameter;)V
     192: aload_0
     193: aload         9
     195: getstatic     #48                 // Field org/springframework/http/MediaType.TEXT_PLAIN:Lorg/springframework/http/MediaType;
     198: invokevirtual #49                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
     201: checkcast     #50                 // class org/springframework/http/MediaType
     204: invokespecial #51                 // Method getEmitter:(Lorg/springframework/http/MediaType;)Lorg/springframework/web/servlet/mvc/method/annotation/ResponseBodyEmitter;
     207: astore        10
     209: new           #52                 // class org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler$TextEmitterSubscriber
     212: dup
     213: aload         10
     215: aload_0
     216: getfield      #14                 // Field taskExecutor:Lorg/springframework/core/task/TaskExecutor;
     219: invokespecial #53                 // Method org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler$TextEmitterSubscriber."<init>":(Lorg/springframework/web/servlet/mvc/method/annotation/ResponseBodyEmitter;Lorg/springframework/core/task/TaskExecutor;)V
     222: aload         5
     224: aload_1
     225: invokevirtual #54                 // Method org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler$TextEmitterSubscriber.connect:(Lorg/springframework/core/ReactiveAdapter;Ljava/lang/Object;)V
     228: aload         10
     230: areturn
     231: aload         8
     233: invokeinterface #27,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
     238: getstatic     #55                 // Field org/springframework/http/MediaType.APPLICATION_STREAM_JSON:Lorg/springframework/http/MediaType;
     241: dup
     242: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     245: pop
     246: invokedynamic #33,  0             // InvokeDynamic #2:test:(Lorg/springframework/http/MediaType;)Ljava/util/function/Predicate;
     251: invokeinterface #34,  2           // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
     256: ifeq          295
     259: aload_0
     260: aload_2
     261: invokespecial #37                 // Method logExecutorWarning:(Lorg/springframework/core/MethodParameter;)V
     264: aload_0
     265: getstatic     #55                 // Field org/springframework/http/MediaType.APPLICATION_STREAM_JSON:Lorg/springframework/http/MediaType;
     268: invokespecial #51                 // Method getEmitter:(Lorg/springframework/http/MediaType;)Lorg/springframework/web/servlet/mvc/method/annotation/ResponseBodyEmitter;
     271: astore        10
     273: new           #56                 // class org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler$JsonEmitterSubscriber
     276: dup
     277: aload         10
     279: aload_0
     280: getfield      #14                 // Field taskExecutor:Lorg/springframework/core/task/TaskExecutor;
     283: invokespecial #57                 // Method org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler$JsonEmitterSubscriber."<init>":(Lorg/springframework/web/servlet/mvc/method/annotation/ResponseBodyEmitter;Lorg/springframework/core/task/TaskExecutor;)V
     286: aload         5
     288: aload_1
     289: invokevirtual #58                 // Method org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler$JsonEmitterSubscriber.connect:(Lorg/springframework/core/ReactiveAdapter;Ljava/lang/Object;)V
     292: aload         10
     294: areturn
     295: new           #59                 // class org/springframework/web/context/request/async/DeferredResult
     298: dup
     299: invokespecial #60                 // Method org/springframework/web/context/request/async/DeferredResult."<init>":()V
     302: astore        10
     304: new           #61                 // class org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler$DeferredResultSubscriber
     307: dup
     308: aload         10
     310: aload         5
     312: aload         6
     314: invokespecial #62                 // Method org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler$DeferredResultSubscriber."<init>":(Lorg/springframework/web/context/request/async/DeferredResult;Lorg/springframework/core/ReactiveAdapter;Lorg/springframework/core/ResolvableType;)V
     317: aload         5
     319: aload_1
     320: invokevirtual #63                 // Method org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler$DeferredResultSubscriber.connect:(Lorg/springframework/core/ReactiveAdapter;Ljava/lang/Object;)V
     323: aload         4
     325: invokestatic  #64                 // Method org/springframework/web/context/request/async/WebAsyncUtils.getAsyncManager:(Lorg/springframework/web/context/request/WebRequest;)Lorg/springframework/web/context/request/async/WebAsyncManager;
     328: aload         10
     330: iconst_1
     331: anewarray     #65                 // class java/lang/Object
     334: dup
     335: iconst_0
     336: aload_3
     337: aastore
     338: invokevirtual #66                 // Method org/springframework/web/context/request/async/WebAsyncManager.startDeferredResultProcessing:(Lorg/springframework/web/context/request/async/DeferredResult;[Ljava/lang/Object;)V
     341: aconst_null
     342: areturn

  private java.util.Collection<org.springframework.http.MediaType> getMediaTypes(org.springframework.web.context.request.NativeWebRequest) throws org.springframework.web.HttpMediaTypeNotAcceptableException;
    Code:
       0: aload_1
       1: getstatic     #67                 // Field org/springframework/web/servlet/HandlerMapping.PRODUCIBLE_MEDIA_TYPES_ATTRIBUTE:Ljava/lang/String;
       4: iconst_0
       5: invokeinterface #69,  3           // InterfaceMethod org/springframework/web/context/request/NativeWebRequest.getAttribute:(Ljava/lang/String;I)Ljava/lang/Object;
      10: checkcast     #70                 // class java/util/Collection
      13: astore_2
      14: aload_2
      15: invokestatic  #71                 // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
      18: ifeq          32
      21: aload_0
      22: getfield      #15                 // Field contentNegotiationManager:Lorg/springframework/web/accept/ContentNegotiationManager;
      25: aload_1
      26: invokevirtual #72                 // Method org/springframework/web/accept/ContentNegotiationManager.resolveMediaTypes:(Lorg/springframework/web/context/request/NativeWebRequest;)Ljava/util/List;
      29: goto          33
      32: aload_2
      33: areturn

  private org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter getEmitter(org.springframework.http.MediaType);
    Code:
       0: new           #73                 // class org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler$1
       3: dup
       4: aload_0
       5: ldc2_w        #40                 // long -1l
       8: invokestatic  #42                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      11: aload_1
      12: invokespecial #74                 // Method org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler$1."<init>":(Lorg/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler;Ljava/lang/Long;Lorg/springframework/http/MediaType;)V
      15: areturn

  private void logExecutorWarning(org.springframework.core.MethodParameter);
    Code:
       0: aload_0
       1: getfield      #17                 // Field taskExecutorWarning:Z
       4: ifeq          134
       7: getstatic     #1                  // Field logger:Lorg/apache/commons/logging/Log;
      10: invokeinterface #75,  1           // InterfaceMethod org/apache/commons/logging/Log.isWarnEnabled:()Z
      15: ifeq          134
      18: aload_0
      19: dup
      20: astore_2
      21: monitorenter
      22: aload_0
      23: getfield      #17                 // Field taskExecutorWarning:Z
      26: ifeq          122
      29: aload_0
      30: getfield      #14                 // Field taskExecutor:Lorg/springframework/core/task/TaskExecutor;
      33: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      36: invokevirtual #76                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      39: astore_3
      40: getstatic     #1                  // Field logger:Lorg/apache/commons/logging/Log;
      43: new           #77                 // class java/lang/StringBuilder
      46: dup
      47: invokespecial #78                 // Method java/lang/StringBuilder."<init>":()V
      50: ldc           #79                 // String \n!!!\nStreaming through a reactive type requires an Executor to write to the response.\nPlease, configure a TaskExecutor in the MVC config under \"async support\".\nThe
      52: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_3
      56: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: ldc           #81                 // String  currently in use is not suitable under load.\n-------------------------------\nController:\t
      61: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload_1
      65: invokevirtual #82                 // Method org/springframework/core/MethodParameter.getContainingClass:()Ljava/lang/Class;
      68: invokevirtual #83                 // Method java/lang/Class.getName:()Ljava/lang/String;
      71: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: ldc           #84                 // String \nMethod:\t\t
      76: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_1
      80: invokevirtual #85                 // Method org/springframework/core/MethodParameter.getMethod:()Ljava/lang/reflect/Method;
      83: invokevirtual #86                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
      86: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: ldc           #87                 // String \nReturning:\t
      91: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: aload_1
      95: invokestatic  #23                 // Method org/springframework/core/ResolvableType.forMethodParameter:(Lorg/springframework/core/MethodParameter;)Lorg/springframework/core/ResolvableType;
      98: invokevirtual #88                 // Method org/springframework/core/ResolvableType.toString:()Ljava/lang/String;
     101: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: ldc           #89                 // String \n!!!
     106: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: invokevirtual #90                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     112: invokeinterface #91,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
     117: aload_0
     118: iconst_0
     119: putfield      #17                 // Field taskExecutorWarning:Z
     122: aload_2
     123: monitorexit
     124: goto          134
     127: astore        4
     129: aload_2
     130: monitorexit
     131: aload         4
     133: athrow
     134: return
    Exception table:
       from    to  target type
          22   124   127   any
         127   131   127   any

  private static java.lang.String lambda$handleValue$0(java.lang.Object);
    Code:
       0: new           #77                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #78                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #92                 // String Unexpected return value:
       9: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      16: invokevirtual #90                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      19: areturn

  static org.apache.commons.logging.Log access$000();
    Code:
       0: getstatic     #1                  // Field logger:Lorg/apache/commons/logging/Log;
       3: areturn

  static {};
    Code:
       0: ldc           #39                 // class org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler
       2: invokestatic  #94                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #1                  // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
