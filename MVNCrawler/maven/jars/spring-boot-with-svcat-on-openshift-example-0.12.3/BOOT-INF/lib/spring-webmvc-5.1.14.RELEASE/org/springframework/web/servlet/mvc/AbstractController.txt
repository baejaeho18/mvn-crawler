Compiled from "AbstractController.java"
public abstract class org.springframework.web.servlet.mvc.AbstractController extends org.springframework.web.servlet.support.WebContentGenerator implements org.springframework.web.servlet.mvc.Controller {
  private boolean synchronizeOnSession;

  public org.springframework.web.servlet.mvc.AbstractController();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #1                  // Method "<init>":(Z)V
       5: return

  public org.springframework.web.servlet.mvc.AbstractController(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #2                  // Method org/springframework/web/servlet/support/WebContentGenerator."<init>":(Z)V
       5: aload_0
       6: iconst_0
       7: putfield      #3                  // Field synchronizeOnSession:Z
      10: return

  public final void setSynchronizeOnSession(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field synchronizeOnSession:Z
       5: return

  public final boolean isSynchronizeOnSession();
    Code:
       0: aload_0
       1: getfield      #3                  // Field synchronizeOnSession:Z
       4: ireturn

  public org.springframework.web.servlet.ModelAndView handleRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Exception;
    Code:
       0: getstatic     #4                  // Field org/springframework/http/HttpMethod.OPTIONS:Lorg/springframework/http/HttpMethod;
       3: aload_1
       4: invokeinterface #5,  1            // InterfaceMethod javax/servlet/http/HttpServletRequest.getMethod:()Ljava/lang/String;
       9: invokevirtual #6                  // Method org/springframework/http/HttpMethod.matches:(Ljava/lang/String;)Z
      12: ifeq          29
      15: aload_2
      16: ldc           #7                  // String Allow
      18: aload_0
      19: invokevirtual #8                  // Method getAllowHeader:()Ljava/lang/String;
      22: invokeinterface #9,  3            // InterfaceMethod javax/servlet/http/HttpServletResponse.setHeader:(Ljava/lang/String;Ljava/lang/String;)V
      27: aconst_null
      28: areturn
      29: aload_0
      30: aload_1
      31: invokevirtual #10                 // Method checkRequest:(Ljavax/servlet/http/HttpServletRequest;)V
      34: aload_0
      35: aload_2
      36: invokevirtual #11                 // Method prepareResponse:(Ljavax/servlet/http/HttpServletResponse;)V
      39: aload_0
      40: getfield      #3                  // Field synchronizeOnSession:Z
      43: ifeq          88
      46: aload_1
      47: iconst_0
      48: invokeinterface #12,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getSession:(Z)Ljavax/servlet/http/HttpSession;
      53: astore_3
      54: aload_3
      55: ifnull        88
      58: aload_3
      59: invokestatic  #13                 // Method org/springframework/web/util/WebUtils.getSessionMutex:(Ljavax/servlet/http/HttpSession;)Ljava/lang/Object;
      62: astore        4
      64: aload         4
      66: dup
      67: astore        5
      69: monitorenter
      70: aload_0
      71: aload_1
      72: aload_2
      73: invokevirtual #14                 // Method handleRequestInternal:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/web/servlet/ModelAndView;
      76: aload         5
      78: monitorexit
      79: areturn
      80: astore        6
      82: aload         5
      84: monitorexit
      85: aload         6
      87: athrow
      88: aload_0
      89: aload_1
      90: aload_2
      91: invokevirtual #14                 // Method handleRequestInternal:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/web/servlet/ModelAndView;
      94: areturn
    Exception table:
       from    to  target type
          70    79    80   any
          80    85    80   any

  protected abstract org.springframework.web.servlet.ModelAndView handleRequestInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Exception;
}
