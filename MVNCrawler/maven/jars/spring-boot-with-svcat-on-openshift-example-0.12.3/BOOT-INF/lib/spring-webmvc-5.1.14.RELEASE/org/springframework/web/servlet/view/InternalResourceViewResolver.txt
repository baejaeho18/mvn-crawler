Compiled from "InternalResourceViewResolver.java"
public class org.springframework.web.servlet.view.InternalResourceViewResolver extends org.springframework.web.servlet.view.UrlBasedViewResolver {
  private static final boolean jstlPresent;

  private java.lang.Boolean alwaysInclude;

  public org.springframework.web.servlet.view.InternalResourceViewResolver();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/web/servlet/view/UrlBasedViewResolver."<init>":()V
       4: aload_0
       5: invokevirtual #2                  // Method requiredViewClass:()Ljava/lang/Class;
       8: astore_1
       9: ldc           #3                  // class org/springframework/web/servlet/view/InternalResourceView
      11: aload_1
      12: if_acmpne     24
      15: getstatic     #4                  // Field jstlPresent:Z
      18: ifeq          24
      21: ldc           #5                  // class org/springframework/web/servlet/view/JstlView
      23: astore_1
      24: aload_0
      25: aload_1
      26: invokevirtual #6                  // Method setViewClass:(Ljava/lang/Class;)V
      29: return

  public org.springframework.web.servlet.view.InternalResourceViewResolver(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method "<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #8                  // Method setPrefix:(Ljava/lang/String;)V
       9: aload_0
      10: aload_2
      11: invokevirtual #9                  // Method setSuffix:(Ljava/lang/String;)V
      14: return

  protected java.lang.Class<?> requiredViewClass();
    Code:
       0: ldc           #3                  // class org/springframework/web/servlet/view/InternalResourceView
       2: areturn

  public void setAlwaysInclude(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #10                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: putfield      #11                 // Field alwaysInclude:Ljava/lang/Boolean;
       8: return

  protected org.springframework.web.servlet.view.AbstractUrlBasedView buildView(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #12                 // Method org/springframework/web/servlet/view/UrlBasedViewResolver.buildView:(Ljava/lang/String;)Lorg/springframework/web/servlet/view/AbstractUrlBasedView;
       5: checkcast     #3                  // class org/springframework/web/servlet/view/InternalResourceView
       8: astore_2
       9: aload_0
      10: getfield      #11                 // Field alwaysInclude:Ljava/lang/Boolean;
      13: ifnull        27
      16: aload_2
      17: aload_0
      18: getfield      #11                 // Field alwaysInclude:Ljava/lang/Boolean;
      21: invokevirtual #13                 // Method java/lang/Boolean.booleanValue:()Z
      24: invokevirtual #14                 // Method org/springframework/web/servlet/view/InternalResourceView.setAlwaysInclude:(Z)V
      27: aload_2
      28: iconst_1
      29: invokevirtual #15                 // Method org/springframework/web/servlet/view/InternalResourceView.setPreventDispatchLoop:(Z)V
      32: aload_2
      33: areturn

  static {};
    Code:
       0: ldc           #16                 // String javax.servlet.jsp.jstl.core.Config
       2: ldc           #17                 // class org/springframework/web/servlet/view/InternalResourceViewResolver
       4: invokevirtual #18                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       7: invokestatic  #19                 // Method org/springframework/util/ClassUtils.isPresent:(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
      10: putstatic     #4                  // Field jstlPresent:Z
      13: return
}
