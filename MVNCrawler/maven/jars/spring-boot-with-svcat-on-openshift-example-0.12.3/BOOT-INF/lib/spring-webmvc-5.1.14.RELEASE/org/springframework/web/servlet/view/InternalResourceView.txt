Compiled from "InternalResourceView.java"
public class org.springframework.web.servlet.view.InternalResourceView extends org.springframework.web.servlet.view.AbstractUrlBasedView {
  private boolean alwaysInclude;

  private boolean preventDispatchLoop;

  public org.springframework.web.servlet.view.InternalResourceView();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/web/servlet/view/AbstractUrlBasedView."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field alwaysInclude:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field preventDispatchLoop:Z
      14: return

  public org.springframework.web.servlet.view.InternalResourceView(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method org/springframework/web/servlet/view/AbstractUrlBasedView."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: iconst_0
       7: putfield      #2                  // Field alwaysInclude:Z
      10: aload_0
      11: iconst_0
      12: putfield      #3                  // Field preventDispatchLoop:Z
      15: return

  public org.springframework.web.servlet.view.InternalResourceView(java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method org/springframework/web/servlet/view/AbstractUrlBasedView."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: iconst_0
       7: putfield      #2                  // Field alwaysInclude:Z
      10: aload_0
      11: iconst_0
      12: putfield      #3                  // Field preventDispatchLoop:Z
      15: aload_0
      16: iload_2
      17: putfield      #2                  // Field alwaysInclude:Z
      20: return

  public void setAlwaysInclude(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field alwaysInclude:Z
       5: return

  public void setPreventDispatchLoop(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field preventDispatchLoop:Z
       5: return

  protected boolean isContextRequired();
    Code:
       0: iconst_0
       1: ireturn

  protected void renderMergedOutputModel(java.util.Map<java.lang.String, java.lang.Object>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #5                  // Method exposeModelAsRequestAttributes:(Ljava/util/Map;Ljavax/servlet/http/HttpServletRequest;)V
       6: aload_0
       7: aload_2
       8: invokevirtual #6                  // Method exposeHelpers:(Ljavax/servlet/http/HttpServletRequest;)V
      11: aload_0
      12: aload_2
      13: aload_3
      14: invokevirtual #7                  // Method prepareForRendering:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Ljava/lang/String;
      17: astore        4
      19: aload_0
      20: aload_2
      21: aload         4
      23: invokevirtual #8                  // Method getRequestDispatcher:(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;
      26: astore        5
      28: aload         5
      30: ifnonnull     68
      33: new           #9                  // class javax/servlet/ServletException
      36: dup
      37: new           #10                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      44: ldc           #12                 // String Could not get RequestDispatcher for [
      46: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_0
      50: invokevirtual #14                 // Method getUrl:()Ljava/lang/String;
      53: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: ldc           #15                 // String ]: Check that the corresponding file exists within your web application archive!
      58: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: invokespecial #17                 // Method javax/servlet/ServletException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: aload_0
      69: aload_2
      70: aload_3
      71: invokevirtual #18                 // Method useInclude:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Z
      74: ifeq          147
      77: aload_3
      78: aload_0
      79: invokevirtual #19                 // Method getContentType:()Ljava/lang/String;
      82: invokeinterface #20,  2           // InterfaceMethod javax/servlet/http/HttpServletResponse.setContentType:(Ljava/lang/String;)V
      87: aload_0
      88: getfield      #21                 // Field logger:Lorg/apache/commons/logging/Log;
      91: invokeinterface #22,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      96: ifeq          135
      99: aload_0
     100: getfield      #21                 // Field logger:Lorg/apache/commons/logging/Log;
     103: new           #10                 // class java/lang/StringBuilder
     106: dup
     107: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
     110: ldc           #23                 // String Including [
     112: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: aload_0
     116: invokevirtual #14                 // Method getUrl:()Ljava/lang/String;
     119: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: ldc           #24                 // String ]
     124: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     130: invokeinterface #25,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     135: aload         5
     137: aload_2
     138: aload_3
     139: invokeinterface #26,  3           // InterfaceMethod javax/servlet/RequestDispatcher.include:(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
     144: goto          204
     147: aload_0
     148: getfield      #21                 // Field logger:Lorg/apache/commons/logging/Log;
     151: invokeinterface #22,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     156: ifeq          195
     159: aload_0
     160: getfield      #21                 // Field logger:Lorg/apache/commons/logging/Log;
     163: new           #10                 // class java/lang/StringBuilder
     166: dup
     167: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
     170: ldc           #27                 // String Forwarding to [
     172: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     175: aload_0
     176: invokevirtual #14                 // Method getUrl:()Ljava/lang/String;
     179: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     182: ldc           #24                 // String ]
     184: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     187: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     190: invokeinterface #25,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     195: aload         5
     197: aload_2
     198: aload_3
     199: invokeinterface #28,  3           // InterfaceMethod javax/servlet/RequestDispatcher.forward:(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
     204: return

  protected void exposeHelpers(javax.servlet.http.HttpServletRequest) throws java.lang.Exception;
    Code:
       0: return

  protected java.lang.String prepareForRendering(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getUrl:()Ljava/lang/String;
       4: astore_3
       5: aload_3
       6: ifnull        13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ldc           #29                 // String \'url\' not set
      16: invokestatic  #30                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      19: aload_0
      20: getfield      #3                  // Field preventDispatchLoop:Z
      23: ifeq          111
      26: aload_1
      27: invokeinterface #31,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getRequestURI:()Ljava/lang/String;
      32: astore        4
      34: aload_3
      35: ldc           #32                 // String /
      37: invokevirtual #33                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      40: ifeq          55
      43: aload         4
      45: aload_3
      46: invokevirtual #34                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      49: ifeq          111
      52: goto          69
      55: aload         4
      57: aload         4
      59: aload_3
      60: invokestatic  #35                 // Method org/springframework/util/StringUtils.applyRelativePath:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      63: invokevirtual #34                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      66: ifeq          111
      69: new           #9                  // class javax/servlet/ServletException
      72: dup
      73: new           #10                 // class java/lang/StringBuilder
      76: dup
      77: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      80: ldc           #36                 // String Circular view path [
      82: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: aload_3
      86: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: ldc           #37                 // String ]: would dispatch back to the current handler URL [
      91: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: aload         4
      96: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: ldc           #38                 // String ] again. Check your ViewResolver setup! (Hint: This may be the result of an unspecified view, due to default view name generation.)
     101: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     107: invokespecial #17                 // Method javax/servlet/ServletException."<init>":(Ljava/lang/String;)V
     110: athrow
     111: aload_3
     112: areturn

  protected javax.servlet.RequestDispatcher getRequestDispatcher(javax.servlet.http.HttpServletRequest, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #39,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getRequestDispatcher:(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;
       7: areturn

  protected boolean useInclude(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse);
    Code:
       0: aload_0
       1: getfield      #2                  // Field alwaysInclude:Z
       4: ifne          23
       7: aload_1
       8: invokestatic  #40                 // Method org/springframework/web/util/WebUtils.isIncludeRequest:(Ljavax/servlet/ServletRequest;)Z
      11: ifne          23
      14: aload_2
      15: invokeinterface #41,  1           // InterfaceMethod javax/servlet/http/HttpServletResponse.isCommitted:()Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn
}
