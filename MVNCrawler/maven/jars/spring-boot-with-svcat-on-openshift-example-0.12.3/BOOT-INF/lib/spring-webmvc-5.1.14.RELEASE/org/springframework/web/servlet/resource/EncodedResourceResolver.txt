Compiled from "EncodedResourceResolver.java"
public class org.springframework.web.servlet.resource.EncodedResourceResolver extends org.springframework.web.servlet.resource.AbstractResourceResolver {
  public static final java.util.List<java.lang.String> DEFAULT_CODINGS;

  private final java.util.List<java.lang.String> contentCodings;

  private final java.util.Map<java.lang.String, java.lang.String> extensions;

  public org.springframework.web.servlet.resource.EncodedResourceResolver();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/web/servlet/resource/AbstractResourceResolver."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: getstatic     #3                  // Field DEFAULT_CODINGS:Ljava/util/List;
      12: invokespecial #4                  // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      15: putfield      #5                  // Field contentCodings:Ljava/util/List;
      18: aload_0
      19: new           #6                  // class java/util/LinkedHashMap
      22: dup
      23: invokespecial #7                  // Method java/util/LinkedHashMap."<init>":()V
      26: putfield      #8                  // Field extensions:Ljava/util/Map;
      29: aload_0
      30: getfield      #8                  // Field extensions:Ljava/util/Map;
      33: ldc           #9                  // String gzip
      35: ldc           #10                 // String .gz
      37: invokeinterface #11,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: aload_0
      44: getfield      #8                  // Field extensions:Ljava/util/Map;
      47: ldc           #12                 // String br
      49: ldc           #13                 // String .br
      51: invokeinterface #11,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      56: pop
      57: return

  public void setContentCodings(java.util.List<java.lang.String>);
    Code:
       0: aload_1
       1: ldc           #14                 // String At least one content coding expected
       3: invokestatic  #15                 // Method org/springframework/util/Assert.notEmpty:(Ljava/util/Collection;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #5                  // Field contentCodings:Ljava/util/List;
      10: invokeinterface #16,  1           // InterfaceMethod java/util/List.clear:()V
      15: aload_0
      16: getfield      #5                  // Field contentCodings:Ljava/util/List;
      19: aload_1
      20: invokeinterface #17,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      25: pop
      26: return

  public java.util.List<java.lang.String> getContentCodings();
    Code:
       0: aload_0
       1: getfield      #5                  // Field contentCodings:Ljava/util/List;
       4: invokestatic  #18                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
       7: areturn

  public void setExtensions(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #19,  0             // InvokeDynamic #0:accept:(Lorg/springframework/web/servlet/resource/EncodedResourceResolver;)Ljava/util/function/BiConsumer;
       7: invokeinterface #20,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      12: return

  public java.util.Map<java.lang.String, java.lang.String> getExtensions();
    Code:
       0: aload_0
       1: getfield      #8                  // Field extensions:Ljava/util/Map;
       4: invokestatic  #21                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       7: areturn

  public void registerExtension(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field extensions:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: ldc           #22                 // String .
       8: invokevirtual #23                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      11: ifeq          18
      14: aload_2
      15: goto          37
      18: new           #24                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #22                 // String .
      27: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_2
      31: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokeinterface #11,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: return

  protected org.springframework.core.io.Resource resolveResourceInternal(javax.servlet.http.HttpServletRequest, java.lang.String, java.util.List<? extends org.springframework.core.io.Resource>, org.springframework.web.servlet.resource.ResourceResolverChain);
    Code:
       0: aload         4
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokeinterface #28,  4           // InterfaceMethod org/springframework/web/servlet/resource/ResourceResolverChain.resolveResource:(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;Ljava/util/List;)Lorg/springframework/core/io/Resource;
      10: astore        5
      12: aload         5
      14: ifnull        21
      17: aload_1
      18: ifnonnull     24
      21: aload         5
      23: areturn
      24: aload_0
      25: aload_1
      26: invokespecial #29                 // Method getAcceptEncoding:(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
      29: astore        6
      31: aload         6
      33: ifnonnull     39
      36: aload         5
      38: areturn
      39: aload_0
      40: getfield      #5                  // Field contentCodings:Ljava/util/List;
      43: invokeinterface #30,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      48: astore        7
      50: aload         7
      52: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      57: ifeq          189
      60: aload         7
      62: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #33                 // class java/lang/String
      70: astore        8
      72: aload         6
      74: aload         8
      76: invokevirtual #34                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      79: ifeq          186
      82: aload_0
      83: aload         8
      85: invokespecial #35                 // Method getExtension:(Ljava/lang/String;)Ljava/lang/String;
      88: astore        9
      90: new           #36                 // class org/springframework/web/servlet/resource/EncodedResourceResolver$EncodedResource
      93: dup
      94: aload         5
      96: aload         8
      98: aload         9
     100: invokespecial #37                 // Method org/springframework/web/servlet/resource/EncodedResourceResolver$EncodedResource."<init>":(Lorg/springframework/core/io/Resource;Ljava/lang/String;Ljava/lang/String;)V
     103: astore        10
     105: aload         10
     107: invokeinterface #38,  1           // InterfaceMethod org/springframework/core/io/Resource.exists:()Z
     112: ifeq          118
     115: aload         10
     117: areturn
     118: goto          186
     121: astore        9
     123: aload_0
     124: getfield      #40                 // Field logger:Lorg/apache/commons/logging/Log;
     127: invokeinterface #41,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
     132: ifeq          186
     135: aload_0
     136: getfield      #40                 // Field logger:Lorg/apache/commons/logging/Log;
     139: new           #24                 // class java/lang/StringBuilder
     142: dup
     143: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     146: ldc           #42                 // String No
     148: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: aload         8
     153: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: ldc           #43                 // String  resource for [
     158: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     161: aload         5
     163: invokeinterface #44,  1           // InterfaceMethod org/springframework/core/io/Resource.getFilename:()Ljava/lang/String;
     168: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     171: ldc           #45                 // String ]
     173: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     176: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     179: aload         9
     181: invokeinterface #46,  3           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     186: goto          50
     189: aload         5
     191: areturn
    Exception table:
       from    to  target type
          82   117   121   Class java/io/IOException

  private java.lang.String getAcceptEncoding(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_1
       1: ldc           #48                 // String Accept-Encoding
       3: invokeinterface #49,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeader:(Ljava/lang/String;)Ljava/lang/String;
       8: astore_2
       9: aload_2
      10: ifnull        20
      13: aload_2
      14: invokevirtual #50                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      17: goto          21
      20: aconst_null
      21: areturn

  private java.lang.String getExtension(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field extensions:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #51,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #33                 // class java/lang/String
      13: astore_2
      14: aload_2
      15: ifnonnull     45
      18: new           #52                 // class java/lang/IllegalStateException
      21: dup
      22: new           #24                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #53                 // String No file extension associated with content coding
      31: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_1
      35: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #54                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_2
      46: areturn

  protected java.lang.String resolveUrlPathInternal(java.lang.String, java.util.List<? extends org.springframework.core.io.Resource>, org.springframework.web.servlet.resource.ResourceResolverChain);
    Code:
       0: aload_3
       1: aload_1
       2: aload_2
       3: invokeinterface #55,  3           // InterfaceMethod org/springframework/web/servlet/resource/ResourceResolverChain.resolveUrlPath:(Ljava/lang/String;Ljava/util/List;)Ljava/lang/String;
       8: areturn

  static {};
    Code:
       0: iconst_2
       1: anewarray     #33                 // class java/lang/String
       4: dup
       5: iconst_0
       6: ldc           #12                 // String br
       8: aastore
       9: dup
      10: iconst_1
      11: ldc           #9                  // String gzip
      13: aastore
      14: invokestatic  #56                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      17: putstatic     #3                  // Field DEFAULT_CODINGS:Ljava/util/List;
      20: return
}
