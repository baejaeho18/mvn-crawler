Compiled from "ProjectionDefinitionConfiguration.java"
public class org.springframework.data.rest.core.config.ProjectionDefinitionConfiguration implements org.springframework.data.rest.core.projection.ProjectionDefinitions {
  private static final java.lang.String PROJECTION_ANNOTATION_NOT_FOUND;

  private static final java.lang.String DEFAULT_PROJECTION_PARAMETER_NAME;

  private final java.util.Set<org.springframework.data.rest.core.config.ProjectionDefinitionConfiguration$ProjectionDefinition> projectionDefinitions;

  private java.lang.String parameterName;

  public org.springframework.data.rest.core.config.ProjectionDefinitionConfiguration();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #3                  // String projection
       7: putfield      #4                  // Field parameterName:Ljava/lang/String;
      10: aload_0
      11: new           #5                  // class java/util/HashSet
      14: dup
      15: invokespecial #6                  // Method java/util/HashSet."<init>":()V
      18: putfield      #7                  // Field projectionDefinitions:Ljava/util/Set;
      21: return

  public java.lang.String getParameterName();
    Code:
       0: aload_0
       1: getfield      #4                  // Field parameterName:Ljava/lang/String;
       4: areturn

  public void setParameterName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #8                  // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
       5: ifeq          12
       8: aload_1
       9: goto          14
      12: ldc           #3                  // String projection
      14: putfield      #4                  // Field parameterName:Ljava/lang/String;
      17: return

  public org.springframework.data.rest.core.config.ProjectionDefinitionConfiguration addProjection(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #9                  // String Projection type must not be null!
       3: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #11                 // class org/springframework/data/rest/core/config/Projection
       9: invokestatic  #12                 // Method org/springframework/core/annotation/AnnotationUtils.findAnnotation:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      12: checkcast     #11                 // class org/springframework/data/rest/core/config/Projection
      15: astore_2
      16: aload_2
      17: ifnonnull     41
      20: new           #13                 // class java/lang/IllegalArgumentException
      23: dup
      24: ldc           #14                 // String Projection annotation not found on %s! Either add the annotation or hand source type to the registration manually!
      26: iconst_1
      27: anewarray     #15                 // class java/lang/Object
      30: dup
      31: iconst_0
      32: aload_1
      33: aastore
      34: invokestatic  #16                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      37: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: aload_2
      42: invokeinterface #18,  1           // InterfaceMethod org/springframework/data/rest/core/config/Projection.name:()Ljava/lang/String;
      47: astore_3
      48: aload_2
      49: invokeinterface #19,  1           // InterfaceMethod org/springframework/data/rest/core/config/Projection.types:()[Ljava/lang/Class;
      54: astore        4
      56: aload_3
      57: invokestatic  #8                  // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      60: ifeq          74
      63: aload_0
      64: aload_1
      65: aload_3
      66: aload         4
      68: invokevirtual #20                 // Method addProjection:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Lorg/springframework/data/rest/core/config/ProjectionDefinitionConfiguration;
      71: goto          81
      74: aload_0
      75: aload_1
      76: aload         4
      78: invokevirtual #21                 // Method addProjection:(Ljava/lang/Class;[Ljava/lang/Class;)Lorg/springframework/data/rest/core/config/ProjectionDefinitionConfiguration;
      81: areturn

  public org.springframework.data.rest.core.config.ProjectionDefinitionConfiguration addProjection(java.lang.Class<?>, java.lang.Class<?>...);
    Code:
       0: aload_1
       1: ldc           #9                  // String Projection type must not be null!
       3: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: aload_1
       9: invokevirtual #22                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      12: invokestatic  #23                 // Method org/springframework/util/StringUtils.uncapitalize:(Ljava/lang/String;)Ljava/lang/String;
      15: aload_2
      16: invokevirtual #20                 // Method addProjection:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Lorg/springframework/data/rest/core/config/ProjectionDefinitionConfiguration;
      19: areturn

  public org.springframework.data.rest.core.config.ProjectionDefinitionConfiguration addProjection(java.lang.Class<?>, java.lang.String, java.lang.Class<?>...);
    Code:
       0: aload_1
       1: ldc           #9                  // String Projection type must not be null!
       3: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #24                 // String Name must not be null or empty!
       9: invokestatic  #25                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
      12: aload_3
      13: ldc           #26                 // String Source types must not be null!
      15: invokestatic  #27                 // Method org/springframework/util/Assert.notEmpty:([Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_3
      19: astore        4
      21: aload         4
      23: arraylength
      24: istore        5
      26: iconst_0
      27: istore        6
      29: iload         6
      31: iload         5
      33: if_icmpge     66
      36: aload         4
      38: iload         6
      40: aaload
      41: astore        7
      43: aload_0
      44: getfield      #7                  // Field projectionDefinitions:Ljava/util/Set;
      47: aload         7
      49: aload_1
      50: aload_2
      51: invokestatic  #28                 // Method org/springframework/data/rest/core/config/ProjectionDefinitionConfiguration$ProjectionDefinition.of:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Lorg/springframework/data/rest/core/config/ProjectionDefinitionConfiguration$ProjectionDefinition;
      54: invokeinterface #29,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      59: pop
      60: iinc          6, 1
      63: goto          29
      66: aload_0
      67: areturn

  public java.lang.Class<?> getProjectionType(java.lang.Class<?>, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method getProjectionsFor:(Ljava/lang/Class;)Ljava/util/Map;
       5: aload_2
       6: invokeinterface #31,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #32                 // class java/lang/Class
      14: areturn

  public boolean hasProjectionFor(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field projectionDefinitions:Ljava/util/Set;
       4: invokeinterface #33,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          45
      19: aload_2
      20: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #36                 // class org/springframework/data/rest/core/config/ProjectionDefinitionConfiguration$ProjectionDefinition
      28: astore_3
      29: aload_3
      30: invokestatic  #37                 // Method org/springframework/data/rest/core/config/ProjectionDefinitionConfiguration$ProjectionDefinition.access$000:(Lorg/springframework/data/rest/core/config/ProjectionDefinitionConfiguration$ProjectionDefinition;)Ljava/lang/Class;
      33: aload_1
      34: invokevirtual #38                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      37: ifeq          42
      40: iconst_1
      41: ireturn
      42: goto          10
      45: iconst_0
      46: ireturn

  public java.util.Map<java.lang.String, java.lang.Class<?>> getProjectionsFor(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #39                 // String Source type must not be null!
       3: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokestatic  #40                 // Method org/springframework/data/util/ProxyUtils.getUserClass:(Ljava/lang/Class;)Ljava/lang/Class;
      10: astore_2
      11: new           #41                 // class java/util/HashMap
      14: dup
      15: invokespecial #42                 // Method java/util/HashMap."<init>":()V
      18: astore_3
      19: new           #41                 // class java/util/HashMap
      22: dup
      23: invokespecial #42                 // Method java/util/HashMap."<init>":()V
      26: astore        4
      28: aload_0
      29: getfield      #7                  // Field projectionDefinitions:Ljava/util/Set;
      32: invokeinterface #33,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      37: astore        5
      39: aload         5
      41: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      46: ifeq          148
      49: aload         5
      51: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      56: checkcast     #36                 // class org/springframework/data/rest/core/config/ProjectionDefinitionConfiguration$ProjectionDefinition
      59: astore        6
      61: aload         6
      63: invokestatic  #37                 // Method org/springframework/data/rest/core/config/ProjectionDefinitionConfiguration$ProjectionDefinition.access$000:(Lorg/springframework/data/rest/core/config/ProjectionDefinitionConfiguration$ProjectionDefinition;)Ljava/lang/Class;
      66: aload_2
      67: invokevirtual #38                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      70: ifne          76
      73: goto          39
      76: aload_3
      77: aload         6
      79: invokestatic  #43                 // Method org/springframework/data/rest/core/config/ProjectionDefinitionConfiguration$ProjectionDefinition.access$100:(Lorg/springframework/data/rest/core/config/ProjectionDefinitionConfiguration$ProjectionDefinition;)Ljava/lang/String;
      82: invokeinterface #31,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      87: checkcast     #36                 // class org/springframework/data/rest/core/config/ProjectionDefinitionConfiguration$ProjectionDefinition
      90: astore        7
      92: aload         7
      94: ifnull        113
      97: aload         6
      99: invokestatic  #37                 // Method org/springframework/data/rest/core/config/ProjectionDefinitionConfiguration$ProjectionDefinition.access$000:(Lorg/springframework/data/rest/core/config/ProjectionDefinitionConfiguration$ProjectionDefinition;)Ljava/lang/Class;
     102: aload         7
     104: invokestatic  #37                 // Method org/springframework/data/rest/core/config/ProjectionDefinitionConfiguration$ProjectionDefinition.access$000:(Lorg/springframework/data/rest/core/config/ProjectionDefinitionConfiguration$ProjectionDefinition;)Ljava/lang/Class;
     107: invokestatic  #44                 // Method isSubTypeOf:(Ljava/lang/Class;Ljava/lang/Class;)Z
     110: ifeq          145
     113: aload_3
     114: aload         6
     116: invokestatic  #43                 // Method org/springframework/data/rest/core/config/ProjectionDefinitionConfiguration$ProjectionDefinition.access$100:(Lorg/springframework/data/rest/core/config/ProjectionDefinitionConfiguration$ProjectionDefinition;)Ljava/lang/String;
     119: aload         6
     121: invokeinterface #45,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     126: pop
     127: aload         4
     129: aload         6
     131: invokestatic  #43                 // Method org/springframework/data/rest/core/config/ProjectionDefinitionConfiguration$ProjectionDefinition.access$100:(Lorg/springframework/data/rest/core/config/ProjectionDefinitionConfiguration$ProjectionDefinition;)Ljava/lang/String;
     134: aload         6
     136: invokestatic  #46                 // Method org/springframework/data/rest/core/config/ProjectionDefinitionConfiguration$ProjectionDefinition.access$200:(Lorg/springframework/data/rest/core/config/ProjectionDefinitionConfiguration$ProjectionDefinition;)Ljava/lang/Class;
     139: invokeinterface #45,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     144: pop
     145: goto          39
     148: aload         4
     150: areturn

  private static boolean isSubTypeOf(java.lang.Class<?>, java.lang.Class<?>);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #38                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       5: ifeq          20
       8: aload_0
       9: aload_1
      10: invokevirtual #47                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      13: ifne          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn
}
