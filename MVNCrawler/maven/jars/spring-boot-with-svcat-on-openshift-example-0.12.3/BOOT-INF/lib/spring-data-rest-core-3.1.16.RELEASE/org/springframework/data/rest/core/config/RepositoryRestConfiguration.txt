Compiled from "RepositoryRestConfiguration.java"
public class org.springframework.data.rest.core.config.RepositoryRestConfiguration {
  private static final java.net.URI NO_URI;

  private java.net.URI baseUri;

  private java.net.URI basePath;

  private int defaultPageSize;

  private int maxPageSize;

  private java.lang.String pageParamName;

  private java.lang.String limitParamName;

  private java.lang.String sortParamName;

  private org.springframework.http.MediaType defaultMediaType;

  private boolean useHalAsDefaultJsonMediaType;

  private java.lang.Boolean returnBodyOnCreate;

  private java.lang.Boolean returnBodyOnUpdate;

  private java.util.List<java.lang.Class<?>> exposeIdsFor;

  private org.springframework.data.rest.core.config.ResourceMappingConfiguration domainMappings;

  private org.springframework.data.rest.core.config.ResourceMappingConfiguration repoMappings;

  private org.springframework.data.rest.core.mapping.RepositoryDetectionStrategy repositoryDetectionStrategy;

  private boolean exposeRepositoryMethodsByDefault;

  private org.springframework.hateoas.RelProvider relProvider;

  private final org.springframework.data.rest.core.config.RepositoryCorsRegistry corsRegistry;

  private final org.springframework.data.rest.core.config.ProjectionDefinitionConfiguration projectionConfiguration;

  private final org.springframework.data.rest.core.config.MetadataConfiguration metadataConfiguration;

  private final org.springframework.data.rest.core.config.EntityLookupConfiguration entityLookupConfiguration;

  private final org.springframework.data.rest.core.mapping.ExposureConfiguration exposureConfiguration;

  private final org.springframework.data.rest.core.config.EnumTranslationConfiguration enumTranslationConfiguration;

  private boolean enableEnumTranslation;

  public org.springframework.data.rest.core.config.RepositoryRestConfiguration(org.springframework.data.rest.core.config.ProjectionDefinitionConfiguration, org.springframework.data.rest.core.config.MetadataConfiguration, org.springframework.data.rest.core.config.EnumTranslationConfiguration);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field NO_URI:Ljava/net/URI;
       8: putfield      #3                  // Field baseUri:Ljava/net/URI;
      11: aload_0
      12: getstatic     #2                  // Field NO_URI:Ljava/net/URI;
      15: putfield      #4                  // Field basePath:Ljava/net/URI;
      18: aload_0
      19: bipush        20
      21: putfield      #5                  // Field defaultPageSize:I
      24: aload_0
      25: sipush        1000
      28: putfield      #6                  // Field maxPageSize:I
      31: aload_0
      32: ldc           #7                  // String page
      34: putfield      #8                  // Field pageParamName:Ljava/lang/String;
      37: aload_0
      38: ldc           #9                  // String size
      40: putfield      #10                 // Field limitParamName:Ljava/lang/String;
      43: aload_0
      44: ldc           #11                 // String sort
      46: putfield      #12                 // Field sortParamName:Ljava/lang/String;
      49: aload_0
      50: getstatic     #13                 // Field org/springframework/hateoas/MediaTypes.HAL_JSON:Lorg/springframework/http/MediaType;
      53: putfield      #14                 // Field defaultMediaType:Lorg/springframework/http/MediaType;
      56: aload_0
      57: iconst_1
      58: putfield      #15                 // Field useHalAsDefaultJsonMediaType:Z
      61: aload_0
      62: aconst_null
      63: putfield      #16                 // Field returnBodyOnCreate:Ljava/lang/Boolean;
      66: aload_0
      67: aconst_null
      68: putfield      #17                 // Field returnBodyOnUpdate:Ljava/lang/Boolean;
      71: aload_0
      72: new           #18                 // class java/util/ArrayList
      75: dup
      76: invokespecial #19                 // Method java/util/ArrayList."<init>":()V
      79: putfield      #20                 // Field exposeIdsFor:Ljava/util/List;
      82: aload_0
      83: new           #21                 // class org/springframework/data/rest/core/config/ResourceMappingConfiguration
      86: dup
      87: invokespecial #22                 // Method org/springframework/data/rest/core/config/ResourceMappingConfiguration."<init>":()V
      90: putfield      #23                 // Field domainMappings:Lorg/springframework/data/rest/core/config/ResourceMappingConfiguration;
      93: aload_0
      94: new           #21                 // class org/springframework/data/rest/core/config/ResourceMappingConfiguration
      97: dup
      98: invokespecial #22                 // Method org/springframework/data/rest/core/config/ResourceMappingConfiguration."<init>":()V
     101: putfield      #24                 // Field repoMappings:Lorg/springframework/data/rest/core/config/ResourceMappingConfiguration;
     104: aload_0
     105: getstatic     #25                 // Field org/springframework/data/rest/core/mapping/RepositoryDetectionStrategy$RepositoryDetectionStrategies.DEFAULT:Lorg/springframework/data/rest/core/mapping/RepositoryDetectionStrategy$RepositoryDetectionStrategies;
     108: putfield      #26                 // Field repositoryDetectionStrategy:Lorg/springframework/data/rest/core/mapping/RepositoryDetectionStrategy;
     111: aload_0
     112: iconst_1
     113: putfield      #27                 // Field exposeRepositoryMethodsByDefault:Z
     116: aload_0
     117: new           #28                 // class org/springframework/hateoas/core/EvoInflectorRelProvider
     120: dup
     121: invokespecial #29                 // Method org/springframework/hateoas/core/EvoInflectorRelProvider."<init>":()V
     124: putfield      #30                 // Field relProvider:Lorg/springframework/hateoas/RelProvider;
     127: aload_0
     128: new           #31                 // class org/springframework/data/rest/core/config/RepositoryCorsRegistry
     131: dup
     132: invokespecial #32                 // Method org/springframework/data/rest/core/config/RepositoryCorsRegistry."<init>":()V
     135: putfield      #33                 // Field corsRegistry:Lorg/springframework/data/rest/core/config/RepositoryCorsRegistry;
     138: aload_0
     139: iconst_0
     140: putfield      #34                 // Field enableEnumTranslation:Z
     143: aload_1
     144: ldc           #35                 // String ProjectionDefinitionConfiguration must not be null!
     146: invokestatic  #36                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
     149: aload_2
     150: ldc           #37                 // String MetadataConfiguration must not be null!
     152: invokestatic  #36                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
     155: aload_3
     156: ldc           #38                 // String EnumTranslationConfiguration must not be null!
     158: invokestatic  #36                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
     161: aload_0
     162: aload_1
     163: putfield      #39                 // Field projectionConfiguration:Lorg/springframework/data/rest/core/config/ProjectionDefinitionConfiguration;
     166: aload_0
     167: aload_2
     168: putfield      #40                 // Field metadataConfiguration:Lorg/springframework/data/rest/core/config/MetadataConfiguration;
     171: aload_0
     172: aload_3
     173: putfield      #41                 // Field enumTranslationConfiguration:Lorg/springframework/data/rest/core/config/EnumTranslationConfiguration;
     176: aload_0
     177: new           #42                 // class org/springframework/data/rest/core/config/EntityLookupConfiguration
     180: dup
     181: invokespecial #43                 // Method org/springframework/data/rest/core/config/EntityLookupConfiguration."<init>":()V
     184: putfield      #44                 // Field entityLookupConfiguration:Lorg/springframework/data/rest/core/config/EntityLookupConfiguration;
     187: aload_0
     188: new           #45                 // class org/springframework/data/rest/core/mapping/ExposureConfiguration
     191: dup
     192: invokespecial #46                 // Method org/springframework/data/rest/core/mapping/ExposureConfiguration."<init>":()V
     195: putfield      #47                 // Field exposureConfiguration:Lorg/springframework/data/rest/core/mapping/ExposureConfiguration;
     198: return

  public java.net.URI getBaseUri();
    Code:
       0: aload_0
       1: getfield      #4                  // Field basePath:Ljava/net/URI;
       4: getstatic     #2                  // Field NO_URI:Ljava/net/URI;
       7: if_acmpeq     17
      10: aload_0
      11: getfield      #4                  // Field basePath:Ljava/net/URI;
      14: goto          21
      17: aload_0
      18: getfield      #3                  // Field baseUri:Ljava/net/URI;
      21: areturn

  public java.net.URI getBasePath();
    Code:
       0: aload_0
       1: getfield      #4                  // Field basePath:Ljava/net/URI;
       4: areturn

  public org.springframework.data.rest.core.config.RepositoryRestConfiguration setBasePath(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #48                 // String http
       3: invokevirtual #49                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ldc           #50                 // String Use a path not a URI
      16: invokestatic  #51                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      19: aload_1
      20: bipush        47
      22: invokestatic  #52                 // Method org/springframework/util/StringUtils.trimTrailingCharacter:(Ljava/lang/String;C)Ljava/lang/String;
      25: astore_1
      26: aload_0
      27: aload_1
      28: ldc           #53                 // String /
      30: invokevirtual #49                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      33: ifeq          40
      36: aload_1
      37: goto          46
      40: ldc           #53                 // String /
      42: aload_1
      43: invokevirtual #54                 // Method java/lang/String.concat:(Ljava/lang/String;)Ljava/lang/String;
      46: invokestatic  #55                 // Method java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;
      49: putfield      #4                  // Field basePath:Ljava/net/URI;
      52: aload_0
      53: getfield      #4                  // Field basePath:Ljava/net/URI;
      56: invokevirtual #56                 // Method java/net/URI.isAbsolute:()Z
      59: ifne          66
      62: iconst_1
      63: goto          67
      66: iconst_0
      67: ldc           #57                 // String Absolute URIs are not supported as base path!
      69: invokestatic  #51                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      72: aload_0
      73: areturn

  public int getDefaultPageSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field defaultPageSize:I
       4: ireturn

  public org.springframework.data.rest.core.config.RepositoryRestConfiguration setDefaultPageSize(int);
    Code:
       0: iload_1
       1: ifle          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #58                 // String Page size must be greater than 0.
      11: invokestatic  #51                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      14: aload_0
      15: iload_1
      16: putfield      #5                  // Field defaultPageSize:I
      19: aload_0
      20: areturn

  public int getMaxPageSize();
    Code:
       0: aload_0
       1: getfield      #6                  // Field maxPageSize:I
       4: ireturn

  public org.springframework.data.rest.core.config.RepositoryRestConfiguration setMaxPageSize(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field defaultPageSize:I
       4: ifle          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #59                 // String Maximum page size must be greater than 0.
      14: invokestatic  #51                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      17: aload_0
      18: iload_1
      19: putfield      #6                  // Field maxPageSize:I
      22: aload_0
      23: areturn

  public java.lang.String getPageParamName();
    Code:
       0: aload_0
       1: getfield      #8                  // Field pageParamName:Ljava/lang/String;
       4: areturn

  public org.springframework.data.rest.core.config.RepositoryRestConfiguration setPageParamName(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #60                 // String Page param name cannot be null.
       3: invokestatic  #36                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #8                  // Field pageParamName:Ljava/lang/String;
      11: aload_0
      12: areturn

  public java.lang.String getLimitParamName();
    Code:
       0: aload_0
       1: getfield      #10                 // Field limitParamName:Ljava/lang/String;
       4: areturn

  public org.springframework.data.rest.core.config.RepositoryRestConfiguration setLimitParamName(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #61                 // String Limit param name cannot be null.
       3: invokestatic  #36                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #10                 // Field limitParamName:Ljava/lang/String;
      11: aload_0
      12: areturn

  public java.lang.String getSortParamName();
    Code:
       0: aload_0
       1: getfield      #12                 // Field sortParamName:Ljava/lang/String;
       4: areturn

  public org.springframework.data.rest.core.config.RepositoryRestConfiguration setSortParamName(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #62                 // String Sort param name cannot be null.
       3: invokestatic  #36                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #12                 // Field sortParamName:Ljava/lang/String;
      11: aload_0
      12: areturn

  public org.springframework.http.MediaType getDefaultMediaType();
    Code:
       0: aload_0
       1: getfield      #14                 // Field defaultMediaType:Lorg/springframework/http/MediaType;
       4: areturn

  public org.springframework.data.rest.core.config.RepositoryRestConfiguration setDefaultMediaType(org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field defaultMediaType:Lorg/springframework/http/MediaType;
       5: aload_0
       6: areturn

  public boolean useHalAsDefaultJsonMediaType();
    Code:
       0: aload_0
       1: getfield      #15                 // Field useHalAsDefaultJsonMediaType:Z
       4: ireturn

  public org.springframework.data.rest.core.config.RepositoryRestConfiguration useHalAsDefaultJsonMediaType(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field useHalAsDefaultJsonMediaType:Z
       5: aload_0
       6: areturn

  public org.springframework.data.rest.core.config.RepositoryRestConfiguration setReturnBodyForPutAndPost(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #63                 // Method setReturnBodyOnCreate:(Ljava/lang/Boolean;)Lorg/springframework/data/rest/core/config/RepositoryRestConfiguration;
       5: pop
       6: aload_0
       7: aload_1
       8: invokevirtual #64                 // Method setReturnBodyOnUpdate:(Ljava/lang/Boolean;)Lorg/springframework/data/rest/core/config/RepositoryRestConfiguration;
      11: pop
      12: aload_0
      13: areturn

  public java.lang.Boolean isReturnBodyOnCreate();
    Code:
       0: aload_0
       1: getfield      #16                 // Field returnBodyOnCreate:Ljava/lang/Boolean;
       4: areturn

  public boolean returnBodyOnCreate(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #16                 // Field returnBodyOnCreate:Ljava/lang/Boolean;
       4: ifnonnull     14
       7: aload_1
       8: invokestatic  #65                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      11: goto          21
      14: aload_0
      15: getfield      #16                 // Field returnBodyOnCreate:Ljava/lang/Boolean;
      18: invokevirtual #66                 // Method java/lang/Boolean.booleanValue:()Z
      21: ireturn

  public org.springframework.data.rest.core.config.RepositoryRestConfiguration setReturnBodyOnCreate(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field returnBodyOnCreate:Ljava/lang/Boolean;
       5: aload_0
       6: areturn

  public java.lang.Boolean isReturnBodyOnUpdate();
    Code:
       0: aload_0
       1: getfield      #17                 // Field returnBodyOnUpdate:Ljava/lang/Boolean;
       4: areturn

  public boolean returnBodyOnUpdate(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #17                 // Field returnBodyOnUpdate:Ljava/lang/Boolean;
       4: ifnonnull     14
       7: aload_1
       8: invokestatic  #65                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      11: goto          21
      14: aload_0
      15: getfield      #17                 // Field returnBodyOnUpdate:Ljava/lang/Boolean;
      18: invokevirtual #66                 // Method java/lang/Boolean.booleanValue:()Z
      21: ireturn

  public org.springframework.data.rest.core.config.RepositoryRestConfiguration setReturnBodyOnUpdate(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field returnBodyOnUpdate:Ljava/lang/Boolean;
       5: aload_0
       6: areturn

  public org.springframework.data.rest.core.config.ResourceMapping setResourceMappingForDomainType(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #23                 // Field domainMappings:Lorg/springframework/data/rest/core/config/ResourceMappingConfiguration;
       4: aload_1
       5: invokevirtual #67                 // Method org/springframework/data/rest/core/config/ResourceMappingConfiguration.setResourceMappingFor:(Ljava/lang/Class;)Lorg/springframework/data/rest/core/config/ResourceMapping;
       8: areturn

  public org.springframework.data.rest.core.config.ResourceMapping getResourceMappingForDomainType(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #23                 // Field domainMappings:Lorg/springframework/data/rest/core/config/ResourceMappingConfiguration;
       4: aload_1
       5: invokevirtual #68                 // Method org/springframework/data/rest/core/config/ResourceMappingConfiguration.getResourceMappingFor:(Ljava/lang/Class;)Lorg/springframework/data/rest/core/config/ResourceMapping;
       8: areturn

  public boolean hasResourceMappingForDomainType(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #23                 // Field domainMappings:Lorg/springframework/data/rest/core/config/ResourceMappingConfiguration;
       4: aload_1
       5: invokevirtual #69                 // Method org/springframework/data/rest/core/config/ResourceMappingConfiguration.hasResourceMappingFor:(Ljava/lang/Class;)Z
       8: ireturn

  public org.springframework.data.rest.core.config.ResourceMappingConfiguration getDomainTypesResourceMappingConfiguration();
    Code:
       0: aload_0
       1: getfield      #23                 // Field domainMappings:Lorg/springframework/data/rest/core/config/ResourceMappingConfiguration;
       4: areturn

  public org.springframework.data.rest.core.config.ResourceMapping setResourceMappingForRepository(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #24                 // Field repoMappings:Lorg/springframework/data/rest/core/config/ResourceMappingConfiguration;
       4: aload_1
       5: invokevirtual #67                 // Method org/springframework/data/rest/core/config/ResourceMappingConfiguration.setResourceMappingFor:(Ljava/lang/Class;)Lorg/springframework/data/rest/core/config/ResourceMapping;
       8: areturn

  public org.springframework.data.rest.core.config.ResourceMapping getResourceMappingForRepository(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #24                 // Field repoMappings:Lorg/springframework/data/rest/core/config/ResourceMappingConfiguration;
       4: aload_1
       5: invokevirtual #68                 // Method org/springframework/data/rest/core/config/ResourceMappingConfiguration.getResourceMappingFor:(Ljava/lang/Class;)Lorg/springframework/data/rest/core/config/ResourceMapping;
       8: areturn

  public boolean hasResourceMappingForRepository(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #24                 // Field repoMappings:Lorg/springframework/data/rest/core/config/ResourceMappingConfiguration;
       4: aload_1
       5: invokevirtual #69                 // Method org/springframework/data/rest/core/config/ResourceMappingConfiguration.hasResourceMappingFor:(Ljava/lang/Class;)Z
       8: ireturn

  public org.springframework.data.rest.core.config.ResourceMapping findRepositoryMappingForPath(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #24                 // Field repoMappings:Lorg/springframework/data/rest/core/config/ResourceMappingConfiguration;
       4: aload_1
       5: invokevirtual #70                 // Method org/springframework/data/rest/core/config/ResourceMappingConfiguration.findTypeForPath:(Ljava/lang/String;)Ljava/lang/Class;
       8: astore_2
       9: aconst_null
      10: aload_2
      11: if_acmpne     16
      14: aconst_null
      15: areturn
      16: aload_0
      17: getfield      #24                 // Field repoMappings:Lorg/springframework/data/rest/core/config/ResourceMappingConfiguration;
      20: aload_2
      21: invokevirtual #68                 // Method org/springframework/data/rest/core/config/ResourceMappingConfiguration.getResourceMappingFor:(Ljava/lang/Class;)Lorg/springframework/data/rest/core/config/ResourceMapping;
      24: areturn

  public boolean isIdExposedFor(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #20                 // Field exposeIdsFor:Ljava/util/List;
       4: aload_1
       5: invokeinterface #71,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      10: ireturn

  public org.springframework.data.rest.core.config.RepositoryRestConfiguration exposeIdsFor(java.lang.Class<?>...);
    Code:
       0: aload_0
       1: getfield      #20                 // Field exposeIdsFor:Ljava/util/List;
       4: aload_1
       5: invokestatic  #72                 // Method java/util/Collections.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z
       8: pop
       9: aload_0
      10: areturn

  public org.springframework.data.rest.core.config.ProjectionDefinitionConfiguration projectionConfiguration();
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method getProjectionConfiguration:()Lorg/springframework/data/rest/core/config/ProjectionDefinitionConfiguration;
       4: areturn

  public org.springframework.data.rest.core.config.ProjectionDefinitionConfiguration getProjectionConfiguration();
    Code:
       0: aload_0
       1: getfield      #39                 // Field projectionConfiguration:Lorg/springframework/data/rest/core/config/ProjectionDefinitionConfiguration;
       4: areturn

  public org.springframework.data.rest.core.config.MetadataConfiguration metadataConfiguration();
    Code:
       0: aload_0
       1: getfield      #40                 // Field metadataConfiguration:Lorg/springframework/data/rest/core/config/MetadataConfiguration;
       4: areturn

  public org.springframework.data.rest.core.config.MetadataConfiguration getMetadataConfiguration();
    Code:
       0: aload_0
       1: getfield      #40                 // Field metadataConfiguration:Lorg/springframework/data/rest/core/config/MetadataConfiguration;
       4: areturn

  public org.springframework.data.rest.core.config.RepositoryRestConfiguration setEnableEnumTranslation(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #34                 // Field enableEnumTranslation:Z
       5: aload_0
       6: areturn

  public boolean isEnableEnumTranslation();
    Code:
       0: aload_0
       1: getfield      #34                 // Field enableEnumTranslation:Z
       4: ireturn

  public org.springframework.data.rest.core.config.EnumTranslationConfiguration getEnumTranslationConfiguration();
    Code:
       0: aload_0
       1: getfield      #41                 // Field enumTranslationConfiguration:Lorg/springframework/data/rest/core/config/EnumTranslationConfiguration;
       4: areturn

  public org.springframework.data.rest.core.mapping.RepositoryDetectionStrategy getRepositoryDetectionStrategy();
    Code:
       0: aload_0
       1: getfield      #26                 // Field repositoryDetectionStrategy:Lorg/springframework/data/rest/core/mapping/RepositoryDetectionStrategy;
       4: areturn

  public org.springframework.data.rest.core.config.RepositoryRestConfiguration setRepositoryDetectionStrategy(org.springframework.data.rest.core.mapping.RepositoryDetectionStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     11
       5: getstatic     #25                 // Field org/springframework/data/rest/core/mapping/RepositoryDetectionStrategy$RepositoryDetectionStrategies.DEFAULT:Lorg/springframework/data/rest/core/mapping/RepositoryDetectionStrategy$RepositoryDetectionStrategies;
       8: goto          12
      11: aload_1
      12: putfield      #26                 // Field repositoryDetectionStrategy:Lorg/springframework/data/rest/core/mapping/RepositoryDetectionStrategy;
      15: aload_0
      16: areturn

  public boolean exposeRepositoryMethodsByDefault();
    Code:
       0: aload_0
       1: getfield      #27                 // Field exposeRepositoryMethodsByDefault:Z
       4: ireturn

  public void setExposeRepositoryMethodsByDefault(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #27                 // Field exposeRepositoryMethodsByDefault:Z
       5: return

  public void disableDefaultExposure();
    Code:
       0: aload_0
       1: getstatic     #74                 // Field org/springframework/data/rest/core/mapping/RepositoryDetectionStrategy$RepositoryDetectionStrategies.ANNOTATED:Lorg/springframework/data/rest/core/mapping/RepositoryDetectionStrategy$RepositoryDetectionStrategies;
       4: invokevirtual #75                 // Method setRepositoryDetectionStrategy:(Lorg/springframework/data/rest/core/mapping/RepositoryDetectionStrategy;)Lorg/springframework/data/rest/core/config/RepositoryRestConfiguration;
       7: pop
       8: aload_0
       9: iconst_0
      10: invokevirtual #76                 // Method setExposeRepositoryMethodsByDefault:(Z)V
      13: return

  public org.springframework.data.rest.core.config.RepositoryCorsRegistry getCorsRegistry();
    Code:
       0: aload_0
       1: getfield      #33                 // Field corsRegistry:Lorg/springframework/data/rest/core/config/RepositoryCorsRegistry;
       4: areturn

  public org.springframework.data.rest.core.config.EntityLookupRegistrar withEntityLookup();
    Code:
       0: aload_0
       1: getfield      #44                 // Field entityLookupConfiguration:Lorg/springframework/data/rest/core/config/EntityLookupConfiguration;
       4: areturn

  public java.util.List<org.springframework.data.rest.core.support.EntityLookup<?>> getEntityLookups(org.springframework.data.repository.support.Repositories);
    Code:
       0: aload_1
       1: ldc           #77                 // String Repositories must not be null!
       3: invokestatic  #36                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #44                 // Field entityLookupConfiguration:Lorg/springframework/data/rest/core/config/EntityLookupConfiguration;
      10: aload_1
      11: invokevirtual #78                 // Method org/springframework/data/rest/core/config/EntityLookupConfiguration.getEntityLookups:(Lorg/springframework/data/repository/support/Repositories;)Ljava/util/List;
      14: areturn

  public boolean isLookupType(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #44                 // Field entityLookupConfiguration:Lorg/springframework/data/rest/core/config/EntityLookupConfiguration;
       4: aload_1
       5: invokevirtual #79                 // Method org/springframework/data/rest/core/config/EntityLookupConfiguration.isLookupType:(Ljava/lang/Class;)Z
       8: ireturn

  public org.springframework.hateoas.RelProvider getRelProvider();
    Code:
       0: aload_0
       1: getfield      #30                 // Field relProvider:Lorg/springframework/hateoas/RelProvider;
       4: areturn

  public void setRelProvider(org.springframework.hateoas.RelProvider);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #80                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #81                 // String relProvider is marked non-null but is null
      10: invokespecial #82                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #30                 // Field relProvider:Lorg/springframework/hateoas/RelProvider;
      19: return

  public org.springframework.data.rest.core.mapping.ExposureConfiguration getExposureConfiguration();
    Code:
       0: aload_0
       1: getfield      #47                 // Field exposureConfiguration:Lorg/springframework/data/rest/core/mapping/ExposureConfiguration;
       4: areturn

  static {};
    Code:
       0: ldc           #83                 // String
       2: invokestatic  #55                 // Method java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;
       5: putstatic     #2                  // Field NO_URI:Ljava/net/URI;
       8: return
}
