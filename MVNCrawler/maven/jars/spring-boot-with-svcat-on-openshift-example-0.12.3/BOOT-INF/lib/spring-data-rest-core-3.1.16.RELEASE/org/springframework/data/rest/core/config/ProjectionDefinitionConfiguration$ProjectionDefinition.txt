Compiled from "ProjectionDefinitionConfiguration.java"
final class org.springframework.data.rest.core.config.ProjectionDefinitionConfiguration$ProjectionDefinition {
  private final java.lang.Class<?> sourceType;

  private final java.lang.Class<?> targetType;

  private final java.lang.String name;

  static org.springframework.data.rest.core.config.ProjectionDefinitionConfiguration$ProjectionDefinition of(java.lang.Class<?>, java.lang.Class<?>, java.lang.String);
    Code:
       0: aload_2
       1: ldc           #4                  // String Name must not be null or empty!
       3: invokestatic  #5                  // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: new           #6                  // class org/springframework/data/rest/core/config/ProjectionDefinitionConfiguration$ProjectionDefinition
       9: dup
      10: aload_0
      11: aload_1
      12: aload_2
      13: invokespecial #7                  // Method "<init>":(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)V
      16: areturn

  public java.lang.Class<?> getSourceType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field sourceType:Ljava/lang/Class;
       4: areturn

  public java.lang.Class<?> getTargetType();
    Code:
       0: aload_0
       1: getfield      #1                  // Field targetType:Ljava/lang/Class;
       4: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Ljava/lang/String;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #6                  // class org/springframework/data/rest/core/config/ProjectionDefinitionConfiguration$ProjectionDefinition
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #6                  // class org/springframework/data/rest/core/config/ProjectionDefinitionConfiguration$ProjectionDefinition
      20: astore_2
      21: aload_0
      22: invokevirtual #8                  // Method getSourceType:()Ljava/lang/Class;
      25: astore_3
      26: aload_2
      27: invokevirtual #8                  // Method getSourceType:()Ljava/lang/Class;
      30: astore        4
      32: aload_3
      33: ifnonnull     44
      36: aload         4
      38: ifnull        55
      41: goto          53
      44: aload_3
      45: aload         4
      47: invokevirtual #9                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      50: ifne          55
      53: iconst_0
      54: ireturn
      55: aload_0
      56: invokevirtual #10                 // Method getTargetType:()Ljava/lang/Class;
      59: astore        5
      61: aload_2
      62: invokevirtual #10                 // Method getTargetType:()Ljava/lang/Class;
      65: astore        6
      67: aload         5
      69: ifnonnull     80
      72: aload         6
      74: ifnull        92
      77: goto          90
      80: aload         5
      82: aload         6
      84: invokevirtual #9                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      87: ifne          92
      90: iconst_0
      91: ireturn
      92: aload_0
      93: invokevirtual #11                 // Method getName:()Ljava/lang/String;
      96: astore        7
      98: aload_2
      99: invokevirtual #11                 // Method getName:()Ljava/lang/String;
     102: astore        8
     104: aload         7
     106: ifnonnull     117
     109: aload         8
     111: ifnull        129
     114: goto          127
     117: aload         7
     119: aload         8
     121: invokevirtual #9                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     124: ifne          129
     127: iconst_0
     128: ireturn
     129: iconst_1
     130: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: aload_0
       6: invokevirtual #8                  // Method getSourceType:()Ljava/lang/Class;
       9: astore_3
      10: iload_2
      11: bipush        59
      13: imul
      14: aload_3
      15: ifnonnull     23
      18: bipush        43
      20: goto          27
      23: aload_3
      24: invokevirtual #12                 // Method java/lang/Object.hashCode:()I
      27: iadd
      28: istore_2
      29: aload_0
      30: invokevirtual #10                 // Method getTargetType:()Ljava/lang/Class;
      33: astore        4
      35: iload_2
      36: bipush        59
      38: imul
      39: aload         4
      41: ifnonnull     49
      44: bipush        43
      46: goto          54
      49: aload         4
      51: invokevirtual #12                 // Method java/lang/Object.hashCode:()I
      54: iadd
      55: istore_2
      56: aload_0
      57: invokevirtual #11                 // Method getName:()Ljava/lang/String;
      60: astore        5
      62: iload_2
      63: bipush        59
      65: imul
      66: aload         5
      68: ifnonnull     76
      71: bipush        43
      73: goto          81
      76: aload         5
      78: invokevirtual #12                 // Method java/lang/Object.hashCode:()I
      81: iadd
      82: istore_2
      83: iload_2
      84: ireturn

  public java.lang.String toString();
    Code:
       0: new           #13                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #15                 // String ProjectionDefinitionConfiguration.ProjectionDefinition(sourceType=
       9: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #8                  // Method getSourceType:()Ljava/lang/Class;
      16: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #18                 // String , targetType=
      21: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #10                 // Method getTargetType:()Ljava/lang/Class;
      28: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #19                 // String , name=
      33: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #11                 // Method getName:()Ljava/lang/String;
      40: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: ldc           #20                 // String )
      45: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: areturn

  private org.springframework.data.rest.core.config.ProjectionDefinitionConfiguration$ProjectionDefinition(java.lang.Class<?>, java.lang.Class<?>, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #22                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #23                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #24                 // String sourceType is marked non-null but is null
      14: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_2
      19: ifnonnull     32
      22: new           #23                 // class java/lang/IllegalArgumentException
      25: dup
      26: ldc           #26                 // String targetType is marked non-null but is null
      28: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload_3
      33: ifnonnull     46
      36: new           #23                 // class java/lang/IllegalArgumentException
      39: dup
      40: ldc           #27                 // String name is marked non-null but is null
      42: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload_0
      47: aload_1
      48: putfield      #3                  // Field sourceType:Ljava/lang/Class;
      51: aload_0
      52: aload_2
      53: putfield      #1                  // Field targetType:Ljava/lang/Class;
      56: aload_0
      57: aload_3
      58: putfield      #2                  // Field name:Ljava/lang/String;
      61: return

  static java.lang.Class access$000(org.springframework.data.rest.core.config.ProjectionDefinitionConfiguration$ProjectionDefinition);
    Code:
       0: aload_0
       1: getfield      #3                  // Field sourceType:Ljava/lang/Class;
       4: areturn

  static java.lang.String access$100(org.springframework.data.rest.core.config.ProjectionDefinitionConfiguration$ProjectionDefinition);
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Ljava/lang/String;
       4: areturn

  static java.lang.Class access$200(org.springframework.data.rest.core.config.ProjectionDefinitionConfiguration$ProjectionDefinition);
    Code:
       0: aload_0
       1: getfield      #1                  // Field targetType:Ljava/lang/Class;
       4: areturn
}
