Compiled from "CompositeReactiveHealthIndicator.java"
public class org.springframework.boot.actuate.health.CompositeReactiveHealthIndicator implements org.springframework.boot.actuate.health.ReactiveHealthIndicator {
  private final org.springframework.boot.actuate.health.ReactiveHealthIndicatorRegistry registry;

  private final org.springframework.boot.actuate.health.HealthAggregator healthAggregator;

  private java.lang.Long timeout;

  private org.springframework.boot.actuate.health.Health timeoutHealth;

  private final java.util.function.Function<reactor.core.publisher.Mono<org.springframework.boot.actuate.health.Health>, reactor.core.publisher.Mono<org.springframework.boot.actuate.health.Health>> timeoutCompose;

  public org.springframework.boot.actuate.health.CompositeReactiveHealthIndicator(org.springframework.boot.actuate.health.HealthAggregator);
    Code:
       0: aload_0
       1: aload_1
       2: new           #1                  // class java/util/LinkedHashMap
       5: dup
       6: invokespecial #2                  // Method java/util/LinkedHashMap."<init>":()V
       9: invokespecial #3                  // Method "<init>":(Lorg/springframework/boot/actuate/health/HealthAggregator;Ljava/util/Map;)V
      12: return

  public org.springframework.boot.actuate.health.CompositeReactiveHealthIndicator(org.springframework.boot.actuate.health.HealthAggregator, java.util.Map<java.lang.String, org.springframework.boot.actuate.health.ReactiveHealthIndicator>);
    Code:
       0: aload_0
       1: aload_1
       2: new           #4                  // class org/springframework/boot/actuate/health/DefaultReactiveHealthIndicatorRegistry
       5: dup
       6: aload_2
       7: invokespecial #5                  // Method org/springframework/boot/actuate/health/DefaultReactiveHealthIndicatorRegistry."<init>":(Ljava/util/Map;)V
      10: invokespecial #6                  // Method "<init>":(Lorg/springframework/boot/actuate/health/HealthAggregator;Lorg/springframework/boot/actuate/health/ReactiveHealthIndicatorRegistry;)V
      13: return

  public org.springframework.boot.actuate.health.CompositeReactiveHealthIndicator(org.springframework.boot.actuate.health.HealthAggregator, org.springframework.boot.actuate.health.ReactiveHealthIndicatorRegistry);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #8                  // Field registry:Lorg/springframework/boot/actuate/health/ReactiveHealthIndicatorRegistry;
       9: aload_0
      10: aload_1
      11: putfield      #9                  // Field healthAggregator:Lorg/springframework/boot/actuate/health/HealthAggregator;
      14: aload_0
      15: aload_0
      16: invokedynamic #10,  0             // InvokeDynamic #0:apply:(Lorg/springframework/boot/actuate/health/CompositeReactiveHealthIndicator;)Ljava/util/function/Function;
      21: putfield      #11                 // Field timeoutCompose:Ljava/util/function/Function;
      24: return

  public org.springframework.boot.actuate.health.CompositeReactiveHealthIndicator addHealthIndicator(java.lang.String, org.springframework.boot.actuate.health.ReactiveHealthIndicator);
    Code:
       0: aload_0
       1: getfield      #8                  // Field registry:Lorg/springframework/boot/actuate/health/ReactiveHealthIndicatorRegistry;
       4: aload_1
       5: aload_2
       6: invokeinterface #12,  3           // InterfaceMethod org/springframework/boot/actuate/health/ReactiveHealthIndicatorRegistry.register:(Ljava/lang/String;Lorg/springframework/boot/actuate/health/ReactiveHealthIndicator;)V
      11: aload_0
      12: areturn

  public org.springframework.boot.actuate.health.CompositeReactiveHealthIndicator timeoutStrategy(long, org.springframework.boot.actuate.health.Health);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #13                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       5: putfield      #14                 // Field timeout:Ljava/lang/Long;
       8: aload_0
       9: aload_3
      10: ifnull        17
      13: aload_3
      14: goto          23
      17: invokestatic  #15                 // Method org/springframework/boot/actuate/health/Health.unknown:()Lorg/springframework/boot/actuate/health/Health$Builder;
      20: invokevirtual #16                 // Method org/springframework/boot/actuate/health/Health$Builder.build:()Lorg/springframework/boot/actuate/health/Health;
      23: putfield      #17                 // Field timeoutHealth:Lorg/springframework/boot/actuate/health/Health;
      26: aload_0
      27: areturn

  org.springframework.boot.actuate.health.ReactiveHealthIndicatorRegistry getRegistry();
    Code:
       0: aload_0
       1: getfield      #8                  // Field registry:Lorg/springframework/boot/actuate/health/ReactiveHealthIndicatorRegistry;
       4: areturn

  public reactor.core.publisher.Mono<org.springframework.boot.actuate.health.Health> health();
    Code:
       0: aload_0
       1: getfield      #8                  // Field registry:Lorg/springframework/boot/actuate/health/ReactiveHealthIndicatorRegistry;
       4: invokeinterface #18,  1           // InterfaceMethod org/springframework/boot/actuate/health/ReactiveHealthIndicatorRegistry.getAll:()Ljava/util/Map;
       9: invokeinterface #19,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      14: invokestatic  #20                 // Method reactor/core/publisher/Flux.fromIterable:(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
      17: aload_0
      18: invokedynamic #21,  0             // InvokeDynamic #1:apply:(Lorg/springframework/boot/actuate/health/CompositeReactiveHealthIndicator;)Ljava/util/function/Function;
      23: invokevirtual #22                 // Method reactor/core/publisher/Flux.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      26: invokedynamic #23,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      31: invokedynamic #24,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      36: invokevirtual #25                 // Method reactor/core/publisher/Flux.collectMap:(Ljava/util/function/Function;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      39: aload_0
      40: getfield      #9                  // Field healthAggregator:Lorg/springframework/boot/actuate/health/HealthAggregator;
      43: dup
      44: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      47: pop
      48: invokedynamic #27,  0             // InvokeDynamic #4:apply:(Lorg/springframework/boot/actuate/health/HealthAggregator;)Ljava/util/function/Function;
      53: invokevirtual #28                 // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      56: areturn

  private org.reactivestreams.Publisher lambda$health$1(java.util.Map$Entry);
    Code:
       0: aload_1
       1: invokeinterface #29,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
       6: invokestatic  #30                 // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
       9: aload_1
      10: invokeinterface #31,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      15: checkcast     #32                 // class org/springframework/boot/actuate/health/ReactiveHealthIndicator
      18: invokeinterface #33,  1           // InterfaceMethod org/springframework/boot/actuate/health/ReactiveHealthIndicator.health:()Lreactor/core/publisher/Mono;
      23: aload_0
      24: getfield      #11                 // Field timeoutCompose:Ljava/util/function/Function;
      27: invokevirtual #34                 // Method reactor/core/publisher/Mono.compose:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      30: invokestatic  #35                 // Method reactor/core/publisher/Mono.zip:(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      33: areturn

  private reactor.core.publisher.Mono lambda$new$0(reactor.core.publisher.Mono);
    Code:
       0: aload_0
       1: getfield      #14                 // Field timeout:Ljava/lang/Long;
       4: ifnull        31
       7: aload_1
       8: aload_0
       9: getfield      #14                 // Field timeout:Ljava/lang/Long;
      12: invokevirtual #36                 // Method java/lang/Long.longValue:()J
      15: invokestatic  #37                 // Method java/time/Duration.ofMillis:(J)Ljava/time/Duration;
      18: aload_0
      19: getfield      #17                 // Field timeoutHealth:Lorg/springframework/boot/actuate/health/Health;
      22: invokestatic  #30                 // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      25: invokevirtual #38                 // Method reactor/core/publisher/Mono.timeout:(Ljava/time/Duration;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      28: goto          32
      31: aload_1
      32: areturn
}
