Compiled from "HttpExchangeTracer.java"
final class org.springframework.boot.actuate.trace.http.HttpExchangeTracer$FilteredTraceableRequest implements org.springframework.boot.actuate.trace.http.TraceableRequest {
  private final org.springframework.boot.actuate.trace.http.TraceableRequest delegate;

  final org.springframework.boot.actuate.trace.http.HttpExchangeTracer this$0;

  private org.springframework.boot.actuate.trace.http.HttpExchangeTracer$FilteredTraceableRequest(org.springframework.boot.actuate.trace.http.HttpExchangeTracer, org.springframework.boot.actuate.trace.http.TraceableRequest);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/springframework/boot/actuate/trace/http/HttpExchangeTracer;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field delegate:Lorg/springframework/boot/actuate/trace/http/TraceableRequest;
      14: return

  public java.lang.String getMethod();
    Code:
       0: aload_0
       1: getfield      #4                  // Field delegate:Lorg/springframework/boot/actuate/trace/http/TraceableRequest;
       4: invokeinterface #5,  1            // InterfaceMethod org/springframework/boot/actuate/trace/http/TraceableRequest.getMethod:()Ljava/lang/String;
       9: areturn

  public java.net.URI getUri();
    Code:
       0: aload_0
       1: getfield      #4                  // Field delegate:Lorg/springframework/boot/actuate/trace/http/TraceableRequest;
       4: invokeinterface #6,  1            // InterfaceMethod org/springframework/boot/actuate/trace/http/TraceableRequest.getUri:()Ljava/net/URI;
       9: areturn

  public java.util.Map<java.lang.String, java.util.List<java.lang.String>> getHeaders();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/springframework/boot/actuate/trace/http/HttpExchangeTracer;
       4: getstatic     #7                  // Field org/springframework/boot/actuate/trace/http/Include.REQUEST_HEADERS:Lorg/springframework/boot/actuate/trace/http/Include;
       7: aload_0
       8: getfield      #4                  // Field delegate:Lorg/springframework/boot/actuate/trace/http/TraceableRequest;
      11: dup
      12: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: pop
      16: invokedynamic #9,  0              // InvokeDynamic #0:get:(Lorg/springframework/boot/actuate/trace/http/TraceableRequest;)Ljava/util/function/Supplier;
      21: aload_0
      22: invokedynamic #10,  0             // InvokeDynamic #1:test:(Lorg/springframework/boot/actuate/trace/http/HttpExchangeTracer$FilteredTraceableRequest;)Ljava/util/function/Predicate;
      27: invokestatic  #11                 // Method org/springframework/boot/actuate/trace/http/HttpExchangeTracer.access$200:(Lorg/springframework/boot/actuate/trace/http/HttpExchangeTracer;Lorg/springframework/boot/actuate/trace/http/Include;Ljava/util/function/Supplier;Ljava/util/function/Predicate;)Ljava/util/Map;
      30: astore_1
      31: aload_0
      32: getfield      #2                  // Field this$0:Lorg/springframework/boot/actuate/trace/http/HttpExchangeTracer;
      35: aload_1
      36: invokevirtual #12                 // Method org/springframework/boot/actuate/trace/http/HttpExchangeTracer.postProcessRequestHeaders:(Ljava/util/Map;)V
      39: aload_1
      40: areturn

  private boolean includedHeader(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #14                 // String Cookie
       3: invokevirtual #15                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
       6: ifeq          25
       9: aload_0
      10: getfield      #2                  // Field this$0:Lorg/springframework/boot/actuate/trace/http/HttpExchangeTracer;
      13: invokestatic  #16                 // Method org/springframework/boot/actuate/trace/http/HttpExchangeTracer.access$300:(Lorg/springframework/boot/actuate/trace/http/HttpExchangeTracer;)Ljava/util/Set;
      16: getstatic     #17                 // Field org/springframework/boot/actuate/trace/http/Include.COOKIE_HEADERS:Lorg/springframework/boot/actuate/trace/http/Include;
      19: invokeinterface #18,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      24: ireturn
      25: aload_1
      26: ldc           #19                 // String Authorization
      28: invokevirtual #15                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      31: ifeq          50
      34: aload_0
      35: getfield      #2                  // Field this$0:Lorg/springframework/boot/actuate/trace/http/HttpExchangeTracer;
      38: invokestatic  #16                 // Method org/springframework/boot/actuate/trace/http/HttpExchangeTracer.access$300:(Lorg/springframework/boot/actuate/trace/http/HttpExchangeTracer;)Ljava/util/Set;
      41: getstatic     #20                 // Field org/springframework/boot/actuate/trace/http/Include.AUTHORIZATION_HEADER:Lorg/springframework/boot/actuate/trace/http/Include;
      44: invokeinterface #18,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      49: ireturn
      50: iconst_1
      51: ireturn

  public java.lang.String getRemoteAddress();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/springframework/boot/actuate/trace/http/HttpExchangeTracer;
       4: getstatic     #21                 // Field org/springframework/boot/actuate/trace/http/Include.REMOTE_ADDRESS:Lorg/springframework/boot/actuate/trace/http/Include;
       7: aload_0
       8: getfield      #4                  // Field delegate:Lorg/springframework/boot/actuate/trace/http/TraceableRequest;
      11: dup
      12: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: pop
      16: invokedynamic #22,  0             // InvokeDynamic #2:get:(Lorg/springframework/boot/actuate/trace/http/TraceableRequest;)Ljava/util/function/Supplier;
      21: invokestatic  #23                 // Method org/springframework/boot/actuate/trace/http/HttpExchangeTracer.access$400:(Lorg/springframework/boot/actuate/trace/http/HttpExchangeTracer;Lorg/springframework/boot/actuate/trace/http/Include;Ljava/util/function/Supplier;)Ljava/lang/Object;
      24: checkcast     #24                 // class java/lang/String
      27: areturn

  org.springframework.boot.actuate.trace.http.HttpExchangeTracer$FilteredTraceableRequest(org.springframework.boot.actuate.trace.http.HttpExchangeTracer, org.springframework.boot.actuate.trace.http.TraceableRequest, org.springframework.boot.actuate.trace.http.HttpExchangeTracer$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method "<init>":(Lorg/springframework/boot/actuate/trace/http/HttpExchangeTracer;Lorg/springframework/boot/actuate/trace/http/TraceableRequest;)V
       6: return
}
