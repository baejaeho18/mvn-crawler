Compiled from "ServerWebExchangeTraceableRequest.java"
class org.springframework.boot.actuate.web.trace.reactive.ServerWebExchangeTraceableRequest implements org.springframework.boot.actuate.trace.http.TraceableRequest {
  private final java.lang.String method;

  private final java.util.Map<java.lang.String, java.util.List<java.lang.String>> headers;

  private final java.net.URI uri;

  private final java.lang.String remoteAddress;

  org.springframework.boot.actuate.web.trace.reactive.ServerWebExchangeTraceableRequest(org.springframework.web.server.ServerWebExchange);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokeinterface #2,  1            // InterfaceMethod org/springframework/web/server/ServerWebExchange.getRequest:()Lorg/springframework/http/server/reactive/ServerHttpRequest;
      10: astore_2
      11: aload_0
      12: aload_2
      13: invokeinterface #3,  1            // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest.getMethodValue:()Ljava/lang/String;
      18: putfield      #4                  // Field method:Ljava/lang/String;
      21: aload_0
      22: aload_2
      23: invokeinterface #5,  1            // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest.getHeaders:()Lorg/springframework/http/HttpHeaders;
      28: putfield      #6                  // Field headers:Ljava/util/Map;
      31: aload_0
      32: aload_2
      33: invokeinterface #7,  1            // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest.getURI:()Ljava/net/URI;
      38: putfield      #8                  // Field uri:Ljava/net/URI;
      41: aload_0
      42: aload_2
      43: invokestatic  #9                  // Method getRemoteAddress:(Lorg/springframework/http/server/reactive/ServerHttpRequest;)Ljava/lang/String;
      46: putfield      #10                 // Field remoteAddress:Ljava/lang/String;
      49: return

  private static java.lang.String getRemoteAddress(org.springframework.http.server.reactive.ServerHttpRequest);
    Code:
       0: aload_0
       1: invokeinterface #11,  1           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest.getRemoteAddress:()Ljava/net/InetSocketAddress;
       6: astore_1
       7: aload_1
       8: ifnull        18
      11: aload_1
      12: invokevirtual #12                 // Method java/net/InetSocketAddress.getAddress:()Ljava/net/InetAddress;
      15: goto          19
      18: aconst_null
      19: astore_2
      20: aload_2
      21: ifnull        31
      24: aload_2
      25: invokevirtual #13                 // Method java/net/InetAddress.toString:()Ljava/lang/String;
      28: goto          32
      31: aconst_null
      32: areturn

  public java.lang.String getMethod();
    Code:
       0: aload_0
       1: getfield      #4                  // Field method:Ljava/lang/String;
       4: areturn

  public java.net.URI getUri();
    Code:
       0: aload_0
       1: getfield      #8                  // Field uri:Ljava/net/URI;
       4: areturn

  public java.util.Map<java.lang.String, java.util.List<java.lang.String>> getHeaders();
    Code:
       0: new           #14                 // class java/util/LinkedHashMap
       3: dup
       4: aload_0
       5: getfield      #6                  // Field headers:Ljava/util/Map;
       8: invokespecial #15                 // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
      11: areturn

  public java.lang.String getRemoteAddress();
    Code:
       0: aload_0
       1: getfield      #10                 // Field remoteAddress:Ljava/lang/String;
       4: areturn
}
