Compiled from "AbstractReactiveHealthIndicator.java"
public abstract class org.springframework.boot.actuate.health.AbstractReactiveHealthIndicator implements org.springframework.boot.actuate.health.ReactiveHealthIndicator {
  private static final java.lang.String NO_MESSAGE;

  private static final java.lang.String DEFAULT_MESSAGE;

  private final org.apache.commons.logging.Log logger;

  private final java.util.function.Function<java.lang.Throwable, java.lang.String> healthCheckFailedMessage;

  protected org.springframework.boot.actuate.health.AbstractReactiveHealthIndicator();
    Code:
       0: aload_0
       1: getstatic     #1                  // Field NO_MESSAGE:Ljava/lang/String;
       4: invokespecial #2                  // Method "<init>":(Ljava/lang/String;)V
       7: return

  protected org.springframework.boot.actuate.health.AbstractReactiveHealthIndicator(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #4                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #5                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: aload_1
      17: invokedynamic #7,  0              // InvokeDynamic #0:apply:(Ljava/lang/String;)Ljava/util/function/Function;
      22: putfield      #8                  // Field healthCheckFailedMessage:Ljava/util/function/Function;
      25: return

  protected org.springframework.boot.actuate.health.AbstractReactiveHealthIndicator(java.util.function.Function<java.lang.Throwable, java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #4                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #5                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_1
      16: ldc           #9                  // String HealthCheckFailedMessage must not be null
      18: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_0
      22: aload_1
      23: putfield      #8                  // Field healthCheckFailedMessage:Ljava/util/function/Function;
      26: return

  public final reactor.core.publisher.Mono<org.springframework.boot.actuate.health.Health> health();
    Code:
       0: aload_0
       1: new           #11                 // class org/springframework/boot/actuate/health/Health$Builder
       4: dup
       5: invokespecial #12                 // Method org/springframework/boot/actuate/health/Health$Builder."<init>":()V
       8: invokevirtual #13                 // Method doHealthCheck:(Lorg/springframework/boot/actuate/health/Health$Builder;)Lreactor/core/publisher/Mono;
      11: aload_0
      12: invokedynamic #14,  0             // InvokeDynamic #1:apply:(Lorg/springframework/boot/actuate/health/AbstractReactiveHealthIndicator;)Ljava/util/function/Function;
      17: invokevirtual #15                 // Method reactor/core/publisher/Mono.onErrorResume:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      20: areturn
      21: astore_1
      22: aload_0
      23: aload_1
      24: invokespecial #17                 // Method handleFailure:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      27: areturn
    Exception table:
       from    to  target type
           0    20    21   Class java/lang/Exception

  private reactor.core.publisher.Mono<org.springframework.boot.actuate.health.Health> handleFailure(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #18,  1           // InterfaceMethod org/apache/commons/logging/Log.isWarnEnabled:()Z
       9: ifeq          49
      12: aload_0
      13: getfield      #8                  // Field healthCheckFailedMessage:Ljava/util/function/Function;
      16: aload_1
      17: invokeinterface #19,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #20                 // class java/lang/String
      25: astore_2
      26: aload_0
      27: getfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
      30: aload_2
      31: invokestatic  #21                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      34: ifeq          41
      37: aload_2
      38: goto          43
      41: ldc           #23                 // String Health check failed
      43: aload_1
      44: invokeinterface #24,  3           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      49: new           #11                 // class org/springframework/boot/actuate/health/Health$Builder
      52: dup
      53: invokespecial #12                 // Method org/springframework/boot/actuate/health/Health$Builder."<init>":()V
      56: aload_1
      57: invokevirtual #25                 // Method org/springframework/boot/actuate/health/Health$Builder.down:(Ljava/lang/Throwable;)Lorg/springframework/boot/actuate/health/Health$Builder;
      60: invokevirtual #26                 // Method org/springframework/boot/actuate/health/Health$Builder.build:()Lorg/springframework/boot/actuate/health/Health;
      63: invokestatic  #27                 // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      66: areturn

  protected abstract reactor.core.publisher.Mono<org.springframework.boot.actuate.health.Health> doHealthCheck(org.springframework.boot.actuate.health.Health$Builder);

  private static java.lang.String lambda$new$0(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: areturn

  static {};
    Code:
       0: aconst_null
       1: putstatic     #1                  // Field NO_MESSAGE:Ljava/lang/String;
       4: return
}
