Compiled from "WebMvcMetricsFilter.java"
public class org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter extends org.springframework.web.filter.OncePerRequestFilter {
  private final io.micrometer.core.instrument.MeterRegistry registry;

  private final org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider tagsProvider;

  private final java.lang.String metricName;

  private final boolean autoTimeRequests;

  public org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter(org.springframework.context.ApplicationContext, io.micrometer.core.instrument.MeterRegistry, org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: aload         4
       5: iload         5
       7: invokespecial #1                  // Method "<init>":(Lio/micrometer/core/instrument/MeterRegistry;Lorg/springframework/boot/actuate/metrics/web/servlet/WebMvcTagsProvider;Ljava/lang/String;Z)V
      10: return

  public org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter(io.micrometer.core.instrument.MeterRegistry, org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider, java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/springframework/web/filter/OncePerRequestFilter."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field tagsProvider:Lorg/springframework/boot/actuate/metrics/web/servlet/WebMvcTagsProvider;
      14: aload_0
      15: aload_3
      16: putfield      #5                  // Field metricName:Ljava/lang/String;
      19: aload_0
      20: iload         4
      22: putfield      #6                  // Field autoTimeRequests:Z
      25: return

  protected boolean shouldNotFilterAsyncDispatch();
    Code:
       0: iconst_0
       1: ireturn

  protected void doFilterInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain) throws javax.servlet.ServletException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #7                  // Method filterAndRecordMetrics:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljavax/servlet/FilterChain;)V
       7: return

  private void filterAndRecordMetrics(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain) throws java.io.IOException, javax.servlet.ServletException;
    Code:
       0: aload_1
       1: invokestatic  #8                  // Method org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter$TimingContext.get:(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter$TimingContext;
       4: astore        4
       6: aload         4
       8: ifnonnull     18
      11: aload_0
      12: aload_1
      13: invokespecial #9                  // Method startAndAttachTimingContext:(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter$TimingContext;
      16: astore        4
      18: aload_3
      19: aload_1
      20: aload_2
      21: invokeinterface #10,  3           // InterfaceMethod javax/servlet/FilterChain.doFilter:(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
      26: aload_1
      27: invokeinterface #11,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.isAsyncStarted:()Z
      32: ifne          59
      35: aload_1
      36: getstatic     #12                 // Field org/springframework/web/servlet/DispatcherServlet.EXCEPTION_ATTRIBUTE:Ljava/lang/String;
      39: invokeinterface #13,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      44: checkcast     #14                 // class java/lang/Throwable
      47: astore        5
      49: aload_0
      50: aload         4
      52: aload_2
      53: aload_1
      54: aload         5
      56: invokespecial #15                 // Method record:(Lorg/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter$TimingContext;Ljavax/servlet/http/HttpServletResponse;Ljavax/servlet/http/HttpServletRequest;Ljava/lang/Throwable;)V
      59: goto          107
      62: astore        5
      64: aload_2
      65: getstatic     #17                 // Field org/springframework/http/HttpStatus.INTERNAL_SERVER_ERROR:Lorg/springframework/http/HttpStatus;
      68: invokevirtual #18                 // Method org/springframework/http/HttpStatus.value:()I
      71: invokeinterface #19,  2           // InterfaceMethod javax/servlet/http/HttpServletResponse.setStatus:(I)V
      76: aload_0
      77: aload         4
      79: aload_2
      80: aload_1
      81: aload         5
      83: invokevirtual #20                 // Method org/springframework/web/util/NestedServletException.getCause:()Ljava/lang/Throwable;
      86: invokespecial #15                 // Method record:(Lorg/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter$TimingContext;Ljavax/servlet/http/HttpServletResponse;Ljavax/servlet/http/HttpServletRequest;Ljava/lang/Throwable;)V
      89: aload         5
      91: athrow
      92: astore        5
      94: aload_0
      95: aload         4
      97: aload_2
      98: aload_1
      99: aload         5
     101: invokespecial #15                 // Method record:(Lorg/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter$TimingContext;Ljavax/servlet/http/HttpServletResponse;Ljavax/servlet/http/HttpServletRequest;Ljava/lang/Throwable;)V
     104: aload         5
     106: athrow
     107: return
    Exception table:
       from    to  target type
          18    59    62   Class org/springframework/web/util/NestedServletException
          18    59    92   Class javax/servlet/ServletException
          18    59    92   Class java/io/IOException
          18    59    92   Class java/lang/RuntimeException

  private org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter$TimingContext startAndAttachTimingContext(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: getfield      #3                  // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
       4: invokestatic  #24                 // InterfaceMethod io/micrometer/core/instrument/Timer.start:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Timer$Sample;
       7: astore_2
       8: new           #25                 // class org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter$TimingContext
      11: dup
      12: aload_2
      13: invokespecial #26                 // Method org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter$TimingContext."<init>":(Lio/micrometer/core/instrument/Timer$Sample;)V
      16: astore_3
      17: aload_3
      18: aload_1
      19: invokevirtual #27                 // Method org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter$TimingContext.attachTo:(Ljavax/servlet/http/HttpServletRequest;)V
      22: aload_3
      23: areturn

  private java.util.Set<io.micrometer.core.annotation.Timed> getTimedAnnotations(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #28                 // class org/springframework/web/method/HandlerMethod
       4: ifne          11
       7: invokestatic  #29                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
      10: areturn
      11: aload_0
      12: aload_1
      13: checkcast     #28                 // class org/springframework/web/method/HandlerMethod
      16: invokespecial #30                 // Method getTimedAnnotations:(Lorg/springframework/web/method/HandlerMethod;)Ljava/util/Set;
      19: areturn

  private java.util.Set<io.micrometer.core.annotation.Timed> getTimedAnnotations(org.springframework.web.method.HandlerMethod);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #31                 // Method org/springframework/web/method/HandlerMethod.getMethod:()Ljava/lang/reflect/Method;
       5: invokespecial #32                 // Method findTimedAnnotations:(Ljava/lang/reflect/AnnotatedElement;)Ljava/util/Set;
       8: astore_2
       9: aload_2
      10: invokeinterface #33,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      15: ifeq          27
      18: aload_0
      19: aload_1
      20: invokevirtual #34                 // Method org/springframework/web/method/HandlerMethod.getBeanType:()Ljava/lang/Class;
      23: invokespecial #32                 // Method findTimedAnnotations:(Ljava/lang/reflect/AnnotatedElement;)Ljava/util/Set;
      26: areturn
      27: aload_2
      28: areturn

  private java.util.Set<io.micrometer.core.annotation.Timed> findTimedAnnotations(java.lang.reflect.AnnotatedElement);
    Code:
       0: aload_1
       1: ldc           #35                 // class io/micrometer/core/annotation/Timed
       3: invokestatic  #36                 // Method org/springframework/core/annotation/AnnotationUtils.getDeclaredRepeatableAnnotations:(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Ljava/util/Set;
       6: areturn

  private void record(org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter$TimingContext, javax.servlet.http.HttpServletResponse, javax.servlet.http.HttpServletRequest, java.lang.Throwable);
    Code:
       0: aload_3
       1: getstatic     #37                 // Field org/springframework/web/servlet/HandlerMapping.BEST_MATCHING_HANDLER_ATTRIBUTE:Ljava/lang/String;
       4: invokeinterface #13,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
       9: astore        5
      11: aload_0
      12: aload         5
      14: invokespecial #38                 // Method getTimedAnnotations:(Ljava/lang/Object;)Ljava/util/Set;
      17: astore        6
      19: aload_1
      20: invokevirtual #39                 // Method org/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter$TimingContext.getTimerSample:()Lio/micrometer/core/instrument/Timer$Sample;
      23: astore        7
      25: aload_0
      26: aload_3
      27: aload_2
      28: aload         5
      30: aload         4
      32: invokedynamic #40,  0             // InvokeDynamic #0:get:(Lorg/springframework/boot/actuate/metrics/web/servlet/WebMvcMetricsFilter;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/Object;Ljava/lang/Throwable;)Ljava/util/function/Supplier;
      37: astore        8
      39: aload         6
      41: invokeinterface #33,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      46: ifeq          74
      49: aload_0
      50: getfield      #6                  // Field autoTimeRequests:Z
      53: ifeq          125
      56: aload_0
      57: aload         7
      59: aload         8
      61: aload_0
      62: getfield      #5                  // Field metricName:Ljava/lang/String;
      65: invokestatic  #41                 // InterfaceMethod io/micrometer/core/instrument/Timer.builder:(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
      68: invokespecial #42                 // Method stop:(Lio/micrometer/core/instrument/Timer$Sample;Ljava/util/function/Supplier;Lio/micrometer/core/instrument/Timer$Builder;)V
      71: goto          125
      74: aload         6
      76: invokeinterface #43,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      81: astore        9
      83: aload         9
      85: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      90: ifeq          125
      93: aload         9
      95: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     100: checkcast     #35                 // class io/micrometer/core/annotation/Timed
     103: astore        10
     105: aload_0
     106: aload         7
     108: aload         8
     110: aload         10
     112: aload_0
     113: getfield      #5                  // Field metricName:Ljava/lang/String;
     116: invokestatic  #46                 // InterfaceMethod io/micrometer/core/instrument/Timer.builder:(Lio/micrometer/core/annotation/Timed;Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
     119: invokespecial #42                 // Method stop:(Lio/micrometer/core/instrument/Timer$Sample;Ljava/util/function/Supplier;Lio/micrometer/core/instrument/Timer$Builder;)V
     122: goto          83
     125: return

  private void stop(io.micrometer.core.instrument.Timer$Sample, java.util.function.Supplier<java.lang.Iterable<io.micrometer.core.instrument.Tag>>, io.micrometer.core.instrument.Timer$Builder);
    Code:
       0: aload_1
       1: aload_3
       2: aload_2
       3: invokeinterface #47,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
       8: checkcast     #48                 // class java/lang/Iterable
      11: invokevirtual #49                 // Method io/micrometer/core/instrument/Timer$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Timer$Builder;
      14: aload_0
      15: getfield      #3                  // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
      18: invokevirtual #50                 // Method io/micrometer/core/instrument/Timer$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Timer;
      21: invokevirtual #51                 // Method io/micrometer/core/instrument/Timer$Sample.stop:(Lio/micrometer/core/instrument/Timer;)J
      24: pop2
      25: return

  private java.lang.Iterable lambda$record$0(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #4                  // Field tagsProvider:Lorg/springframework/boot/actuate/metrics/web/servlet/WebMvcTagsProvider;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokeinterface #52,  5           // InterfaceMethod org/springframework/boot/actuate/metrics/web/servlet/WebMvcTagsProvider.getTags:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/Object;Ljava/lang/Throwable;)Ljava/lang/Iterable;
      14: areturn
}
