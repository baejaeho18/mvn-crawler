Compiled from "MetricsClientHttpRequestInterceptor.java"
class org.springframework.boot.actuate.metrics.web.client.MetricsClientHttpRequestInterceptor implements org.springframework.http.client.ClientHttpRequestInterceptor {
  private static final java.lang.ThreadLocal<java.lang.String> urlTemplate;

  private final io.micrometer.core.instrument.MeterRegistry meterRegistry;

  private final org.springframework.boot.actuate.metrics.web.client.RestTemplateExchangeTagsProvider tagProvider;

  private final java.lang.String metricName;

  org.springframework.boot.actuate.metrics.web.client.MetricsClientHttpRequestInterceptor(io.micrometer.core.instrument.MeterRegistry, org.springframework.boot.actuate.metrics.web.client.RestTemplateExchangeTagsProvider, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #3                  // Field tagProvider:Lorg/springframework/boot/actuate/metrics/web/client/RestTemplateExchangeTagsProvider;
       9: aload_0
      10: aload_1
      11: putfield      #4                  // Field meterRegistry:Lio/micrometer/core/instrument/MeterRegistry;
      14: aload_0
      15: aload_3
      16: putfield      #5                  // Field metricName:Ljava/lang/String;
      19: return

  public org.springframework.http.client.ClientHttpResponse intercept(org.springframework.http.HttpRequest, byte[], org.springframework.http.client.ClientHttpRequestExecution) throws java.io.IOException;
    Code:
       0: invokestatic  #6                  // Method java/lang/System.nanoTime:()J
       3: lstore        4
       5: aconst_null
       6: astore        6
       8: aload_3
       9: aload_1
      10: aload_2
      11: invokeinterface #7,  3            // InterfaceMethod org/springframework/http/client/ClientHttpRequestExecution.execute:(Lorg/springframework/http/HttpRequest;[B)Lorg/springframework/http/client/ClientHttpResponse;
      16: astore        6
      18: aload         6
      20: astore        7
      22: aload_0
      23: aload_1
      24: aload         6
      26: invokespecial #8                  // Method getTimeBuilder:(Lorg/springframework/http/HttpRequest;Lorg/springframework/http/client/ClientHttpResponse;)Lio/micrometer/core/instrument/Timer$Builder;
      29: aload_0
      30: getfield      #4                  // Field meterRegistry:Lio/micrometer/core/instrument/MeterRegistry;
      33: invokevirtual #9                  // Method io/micrometer/core/instrument/Timer$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Timer;
      36: invokestatic  #6                  // Method java/lang/System.nanoTime:()J
      39: lload         4
      41: lsub
      42: getstatic     #10                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      45: invokeinterface #11,  4           // InterfaceMethod io/micrometer/core/instrument/Timer.record:(JLjava/util/concurrent/TimeUnit;)V
      50: getstatic     #1                  // Field urlTemplate:Ljava/lang/ThreadLocal;
      53: invokevirtual #12                 // Method java/lang/ThreadLocal.remove:()V
      56: aload         7
      58: areturn
      59: astore        8
      61: aload_0
      62: aload_1
      63: aload         6
      65: invokespecial #8                  // Method getTimeBuilder:(Lorg/springframework/http/HttpRequest;Lorg/springframework/http/client/ClientHttpResponse;)Lio/micrometer/core/instrument/Timer$Builder;
      68: aload_0
      69: getfield      #4                  // Field meterRegistry:Lio/micrometer/core/instrument/MeterRegistry;
      72: invokevirtual #9                  // Method io/micrometer/core/instrument/Timer$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Timer;
      75: invokestatic  #6                  // Method java/lang/System.nanoTime:()J
      78: lload         4
      80: lsub
      81: getstatic     #10                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      84: invokeinterface #11,  4           // InterfaceMethod io/micrometer/core/instrument/Timer.record:(JLjava/util/concurrent/TimeUnit;)V
      89: getstatic     #1                  // Field urlTemplate:Ljava/lang/ThreadLocal;
      92: invokevirtual #12                 // Method java/lang/ThreadLocal.remove:()V
      95: aload         8
      97: athrow
    Exception table:
       from    to  target type
           8    22    59   any
          59    61    59   any

  org.springframework.web.util.UriTemplateHandler createUriTemplateHandler(org.springframework.web.util.UriTemplateHandler);
    Code:
       0: new           #13                 // class org/springframework/boot/actuate/metrics/web/client/MetricsClientHttpRequestInterceptor$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #14                 // Method org/springframework/boot/actuate/metrics/web/client/MetricsClientHttpRequestInterceptor$1."<init>":(Lorg/springframework/boot/actuate/metrics/web/client/MetricsClientHttpRequestInterceptor;Lorg/springframework/web/util/UriTemplateHandler;)V
       9: areturn

  private io.micrometer.core.instrument.Timer$Builder getTimeBuilder(org.springframework.http.HttpRequest, org.springframework.http.client.ClientHttpResponse);
    Code:
       0: aload_0
       1: getfield      #5                  // Field metricName:Ljava/lang/String;
       4: invokestatic  #15                 // InterfaceMethod io/micrometer/core/instrument/Timer.builder:(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
       7: aload_0
       8: getfield      #3                  // Field tagProvider:Lorg/springframework/boot/actuate/metrics/web/client/RestTemplateExchangeTagsProvider;
      11: getstatic     #1                  // Field urlTemplate:Ljava/lang/ThreadLocal;
      14: invokevirtual #16                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      17: checkcast     #17                 // class java/lang/String
      20: aload_1
      21: aload_2
      22: invokeinterface #18,  4           // InterfaceMethod org/springframework/boot/actuate/metrics/web/client/RestTemplateExchangeTagsProvider.getTags:(Ljava/lang/String;Lorg/springframework/http/HttpRequest;Lorg/springframework/http/client/ClientHttpResponse;)Ljava/lang/Iterable;
      27: invokevirtual #19                 // Method io/micrometer/core/instrument/Timer$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Timer$Builder;
      30: ldc           #20                 // String Timer of RestTemplate operation
      32: invokevirtual #21                 // Method io/micrometer/core/instrument/Timer$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
      35: areturn

  static java.lang.ThreadLocal access$000();
    Code:
       0: getstatic     #1                  // Field urlTemplate:Ljava/lang/ThreadLocal;
       3: areturn

  static {};
    Code:
       0: new           #22                 // class org/springframework/core/NamedThreadLocal
       3: dup
       4: ldc           #23                 // String Rest Template URL Template
       6: invokespecial #24                 // Method org/springframework/core/NamedThreadLocal."<init>":(Ljava/lang/String;)V
       9: putstatic     #1                  // Field urlTemplate:Ljava/lang/ThreadLocal;
      12: return
}
