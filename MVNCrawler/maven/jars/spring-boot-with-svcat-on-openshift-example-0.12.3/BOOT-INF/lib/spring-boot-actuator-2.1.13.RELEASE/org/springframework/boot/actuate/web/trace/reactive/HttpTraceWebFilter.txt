Compiled from "HttpTraceWebFilter.java"
public class org.springframework.boot.actuate.web.trace.reactive.HttpTraceWebFilter implements org.springframework.web.server.WebFilter,org.springframework.core.Ordered {
  private static final java.lang.Object NONE;

  private int order;

  private final org.springframework.boot.actuate.trace.http.HttpTraceRepository repository;

  private final org.springframework.boot.actuate.trace.http.HttpExchangeTracer tracer;

  private final java.util.Set<org.springframework.boot.actuate.trace.http.Include> includes;

  public org.springframework.boot.actuate.web.trace.reactive.HttpTraceWebFilter(org.springframework.boot.actuate.trace.http.HttpTraceRepository, org.springframework.boot.actuate.trace.http.HttpExchangeTracer, java.util.Set<org.springframework.boot.actuate.trace.http.Include>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #3                  // int 2147483637
       7: putfield      #4                  // Field order:I
      10: aload_0
      11: aload_1
      12: putfield      #5                  // Field repository:Lorg/springframework/boot/actuate/trace/http/HttpTraceRepository;
      15: aload_0
      16: aload_2
      17: putfield      #6                  // Field tracer:Lorg/springframework/boot/actuate/trace/http/HttpExchangeTracer;
      20: aload_0
      21: aload_3
      22: putfield      #7                  // Field includes:Ljava/util/Set;
      25: return

  public int getOrder();
    Code:
       0: aload_0
       1: getfield      #4                  // Field order:I
       4: ireturn

  public void setOrder(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field order:I
       5: return

  public reactor.core.publisher.Mono<java.lang.Void> filter(org.springframework.web.server.ServerWebExchange, org.springframework.web.server.WebFilterChain);
    Code:
       0: aload_0
       1: getfield      #7                  // Field includes:Ljava/util/Set;
       4: getstatic     #8                  // Field org/springframework/boot/actuate/trace/http/Include.PRINCIPAL:Lorg/springframework/boot/actuate/trace/http/Include;
       7: invokeinterface #9,  2            // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      12: ifeq          35
      15: aload_1
      16: invokeinterface #10,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getPrincipal:()Lreactor/core/publisher/Mono;
      21: ldc           #11                 // class java/lang/Object
      23: invokevirtual #12                 // Method reactor/core/publisher/Mono.cast:(Ljava/lang/Class;)Lreactor/core/publisher/Mono;
      26: getstatic     #13                 // Field NONE:Ljava/lang/Object;
      29: invokevirtual #14                 // Method reactor/core/publisher/Mono.defaultIfEmpty:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      32: goto          41
      35: getstatic     #13                 // Field NONE:Ljava/lang/Object;
      38: invokestatic  #15                 // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      41: astore_3
      42: aload_0
      43: getfield      #7                  // Field includes:Ljava/util/Set;
      46: getstatic     #16                 // Field org/springframework/boot/actuate/trace/http/Include.SESSION_ID:Lorg/springframework/boot/actuate/trace/http/Include;
      49: invokeinterface #9,  2            // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      54: ifeq          66
      57: aload_1
      58: invokeinterface #17,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getSession:()Lreactor/core/publisher/Mono;
      63: goto          72
      66: getstatic     #13                 // Field NONE:Ljava/lang/Object;
      69: invokestatic  #15                 // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      72: astore        4
      74: aload_3
      75: aload         4
      77: invokestatic  #18                 // Method reactor/core/publisher/Mono.zip:(Lreactor/core/publisher/Mono;Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      80: aload_0
      81: aload_1
      82: aload_2
      83: invokedynamic #19,  0             // InvokeDynamic #0:apply:(Lorg/springframework/boot/actuate/web/trace/reactive/HttpTraceWebFilter;Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/server/WebFilterChain;)Ljava/util/function/Function;
      88: invokevirtual #20                 // Method reactor/core/publisher/Mono.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      91: areturn

  private <T> T asType(java.lang.Object, java.lang.Class<T>);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #21                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
       5: ifeq          14
       8: aload_2
       9: aload_1
      10: invokevirtual #22                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn
      14: aconst_null
      15: areturn

  private reactor.core.publisher.Mono<java.lang.Void> filter(org.springframework.web.server.ServerWebExchange, org.springframework.web.server.WebFilterChain, java.security.Principal, org.springframework.web.server.WebSession);
    Code:
       0: new           #23                 // class org/springframework/boot/actuate/web/trace/reactive/ServerWebExchangeTraceableRequest
       3: dup
       4: aload_1
       5: invokespecial #24                 // Method org/springframework/boot/actuate/web/trace/reactive/ServerWebExchangeTraceableRequest."<init>":(Lorg/springframework/web/server/ServerWebExchange;)V
       8: astore        5
      10: aload_0
      11: getfield      #6                  // Field tracer:Lorg/springframework/boot/actuate/trace/http/HttpExchangeTracer;
      14: aload         5
      16: invokevirtual #25                 // Method org/springframework/boot/actuate/trace/http/HttpExchangeTracer.receivedRequest:(Lorg/springframework/boot/actuate/trace/http/TraceableRequest;)Lorg/springframework/boot/actuate/trace/http/HttpTrace;
      19: astore        6
      21: aload_1
      22: invokeinterface #26,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getResponse:()Lorg/springframework/http/server/reactive/ServerHttpResponse;
      27: aload_0
      28: aload_1
      29: aload         6
      31: aload_3
      32: aload         4
      34: invokedynamic #27,  0             // InvokeDynamic #1:get:(Lorg/springframework/boot/actuate/web/trace/reactive/HttpTraceWebFilter;Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/boot/actuate/trace/http/HttpTrace;Ljava/security/Principal;Lorg/springframework/web/server/WebSession;)Ljava/util/function/Supplier;
      39: invokeinterface #28,  2           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpResponse.beforeCommit:(Ljava/util/function/Supplier;)V
      44: aload_2
      45: aload_1
      46: invokeinterface #29,  2           // InterfaceMethod org/springframework/web/server/WebFilterChain.filter:(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono;
      51: areturn

  private java.lang.String getStartedSessionId(org.springframework.web.server.WebSession);
    Code:
       0: aload_1
       1: ifnull        22
       4: aload_1
       5: invokeinterface #30,  1           // InterfaceMethod org/springframework/web/server/WebSession.isStarted:()Z
      10: ifeq          22
      13: aload_1
      14: invokeinterface #31,  1           // InterfaceMethod org/springframework/web/server/WebSession.getId:()Ljava/lang/String;
      19: goto          23
      22: aconst_null
      23: areturn

  private reactor.core.publisher.Mono lambda$filter$3(org.springframework.web.server.ServerWebExchange, org.springframework.boot.actuate.trace.http.HttpTrace, java.security.Principal, org.springframework.web.server.WebSession);
    Code:
       0: new           #32                 // class org/springframework/boot/actuate/web/trace/reactive/TraceableServerHttpResponse
       3: dup
       4: aload_1
       5: invokeinterface #26,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getResponse:()Lorg/springframework/http/server/reactive/ServerHttpResponse;
      10: invokespecial #33                 // Method org/springframework/boot/actuate/web/trace/reactive/TraceableServerHttpResponse."<init>":(Lorg/springframework/http/server/reactive/ServerHttpResponse;)V
      13: astore        5
      15: aload_0
      16: getfield      #6                  // Field tracer:Lorg/springframework/boot/actuate/trace/http/HttpExchangeTracer;
      19: aload_2
      20: aload         5
      22: aload_3
      23: invokedynamic #34,  0             // InvokeDynamic #2:get:(Ljava/security/Principal;)Ljava/util/function/Supplier;
      28: aload_0
      29: aload         4
      31: invokedynamic #35,  0             // InvokeDynamic #3:get:(Lorg/springframework/boot/actuate/web/trace/reactive/HttpTraceWebFilter;Lorg/springframework/web/server/WebSession;)Ljava/util/function/Supplier;
      36: invokevirtual #36                 // Method org/springframework/boot/actuate/trace/http/HttpExchangeTracer.sendingResponse:(Lorg/springframework/boot/actuate/trace/http/HttpTrace;Lorg/springframework/boot/actuate/trace/http/TraceableResponse;Ljava/util/function/Supplier;Ljava/util/function/Supplier;)V
      39: aload_0
      40: getfield      #5                  // Field repository:Lorg/springframework/boot/actuate/trace/http/HttpTraceRepository;
      43: aload_2
      44: invokeinterface #37,  2           // InterfaceMethod org/springframework/boot/actuate/trace/http/HttpTraceRepository.add:(Lorg/springframework/boot/actuate/trace/http/HttpTrace;)V
      49: invokestatic  #38                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      52: areturn

  private java.lang.String lambda$null$2(org.springframework.web.server.WebSession);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #39                 // Method getStartedSessionId:(Lorg/springframework/web/server/WebSession;)Ljava/lang/String;
       5: areturn

  private static java.security.Principal lambda$null$1(java.security.Principal);
    Code:
       0: aload_0
       1: areturn

  private reactor.core.publisher.Mono lambda$filter$0(org.springframework.web.server.ServerWebExchange, org.springframework.web.server.WebFilterChain, reactor.util.function.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: aload_3
       5: invokevirtual #40                 // Method reactor/util/function/Tuple2.getT1:()Ljava/lang/Object;
       8: ldc           #41                 // class java/security/Principal
      10: invokespecial #42                 // Method asType:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      13: checkcast     #41                 // class java/security/Principal
      16: aload_0
      17: aload_3
      18: invokevirtual #43                 // Method reactor/util/function/Tuple2.getT2:()Ljava/lang/Object;
      21: ldc           #44                 // class org/springframework/web/server/WebSession
      23: invokespecial #42                 // Method asType:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      26: checkcast     #44                 // class org/springframework/web/server/WebSession
      29: invokespecial #45                 // Method filter:(Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/web/server/WebFilterChain;Ljava/security/Principal;Lorg/springframework/web/server/WebSession;)Lreactor/core/publisher/Mono;
      32: areturn

  static {};
    Code:
       0: new           #11                 // class java/lang/Object
       3: dup
       4: invokespecial #1                  // Method java/lang/Object."<init>":()V
       7: putstatic     #13                 // Field NONE:Ljava/lang/Object;
      10: return
}
