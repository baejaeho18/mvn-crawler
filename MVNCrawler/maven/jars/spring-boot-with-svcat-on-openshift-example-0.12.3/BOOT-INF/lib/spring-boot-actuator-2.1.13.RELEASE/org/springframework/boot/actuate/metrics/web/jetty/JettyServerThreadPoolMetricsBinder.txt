Compiled from "JettyServerThreadPoolMetricsBinder.java"
public class org.springframework.boot.actuate.metrics.web.jetty.JettyServerThreadPoolMetricsBinder implements org.springframework.context.ApplicationListener<org.springframework.boot.context.event.ApplicationStartedEvent> {
  private final io.micrometer.core.instrument.MeterRegistry meterRegistry;

  private final java.lang.Iterable<io.micrometer.core.instrument.Tag> tags;

  public org.springframework.boot.actuate.metrics.web.jetty.JettyServerThreadPoolMetricsBinder(io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method java/util/Collections.emptyList:()Ljava/util/List;
       5: invokespecial #2                  // Method "<init>":(Lio/micrometer/core/instrument/MeterRegistry;Ljava/lang/Iterable;)V
       8: return

  public org.springframework.boot.actuate.metrics.web.jetty.JettyServerThreadPoolMetricsBinder(io.micrometer.core.instrument.MeterRegistry, java.lang.Iterable<io.micrometer.core.instrument.Tag>);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field meterRegistry:Lio/micrometer/core/instrument/MeterRegistry;
       9: aload_0
      10: aload_2
      11: putfield      #5                  // Field tags:Ljava/lang/Iterable;
      14: return

  public void onApplicationEvent(org.springframework.boot.context.event.ApplicationStartedEvent);
    Code:
       0: aload_1
       1: invokevirtual #6                  // Method org/springframework/boot/context/event/ApplicationStartedEvent.getApplicationContext:()Lorg/springframework/context/ConfigurableApplicationContext;
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokespecial #7                  // Method findThreadPool:(Lorg/springframework/context/ApplicationContext;)Lorg/eclipse/jetty/util/thread/ThreadPool;
      10: astore_3
      11: aload_3
      12: ifnull        34
      15: new           #8                  // class io/micrometer/core/instrument/binder/jetty/JettyServerThreadPoolMetrics
      18: dup
      19: aload_3
      20: aload_0
      21: getfield      #5                  // Field tags:Ljava/lang/Iterable;
      24: invokespecial #9                  // Method io/micrometer/core/instrument/binder/jetty/JettyServerThreadPoolMetrics."<init>":(Lorg/eclipse/jetty/util/thread/ThreadPool;Ljava/lang/Iterable;)V
      27: aload_0
      28: getfield      #4                  // Field meterRegistry:Lio/micrometer/core/instrument/MeterRegistry;
      31: invokevirtual #10                 // Method io/micrometer/core/instrument/binder/jetty/JettyServerThreadPoolMetrics.bindTo:(Lio/micrometer/core/instrument/MeterRegistry;)V
      34: return

  private org.eclipse.jetty.util.thread.ThreadPool findThreadPool(org.springframework.context.ApplicationContext);
    Code:
       0: aload_1
       1: instanceof    #11                 // class org/springframework/boot/web/context/WebServerApplicationContext
       4: ifeq          35
       7: aload_1
       8: checkcast     #11                 // class org/springframework/boot/web/context/WebServerApplicationContext
      11: invokeinterface #12,  1           // InterfaceMethod org/springframework/boot/web/context/WebServerApplicationContext.getWebServer:()Lorg/springframework/boot/web/server/WebServer;
      16: astore_2
      17: aload_2
      18: instanceof    #13                 // class org/springframework/boot/web/embedded/jetty/JettyWebServer
      21: ifeq          35
      24: aload_2
      25: checkcast     #13                 // class org/springframework/boot/web/embedded/jetty/JettyWebServer
      28: invokevirtual #14                 // Method org/springframework/boot/web/embedded/jetty/JettyWebServer.getServer:()Lorg/eclipse/jetty/server/Server;
      31: invokevirtual #15                 // Method org/eclipse/jetty/server/Server.getThreadPool:()Lorg/eclipse/jetty/util/thread/ThreadPool;
      34: areturn
      35: aconst_null
      36: areturn

  public void onApplicationEvent(org.springframework.context.ApplicationEvent);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #16                 // class org/springframework/boot/context/event/ApplicationStartedEvent
       5: invokevirtual #17                 // Method onApplicationEvent:(Lorg/springframework/boot/context/event/ApplicationStartedEvent;)V
       8: return
}
