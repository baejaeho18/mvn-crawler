Compiled from "LongTaskTimingHandlerInterceptor.java"
public class org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor implements org.springframework.web.servlet.HandlerInterceptor {
  private final io.micrometer.core.instrument.MeterRegistry registry;

  private final org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider tagsProvider;

  public org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor(io.micrometer.core.instrument.MeterRegistry, org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field tagsProvider:Lorg/springframework/boot/actuate/metrics/web/servlet/WebMvcTagsProvider;
      14: return

  public boolean preHandle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokestatic  #4                  // Method org/springframework/boot/actuate/metrics/web/servlet/LongTaskTimingHandlerInterceptor$LongTaskTimingContext.get:(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/boot/actuate/metrics/web/servlet/LongTaskTimingHandlerInterceptor$LongTaskTimingContext;
       4: astore        4
       6: aload         4
       8: ifnonnull     17
      11: aload_0
      12: aload_1
      13: aload_3
      14: invokespecial #5                  // Method startAndAttachTimingContext:(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/Object;)V
      17: iconst_1
      18: ireturn

  public void afterCompletion(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, java.lang.Exception) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #6,  1            // InterfaceMethod javax/servlet/http/HttpServletRequest.isAsyncStarted:()Z
       6: ifne          17
       9: aload_0
      10: aload_1
      11: invokestatic  #4                  // Method org/springframework/boot/actuate/metrics/web/servlet/LongTaskTimingHandlerInterceptor$LongTaskTimingContext.get:(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/boot/actuate/metrics/web/servlet/LongTaskTimingHandlerInterceptor$LongTaskTimingContext;
      14: invokespecial #7                  // Method stopLongTaskTimers:(Lorg/springframework/boot/actuate/metrics/web/servlet/LongTaskTimingHandlerInterceptor$LongTaskTimingContext;)V
      17: return

  private void startAndAttachTimingContext(javax.servlet.http.HttpServletRequest, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #8                  // Method getTimedAnnotations:(Ljava/lang/Object;)Ljava/util/Set;
       5: astore_3
       6: aload_0
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokespecial #9                  // Method getLongTaskTimerSamples:(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/Object;Ljava/util/Set;)Ljava/util/Collection;
      13: astore        4
      15: new           #10                 // class org/springframework/boot/actuate/metrics/web/servlet/LongTaskTimingHandlerInterceptor$LongTaskTimingContext
      18: dup
      19: aload         4
      21: invokespecial #11                 // Method org/springframework/boot/actuate/metrics/web/servlet/LongTaskTimingHandlerInterceptor$LongTaskTimingContext."<init>":(Ljava/util/Collection;)V
      24: astore        5
      26: aload         5
      28: aload_1
      29: invokevirtual #12                 // Method org/springframework/boot/actuate/metrics/web/servlet/LongTaskTimingHandlerInterceptor$LongTaskTimingContext.attachTo:(Ljavax/servlet/http/HttpServletRequest;)V
      32: return

  private java.util.Collection<io.micrometer.core.instrument.LongTaskTimer$Sample> getLongTaskTimerSamples(javax.servlet.http.HttpServletRequest, java.lang.Object, java.util.Set<io.micrometer.core.annotation.Timed>);
    Code:
       0: new           #13                 // class java/util/ArrayList
       3: dup
       4: invokespecial #14                 // Method java/util/ArrayList."<init>":()V
       7: astore        4
       9: aload_3
      10: invokeinterface #15,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      15: invokedynamic #16,  0             // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      20: invokeinterface #17,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      25: aload_0
      26: aload_1
      27: aload_2
      28: aload         4
      30: invokedynamic #18,  0             // InvokeDynamic #1:accept:(Lorg/springframework/boot/actuate/metrics/web/servlet/LongTaskTimingHandlerInterceptor;Ljavax/servlet/http/HttpServletRequest;Ljava/lang/Object;Ljava/util/List;)Ljava/util/function/Consumer;
      35: invokeinterface #19,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      40: aload         4
      42: areturn

  private java.util.Set<io.micrometer.core.annotation.Timed> getTimedAnnotations(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #20                 // class org/springframework/web/method/HandlerMethod
       4: ifne          11
       7: invokestatic  #21                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
      10: areturn
      11: aload_0
      12: aload_1
      13: checkcast     #20                 // class org/springframework/web/method/HandlerMethod
      16: invokespecial #22                 // Method getTimedAnnotations:(Lorg/springframework/web/method/HandlerMethod;)Ljava/util/Set;
      19: areturn

  private java.util.Set<io.micrometer.core.annotation.Timed> getTimedAnnotations(org.springframework.web.method.HandlerMethod);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #23                 // Method org/springframework/web/method/HandlerMethod.getMethod:()Ljava/lang/reflect/Method;
       5: invokespecial #24                 // Method findTimedAnnotations:(Ljava/lang/reflect/AnnotatedElement;)Ljava/util/Set;
       8: astore_2
       9: aload_2
      10: invokeinterface #25,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      15: ifeq          27
      18: aload_0
      19: aload_1
      20: invokevirtual #26                 // Method org/springframework/web/method/HandlerMethod.getBeanType:()Ljava/lang/Class;
      23: invokespecial #24                 // Method findTimedAnnotations:(Ljava/lang/reflect/AnnotatedElement;)Ljava/util/Set;
      26: areturn
      27: aload_2
      28: areturn

  private java.util.Set<io.micrometer.core.annotation.Timed> findTimedAnnotations(java.lang.reflect.AnnotatedElement);
    Code:
       0: aload_1
       1: ldc           #27                 // class io/micrometer/core/annotation/Timed
       3: invokestatic  #28                 // Method org/springframework/core/annotation/AnnotationUtils.getDeclaredRepeatableAnnotations:(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Ljava/util/Set;
       6: areturn

  private void stopLongTaskTimers(org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor$LongTaskTimingContext);
    Code:
       0: aload_1
       1: invokevirtual #29                 // Method org/springframework/boot/actuate/metrics/web/servlet/LongTaskTimingHandlerInterceptor$LongTaskTimingContext.getLongTaskTimerSamples:()Ljava/util/Collection;
       4: invokeinterface #30,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          37
      19: aload_2
      20: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #33                 // class io/micrometer/core/instrument/LongTaskTimer$Sample
      28: astore_3
      29: aload_3
      30: invokevirtual #34                 // Method io/micrometer/core/instrument/LongTaskTimer$Sample.stop:()J
      33: pop2
      34: goto          10
      37: return

  private void lambda$getLongTaskTimerSamples$0(javax.servlet.http.HttpServletRequest, java.lang.Object, java.util.List, io.micrometer.core.annotation.Timed);
    Code:
       0: aload_0
       1: getfield      #3                  // Field tagsProvider:Lorg/springframework/boot/actuate/metrics/web/servlet/WebMvcTagsProvider;
       4: aload_1
       5: aload_2
       6: invokeinterface #35,  3           // InterfaceMethod org/springframework/boot/actuate/metrics/web/servlet/WebMvcTagsProvider.getLongRequestTags:(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/Object;)Ljava/lang/Iterable;
      11: astore        5
      13: aload         4
      15: invokestatic  #36                 // InterfaceMethod io/micrometer/core/instrument/LongTaskTimer.builder:(Lio/micrometer/core/annotation/Timed;)Lio/micrometer/core/instrument/LongTaskTimer$Builder;
      18: aload         5
      20: invokevirtual #37                 // Method io/micrometer/core/instrument/LongTaskTimer$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/LongTaskTimer$Builder;
      23: astore        6
      25: aload         6
      27: aload_0
      28: getfield      #2                  // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
      31: invokevirtual #38                 // Method io/micrometer/core/instrument/LongTaskTimer$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/LongTaskTimer;
      34: astore        7
      36: aload_3
      37: aload         7
      39: invokeinterface #39,  1           // InterfaceMethod io/micrometer/core/instrument/LongTaskTimer.start:()Lio/micrometer/core/instrument/LongTaskTimer$Sample;
      44: invokeinterface #40,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      49: pop
      50: return
}
