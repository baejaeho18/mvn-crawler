Compiled from "JmxEndpointExporter.java"
public class org.springframework.boot.actuate.endpoint.jmx.JmxEndpointExporter implements org.springframework.beans.factory.InitializingBean,org.springframework.beans.factory.DisposableBean,org.springframework.beans.factory.BeanClassLoaderAware {
  private static final org.apache.commons.logging.Log logger;

  private java.lang.ClassLoader classLoader;

  private final javax.management.MBeanServer mBeanServer;

  private final org.springframework.boot.actuate.endpoint.jmx.EndpointObjectNameFactory objectNameFactory;

  private final org.springframework.boot.actuate.endpoint.jmx.JmxOperationResponseMapper responseMapper;

  private final java.util.Collection<org.springframework.boot.actuate.endpoint.jmx.ExposableJmxEndpoint> endpoints;

  private java.util.Collection<javax.management.ObjectName> registered;

  public org.springframework.boot.actuate.endpoint.jmx.JmxEndpointExporter(javax.management.MBeanServer, org.springframework.boot.actuate.endpoint.jmx.EndpointObjectNameFactory, org.springframework.boot.actuate.endpoint.jmx.JmxOperationResponseMapper, java.util.Collection<? extends org.springframework.boot.actuate.endpoint.jmx.ExposableJmxEndpoint>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String MBeanServer must not be null
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_2
      11: ldc           #4                  // String ObjectNameFactory must not be null
      13: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_3
      17: ldc           #5                  // String ResponseMapper must not be null
      19: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      22: aload         4
      24: ldc           #6                  // String Endpoints must not be null
      26: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      29: aload_0
      30: aload_1
      31: putfield      #7                  // Field mBeanServer:Ljavax/management/MBeanServer;
      34: aload_0
      35: aload_2
      36: putfield      #8                  // Field objectNameFactory:Lorg/springframework/boot/actuate/endpoint/jmx/EndpointObjectNameFactory;
      39: aload_0
      40: aload_3
      41: putfield      #9                  // Field responseMapper:Lorg/springframework/boot/actuate/endpoint/jmx/JmxOperationResponseMapper;
      44: aload_0
      45: aload         4
      47: invokestatic  #10                 // Method java/util/Collections.unmodifiableCollection:(Ljava/util/Collection;)Ljava/util/Collection;
      50: putfield      #11                 // Field endpoints:Ljava/util/Collection;
      53: return

  public void setBeanClassLoader(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field classLoader:Ljava/lang/ClassLoader;
       5: return

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #13                 // Method register:()Ljava/util/Collection;
       5: putfield      #14                 // Field registered:Ljava/util/Collection;
       8: return

  public void destroy() throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #14                 // Field registered:Ljava/util/Collection;
       5: invokespecial #15                 // Method unregister:(Ljava/util/Collection;)V
       8: return

  private java.util.Collection<javax.management.ObjectName> register();
    Code:
       0: aload_0
       1: getfield      #11                 // Field endpoints:Ljava/util/Collection;
       4: invokeinterface #16,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
       9: aload_0
      10: invokedynamic #17,  0             // InvokeDynamic #0:apply:(Lorg/springframework/boot/actuate/endpoint/jmx/JmxEndpointExporter;)Ljava/util/function/Function;
      15: invokeinterface #18,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      20: invokestatic  #19                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      23: invokeinterface #20,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      28: checkcast     #21                 // class java/util/Collection
      31: areturn

  private javax.management.ObjectName register(org.springframework.boot.actuate.endpoint.jmx.ExposableJmxEndpoint);
    Code:
       0: aload_1
       1: ldc           #22                 // String Endpoint must not be null
       3: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #8                  // Field objectNameFactory:Lorg/springframework/boot/actuate/endpoint/jmx/EndpointObjectNameFactory;
      10: aload_1
      11: invokeinterface #23,  2           // InterfaceMethod org/springframework/boot/actuate/endpoint/jmx/EndpointObjectNameFactory.getObjectName:(Lorg/springframework/boot/actuate/endpoint/jmx/ExposableJmxEndpoint;)Ljavax/management/ObjectName;
      16: astore_2
      17: new           #24                 // class org/springframework/boot/actuate/endpoint/jmx/EndpointMBean
      20: dup
      21: aload_0
      22: getfield      #9                  // Field responseMapper:Lorg/springframework/boot/actuate/endpoint/jmx/JmxOperationResponseMapper;
      25: aload_0
      26: getfield      #12                 // Field classLoader:Ljava/lang/ClassLoader;
      29: aload_1
      30: invokespecial #25                 // Method org/springframework/boot/actuate/endpoint/jmx/EndpointMBean."<init>":(Lorg/springframework/boot/actuate/endpoint/jmx/JmxOperationResponseMapper;Ljava/lang/ClassLoader;Lorg/springframework/boot/actuate/endpoint/jmx/ExposableJmxEndpoint;)V
      33: astore_3
      34: aload_0
      35: getfield      #7                  // Field mBeanServer:Ljavax/management/MBeanServer;
      38: aload_3
      39: aload_2
      40: invokeinterface #26,  3           // InterfaceMethod javax/management/MBeanServer.registerMBean:(Ljava/lang/Object;Ljavax/management/ObjectName;)Ljavax/management/ObjectInstance;
      45: pop
      46: aload_2
      47: areturn
      48: astore_2
      49: new           #28                 // class java/lang/IllegalStateException
      52: dup
      53: new           #29                 // class java/lang/StringBuilder
      56: dup
      57: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      60: ldc           #31                 // String Invalid ObjectName for
      62: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_0
      66: aload_1
      67: invokespecial #33                 // Method getEndpointDescription:(Lorg/springframework/boot/actuate/endpoint/jmx/ExposableJmxEndpoint;)Ljava/lang/String;
      70: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: aload_2
      77: invokespecial #35                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      80: athrow
      81: astore_2
      82: new           #37                 // class org/springframework/jmx/export/MBeanExportException
      85: dup
      86: new           #29                 // class java/lang/StringBuilder
      89: dup
      90: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      93: ldc           #38                 // String Failed to register MBean for
      95: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_0
      99: aload_1
     100: invokespecial #33                 // Method getEndpointDescription:(Lorg/springframework/boot/actuate/endpoint/jmx/ExposableJmxEndpoint;)Ljava/lang/String;
     103: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     109: aload_2
     110: invokespecial #39                 // Method org/springframework/jmx/export/MBeanExportException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     113: athrow
    Exception table:
       from    to  target type
           6    47    48   Class javax/management/MalformedObjectNameException
           6    47    81   Class java/lang/Exception

  private void unregister(java.util.Collection<javax.management.ObjectName>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #40,  0             // InvokeDynamic #1:accept:(Lorg/springframework/boot/actuate/endpoint/jmx/JmxEndpointExporter;)Ljava/util/function/Consumer;
       7: invokeinterface #41,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      12: return

  private void unregister(javax.management.ObjectName);
    Code:
       0: getstatic     #42                 // Field logger:Lorg/apache/commons/logging/Log;
       3: invokeinterface #43,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       8: ifeq          43
      11: getstatic     #42                 // Field logger:Lorg/apache/commons/logging/Log;
      14: new           #29                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #44                 // String Unregister endpoint with ObjectName \'
      23: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_1
      27: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      30: ldc           #46                 // String \' from the JMX domain
      32: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokeinterface #47,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      43: aload_0
      44: getfield      #7                  // Field mBeanServer:Ljavax/management/MBeanServer;
      47: aload_1
      48: invokeinterface #48,  2           // InterfaceMethod javax/management/MBeanServer.unregisterMBean:(Ljavax/management/ObjectName;)V
      53: goto          94
      56: astore_2
      57: goto          94
      60: astore_2
      61: new           #51                 // class org/springframework/jmx/JmxException
      64: dup
      65: new           #29                 // class java/lang/StringBuilder
      68: dup
      69: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      72: ldc           #52                 // String Failed to unregister MBean with ObjectName \'
      74: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_1
      78: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      81: ldc           #53                 // String \'
      83: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: aload_2
      90: invokespecial #54                 // Method org/springframework/jmx/JmxException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      93: athrow
      94: return
    Exception table:
       from    to  target type
           0    53    56   Class javax/management/InstanceNotFoundException
           0    53    60   Class javax/management/MBeanRegistrationException

  private java.lang.String getEndpointDescription(org.springframework.boot.actuate.endpoint.jmx.ExposableJmxEndpoint);
    Code:
       0: new           #29                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #55                 // String endpoint \'
       9: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_1
      13: invokeinterface #56,  1           // InterfaceMethod org/springframework/boot/actuate/endpoint/jmx/ExposableJmxEndpoint.getEndpointId:()Lorg/springframework/boot/actuate/endpoint/EndpointId;
      18: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      21: ldc           #53                 // String \'
      23: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn

  static {};
    Code:
       0: ldc           #57                 // class org/springframework/boot/actuate/endpoint/jmx/JmxEndpointExporter
       2: invokestatic  #58                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #42                 // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
