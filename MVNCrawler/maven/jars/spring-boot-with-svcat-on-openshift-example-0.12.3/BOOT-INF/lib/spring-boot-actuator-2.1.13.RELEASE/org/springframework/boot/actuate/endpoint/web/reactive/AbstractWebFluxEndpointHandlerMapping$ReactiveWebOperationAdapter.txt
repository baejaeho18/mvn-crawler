Compiled from "AbstractWebFluxEndpointHandlerMapping.java"
final class org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReactiveWebOperationAdapter implements org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReactiveWebOperation {
  private final org.springframework.boot.actuate.endpoint.invoke.OperationInvoker invoker;

  private final java.lang.String operationId;

  private final java.util.function.Supplier<reactor.core.publisher.Mono<? extends org.springframework.boot.actuate.endpoint.SecurityContext>> securityContextSupplier;

  private org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReactiveWebOperationAdapter(org.springframework.boot.actuate.endpoint.web.WebOperation);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: aload_1
       7: invokespecial #3                  // Method getInvoker:(Lorg/springframework/boot/actuate/endpoint/web/WebOperation;)Lorg/springframework/boot/actuate/endpoint/invoke/OperationInvoker;
      10: putfield      #4                  // Field invoker:Lorg/springframework/boot/actuate/endpoint/invoke/OperationInvoker;
      13: aload_0
      14: aload_1
      15: invokeinterface #5,  1            // InterfaceMethod org/springframework/boot/actuate/endpoint/web/WebOperation.getId:()Ljava/lang/String;
      20: putfield      #6                  // Field operationId:Ljava/lang/String;
      23: aload_0
      24: aload_0
      25: invokespecial #7                  // Method getSecurityContextSupplier:()Ljava/util/function/Supplier;
      28: putfield      #8                  // Field securityContextSupplier:Ljava/util/function/Supplier;
      31: return

  private org.springframework.boot.actuate.endpoint.invoke.OperationInvoker getInvoker(org.springframework.boot.actuate.endpoint.web.WebOperation);
    Code:
       0: aload_1
       1: dup
       2: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: pop
       6: invokedynamic #10,  0             // InvokeDynamic #0:invoke:(Lorg/springframework/boot/actuate/endpoint/web/WebOperation;)Lorg/springframework/boot/actuate/endpoint/invoke/OperationInvoker;
      11: astore_2
      12: aload_1
      13: invokeinterface #11,  1           // InterfaceMethod org/springframework/boot/actuate/endpoint/web/WebOperation.isBlocking:()Z
      18: ifeq          30
      21: new           #12                 // class org/springframework/boot/actuate/endpoint/web/reactive/AbstractWebFluxEndpointHandlerMapping$ElasticSchedulerInvoker
      24: dup
      25: aload_2
      26: invokespecial #13                 // Method org/springframework/boot/actuate/endpoint/web/reactive/AbstractWebFluxEndpointHandlerMapping$ElasticSchedulerInvoker."<init>":(Lorg/springframework/boot/actuate/endpoint/invoke/OperationInvoker;)V
      29: astore_2
      30: aload_2
      31: areturn

  private java.util.function.Supplier<reactor.core.publisher.Mono<? extends org.springframework.boot.actuate.endpoint.SecurityContext>> getSecurityContextSupplier();
    Code:
       0: ldc           #14                 // String org.springframework.security.core.context.ReactiveSecurityContextHolder
       2: aload_0
       3: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       6: invokevirtual #15                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       9: invokestatic  #16                 // Method org/springframework/util/ClassUtils.isPresent:(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
      12: ifeq          22
      15: aload_0
      16: invokedynamic #17,  0             // InvokeDynamic #1:get:(Lorg/springframework/boot/actuate/endpoint/web/reactive/AbstractWebFluxEndpointHandlerMapping$ReactiveWebOperationAdapter;)Ljava/util/function/Supplier;
      21: areturn
      22: aload_0
      23: invokedynamic #18,  0             // InvokeDynamic #2:get:(Lorg/springframework/boot/actuate/endpoint/web/reactive/AbstractWebFluxEndpointHandlerMapping$ReactiveWebOperationAdapter;)Ljava/util/function/Supplier;
      28: areturn

  public reactor.core.publisher.Mono<? extends org.springframework.boot.actuate.endpoint.SecurityContext> springSecurityContext();
    Code:
       0: invokestatic  #19                 // Method org/springframework/security/core/context/ReactiveSecurityContextHolder.getContext:()Lreactor/core/publisher/Mono;
       3: invokedynamic #20,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
       8: invokevirtual #21                 // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      11: new           #22                 // class org/springframework/boot/actuate/endpoint/web/reactive/AbstractWebFluxEndpointHandlerMapping$ReactiveSecurityContext
      14: dup
      15: aconst_null
      16: invokespecial #23                 // Method org/springframework/boot/actuate/endpoint/web/reactive/AbstractWebFluxEndpointHandlerMapping$ReactiveSecurityContext."<init>":(Lorg/springframework/security/core/Authentication;)V
      19: invokestatic  #24                 // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      22: invokevirtual #25                 // Method reactor/core/publisher/Mono.switchIfEmpty:(Lreactor/core/publisher/Mono;)Lreactor/core/publisher/Mono;
      25: areturn

  public reactor.core.publisher.Mono<org.springframework.boot.actuate.endpoint.SecurityContext> emptySecurityContext();
    Code:
       0: getstatic     #26                 // Field org/springframework/boot/actuate/endpoint/SecurityContext.NONE:Lorg/springframework/boot/actuate/endpoint/SecurityContext;
       3: invokestatic  #24                 // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
       6: areturn

  public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Object>> handle(org.springframework.web.server.ServerWebExchange, java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #27                 // Method getArguments:(Lorg/springframework/web/server/ServerWebExchange;Ljava/util/Map;)Ljava/util/Map;
       6: astore_3
       7: aload_0
       8: getfield      #8                  // Field securityContextSupplier:Ljava/util/function/Supplier;
      11: invokeinterface #28,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      16: checkcast     #29                 // class reactor/core/publisher/Mono
      19: aload_3
      20: invokedynamic #30,  0             // InvokeDynamic #4:apply:(Ljava/util/Map;)Ljava/util/function/Function;
      25: invokevirtual #21                 // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      28: aload_0
      29: aload_1
      30: invokedynamic #31,  0             // InvokeDynamic #5:apply:(Lorg/springframework/boot/actuate/endpoint/web/reactive/AbstractWebFluxEndpointHandlerMapping$ReactiveWebOperationAdapter;Lorg/springframework/web/server/ServerWebExchange;)Ljava/util/function/Function;
      35: invokevirtual #32                 // Method reactor/core/publisher/Mono.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      38: areturn

  private java.util.Map<java.lang.String, java.lang.Object> getArguments(org.springframework.web.server.ServerWebExchange, java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: new           #33                 // class java/util/LinkedHashMap
       3: dup
       4: invokespecial #34                 // Method java/util/LinkedHashMap."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_0
      10: aload_1
      11: invokespecial #35                 // Method getTemplateVariables:(Lorg/springframework/web/server/ServerWebExchange;)Ljava/util/Map;
      14: invokeinterface #36,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      19: aload_2
      20: ifnull        30
      23: aload_3
      24: aload_2
      25: invokeinterface #36,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      30: aload_1
      31: invokeinterface #37,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getRequest:()Lorg/springframework/http/server/reactive/ServerHttpRequest;
      36: invokeinterface #38,  1           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest.getQueryParams:()Lorg/springframework/util/MultiValueMap;
      41: aload_3
      42: invokedynamic #39,  0             // InvokeDynamic #6:accept:(Ljava/util/Map;)Ljava/util/function/BiConsumer;
      47: invokeinterface #40,  2           // InterfaceMethod org/springframework/util/MultiValueMap.forEach:(Ljava/util/function/BiConsumer;)V
      52: aload_3
      53: areturn

  private java.util.Map<java.lang.String, java.lang.String> getTemplateVariables(org.springframework.web.server.ServerWebExchange);
    Code:
       0: aload_1
       1: getstatic     #41                 // Field org/springframework/web/reactive/HandlerMapping.URI_TEMPLATE_VARIABLES_ATTRIBUTE:Ljava/lang/String;
       4: invokeinterface #42,  2           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
       9: checkcast     #43                 // class java/util/Map
      12: areturn

  private reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Object>> handleResult(org.reactivestreams.Publisher<?>, org.springframework.http.HttpMethod);
    Code:
       0: aload_1
       1: invokestatic  #44                 // Method reactor/core/publisher/Mono.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
       4: aload_0
       5: invokedynamic #45,  0             // InvokeDynamic #7:apply:(Lorg/springframework/boot/actuate/endpoint/web/reactive/AbstractWebFluxEndpointHandlerMapping$ReactiveWebOperationAdapter;)Ljava/util/function/Function;
      10: invokevirtual #21                 // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      13: ldc           #46                 // class org/springframework/boot/actuate/endpoint/InvalidEndpointRequestException
      15: invokedynamic #47,  0             // InvokeDynamic #8:apply:()Ljava/util/function/Function;
      20: invokevirtual #48                 // Method reactor/core/publisher/Mono.onErrorMap:(Ljava/lang/Class;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      23: new           #49                 // class org/springframework/http/ResponseEntity
      26: dup
      27: aload_2
      28: getstatic     #50                 // Field org/springframework/http/HttpMethod.GET:Lorg/springframework/http/HttpMethod;
      31: if_acmpeq     40
      34: getstatic     #51                 // Field org/springframework/http/HttpStatus.NO_CONTENT:Lorg/springframework/http/HttpStatus;
      37: goto          43
      40: getstatic     #52                 // Field org/springframework/http/HttpStatus.NOT_FOUND:Lorg/springframework/http/HttpStatus;
      43: invokespecial #53                 // Method org/springframework/http/ResponseEntity."<init>":(Lorg/springframework/http/HttpStatus;)V
      46: invokevirtual #54                 // Method reactor/core/publisher/Mono.defaultIfEmpty:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      49: areturn

  private org.springframework.http.ResponseEntity<java.lang.Object> toResponseEntity(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #55                 // class org/springframework/boot/actuate/endpoint/web/WebEndpointResponse
       4: ifne          19
       7: new           #49                 // class org/springframework/http/ResponseEntity
      10: dup
      11: aload_1
      12: getstatic     #56                 // Field org/springframework/http/HttpStatus.OK:Lorg/springframework/http/HttpStatus;
      15: invokespecial #57                 // Method org/springframework/http/ResponseEntity."<init>":(Ljava/lang/Object;Lorg/springframework/http/HttpStatus;)V
      18: areturn
      19: aload_1
      20: checkcast     #55                 // class org/springframework/boot/actuate/endpoint/web/WebEndpointResponse
      23: astore_2
      24: new           #49                 // class org/springframework/http/ResponseEntity
      27: dup
      28: aload_2
      29: invokevirtual #58                 // Method org/springframework/boot/actuate/endpoint/web/WebEndpointResponse.getBody:()Ljava/lang/Object;
      32: aload_2
      33: invokevirtual #59                 // Method org/springframework/boot/actuate/endpoint/web/WebEndpointResponse.getStatus:()I
      36: invokestatic  #60                 // Method org/springframework/http/HttpStatus.valueOf:(I)Lorg/springframework/http/HttpStatus;
      39: invokespecial #57                 // Method org/springframework/http/ResponseEntity."<init>":(Ljava/lang/Object;Lorg/springframework/http/HttpStatus;)V
      42: areturn

  public java.lang.String toString();
    Code:
       0: new           #61                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #62                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #63                 // String Actuator web endpoint \'
       9: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #6                  // Field operationId:Ljava/lang/String;
      16: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #65                 // String \'
      21: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  private static java.lang.Throwable lambda$handleResult$4(org.springframework.boot.actuate.endpoint.InvalidEndpointRequestException);
    Code:
       0: new           #67                 // class org/springframework/web/server/ResponseStatusException
       3: dup
       4: getstatic     #68                 // Field org/springframework/http/HttpStatus.BAD_REQUEST:Lorg/springframework/http/HttpStatus;
       7: aload_0
       8: invokevirtual #69                 // Method org/springframework/boot/actuate/endpoint/InvalidEndpointRequestException.getReason:()Ljava/lang/String;
      11: invokespecial #70                 // Method org/springframework/web/server/ResponseStatusException."<init>":(Lorg/springframework/http/HttpStatus;Ljava/lang/String;)V
      14: areturn

  private static void lambda$getArguments$3(java.util.Map, java.lang.String, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #71,  1           // InterfaceMethod java/util/List.size:()I
       8: iconst_1
       9: if_icmpeq     16
      12: aload_2
      13: goto          23
      16: aload_2
      17: iconst_0
      18: invokeinterface #72,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      23: invokeinterface #73,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      28: pop
      29: return

  private reactor.core.publisher.Mono lambda$handle$2(org.springframework.web.server.ServerWebExchange, org.springframework.boot.actuate.endpoint.InvocationContext);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field invoker:Lorg/springframework/boot/actuate/endpoint/invoke/OperationInvoker;
       5: aload_2
       6: invokeinterface #74,  2           // InterfaceMethod org/springframework/boot/actuate/endpoint/invoke/OperationInvoker.invoke:(Lorg/springframework/boot/actuate/endpoint/InvocationContext;)Ljava/lang/Object;
      11: checkcast     #75                 // class org/reactivestreams/Publisher
      14: aload_1
      15: invokeinterface #37,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getRequest:()Lorg/springframework/http/server/reactive/ServerHttpRequest;
      20: invokeinterface #76,  1           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest.getMethod:()Lorg/springframework/http/HttpMethod;
      25: invokespecial #77                 // Method handleResult:(Lorg/reactivestreams/Publisher;Lorg/springframework/http/HttpMethod;)Lreactor/core/publisher/Mono;
      28: areturn

  private static org.springframework.boot.actuate.endpoint.InvocationContext lambda$handle$1(java.util.Map, org.springframework.boot.actuate.endpoint.SecurityContext);
    Code:
       0: new           #78                 // class org/springframework/boot/actuate/endpoint/InvocationContext
       3: dup
       4: aload_1
       5: aload_0
       6: invokespecial #79                 // Method org/springframework/boot/actuate/endpoint/InvocationContext."<init>":(Lorg/springframework/boot/actuate/endpoint/SecurityContext;Ljava/util/Map;)V
       9: areturn

  private static org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReactiveSecurityContext lambda$springSecurityContext$0(org.springframework.security.core.context.SecurityContext);
    Code:
       0: new           #22                 // class org/springframework/boot/actuate/endpoint/web/reactive/AbstractWebFluxEndpointHandlerMapping$ReactiveSecurityContext
       3: dup
       4: aload_0
       5: invokeinterface #80,  1           // InterfaceMethod org/springframework/security/core/context/SecurityContext.getAuthentication:()Lorg/springframework/security/core/Authentication;
      10: invokespecial #23                 // Method org/springframework/boot/actuate/endpoint/web/reactive/AbstractWebFluxEndpointHandlerMapping$ReactiveSecurityContext."<init>":(Lorg/springframework/security/core/Authentication;)V
      13: areturn

  org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReactiveWebOperationAdapter(org.springframework.boot.actuate.endpoint.web.WebOperation, org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/springframework/boot/actuate/endpoint/web/WebOperation;)V
       5: return
}
