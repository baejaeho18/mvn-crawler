Compiled from "MongoReactiveHealthIndicator.java"
public class org.springframework.boot.actuate.mongo.MongoReactiveHealthIndicator extends org.springframework.boot.actuate.health.AbstractReactiveHealthIndicator {
  private final org.springframework.data.mongodb.core.ReactiveMongoTemplate reactiveMongoTemplate;

  public org.springframework.boot.actuate.mongo.MongoReactiveHealthIndicator(org.springframework.data.mongodb.core.ReactiveMongoTemplate);
    Code:
       0: aload_0
       1: ldc           #1                  // String Mongo health check failed
       3: invokespecial #2                  // Method org/springframework/boot/actuate/health/AbstractReactiveHealthIndicator."<init>":(Ljava/lang/String;)V
       6: aload_1
       7: ldc           #3                  // String ReactiveMongoTemplate must not be null
       9: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: aload_1
      14: putfield      #5                  // Field reactiveMongoTemplate:Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate;
      17: return

  protected reactor.core.publisher.Mono<org.springframework.boot.actuate.health.Health> doHealthCheck(org.springframework.boot.actuate.health.Health$Builder);
    Code:
       0: aload_0
       1: getfield      #5                  // Field reactiveMongoTemplate:Lorg/springframework/data/mongodb/core/ReactiveMongoTemplate;
       4: ldc           #6                  // String { buildInfo: 1 }
       6: invokevirtual #7                  // Method org/springframework/data/mongodb/core/ReactiveMongoTemplate.executeCommand:(Ljava/lang/String;)Lreactor/core/publisher/Mono;
       9: astore_2
      10: aload_2
      11: aload_0
      12: aload_1
      13: invokedynamic #8,  0              // InvokeDynamic #0:apply:(Lorg/springframework/boot/actuate/mongo/MongoReactiveHealthIndicator;Lorg/springframework/boot/actuate/health/Health$Builder;)Ljava/util/function/Function;
      18: invokevirtual #9                  // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      21: areturn

  private org.springframework.boot.actuate.health.Health up(org.springframework.boot.actuate.health.Health$Builder, org.bson.Document);
    Code:
       0: aload_1
       1: invokevirtual #10                 // Method org/springframework/boot/actuate/health/Health$Builder.up:()Lorg/springframework/boot/actuate/health/Health$Builder;
       4: ldc           #11                 // String version
       6: aload_2
       7: ldc           #11                 // String version
       9: invokevirtual #12                 // Method org/bson/Document.getString:(Ljava/lang/Object;)Ljava/lang/String;
      12: invokevirtual #13                 // Method org/springframework/boot/actuate/health/Health$Builder.withDetail:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/boot/actuate/health/Health$Builder;
      15: invokevirtual #14                 // Method org/springframework/boot/actuate/health/Health$Builder.build:()Lorg/springframework/boot/actuate/health/Health;
      18: areturn

  private org.springframework.boot.actuate.health.Health lambda$doHealthCheck$0(org.springframework.boot.actuate.health.Health$Builder, org.bson.Document);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #15                 // Method up:(Lorg/springframework/boot/actuate/health/Health$Builder;Lorg/bson/Document;)Lorg/springframework/boot/actuate/health/Health;
       6: areturn
}
