Compiled from "RedisReactiveHealthIndicator.java"
public class org.springframework.boot.actuate.redis.RedisReactiveHealthIndicator extends org.springframework.boot.actuate.health.AbstractReactiveHealthIndicator {
  private final org.springframework.data.redis.connection.ReactiveRedisConnectionFactory connectionFactory;

  public org.springframework.boot.actuate.redis.RedisReactiveHealthIndicator(org.springframework.data.redis.connection.ReactiveRedisConnectionFactory);
    Code:
       0: aload_0
       1: ldc           #1                  // String Redis health check failed
       3: invokespecial #2                  // Method org/springframework/boot/actuate/health/AbstractReactiveHealthIndicator."<init>":(Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #3                  // Field connectionFactory:Lorg/springframework/data/redis/connection/ReactiveRedisConnectionFactory;
      11: return

  protected reactor.core.publisher.Mono<org.springframework.boot.actuate.health.Health> doHealthCheck(org.springframework.boot.actuate.health.Health$Builder);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method getConnection:()Lreactor/core/publisher/Mono;
       4: aload_0
       5: aload_1
       6: invokedynamic #5,  0              // InvokeDynamic #0:apply:(Lorg/springframework/boot/actuate/redis/RedisReactiveHealthIndicator;Lorg/springframework/boot/actuate/health/Health$Builder;)Ljava/util/function/Function;
      11: invokevirtual #6                  // Method reactor/core/publisher/Mono.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      14: areturn

  private reactor.core.publisher.Mono<org.springframework.boot.actuate.health.Health> doHealthCheck(org.springframework.boot.actuate.health.Health$Builder, org.springframework.data.redis.connection.ReactiveRedisConnection);
    Code:
       0: aload_2
       1: invokeinterface #7,  1            // InterfaceMethod org/springframework/data/redis/connection/ReactiveRedisConnection.serverCommands:()Lorg/springframework/data/redis/connection/ReactiveServerCommands;
       6: invokeinterface #8,  1            // InterfaceMethod org/springframework/data/redis/connection/ReactiveServerCommands.info:()Lreactor/core/publisher/Mono;
      11: aload_0
      12: aload_1
      13: invokedynamic #9,  0              // InvokeDynamic #1:apply:(Lorg/springframework/boot/actuate/redis/RedisReactiveHealthIndicator;Lorg/springframework/boot/actuate/health/Health$Builder;)Ljava/util/function/Function;
      18: invokevirtual #10                 // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      21: aload_0
      22: aload_1
      23: invokedynamic #11,  0             // InvokeDynamic #2:apply:(Lorg/springframework/boot/actuate/redis/RedisReactiveHealthIndicator;Lorg/springframework/boot/actuate/health/Health$Builder;)Ljava/util/function/Function;
      28: invokevirtual #12                 // Method reactor/core/publisher/Mono.onErrorResume:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      31: aload_2
      32: invokedynamic #13,  0             // InvokeDynamic #3:apply:(Lorg/springframework/data/redis/connection/ReactiveRedisConnection;)Ljava/util/function/Function;
      37: invokevirtual #6                  // Method reactor/core/publisher/Mono.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      40: areturn

  private reactor.core.publisher.Mono<org.springframework.data.redis.connection.ReactiveRedisConnection> getConnection();
    Code:
       0: aload_0
       1: getfield      #3                  // Field connectionFactory:Lorg/springframework/data/redis/connection/ReactiveRedisConnectionFactory;
       4: dup
       5: invokevirtual #14                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: pop
       9: invokedynamic #15,  0             // InvokeDynamic #4:get:(Lorg/springframework/data/redis/connection/ReactiveRedisConnectionFactory;)Ljava/util/function/Supplier;
      14: invokestatic  #16                 // Method reactor/core/publisher/Mono.fromSupplier:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      17: invokestatic  #17                 // Method reactor/core/scheduler/Schedulers.parallel:()Lreactor/core/scheduler/Scheduler;
      20: invokevirtual #18                 // Method reactor/core/publisher/Mono.subscribeOn:(Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Mono;
      23: areturn

  private org.springframework.boot.actuate.health.Health up(org.springframework.boot.actuate.health.Health$Builder, java.util.Properties);
    Code:
       0: aload_1
       1: invokevirtual #19                 // Method org/springframework/boot/actuate/health/Health$Builder.up:()Lorg/springframework/boot/actuate/health/Health$Builder;
       4: ldc           #21                 // String version
       6: aload_2
       7: ldc           #22                 // String redis_version
       9: invokevirtual #23                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      12: invokevirtual #24                 // Method org/springframework/boot/actuate/health/Health$Builder.withDetail:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/boot/actuate/health/Health$Builder;
      15: invokevirtual #25                 // Method org/springframework/boot/actuate/health/Health$Builder.build:()Lorg/springframework/boot/actuate/health/Health;
      18: areturn

  private org.springframework.boot.actuate.health.Health down(org.springframework.boot.actuate.health.Health$Builder, java.lang.Throwable);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #26                 // Method org/springframework/boot/actuate/health/Health$Builder.down:(Ljava/lang/Throwable;)Lorg/springframework/boot/actuate/health/Health$Builder;
       5: invokevirtual #25                 // Method org/springframework/boot/actuate/health/Health$Builder.build:()Lorg/springframework/boot/actuate/health/Health;
       8: areturn

  private static reactor.core.publisher.Mono lambda$doHealthCheck$3(org.springframework.data.redis.connection.ReactiveRedisConnection, org.springframework.boot.actuate.health.Health);
    Code:
       0: aload_0
       1: invokeinterface #27,  1           // InterfaceMethod org/springframework/data/redis/connection/ReactiveRedisConnection.closeLater:()Lreactor/core/publisher/Mono;
       6: aload_1
       7: invokevirtual #28                 // Method reactor/core/publisher/Mono.thenReturn:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      10: areturn

  private reactor.core.publisher.Mono lambda$doHealthCheck$2(org.springframework.boot.actuate.health.Health$Builder, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #29                 // Method down:(Lorg/springframework/boot/actuate/health/Health$Builder;Ljava/lang/Throwable;)Lorg/springframework/boot/actuate/health/Health;
       6: invokestatic  #30                 // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
       9: areturn

  private org.springframework.boot.actuate.health.Health lambda$doHealthCheck$1(org.springframework.boot.actuate.health.Health$Builder, java.util.Properties);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #31                 // Method up:(Lorg/springframework/boot/actuate/health/Health$Builder;Ljava/util/Properties;)Lorg/springframework/boot/actuate/health/Health;
       6: areturn

  private reactor.core.publisher.Mono lambda$doHealthCheck$0(org.springframework.boot.actuate.health.Health$Builder, org.springframework.data.redis.connection.ReactiveRedisConnection);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #32                 // Method doHealthCheck:(Lorg/springframework/boot/actuate/health/Health$Builder;Lorg/springframework/data/redis/connection/ReactiveRedisConnection;)Lreactor/core/publisher/Mono;
       6: areturn
}
