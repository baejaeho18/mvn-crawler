Compiled from "WebClientExchangeTags.java"
public final class org.springframework.boot.actuate.metrics.web.reactive.client.WebClientExchangeTags {
  private static final java.lang.String URI_TEMPLATE_ATTRIBUTE;

  private static final io.micrometer.core.instrument.Tag IO_ERROR;

  private static final io.micrometer.core.instrument.Tag CLIENT_ERROR;

  private static final java.util.regex.Pattern PATTERN_BEFORE_PATH;

  private static final io.micrometer.core.instrument.Tag CLIENT_NAME_NONE;

  private org.springframework.boot.actuate.metrics.web.reactive.client.WebClientExchangeTags();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static io.micrometer.core.instrument.Tag method(org.springframework.web.reactive.function.client.ClientRequest);
    Code:
       0: ldc           #2                  // String method
       2: aload_0
       3: invokeinterface #3,  1            // InterfaceMethod org/springframework/web/reactive/function/client/ClientRequest.method:()Lorg/springframework/http/HttpMethod;
       8: invokevirtual #4                  // Method org/springframework/http/HttpMethod.name:()Ljava/lang/String;
      11: invokestatic  #5                  // InterfaceMethod io/micrometer/core/instrument/Tag.of:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tag;
      14: areturn

  public static io.micrometer.core.instrument.Tag uri(org.springframework.web.reactive.function.client.ClientRequest);
    Code:
       0: aload_0
       1: getstatic     #6                  // Field URI_TEMPLATE_ATTRIBUTE:Ljava/lang/String;
       4: invokeinterface #7,  2            // InterfaceMethod org/springframework/web/reactive/function/client/ClientRequest.attribute:(Ljava/lang/String;)Ljava/util/Optional;
       9: aload_0
      10: invokedynamic #8,  0              // InvokeDynamic #0:get:(Lorg/springframework/web/reactive/function/client/ClientRequest;)Ljava/util/function/Supplier;
      15: invokevirtual #9                  // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      18: checkcast     #10                 // class java/lang/String
      21: astore_1
      22: ldc           #11                 // String uri
      24: aload_1
      25: invokestatic  #12                 // Method extractPath:(Ljava/lang/String;)Ljava/lang/String;
      28: invokestatic  #5                  // InterfaceMethod io/micrometer/core/instrument/Tag.of:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tag;
      31: areturn

  private static java.lang.String extractPath(java.lang.String);
    Code:
       0: getstatic     #13                 // Field PATTERN_BEFORE_PATH:Ljava/util/regex/Pattern;
       3: aload_0
       4: invokevirtual #14                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       7: ldc           #15                 // String
       9: invokevirtual #16                 // Method java/util/regex/Matcher.replaceFirst:(Ljava/lang/String;)Ljava/lang/String;
      12: astore_1
      13: aload_1
      14: ldc           #17                 // String /
      16: invokevirtual #18                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      19: ifeq          26
      22: aload_1
      23: goto          45
      26: new           #19                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #17                 // String /
      35: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_1
      39: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: areturn

  public static io.micrometer.core.instrument.Tag status(org.springframework.web.reactive.function.client.ClientResponse);
    Code:
       0: ldc           #23                 // String status
       2: aload_0
       3: invokeinterface #24,  1           // InterfaceMethod org/springframework/web/reactive/function/client/ClientResponse.rawStatusCode:()I
       8: invokestatic  #25                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      11: invokestatic  #5                  // InterfaceMethod io/micrometer/core/instrument/Tag.of:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tag;
      14: areturn

  public static io.micrometer.core.instrument.Tag status(java.lang.Throwable);
    Code:
       0: aload_0
       1: instanceof    #26                 // class java/io/IOException
       4: ifeq          13
       7: getstatic     #27                 // Field IO_ERROR:Lio/micrometer/core/instrument/Tag;
      10: goto          16
      13: getstatic     #28                 // Field CLIENT_ERROR:Lio/micrometer/core/instrument/Tag;
      16: areturn

  public static io.micrometer.core.instrument.Tag clientName(org.springframework.web.reactive.function.client.ClientRequest);
    Code:
       0: aload_0
       1: invokeinterface #29,  1           // InterfaceMethod org/springframework/web/reactive/function/client/ClientRequest.url:()Ljava/net/URI;
       6: invokevirtual #30                 // Method java/net/URI.getHost:()Ljava/lang/String;
       9: astore_1
      10: aload_1
      11: ifnonnull     18
      14: getstatic     #31                 // Field CLIENT_NAME_NONE:Lio/micrometer/core/instrument/Tag;
      17: areturn
      18: ldc           #32                 // String clientName
      20: aload_1
      21: invokestatic  #5                  // InterfaceMethod io/micrometer/core/instrument/Tag.of:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tag;
      24: areturn

  private static java.lang.Object lambda$uri$0(org.springframework.web.reactive.function.client.ClientRequest);
    Code:
       0: aload_0
       1: invokeinterface #29,  1           // InterfaceMethod org/springframework/web/reactive/function/client/ClientRequest.url:()Ljava/net/URI;
       6: invokevirtual #33                 // Method java/net/URI.getPath:()Ljava/lang/String;
       9: areturn

  static {};
    Code:
       0: new           #19                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #34                 // class org/springframework/web/reactive/function/client/WebClient
       9: invokevirtual #35                 // Method java/lang/Class.getName:()Ljava/lang/String;
      12: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: ldc           #36                 // String .uriTemplate
      17: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: putstatic     #6                  // Field URI_TEMPLATE_ATTRIBUTE:Ljava/lang/String;
      26: ldc           #23                 // String status
      28: ldc           #37                 // String IO_ERROR
      30: invokestatic  #5                  // InterfaceMethod io/micrometer/core/instrument/Tag.of:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tag;
      33: putstatic     #27                 // Field IO_ERROR:Lio/micrometer/core/instrument/Tag;
      36: ldc           #23                 // String status
      38: ldc           #38                 // String CLIENT_ERROR
      40: invokestatic  #5                  // InterfaceMethod io/micrometer/core/instrument/Tag.of:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tag;
      43: putstatic     #28                 // Field CLIENT_ERROR:Lio/micrometer/core/instrument/Tag;
      46: ldc           #39                 // String ^https?://[^/]+/
      48: invokestatic  #40                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      51: putstatic     #13                 // Field PATTERN_BEFORE_PATH:Ljava/util/regex/Pattern;
      54: ldc           #32                 // String clientName
      56: ldc           #41                 // String none
      58: invokestatic  #5                  // InterfaceMethod io/micrometer/core/instrument/Tag.of:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tag;
      61: putstatic     #31                 // Field CLIENT_NAME_NONE:Lio/micrometer/core/instrument/Tag;
      64: return
}
