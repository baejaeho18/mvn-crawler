Compiled from "DefaultReactiveHealthIndicatorRegistry.java"
public class org.springframework.boot.actuate.health.DefaultReactiveHealthIndicatorRegistry implements org.springframework.boot.actuate.health.ReactiveHealthIndicatorRegistry {
  private final java.lang.Object monitor;

  private final java.util.Map<java.lang.String, org.springframework.boot.actuate.health.ReactiveHealthIndicator> healthIndicators;

  public org.springframework.boot.actuate.health.DefaultReactiveHealthIndicatorRegistry();
    Code:
       0: aload_0
       1: new           #1                  // class java/util/LinkedHashMap
       4: dup
       5: invokespecial #2                  // Method java/util/LinkedHashMap."<init>":()V
       8: invokespecial #3                  // Method "<init>":(Ljava/util/Map;)V
      11: return

  public org.springframework.boot.actuate.health.DefaultReactiveHealthIndicatorRegistry(java.util.Map<java.lang.String, org.springframework.boot.actuate.health.ReactiveHealthIndicator>);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class java/lang/Object
       8: dup
       9: invokespecial #4                  // Method java/lang/Object."<init>":()V
      12: putfield      #6                  // Field monitor:Ljava/lang/Object;
      15: aload_1
      16: ldc           #7                  // String HealthIndicators must not be null
      18: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_0
      22: new           #1                  // class java/util/LinkedHashMap
      25: dup
      26: aload_1
      27: invokespecial #9                  // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
      30: putfield      #10                 // Field healthIndicators:Ljava/util/Map;
      33: return

  public void register(java.lang.String, org.springframework.boot.actuate.health.ReactiveHealthIndicator);
    Code:
       0: aload_2
       1: ldc           #11                 // String HealthIndicator must not be null
       3: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #12                 // String Name must not be null
       9: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: getfield      #6                  // Field monitor:Ljava/lang/Object;
      16: dup
      17: astore_3
      18: monitorenter
      19: aload_0
      20: getfield      #10                 // Field healthIndicators:Ljava/util/Map;
      23: aload_1
      24: aload_2
      25: invokeinterface #13,  3           // InterfaceMethod java/util/Map.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      30: checkcast     #14                 // class org/springframework/boot/actuate/health/ReactiveHealthIndicator
      33: astore        4
      35: aload         4
      37: ifnull        72
      40: new           #15                 // class java/lang/IllegalStateException
      43: dup
      44: new           #16                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #18                 // String HealthIndicator with name \'
      53: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_1
      57: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: ldc           #20                 // String \' already registered
      62: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokespecial #22                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: aload_3
      73: monitorexit
      74: goto          84
      77: astore        5
      79: aload_3
      80: monitorexit
      81: aload         5
      83: athrow
      84: return
    Exception table:
       from    to  target type
          19    74    77   any
          77    81    77   any

  public org.springframework.boot.actuate.health.ReactiveHealthIndicator unregister(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #12                 // String Name must not be null
       3: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #6                  // Field monitor:Ljava/lang/Object;
      10: dup
      11: astore_2
      12: monitorenter
      13: aload_0
      14: getfield      #10                 // Field healthIndicators:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #23,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #14                 // class org/springframework/boot/actuate/health/ReactiveHealthIndicator
      26: aload_2
      27: monitorexit
      28: areturn
      29: astore_3
      30: aload_2
      31: monitorexit
      32: aload_3
      33: athrow
    Exception table:
       from    to  target type
          13    28    29   any
          29    32    29   any

  public org.springframework.boot.actuate.health.ReactiveHealthIndicator get(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #12                 // String Name must not be null
       3: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #6                  // Field monitor:Ljava/lang/Object;
      10: dup
      11: astore_2
      12: monitorenter
      13: aload_0
      14: getfield      #10                 // Field healthIndicators:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #24,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #14                 // class org/springframework/boot/actuate/health/ReactiveHealthIndicator
      26: aload_2
      27: monitorexit
      28: areturn
      29: astore_3
      30: aload_2
      31: monitorexit
      32: aload_3
      33: athrow
    Exception table:
       from    to  target type
          13    28    29   any
          29    32    29   any

  public java.util.Map<java.lang.String, org.springframework.boot.actuate.health.ReactiveHealthIndicator> getAll();
    Code:
       0: aload_0
       1: getfield      #6                  // Field monitor:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: new           #1                  // class java/util/LinkedHashMap
      10: dup
      11: aload_0
      12: getfield      #10                 // Field healthIndicators:Ljava/util/Map;
      15: invokespecial #9                  // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
      18: invokestatic  #25                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      21: aload_1
      22: monitorexit
      23: areturn
      24: astore_2
      25: aload_1
      26: monitorexit
      27: aload_2
      28: athrow
    Exception table:
       from    to  target type
           7    23    24   any
          24    27    24   any
}
