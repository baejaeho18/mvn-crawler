Compiled from "MetricsWebClientFilterFunction.java"
public class org.springframework.boot.actuate.metrics.web.reactive.client.MetricsWebClientFilterFunction implements org.springframework.web.reactive.function.client.ExchangeFilterFunction {
  private static final java.lang.String METRICS_WEBCLIENT_START_TIME;

  private final io.micrometer.core.instrument.MeterRegistry meterRegistry;

  private final org.springframework.boot.actuate.metrics.web.reactive.client.WebClientExchangeTagsProvider tagProvider;

  private final java.lang.String metricName;

  public org.springframework.boot.actuate.metrics.web.reactive.client.MetricsWebClientFilterFunction(io.micrometer.core.instrument.MeterRegistry, org.springframework.boot.actuate.metrics.web.reactive.client.WebClientExchangeTagsProvider, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field meterRegistry:Lio/micrometer/core/instrument/MeterRegistry;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field tagProvider:Lorg/springframework/boot/actuate/metrics/web/reactive/client/WebClientExchangeTagsProvider;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field metricName:Ljava/lang/String;
      19: return

  public reactor.core.publisher.Mono<org.springframework.web.reactive.function.client.ClientResponse> filter(org.springframework.web.reactive.function.client.ClientRequest, org.springframework.web.reactive.function.client.ExchangeFunction);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #5,  2            // InterfaceMethod org/springframework/web/reactive/function/client/ExchangeFunction.exchange:(Lorg/springframework/web/reactive/function/client/ClientRequest;)Lreactor/core/publisher/Mono;
       7: aload_0
       8: aload_1
       9: invokedynamic #6,  0              // InvokeDynamic #0:accept:(Lorg/springframework/boot/actuate/metrics/web/reactive/client/MetricsWebClientFilterFunction;Lorg/springframework/web/reactive/function/client/ClientRequest;)Ljava/util/function/Consumer;
      14: invokevirtual #7                  // Method reactor/core/publisher/Mono.doOnEach:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;
      17: invokedynamic #8,  0              // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      22: invokevirtual #9                  // Method reactor/core/publisher/Mono.subscriberContext:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      25: areturn

  private static reactor.util.context.Context lambda$filter$1(reactor.util.context.Context);
    Code:
       0: aload_0
       1: getstatic     #10                 // Field METRICS_WEBCLIENT_START_TIME:Ljava/lang/String;
       4: invokestatic  #11                 // Method java/lang/System.nanoTime:()J
       7: invokestatic  #12                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      10: invokeinterface #13,  3           // InterfaceMethod reactor/util/context/Context.put:(Ljava/lang/Object;Ljava/lang/Object;)Lreactor/util/context/Context;
      15: areturn

  private void lambda$filter$0(org.springframework.web.reactive.function.client.ClientRequest, reactor.core.publisher.Signal);
    Code:
       0: aload_2
       1: invokeinterface #14,  1           // InterfaceMethod reactor/core/publisher/Signal.isOnComplete:()Z
       6: ifne          102
       9: aload_2
      10: invokeinterface #15,  1           // InterfaceMethod reactor/core/publisher/Signal.getContext:()Lreactor/util/context/Context;
      15: getstatic     #10                 // Field METRICS_WEBCLIENT_START_TIME:Ljava/lang/String;
      18: invokeinterface #16,  2           // InterfaceMethod reactor/util/context/Context.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #17                 // class java/lang/Long
      26: astore_3
      27: aload_2
      28: invokeinterface #18,  1           // InterfaceMethod reactor/core/publisher/Signal.get:()Ljava/lang/Object;
      33: checkcast     #19                 // class org/springframework/web/reactive/function/client/ClientResponse
      36: astore        4
      38: aload_2
      39: invokeinterface #20,  1           // InterfaceMethod reactor/core/publisher/Signal.getThrowable:()Ljava/lang/Throwable;
      44: astore        5
      46: aload_0
      47: getfield      #3                  // Field tagProvider:Lorg/springframework/boot/actuate/metrics/web/reactive/client/WebClientExchangeTagsProvider;
      50: aload_1
      51: aload         4
      53: aload         5
      55: invokeinterface #21,  4           // InterfaceMethod org/springframework/boot/actuate/metrics/web/reactive/client/WebClientExchangeTagsProvider.tags:(Lorg/springframework/web/reactive/function/client/ClientRequest;Lorg/springframework/web/reactive/function/client/ClientResponse;Ljava/lang/Throwable;)Ljava/lang/Iterable;
      60: astore        6
      62: aload_0
      63: getfield      #4                  // Field metricName:Ljava/lang/String;
      66: invokestatic  #22                 // InterfaceMethod io/micrometer/core/instrument/Timer.builder:(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
      69: aload         6
      71: invokevirtual #23                 // Method io/micrometer/core/instrument/Timer$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Timer$Builder;
      74: ldc           #24                 // String Timer of WebClient operation
      76: invokevirtual #25                 // Method io/micrometer/core/instrument/Timer$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
      79: aload_0
      80: getfield      #2                  // Field meterRegistry:Lio/micrometer/core/instrument/MeterRegistry;
      83: invokevirtual #26                 // Method io/micrometer/core/instrument/Timer$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Timer;
      86: invokestatic  #11                 // Method java/lang/System.nanoTime:()J
      89: aload_3
      90: invokevirtual #27                 // Method java/lang/Long.longValue:()J
      93: lsub
      94: getstatic     #28                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      97: invokeinterface #29,  4           // InterfaceMethod io/micrometer/core/instrument/Timer.record:(JLjava/util/concurrent/TimeUnit;)V
     102: return

  static {};
    Code:
       0: new           #30                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #32                 // class org/springframework/boot/actuate/metrics/web/reactive/client/MetricsWebClientFilterFunction
       9: invokevirtual #33                 // Method java/lang/Class.getName:()Ljava/lang/String;
      12: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: ldc           #35                 // String .START_TIME
      17: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: putstatic     #10                 // Field METRICS_WEBCLIENT_START_TIME:Ljava/lang/String;
      26: return
}
