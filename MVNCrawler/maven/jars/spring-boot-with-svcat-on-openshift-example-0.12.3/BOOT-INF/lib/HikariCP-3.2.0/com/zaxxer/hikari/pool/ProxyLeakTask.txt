Compiled from "ProxyLeakTask.java"
class com.zaxxer.hikari.pool.ProxyLeakTask implements java.lang.Runnable {
  private static final org.slf4j.Logger LOGGER;

  static final com.zaxxer.hikari.pool.ProxyLeakTask NO_LEAK;

  private java.util.concurrent.ScheduledFuture<?> scheduledFuture;

  private java.lang.String connectionName;

  private java.lang.Exception exception;

  private java.lang.String threadName;

  private boolean isLeaked;

  com.zaxxer.hikari.pool.ProxyLeakTask(com.zaxxer.hikari.pool.PoolEntry);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/lang/Exception
       8: dup
       9: ldc           #4                  // String Apparent connection leak detected
      11: invokespecial #5                  // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
      14: putfield      #6                  // Field exception:Ljava/lang/Exception;
      17: aload_0
      18: invokestatic  #7                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      21: invokevirtual #8                  // Method java/lang/Thread.getName:()Ljava/lang/String;
      24: putfield      #9                  // Field threadName:Ljava/lang/String;
      27: aload_0
      28: aload_1
      29: getfield      #10                 // Field com/zaxxer/hikari/pool/PoolEntry.connection:Ljava/sql/Connection;
      32: invokevirtual #11                 // Method java/lang/Object.toString:()Ljava/lang/String;
      35: putfield      #12                 // Field connectionName:Ljava/lang/String;
      38: return

  private com.zaxxer.hikari.pool.ProxyLeakTask();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  void schedule(java.util.concurrent.ScheduledExecutorService, long);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: lload_2
       4: getstatic     #13                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       7: invokeinterface #14,  5           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      12: putfield      #15                 // Field scheduledFuture:Ljava/util/concurrent/ScheduledFuture;
      15: return

  public void run();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #16                 // Field isLeaked:Z
       5: aload_0
       6: getfield      #6                  // Field exception:Ljava/lang/Exception;
       9: invokevirtual #17                 // Method java/lang/Exception.getStackTrace:()[Ljava/lang/StackTraceElement;
      12: astore_1
      13: aload_1
      14: arraylength
      15: iconst_5
      16: isub
      17: anewarray     #18                 // class java/lang/StackTraceElement
      20: astore_2
      21: aload_1
      22: iconst_5
      23: aload_2
      24: iconst_0
      25: aload_2
      26: arraylength
      27: invokestatic  #19                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      30: aload_0
      31: getfield      #6                  // Field exception:Ljava/lang/Exception;
      34: aload_2
      35: invokevirtual #20                 // Method java/lang/Exception.setStackTrace:([Ljava/lang/StackTraceElement;)V
      38: getstatic     #21                 // Field LOGGER:Lorg/slf4j/Logger;
      41: ldc           #22                 // String Connection leak detection triggered for {} on thread {}, stack trace follows
      43: iconst_3
      44: anewarray     #23                 // class java/lang/Object
      47: dup
      48: iconst_0
      49: aload_0
      50: getfield      #12                 // Field connectionName:Ljava/lang/String;
      53: aastore
      54: dup
      55: iconst_1
      56: aload_0
      57: getfield      #9                  // Field threadName:Ljava/lang/String;
      60: aastore
      61: dup
      62: iconst_2
      63: aload_0
      64: getfield      #6                  // Field exception:Ljava/lang/Exception;
      67: aastore
      68: invokeinterface #24,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
      73: return

  void cancel();
    Code:
       0: aload_0
       1: getfield      #15                 // Field scheduledFuture:Ljava/util/concurrent/ScheduledFuture;
       4: iconst_0
       5: invokeinterface #25,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      10: pop
      11: aload_0
      12: getfield      #16                 // Field isLeaked:Z
      15: ifeq          36
      18: getstatic     #21                 // Field LOGGER:Lorg/slf4j/Logger;
      21: ldc           #26                 // String Previously reported leaked connection {} on thread {} was returned to the pool (unleaked)
      23: aload_0
      24: getfield      #12                 // Field connectionName:Ljava/lang/String;
      27: aload_0
      28: getfield      #9                  // Field threadName:Ljava/lang/String;
      31: invokeinterface #27,  4           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      36: return

  com.zaxxer.hikari.pool.ProxyLeakTask(com.zaxxer.hikari.pool.ProxyLeakTask$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return

  static {};
    Code:
       0: ldc           #28                 // class com/zaxxer/hikari/pool/ProxyLeakTask
       2: invokestatic  #29                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #21                 // Field LOGGER:Lorg/slf4j/Logger;
       8: new           #30                 // class com/zaxxer/hikari/pool/ProxyLeakTask$1
      11: dup
      12: invokespecial #31                 // Method com/zaxxer/hikari/pool/ProxyLeakTask$1."<init>":()V
      15: putstatic     #32                 // Field NO_LEAK:Lcom/zaxxer/hikari/pool/ProxyLeakTask;
      18: return
}
