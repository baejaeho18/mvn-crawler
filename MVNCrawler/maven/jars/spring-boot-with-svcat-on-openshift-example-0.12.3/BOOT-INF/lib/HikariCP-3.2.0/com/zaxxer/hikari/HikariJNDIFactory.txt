Compiled from "HikariJNDIFactory.java"
public class com.zaxxer.hikari.HikariJNDIFactory implements javax.naming.spi.ObjectFactory {
  public com.zaxxer.hikari.HikariJNDIFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public synchronized java.lang.Object getObjectInstance(java.lang.Object, javax.naming.Name, javax.naming.Context, java.util.Hashtable<?, ?>) throws java.lang.Exception;
    Code:
       0: aload_1
       1: instanceof    #2                  // class javax/naming/Reference
       4: ifeq          129
       7: ldc           #3                  // String javax.sql.DataSource
       9: aload_1
      10: checkcast     #2                  // class javax/naming/Reference
      13: invokevirtual #4                  // Method javax/naming/Reference.getClassName:()Ljava/lang/String;
      16: invokevirtual #5                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      19: ifeq          129
      22: aload_1
      23: checkcast     #2                  // class javax/naming/Reference
      26: astore        5
      28: ldc           #6                  // class com/zaxxer/hikari/HikariConfig
      30: invokestatic  #7                  // Method com/zaxxer/hikari/util/PropertyElf.getPropertyNames:(Ljava/lang/Class;)Ljava/util/Set;
      33: astore        6
      35: new           #8                  // class java/util/Properties
      38: dup
      39: invokespecial #9                  // Method java/util/Properties."<init>":()V
      42: astore        7
      44: aload         5
      46: invokevirtual #10                 // Method javax/naming/Reference.getAll:()Ljava/util/Enumeration;
      49: astore        8
      51: aload         8
      53: invokeinterface #11,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      58: ifeq          121
      61: aload         8
      63: invokeinterface #12,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      68: checkcast     #13                 // class javax/naming/RefAddr
      71: astore        9
      73: aload         9
      75: invokevirtual #14                 // Method javax/naming/RefAddr.getType:()Ljava/lang/String;
      78: astore        10
      80: aload         10
      82: ldc           #15                 // String dataSource.
      84: invokevirtual #16                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      87: ifne          102
      90: aload         6
      92: aload         10
      94: invokeinterface #17,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      99: ifeq          118
     102: aload         7
     104: aload         10
     106: aload         9
     108: invokevirtual #18                 // Method javax/naming/RefAddr.getContent:()Ljava/lang/Object;
     111: invokevirtual #19                 // Method java/lang/Object.toString:()Ljava/lang/String;
     114: invokevirtual #20                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     117: pop
     118: goto          51
     121: aload_0
     122: aload         7
     124: aload_3
     125: invokespecial #21                 // Method createDataSource:(Ljava/util/Properties;Ljavax/naming/Context;)Ljavax/sql/DataSource;
     128: areturn
     129: aconst_null
     130: areturn

  private javax.sql.DataSource createDataSource(java.util.Properties, javax.naming.Context) throws javax.naming.NamingException;
    Code:
       0: aload_1
       1: ldc           #22                 // String dataSourceJNDI
       3: invokevirtual #23                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_3
       7: aload_3
       8: ifnull        19
      11: aload_0
      12: aload_1
      13: aload_2
      14: aload_3
      15: invokespecial #24                 // Method lookupJndiDataSource:(Ljava/util/Properties;Ljavax/naming/Context;Ljava/lang/String;)Ljavax/sql/DataSource;
      18: areturn
      19: new           #25                 // class com/zaxxer/hikari/HikariDataSource
      22: dup
      23: new           #6                  // class com/zaxxer/hikari/HikariConfig
      26: dup
      27: aload_1
      28: invokespecial #26                 // Method com/zaxxer/hikari/HikariConfig."<init>":(Ljava/util/Properties;)V
      31: invokespecial #27                 // Method com/zaxxer/hikari/HikariDataSource."<init>":(Lcom/zaxxer/hikari/HikariConfig;)V
      34: areturn

  private javax.sql.DataSource lookupJndiDataSource(java.util.Properties, javax.naming.Context, java.lang.String) throws javax.naming.NamingException;
    Code:
       0: aload_2
       1: ifnonnull     31
       4: new           #28                 // class java/lang/RuntimeException
       7: dup
       8: new           #29                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #31                 // String JNDI context does not found for dataSourceJNDI :
      17: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_3
      21: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokespecial #34                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_2
      32: aload_3
      33: invokeinterface #35,  2           // InterfaceMethod javax/naming/Context.lookup:(Ljava/lang/String;)Ljava/lang/Object;
      38: checkcast     #36                 // class javax/sql/DataSource
      41: astore        4
      43: aload         4
      45: ifnonnull     77
      48: new           #37                 // class javax/naming/InitialContext
      51: dup
      52: invokespecial #38                 // Method javax/naming/InitialContext."<init>":()V
      55: astore        5
      57: aload         5
      59: aload_3
      60: invokeinterface #35,  2           // InterfaceMethod javax/naming/Context.lookup:(Ljava/lang/String;)Ljava/lang/Object;
      65: checkcast     #36                 // class javax/sql/DataSource
      68: astore        4
      70: aload         5
      72: invokeinterface #39,  1           // InterfaceMethod javax/naming/Context.close:()V
      77: aload         4
      79: ifnull        109
      82: new           #6                  // class com/zaxxer/hikari/HikariConfig
      85: dup
      86: aload_1
      87: invokespecial #26                 // Method com/zaxxer/hikari/HikariConfig."<init>":(Ljava/util/Properties;)V
      90: astore        5
      92: aload         5
      94: aload         4
      96: invokevirtual #40                 // Method com/zaxxer/hikari/HikariConfig.setDataSource:(Ljavax/sql/DataSource;)V
      99: new           #25                 // class com/zaxxer/hikari/HikariDataSource
     102: dup
     103: aload         5
     105: invokespecial #27                 // Method com/zaxxer/hikari/HikariDataSource."<init>":(Lcom/zaxxer/hikari/HikariConfig;)V
     108: areturn
     109: aconst_null
     110: areturn
}
