Compiled from "MicrometerMetricsTracker.java"
public class com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTracker implements com.zaxxer.hikari.metrics.IMetricsTracker {
  public static final java.lang.String HIKARI_METRIC_NAME_PREFIX;

  private static final java.lang.String METRIC_CATEGORY;

  private static final java.lang.String METRIC_NAME_WAIT;

  private static final java.lang.String METRIC_NAME_USAGE;

  private static final java.lang.String METRIC_NAME_CONNECT;

  private static final java.lang.String METRIC_NAME_TIMEOUT_RATE;

  private static final java.lang.String METRIC_NAME_TOTAL_CONNECTIONS;

  private static final java.lang.String METRIC_NAME_IDLE_CONNECTIONS;

  private static final java.lang.String METRIC_NAME_ACTIVE_CONNECTIONS;

  private static final java.lang.String METRIC_NAME_PENDING_CONNECTIONS;

  private static final java.lang.String METRIC_NAME_MAX_CONNECTIONS;

  private static final java.lang.String METRIC_NAME_MIN_CONNECTIONS;

  private final io.micrometer.core.instrument.Timer connectionObtainTimer;

  private final io.micrometer.core.instrument.Counter connectionTimeoutCounter;

  private final io.micrometer.core.instrument.Timer connectionUsage;

  private final io.micrometer.core.instrument.Timer connectionCreation;

  private final io.micrometer.core.instrument.Gauge totalConnectionGauge;

  private final io.micrometer.core.instrument.Gauge idleConnectionGauge;

  private final io.micrometer.core.instrument.Gauge activeConnectionGauge;

  private final io.micrometer.core.instrument.Gauge pendingConnectionGauge;

  private final io.micrometer.core.instrument.Gauge maxConnectionGauge;

  private final io.micrometer.core.instrument.Gauge minConnectionGauge;

  private final com.zaxxer.hikari.metrics.PoolStats poolStats;

  com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTracker(java.lang.String, com.zaxxer.hikari.metrics.PoolStats, io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #3                  // Field poolStats:Lcom/zaxxer/hikari/metrics/PoolStats;
       9: aload_0
      10: ldc           #4                  // String hikaricp.connections.acquire
      12: invokestatic  #5                  // InterfaceMethod io/micrometer/core/instrument/Timer.builder:(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
      15: ldc           #6                  // String Connection acquire time
      17: invokevirtual #7                  // Method io/micrometer/core/instrument/Timer$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
      20: iconst_2
      21: anewarray     #8                  // class java/lang/String
      24: dup
      25: iconst_0
      26: ldc           #9                  // String pool
      28: aastore
      29: dup
      30: iconst_1
      31: aload_1
      32: aastore
      33: invokevirtual #10                 // Method io/micrometer/core/instrument/Timer$Builder.tags:([Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
      36: aload_3
      37: invokevirtual #11                 // Method io/micrometer/core/instrument/Timer$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Timer;
      40: putfield      #12                 // Field connectionObtainTimer:Lio/micrometer/core/instrument/Timer;
      43: aload_0
      44: ldc           #13                 // String hikaricp.connections.creation
      46: invokestatic  #5                  // InterfaceMethod io/micrometer/core/instrument/Timer.builder:(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
      49: ldc           #14                 // String Connection creation time
      51: invokevirtual #7                  // Method io/micrometer/core/instrument/Timer$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
      54: iconst_2
      55: anewarray     #8                  // class java/lang/String
      58: dup
      59: iconst_0
      60: ldc           #9                  // String pool
      62: aastore
      63: dup
      64: iconst_1
      65: aload_1
      66: aastore
      67: invokevirtual #10                 // Method io/micrometer/core/instrument/Timer$Builder.tags:([Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
      70: aload_3
      71: invokevirtual #11                 // Method io/micrometer/core/instrument/Timer$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Timer;
      74: putfield      #15                 // Field connectionCreation:Lio/micrometer/core/instrument/Timer;
      77: aload_0
      78: ldc           #16                 // String hikaricp.connections.usage
      80: invokestatic  #5                  // InterfaceMethod io/micrometer/core/instrument/Timer.builder:(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
      83: ldc           #17                 // String Connection usage time
      85: invokevirtual #7                  // Method io/micrometer/core/instrument/Timer$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
      88: iconst_2
      89: anewarray     #8                  // class java/lang/String
      92: dup
      93: iconst_0
      94: ldc           #9                  // String pool
      96: aastore
      97: dup
      98: iconst_1
      99: aload_1
     100: aastore
     101: invokevirtual #10                 // Method io/micrometer/core/instrument/Timer$Builder.tags:([Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
     104: aload_3
     105: invokevirtual #11                 // Method io/micrometer/core/instrument/Timer$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Timer;
     108: putfield      #18                 // Field connectionUsage:Lio/micrometer/core/instrument/Timer;
     111: aload_0
     112: ldc           #19                 // String hikaricp.connections.timeout
     114: invokestatic  #20                 // InterfaceMethod io/micrometer/core/instrument/Counter.builder:(Ljava/lang/String;)Lio/micrometer/core/instrument/Counter$Builder;
     117: ldc           #21                 // String Connection timeout total count
     119: invokevirtual #22                 // Method io/micrometer/core/instrument/Counter$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Counter$Builder;
     122: iconst_2
     123: anewarray     #8                  // class java/lang/String
     126: dup
     127: iconst_0
     128: ldc           #9                  // String pool
     130: aastore
     131: dup
     132: iconst_1
     133: aload_1
     134: aastore
     135: invokevirtual #23                 // Method io/micrometer/core/instrument/Counter$Builder.tags:([Ljava/lang/String;)Lio/micrometer/core/instrument/Counter$Builder;
     138: aload_3
     139: invokevirtual #24                 // Method io/micrometer/core/instrument/Counter$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Counter;
     142: putfield      #25                 // Field connectionTimeoutCounter:Lio/micrometer/core/instrument/Counter;
     145: aload_0
     146: ldc           #26                 // String hikaricp.connections
     148: aload_2
     149: invokedynamic #27,  0             // InvokeDynamic #0:applyAsDouble:()Ljava/util/function/ToDoubleFunction;
     154: invokestatic  #28                 // InterfaceMethod io/micrometer/core/instrument/Gauge.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge$Builder;
     157: ldc           #29                 // String Total connections
     159: invokevirtual #30                 // Method io/micrometer/core/instrument/Gauge$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
     162: iconst_2
     163: anewarray     #8                  // class java/lang/String
     166: dup
     167: iconst_0
     168: ldc           #9                  // String pool
     170: aastore
     171: dup
     172: iconst_1
     173: aload_1
     174: aastore
     175: invokevirtual #31                 // Method io/micrometer/core/instrument/Gauge$Builder.tags:([Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
     178: aload_3
     179: invokevirtual #32                 // Method io/micrometer/core/instrument/Gauge$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Gauge;
     182: putfield      #33                 // Field totalConnectionGauge:Lio/micrometer/core/instrument/Gauge;
     185: aload_0
     186: ldc           #34                 // String hikaricp.connections.idle
     188: aload_2
     189: invokedynamic #35,  0             // InvokeDynamic #1:applyAsDouble:()Ljava/util/function/ToDoubleFunction;
     194: invokestatic  #28                 // InterfaceMethod io/micrometer/core/instrument/Gauge.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge$Builder;
     197: ldc           #36                 // String Idle connections
     199: invokevirtual #30                 // Method io/micrometer/core/instrument/Gauge$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
     202: iconst_2
     203: anewarray     #8                  // class java/lang/String
     206: dup
     207: iconst_0
     208: ldc           #9                  // String pool
     210: aastore
     211: dup
     212: iconst_1
     213: aload_1
     214: aastore
     215: invokevirtual #31                 // Method io/micrometer/core/instrument/Gauge$Builder.tags:([Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
     218: aload_3
     219: invokevirtual #32                 // Method io/micrometer/core/instrument/Gauge$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Gauge;
     222: putfield      #37                 // Field idleConnectionGauge:Lio/micrometer/core/instrument/Gauge;
     225: aload_0
     226: ldc           #38                 // String hikaricp.connections.active
     228: aload_2
     229: invokedynamic #39,  0             // InvokeDynamic #2:applyAsDouble:()Ljava/util/function/ToDoubleFunction;
     234: invokestatic  #28                 // InterfaceMethod io/micrometer/core/instrument/Gauge.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge$Builder;
     237: ldc           #40                 // String Active connections
     239: invokevirtual #30                 // Method io/micrometer/core/instrument/Gauge$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
     242: iconst_2
     243: anewarray     #8                  // class java/lang/String
     246: dup
     247: iconst_0
     248: ldc           #9                  // String pool
     250: aastore
     251: dup
     252: iconst_1
     253: aload_1
     254: aastore
     255: invokevirtual #31                 // Method io/micrometer/core/instrument/Gauge$Builder.tags:([Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
     258: aload_3
     259: invokevirtual #32                 // Method io/micrometer/core/instrument/Gauge$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Gauge;
     262: putfield      #41                 // Field activeConnectionGauge:Lio/micrometer/core/instrument/Gauge;
     265: aload_0
     266: ldc           #42                 // String hikaricp.connections.pending
     268: aload_2
     269: invokedynamic #43,  0             // InvokeDynamic #3:applyAsDouble:()Ljava/util/function/ToDoubleFunction;
     274: invokestatic  #28                 // InterfaceMethod io/micrometer/core/instrument/Gauge.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge$Builder;
     277: ldc           #44                 // String Pending threads
     279: invokevirtual #30                 // Method io/micrometer/core/instrument/Gauge$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
     282: iconst_2
     283: anewarray     #8                  // class java/lang/String
     286: dup
     287: iconst_0
     288: ldc           #9                  // String pool
     290: aastore
     291: dup
     292: iconst_1
     293: aload_1
     294: aastore
     295: invokevirtual #31                 // Method io/micrometer/core/instrument/Gauge$Builder.tags:([Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
     298: aload_3
     299: invokevirtual #32                 // Method io/micrometer/core/instrument/Gauge$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Gauge;
     302: putfield      #45                 // Field pendingConnectionGauge:Lio/micrometer/core/instrument/Gauge;
     305: aload_0
     306: ldc           #46                 // String hikaricp.connections.max
     308: aload_2
     309: invokedynamic #47,  0             // InvokeDynamic #4:applyAsDouble:()Ljava/util/function/ToDoubleFunction;
     314: invokestatic  #28                 // InterfaceMethod io/micrometer/core/instrument/Gauge.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge$Builder;
     317: ldc           #48                 // String Max connections
     319: invokevirtual #30                 // Method io/micrometer/core/instrument/Gauge$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
     322: iconst_2
     323: anewarray     #8                  // class java/lang/String
     326: dup
     327: iconst_0
     328: ldc           #9                  // String pool
     330: aastore
     331: dup
     332: iconst_1
     333: aload_1
     334: aastore
     335: invokevirtual #31                 // Method io/micrometer/core/instrument/Gauge$Builder.tags:([Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
     338: aload_3
     339: invokevirtual #32                 // Method io/micrometer/core/instrument/Gauge$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Gauge;
     342: putfield      #49                 // Field maxConnectionGauge:Lio/micrometer/core/instrument/Gauge;
     345: aload_0
     346: ldc           #50                 // String hikaricp.connections.min
     348: aload_2
     349: invokedynamic #51,  0             // InvokeDynamic #5:applyAsDouble:()Ljava/util/function/ToDoubleFunction;
     354: invokestatic  #28                 // InterfaceMethod io/micrometer/core/instrument/Gauge.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge$Builder;
     357: ldc           #52                 // String Min connections
     359: invokevirtual #30                 // Method io/micrometer/core/instrument/Gauge$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
     362: iconst_2
     363: anewarray     #8                  // class java/lang/String
     366: dup
     367: iconst_0
     368: ldc           #9                  // String pool
     370: aastore
     371: dup
     372: iconst_1
     373: aload_1
     374: aastore
     375: invokevirtual #31                 // Method io/micrometer/core/instrument/Gauge$Builder.tags:([Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
     378: aload_3
     379: invokevirtual #32                 // Method io/micrometer/core/instrument/Gauge$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Gauge;
     382: putfield      #53                 // Field minConnectionGauge:Lio/micrometer/core/instrument/Gauge;
     385: return

  public void recordConnectionAcquiredNanos(long);
    Code:
       0: aload_0
       1: getfield      #12                 // Field connectionObtainTimer:Lio/micrometer/core/instrument/Timer;
       4: lload_1
       5: getstatic     #54                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
       8: invokeinterface #55,  4           // InterfaceMethod io/micrometer/core/instrument/Timer.record:(JLjava/util/concurrent/TimeUnit;)V
      13: return

  public void recordConnectionUsageMillis(long);
    Code:
       0: aload_0
       1: getfield      #18                 // Field connectionUsage:Lio/micrometer/core/instrument/Timer;
       4: lload_1
       5: getstatic     #56                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       8: invokeinterface #55,  4           // InterfaceMethod io/micrometer/core/instrument/Timer.record:(JLjava/util/concurrent/TimeUnit;)V
      13: return

  public void recordConnectionTimeout();
    Code:
       0: aload_0
       1: getfield      #25                 // Field connectionTimeoutCounter:Lio/micrometer/core/instrument/Counter;
       4: invokeinterface #57,  1           // InterfaceMethod io/micrometer/core/instrument/Counter.increment:()V
       9: return

  public void recordConnectionCreatedMillis(long);
    Code:
       0: aload_0
       1: getfield      #15                 // Field connectionCreation:Lio/micrometer/core/instrument/Timer;
       4: lload_1
       5: getstatic     #56                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       8: invokeinterface #55,  4           // InterfaceMethod io/micrometer/core/instrument/Timer.record:(JLjava/util/concurrent/TimeUnit;)V
      13: return
}
