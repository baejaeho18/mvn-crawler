Compiled from "PoolBase.java"
abstract class com.zaxxer.hikari.pool.PoolBase {
  private final org.slf4j.Logger LOGGER;

  public final com.zaxxer.hikari.HikariConfig config;

  com.zaxxer.hikari.pool.PoolBase$IMetricsTrackerDelegate metricsTracker;

  protected volatile java.lang.String catalog;

  protected final java.lang.String poolName;

  long connectionTimeout;

  long validationTimeout;

  private static final java.lang.String[] RESET_STATES;

  private static final int UNINITIALIZED;

  private static final int TRUE;

  private static final int FALSE;

  private int networkTimeout;

  private int isNetworkTimeoutSupported;

  private int isQueryTimeoutSupported;

  private int defaultTransactionIsolation;

  private int transactionIsolation;

  private java.util.concurrent.Executor netTimeoutExecutor;

  private javax.sql.DataSource dataSource;

  private final java.lang.String schema;

  private final boolean isReadOnly;

  private final boolean isAutoCommit;

  private final boolean isUseJdbc4Validation;

  private final boolean isIsolateInternalQueries;

  private final java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> lastConnectionFailure;

  private volatile boolean isValidChecked;

  com.zaxxer.hikari.pool.PoolBase(com.zaxxer.hikari.HikariConfig);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #3                  // class com/zaxxer/hikari/pool/PoolBase
       7: invokestatic  #4                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      10: putfield      #5                  // Field LOGGER:Lorg/slf4j/Logger;
      13: aload_0
      14: aload_1
      15: putfield      #6                  // Field config:Lcom/zaxxer/hikari/HikariConfig;
      18: aload_0
      19: iconst_m1
      20: putfield      #7                  // Field networkTimeout:I
      23: aload_0
      24: aload_1
      25: invokevirtual #8                  // Method com/zaxxer/hikari/HikariConfig.getCatalog:()Ljava/lang/String;
      28: putfield      #9                  // Field catalog:Ljava/lang/String;
      31: aload_0
      32: aload_1
      33: invokevirtual #10                 // Method com/zaxxer/hikari/HikariConfig.getSchema:()Ljava/lang/String;
      36: putfield      #11                 // Field schema:Ljava/lang/String;
      39: aload_0
      40: aload_1
      41: invokevirtual #12                 // Method com/zaxxer/hikari/HikariConfig.isReadOnly:()Z
      44: putfield      #13                 // Field isReadOnly:Z
      47: aload_0
      48: aload_1
      49: invokevirtual #14                 // Method com/zaxxer/hikari/HikariConfig.isAutoCommit:()Z
      52: putfield      #15                 // Field isAutoCommit:Z
      55: aload_0
      56: aload_1
      57: invokevirtual #16                 // Method com/zaxxer/hikari/HikariConfig.getTransactionIsolation:()Ljava/lang/String;
      60: invokestatic  #17                 // Method com/zaxxer/hikari/util/UtilityElf.getTransactionIsolation:(Ljava/lang/String;)I
      63: putfield      #18                 // Field transactionIsolation:I
      66: aload_0
      67: iconst_m1
      68: putfield      #19                 // Field isQueryTimeoutSupported:I
      71: aload_0
      72: iconst_m1
      73: putfield      #20                 // Field isNetworkTimeoutSupported:I
      76: aload_0
      77: aload_1
      78: invokevirtual #21                 // Method com/zaxxer/hikari/HikariConfig.getConnectionTestQuery:()Ljava/lang/String;
      81: ifnonnull     88
      84: iconst_1
      85: goto          89
      88: iconst_0
      89: putfield      #22                 // Field isUseJdbc4Validation:Z
      92: aload_0
      93: aload_1
      94: invokevirtual #23                 // Method com/zaxxer/hikari/HikariConfig.isIsolateInternalQueries:()Z
      97: putfield      #24                 // Field isIsolateInternalQueries:Z
     100: aload_0
     101: aload_1
     102: invokevirtual #25                 // Method com/zaxxer/hikari/HikariConfig.getPoolName:()Ljava/lang/String;
     105: putfield      #26                 // Field poolName:Ljava/lang/String;
     108: aload_0
     109: aload_1
     110: invokevirtual #27                 // Method com/zaxxer/hikari/HikariConfig.getConnectionTimeout:()J
     113: putfield      #28                 // Field connectionTimeout:J
     116: aload_0
     117: aload_1
     118: invokevirtual #29                 // Method com/zaxxer/hikari/HikariConfig.getValidationTimeout:()J
     121: putfield      #30                 // Field validationTimeout:J
     124: aload_0
     125: new           #31                 // class java/util/concurrent/atomic/AtomicReference
     128: dup
     129: invokespecial #32                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
     132: putfield      #33                 // Field lastConnectionFailure:Ljava/util/concurrent/atomic/AtomicReference;
     135: aload_0
     136: invokespecial #34                 // Method initializeDataSource:()V
     139: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #26                 // Field poolName:Ljava/lang/String;
       4: areturn

  abstract void recycle(com.zaxxer.hikari.pool.PoolEntry);

  void quietlyCloseConnection(java.sql.Connection, java.lang.String);
    Code:
       0: aload_1
       1: ifnull        109
       4: aload_0
       5: getfield      #5                  // Field LOGGER:Lorg/slf4j/Logger;
       8: ldc           #35                 // String {} - Closing connection {}: {}
      10: iconst_3
      11: anewarray     #36                 // class java/lang/Object
      14: dup
      15: iconst_0
      16: aload_0
      17: getfield      #26                 // Field poolName:Ljava/lang/String;
      20: aastore
      21: dup
      22: iconst_1
      23: aload_1
      24: aastore
      25: dup
      26: iconst_2
      27: aload_2
      28: aastore
      29: invokeinterface #37,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      34: aload_1
      35: invokeinterface #38,  1           // InterfaceMethod java/sql/Connection.isClosed:()Z
      40: ifne          57
      43: aload_0
      44: aload_1
      45: getstatic     #39                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      48: ldc2_w        #40                 // long 15l
      51: invokevirtual #42                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      54: invokespecial #43                 // Method setNetworkTimeout:(Ljava/sql/Connection;J)V
      57: aload_1
      58: invokeinterface #44,  1           // InterfaceMethod java/sql/Connection.close:()V
      63: goto          75
      66: astore_3
      67: aload_1
      68: invokeinterface #44,  1           // InterfaceMethod java/sql/Connection.close:()V
      73: aload_3
      74: athrow
      75: goto          109
      78: astore_3
      79: aload_0
      80: getfield      #5                  // Field LOGGER:Lorg/slf4j/Logger;
      83: ldc           #46                 // String {} - Closing connection {} failed
      85: iconst_3
      86: anewarray     #36                 // class java/lang/Object
      89: dup
      90: iconst_0
      91: aload_0
      92: getfield      #26                 // Field poolName:Ljava/lang/String;
      95: aastore
      96: dup
      97: iconst_1
      98: aload_1
      99: aastore
     100: dup
     101: iconst_2
     102: aload_3
     103: aastore
     104: invokeinterface #37,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     109: return
    Exception table:
       from    to  target type
          34    57    66   any
           4    75    78   Class java/lang/Throwable

  boolean isConnectionAlive(java.sql.Connection);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #30                 // Field validationTimeout:J
       6: invokespecial #43                 // Method setNetworkTimeout:(Ljava/sql/Connection;J)V
       9: ldc2_w        #47                 // long 1000l
      12: aload_0
      13: getfield      #30                 // Field validationTimeout:J
      16: invokestatic  #49                 // Method java/lang/Math.max:(JJ)J
      19: l2i
      20: sipush        1000
      23: idiv
      24: istore_2
      25: aload_0
      26: getfield      #22                 // Field isUseJdbc4Validation:Z
      29: ifeq          72
      32: aload_1
      33: iload_2
      34: invokeinterface #50,  2           // InterfaceMethod java/sql/Connection.isValid:(I)Z
      39: istore_3
      40: aload_0
      41: aload_1
      42: aload_0
      43: getfield      #7                  // Field networkTimeout:I
      46: i2l
      47: invokespecial #43                 // Method setNetworkTimeout:(Ljava/sql/Connection;J)V
      50: aload_0
      51: getfield      #24                 // Field isIsolateInternalQueries:Z
      54: ifeq          70
      57: aload_0
      58: getfield      #15                 // Field isAutoCommit:Z
      61: ifne          70
      64: aload_1
      65: invokeinterface #51,  1           // InterfaceMethod java/sql/Connection.rollback:()V
      70: iload_3
      71: ireturn
      72: aload_1
      73: invokeinterface #52,  1           // InterfaceMethod java/sql/Connection.createStatement:()Ljava/sql/Statement;
      78: astore_3
      79: aconst_null
      80: astore        4
      82: aload_0
      83: getfield      #20                 // Field isNetworkTimeoutSupported:I
      86: iconst_1
      87: if_icmpeq     96
      90: aload_0
      91: aload_3
      92: iload_2
      93: invokespecial #53                 // Method setQueryTimeout:(Ljava/sql/Statement;I)V
      96: aload_3
      97: aload_0
      98: getfield      #6                  // Field config:Lcom/zaxxer/hikari/HikariConfig;
     101: invokevirtual #21                 // Method com/zaxxer/hikari/HikariConfig.getConnectionTestQuery:()Ljava/lang/String;
     104: invokeinterface #54,  2           // InterfaceMethod java/sql/Statement.execute:(Ljava/lang/String;)Z
     109: pop
     110: aload_3
     111: ifnull        199
     114: aload         4
     116: ifnull        140
     119: aload_3
     120: invokeinterface #55,  1           // InterfaceMethod java/sql/Statement.close:()V
     125: goto          199
     128: astore        5
     130: aload         4
     132: aload         5
     134: invokevirtual #56                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     137: goto          199
     140: aload_3
     141: invokeinterface #55,  1           // InterfaceMethod java/sql/Statement.close:()V
     146: goto          199
     149: astore        5
     151: aload         5
     153: astore        4
     155: aload         5
     157: athrow
     158: astore        6
     160: aload_3
     161: ifnull        196
     164: aload         4
     166: ifnull        190
     169: aload_3
     170: invokeinterface #55,  1           // InterfaceMethod java/sql/Statement.close:()V
     175: goto          196
     178: astore        7
     180: aload         4
     182: aload         7
     184: invokevirtual #56                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     187: goto          196
     190: aload_3
     191: invokeinterface #55,  1           // InterfaceMethod java/sql/Statement.close:()V
     196: aload         6
     198: athrow
     199: aload_0
     200: aload_1
     201: aload_0
     202: getfield      #7                  // Field networkTimeout:I
     205: i2l
     206: invokespecial #43                 // Method setNetworkTimeout:(Ljava/sql/Connection;J)V
     209: aload_0
     210: getfield      #24                 // Field isIsolateInternalQueries:Z
     213: ifeq          267
     216: aload_0
     217: getfield      #15                 // Field isAutoCommit:Z
     220: ifne          267
     223: aload_1
     224: invokeinterface #51,  1           // InterfaceMethod java/sql/Connection.rollback:()V
     229: goto          267
     232: astore        8
     234: aload_0
     235: aload_1
     236: aload_0
     237: getfield      #7                  // Field networkTimeout:I
     240: i2l
     241: invokespecial #43                 // Method setNetworkTimeout:(Ljava/sql/Connection;J)V
     244: aload_0
     245: getfield      #24                 // Field isIsolateInternalQueries:Z
     248: ifeq          264
     251: aload_0
     252: getfield      #15                 // Field isAutoCommit:Z
     255: ifne          264
     258: aload_1
     259: invokeinterface #51,  1           // InterfaceMethod java/sql/Connection.rollback:()V
     264: aload         8
     266: athrow
     267: iconst_1
     268: ireturn
     269: astore_2
     270: aload_0
     271: getfield      #33                 // Field lastConnectionFailure:Ljava/util/concurrent/atomic/AtomicReference;
     274: aload_2
     275: invokevirtual #58                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
     278: aload_0
     279: getfield      #5                  // Field LOGGER:Lorg/slf4j/Logger;
     282: ldc           #59                 // String {} - Failed to validate connection {} ({}). Possibly consider using a shorter maxLifetime value.
     284: iconst_3
     285: anewarray     #36                 // class java/lang/Object
     288: dup
     289: iconst_0
     290: aload_0
     291: getfield      #26                 // Field poolName:Ljava/lang/String;
     294: aastore
     295: dup
     296: iconst_1
     297: aload_1
     298: aastore
     299: dup
     300: iconst_2
     301: aload_2
     302: invokevirtual #60                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     305: aastore
     306: invokeinterface #61,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
     311: iconst_0
     312: ireturn
    Exception table:
       from    to  target type
         119   125   128   Class java/lang/Throwable
          82   110   149   Class java/lang/Throwable
          82   110   158   any
         169   175   178   Class java/lang/Throwable
         149   160   158   any
           0    40   232   any
          72   199   232   any
         232   234   232   any
           0    70   269   Class java/lang/Exception
          72   268   269   Class java/lang/Exception

  java.lang.Throwable getLastConnectionFailure();
    Code:
       0: aload_0
       1: getfield      #33                 // Field lastConnectionFailure:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #45                 // class java/lang/Throwable
      10: areturn

  public javax.sql.DataSource getUnwrappedDataSource();
    Code:
       0: aload_0
       1: getfield      #63                 // Field dataSource:Ljavax/sql/DataSource;
       4: areturn

  com.zaxxer.hikari.pool.PoolEntry newPoolEntry() throws java.lang.Exception;
    Code:
       0: new           #64                 // class com/zaxxer/hikari/pool/PoolEntry
       3: dup
       4: aload_0
       5: invokespecial #65                 // Method newConnection:()Ljava/sql/Connection;
       8: aload_0
       9: aload_0
      10: getfield      #13                 // Field isReadOnly:Z
      13: aload_0
      14: getfield      #15                 // Field isAutoCommit:Z
      17: invokespecial #66                 // Method com/zaxxer/hikari/pool/PoolEntry."<init>":(Ljava/sql/Connection;Lcom/zaxxer/hikari/pool/PoolBase;ZZ)V
      20: areturn

  void resetConnectionState(java.sql.Connection, com.zaxxer.hikari.pool.ProxyConnection, int) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: istore        4
       3: iload_3
       4: iconst_1
       5: iand
       6: ifeq          36
       9: aload_2
      10: invokevirtual #67                 // Method com/zaxxer/hikari/pool/ProxyConnection.getReadOnlyState:()Z
      13: aload_0
      14: getfield      #13                 // Field isReadOnly:Z
      17: if_icmpeq     36
      20: aload_1
      21: aload_0
      22: getfield      #13                 // Field isReadOnly:Z
      25: invokeinterface #68,  2           // InterfaceMethod java/sql/Connection.setReadOnly:(Z)V
      30: iload         4
      32: iconst_1
      33: ior
      34: istore        4
      36: iload_3
      37: iconst_2
      38: iand
      39: ifeq          69
      42: aload_2
      43: invokevirtual #69                 // Method com/zaxxer/hikari/pool/ProxyConnection.getAutoCommitState:()Z
      46: aload_0
      47: getfield      #15                 // Field isAutoCommit:Z
      50: if_icmpeq     69
      53: aload_1
      54: aload_0
      55: getfield      #15                 // Field isAutoCommit:Z
      58: invokeinterface #70,  2           // InterfaceMethod java/sql/Connection.setAutoCommit:(Z)V
      63: iload         4
      65: iconst_2
      66: ior
      67: istore        4
      69: iload_3
      70: iconst_4
      71: iand
      72: ifeq          102
      75: aload_2
      76: invokevirtual #71                 // Method com/zaxxer/hikari/pool/ProxyConnection.getTransactionIsolationState:()I
      79: aload_0
      80: getfield      #18                 // Field transactionIsolation:I
      83: if_icmpeq     102
      86: aload_1
      87: aload_0
      88: getfield      #18                 // Field transactionIsolation:I
      91: invokeinterface #72,  2           // InterfaceMethod java/sql/Connection.setTransactionIsolation:(I)V
      96: iload         4
      98: iconst_4
      99: ior
     100: istore        4
     102: iload_3
     103: bipush        8
     105: iand
     106: ifeq          147
     109: aload_0
     110: getfield      #9                  // Field catalog:Ljava/lang/String;
     113: ifnull        147
     116: aload_0
     117: getfield      #9                  // Field catalog:Ljava/lang/String;
     120: aload_2
     121: invokevirtual #73                 // Method com/zaxxer/hikari/pool/ProxyConnection.getCatalogState:()Ljava/lang/String;
     124: invokevirtual #74                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     127: ifne          147
     130: aload_1
     131: aload_0
     132: getfield      #9                  // Field catalog:Ljava/lang/String;
     135: invokeinterface #75,  2           // InterfaceMethod java/sql/Connection.setCatalog:(Ljava/lang/String;)V
     140: iload         4
     142: bipush        8
     144: ior
     145: istore        4
     147: iload_3
     148: bipush        16
     150: iand
     151: ifeq          182
     154: aload_2
     155: invokevirtual #76                 // Method com/zaxxer/hikari/pool/ProxyConnection.getNetworkTimeoutState:()I
     158: aload_0
     159: getfield      #7                  // Field networkTimeout:I
     162: if_icmpeq     182
     165: aload_0
     166: aload_1
     167: aload_0
     168: getfield      #7                  // Field networkTimeout:I
     171: i2l
     172: invokespecial #43                 // Method setNetworkTimeout:(Ljava/sql/Connection;J)V
     175: iload         4
     177: bipush        16
     179: ior
     180: istore        4
     182: iload_3
     183: bipush        32
     185: iand
     186: ifeq          227
     189: aload_0
     190: getfield      #11                 // Field schema:Ljava/lang/String;
     193: ifnull        227
     196: aload_0
     197: getfield      #11                 // Field schema:Ljava/lang/String;
     200: aload_2
     201: invokevirtual #77                 // Method com/zaxxer/hikari/pool/ProxyConnection.getSchemaState:()Ljava/lang/String;
     204: invokevirtual #74                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     207: ifne          227
     210: aload_1
     211: aload_0
     212: getfield      #11                 // Field schema:Ljava/lang/String;
     215: invokeinterface #78,  2           // InterfaceMethod java/sql/Connection.setSchema:(Ljava/lang/String;)V
     220: iload         4
     222: bipush        32
     224: ior
     225: istore        4
     227: iload         4
     229: ifeq          279
     232: aload_0
     233: getfield      #5                  // Field LOGGER:Lorg/slf4j/Logger;
     236: invokeinterface #79,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     241: ifeq          279
     244: aload_0
     245: getfield      #5                  // Field LOGGER:Lorg/slf4j/Logger;
     248: ldc           #80                 // String {} - Reset ({}) on connection {}
     250: iconst_3
     251: anewarray     #36                 // class java/lang/Object
     254: dup
     255: iconst_0
     256: aload_0
     257: getfield      #26                 // Field poolName:Ljava/lang/String;
     260: aastore
     261: dup
     262: iconst_1
     263: aload_0
     264: iload         4
     266: invokespecial #81                 // Method stringFromResetBits:(I)Ljava/lang/String;
     269: aastore
     270: dup
     271: iconst_2
     272: aload_1
     273: aastore
     274: invokeinterface #37,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     279: return

  void shutdownNetworkTimeoutExecutor();
    Code:
       0: aload_0
       1: getfield      #82                 // Field netTimeoutExecutor:Ljava/util/concurrent/Executor;
       4: instanceof    #83                 // class java/util/concurrent/ThreadPoolExecutor
       7: ifeq          21
      10: aload_0
      11: getfield      #82                 // Field netTimeoutExecutor:Ljava/util/concurrent/Executor;
      14: checkcast     #83                 // class java/util/concurrent/ThreadPoolExecutor
      17: invokevirtual #84                 // Method java/util/concurrent/ThreadPoolExecutor.shutdownNow:()Ljava/util/List;
      20: pop
      21: return

  long getLoginTimeout();
    Code:
       0: aload_0
       1: getfield      #63                 // Field dataSource:Ljavax/sql/DataSource;
       4: ifnull        20
       7: aload_0
       8: getfield      #63                 // Field dataSource:Ljavax/sql/DataSource;
      11: invokeinterface #85,  1           // InterfaceMethod javax/sql/DataSource.getLoginTimeout:()I
      16: i2l
      17: goto          29
      20: getstatic     #39                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      23: ldc2_w        #86                 // long 5l
      26: invokevirtual #88                 // Method java/util/concurrent/TimeUnit.toSeconds:(J)J
      29: lreturn
      30: astore_1
      31: getstatic     #39                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      34: ldc2_w        #86                 // long 5l
      37: invokevirtual #88                 // Method java/util/concurrent/TimeUnit.toSeconds:(J)J
      40: lreturn
    Exception table:
       from    to  target type
           0    29    30   Class java/sql/SQLException

  void registerMBeans(com.zaxxer.hikari.pool.HikariPool);
    Code:
       0: aload_0
       1: getfield      #6                  // Field config:Lcom/zaxxer/hikari/HikariConfig;
       4: invokevirtual #90                 // Method com/zaxxer/hikari/HikariConfig.isRegisterMbeans:()Z
       7: ifne          11
      10: return
      11: invokestatic  #91                 // Method java/lang/management/ManagementFactory.getPlatformMBeanServer:()Ljavax/management/MBeanServer;
      14: astore_2
      15: new           #92                 // class javax/management/ObjectName
      18: dup
      19: new           #93                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #95                 // String com.zaxxer.hikari:type=PoolConfig (
      28: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: getfield      #26                 // Field poolName:Ljava/lang/String;
      35: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #97                 // String )
      40: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #99                 // Method javax/management/ObjectName."<init>":(Ljava/lang/String;)V
      49: astore_3
      50: new           #92                 // class javax/management/ObjectName
      53: dup
      54: new           #93                 // class java/lang/StringBuilder
      57: dup
      58: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
      61: ldc           #100                // String com.zaxxer.hikari:type=Pool (
      63: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: aload_0
      67: getfield      #26                 // Field poolName:Ljava/lang/String;
      70: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: ldc           #97                 // String )
      75: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: invokespecial #99                 // Method javax/management/ObjectName."<init>":(Ljava/lang/String;)V
      84: astore        4
      86: aload_2
      87: aload_3
      88: invokeinterface #101,  2          // InterfaceMethod javax/management/MBeanServer.isRegistered:(Ljavax/management/ObjectName;)Z
      93: ifne          121
      96: aload_2
      97: aload_0
      98: getfield      #6                  // Field config:Lcom/zaxxer/hikari/HikariConfig;
     101: aload_3
     102: invokeinterface #102,  3          // InterfaceMethod javax/management/MBeanServer.registerMBean:(Ljava/lang/Object;Ljavax/management/ObjectName;)Ljavax/management/ObjectInstance;
     107: pop
     108: aload_2
     109: aload_1
     110: aload         4
     112: invokeinterface #102,  3          // InterfaceMethod javax/management/MBeanServer.registerMBean:(Ljava/lang/Object;Ljavax/management/ObjectName;)Ljavax/management/ObjectInstance;
     117: pop
     118: goto          140
     121: aload_0
     122: getfield      #5                  // Field LOGGER:Lorg/slf4j/Logger;
     125: ldc           #103                // String {} - JMX name ({}) is already registered.
     127: aload_0
     128: getfield      #26                 // Field poolName:Ljava/lang/String;
     131: aload_0
     132: getfield      #26                 // Field poolName:Ljava/lang/String;
     135: invokeinterface #104,  4          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     140: goto          160
     143: astore_2
     144: aload_0
     145: getfield      #5                  // Field LOGGER:Lorg/slf4j/Logger;
     148: ldc           #105                // String {} - Failed to register management beans.
     150: aload_0
     151: getfield      #26                 // Field poolName:Ljava/lang/String;
     154: aload_2
     155: invokeinterface #106,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     160: return
    Exception table:
       from    to  target type
          11   140   143   Class java/lang/Exception

  void unregisterMBeans();
    Code:
       0: aload_0
       1: getfield      #6                  // Field config:Lcom/zaxxer/hikari/HikariConfig;
       4: invokevirtual #90                 // Method com/zaxxer/hikari/HikariConfig.isRegisterMbeans:()Z
       7: ifne          11
      10: return
      11: invokestatic  #91                 // Method java/lang/management/ManagementFactory.getPlatformMBeanServer:()Ljavax/management/MBeanServer;
      14: astore_1
      15: new           #92                 // class javax/management/ObjectName
      18: dup
      19: new           #93                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #95                 // String com.zaxxer.hikari:type=PoolConfig (
      28: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: getfield      #26                 // Field poolName:Ljava/lang/String;
      35: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #97                 // String )
      40: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #99                 // Method javax/management/ObjectName."<init>":(Ljava/lang/String;)V
      49: astore_2
      50: new           #92                 // class javax/management/ObjectName
      53: dup
      54: new           #93                 // class java/lang/StringBuilder
      57: dup
      58: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
      61: ldc           #100                // String com.zaxxer.hikari:type=Pool (
      63: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: aload_0
      67: getfield      #26                 // Field poolName:Ljava/lang/String;
      70: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: ldc           #97                 // String )
      75: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: invokespecial #99                 // Method javax/management/ObjectName."<init>":(Ljava/lang/String;)V
      84: astore_3
      85: aload_1
      86: aload_2
      87: invokeinterface #101,  2          // InterfaceMethod javax/management/MBeanServer.isRegistered:(Ljavax/management/ObjectName;)Z
      92: ifeq          109
      95: aload_1
      96: aload_2
      97: invokeinterface #107,  2          // InterfaceMethod javax/management/MBeanServer.unregisterMBean:(Ljavax/management/ObjectName;)V
     102: aload_1
     103: aload_3
     104: invokeinterface #107,  2          // InterfaceMethod javax/management/MBeanServer.unregisterMBean:(Ljavax/management/ObjectName;)V
     109: goto          129
     112: astore_1
     113: aload_0
     114: getfield      #5                  // Field LOGGER:Lorg/slf4j/Logger;
     117: ldc           #108                // String {} - Failed to unregister management beans.
     119: aload_0
     120: getfield      #26                 // Field poolName:Ljava/lang/String;
     123: aload_1
     124: invokeinterface #106,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     129: return
    Exception table:
       from    to  target type
          11   109   112   Class java/lang/Exception

  private void initializeDataSource();
    Code:
       0: aload_0
       1: getfield      #6                  // Field config:Lcom/zaxxer/hikari/HikariConfig;
       4: invokevirtual #109                // Method com/zaxxer/hikari/HikariConfig.getJdbcUrl:()Ljava/lang/String;
       7: astore_1
       8: aload_0
       9: getfield      #6                  // Field config:Lcom/zaxxer/hikari/HikariConfig;
      12: invokevirtual #110                // Method com/zaxxer/hikari/HikariConfig.getUsername:()Ljava/lang/String;
      15: astore_2
      16: aload_0
      17: getfield      #6                  // Field config:Lcom/zaxxer/hikari/HikariConfig;
      20: invokevirtual #111                // Method com/zaxxer/hikari/HikariConfig.getPassword:()Ljava/lang/String;
      23: astore_3
      24: aload_0
      25: getfield      #6                  // Field config:Lcom/zaxxer/hikari/HikariConfig;
      28: invokevirtual #112                // Method com/zaxxer/hikari/HikariConfig.getDataSourceClassName:()Ljava/lang/String;
      31: astore        4
      33: aload_0
      34: getfield      #6                  // Field config:Lcom/zaxxer/hikari/HikariConfig;
      37: invokevirtual #113                // Method com/zaxxer/hikari/HikariConfig.getDriverClassName:()Ljava/lang/String;
      40: astore        5
      42: aload_0
      43: getfield      #6                  // Field config:Lcom/zaxxer/hikari/HikariConfig;
      46: invokevirtual #114                // Method com/zaxxer/hikari/HikariConfig.getDataSourceJNDI:()Ljava/lang/String;
      49: astore        6
      51: aload_0
      52: getfield      #6                  // Field config:Lcom/zaxxer/hikari/HikariConfig;
      55: invokevirtual #115                // Method com/zaxxer/hikari/HikariConfig.getDataSourceProperties:()Ljava/util/Properties;
      58: astore        7
      60: aload_0
      61: getfield      #6                  // Field config:Lcom/zaxxer/hikari/HikariConfig;
      64: invokevirtual #116                // Method com/zaxxer/hikari/HikariConfig.getDataSource:()Ljavax/sql/DataSource;
      67: astore        8
      69: aload         4
      71: ifnull        105
      74: aload         8
      76: ifnonnull     105
      79: aload         4
      81: ldc           #117                // class javax/sql/DataSource
      83: iconst_0
      84: anewarray     #36                 // class java/lang/Object
      87: invokestatic  #118                // Method com/zaxxer/hikari/util/UtilityElf.createInstance:(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
      90: checkcast     #117                // class javax/sql/DataSource
      93: astore        8
      95: aload         8
      97: aload         7
      99: invokestatic  #119                // Method com/zaxxer/hikari/util/PropertyElf.setTargetFromProperties:(Ljava/lang/Object;Ljava/util/Properties;)V
     102: goto          179
     105: aload_1
     106: ifnull        133
     109: aload         8
     111: ifnonnull     133
     114: new           #120                // class com/zaxxer/hikari/util/DriverDataSource
     117: dup
     118: aload_1
     119: aload         5
     121: aload         7
     123: aload_2
     124: aload_3
     125: invokespecial #121                // Method com/zaxxer/hikari/util/DriverDataSource."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;Ljava/lang/String;Ljava/lang/String;)V
     128: astore        8
     130: goto          179
     133: aload         6
     135: ifnull        179
     138: aload         8
     140: ifnonnull     179
     143: new           #122                // class javax/naming/InitialContext
     146: dup
     147: invokespecial #123                // Method javax/naming/InitialContext."<init>":()V
     150: astore        9
     152: aload         9
     154: aload         6
     156: invokevirtual #124                // Method javax/naming/InitialContext.lookup:(Ljava/lang/String;)Ljava/lang/Object;
     159: checkcast     #117                // class javax/sql/DataSource
     162: astore        8
     164: goto          179
     167: astore        9
     169: new           #126                // class com/zaxxer/hikari/pool/HikariPool$PoolInitializationException
     172: dup
     173: aload         9
     175: invokespecial #127                // Method com/zaxxer/hikari/pool/HikariPool$PoolInitializationException."<init>":(Ljava/lang/Throwable;)V
     178: athrow
     179: aload         8
     181: ifnull        199
     184: aload_0
     185: aload         8
     187: invokespecial #128                // Method setLoginTimeout:(Ljavax/sql/DataSource;)V
     190: aload_0
     191: aload         8
     193: aload         4
     195: aload_1
     196: invokespecial #129                // Method createNetworkTimeoutExecutor:(Ljavax/sql/DataSource;Ljava/lang/String;Ljava/lang/String;)V
     199: aload_0
     200: aload         8
     202: putfield      #63                 // Field dataSource:Ljavax/sql/DataSource;
     205: return
    Exception table:
       from    to  target type
         143   164   167   Class javax/naming/NamingException

  private java.sql.Connection newConnection() throws java.lang.Exception;
    Code:
       0: invokestatic  #130                // InterfaceMethod com/zaxxer/hikari/util/ClockSource.currentTime:()J
       3: lstore_1
       4: aconst_null
       5: astore_3
       6: aload_0
       7: getfield      #6                  // Field config:Lcom/zaxxer/hikari/HikariConfig;
      10: invokevirtual #110                // Method com/zaxxer/hikari/HikariConfig.getUsername:()Ljava/lang/String;
      13: astore        4
      15: aload_0
      16: getfield      #6                  // Field config:Lcom/zaxxer/hikari/HikariConfig;
      19: invokevirtual #111                // Method com/zaxxer/hikari/HikariConfig.getPassword:()Ljava/lang/String;
      22: astore        5
      24: aload         4
      26: ifnonnull     41
      29: aload_0
      30: getfield      #63                 // Field dataSource:Ljavax/sql/DataSource;
      33: invokeinterface #131,  1          // InterfaceMethod javax/sql/DataSource.getConnection:()Ljava/sql/Connection;
      38: goto          54
      41: aload_0
      42: getfield      #63                 // Field dataSource:Ljavax/sql/DataSource;
      45: aload         4
      47: aload         5
      49: invokeinterface #132,  3          // InterfaceMethod javax/sql/DataSource.getConnection:(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Connection;
      54: astore_3
      55: aload_3
      56: ifnonnull     69
      59: new           #133                // class java/sql/SQLTransientConnectionException
      62: dup
      63: ldc           #134                // String DataSource returned null unexpectedly
      65: invokespecial #135                // Method java/sql/SQLTransientConnectionException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: aload_0
      70: aload_3
      71: invokespecial #136                // Method setupConnection:(Ljava/sql/Connection;)V
      74: aload_0
      75: getfield      #33                 // Field lastConnectionFailure:Ljava/util/concurrent/atomic/AtomicReference;
      78: aconst_null
      79: invokevirtual #58                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      82: aload_3
      83: astore        6
      85: aload_0
      86: getfield      #137                // Field metricsTracker:Lcom/zaxxer/hikari/pool/PoolBase$IMetricsTrackerDelegate;
      89: ifnull        105
      92: aload_0
      93: getfield      #137                // Field metricsTracker:Lcom/zaxxer/hikari/pool/PoolBase$IMetricsTrackerDelegate;
      96: lload_1
      97: invokestatic  #138                // InterfaceMethod com/zaxxer/hikari/util/ClockSource.elapsedMillis:(J)J
     100: invokeinterface #139,  3          // InterfaceMethod com/zaxxer/hikari/pool/PoolBase$IMetricsTrackerDelegate.recordConnectionCreated:(J)V
     105: aload         6
     107: areturn
     108: astore        4
     110: aload_3
     111: ifnull        124
     114: aload_0
     115: aload_3
     116: ldc           #140                // String (Failed to create/setup connection)
     118: invokevirtual #141                // Method quietlyCloseConnection:(Ljava/sql/Connection;Ljava/lang/String;)V
     121: goto          151
     124: aload_0
     125: invokevirtual #142                // Method getLastConnectionFailure:()Ljava/lang/Throwable;
     128: ifnonnull     151
     131: aload_0
     132: getfield      #5                  // Field LOGGER:Lorg/slf4j/Logger;
     135: ldc           #143                // String {} - Failed to create/setup connection: {}
     137: aload_0
     138: getfield      #26                 // Field poolName:Ljava/lang/String;
     141: aload         4
     143: invokevirtual #60                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     146: invokeinterface #144,  4          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     151: aload_0
     152: getfield      #33                 // Field lastConnectionFailure:Ljava/util/concurrent/atomic/AtomicReference;
     155: aload         4
     157: invokevirtual #58                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
     160: aload         4
     162: athrow
     163: astore        7
     165: aload_0
     166: getfield      #137                // Field metricsTracker:Lcom/zaxxer/hikari/pool/PoolBase$IMetricsTrackerDelegate;
     169: ifnull        185
     172: aload_0
     173: getfield      #137                // Field metricsTracker:Lcom/zaxxer/hikari/pool/PoolBase$IMetricsTrackerDelegate;
     176: lload_1
     177: invokestatic  #138                // InterfaceMethod com/zaxxer/hikari/util/ClockSource.elapsedMillis:(J)J
     180: invokeinterface #139,  3          // InterfaceMethod com/zaxxer/hikari/pool/PoolBase$IMetricsTrackerDelegate.recordConnectionCreated:(J)V
     185: aload         7
     187: athrow
    Exception table:
       from    to  target type
           6    85   108   Class java/lang/Exception
           6    85   163   any
         108   165   163   any

  private void setupConnection(java.sql.Connection) throws com.zaxxer.hikari.pool.PoolBase$ConnectionSetupException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field networkTimeout:I
       4: iconst_m1
       5: if_icmpne     24
       8: aload_0
       9: aload_0
      10: aload_1
      11: aload_0
      12: getfield      #30                 // Field validationTimeout:J
      15: invokespecial #145                // Method getAndSetNetworkTimeout:(Ljava/sql/Connection;J)I
      18: putfield      #7                  // Field networkTimeout:I
      21: goto          33
      24: aload_0
      25: aload_1
      26: aload_0
      27: getfield      #30                 // Field validationTimeout:J
      30: invokespecial #43                 // Method setNetworkTimeout:(Ljava/sql/Connection;J)V
      33: aload_1
      34: invokeinterface #146,  1          // InterfaceMethod java/sql/Connection.isReadOnly:()Z
      39: aload_0
      40: getfield      #13                 // Field isReadOnly:Z
      43: if_icmpeq     56
      46: aload_1
      47: aload_0
      48: getfield      #13                 // Field isReadOnly:Z
      51: invokeinterface #68,  2           // InterfaceMethod java/sql/Connection.setReadOnly:(Z)V
      56: aload_1
      57: invokeinterface #147,  1          // InterfaceMethod java/sql/Connection.getAutoCommit:()Z
      62: aload_0
      63: getfield      #15                 // Field isAutoCommit:Z
      66: if_icmpeq     79
      69: aload_1
      70: aload_0
      71: getfield      #15                 // Field isAutoCommit:Z
      74: invokeinterface #70,  2           // InterfaceMethod java/sql/Connection.setAutoCommit:(Z)V
      79: aload_0
      80: aload_1
      81: invokespecial #148                // Method checkDriverSupport:(Ljava/sql/Connection;)V
      84: aload_0
      85: getfield      #18                 // Field transactionIsolation:I
      88: aload_0
      89: getfield      #149                // Field defaultTransactionIsolation:I
      92: if_icmpeq     105
      95: aload_1
      96: aload_0
      97: getfield      #18                 // Field transactionIsolation:I
     100: invokeinterface #72,  2           // InterfaceMethod java/sql/Connection.setTransactionIsolation:(I)V
     105: aload_0
     106: getfield      #9                  // Field catalog:Ljava/lang/String;
     109: ifnull        122
     112: aload_1
     113: aload_0
     114: getfield      #9                  // Field catalog:Ljava/lang/String;
     117: invokeinterface #75,  2           // InterfaceMethod java/sql/Connection.setCatalog:(Ljava/lang/String;)V
     122: aload_0
     123: getfield      #11                 // Field schema:Ljava/lang/String;
     126: ifnull        139
     129: aload_1
     130: aload_0
     131: getfield      #11                 // Field schema:Ljava/lang/String;
     134: invokeinterface #78,  2           // InterfaceMethod java/sql/Connection.setSchema:(Ljava/lang/String;)V
     139: aload_0
     140: aload_1
     141: aload_0
     142: getfield      #6                  // Field config:Lcom/zaxxer/hikari/HikariConfig;
     145: invokevirtual #150                // Method com/zaxxer/hikari/HikariConfig.getConnectionInitSql:()Ljava/lang/String;
     148: iconst_1
     149: invokespecial #151                // Method executeSql:(Ljava/sql/Connection;Ljava/lang/String;Z)V
     152: aload_0
     153: aload_1
     154: aload_0
     155: getfield      #7                  // Field networkTimeout:I
     158: i2l
     159: invokespecial #43                 // Method setNetworkTimeout:(Ljava/sql/Connection;J)V
     162: goto          175
     165: astore_2
     166: new           #152                // class com/zaxxer/hikari/pool/PoolBase$ConnectionSetupException
     169: dup
     170: aload_2
     171: invokespecial #153                // Method com/zaxxer/hikari/pool/PoolBase$ConnectionSetupException."<init>":(Ljava/lang/Throwable;)V
     174: athrow
     175: return
    Exception table:
       from    to  target type
           0   162   165   Class java/sql/SQLException

  private void checkDriverSupport(java.sql.Connection) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #154                // Field isValidChecked:Z
       4: ifne          173
       7: aload_0
       8: getfield      #22                 // Field isUseJdbc4Validation:Z
      11: ifeq          25
      14: aload_1
      15: iconst_1
      16: invokeinterface #50,  2           // InterfaceMethod java/sql/Connection.isValid:(I)Z
      21: pop
      22: goto          38
      25: aload_0
      26: aload_1
      27: aload_0
      28: getfield      #6                  // Field config:Lcom/zaxxer/hikari/HikariConfig;
      31: invokevirtual #21                 // Method com/zaxxer/hikari/HikariConfig.getConnectionTestQuery:()Ljava/lang/String;
      34: iconst_0
      35: invokespecial #151                // Method executeSql:(Ljava/sql/Connection;Ljava/lang/String;Z)V
      38: goto          98
      41: astore_2
      42: aload_0
      43: getfield      #5                  // Field LOGGER:Lorg/slf4j/Logger;
      46: new           #93                 // class java/lang/StringBuilder
      49: dup
      50: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #155                // String {} - Failed to execute
      55: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_0
      59: getfield      #22                 // Field isUseJdbc4Validation:Z
      62: ifeq          70
      65: ldc           #156                // String  isValid() for connection, configure
      67: goto          72
      70: ldc           #157                // String
      72: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: ldc           #158                // String  connection test query ({}).
      77: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      83: aload_0
      84: getfield      #26                 // Field poolName:Ljava/lang/String;
      87: aload_2
      88: invokevirtual #159                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      91: invokeinterface #104,  4          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      96: aload_2
      97: athrow
      98: aload_0
      99: aload_1
     100: invokeinterface #160,  1          // InterfaceMethod java/sql/Connection.getTransactionIsolation:()I
     105: putfield      #149                // Field defaultTransactionIsolation:I
     108: aload_0
     109: getfield      #18                 // Field transactionIsolation:I
     112: iconst_m1
     113: if_icmpne     124
     116: aload_0
     117: aload_0
     118: getfield      #149                // Field defaultTransactionIsolation:I
     121: putfield      #18                 // Field transactionIsolation:I
     124: goto          168
     127: astore_2
     128: aload_0
     129: getfield      #5                  // Field LOGGER:Lorg/slf4j/Logger;
     132: ldc           #161                // String {} - Default transaction isolation level detection failed ({}).
     134: aload_0
     135: getfield      #26                 // Field poolName:Ljava/lang/String;
     138: aload_2
     139: invokevirtual #162                // Method java/sql/SQLException.getMessage:()Ljava/lang/String;
     142: invokeinterface #106,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     147: aload_2
     148: invokevirtual #163                // Method java/sql/SQLException.getSQLState:()Ljava/lang/String;
     151: ifnull        168
     154: aload_2
     155: invokevirtual #163                // Method java/sql/SQLException.getSQLState:()Ljava/lang/String;
     158: ldc           #164                // String 08
     160: invokevirtual #165                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     163: ifne          168
     166: aload_2
     167: athrow
     168: aload_0
     169: iconst_1
     170: putfield      #154                // Field isValidChecked:Z
     173: return
    Exception table:
       from    to  target type
           7    38    41   Class java/lang/Throwable
          98   124   127   Class java/sql/SQLException

  private void setQueryTimeout(java.sql.Statement, int);
    Code:
       0: aload_0
       1: getfield      #19                 // Field isQueryTimeoutSupported:I
       4: ifeq          55
       7: aload_1
       8: iload_2
       9: invokeinterface #166,  2          // InterfaceMethod java/sql/Statement.setQueryTimeout:(I)V
      14: aload_0
      15: iconst_1
      16: putfield      #19                 // Field isQueryTimeoutSupported:I
      19: goto          55
      22: astore_3
      23: aload_0
      24: getfield      #19                 // Field isQueryTimeoutSupported:I
      27: iconst_m1
      28: if_icmpne     55
      31: aload_0
      32: iconst_0
      33: putfield      #19                 // Field isQueryTimeoutSupported:I
      36: aload_0
      37: getfield      #5                  // Field LOGGER:Lorg/slf4j/Logger;
      40: ldc           #167                // String {} - Failed to set query timeout for statement. ({})
      42: aload_0
      43: getfield      #26                 // Field poolName:Ljava/lang/String;
      46: aload_3
      47: invokevirtual #159                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      50: invokeinterface #168,  4          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      55: return
    Exception table:
       from    to  target type
           7    19    22   Class java/lang/Throwable

  private int getAndSetNetworkTimeout(java.sql.Connection, long);
    Code:
       0: aload_0
       1: getfield      #20                 // Field isNetworkTimeoutSupported:I
       4: ifeq          135
       7: aload_1
       8: invokeinterface #169,  1          // InterfaceMethod java/sql/Connection.getNetworkTimeout:()I
      13: istore        4
      15: aload_1
      16: aload_0
      17: getfield      #82                 // Field netTimeoutExecutor:Ljava/util/concurrent/Executor;
      20: lload_2
      21: l2i
      22: invokeinterface #170,  3          // InterfaceMethod java/sql/Connection.setNetworkTimeout:(Ljava/util/concurrent/Executor;I)V
      27: aload_0
      28: iconst_1
      29: putfield      #20                 // Field isNetworkTimeoutSupported:I
      32: iload         4
      34: ireturn
      35: astore        4
      37: aload_0
      38: getfield      #20                 // Field isNetworkTimeoutSupported:I
      41: iconst_m1
      42: if_icmpne     135
      45: aload_0
      46: iconst_0
      47: putfield      #20                 // Field isNetworkTimeoutSupported:I
      50: aload_0
      51: getfield      #5                  // Field LOGGER:Lorg/slf4j/Logger;
      54: ldc           #171                // String {} - Driver does not support get/set network timeout for connections. ({})
      56: aload_0
      57: getfield      #26                 // Field poolName:Ljava/lang/String;
      60: aload         4
      62: invokevirtual #159                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      65: invokeinterface #168,  4          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      70: aload_0
      71: getfield      #30                 // Field validationTimeout:J
      74: getstatic     #39                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      77: lconst_1
      78: invokevirtual #42                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      81: lcmp
      82: ifge          103
      85: aload_0
      86: getfield      #5                  // Field LOGGER:Lorg/slf4j/Logger;
      89: ldc           #172                // String {} - A validationTimeout of less than 1 second cannot be honored on drivers without setNetworkTimeout() support.
      91: aload_0
      92: getfield      #26                 // Field poolName:Ljava/lang/String;
      95: invokeinterface #173,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     100: goto          135
     103: aload_0
     104: getfield      #30                 // Field validationTimeout:J
     107: getstatic     #39                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
     110: lconst_1
     111: invokevirtual #42                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
     114: lrem
     115: lconst_0
     116: lcmp
     117: ifeq          135
     120: aload_0
     121: getfield      #5                  // Field LOGGER:Lorg/slf4j/Logger;
     124: ldc           #174                // String {} - A validationTimeout with fractional second granularity cannot be honored on drivers without setNetworkTimeout() support.
     126: aload_0
     127: getfield      #26                 // Field poolName:Ljava/lang/String;
     130: invokeinterface #173,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     135: iconst_0
     136: ireturn
    Exception table:
       from    to  target type
           7    34    35   Class java/lang/Throwable

  private void setNetworkTimeout(java.sql.Connection, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field isNetworkTimeoutSupported:I
       4: iconst_1
       5: if_icmpne     20
       8: aload_1
       9: aload_0
      10: getfield      #82                 // Field netTimeoutExecutor:Ljava/util/concurrent/Executor;
      13: lload_2
      14: l2i
      15: invokeinterface #170,  3          // InterfaceMethod java/sql/Connection.setNetworkTimeout:(Ljava/util/concurrent/Executor;I)V
      20: return

  private void executeSql(java.sql.Connection, java.lang.String, boolean) throws java.sql.SQLException;
    Code:
       0: aload_2
       1: ifnull        152
       4: aload_1
       5: invokeinterface #52,  1           // InterfaceMethod java/sql/Connection.createStatement:()Ljava/sql/Statement;
      10: astore        4
      12: aconst_null
      13: astore        5
      15: aload         4
      17: aload_2
      18: invokeinterface #54,  2           // InterfaceMethod java/sql/Statement.execute:(Ljava/lang/String;)Z
      23: pop
      24: aload         4
      26: ifnull        119
      29: aload         5
      31: ifnull        56
      34: aload         4
      36: invokeinterface #55,  1           // InterfaceMethod java/sql/Statement.close:()V
      41: goto          119
      44: astore        6
      46: aload         5
      48: aload         6
      50: invokevirtual #56                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      53: goto          119
      56: aload         4
      58: invokeinterface #55,  1           // InterfaceMethod java/sql/Statement.close:()V
      63: goto          119
      66: astore        6
      68: aload         6
      70: astore        5
      72: aload         6
      74: athrow
      75: astore        7
      77: aload         4
      79: ifnull        116
      82: aload         5
      84: ifnull        109
      87: aload         4
      89: invokeinterface #55,  1           // InterfaceMethod java/sql/Statement.close:()V
      94: goto          116
      97: astore        8
      99: aload         5
     101: aload         8
     103: invokevirtual #56                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     106: goto          116
     109: aload         4
     111: invokeinterface #55,  1           // InterfaceMethod java/sql/Statement.close:()V
     116: aload         7
     118: athrow
     119: aload_0
     120: getfield      #24                 // Field isIsolateInternalQueries:Z
     123: ifeq          152
     126: aload_0
     127: getfield      #15                 // Field isAutoCommit:Z
     130: ifne          152
     133: iload_3
     134: ifeq          146
     137: aload_1
     138: invokeinterface #175,  1          // InterfaceMethod java/sql/Connection.commit:()V
     143: goto          152
     146: aload_1
     147: invokeinterface #51,  1           // InterfaceMethod java/sql/Connection.rollback:()V
     152: return
    Exception table:
       from    to  target type
          34    41    44   Class java/lang/Throwable
          15    24    66   Class java/lang/Throwable
          15    24    75   any
          87    94    97   Class java/lang/Throwable
          66    77    75   any

  private void createNetworkTimeoutExecutor(javax.sql.DataSource, java.lang.String, java.lang.String);
    Code:
       0: aload_2
       1: ifnull        13
       4: aload_2
       5: ldc           #176                // String Mysql
       7: invokevirtual #177                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      10: ifne          45
      13: aload_3
      14: ifnull        26
      17: aload_3
      18: ldc           #178                // String mysql
      20: invokevirtual #177                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      23: ifne          45
      26: aload_1
      27: ifnull        60
      30: aload_1
      31: invokevirtual #179                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      34: invokevirtual #180                // Method java/lang/Class.getName:()Ljava/lang/String;
      37: ldc           #176                // String Mysql
      39: invokevirtual #177                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      42: ifeq          60
      45: aload_0
      46: new           #181                // class com/zaxxer/hikari/pool/PoolBase$SynchronousExecutor
      49: dup
      50: aconst_null
      51: invokespecial #182                // Method com/zaxxer/hikari/pool/PoolBase$SynchronousExecutor."<init>":(Lcom/zaxxer/hikari/pool/PoolBase$1;)V
      54: putfield      #82                 // Field netTimeoutExecutor:Ljava/util/concurrent/Executor;
      57: goto          144
      60: aload_0
      61: getfield      #6                  // Field config:Lcom/zaxxer/hikari/HikariConfig;
      64: invokevirtual #183                // Method com/zaxxer/hikari/HikariConfig.getThreadFactory:()Ljava/util/concurrent/ThreadFactory;
      67: astore        4
      69: aload         4
      71: ifnull        79
      74: aload         4
      76: goto          109
      79: new           #184                // class com/zaxxer/hikari/util/UtilityElf$DefaultThreadFactory
      82: dup
      83: new           #93                 // class java/lang/StringBuilder
      86: dup
      87: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
      90: aload_0
      91: getfield      #26                 // Field poolName:Ljava/lang/String;
      94: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: ldc           #185                // String  network timeout executor
      99: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     105: iconst_1
     106: invokespecial #186                // Method com/zaxxer/hikari/util/UtilityElf$DefaultThreadFactory."<init>":(Ljava/lang/String;Z)V
     109: astore        4
     111: aload         4
     113: invokestatic  #187                // Method java/util/concurrent/Executors.newCachedThreadPool:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ExecutorService;
     116: checkcast     #83                 // class java/util/concurrent/ThreadPoolExecutor
     119: astore        5
     121: aload         5
     123: ldc2_w        #40                 // long 15l
     126: getstatic     #39                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
     129: invokevirtual #188                // Method java/util/concurrent/ThreadPoolExecutor.setKeepAliveTime:(JLjava/util/concurrent/TimeUnit;)V
     132: aload         5
     134: iconst_1
     135: invokevirtual #189                // Method java/util/concurrent/ThreadPoolExecutor.allowCoreThreadTimeOut:(Z)V
     138: aload_0
     139: aload         5
     141: putfield      #82                 // Field netTimeoutExecutor:Ljava/util/concurrent/Executor;
     144: return

  private void setLoginTimeout(javax.sql.DataSource);
    Code:
       0: aload_0
       1: getfield      #28                 // Field connectionTimeout:J
       4: ldc2_w        #191                // long 2147483647l
       7: lcmp
       8: ifeq          59
      11: aload_1
      12: iconst_1
      13: getstatic     #193                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      16: ldc2_w        #194                // long 500l
      19: aload_0
      20: getfield      #28                 // Field connectionTimeout:J
      23: ladd
      24: invokevirtual #88                 // Method java/util/concurrent/TimeUnit.toSeconds:(J)J
      27: l2i
      28: invokestatic  #196                // Method java/lang/Math.max:(II)I
      31: invokeinterface #197,  2          // InterfaceMethod javax/sql/DataSource.setLoginTimeout:(I)V
      36: goto          59
      39: astore_2
      40: aload_0
      41: getfield      #5                  // Field LOGGER:Lorg/slf4j/Logger;
      44: ldc           #198                // String {} - Failed to set login timeout for data source. ({})
      46: aload_0
      47: getfield      #26                 // Field poolName:Ljava/lang/String;
      50: aload_2
      51: invokevirtual #159                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      54: invokeinterface #168,  4          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      59: return
    Exception table:
       from    to  target type
          11    36    39   Class java/lang/Throwable

  private java.lang.String stringFromResetBits(int);
    Code:
       0: new           #93                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: getstatic     #199                // Field RESET_STATES:[Ljava/lang/String;
      14: arraylength
      15: if_icmpge     47
      18: iload_1
      19: iconst_1
      20: iload_3
      21: ishl
      22: iand
      23: ifeq          41
      26: aload_2
      27: getstatic     #199                // Field RESET_STATES:[Ljava/lang/String;
      30: iload_3
      31: aaload
      32: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #200                // String ,
      37: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: pop
      41: iinc          3, 1
      44: goto          10
      47: aload_2
      48: aload_2
      49: invokevirtual #201                // Method java/lang/StringBuilder.length:()I
      52: iconst_2
      53: isub
      54: invokevirtual #202                // Method java/lang/StringBuilder.setLength:(I)V
      57: aload_2
      58: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: areturn

  static {};
    Code:
       0: bipush        6
       2: anewarray     #203                // class java/lang/String
       5: dup
       6: iconst_0
       7: ldc           #204                // String readOnly
       9: aastore
      10: dup
      11: iconst_1
      12: ldc           #205                // String autoCommit
      14: aastore
      15: dup
      16: iconst_2
      17: ldc           #206                // String isolation
      19: aastore
      20: dup
      21: iconst_3
      22: ldc           #207                // String catalog
      24: aastore
      25: dup
      26: iconst_4
      27: ldc           #208                // String netTimeout
      29: aastore
      30: dup
      31: iconst_5
      32: ldc           #209                // String schema
      34: aastore
      35: putstatic     #199                // Field RESET_STATES:[Ljava/lang/String;
      38: return
}
