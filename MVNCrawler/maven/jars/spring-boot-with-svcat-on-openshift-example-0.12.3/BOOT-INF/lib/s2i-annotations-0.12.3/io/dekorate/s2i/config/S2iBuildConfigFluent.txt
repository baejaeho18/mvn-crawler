Compiled from "S2iBuildConfigFluent.java"
public interface io.dekorate.s2i.config.S2iBuildConfigFluent<A extends io.dekorate.s2i.config.S2iBuildConfigFluent<A>> extends io.dekorate.kubernetes.config.ImageConfigurationFluent<A> {
  public abstract boolean isEnabled();

  public abstract A withEnabled(boolean);

  public abstract java.lang.Boolean hasEnabled();

  public abstract java.lang.String getBuilderImage();

  public abstract A withBuilderImage(java.lang.String);

  public abstract java.lang.Boolean hasBuilderImage();

  public abstract A withNewBuilderImage(java.lang.String);

  public abstract A withNewBuilderImage(java.lang.StringBuilder);

  public abstract A withNewBuilderImage(java.lang.StringBuffer);

  public abstract A withBuildEnvVars(io.dekorate.kubernetes.config.Env...);

  public abstract io.dekorate.kubernetes.config.Env[] getBuildEnvVars();

  public abstract io.dekorate.kubernetes.config.Env[] buildBuildEnvVars();

  public abstract io.dekorate.kubernetes.config.Env buildBuildEnvVar(int);

  public abstract io.dekorate.kubernetes.config.Env buildFirstBuildEnvVar();

  public abstract io.dekorate.kubernetes.config.Env buildLastBuildEnvVar();

  public abstract io.dekorate.kubernetes.config.Env buildMatchingBuildEnvVar(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.kubernetes.config.EnvBuilder>);

  public abstract java.lang.Boolean hasMatchingBuildEnvVar(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.kubernetes.config.EnvBuilder>);

  public abstract A addToBuildEnvVars(int, io.dekorate.kubernetes.config.Env);

  public abstract A setToBuildEnvVars(int, io.dekorate.kubernetes.config.Env);

  public abstract A addToBuildEnvVars(io.dekorate.kubernetes.config.Env...);

  public abstract A addAllToConfigBuildEnvVars(java.util.Collection<io.dekorate.kubernetes.config.Env>);

  public abstract A removeFromBuildEnvVars(io.dekorate.kubernetes.config.Env...);

  public abstract A removeAllFromConfigBuildEnvVars(java.util.Collection<io.dekorate.kubernetes.config.Env>);

  public abstract A removeMatchingFromConfigBuildEnvVars(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.kubernetes.config.EnvBuilder>);

  public abstract java.lang.Boolean hasBuildEnvVars();

  public abstract A addNewConfigBuildEnvVar(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract io.dekorate.s2i.config.S2iBuildConfigFluent$ConfigBuildEnvVarsNested<A> addNewConfigBuildEnvVar();

  public abstract io.dekorate.s2i.config.S2iBuildConfigFluent$ConfigBuildEnvVarsNested<A> addNewBuildEnvVarLike(io.dekorate.kubernetes.config.Env);

  public abstract io.dekorate.s2i.config.S2iBuildConfigFluent$ConfigBuildEnvVarsNested<A> setNewBuildEnvVarLike(int, io.dekorate.kubernetes.config.Env);

  public abstract io.dekorate.s2i.config.S2iBuildConfigFluent$ConfigBuildEnvVarsNested<A> editBuildEnvVar(int);

  public abstract io.dekorate.s2i.config.S2iBuildConfigFluent$ConfigBuildEnvVarsNested<A> editFirstBuildEnvVar();

  public abstract io.dekorate.s2i.config.S2iBuildConfigFluent$ConfigBuildEnvVarsNested<A> editLastBuildEnvVar();

  public abstract io.dekorate.s2i.config.S2iBuildConfigFluent$ConfigBuildEnvVarsNested<A> editMatchingBuildEnvVar(io.dekorate.deps.kubernetes.api.builder.Predicate<io.dekorate.kubernetes.config.EnvBuilder>);

  public abstract boolean isAutoDeployEnabled();

  public abstract A withAutoDeployEnabled(boolean);

  public abstract java.lang.Boolean hasAutoDeployEnabled();
}
