Compiled from "DefaultTransactionStatus.java"
public class org.springframework.transaction.support.DefaultTransactionStatus extends org.springframework.transaction.support.AbstractTransactionStatus {
  private final java.lang.Object transaction;

  private final boolean newTransaction;

  private final boolean newSynchronization;

  private final boolean readOnly;

  private final boolean debug;

  private final java.lang.Object suspendedResources;

  public org.springframework.transaction.support.DefaultTransactionStatus(java.lang.Object, boolean, boolean, boolean, boolean, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/transaction/support/AbstractTransactionStatus."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field transaction:Ljava/lang/Object;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field newTransaction:Z
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field newSynchronization:Z
      19: aload_0
      20: iload         4
      22: putfield      #5                  // Field readOnly:Z
      25: aload_0
      26: iload         5
      28: putfield      #6                  // Field debug:Z
      31: aload_0
      32: aload         6
      34: putfield      #7                  // Field suspendedResources:Ljava/lang/Object;
      37: return

  public java.lang.Object getTransaction();
    Code:
       0: aload_0
       1: getfield      #2                  // Field transaction:Ljava/lang/Object;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #8                  // String No transaction active
      14: invokestatic  #9                  // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      17: aload_0
      18: getfield      #2                  // Field transaction:Ljava/lang/Object;
      21: areturn

  public boolean hasTransaction();
    Code:
       0: aload_0
       1: getfield      #2                  // Field transaction:Ljava/lang/Object;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isNewTransaction();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method hasTransaction:()Z
       4: ifeq          18
       7: aload_0
       8: getfield      #3                  // Field newTransaction:Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public boolean isNewSynchronization();
    Code:
       0: aload_0
       1: getfield      #4                  // Field newSynchronization:Z
       4: ireturn

  public boolean isReadOnly();
    Code:
       0: aload_0
       1: getfield      #5                  // Field readOnly:Z
       4: ireturn

  public boolean isDebug();
    Code:
       0: aload_0
       1: getfield      #6                  // Field debug:Z
       4: ireturn

  public java.lang.Object getSuspendedResources();
    Code:
       0: aload_0
       1: getfield      #7                  // Field suspendedResources:Ljava/lang/Object;
       4: areturn

  public boolean isGlobalRollbackOnly();
    Code:
       0: aload_0
       1: getfield      #2                  // Field transaction:Ljava/lang/Object;
       4: instanceof    #11                 // class org/springframework/transaction/support/SmartTransactionObject
       7: ifeq          29
      10: aload_0
      11: getfield      #2                  // Field transaction:Ljava/lang/Object;
      14: checkcast     #11                 // class org/springframework/transaction/support/SmartTransactionObject
      17: invokeinterface #12,  1           // InterfaceMethod org/springframework/transaction/support/SmartTransactionObject.isRollbackOnly:()Z
      22: ifeq          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  public void flush();
    Code:
       0: aload_0
       1: getfield      #2                  // Field transaction:Ljava/lang/Object;
       4: instanceof    #11                 // class org/springframework/transaction/support/SmartTransactionObject
       7: ifeq          22
      10: aload_0
      11: getfield      #2                  // Field transaction:Ljava/lang/Object;
      14: checkcast     #11                 // class org/springframework/transaction/support/SmartTransactionObject
      17: invokeinterface #13,  1           // InterfaceMethod org/springframework/transaction/support/SmartTransactionObject.flush:()V
      22: return

  protected org.springframework.transaction.SavepointManager getSavepointManager();
    Code:
       0: aload_0
       1: getfield      #2                  // Field transaction:Ljava/lang/Object;
       4: astore_1
       5: aload_1
       6: instanceof    #14                 // class org/springframework/transaction/SavepointManager
       9: ifne          47
      12: new           #15                 // class org/springframework/transaction/NestedTransactionNotSupportedException
      15: dup
      16: new           #16                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #18                 // String Transaction object [
      25: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: getfield      #2                  // Field transaction:Ljava/lang/Object;
      32: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      35: ldc           #21                 // String ] does not support savepoints
      37: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokespecial #23                 // Method org/springframework/transaction/NestedTransactionNotSupportedException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_1
      48: checkcast     #14                 // class org/springframework/transaction/SavepointManager
      51: areturn

  public boolean isTransactionSavepointManager();
    Code:
       0: aload_0
       1: getfield      #2                  // Field transaction:Ljava/lang/Object;
       4: instanceof    #14                 // class org/springframework/transaction/SavepointManager
       7: ireturn
}
