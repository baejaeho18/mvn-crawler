Compiled from "DoubleHistogram.java"
public class org.HdrHistogram.DoubleHistogram extends org.HdrHistogram.EncodableHistogram implements java.io.Serializable {
  static final double highestAllowedValueEver;

  private long configuredHighestToLowestValueRatio;

  private volatile double currentLowestValueInAutoRange;

  private volatile double currentHighestValueLimitInAutoRange;

  org.HdrHistogram.AbstractHistogram integerValuesHistogram;

  volatile double doubleToIntegerValueConversionRatio;

  volatile double integerToDoubleValueConversionRatio;

  private boolean autoResize;

  private static final long serialVersionUID;

  private static final int DHIST_encodingCookie;

  private static final int DHIST_compressedEncodingCookie;

  public org.HdrHistogram.DoubleHistogram(int);
    Code:
       0: aload_0
       1: ldc2_w        #1                  // long 2l
       4: iload_1
       5: ldc           #3                  // class org/HdrHistogram/Histogram
       7: aconst_null
       8: invokespecial #4                  // Method "<init>":(JILjava/lang/Class;Lorg/HdrHistogram/AbstractHistogram;)V
      11: aload_0
      12: iconst_1
      13: invokevirtual #5                  // Method setAutoResize:(Z)V
      16: return

  public org.HdrHistogram.DoubleHistogram(int, java.lang.Class<? extends org.HdrHistogram.AbstractHistogram>);
    Code:
       0: aload_0
       1: ldc2_w        #1                  // long 2l
       4: iload_1
       5: aload_2
       6: aconst_null
       7: invokespecial #4                  // Method "<init>":(JILjava/lang/Class;Lorg/HdrHistogram/AbstractHistogram;)V
      10: aload_0
      11: iconst_1
      12: invokevirtual #5                  // Method setAutoResize:(Z)V
      15: return

  public org.HdrHistogram.DoubleHistogram(long, int);
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: ldc           #3                  // class org/HdrHistogram/Histogram
       5: invokespecial #6                  // Method "<init>":(JILjava/lang/Class;)V
       8: return

  protected org.HdrHistogram.DoubleHistogram(long, int, java.lang.Class<? extends org.HdrHistogram.AbstractHistogram>);
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: aload         4
       5: aconst_null
       6: invokespecial #4                  // Method "<init>":(JILjava/lang/Class;Lorg/HdrHistogram/AbstractHistogram;)V
       9: return

  private org.HdrHistogram.DoubleHistogram(long, int, java.lang.Class<? extends org.HdrHistogram.AbstractHistogram>, org.HdrHistogram.AbstractHistogram);
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: aload         4
       5: aload         5
       7: iconst_0
       8: invokespecial #7                  // Method "<init>":(JILjava/lang/Class;Lorg/HdrHistogram/AbstractHistogram;Z)V
      11: return

  private org.HdrHistogram.DoubleHistogram(long, int, java.lang.Class<? extends org.HdrHistogram.AbstractHistogram>, org.HdrHistogram.AbstractHistogram, boolean);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method org/HdrHistogram/EncodableHistogram."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #9                  // Field autoResize:Z
       9: lload_1
      10: ldc2_w        #1                  // long 2l
      13: lcmp
      14: ifge          27
      17: new           #10                 // class java/lang/IllegalArgumentException
      20: dup
      21: ldc           #11                 // String highestToLowestValueRatio must be >= 2
      23: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: lload_1
      28: l2d
      29: ldc2_w        #13                 // double 10.0d
      32: iload_3
      33: i2d
      34: invokestatic  #15                 // Method java/lang/Math.pow:(DD)D
      37: dmul
      38: ldc2_w        #16                 // double 2.305843009213694E18d
      41: dcmpl
      42: iflt          55
      45: new           #10                 // class java/lang/IllegalArgumentException
      48: dup
      49: ldc           #18                 // String highestToLowestValueRatio * (10^numberOfSignificantValueDigits) must be < (1L << 61)
      51: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload         4
      57: ldc           #19                 // class org/HdrHistogram/AtomicHistogram
      59: if_acmpne     72
      62: new           #10                 // class java/lang/IllegalArgumentException
      65: dup
      66: ldc           #20                 // String AtomicHistogram cannot be used as an internal counts histogram (does not support shifting). Use ConcurrentHistogram instead.
      68: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: aload_0
      73: lload_1
      74: iload_3
      75: invokespecial #21                 // Method deriveIntegerValueRange:(JI)J
      78: lstore        7
      80: aload         5
      82: ifnonnull     166
      85: aload         4
      87: iconst_3
      88: anewarray     #22                 // class java/lang/Class
      91: dup
      92: iconst_0
      93: getstatic     #23                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
      96: aastore
      97: dup
      98: iconst_1
      99: getstatic     #23                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
     102: aastore
     103: dup
     104: iconst_2
     105: getstatic     #24                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
     108: aastore
     109: invokevirtual #25                 // Method java/lang/Class.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
     112: astore        12
     114: aload         12
     116: iconst_3
     117: anewarray     #26                 // class java/lang/Object
     120: dup
     121: iconst_0
     122: lconst_1
     123: invokestatic  #27                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     126: aastore
     127: dup
     128: iconst_1
     129: lload         7
     131: lconst_1
     132: lsub
     133: invokestatic  #27                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     136: aastore
     137: dup
     138: iconst_2
     139: iload_3
     140: invokestatic  #28                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     143: aastore
     144: invokevirtual #29                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
     147: checkcast     #30                 // class org/HdrHistogram/AbstractHistogram
     150: astore        9
     152: ldc2_w        #31                 // double 2.0d
     155: ldc2_w        #33                 // double 800.0d
     158: invokestatic  #15                 // Method java/lang/Math.pow:(DD)D
     161: dstore        10
     163: goto          280
     166: iload         6
     168: ifeq          220
     171: aload         4
     173: iconst_1
     174: anewarray     #22                 // class java/lang/Class
     177: dup
     178: iconst_0
     179: ldc           #30                 // class org/HdrHistogram/AbstractHistogram
     181: aastore
     182: invokevirtual #25                 // Method java/lang/Class.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
     185: astore        12
     187: aload         12
     189: iconst_1
     190: anewarray     #26                 // class java/lang/Object
     193: dup
     194: iconst_0
     195: aload         5
     197: aastore
     198: invokevirtual #29                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
     201: checkcast     #30                 // class org/HdrHistogram/AbstractHistogram
     204: astore        9
     206: ldc2_w        #31                 // double 2.0d
     209: ldc2_w        #33                 // double 800.0d
     212: invokestatic  #15                 // Method java/lang/Math.pow:(DD)D
     215: dstore        10
     217: goto          280
     220: aload         5
     222: invokevirtual #35                 // Method org/HdrHistogram/AbstractHistogram.getLowestDiscernibleValue:()J
     225: lconst_1
     226: lcmp
     227: ifne          252
     230: aload         5
     232: invokevirtual #36                 // Method org/HdrHistogram/AbstractHistogram.getHighestTrackableValue:()J
     235: lload         7
     237: lconst_1
     238: lsub
     239: lcmp
     240: ifne          252
     243: aload         5
     245: invokevirtual #37                 // Method org/HdrHistogram/AbstractHistogram.getNumberOfSignificantValueDigits:()I
     248: iload_3
     249: if_icmpeq     262
     252: new           #38                 // class java/lang/IllegalStateException
     255: dup
     256: ldc           #39                 // String integer values histogram does not match stated parameters.
     258: invokespecial #40                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     261: athrow
     262: aload         5
     264: astore        9
     266: aload         5
     268: invokevirtual #41                 // Method org/HdrHistogram/AbstractHistogram.getIntegerToDoubleValueConversionRatio:()D
     271: aload         5
     273: getfield      #42                 // Field org/HdrHistogram/AbstractHistogram.subBucketHalfCount:I
     276: i2d
     277: dmul
     278: dstore        10
     280: aload_0
     281: lload_1
     282: dload         10
     284: aload         9
     286: invokespecial #43                 // Method init:(JDLorg/HdrHistogram/AbstractHistogram;)V
     289: goto          340
     292: astore        7
     294: new           #10                 // class java/lang/IllegalArgumentException
     297: dup
     298: aload         7
     300: invokespecial #45                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
     303: athrow
     304: astore        7
     306: new           #10                 // class java/lang/IllegalArgumentException
     309: dup
     310: aload         7
     312: invokespecial #45                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
     315: athrow
     316: astore        7
     318: new           #10                 // class java/lang/IllegalArgumentException
     321: dup
     322: aload         7
     324: invokespecial #45                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
     327: athrow
     328: astore        7
     330: new           #10                 // class java/lang/IllegalArgumentException
     333: dup
     334: aload         7
     336: invokespecial #45                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
     339: athrow
     340: return
    Exception table:
       from    to  target type
           9   289   292   Class java/lang/NoSuchMethodException
           9   289   304   Class java/lang/IllegalAccessException
           9   289   316   Class java/lang/InstantiationException
           9   289   328   Class java/lang/reflect/InvocationTargetException

  public org.HdrHistogram.DoubleHistogram(org.HdrHistogram.DoubleHistogram);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #49                 // Field configuredHighestToLowestValueRatio:J
       5: aload_1
       6: invokevirtual #50                 // Method getNumberOfSignificantValueDigits:()I
       9: aload_1
      10: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
      13: invokevirtual #52                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      16: aload_1
      17: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
      20: iconst_1
      21: invokespecial #7                  // Method "<init>":(JILjava/lang/Class;Lorg/HdrHistogram/AbstractHistogram;Z)V
      24: aload_0
      25: aload_1
      26: getfield      #9                  // Field autoResize:Z
      29: putfield      #9                  // Field autoResize:Z
      32: aload_0
      33: aload_1
      34: getfield      #53                 // Field currentLowestValueInAutoRange:D
      37: aload_1
      38: getfield      #54                 // Field currentHighestValueLimitInAutoRange:D
      41: invokespecial #55                 // Method setTrackableValueRange:(DD)V
      44: return

  private void init(long, double, org.HdrHistogram.AbstractHistogram);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #49                 // Field configuredHighestToLowestValueRatio:J
       5: aload_0
       6: aload         5
       8: putfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
      11: aload_0
      12: lload_1
      13: invokespecial #56                 // Method deriveInternalHighestToLowestValueRatio:(J)J
      16: lstore        6
      18: aload_0
      19: dload_3
      20: dload_3
      21: lload         6
      23: l2d
      24: dmul
      25: invokespecial #55                 // Method setTrackableValueRange:(DD)V
      28: return

  private void setTrackableValueRange(double, double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #53                 // Field currentLowestValueInAutoRange:D
       5: aload_0
       6: dload_3
       7: putfield      #54                 // Field currentHighestValueLimitInAutoRange:D
      10: aload_0
      11: dload_1
      12: aload_0
      13: invokespecial #57                 // Method getLowestTrackingIntegerValue:()J
      16: l2d
      17: ddiv
      18: putfield      #58                 // Field integerToDoubleValueConversionRatio:D
      21: aload_0
      22: dconst_1
      23: aload_0
      24: getfield      #58                 // Field integerToDoubleValueConversionRatio:D
      27: ddiv
      28: putfield      #59                 // Field doubleToIntegerValueConversionRatio:D
      31: aload_0
      32: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
      35: aload_0
      36: getfield      #58                 // Field integerToDoubleValueConversionRatio:D
      39: invokevirtual #60                 // Method org/HdrHistogram/AbstractHistogram.setIntegerToDoubleValueConversionRatio:(D)V
      42: return

  public boolean isAutoResize();
    Code:
       0: aload_0
       1: getfield      #9                  // Field autoResize:Z
       4: ireturn

  public void setAutoResize(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field autoResize:Z
       5: return

  public void recordValue(double) throws java.lang.ArrayIndexOutOfBoundsException;
    Code:
       0: aload_0
       1: dload_1
       2: invokespecial #61                 // Method recordSingleValue:(D)V
       5: return

  public void recordValueWithCount(double, long) throws java.lang.ArrayIndexOutOfBoundsException;
    Code:
       0: aload_0
       1: lload_3
       2: dload_1
       3: invokespecial #62                 // Method recordCountAtValue:(JD)V
       6: return

  public void recordValueWithExpectedInterval(double, double) throws java.lang.ArrayIndexOutOfBoundsException;
    Code:
       0: aload_0
       1: dload_1
       2: lconst_1
       3: dload_3
       4: invokespecial #63                 // Method recordValueWithCountAndExpectedInterval:(DJD)V
       7: return

  private void recordCountAtValue(long, double) throws java.lang.ArrayIndexOutOfBoundsException;
    Code:
       0: dload_3
       1: aload_0
       2: getfield      #53                 // Field currentLowestValueInAutoRange:D
       5: dcmpg
       6: iflt          18
       9: dload_3
      10: aload_0
      11: getfield      #54                 // Field currentHighestValueLimitInAutoRange:D
      14: dcmpl
      15: iflt          23
      18: aload_0
      19: dload_3
      20: invokespecial #64                 // Method autoAdjustRangeForValue:(D)V
      23: dload_3
      24: aload_0
      25: getfield      #59                 // Field doubleToIntegerValueConversionRatio:D
      28: dmul
      29: d2l
      30: lstore        5
      32: aload_0
      33: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
      36: lload         5
      38: lload_1
      39: invokevirtual #65                 // Method org/HdrHistogram/AbstractHistogram.recordValueWithCount:(JJ)V
      42: return

  private void recordSingleValue(double) throws java.lang.ArrayIndexOutOfBoundsException;
    Code:
       0: dload_1
       1: aload_0
       2: getfield      #53                 // Field currentLowestValueInAutoRange:D
       5: dcmpg
       6: iflt          18
       9: dload_1
      10: aload_0
      11: getfield      #54                 // Field currentHighestValueLimitInAutoRange:D
      14: dcmpl
      15: iflt          23
      18: aload_0
      19: dload_1
      20: invokespecial #64                 // Method autoAdjustRangeForValue:(D)V
      23: dload_1
      24: aload_0
      25: getfield      #59                 // Field doubleToIntegerValueConversionRatio:D
      28: dmul
      29: d2l
      30: lstore_3
      31: aload_0
      32: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
      35: lload_3
      36: invokevirtual #66                 // Method org/HdrHistogram/AbstractHistogram.recordValue:(J)V
      39: return

  private void recordValueWithCountAndExpectedInterval(double, long, double) throws java.lang.ArrayIndexOutOfBoundsException;
    Code:
       0: aload_0
       1: lload_3
       2: dload_1
       3: invokespecial #62                 // Method recordCountAtValue:(JD)V
       6: dload         5
       8: dconst_0
       9: dcmpg
      10: ifgt          14
      13: return
      14: dload_1
      15: dload         5
      17: dsub
      18: dstore        7
      20: dload         7
      22: dload         5
      24: dcmpl
      25: iflt          45
      28: aload_0
      29: lload_3
      30: dload         7
      32: invokespecial #62                 // Method recordCountAtValue:(JD)V
      35: dload         7
      37: dload         5
      39: dsub
      40: dstore        7
      42: goto          20
      45: return

  private void autoAdjustRangeForValue(double);
    Code:
       0: dload_1
       1: dconst_0
       2: dcmpl
       3: ifne          7
       6: return
       7: aload_0
       8: dload_1
       9: invokespecial #67                 // Method autoAdjustRangeForValueSlowPath:(D)V
      12: return

  private synchronized void autoAdjustRangeForValueSlowPath(double);
    Code:
       0: dload_1
       1: aload_0
       2: getfield      #53                 // Field currentLowestValueInAutoRange:D
       5: dcmpg
       6: ifge          58
       9: dload_1
      10: dconst_0
      11: dcmpg
      12: ifge          25
      15: new           #68                 // class java/lang/ArrayIndexOutOfBoundsException
      18: dup
      19: ldc           #69                 // String Negative values cannot be recorded
      21: invokespecial #70                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: aload_0
      26: aload_0
      27: getfield      #53                 // Field currentLowestValueInAutoRange:D
      30: dload_1
      31: ddiv
      32: invokestatic  #71                 // Method java/lang/Math.ceil:(D)D
      35: dconst_1
      36: dsub
      37: invokespecial #72                 // Method findCappedContainingBinaryOrderOfMagnitude:(D)I
      40: istore_3
      41: aload_0
      42: iload_3
      43: invokespecial #73                 // Method shiftCoveredRangeToTheRight:(I)V
      46: dload_1
      47: aload_0
      48: getfield      #53                 // Field currentLowestValueInAutoRange:D
      51: dcmpg
      52: iflt          25
      55: goto          144
      58: dload_1
      59: aload_0
      60: getfield      #54                 // Field currentHighestValueLimitInAutoRange:D
      63: dcmpl
      64: iflt          144
      67: dload_1
      68: getstatic     #74                 // Field highestAllowedValueEver:D
      71: dcmpl
      72: ifle          109
      75: new           #68                 // class java/lang/ArrayIndexOutOfBoundsException
      78: dup
      79: new           #75                 // class java/lang/StringBuilder
      82: dup
      83: invokespecial #76                 // Method java/lang/StringBuilder."<init>":()V
      86: ldc           #77                 // String Values above
      88: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: getstatic     #74                 // Field highestAllowedValueEver:D
      94: invokevirtual #79                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
      97: ldc           #80                 // String  cannot be recorded
      99: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     105: invokespecial #70                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
     108: athrow
     109: aload_0
     110: dload_1
     111: dload_1
     112: invokestatic  #82                 // Method java/lang/Math.ulp:(D)D
     115: dadd
     116: aload_0
     117: getfield      #54                 // Field currentHighestValueLimitInAutoRange:D
     120: ddiv
     121: invokestatic  #71                 // Method java/lang/Math.ceil:(D)D
     124: dconst_1
     125: dsub
     126: invokespecial #72                 // Method findCappedContainingBinaryOrderOfMagnitude:(D)I
     129: istore_3
     130: aload_0
     131: iload_3
     132: invokespecial #83                 // Method shiftCoveredRangeToTheLeft:(I)V
     135: dload_1
     136: aload_0
     137: getfield      #54                 // Field currentHighestValueLimitInAutoRange:D
     140: dcmpl
     141: ifge          109
     144: goto          213
     147: astore_3
     148: new           #68                 // class java/lang/ArrayIndexOutOfBoundsException
     151: dup
     152: new           #75                 // class java/lang/StringBuilder
     155: dup
     156: invokespecial #76                 // Method java/lang/StringBuilder."<init>":()V
     159: ldc           #84                 // String The value
     161: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: dload_1
     165: invokevirtual #79                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
     168: ldc           #85                 // String  is out of bounds for histogram, current covered range [
     170: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     173: aload_0
     174: getfield      #53                 // Field currentLowestValueInAutoRange:D
     177: invokevirtual #79                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
     180: ldc           #86                 // String ,
     182: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     185: aload_0
     186: getfield      #54                 // Field currentHighestValueLimitInAutoRange:D
     189: invokevirtual #79                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
     192: ldc           #87                 // String ) cannot be extended any further.\n
     194: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     197: ldc           #88                 // String Caused by:
     199: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     202: aload_3
     203: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     206: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     209: invokespecial #70                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
     212: athrow
     213: return
    Exception table:
       from    to  target type
           0   144   147   Class java/lang/ArrayIndexOutOfBoundsException

  private void shiftCoveredRangeToTheRight(int);
    Code:
       0: aload_0
       1: getfield      #53                 // Field currentLowestValueInAutoRange:D
       4: dstore_2
       5: aload_0
       6: getfield      #54                 // Field currentHighestValueLimitInAutoRange:D
       9: dstore        4
      11: dconst_1
      12: lconst_1
      13: iload_1
      14: lshl
      15: l2d
      16: ddiv
      17: dstore        6
      19: aload_0
      20: dup
      21: getfield      #54                 // Field currentHighestValueLimitInAutoRange:D
      24: dload         6
      26: dmul
      27: putfield      #54                 // Field currentHighestValueLimitInAutoRange:D
      30: aload_0
      31: invokevirtual #90                 // Method getTotalCount:()J
      34: aload_0
      35: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
      38: iconst_0
      39: invokevirtual #91                 // Method org/HdrHistogram/AbstractHistogram.getCountAtIndex:(I)J
      42: lcmp
      43: ifle          81
      46: aload_0
      47: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
      50: iload_1
      51: invokevirtual #92                 // Method org/HdrHistogram/AbstractHistogram.shiftValuesLeft:(I)V
      54: goto          81
      57: astore        8
      59: aload_0
      60: iload_1
      61: aload         8
      63: invokespecial #93                 // Method handleShiftValuesException:(ILjava/lang/Exception;)V
      66: dload         4
      68: dload         6
      70: ddiv
      71: dstore        4
      73: aload_0
      74: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
      77: iload_1
      78: invokevirtual #92                 // Method org/HdrHistogram/AbstractHistogram.shiftValuesLeft:(I)V
      81: dload_2
      82: dload         6
      84: dmul
      85: dstore_2
      86: dload         4
      88: dload         6
      90: dmul
      91: dstore        4
      93: aload_0
      94: dload_2
      95: dload         4
      97: invokespecial #55                 // Method setTrackableValueRange:(DD)V
     100: goto          115
     103: astore        9
     105: aload_0
     106: dload_2
     107: dload         4
     109: invokespecial #55                 // Method setTrackableValueRange:(DD)V
     112: aload         9
     114: athrow
     115: return
    Exception table:
       from    to  target type
          46    54    57   Class java/lang/ArrayIndexOutOfBoundsException
          11    93   103   any
         103   105   103   any

  private void shiftCoveredRangeToTheLeft(int);
    Code:
       0: aload_0
       1: getfield      #53                 // Field currentLowestValueInAutoRange:D
       4: dstore_2
       5: aload_0
       6: getfield      #54                 // Field currentHighestValueLimitInAutoRange:D
       9: dstore        4
      11: dconst_1
      12: lconst_1
      13: iload_1
      14: lshl
      15: l2d
      16: dmul
      17: dstore        6
      19: aload_0
      20: dup
      21: getfield      #53                 // Field currentLowestValueInAutoRange:D
      24: dload         6
      26: dmul
      27: putfield      #53                 // Field currentLowestValueInAutoRange:D
      30: aload_0
      31: invokevirtual #90                 // Method getTotalCount:()J
      34: aload_0
      35: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
      38: iconst_0
      39: invokevirtual #91                 // Method org/HdrHistogram/AbstractHistogram.getCountAtIndex:(I)J
      42: lcmp
      43: ifle          83
      46: aload_0
      47: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
      50: iload_1
      51: invokevirtual #94                 // Method org/HdrHistogram/AbstractHistogram.shiftValuesRight:(I)V
      54: dload_2
      55: dload         6
      57: dmul
      58: dstore_2
      59: dload         4
      61: dload         6
      63: dmul
      64: dstore        4
      66: goto          83
      69: astore        8
      71: aload_0
      72: iload_1
      73: aload         8
      75: invokespecial #93                 // Method handleShiftValuesException:(ILjava/lang/Exception;)V
      78: dload_2
      79: dload         6
      81: ddiv
      82: dstore_2
      83: dload_2
      84: dload         6
      86: dmul
      87: dstore_2
      88: dload         4
      90: dload         6
      92: dmul
      93: dstore        4
      95: aload_0
      96: dload_2
      97: dload         4
      99: invokespecial #55                 // Method setTrackableValueRange:(DD)V
     102: goto          117
     105: astore        9
     107: aload_0
     108: dload_2
     109: dload         4
     111: invokespecial #55                 // Method setTrackableValueRange:(DD)V
     114: aload         9
     116: athrow
     117: return
    Exception table:
       from    to  target type
          46    66    69   Class java/lang/ArrayIndexOutOfBoundsException
          11    95   105   any
         105   107   105   any

  private void handleShiftValuesException(int, java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #9                  // Field autoResize:Z
       4: ifne          34
       7: new           #68                 // class java/lang/ArrayIndexOutOfBoundsException
      10: dup
      11: new           #75                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #76                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #95                 // String Value outside of histogram covered range.\nCaused by:
      20: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_2
      24: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      27: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #70                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
      38: invokevirtual #36                 // Method org/HdrHistogram/AbstractHistogram.getHighestTrackableValue:()J
      41: lstore_3
      42: lload_3
      43: invokestatic  #96                 // Method findContainingBinaryOrderOfMagnitude:(J)I
      46: istore        5
      48: iload_1
      49: iload         5
      51: iadd
      52: istore        6
      54: iload         6
      56: bipush        63
      58: if_icmple     108
      61: new           #68                 // class java/lang/ArrayIndexOutOfBoundsException
      64: dup
      65: new           #75                 // class java/lang/StringBuilder
      68: dup
      69: invokespecial #76                 // Method java/lang/StringBuilder."<init>":()V
      72: ldc           #97                 // String Cannot resize histogram covered range beyond (1L << 63) / (1L <<
      74: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_0
      78: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
      81: getfield      #98                 // Field org/HdrHistogram/AbstractHistogram.subBucketHalfCountMagnitude:I
      84: invokevirtual #99                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      87: ldc           #100                // String ) - 1.\n
      89: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: ldc           #88                 // String Caused by:
      94: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: aload_2
      98: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     101: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     104: invokespecial #70                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
     107: athrow
     108: lconst_1
     109: iload         6
     111: lshl
     112: lconst_1
     113: lsub
     114: lstore        7
     116: aload_0
     117: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
     120: lload         7
     122: invokevirtual #101                // Method org/HdrHistogram/AbstractHistogram.resize:(J)V
     125: aload_0
     126: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
     129: lload         7
     131: putfield      #102                // Field org/HdrHistogram/AbstractHistogram.highestTrackableValue:J
     134: aload_0
     135: dup
     136: getfield      #49                 // Field configuredHighestToLowestValueRatio:J
     139: iload_1
     140: lshl
     141: putfield      #49                 // Field configuredHighestToLowestValueRatio:J
     144: return

  public void reset();
    Code:
       0: aload_0
       1: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
       4: invokevirtual #103                // Method org/HdrHistogram/AbstractHistogram.clearCounts:()V
       7: return

  public org.HdrHistogram.DoubleHistogram copy();
    Code:
       0: new           #104                // class org/HdrHistogram/DoubleHistogram
       3: dup
       4: aload_0
       5: getfield      #49                 // Field configuredHighestToLowestValueRatio:J
       8: aload_0
       9: invokevirtual #50                 // Method getNumberOfSignificantValueDigits:()I
      12: invokespecial #105                // Method "<init>":(JI)V
      15: astore_1
      16: aload_1
      17: aload_0
      18: getfield      #53                 // Field currentLowestValueInAutoRange:D
      21: aload_0
      22: getfield      #54                 // Field currentHighestValueLimitInAutoRange:D
      25: invokespecial #55                 // Method setTrackableValueRange:(DD)V
      28: aload_0
      29: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
      32: aload_1
      33: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
      36: invokevirtual #106                // Method org/HdrHistogram/AbstractHistogram.copyInto:(Lorg/HdrHistogram/AbstractHistogram;)V
      39: aload_1
      40: areturn

  public org.HdrHistogram.DoubleHistogram copyCorrectedForCoordinatedOmission(double);
    Code:
       0: new           #104                // class org/HdrHistogram/DoubleHistogram
       3: dup
       4: aload_0
       5: getfield      #49                 // Field configuredHighestToLowestValueRatio:J
       8: aload_0
       9: invokevirtual #50                 // Method getNumberOfSignificantValueDigits:()I
      12: invokespecial #105                // Method "<init>":(JI)V
      15: astore_3
      16: aload_3
      17: aload_0
      18: getfield      #53                 // Field currentLowestValueInAutoRange:D
      21: aload_0
      22: getfield      #54                 // Field currentHighestValueLimitInAutoRange:D
      25: invokespecial #55                 // Method setTrackableValueRange:(DD)V
      28: aload_3
      29: aload_0
      30: dload_1
      31: invokevirtual #107                // Method addWhileCorrectingForCoordinatedOmission:(Lorg/HdrHistogram/DoubleHistogram;D)V
      34: aload_3
      35: areturn

  public void copyInto(org.HdrHistogram.DoubleHistogram);
    Code:
       0: aload_1
       1: invokevirtual #108                // Method reset:()V
       4: aload_1
       5: aload_0
       6: invokevirtual #109                // Method add:(Lorg/HdrHistogram/DoubleHistogram;)V
       9: aload_1
      10: aload_0
      11: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
      14: getfield      #110                // Field org/HdrHistogram/AbstractHistogram.startTimeStampMsec:J
      17: invokevirtual #111                // Method setStartTimeStamp:(J)V
      20: aload_1
      21: aload_0
      22: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
      25: getfield      #112                // Field org/HdrHistogram/AbstractHistogram.endTimeStampMsec:J
      28: invokevirtual #113                // Method setEndTimeStamp:(J)V
      31: return

  public void copyIntoCorrectedForCoordinatedOmission(org.HdrHistogram.DoubleHistogram, double);
    Code:
       0: aload_1
       1: invokevirtual #108                // Method reset:()V
       4: aload_1
       5: aload_0
       6: dload_2
       7: invokevirtual #107                // Method addWhileCorrectingForCoordinatedOmission:(Lorg/HdrHistogram/DoubleHistogram;D)V
      10: aload_1
      11: aload_0
      12: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
      15: getfield      #110                // Field org/HdrHistogram/AbstractHistogram.startTimeStampMsec:J
      18: invokevirtual #111                // Method setStartTimeStamp:(J)V
      21: aload_1
      22: aload_0
      23: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
      26: getfield      #112                // Field org/HdrHistogram/AbstractHistogram.endTimeStampMsec:J
      29: invokevirtual #113                // Method setEndTimeStamp:(J)V
      32: return

  public void add(org.HdrHistogram.DoubleHistogram) throws java.lang.ArrayIndexOutOfBoundsException;
    Code:
       0: aload_1
       1: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
       4: getfield      #114                // Field org/HdrHistogram/AbstractHistogram.countsArrayLength:I
       7: istore_2
       8: aload_1
       9: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
      12: astore_3
      13: iconst_0
      14: istore        4
      16: iload         4
      18: iload_2
      19: if_icmpge     61
      22: aload_3
      23: iload         4
      25: invokevirtual #91                 // Method org/HdrHistogram/AbstractHistogram.getCountAtIndex:(I)J
      28: lstore        5
      30: lload         5
      32: lconst_0
      33: lcmp
      34: ifle          55
      37: aload_0
      38: aload_3
      39: iload         4
      41: invokevirtual #115                // Method org/HdrHistogram/AbstractHistogram.valueFromIndex:(I)J
      44: l2d
      45: aload_1
      46: getfield      #58                 // Field integerToDoubleValueConversionRatio:D
      49: dmul
      50: lload         5
      52: invokevirtual #116                // Method recordValueWithCount:(DJ)V
      55: iinc          4, 1
      58: goto          16
      61: return

  public void addWhileCorrectingForCoordinatedOmission(org.HdrHistogram.DoubleHistogram, double);
    Code:
       0: aload_0
       1: astore        4
       3: aload_1
       4: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
       7: invokevirtual #117                // Method org/HdrHistogram/AbstractHistogram.recordedValues:()Lorg/HdrHistogram/AbstractHistogram$RecordedValues;
      10: invokevirtual #118                // Method org/HdrHistogram/AbstractHistogram$RecordedValues.iterator:()Ljava/util/Iterator;
      13: astore        5
      15: aload         5
      17: invokeinterface #119,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          62
      25: aload         5
      27: invokeinterface #120,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #121                // class org/HdrHistogram/HistogramIterationValue
      35: astore        6
      37: aload         4
      39: aload         6
      41: invokevirtual #122                // Method org/HdrHistogram/HistogramIterationValue.getValueIteratedTo:()J
      44: l2d
      45: aload_0
      46: getfield      #58                 // Field integerToDoubleValueConversionRatio:D
      49: dmul
      50: aload         6
      52: invokevirtual #123                // Method org/HdrHistogram/HistogramIterationValue.getCountAtValueIteratedTo:()J
      55: dload_2
      56: invokespecial #63                 // Method recordValueWithCountAndExpectedInterval:(DJD)V
      59: goto          15
      62: return

  public void subtract(org.HdrHistogram.DoubleHistogram);
    Code:
       0: aload_1
       1: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
       4: getfield      #114                // Field org/HdrHistogram/AbstractHistogram.countsArrayLength:I
       7: istore_2
       8: aload_1
       9: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
      12: astore_3
      13: iconst_0
      14: istore        4
      16: iload         4
      18: iload_2
      19: if_icmpge     135
      22: aload_3
      23: iload         4
      25: invokevirtual #91                 // Method org/HdrHistogram/AbstractHistogram.getCountAtIndex:(I)J
      28: lstore        5
      30: lload         5
      32: lconst_0
      33: lcmp
      34: ifle          129
      37: aload_3
      38: iload         4
      40: invokevirtual #115                // Method org/HdrHistogram/AbstractHistogram.valueFromIndex:(I)J
      43: l2d
      44: aload_1
      45: getfield      #58                 // Field integerToDoubleValueConversionRatio:D
      48: dmul
      49: dstore        7
      51: aload_0
      52: dload         7
      54: invokevirtual #124                // Method getCountAtValue:(D)J
      57: lload         5
      59: lcmp
      60: ifge          120
      63: new           #10                 // class java/lang/IllegalArgumentException
      66: dup
      67: new           #75                 // class java/lang/StringBuilder
      70: dup
      71: invokespecial #76                 // Method java/lang/StringBuilder."<init>":()V
      74: ldc           #125                // String otherHistogram count (
      76: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: lload         5
      81: invokevirtual #126                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      84: ldc           #127                // String ) at value
      86: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: dload         7
      91: invokevirtual #79                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
      94: ldc           #128                // String  is larger than this one\'s (
      96: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: aload_0
     100: dload         7
     102: invokevirtual #124                // Method getCountAtValue:(D)J
     105: invokevirtual #126                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     108: ldc           #129                // String )
     110: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     116: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     119: athrow
     120: aload_0
     121: dload         7
     123: lload         5
     125: lneg
     126: invokevirtual #116                // Method recordValueWithCount:(DJ)V
     129: iinc          4, 1
     132: goto          16
     135: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #104                // class org/HdrHistogram/DoubleHistogram
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #104                // class org/HdrHistogram/DoubleHistogram
      20: astore_2
      21: aload_0
      22: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
      25: aload_2
      26: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
      29: invokevirtual #130                // Method org/HdrHistogram/AbstractHistogram.equals:(Ljava/lang/Object;)Z
      32: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
       4: invokevirtual #131                // Method org/HdrHistogram/AbstractHistogram.hashCode:()I
       7: ireturn

  public long getTotalCount();
    Code:
       0: aload_0
       1: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
       4: invokevirtual #132                // Method org/HdrHistogram/AbstractHistogram.getTotalCount:()J
       7: lreturn

  double getCurrentLowestTrackableNonZeroValue();
    Code:
       0: aload_0
       1: getfield      #53                 // Field currentLowestValueInAutoRange:D
       4: dreturn

  double getCurrentHighestTrackableValue();
    Code:
       0: aload_0
       1: getfield      #54                 // Field currentHighestValueLimitInAutoRange:D
       4: dreturn

  public double getIntegerToDoubleValueConversionRatio();
    Code:
       0: aload_0
       1: getfield      #58                 // Field integerToDoubleValueConversionRatio:D
       4: dreturn

  public int getNumberOfSignificantValueDigits();
    Code:
       0: aload_0
       1: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
       4: getfield      #133                // Field org/HdrHistogram/AbstractHistogram.numberOfSignificantValueDigits:I
       7: ireturn

  public long getHighestToLowestValueRatio();
    Code:
       0: aload_0
       1: getfield      #49                 // Field configuredHighestToLowestValueRatio:J
       4: lreturn

  public double sizeOfEquivalentValueRange(double);
    Code:
       0: aload_0
       1: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
       4: dload_1
       5: aload_0
       6: getfield      #59                 // Field doubleToIntegerValueConversionRatio:D
       9: dmul
      10: d2l
      11: invokevirtual #134                // Method org/HdrHistogram/AbstractHistogram.sizeOfEquivalentValueRange:(J)J
      14: l2d
      15: aload_0
      16: getfield      #58                 // Field integerToDoubleValueConversionRatio:D
      19: dmul
      20: dreturn

  public double lowestEquivalentValue(double);
    Code:
       0: aload_0
       1: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
       4: dload_1
       5: aload_0
       6: getfield      #59                 // Field doubleToIntegerValueConversionRatio:D
       9: dmul
      10: d2l
      11: invokevirtual #135                // Method org/HdrHistogram/AbstractHistogram.lowestEquivalentValue:(J)J
      14: l2d
      15: aload_0
      16: getfield      #58                 // Field integerToDoubleValueConversionRatio:D
      19: dmul
      20: dreturn

  public double highestEquivalentValue(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokevirtual #136                // Method nextNonEquivalentValue:(D)D
       5: dstore_3
       6: dload_3
       7: ldc2_w        #31                 // double 2.0d
      10: dload_3
      11: invokestatic  #82                 // Method java/lang/Math.ulp:(D)D
      14: dmul
      15: dsub
      16: dstore        5
      18: dload         5
      20: dload         5
      22: invokestatic  #82                 // Method java/lang/Math.ulp:(D)D
      25: dadd
      26: dload_3
      27: dcmpg
      28: ifge          44
      31: dload         5
      33: dload         5
      35: invokestatic  #82                 // Method java/lang/Math.ulp:(D)D
      38: dadd
      39: dstore        5
      41: goto          18
      44: dload         5
      46: dreturn

  public double medianEquivalentValue(double);
    Code:
       0: aload_0
       1: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
       4: dload_1
       5: aload_0
       6: getfield      #59                 // Field doubleToIntegerValueConversionRatio:D
       9: dmul
      10: d2l
      11: invokevirtual #137                // Method org/HdrHistogram/AbstractHistogram.medianEquivalentValue:(J)J
      14: l2d
      15: aload_0
      16: getfield      #58                 // Field integerToDoubleValueConversionRatio:D
      19: dmul
      20: dreturn

  public double nextNonEquivalentValue(double);
    Code:
       0: aload_0
       1: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
       4: dload_1
       5: aload_0
       6: getfield      #59                 // Field doubleToIntegerValueConversionRatio:D
       9: dmul
      10: d2l
      11: invokevirtual #138                // Method org/HdrHistogram/AbstractHistogram.nextNonEquivalentValue:(J)J
      14: l2d
      15: aload_0
      16: getfield      #58                 // Field integerToDoubleValueConversionRatio:D
      19: dmul
      20: dreturn

  public boolean valuesAreEquivalent(double, double);
    Code:
       0: aload_0
       1: dload_1
       2: invokevirtual #139                // Method lowestEquivalentValue:(D)D
       5: aload_0
       6: dload_3
       7: invokevirtual #139                // Method lowestEquivalentValue:(D)D
      10: dcmpl
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public int getEstimatedFootprintInBytes();
    Code:
       0: aload_0
       1: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
       4: invokevirtual #140                // Method org/HdrHistogram/AbstractHistogram._getEstimatedFootprintInBytes:()I
       7: ireturn

  public long getStartTimeStamp();
    Code:
       0: aload_0
       1: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
       4: invokevirtual #141                // Method org/HdrHistogram/AbstractHistogram.getStartTimeStamp:()J
       7: lreturn

  public void setStartTimeStamp(long);
    Code:
       0: aload_0
       1: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
       4: lload_1
       5: invokevirtual #142                // Method org/HdrHistogram/AbstractHistogram.setStartTimeStamp:(J)V
       8: return

  public long getEndTimeStamp();
    Code:
       0: aload_0
       1: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
       4: invokevirtual #143                // Method org/HdrHistogram/AbstractHistogram.getEndTimeStamp:()J
       7: lreturn

  public void setEndTimeStamp(long);
    Code:
       0: aload_0
       1: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
       4: lload_1
       5: invokevirtual #144                // Method org/HdrHistogram/AbstractHistogram.setEndTimeStamp:(J)V
       8: return

  public java.lang.String getTag();
    Code:
       0: aload_0
       1: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
       4: invokevirtual #145                // Method org/HdrHistogram/AbstractHistogram.getTag:()Ljava/lang/String;
       7: areturn

  public void setTag(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
       4: aload_1
       5: invokevirtual #146                // Method org/HdrHistogram/AbstractHistogram.setTag:(Ljava/lang/String;)V
       8: return

  public double getMinValue();
    Code:
       0: aload_0
       1: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
       4: invokevirtual #147                // Method org/HdrHistogram/AbstractHistogram.getMinValue:()J
       7: l2d
       8: aload_0
       9: getfield      #58                 // Field integerToDoubleValueConversionRatio:D
      12: dmul
      13: dreturn

  public double getMaxValue();
    Code:
       0: aload_0
       1: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
       4: invokevirtual #148                // Method org/HdrHistogram/AbstractHistogram.getMaxValue:()J
       7: l2d
       8: aload_0
       9: getfield      #58                 // Field integerToDoubleValueConversionRatio:D
      12: dmul
      13: dreturn

  public double getMinNonZeroValue();
    Code:
       0: aload_0
       1: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
       4: invokevirtual #149                // Method org/HdrHistogram/AbstractHistogram.getMinNonZeroValue:()J
       7: l2d
       8: aload_0
       9: getfield      #58                 // Field integerToDoubleValueConversionRatio:D
      12: dmul
      13: dreturn

  public double getMaxValueAsDouble();
    Code:
       0: aload_0
       1: invokevirtual #150                // Method getMaxValue:()D
       4: dreturn

  public double getMean();
    Code:
       0: aload_0
       1: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
       4: invokevirtual #151                // Method org/HdrHistogram/AbstractHistogram.getMean:()D
       7: aload_0
       8: getfield      #58                 // Field integerToDoubleValueConversionRatio:D
      11: dmul
      12: dreturn

  public double getStdDeviation();
    Code:
       0: aload_0
       1: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
       4: invokevirtual #152                // Method org/HdrHistogram/AbstractHistogram.getStdDeviation:()D
       7: aload_0
       8: getfield      #58                 // Field integerToDoubleValueConversionRatio:D
      11: dmul
      12: dreturn

  public double getValueAtPercentile(double);
    Code:
       0: aload_0
       1: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
       4: dload_1
       5: invokevirtual #153                // Method org/HdrHistogram/AbstractHistogram.getValueAtPercentile:(D)J
       8: l2d
       9: aload_0
      10: getfield      #58                 // Field integerToDoubleValueConversionRatio:D
      13: dmul
      14: dreturn

  public double getPercentileAtOrBelowValue(double);
    Code:
       0: aload_0
       1: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
       4: dload_1
       5: aload_0
       6: getfield      #59                 // Field doubleToIntegerValueConversionRatio:D
       9: dmul
      10: d2l
      11: invokevirtual #154                // Method org/HdrHistogram/AbstractHistogram.getPercentileAtOrBelowValue:(J)D
      14: dreturn

  public double getCountBetweenValues(double, double) throws java.lang.ArrayIndexOutOfBoundsException;
    Code:
       0: aload_0
       1: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
       4: dload_1
       5: aload_0
       6: getfield      #59                 // Field doubleToIntegerValueConversionRatio:D
       9: dmul
      10: d2l
      11: dload_3
      12: aload_0
      13: getfield      #59                 // Field doubleToIntegerValueConversionRatio:D
      16: dmul
      17: d2l
      18: invokevirtual #155                // Method org/HdrHistogram/AbstractHistogram.getCountBetweenValues:(JJ)J
      21: l2d
      22: dreturn

  public long getCountAtValue(double) throws java.lang.ArrayIndexOutOfBoundsException;
    Code:
       0: aload_0
       1: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
       4: dload_1
       5: aload_0
       6: getfield      #59                 // Field doubleToIntegerValueConversionRatio:D
       9: dmul
      10: d2l
      11: invokevirtual #156                // Method org/HdrHistogram/AbstractHistogram.getCountAtValue:(J)J
      14: lreturn

  public org.HdrHistogram.DoubleHistogram$Percentiles percentiles(int);
    Code:
       0: new           #157                // class org/HdrHistogram/DoubleHistogram$Percentiles
       3: dup
       4: aload_0
       5: aload_0
       6: iload_1
       7: aconst_null
       8: invokespecial #158                // Method org/HdrHistogram/DoubleHistogram$Percentiles."<init>":(Lorg/HdrHistogram/DoubleHistogram;Lorg/HdrHistogram/DoubleHistogram;ILorg/HdrHistogram/DoubleHistogram$1;)V
      11: areturn

  public org.HdrHistogram.DoubleHistogram$LinearBucketValues linearBucketValues(double);
    Code:
       0: new           #159                // class org/HdrHistogram/DoubleHistogram$LinearBucketValues
       3: dup
       4: aload_0
       5: aload_0
       6: dload_1
       7: aconst_null
       8: invokespecial #160                // Method org/HdrHistogram/DoubleHistogram$LinearBucketValues."<init>":(Lorg/HdrHistogram/DoubleHistogram;Lorg/HdrHistogram/DoubleHistogram;DLorg/HdrHistogram/DoubleHistogram$1;)V
      11: areturn

  public org.HdrHistogram.DoubleHistogram$LogarithmicBucketValues logarithmicBucketValues(double, double);
    Code:
       0: new           #161                // class org/HdrHistogram/DoubleHistogram$LogarithmicBucketValues
       3: dup
       4: aload_0
       5: aload_0
       6: dload_1
       7: dload_3
       8: aconst_null
       9: invokespecial #162                // Method org/HdrHistogram/DoubleHistogram$LogarithmicBucketValues."<init>":(Lorg/HdrHistogram/DoubleHistogram;Lorg/HdrHistogram/DoubleHistogram;DDLorg/HdrHistogram/DoubleHistogram$1;)V
      12: areturn

  public org.HdrHistogram.DoubleHistogram$RecordedValues recordedValues();
    Code:
       0: new           #163                // class org/HdrHistogram/DoubleHistogram$RecordedValues
       3: dup
       4: aload_0
       5: aload_0
       6: aconst_null
       7: invokespecial #164                // Method org/HdrHistogram/DoubleHistogram$RecordedValues."<init>":(Lorg/HdrHistogram/DoubleHistogram;Lorg/HdrHistogram/DoubleHistogram;Lorg/HdrHistogram/DoubleHistogram$1;)V
      10: areturn

  public org.HdrHistogram.DoubleHistogram$AllValues allValues();
    Code:
       0: new           #165                // class org/HdrHistogram/DoubleHistogram$AllValues
       3: dup
       4: aload_0
       5: aload_0
       6: aconst_null
       7: invokespecial #166                // Method org/HdrHistogram/DoubleHistogram$AllValues."<init>":(Lorg/HdrHistogram/DoubleHistogram;Lorg/HdrHistogram/DoubleHistogram;Lorg/HdrHistogram/DoubleHistogram$1;)V
      10: areturn

  public void outputPercentileDistribution(java.io.PrintStream, java.lang.Double);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_5
       3: aload_2
       4: invokevirtual #167                // Method outputPercentileDistribution:(Ljava/io/PrintStream;ILjava/lang/Double;)V
       7: return

  public void outputPercentileDistribution(java.io.PrintStream, int, java.lang.Double);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: iconst_0
       5: invokevirtual #168                // Method outputPercentileDistribution:(Ljava/io/PrintStream;ILjava/lang/Double;Z)V
       8: return

  public void outputPercentileDistribution(java.io.PrintStream, int, java.lang.Double, boolean);
    Code:
       0: aload_0
       1: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
       4: aload_1
       5: iload_2
       6: aload_3
       7: invokevirtual #169                // Method java/lang/Double.doubleValue:()D
      10: aload_0
      11: getfield      #58                 // Field integerToDoubleValueConversionRatio:D
      14: ddiv
      15: invokestatic  #170                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      18: iload         4
      20: invokevirtual #171                // Method org/HdrHistogram/AbstractHistogram.outputPercentileDistribution:(Ljava/io/PrintStream;ILjava/lang/Double;Z)V
      23: return

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #49                 // Field configuredHighestToLowestValueRatio:J
       5: invokevirtual #172                // Method java/io/ObjectOutputStream.writeLong:(J)V
       8: aload_1
       9: aload_0
      10: getfield      #53                 // Field currentLowestValueInAutoRange:D
      13: invokevirtual #173                // Method java/io/ObjectOutputStream.writeDouble:(D)V
      16: aload_1
      17: aload_0
      18: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
      21: invokevirtual #174                // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      24: return

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #175                // Method java/io/ObjectInputStream.readLong:()J
       4: lstore_2
       5: aload_1
       6: invokevirtual #176                // Method java/io/ObjectInputStream.readDouble:()D
       9: dstore        4
      11: aload_1
      12: invokevirtual #177                // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      15: checkcast     #30                 // class org/HdrHistogram/AbstractHistogram
      18: astore        6
      20: aload_0
      21: lload_2
      22: dload         4
      24: aload         6
      26: invokespecial #43                 // Method init:(JDLorg/HdrHistogram/AbstractHistogram;)V
      29: return

  public int getNeededByteBufferCapacity();
    Code:
       0: aload_0
       1: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
       4: invokevirtual #178                // Method org/HdrHistogram/AbstractHistogram.getNeededByteBufferCapacity:()I
       7: ireturn

  private int getNeededByteBufferCapacity(int);
    Code:
       0: aload_0
       1: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
       4: iload_1
       5: invokevirtual #179                // Method org/HdrHistogram/AbstractHistogram.getNeededByteBufferCapacity:(I)I
       8: ireturn

  static boolean isDoubleHistogramCookie(int);
    Code:
       0: iload_0
       1: invokestatic  #180                // Method isCompressedDoubleHistogramCookie:(I)Z
       4: ifne          14
       7: iload_0
       8: invokestatic  #181                // Method isNonCompressedDoubleHistogramCookie:(I)Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  static boolean isCompressedDoubleHistogramCookie(int);
    Code:
       0: iload_0
       1: ldc           #182                // int 208802383
       3: if_icmpne     10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ireturn

  static boolean isNonCompressedDoubleHistogramCookie(int);
    Code:
       0: iload_0
       1: ldc           #183                // int 208802382
       3: if_icmpne     10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ireturn

  public synchronized int encodeIntoByteBuffer(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
       4: invokevirtual #148                // Method org/HdrHistogram/AbstractHistogram.getMaxValue:()J
       7: lstore_2
       8: aload_0
       9: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
      12: aload_0
      13: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
      16: lload_2
      17: invokevirtual #184                // Method org/HdrHistogram/AbstractHistogram.getBucketsNeededToCoverValue:(J)I
      20: invokevirtual #185                // Method org/HdrHistogram/AbstractHistogram.getLengthForNumberOfBuckets:(I)I
      23: istore        4
      25: aload_1
      26: invokevirtual #186                // Method java/nio/ByteBuffer.capacity:()I
      29: aload_0
      30: iload         4
      32: invokespecial #187                // Method getNeededByteBufferCapacity:(I)I
      35: if_icmpge     75
      38: new           #68                 // class java/lang/ArrayIndexOutOfBoundsException
      41: dup
      42: new           #75                 // class java/lang/StringBuilder
      45: dup
      46: invokespecial #76                 // Method java/lang/StringBuilder."<init>":()V
      49: ldc           #188                // String buffer does not have capacity for
      51: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_0
      55: iload         4
      57: invokespecial #187                // Method getNeededByteBufferCapacity:(I)I
      60: invokevirtual #99                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      63: ldc           #189                // String  bytes
      65: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: invokespecial #70                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      74: athrow
      75: aload_1
      76: ldc           #183                // int 208802382
      78: invokevirtual #190                // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      81: pop
      82: aload_1
      83: aload_0
      84: invokevirtual #50                 // Method getNumberOfSignificantValueDigits:()I
      87: invokevirtual #190                // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      90: pop
      91: aload_1
      92: aload_0
      93: getfield      #49                 // Field configuredHighestToLowestValueRatio:J
      96: invokevirtual #191                // Method java/nio/ByteBuffer.putLong:(J)Ljava/nio/ByteBuffer;
      99: pop
     100: aload_0
     101: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
     104: aload_1
     105: invokevirtual #192                // Method org/HdrHistogram/AbstractHistogram.encodeIntoByteBuffer:(Ljava/nio/ByteBuffer;)I
     108: bipush        16
     110: iadd
     111: ireturn

  public synchronized int encodeIntoCompressedByteBuffer(java.nio.ByteBuffer, int);
    Code:
       0: aload_1
       1: ldc           #182                // int 208802383
       3: invokevirtual #190                // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
       6: pop
       7: aload_1
       8: aload_0
       9: invokevirtual #50                 // Method getNumberOfSignificantValueDigits:()I
      12: invokevirtual #190                // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      15: pop
      16: aload_1
      17: aload_0
      18: getfield      #49                 // Field configuredHighestToLowestValueRatio:J
      21: invokevirtual #191                // Method java/nio/ByteBuffer.putLong:(J)Ljava/nio/ByteBuffer;
      24: pop
      25: aload_0
      26: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
      29: aload_1
      30: iload_2
      31: invokevirtual #193                // Method org/HdrHistogram/AbstractHistogram.encodeIntoCompressedByteBuffer:(Ljava/nio/ByteBuffer;I)I
      34: bipush        16
      36: iadd
      37: ireturn

  public int encodeIntoCompressedByteBuffer(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_m1
       3: invokevirtual #195                // Method encodeIntoCompressedByteBuffer:(Ljava/nio/ByteBuffer;I)I
       6: ireturn

  static org.HdrHistogram.DoubleHistogram constructHistogramFromBuffer(int, java.nio.ByteBuffer, java.lang.Class<? extends org.HdrHistogram.AbstractHistogram>, long) throws java.util.zip.DataFormatException;
    Code:
       0: aload_1
       1: invokevirtual #196                // Method java/nio/ByteBuffer.getInt:()I
       4: istore        5
       6: aload_1
       7: invokevirtual #197                // Method java/nio/ByteBuffer.getLong:()J
      10: lstore        6
      12: iload_0
      13: invokestatic  #181                // Method isNonCompressedDoubleHistogramCookie:(I)Z
      16: ifeq          30
      19: aload_1
      20: aload_2
      21: lload_3
      22: invokestatic  #198                // Method org/HdrHistogram/AbstractHistogram.decodeFromByteBuffer:(Ljava/nio/ByteBuffer;Ljava/lang/Class;J)Lorg/HdrHistogram/AbstractHistogram;
      25: astore        8
      27: goto          58
      30: iload_0
      31: invokestatic  #180                // Method isCompressedDoubleHistogramCookie:(I)Z
      34: ifeq          48
      37: aload_1
      38: aload_2
      39: lload_3
      40: invokestatic  #199                // Method org/HdrHistogram/AbstractHistogram.decodeFromCompressedByteBuffer:(Ljava/nio/ByteBuffer;Ljava/lang/Class;J)Lorg/HdrHistogram/AbstractHistogram;
      43: astore        8
      45: goto          58
      48: new           #38                 // class java/lang/IllegalStateException
      51: dup
      52: ldc           #200                // String The buffer does not contain a DoubleHistogram
      54: invokespecial #40                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: new           #104                // class org/HdrHistogram/DoubleHistogram
      61: dup
      62: lload         6
      64: iload         5
      66: aload_2
      67: aload         8
      69: invokespecial #4                  // Method "<init>":(JILjava/lang/Class;Lorg/HdrHistogram/AbstractHistogram;)V
      72: astore        9
      74: aload         9
      76: areturn

  public static org.HdrHistogram.DoubleHistogram decodeFromByteBuffer(java.nio.ByteBuffer, long);
    Code:
       0: aload_0
       1: ldc           #3                  // class org/HdrHistogram/Histogram
       3: lload_1
       4: invokestatic  #201                // Method decodeFromByteBuffer:(Ljava/nio/ByteBuffer;Ljava/lang/Class;J)Lorg/HdrHistogram/DoubleHistogram;
       7: areturn

  public static org.HdrHistogram.DoubleHistogram decodeFromByteBuffer(java.nio.ByteBuffer, java.lang.Class<? extends org.HdrHistogram.AbstractHistogram>, long);
    Code:
       0: aload_0
       1: invokevirtual #196                // Method java/nio/ByteBuffer.getInt:()I
       4: istore        4
       6: iload         4
       8: invokestatic  #181                // Method isNonCompressedDoubleHistogramCookie:(I)Z
      11: ifne          24
      14: new           #10                 // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #200                // String The buffer does not contain a DoubleHistogram
      20: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: iload         4
      26: aload_0
      27: aload_1
      28: lload_2
      29: invokestatic  #202                // Method constructHistogramFromBuffer:(ILjava/nio/ByteBuffer;Ljava/lang/Class;J)Lorg/HdrHistogram/DoubleHistogram;
      32: astore        5
      34: aload         5
      36: areturn
      37: astore        4
      39: new           #204                // class java/lang/RuntimeException
      42: dup
      43: aload         4
      45: invokespecial #205                // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      48: athrow
    Exception table:
       from    to  target type
           0    36    37   Class java/util/zip/DataFormatException

  public static org.HdrHistogram.DoubleHistogram decodeFromCompressedByteBuffer(java.nio.ByteBuffer, long) throws java.util.zip.DataFormatException;
    Code:
       0: aload_0
       1: ldc           #3                  // class org/HdrHistogram/Histogram
       3: lload_1
       4: invokestatic  #206                // Method decodeFromCompressedByteBuffer:(Ljava/nio/ByteBuffer;Ljava/lang/Class;J)Lorg/HdrHistogram/DoubleHistogram;
       7: areturn

  public static org.HdrHistogram.DoubleHistogram decodeFromCompressedByteBuffer(java.nio.ByteBuffer, java.lang.Class<? extends org.HdrHistogram.AbstractHistogram>, long) throws java.util.zip.DataFormatException;
    Code:
       0: aload_0
       1: invokevirtual #196                // Method java/nio/ByteBuffer.getInt:()I
       4: istore        4
       6: iload         4
       8: invokestatic  #180                // Method isCompressedDoubleHistogramCookie:(I)Z
      11: ifne          24
      14: new           #10                 // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #207                // String The buffer does not contain a compressed DoubleHistogram
      20: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: iload         4
      26: aload_0
      27: aload_1
      28: lload_2
      29: invokestatic  #202                // Method constructHistogramFromBuffer:(ILjava/nio/ByteBuffer;Ljava/lang/Class;J)Lorg/HdrHistogram/DoubleHistogram;
      32: astore        5
      34: aload         5
      36: areturn

  private long deriveInternalHighestToLowestValueRatio(long);
    Code:
       0: lconst_1
       1: lload_1
       2: invokestatic  #96                 // Method findContainingBinaryOrderOfMagnitude:(J)I
       5: iconst_1
       6: iadd
       7: lshl
       8: lstore_3
       9: lload_3
      10: lreturn

  private long deriveIntegerValueRange(long, int);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #56                 // Method deriveInternalHighestToLowestValueRatio:(J)J
       5: lstore        4
       7: iload_3
       8: invokestatic  #208                // Method org/HdrHistogram/AbstractHistogram.numberOfSubbuckets:(I)I
      11: iconst_2
      12: idiv
      13: i2l
      14: lstore        6
      16: lload         6
      18: lload         4
      20: lmul
      21: lstore        8
      23: lload         8
      25: lreturn

  private long getLowestTrackingIntegerValue();
    Code:
       0: aload_0
       1: getfield      #51                 // Field integerValuesHistogram:Lorg/HdrHistogram/AbstractHistogram;
       4: getfield      #42                 // Field org/HdrHistogram/AbstractHistogram.subBucketHalfCount:I
       7: i2l
       8: lreturn

  private static int findContainingBinaryOrderOfMagnitude(long);
    Code:
       0: bipush        64
       2: lload_0
       3: invokestatic  #209                // Method java/lang/Long.numberOfLeadingZeros:(J)I
       6: isub
       7: istore_2
       8: iload_2
       9: ireturn

  private static int findContainingBinaryOrderOfMagnitude(double);
    Code:
       0: dload_0
       1: invokestatic  #71                 // Method java/lang/Math.ceil:(D)D
       4: d2l
       5: lstore_2
       6: lload_2
       7: invokestatic  #96                 // Method findContainingBinaryOrderOfMagnitude:(J)I
      10: ireturn

  private int findCappedContainingBinaryOrderOfMagnitude(double);
    Code:
       0: dload_1
       1: aload_0
       2: getfield      #49                 // Field configuredHighestToLowestValueRatio:J
       5: l2d
       6: dcmpl
       7: ifle          27
      10: aload_0
      11: getfield      #49                 // Field configuredHighestToLowestValueRatio:J
      14: l2d
      15: invokestatic  #210                // Method java/lang/Math.log:(D)D
      18: ldc2_w        #31                 // double 2.0d
      21: invokestatic  #210                // Method java/lang/Math.log:(D)D
      24: ddiv
      25: d2i
      26: ireturn
      27: dload_1
      28: ldc2_w        #31                 // double 2.0d
      31: ldc2_w        #211                // double 50.0d
      34: invokestatic  #15                 // Method java/lang/Math.pow:(DD)D
      37: dcmpl
      38: ifle          44
      41: bipush        50
      43: ireturn
      44: dload_1
      45: invokestatic  #213                // Method findContainingBinaryOrderOfMagnitude:(D)I
      48: ireturn

  static {};
    Code:
       0: dconst_1
       1: dstore_0
       2: dload_0
       3: ldc2_w        #215                // double 4.4942328371557893E307d
       6: dcmpg
       7: ifge          19
      10: dload_0
      11: ldc2_w        #31                 // double 2.0d
      14: dmul
      15: dstore_0
      16: goto          2
      19: dload_0
      20: putstatic     #74                 // Field highestAllowedValueEver:D
      23: return
}
