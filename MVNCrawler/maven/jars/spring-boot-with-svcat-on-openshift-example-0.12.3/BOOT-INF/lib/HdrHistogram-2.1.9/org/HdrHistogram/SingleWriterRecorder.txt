Compiled from "SingleWriterRecorder.java"
public class org.HdrHistogram.SingleWriterRecorder {
  private static java.util.concurrent.atomic.AtomicLong instanceIdSequencer;

  private final long instanceId;

  private final org.HdrHistogram.WriterReaderPhaser recordingPhaser;

  private volatile org.HdrHistogram.SingleWriterRecorder$InternalHistogram activeHistogram;

  private org.HdrHistogram.SingleWriterRecorder$InternalHistogram inactiveHistogram;

  public org.HdrHistogram.SingleWriterRecorder(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field instanceIdSequencer:Ljava/util/concurrent/atomic/AtomicLong;
       8: invokevirtual #3                  // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
      11: putfield      #4                  // Field instanceId:J
      14: aload_0
      15: new           #5                  // class org/HdrHistogram/WriterReaderPhaser
      18: dup
      19: invokespecial #6                  // Method org/HdrHistogram/WriterReaderPhaser."<init>":()V
      22: putfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
      25: aload_0
      26: new           #8                  // class org/HdrHistogram/SingleWriterRecorder$InternalHistogram
      29: dup
      30: aload_0
      31: aload_0
      32: getfield      #4                  // Field instanceId:J
      35: iload_1
      36: aconst_null
      37: invokespecial #9                  // Method org/HdrHistogram/SingleWriterRecorder$InternalHistogram."<init>":(Lorg/HdrHistogram/SingleWriterRecorder;JILorg/HdrHistogram/SingleWriterRecorder$1;)V
      40: putfield      #10                 // Field activeHistogram:Lorg/HdrHistogram/SingleWriterRecorder$InternalHistogram;
      43: aload_0
      44: new           #8                  // class org/HdrHistogram/SingleWriterRecorder$InternalHistogram
      47: dup
      48: aload_0
      49: aload_0
      50: getfield      #4                  // Field instanceId:J
      53: iload_1
      54: aconst_null
      55: invokespecial #9                  // Method org/HdrHistogram/SingleWriterRecorder$InternalHistogram."<init>":(Lorg/HdrHistogram/SingleWriterRecorder;JILorg/HdrHistogram/SingleWriterRecorder$1;)V
      58: putfield      #11                 // Field inactiveHistogram:Lorg/HdrHistogram/SingleWriterRecorder$InternalHistogram;
      61: aload_0
      62: getfield      #10                 // Field activeHistogram:Lorg/HdrHistogram/SingleWriterRecorder$InternalHistogram;
      65: invokestatic  #12                 // Method java/lang/System.currentTimeMillis:()J
      68: invokevirtual #13                 // Method org/HdrHistogram/SingleWriterRecorder$InternalHistogram.setStartTimeStamp:(J)V
      71: return

  public org.HdrHistogram.SingleWriterRecorder(long, int);
    Code:
       0: aload_0
       1: lconst_1
       2: lload_1
       3: iload_3
       4: invokespecial #14                 // Method "<init>":(JJI)V
       7: return

  public org.HdrHistogram.SingleWriterRecorder(long, long, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field instanceIdSequencer:Ljava/util/concurrent/atomic/AtomicLong;
       8: invokevirtual #3                  // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
      11: putfield      #4                  // Field instanceId:J
      14: aload_0
      15: new           #5                  // class org/HdrHistogram/WriterReaderPhaser
      18: dup
      19: invokespecial #6                  // Method org/HdrHistogram/WriterReaderPhaser."<init>":()V
      22: putfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
      25: aload_0
      26: new           #8                  // class org/HdrHistogram/SingleWriterRecorder$InternalHistogram
      29: dup
      30: aload_0
      31: aload_0
      32: getfield      #4                  // Field instanceId:J
      35: lload_1
      36: lload_3
      37: iload         5
      39: aconst_null
      40: invokespecial #15                 // Method org/HdrHistogram/SingleWriterRecorder$InternalHistogram."<init>":(Lorg/HdrHistogram/SingleWriterRecorder;JJJILorg/HdrHistogram/SingleWriterRecorder$1;)V
      43: putfield      #10                 // Field activeHistogram:Lorg/HdrHistogram/SingleWriterRecorder$InternalHistogram;
      46: aload_0
      47: new           #8                  // class org/HdrHistogram/SingleWriterRecorder$InternalHistogram
      50: dup
      51: aload_0
      52: aload_0
      53: getfield      #4                  // Field instanceId:J
      56: lload_1
      57: lload_3
      58: iload         5
      60: aconst_null
      61: invokespecial #15                 // Method org/HdrHistogram/SingleWriterRecorder$InternalHistogram."<init>":(Lorg/HdrHistogram/SingleWriterRecorder;JJJILorg/HdrHistogram/SingleWriterRecorder$1;)V
      64: putfield      #11                 // Field inactiveHistogram:Lorg/HdrHistogram/SingleWriterRecorder$InternalHistogram;
      67: aload_0
      68: getfield      #10                 // Field activeHistogram:Lorg/HdrHistogram/SingleWriterRecorder$InternalHistogram;
      71: invokestatic  #12                 // Method java/lang/System.currentTimeMillis:()J
      74: invokevirtual #13                 // Method org/HdrHistogram/SingleWriterRecorder$InternalHistogram.setStartTimeStamp:(J)V
      77: return

  public void recordValue(long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
       4: invokevirtual #16                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionEnter:()J
       7: lstore_3
       8: aload_0
       9: getfield      #10                 // Field activeHistogram:Lorg/HdrHistogram/SingleWriterRecorder$InternalHistogram;
      12: lload_1
      13: invokevirtual #17                 // Method org/HdrHistogram/SingleWriterRecorder$InternalHistogram.recordValue:(J)V
      16: aload_0
      17: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
      20: lload_3
      21: invokevirtual #18                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionExit:(J)V
      24: goto          40
      27: astore        5
      29: aload_0
      30: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
      33: lload_3
      34: invokevirtual #18                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionExit:(J)V
      37: aload         5
      39: athrow
      40: return
    Exception table:
       from    to  target type
           8    16    27   any
          27    29    27   any

  public void recordValueWithCount(long, long) throws java.lang.ArrayIndexOutOfBoundsException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
       4: invokevirtual #16                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionEnter:()J
       7: lstore        5
       9: aload_0
      10: getfield      #10                 // Field activeHistogram:Lorg/HdrHistogram/SingleWriterRecorder$InternalHistogram;
      13: lload_1
      14: lload_3
      15: invokevirtual #19                 // Method org/HdrHistogram/SingleWriterRecorder$InternalHistogram.recordValueWithCount:(JJ)V
      18: aload_0
      19: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
      22: lload         5
      24: invokevirtual #18                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionExit:(J)V
      27: goto          44
      30: astore        7
      32: aload_0
      33: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
      36: lload         5
      38: invokevirtual #18                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionExit:(J)V
      41: aload         7
      43: athrow
      44: return
    Exception table:
       from    to  target type
           9    18    30   any
          30    32    30   any

  public void recordValueWithExpectedInterval(long, long) throws java.lang.ArrayIndexOutOfBoundsException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
       4: invokevirtual #16                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionEnter:()J
       7: lstore        5
       9: aload_0
      10: getfield      #10                 // Field activeHistogram:Lorg/HdrHistogram/SingleWriterRecorder$InternalHistogram;
      13: lload_1
      14: lload_3
      15: invokevirtual #20                 // Method org/HdrHistogram/SingleWriterRecorder$InternalHistogram.recordValueWithExpectedInterval:(JJ)V
      18: aload_0
      19: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
      22: lload         5
      24: invokevirtual #18                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionExit:(J)V
      27: goto          44
      30: astore        7
      32: aload_0
      33: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
      36: lload         5
      38: invokevirtual #18                 // Method org/HdrHistogram/WriterReaderPhaser.writerCriticalSectionExit:(J)V
      41: aload         7
      43: athrow
      44: return
    Exception table:
       from    to  target type
           9    18    30   any
          30    32    30   any

  public synchronized org.HdrHistogram.Histogram getIntervalHistogram();
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #21                 // Method getIntervalHistogram:(Lorg/HdrHistogram/Histogram;)Lorg/HdrHistogram/Histogram;
       5: areturn

  public synchronized org.HdrHistogram.Histogram getIntervalHistogram(org.HdrHistogram.Histogram);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #22                 // Method validateFitAsReplacementHistogram:(Lorg/HdrHistogram/Histogram;)V
       5: aload_0
       6: aload_1
       7: checkcast     #8                  // class org/HdrHistogram/SingleWriterRecorder$InternalHistogram
      10: putfield      #11                 // Field inactiveHistogram:Lorg/HdrHistogram/SingleWriterRecorder$InternalHistogram;
      13: aload_0
      14: invokespecial #23                 // Method performIntervalSample:()V
      17: aload_0
      18: getfield      #11                 // Field inactiveHistogram:Lorg/HdrHistogram/SingleWriterRecorder$InternalHistogram;
      21: astore_2
      22: aload_0
      23: aconst_null
      24: putfield      #11                 // Field inactiveHistogram:Lorg/HdrHistogram/SingleWriterRecorder$InternalHistogram;
      27: aload_2
      28: areturn

  public synchronized void getIntervalHistogramInto(org.HdrHistogram.Histogram);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method performIntervalSample:()V
       4: aload_0
       5: getfield      #11                 // Field inactiveHistogram:Lorg/HdrHistogram/SingleWriterRecorder$InternalHistogram;
       8: aload_1
       9: invokevirtual #24                 // Method org/HdrHistogram/SingleWriterRecorder$InternalHistogram.copyInto:(Lorg/HdrHistogram/AbstractHistogram;)V
      12: return

  public synchronized void reset();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method performIntervalSample:()V
       4: aload_0
       5: invokespecial #23                 // Method performIntervalSample:()V
       8: return

  private void performIntervalSample();
    Code:
       0: aload_0
       1: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
       4: invokevirtual #25                 // Method org/HdrHistogram/WriterReaderPhaser.readerLock:()V
       7: aload_0
       8: getfield      #11                 // Field inactiveHistogram:Lorg/HdrHistogram/SingleWriterRecorder$InternalHistogram;
      11: ifnonnull     31
      14: aload_0
      15: new           #8                  // class org/HdrHistogram/SingleWriterRecorder$InternalHistogram
      18: dup
      19: aload_0
      20: aload_0
      21: getfield      #10                 // Field activeHistogram:Lorg/HdrHistogram/SingleWriterRecorder$InternalHistogram;
      24: aconst_null
      25: invokespecial #26                 // Method org/HdrHistogram/SingleWriterRecorder$InternalHistogram."<init>":(Lorg/HdrHistogram/SingleWriterRecorder;Lorg/HdrHistogram/SingleWriterRecorder$InternalHistogram;Lorg/HdrHistogram/SingleWriterRecorder$1;)V
      28: putfield      #11                 // Field inactiveHistogram:Lorg/HdrHistogram/SingleWriterRecorder$InternalHistogram;
      31: aload_0
      32: getfield      #11                 // Field inactiveHistogram:Lorg/HdrHistogram/SingleWriterRecorder$InternalHistogram;
      35: invokevirtual #27                 // Method org/HdrHistogram/SingleWriterRecorder$InternalHistogram.reset:()V
      38: aload_0
      39: getfield      #11                 // Field inactiveHistogram:Lorg/HdrHistogram/SingleWriterRecorder$InternalHistogram;
      42: astore_1
      43: aload_0
      44: aload_0
      45: getfield      #10                 // Field activeHistogram:Lorg/HdrHistogram/SingleWriterRecorder$InternalHistogram;
      48: putfield      #11                 // Field inactiveHistogram:Lorg/HdrHistogram/SingleWriterRecorder$InternalHistogram;
      51: aload_0
      52: aload_1
      53: putfield      #10                 // Field activeHistogram:Lorg/HdrHistogram/SingleWriterRecorder$InternalHistogram;
      56: invokestatic  #12                 // Method java/lang/System.currentTimeMillis:()J
      59: lstore_2
      60: aload_0
      61: getfield      #10                 // Field activeHistogram:Lorg/HdrHistogram/SingleWriterRecorder$InternalHistogram;
      64: lload_2
      65: invokevirtual #13                 // Method org/HdrHistogram/SingleWriterRecorder$InternalHistogram.setStartTimeStamp:(J)V
      68: aload_0
      69: getfield      #11                 // Field inactiveHistogram:Lorg/HdrHistogram/SingleWriterRecorder$InternalHistogram;
      72: lload_2
      73: invokevirtual #28                 // Method org/HdrHistogram/SingleWriterRecorder$InternalHistogram.setEndTimeStamp:(J)V
      76: aload_0
      77: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
      80: ldc2_w        #29                 // long 500000l
      83: invokevirtual #31                 // Method org/HdrHistogram/WriterReaderPhaser.flipPhase:(J)V
      86: aload_0
      87: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
      90: invokevirtual #32                 // Method org/HdrHistogram/WriterReaderPhaser.readerUnlock:()V
      93: goto          108
      96: astore        4
      98: aload_0
      99: getfield      #7                  // Field recordingPhaser:Lorg/HdrHistogram/WriterReaderPhaser;
     102: invokevirtual #32                 // Method org/HdrHistogram/WriterReaderPhaser.readerUnlock:()V
     105: aload         4
     107: athrow
     108: return
    Exception table:
       from    to  target type
           0    86    96   any
          96    98    96   any

  void validateFitAsReplacementHistogram(org.HdrHistogram.Histogram);
    Code:
       0: iconst_1
       1: istore_2
       2: aload_1
       3: ifnonnull     11
       6: iconst_0
       7: istore_2
       8: goto          38
      11: aload_1
      12: instanceof    #8                  // class org/HdrHistogram/SingleWriterRecorder$InternalHistogram
      15: ifeq          38
      18: aload_1
      19: checkcast     #8                  // class org/HdrHistogram/SingleWriterRecorder$InternalHistogram
      22: invokestatic  #33                 // Method org/HdrHistogram/SingleWriterRecorder$InternalHistogram.access$300:(Lorg/HdrHistogram/SingleWriterRecorder$InternalHistogram;)J
      25: aload_0
      26: getfield      #10                 // Field activeHistogram:Lorg/HdrHistogram/SingleWriterRecorder$InternalHistogram;
      29: invokestatic  #33                 // Method org/HdrHistogram/SingleWriterRecorder$InternalHistogram.access$300:(Lorg/HdrHistogram/SingleWriterRecorder$InternalHistogram;)J
      32: lcmp
      33: ifne          38
      36: iconst_0
      37: istore_2
      38: iload_2
      39: ifeq          80
      42: new           #34                 // class java/lang/IllegalArgumentException
      45: dup
      46: new           #35                 // class java/lang/StringBuilder
      49: dup
      50: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #37                 // String replacement histogram must have been obtained via a previousgetIntervalHistogram() call from this
      55: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_0
      59: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      62: invokevirtual #40                 // Method java/lang/Class.getName:()Ljava/lang/String;
      65: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: ldc           #41                 // String  instance
      70: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      79: athrow
      80: return

  static {};
    Code:
       0: new           #44                 // class java/util/concurrent/atomic/AtomicLong
       3: dup
       4: lconst_1
       5: invokespecial #45                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
       8: putstatic     #2                  // Field instanceIdSequencer:Ljava/util/concurrent/atomic/AtomicLong;
      11: return
}
