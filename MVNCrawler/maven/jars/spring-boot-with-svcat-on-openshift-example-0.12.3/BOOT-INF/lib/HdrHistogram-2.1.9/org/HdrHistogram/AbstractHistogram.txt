Compiled from "AbstractHistogram.java"
public abstract class org.HdrHistogram.AbstractHistogram extends org.HdrHistogram.AbstractHistogramBase implements java.io.Serializable {
  int leadingZeroCountBase;

  int subBucketHalfCountMagnitude;

  int unitMagnitude;

  int subBucketHalfCount;

  long subBucketMask;

  long unitMagnitudeMask;

  volatile long maxValue;

  volatile long minNonZeroValue;

  private static final java.util.concurrent.atomic.AtomicLongFieldUpdater<org.HdrHistogram.AbstractHistogram> maxValueUpdater;

  private static final java.util.concurrent.atomic.AtomicLongFieldUpdater<org.HdrHistogram.AbstractHistogram> minNonZeroValueUpdater;

  private static final long serialVersionUID;

  private static final int ENCODING_HEADER_SIZE;

  private static final int V0_ENCODING_HEADER_SIZE;

  private static final int V0EncodingCookieBase;

  private static final int V0CompressedEncodingCookieBase;

  private static final int V1EncodingCookieBase;

  private static final int V1CompressedEncodingCookieBase;

  private static final int V2EncodingCookieBase;

  private static final int V2CompressedEncodingCookieBase;

  private static final int V2maxWordSizeInBytes;

  private static final int encodingCookieBase;

  private static final int compressedEncodingCookieBase;

  private static final java.lang.Class[] constructorArgsTypes;

  static final boolean $assertionsDisabled;

  abstract long getCountAtIndex(int);

  abstract long getCountAtNormalizedIndex(int);

  abstract void incrementCountAtIndex(int);

  abstract void addToCountAtIndex(int, long);

  abstract void setCountAtIndex(int, long);

  abstract void setCountAtNormalizedIndex(int, long);

  abstract int getNormalizingIndexOffset();

  abstract void setNormalizingIndexOffset(int);

  abstract void shiftNormalizingIndexByOffset(int, boolean);

  abstract void setTotalCount(long);

  abstract void incrementTotalCount();

  abstract void addToTotalCount(long);

  abstract void clearCounts();

  abstract int _getEstimatedFootprintInBytes();

  abstract void resize(long);

  public abstract long getTotalCount();

  void updatedMaxValue(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #1                  // Field unitMagnitudeMask:J
       5: lor
       6: lstore_3
       7: lload_3
       8: aload_0
       9: getfield      #2                  // Field maxValue:J
      12: dup2
      13: lstore        5
      15: lcmp
      16: ifle          33
      19: getstatic     #3                  // Field maxValueUpdater:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      22: aload_0
      23: lload         5
      25: lload_3
      26: invokevirtual #4                  // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.compareAndSet:(Ljava/lang/Object;JJ)Z
      29: pop
      30: goto          7
      33: return

  final void resetMaxValue(long);
    Code:
       0: aload_0
       1: lload_1
       2: aload_0
       3: getfield      #1                  // Field unitMagnitudeMask:J
       6: lor
       7: putfield      #2                  // Field maxValue:J
      10: return

  void updateMinNonZeroValue(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #1                  // Field unitMagnitudeMask:J
       5: lcmp
       6: ifgt          10
       9: return
      10: lload_1
      11: aload_0
      12: getfield      #1                  // Field unitMagnitudeMask:J
      15: ldc2_w        #5                  // long -1l
      18: lxor
      19: land
      20: lstore_3
      21: lload_3
      22: aload_0
      23: getfield      #7                  // Field minNonZeroValue:J
      26: dup2
      27: lstore        5
      29: lcmp
      30: ifge          47
      33: getstatic     #8                  // Field minNonZeroValueUpdater:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      36: aload_0
      37: lload         5
      39: lload_3
      40: invokevirtual #4                  // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.compareAndSet:(Ljava/lang/Object;JJ)Z
      43: pop
      44: goto          21
      47: return

  void resetMinNonZeroValue(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #1                  // Field unitMagnitudeMask:J
       5: ldc2_w        #5                  // long -1l
       8: lxor
       9: land
      10: lstore_3
      11: aload_0
      12: lload_1
      13: ldc2_w        #10                 // long 9223372036854775807l
      16: lcmp
      17: ifne          24
      20: lload_1
      21: goto          25
      24: lload_3
      25: putfield      #7                  // Field minNonZeroValue:J
      28: return

  protected org.HdrHistogram.AbstractHistogram(int);
    Code:
       0: aload_0
       1: lconst_1
       2: ldc2_w        #12                 // long 2l
       5: iload_1
       6: invokespecial #14                 // Method "<init>":(JJI)V
       9: aload_0
      10: iconst_1
      11: putfield      #15                 // Field autoResize:Z
      14: return

  protected org.HdrHistogram.AbstractHistogram(long, long, int);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method org/HdrHistogram/AbstractHistogramBase."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #2                  // Field maxValue:J
       9: aload_0
      10: ldc2_w        #10                 // long 9223372036854775807l
      13: putfield      #7                  // Field minNonZeroValue:J
      16: lload_1
      17: lconst_1
      18: lcmp
      19: ifge          32
      22: new           #17                 // class java/lang/IllegalArgumentException
      25: dup
      26: ldc           #18                 // String lowestDiscernibleValue must be >= 1
      28: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: lload_3
      33: ldc2_w        #12                 // long 2l
      36: lload_1
      37: lmul
      38: lcmp
      39: ifge          52
      42: new           #17                 // class java/lang/IllegalArgumentException
      45: dup
      46: ldc           #20                 // String highestTrackableValue must be >= 2 * lowestDiscernibleValue
      48: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: iload         5
      54: iflt          63
      57: iload         5
      59: iconst_5
      60: if_icmple     73
      63: new           #17                 // class java/lang/IllegalArgumentException
      66: dup
      67: ldc           #21                 // String numberOfSignificantValueDigits must be between 0 and 5
      69: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      72: athrow
      73: aload_0
      74: getstatic     #22                 // Field constructionIdentityCount:Ljava/util/concurrent/atomic/AtomicLong;
      77: invokevirtual #23                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
      80: putfield      #24                 // Field identity:J
      83: aload_0
      84: lload_1
      85: lload_3
      86: iload         5
      88: dconst_1
      89: iconst_0
      90: invokespecial #25                 // Method init:(JJIDI)V
      93: return

  protected org.HdrHistogram.AbstractHistogram(org.HdrHistogram.AbstractHistogram);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #26                 // Method getLowestDiscernibleValue:()J
       5: aload_1
       6: invokevirtual #27                 // Method getHighestTrackableValue:()J
       9: aload_1
      10: invokevirtual #28                 // Method getNumberOfSignificantValueDigits:()I
      13: invokespecial #14                 // Method "<init>":(JJI)V
      16: aload_0
      17: aload_1
      18: invokevirtual #29                 // Method getStartTimeStamp:()J
      21: invokevirtual #30                 // Method setStartTimeStamp:(J)V
      24: aload_0
      25: aload_1
      26: invokevirtual #31                 // Method getEndTimeStamp:()J
      29: invokevirtual #32                 // Method setEndTimeStamp:(J)V
      32: aload_0
      33: aload_1
      34: getfield      #15                 // Field autoResize:Z
      37: putfield      #15                 // Field autoResize:Z
      40: return

  private void init(long, long, int, double, int);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #33                 // Field lowestDiscernibleValue:J
       5: aload_0
       6: lload_3
       7: putfield      #34                 // Field highestTrackableValue:J
      10: aload_0
      11: iload         5
      13: putfield      #35                 // Field numberOfSignificantValueDigits:I
      16: aload_0
      17: dload         6
      19: putfield      #36                 // Field integerToDoubleValueConversionRatio:D
      22: iload         8
      24: ifeq          33
      27: aload_0
      28: iload         8
      30: invokevirtual #37                 // Method setNormalizingIndexOffset:(I)V
      33: ldc2_w        #12                 // long 2l
      36: ldc2_w        #38                 // double 10.0d
      39: iload         5
      41: i2d
      42: invokestatic  #40                 // Method java/lang/Math.pow:(DD)D
      45: d2l
      46: lmul
      47: lstore        9
      49: aload_0
      50: lload_1
      51: l2d
      52: invokestatic  #41                 // Method java/lang/Math.log:(D)D
      55: ldc2_w        #42                 // double 2.0d
      58: invokestatic  #41                 // Method java/lang/Math.log:(D)D
      61: ddiv
      62: invokestatic  #44                 // Method java/lang/Math.floor:(D)D
      65: d2i
      66: putfield      #45                 // Field unitMagnitude:I
      69: aload_0
      70: iconst_1
      71: aload_0
      72: getfield      #45                 // Field unitMagnitude:I
      75: ishl
      76: iconst_1
      77: isub
      78: i2l
      79: putfield      #1                  // Field unitMagnitudeMask:J
      82: lload         9
      84: l2d
      85: invokestatic  #41                 // Method java/lang/Math.log:(D)D
      88: ldc2_w        #42                 // double 2.0d
      91: invokestatic  #41                 // Method java/lang/Math.log:(D)D
      94: ddiv
      95: invokestatic  #46                 // Method java/lang/Math.ceil:(D)D
      98: d2i
      99: istore        11
     101: aload_0
     102: iload         11
     104: iconst_1
     105: if_icmple     113
     108: iload         11
     110: goto          114
     113: iconst_1
     114: iconst_1
     115: isub
     116: putfield      #47                 // Field subBucketHalfCountMagnitude:I
     119: aload_0
     120: ldc2_w        #42                 // double 2.0d
     123: aload_0
     124: getfield      #47                 // Field subBucketHalfCountMagnitude:I
     127: iconst_1
     128: iadd
     129: i2d
     130: invokestatic  #40                 // Method java/lang/Math.pow:(DD)D
     133: d2i
     134: putfield      #48                 // Field subBucketCount:I
     137: aload_0
     138: aload_0
     139: getfield      #48                 // Field subBucketCount:I
     142: iconst_2
     143: idiv
     144: putfield      #49                 // Field subBucketHalfCount:I
     147: aload_0
     148: aload_0
     149: getfield      #48                 // Field subBucketCount:I
     152: i2l
     153: lconst_1
     154: lsub
     155: aload_0
     156: getfield      #45                 // Field unitMagnitude:I
     159: lshl
     160: putfield      #50                 // Field subBucketMask:J
     163: aload_0
     164: lload_3
     165: invokevirtual #51                 // Method establishSize:(J)V
     168: aload_0
     169: bipush        64
     171: aload_0
     172: getfield      #45                 // Field unitMagnitude:I
     175: isub
     176: aload_0
     177: getfield      #47                 // Field subBucketHalfCountMagnitude:I
     180: isub
     181: iconst_1
     182: isub
     183: putfield      #52                 // Field leadingZeroCountBase:I
     186: aload_0
     187: new           #53                 // class org/HdrHistogram/PercentileIterator
     190: dup
     191: aload_0
     192: iconst_1
     193: invokespecial #54                 // Method org/HdrHistogram/PercentileIterator."<init>":(Lorg/HdrHistogram/AbstractHistogram;I)V
     196: putfield      #55                 // Field percentileIterator:Lorg/HdrHistogram/PercentileIterator;
     199: aload_0
     200: new           #56                 // class org/HdrHistogram/RecordedValuesIterator
     203: dup
     204: aload_0
     205: invokespecial #57                 // Method org/HdrHistogram/RecordedValuesIterator."<init>":(Lorg/HdrHistogram/AbstractHistogram;)V
     208: putfield      #58                 // Field recordedValuesIterator:Lorg/HdrHistogram/RecordedValuesIterator;
     211: return

  final void establishSize(long);
    Code:
       0: aload_0
       1: aload_0
       2: lload_1
       3: invokevirtual #59                 // Method determineArrayLengthNeeded:(J)I
       6: putfield      #60                 // Field countsArrayLength:I
       9: aload_0
      10: aload_0
      11: lload_1
      12: invokevirtual #61                 // Method getBucketsNeededToCoverValue:(J)I
      15: putfield      #62                 // Field bucketCount:I
      18: aload_0
      19: lload_1
      20: putfield      #34                 // Field highestTrackableValue:J
      23: return

  final int determineArrayLengthNeeded(long);
    Code:
       0: lload_1
       1: ldc2_w        #12                 // long 2l
       4: aload_0
       5: getfield      #33                 // Field lowestDiscernibleValue:J
       8: lmul
       9: lcmp
      10: ifge          45
      13: new           #17                 // class java/lang/IllegalArgumentException
      16: dup
      17: new           #63                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #65                 // String highestTrackableValue (
      26: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: lload_1
      30: invokevirtual #67                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      33: ldc           #68                 // String ) cannot be < (2 * lowestDiscernibleValue)
      35: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #69                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_0
      46: aload_0
      47: lload_1
      48: invokevirtual #61                 // Method getBucketsNeededToCoverValue:(J)I
      51: invokevirtual #70                 // Method getLengthForNumberOfBuckets:(I)I
      54: istore_3
      55: iload_3
      56: ireturn

  public boolean isAutoResize();
    Code:
       0: aload_0
       1: getfield      #15                 // Field autoResize:Z
       4: ireturn

  public void setAutoResize(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field autoResize:Z
       5: return

  public void recordValue(long) throws java.lang.ArrayIndexOutOfBoundsException;
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #71                 // Method recordSingleValue:(J)V
       5: return

  public void recordValueWithCount(long, long) throws java.lang.ArrayIndexOutOfBoundsException;
    Code:
       0: aload_0
       1: lload_3
       2: lload_1
       3: invokespecial #72                 // Method recordCountAtValue:(JJ)V
       6: return

  public void recordValueWithExpectedInterval(long, long) throws java.lang.ArrayIndexOutOfBoundsException;
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: invokespecial #73                 // Method recordSingleValueWithExpectedInterval:(JJ)V
       6: return

  public void recordValue(long, long) throws java.lang.ArrayIndexOutOfBoundsException;
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: invokevirtual #74                 // Method recordValueWithExpectedInterval:(JJ)V
       6: return

  private void updateMinAndMax(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #2                  // Field maxValue:J
       5: lcmp
       6: ifle          14
       9: aload_0
      10: lload_1
      11: invokevirtual #75                 // Method updatedMaxValue:(J)V
      14: lload_1
      15: aload_0
      16: getfield      #7                  // Field minNonZeroValue:J
      19: lcmp
      20: ifge          34
      23: lload_1
      24: lconst_0
      25: lcmp
      26: ifeq          34
      29: aload_0
      30: lload_1
      31: invokevirtual #76                 // Method updateMinNonZeroValue:(J)V
      34: return

  private void recordCountAtValue(long, long) throws java.lang.ArrayIndexOutOfBoundsException;
    Code:
       0: aload_0
       1: lload_3
       2: invokevirtual #77                 // Method countsArrayIndex:(J)I
       5: istore        5
       7: aload_0
       8: iload         5
      10: lload_1
      11: invokevirtual #78                 // Method addToCountAtIndex:(IJ)V
      14: goto          40
      17: astore        6
      19: aload_0
      20: lload_1
      21: lload_3
      22: aload         6
      24: invokespecial #80                 // Method handleRecordException:(JJLjava/lang/Exception;)V
      27: goto          40
      30: astore        6
      32: aload_0
      33: lload_1
      34: lload_3
      35: aload         6
      37: invokespecial #80                 // Method handleRecordException:(JJLjava/lang/Exception;)V
      40: aload_0
      41: lload_3
      42: invokespecial #82                 // Method updateMinAndMax:(J)V
      45: aload_0
      46: lload_1
      47: invokevirtual #83                 // Method addToTotalCount:(J)V
      50: return
    Exception table:
       from    to  target type
           7    14    17   Class java/lang/ArrayIndexOutOfBoundsException
           7    14    30   Class java/lang/IndexOutOfBoundsException

  private void recordSingleValue(long) throws java.lang.ArrayIndexOutOfBoundsException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #77                 // Method countsArrayIndex:(J)I
       5: istore_3
       6: aload_0
       7: iload_3
       8: invokevirtual #84                 // Method incrementCountAtIndex:(I)V
      11: goto          37
      14: astore        4
      16: aload_0
      17: lconst_1
      18: lload_1
      19: aload         4
      21: invokespecial #80                 // Method handleRecordException:(JJLjava/lang/Exception;)V
      24: goto          37
      27: astore        4
      29: aload_0
      30: lconst_1
      31: lload_1
      32: aload         4
      34: invokespecial #80                 // Method handleRecordException:(JJLjava/lang/Exception;)V
      37: aload_0
      38: lload_1
      39: invokespecial #82                 // Method updateMinAndMax:(J)V
      42: aload_0
      43: invokevirtual #85                 // Method incrementTotalCount:()V
      46: return
    Exception table:
       from    to  target type
           6    11    14   Class java/lang/ArrayIndexOutOfBoundsException
           6    11    27   Class java/lang/IndexOutOfBoundsException

  private void handleRecordException(long, long, java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #15                 // Field autoResize:Z
       4: ifne          35
       7: new           #79                 // class java/lang/ArrayIndexOutOfBoundsException
      10: dup
      11: new           #63                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #86                 // String value outside of histogram covered range. Caused by:
      20: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload         5
      25: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      28: invokevirtual #69                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokespecial #88                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: lload_3
      37: invokevirtual #89                 // Method resize:(J)V
      40: aload_0
      41: lload_3
      42: invokevirtual #77                 // Method countsArrayIndex:(J)I
      45: istore        6
      47: aload_0
      48: iload         6
      50: lload_1
      51: invokevirtual #78                 // Method addToCountAtIndex:(IJ)V
      54: aload_0
      55: aload_0
      56: aload_0
      57: aload_0
      58: getfield      #60                 // Field countsArrayLength:I
      61: iconst_1
      62: isub
      63: invokevirtual #90                 // Method valueFromIndex:(I)J
      66: invokevirtual #91                 // Method highestEquivalentValue:(J)J
      69: putfield      #34                 // Field highestTrackableValue:J
      72: return

  private void recordValueWithCountAndExpectedInterval(long, long, long) throws java.lang.ArrayIndexOutOfBoundsException;
    Code:
       0: aload_0
       1: lload_3
       2: lload_1
       3: invokespecial #72                 // Method recordCountAtValue:(JJ)V
       6: lload         5
       8: lconst_0
       9: lcmp
      10: ifgt          14
      13: return
      14: lload_1
      15: lload         5
      17: lsub
      18: lstore        7
      20: lload         7
      22: lload         5
      24: lcmp
      25: iflt          45
      28: aload_0
      29: lload_3
      30: lload         7
      32: invokespecial #72                 // Method recordCountAtValue:(JJ)V
      35: lload         7
      37: lload         5
      39: lsub
      40: lstore        7
      42: goto          20
      45: return

  private void recordSingleValueWithExpectedInterval(long, long) throws java.lang.ArrayIndexOutOfBoundsException;
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #71                 // Method recordSingleValue:(J)V
       5: lload_3
       6: lconst_0
       7: lcmp
       8: ifgt          12
      11: return
      12: lload_1
      13: lload_3
      14: lsub
      15: lstore        5
      17: lload         5
      19: lload_3
      20: lcmp
      21: iflt          39
      24: aload_0
      25: lload         5
      27: invokespecial #71                 // Method recordSingleValue:(J)V
      30: lload         5
      32: lload_3
      33: lsub
      34: lstore        5
      36: goto          17
      39: return

  public void reset();
    Code:
       0: aload_0
       1: invokevirtual #92                 // Method clearCounts:()V
       4: aload_0
       5: lconst_0
       6: invokevirtual #93                 // Method resetMaxValue:(J)V
       9: aload_0
      10: ldc2_w        #10                 // long 9223372036854775807l
      13: invokevirtual #94                 // Method resetMinNonZeroValue:(J)V
      16: aload_0
      17: iconst_0
      18: invokevirtual #37                 // Method setNormalizingIndexOffset:(I)V
      21: aload_0
      22: ldc2_w        #10                 // long 9223372036854775807l
      25: putfield      #95                 // Field startTimeStampMsec:J
      28: aload_0
      29: lconst_0
      30: putfield      #96                 // Field endTimeStampMsec:J
      33: aload_0
      34: aconst_null
      35: putfield      #97                 // Field tag:Ljava/lang/String;
      38: return

  public abstract org.HdrHistogram.AbstractHistogram copy();

  public abstract org.HdrHistogram.AbstractHistogram copyCorrectedForCoordinatedOmission(long);

  public void copyInto(org.HdrHistogram.AbstractHistogram);
    Code:
       0: aload_1
       1: invokevirtual #98                 // Method reset:()V
       4: aload_1
       5: aload_0
       6: invokevirtual #99                 // Method add:(Lorg/HdrHistogram/AbstractHistogram;)V
       9: aload_1
      10: aload_0
      11: getfield      #95                 // Field startTimeStampMsec:J
      14: invokevirtual #30                 // Method setStartTimeStamp:(J)V
      17: aload_1
      18: aload_0
      19: getfield      #96                 // Field endTimeStampMsec:J
      22: invokevirtual #32                 // Method setEndTimeStamp:(J)V
      25: return

  public void copyIntoCorrectedForCoordinatedOmission(org.HdrHistogram.AbstractHistogram, long);
    Code:
       0: aload_1
       1: invokevirtual #98                 // Method reset:()V
       4: aload_1
       5: aload_0
       6: lload_2
       7: invokevirtual #100                // Method addWhileCorrectingForCoordinatedOmission:(Lorg/HdrHistogram/AbstractHistogram;J)V
      10: aload_1
      11: aload_0
      12: getfield      #95                 // Field startTimeStampMsec:J
      15: invokevirtual #30                 // Method setStartTimeStamp:(J)V
      18: aload_1
      19: aload_0
      20: getfield      #96                 // Field endTimeStampMsec:J
      23: invokevirtual #32                 // Method setEndTimeStamp:(J)V
      26: return

  public void add(org.HdrHistogram.AbstractHistogram) throws java.lang.ArrayIndexOutOfBoundsException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: getfield      #60                 // Field countsArrayLength:I
       6: iconst_1
       7: isub
       8: invokevirtual #90                 // Method valueFromIndex:(I)J
      11: invokevirtual #91                 // Method highestEquivalentValue:(J)J
      14: lstore_2
      15: lload_2
      16: aload_1
      17: invokevirtual #101                // Method getMaxValue:()J
      20: lcmp
      21: ifge          49
      24: aload_0
      25: invokevirtual #102                // Method isAutoResize:()Z
      28: ifne          41
      31: new           #79                 // class java/lang/ArrayIndexOutOfBoundsException
      34: dup
      35: ldc           #103                // String The other histogram includes values that do not fit in this histogram\'s range.
      37: invokespecial #88                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: aload_0
      42: aload_1
      43: invokevirtual #101                // Method getMaxValue:()J
      46: invokevirtual #89                 // Method resize:(J)V
      49: aload_0
      50: getfield      #62                 // Field bucketCount:I
      53: aload_1
      54: getfield      #62                 // Field bucketCount:I
      57: if_icmpne     195
      60: aload_0
      61: getfield      #48                 // Field subBucketCount:I
      64: aload_1
      65: getfield      #48                 // Field subBucketCount:I
      68: if_icmpne     195
      71: aload_0
      72: getfield      #45                 // Field unitMagnitude:I
      75: aload_1
      76: getfield      #45                 // Field unitMagnitude:I
      79: if_icmpne     195
      82: aload_0
      83: invokevirtual #104                // Method getNormalizingIndexOffset:()I
      86: aload_1
      87: invokevirtual #104                // Method getNormalizingIndexOffset:()I
      90: if_icmpne     195
      93: aload_1
      94: instanceof    #105                // class org/HdrHistogram/ConcurrentHistogram
      97: ifne          195
     100: lconst_0
     101: lstore        4
     103: iconst_0
     104: istore        6
     106: iload         6
     108: aload_1
     109: getfield      #60                 // Field countsArrayLength:I
     112: if_icmpge     151
     115: aload_1
     116: iload         6
     118: invokevirtual #106                // Method getCountAtIndex:(I)J
     121: lstore        7
     123: lload         7
     125: lconst_0
     126: lcmp
     127: ifle          145
     130: aload_0
     131: iload         6
     133: lload         7
     135: invokevirtual #78                 // Method addToCountAtIndex:(IJ)V
     138: lload         4
     140: lload         7
     142: ladd
     143: lstore        4
     145: iinc          6, 1
     148: goto          106
     151: aload_0
     152: aload_0
     153: invokevirtual #107                // Method getTotalCount:()J
     156: lload         4
     158: ladd
     159: invokevirtual #108                // Method setTotalCount:(J)V
     162: aload_0
     163: aload_0
     164: invokevirtual #101                // Method getMaxValue:()J
     167: aload_1
     168: invokevirtual #101                // Method getMaxValue:()J
     171: invokestatic  #109                // Method java/lang/Math.max:(JJ)J
     174: invokevirtual #75                 // Method updatedMaxValue:(J)V
     177: aload_0
     178: aload_0
     179: invokevirtual #110                // Method getMinNonZeroValue:()J
     182: aload_1
     183: invokevirtual #110                // Method getMinNonZeroValue:()J
     186: invokestatic  #111                // Method java/lang/Math.min:(JJ)J
     189: invokevirtual #76                 // Method updateMinNonZeroValue:(J)V
     192: goto          268
     195: aload_1
     196: aload_1
     197: invokevirtual #101                // Method getMaxValue:()J
     200: invokevirtual #77                 // Method countsArrayIndex:(J)I
     203: istore        4
     205: aload_1
     206: iload         4
     208: invokevirtual #106                // Method getCountAtIndex:(I)J
     211: lstore        5
     213: aload_0
     214: aload_1
     215: iload         4
     217: invokevirtual #90                 // Method valueFromIndex:(I)J
     220: lload         5
     222: invokevirtual #112                // Method recordValueWithCount:(JJ)V
     225: iconst_0
     226: istore        7
     228: iload         7
     230: iload         4
     232: if_icmpge     268
     235: aload_1
     236: iload         7
     238: invokevirtual #106                // Method getCountAtIndex:(I)J
     241: lstore        5
     243: lload         5
     245: lconst_0
     246: lcmp
     247: ifle          262
     250: aload_0
     251: aload_1
     252: iload         7
     254: invokevirtual #90                 // Method valueFromIndex:(I)J
     257: lload         5
     259: invokevirtual #112                // Method recordValueWithCount:(JJ)V
     262: iinc          7, 1
     265: goto          228
     268: aload_0
     269: aload_0
     270: getfield      #95                 // Field startTimeStampMsec:J
     273: aload_1
     274: getfield      #95                 // Field startTimeStampMsec:J
     277: invokestatic  #111                // Method java/lang/Math.min:(JJ)J
     280: invokevirtual #30                 // Method setStartTimeStamp:(J)V
     283: aload_0
     284: aload_0
     285: getfield      #96                 // Field endTimeStampMsec:J
     288: aload_1
     289: getfield      #96                 // Field endTimeStampMsec:J
     292: invokestatic  #109                // Method java/lang/Math.max:(JJ)J
     295: invokevirtual #32                 // Method setEndTimeStamp:(J)V
     298: return

  public void subtract(org.HdrHistogram.AbstractHistogram) throws java.lang.ArrayIndexOutOfBoundsException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #60                 // Field countsArrayLength:I
       5: iconst_1
       6: isub
       7: invokevirtual #90                 // Method valueFromIndex:(I)J
      10: lstore_2
      11: lload_2
      12: aload_1
      13: invokevirtual #101                // Method getMaxValue:()J
      16: lcmp
      17: ifge          45
      20: aload_0
      21: invokevirtual #102                // Method isAutoResize:()Z
      24: ifne          37
      27: new           #79                 // class java/lang/ArrayIndexOutOfBoundsException
      30: dup
      31: ldc           #103                // String The other histogram includes values that do not fit in this histogram\'s range.
      33: invokespecial #88                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_0
      38: aload_1
      39: invokevirtual #101                // Method getMaxValue:()J
      42: invokevirtual #89                 // Method resize:(J)V
      45: iconst_0
      46: istore        4
      48: iload         4
      50: aload_1
      51: getfield      #60                 // Field countsArrayLength:I
      54: if_icmpge     164
      57: aload_1
      58: iload         4
      60: invokevirtual #106                // Method getCountAtIndex:(I)J
      63: lstore        5
      65: lload         5
      67: lconst_0
      68: lcmp
      69: ifle          158
      72: aload_1
      73: iload         4
      75: invokevirtual #90                 // Method valueFromIndex:(I)J
      78: lstore        7
      80: aload_0
      81: lload         7
      83: invokevirtual #113                // Method getCountAtValue:(J)J
      86: lload         5
      88: lcmp
      89: ifge          149
      92: new           #17                 // class java/lang/IllegalArgumentException
      95: dup
      96: new           #63                 // class java/lang/StringBuilder
      99: dup
     100: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
     103: ldc           #114                // String otherHistogram count (
     105: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: lload         5
     110: invokevirtual #67                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     113: ldc           #115                // String ) at value
     115: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: lload         7
     120: invokevirtual #67                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     123: ldc           #116                // String  is larger than this one\'s (
     125: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: aload_0
     129: lload         7
     131: invokevirtual #113                // Method getCountAtValue:(J)J
     134: invokevirtual #67                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     137: ldc           #117                // String )
     139: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: invokevirtual #69                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     145: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     148: athrow
     149: aload_0
     150: lload         7
     152: lload         5
     154: lneg
     155: invokevirtual #112                // Method recordValueWithCount:(JJ)V
     158: iinc          4, 1
     161: goto          48
     164: aload_0
     165: aload_0
     166: invokevirtual #101                // Method getMaxValue:()J
     169: invokevirtual #113                // Method getCountAtValue:(J)J
     172: lconst_0
     173: lcmp
     174: ifle          190
     177: aload_0
     178: aload_0
     179: invokevirtual #110                // Method getMinNonZeroValue:()J
     182: invokevirtual #113                // Method getCountAtValue:(J)J
     185: lconst_0
     186: lcmp
     187: ifgt          194
     190: aload_0
     191: invokevirtual #118                // Method establishInternalTackingValues:()V
     194: return

  public void addWhileCorrectingForCoordinatedOmission(org.HdrHistogram.AbstractHistogram, long);
    Code:
       0: aload_0
       1: astore        4
       3: aload_1
       4: invokevirtual #119                // Method recordedValues:()Lorg/HdrHistogram/AbstractHistogram$RecordedValues;
       7: invokevirtual #120                // Method org/HdrHistogram/AbstractHistogram$RecordedValues.iterator:()Ljava/util/Iterator;
      10: astore        5
      12: aload         5
      14: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          53
      22: aload         5
      24: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #123                // class org/HdrHistogram/HistogramIterationValue
      32: astore        6
      34: aload         4
      36: aload         6
      38: invokevirtual #124                // Method org/HdrHistogram/HistogramIterationValue.getValueIteratedTo:()J
      41: aload         6
      43: invokevirtual #125                // Method org/HdrHistogram/HistogramIterationValue.getCountAtValueIteratedTo:()J
      46: lload_2
      47: invokespecial #126                // Method recordValueWithCountAndExpectedInterval:(JJJ)V
      50: goto          12
      53: return

  public void shiftValuesLeft(int);
    Code:
       0: iload_1
       1: ifge          14
       4: new           #17                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #127                // String Cannot shift by a negative number of magnitudes
      10: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_1
      15: ifne          19
      18: return
      19: aload_0
      20: invokevirtual #107                // Method getTotalCount:()J
      23: aload_0
      24: iconst_0
      25: invokevirtual #106                // Method getCountAtIndex:(I)J
      28: lcmp
      29: ifne          33
      32: return
      33: iload_1
      34: aload_0
      35: getfield      #47                 // Field subBucketHalfCountMagnitude:I
      38: ishl
      39: istore_2
      40: aload_0
      41: aload_0
      42: invokevirtual #101                // Method getMaxValue:()J
      45: invokevirtual #77                 // Method countsArrayIndex:(J)I
      48: istore_3
      49: iload_3
      50: aload_0
      51: getfield      #60                 // Field countsArrayLength:I
      54: iload_2
      55: isub
      56: if_icmplt     69
      59: new           #79                 // class java/lang/ArrayIndexOutOfBoundsException
      62: dup
      63: ldc           #128                // String Operation would overflow, would discard recorded value counts
      65: invokespecial #88                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: getstatic     #3                  // Field maxValueUpdater:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      72: aload_0
      73: lconst_0
      74: invokevirtual #129                // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.getAndSet:(Ljava/lang/Object;J)J
      77: lstore        4
      79: getstatic     #8                  // Field minNonZeroValueUpdater:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      82: aload_0
      83: ldc2_w        #10                 // long 9223372036854775807l
      86: invokevirtual #129                // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.getAndSet:(Ljava/lang/Object;J)J
      89: lstore        6
      91: lload         6
      93: aload_0
      94: getfield      #49                 // Field subBucketHalfCount:I
      97: i2l
      98: lcmp
      99: ifge          106
     102: iconst_1
     103: goto          107
     106: iconst_0
     107: istore        8
     109: aload_0
     110: iload_2
     111: iload         8
     113: invokevirtual #130                // Method shiftNormalizingIndexByOffset:(IZ)V
     116: aload_0
     117: lload         4
     119: iload_1
     120: lshl
     121: invokespecial #82                 // Method updateMinAndMax:(J)V
     124: lload         6
     126: ldc2_w        #10                 // long 9223372036854775807l
     129: lcmp
     130: ifge          141
     133: aload_0
     134: lload         6
     136: iload_1
     137: lshl
     138: invokespecial #82                 // Method updateMinAndMax:(J)V
     141: return

  void nonConcurrentNormalizingIndexShift(int, boolean);
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #106                // Method getCountAtIndex:(I)J
       5: lstore_3
       6: aload_0
       7: iconst_0
       8: lconst_0
       9: invokevirtual #131                // Method setCountAtIndex:(IJ)V
      12: aload_0
      13: aload_0
      14: invokevirtual #104                // Method getNormalizingIndexOffset:()I
      17: iload_1
      18: iadd
      19: invokevirtual #37                 // Method setNormalizingIndexOffset:(I)V
      22: iload_2
      23: ifeq          31
      26: aload_0
      27: iload_1
      28: invokevirtual #132                // Method shiftLowestHalfBucketContentsLeft:(I)V
      31: aload_0
      32: iconst_0
      33: lload_3
      34: invokevirtual #131                // Method setCountAtIndex:(IJ)V
      37: return

  void shiftLowestHalfBucketContentsLeft(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #47                 // Field subBucketHalfCountMagnitude:I
       5: ishr
       6: istore_2
       7: iconst_1
       8: istore_3
       9: iload_3
      10: aload_0
      11: getfield      #49                 // Field subBucketHalfCount:I
      14: if_icmpge     61
      17: aload_0
      18: iload_3
      19: invokevirtual #90                 // Method valueFromIndex:(I)J
      22: iload_2
      23: lshl
      24: lstore        4
      26: aload_0
      27: lload         4
      29: invokevirtual #77                 // Method countsArrayIndex:(J)I
      32: istore        6
      34: aload_0
      35: iload_3
      36: invokevirtual #133                // Method getCountAtNormalizedIndex:(I)J
      39: lstore        7
      41: aload_0
      42: iload         6
      44: lload         7
      46: invokevirtual #131                // Method setCountAtIndex:(IJ)V
      49: aload_0
      50: iload_3
      51: lconst_0
      52: invokevirtual #134                // Method setCountAtNormalizedIndex:(IJ)V
      55: iinc          3, 1
      58: goto          9
      61: return

  public void shiftValuesRight(int);
    Code:
       0: iload_1
       1: ifge          14
       4: new           #17                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #127                // String Cannot shift by a negative number of magnitudes
      10: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_1
      15: ifne          19
      18: return
      19: aload_0
      20: invokevirtual #107                // Method getTotalCount:()J
      23: aload_0
      24: iconst_0
      25: invokevirtual #106                // Method getCountAtIndex:(I)J
      28: lcmp
      29: ifne          33
      32: return
      33: aload_0
      34: getfield      #49                 // Field subBucketHalfCount:I
      37: iload_1
      38: imul
      39: istore_2
      40: aload_0
      41: aload_0
      42: invokevirtual #110                // Method getMinNonZeroValue:()J
      45: invokevirtual #77                 // Method countsArrayIndex:(J)I
      48: istore_3
      49: iload_3
      50: iload_2
      51: aload_0
      52: getfield      #49                 // Field subBucketHalfCount:I
      55: iadd
      56: if_icmpge     69
      59: new           #79                 // class java/lang/ArrayIndexOutOfBoundsException
      62: dup
      63: ldc           #135                // String Operation would underflow and lose precision of already recorded value counts
      65: invokespecial #88                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: getstatic     #3                  // Field maxValueUpdater:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      72: aload_0
      73: lconst_0
      74: invokevirtual #129                // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.getAndSet:(Ljava/lang/Object;J)J
      77: lstore        4
      79: getstatic     #8                  // Field minNonZeroValueUpdater:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      82: aload_0
      83: ldc2_w        #10                 // long 9223372036854775807l
      86: invokevirtual #129                // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.getAndSet:(Ljava/lang/Object;J)J
      89: lstore        6
      91: aload_0
      92: iload_2
      93: ineg
      94: iconst_0
      95: invokevirtual #130                // Method shiftNormalizingIndexByOffset:(IZ)V
      98: aload_0
      99: lload         4
     101: iload_1
     102: lshr
     103: invokespecial #82                 // Method updateMinAndMax:(J)V
     106: lload         6
     108: ldc2_w        #10                 // long 9223372036854775807l
     111: lcmp
     112: ifge          123
     115: aload_0
     116: lload         6
     118: iload_1
     119: lshr
     120: invokespecial #82                 // Method updateMinAndMax:(J)V
     123: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #136                // class org/HdrHistogram/AbstractHistogram
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #136                // class org/HdrHistogram/AbstractHistogram
      20: astore_2
      21: aload_0
      22: getfield      #33                 // Field lowestDiscernibleValue:J
      25: aload_2
      26: getfield      #33                 // Field lowestDiscernibleValue:J
      29: lcmp
      30: ifne          56
      33: aload_0
      34: getfield      #35                 // Field numberOfSignificantValueDigits:I
      37: aload_2
      38: getfield      #35                 // Field numberOfSignificantValueDigits:I
      41: if_icmpne     56
      44: aload_0
      45: getfield      #36                 // Field integerToDoubleValueConversionRatio:D
      48: aload_2
      49: getfield      #36                 // Field integerToDoubleValueConversionRatio:D
      52: dcmpl
      53: ifeq          58
      56: iconst_0
      57: ireturn
      58: aload_0
      59: invokevirtual #107                // Method getTotalCount:()J
      62: aload_2
      63: invokevirtual #107                // Method getTotalCount:()J
      66: lcmp
      67: ifeq          72
      70: iconst_0
      71: ireturn
      72: aload_0
      73: invokevirtual #101                // Method getMaxValue:()J
      76: aload_2
      77: invokevirtual #101                // Method getMaxValue:()J
      80: lcmp
      81: ifeq          86
      84: iconst_0
      85: ireturn
      86: aload_0
      87: invokevirtual #110                // Method getMinNonZeroValue:()J
      90: aload_2
      91: invokevirtual #110                // Method getMinNonZeroValue:()J
      94: lcmp
      95: ifeq          100
      98: iconst_0
      99: ireturn
     100: iconst_0
     101: istore_3
     102: iload_3
     103: aload_0
     104: getfield      #60                 // Field countsArrayLength:I
     107: if_icmpge     132
     110: aload_0
     111: iload_3
     112: invokevirtual #106                // Method getCountAtIndex:(I)J
     115: aload_2
     116: iload_3
     117: invokevirtual #106                // Method getCountAtIndex:(I)J
     120: lcmp
     121: ifeq          126
     124: iconst_0
     125: ireturn
     126: iinc          3, 1
     129: goto          102
     132: iconst_1
     133: ireturn

  public int hashCode();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: iload_1
       4: aload_0
       5: getfield      #45                 // Field unitMagnitude:I
       8: invokespecial #137                // Method oneAtATimeHashStep:(II)I
      11: istore_1
      12: aload_0
      13: iload_1
      14: aload_0
      15: getfield      #35                 // Field numberOfSignificantValueDigits:I
      18: invokespecial #137                // Method oneAtATimeHashStep:(II)I
      21: istore_1
      22: aload_0
      23: iload_1
      24: aload_0
      25: invokevirtual #107                // Method getTotalCount:()J
      28: l2i
      29: invokespecial #137                // Method oneAtATimeHashStep:(II)I
      32: istore_1
      33: aload_0
      34: iload_1
      35: aload_0
      36: invokevirtual #101                // Method getMaxValue:()J
      39: l2i
      40: invokespecial #137                // Method oneAtATimeHashStep:(II)I
      43: istore_1
      44: aload_0
      45: iload_1
      46: aload_0
      47: invokevirtual #110                // Method getMinNonZeroValue:()J
      50: l2i
      51: invokespecial #137                // Method oneAtATimeHashStep:(II)I
      54: istore_1
      55: iload_1
      56: iload_1
      57: iconst_3
      58: ishl
      59: iadd
      60: istore_1
      61: iload_1
      62: iload_1
      63: bipush        11
      65: ishr
      66: ixor
      67: istore_1
      68: iload_1
      69: iload_1
      70: bipush        15
      72: ishl
      73: iadd
      74: istore_1
      75: iload_1
      76: ireturn

  private int oneAtATimeHashStep(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: iadd
       3: istore_1
       4: iload_1
       5: iload_1
       6: bipush        10
       8: ishl
       9: iadd
      10: istore_1
      11: iload_1
      12: iload_1
      13: bipush        6
      15: ishr
      16: ixor
      17: istore_1
      18: iload_1
      19: ireturn

  public long getLowestDiscernibleValue();
    Code:
       0: aload_0
       1: getfield      #33                 // Field lowestDiscernibleValue:J
       4: lreturn

  public long getHighestTrackableValue();
    Code:
       0: aload_0
       1: getfield      #34                 // Field highestTrackableValue:J
       4: lreturn

  public int getNumberOfSignificantValueDigits();
    Code:
       0: aload_0
       1: getfield      #35                 // Field numberOfSignificantValueDigits:I
       4: ireturn

  public long sizeOfEquivalentValueRange(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #138                // Method getBucketIndex:(J)I
       5: istore_3
       6: aload_0
       7: lload_1
       8: iload_3
       9: invokevirtual #139                // Method getSubBucketIndex:(JI)I
      12: istore        4
      14: lconst_1
      15: aload_0
      16: getfield      #45                 // Field unitMagnitude:I
      19: iload         4
      21: aload_0
      22: getfield      #48                 // Field subBucketCount:I
      25: if_icmplt     34
      28: iload_3
      29: iconst_1
      30: iadd
      31: goto          35
      34: iload_3
      35: iadd
      36: lshl
      37: lstore        5
      39: lload         5
      41: lreturn

  public long lowestEquivalentValue(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #138                // Method getBucketIndex:(J)I
       5: istore_3
       6: aload_0
       7: lload_1
       8: iload_3
       9: invokevirtual #139                // Method getSubBucketIndex:(JI)I
      12: istore        4
      14: aload_0
      15: iload_3
      16: iload         4
      18: invokevirtual #140                // Method valueFromIndex:(II)J
      21: lstore        5
      23: lload         5
      25: lreturn

  public long highestEquivalentValue(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #141                // Method nextNonEquivalentValue:(J)J
       5: lconst_1
       6: lsub
       7: lreturn

  public long medianEquivalentValue(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #142                // Method lowestEquivalentValue:(J)J
       5: aload_0
       6: lload_1
       7: invokevirtual #143                // Method sizeOfEquivalentValueRange:(J)J
      10: iconst_1
      11: lshr
      12: ladd
      13: lreturn

  public long nextNonEquivalentValue(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #142                // Method lowestEquivalentValue:(J)J
       5: aload_0
       6: lload_1
       7: invokevirtual #143                // Method sizeOfEquivalentValueRange:(J)J
      10: ladd
      11: lreturn

  public boolean valuesAreEquivalent(long, long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #142                // Method lowestEquivalentValue:(J)J
       5: aload_0
       6: lload_3
       7: invokevirtual #142                // Method lowestEquivalentValue:(J)J
      10: lcmp
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public int getEstimatedFootprintInBytes();
    Code:
       0: aload_0
       1: invokevirtual #144                // Method _getEstimatedFootprintInBytes:()I
       4: ireturn

  public long getStartTimeStamp();
    Code:
       0: aload_0
       1: getfield      #95                 // Field startTimeStampMsec:J
       4: lreturn

  public void setStartTimeStamp(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #95                 // Field startTimeStampMsec:J
       5: return

  public long getEndTimeStamp();
    Code:
       0: aload_0
       1: getfield      #96                 // Field endTimeStampMsec:J
       4: lreturn

  public void setEndTimeStamp(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #96                 // Field endTimeStampMsec:J
       5: return

  public java.lang.String getTag();
    Code:
       0: aload_0
       1: getfield      #97                 // Field tag:Ljava/lang/String;
       4: areturn

  public void setTag(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #97                 // Field tag:Ljava/lang/String;
       5: return

  public long getMinValue();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #106                // Method getCountAtIndex:(I)J
       5: lconst_0
       6: lcmp
       7: ifgt          19
      10: aload_0
      11: invokevirtual #107                // Method getTotalCount:()J
      14: lconst_0
      15: lcmp
      16: ifne          21
      19: lconst_0
      20: lreturn
      21: aload_0
      22: invokevirtual #110                // Method getMinNonZeroValue:()J
      25: lreturn

  public long getMaxValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field maxValue:J
       4: lconst_0
       5: lcmp
       6: ifne          13
       9: lconst_0
      10: goto          21
      13: aload_0
      14: aload_0
      15: getfield      #2                  // Field maxValue:J
      18: invokevirtual #91                 // Method highestEquivalentValue:(J)J
      21: lreturn

  public long getMinNonZeroValue();
    Code:
       0: aload_0
       1: getfield      #7                  // Field minNonZeroValue:J
       4: ldc2_w        #10                 // long 9223372036854775807l
       7: lcmp
       8: ifne          17
      11: ldc2_w        #10                 // long 9223372036854775807l
      14: goto          25
      17: aload_0
      18: aload_0
      19: getfield      #7                  // Field minNonZeroValue:J
      22: invokevirtual #142                // Method lowestEquivalentValue:(J)J
      25: lreturn

  public double getMaxValueAsDouble();
    Code:
       0: aload_0
       1: invokevirtual #101                // Method getMaxValue:()J
       4: l2d
       5: dreturn

  public double getMean();
    Code:
       0: aload_0
       1: invokevirtual #107                // Method getTotalCount:()J
       4: lconst_0
       5: lcmp
       6: ifne          11
       9: dconst_0
      10: dreturn
      11: aload_0
      12: getfield      #58                 // Field recordedValuesIterator:Lorg/HdrHistogram/RecordedValuesIterator;
      15: invokevirtual #145                // Method org/HdrHistogram/RecordedValuesIterator.reset:()V
      18: dconst_0
      19: dstore_1
      20: aload_0
      21: getfield      #58                 // Field recordedValuesIterator:Lorg/HdrHistogram/RecordedValuesIterator;
      24: invokevirtual #146                // Method org/HdrHistogram/RecordedValuesIterator.hasNext:()Z
      27: ifeq          58
      30: aload_0
      31: getfield      #58                 // Field recordedValuesIterator:Lorg/HdrHistogram/RecordedValuesIterator;
      34: invokevirtual #147                // Method org/HdrHistogram/RecordedValuesIterator.next:()Lorg/HdrHistogram/HistogramIterationValue;
      37: astore_3
      38: dload_1
      39: aload_0
      40: aload_3
      41: invokevirtual #124                // Method org/HdrHistogram/HistogramIterationValue.getValueIteratedTo:()J
      44: invokevirtual #148                // Method medianEquivalentValue:(J)J
      47: aload_3
      48: invokevirtual #125                // Method org/HdrHistogram/HistogramIterationValue.getCountAtValueIteratedTo:()J
      51: lmul
      52: l2d
      53: dadd
      54: dstore_1
      55: goto          20
      58: dload_1
      59: dconst_1
      60: dmul
      61: aload_0
      62: invokevirtual #107                // Method getTotalCount:()J
      65: l2d
      66: ddiv
      67: dreturn

  public double getStdDeviation();
    Code:
       0: aload_0
       1: invokevirtual #107                // Method getTotalCount:()J
       4: lconst_0
       5: lcmp
       6: ifne          11
       9: dconst_0
      10: dreturn
      11: aload_0
      12: invokevirtual #149                // Method getMean:()D
      15: dstore_1
      16: dconst_0
      17: dstore_3
      18: aload_0
      19: getfield      #58                 // Field recordedValuesIterator:Lorg/HdrHistogram/RecordedValuesIterator;
      22: invokevirtual #145                // Method org/HdrHistogram/RecordedValuesIterator.reset:()V
      25: aload_0
      26: getfield      #58                 // Field recordedValuesIterator:Lorg/HdrHistogram/RecordedValuesIterator;
      29: invokevirtual #146                // Method org/HdrHistogram/RecordedValuesIterator.hasNext:()Z
      32: ifeq          87
      35: aload_0
      36: getfield      #58                 // Field recordedValuesIterator:Lorg/HdrHistogram/RecordedValuesIterator;
      39: invokevirtual #147                // Method org/HdrHistogram/RecordedValuesIterator.next:()Lorg/HdrHistogram/HistogramIterationValue;
      42: astore        5
      44: aload_0
      45: aload         5
      47: invokevirtual #124                // Method org/HdrHistogram/HistogramIterationValue.getValueIteratedTo:()J
      50: invokevirtual #148                // Method medianEquivalentValue:(J)J
      53: l2d
      54: dconst_1
      55: dmul
      56: dload_1
      57: dsub
      58: invokestatic  #150                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      61: astore        6
      63: dload_3
      64: aload         6
      66: invokevirtual #151                // Method java/lang/Double.doubleValue:()D
      69: aload         6
      71: invokevirtual #151                // Method java/lang/Double.doubleValue:()D
      74: dmul
      75: aload         5
      77: invokevirtual #152                // Method org/HdrHistogram/HistogramIterationValue.getCountAddedInThisIterationStep:()J
      80: l2d
      81: dmul
      82: dadd
      83: dstore_3
      84: goto          25
      87: dload_3
      88: aload_0
      89: invokevirtual #107                // Method getTotalCount:()J
      92: l2d
      93: ddiv
      94: invokestatic  #153                // Method java/lang/Math.sqrt:(D)D
      97: dstore        5
      99: dload         5
     101: dreturn

  public long getValueAtPercentile(double);
    Code:
       0: dload_1
       1: ldc2_w        #154                // double 100.0d
       4: invokestatic  #156                // Method java/lang/Math.min:(DD)D
       7: dstore_3
       8: dload_3
       9: ldc2_w        #154                // double 100.0d
      12: ddiv
      13: aload_0
      14: invokevirtual #107                // Method getTotalCount:()J
      17: l2d
      18: dmul
      19: ldc2_w        #157                // double 0.5d
      22: dadd
      23: d2l
      24: lstore        5
      26: lload         5
      28: lconst_1
      29: invokestatic  #109                // Method java/lang/Math.max:(JJ)J
      32: lstore        5
      34: lconst_0
      35: lstore        7
      37: iconst_0
      38: istore        9
      40: iload         9
      42: aload_0
      43: getfield      #60                 // Field countsArrayLength:I
      46: if_icmpge     104
      49: lload         7
      51: aload_0
      52: iload         9
      54: invokevirtual #106                // Method getCountAtIndex:(I)J
      57: ladd
      58: lstore        7
      60: lload         7
      62: lload         5
      64: lcmp
      65: iflt          98
      68: aload_0
      69: iload         9
      71: invokevirtual #90                 // Method valueFromIndex:(I)J
      74: lstore        10
      76: dload_1
      77: dconst_0
      78: dcmpl
      79: ifne          91
      82: aload_0
      83: lload         10
      85: invokevirtual #142                // Method lowestEquivalentValue:(J)J
      88: goto          97
      91: aload_0
      92: lload         10
      94: invokevirtual #91                 // Method highestEquivalentValue:(J)J
      97: lreturn
      98: iinc          9, 1
     101: goto          40
     104: lconst_0
     105: lreturn

  public double getPercentileAtOrBelowValue(long);
    Code:
       0: aload_0
       1: invokevirtual #107                // Method getTotalCount:()J
       4: lconst_0
       5: lcmp
       6: ifne          13
       9: ldc2_w        #154                // double 100.0d
      12: dreturn
      13: aload_0
      14: lload_1
      15: invokevirtual #77                 // Method countsArrayIndex:(J)I
      18: aload_0
      19: getfield      #60                 // Field countsArrayLength:I
      22: iconst_1
      23: isub
      24: invokestatic  #159                // Method java/lang/Math.min:(II)I
      27: istore_3
      28: lconst_0
      29: lstore        4
      31: iconst_0
      32: istore        6
      34: iload         6
      36: iload_3
      37: if_icmpgt     57
      40: lload         4
      42: aload_0
      43: iload         6
      45: invokevirtual #106                // Method getCountAtIndex:(I)J
      48: ladd
      49: lstore        4
      51: iinc          6, 1
      54: goto          34
      57: ldc2_w        #154                // double 100.0d
      60: lload         4
      62: l2d
      63: dmul
      64: aload_0
      65: invokevirtual #107                // Method getTotalCount:()J
      68: l2d
      69: ddiv
      70: dreturn

  public long getCountBetweenValues(long, long) throws java.lang.ArrayIndexOutOfBoundsException;
    Code:
       0: iconst_0
       1: aload_0
       2: lload_1
       3: invokevirtual #77                 // Method countsArrayIndex:(J)I
       6: invokestatic  #160                // Method java/lang/Math.max:(II)I
       9: istore        5
      11: aload_0
      12: lload_3
      13: invokevirtual #77                 // Method countsArrayIndex:(J)I
      16: aload_0
      17: getfield      #60                 // Field countsArrayLength:I
      20: iconst_1
      21: isub
      22: invokestatic  #159                // Method java/lang/Math.min:(II)I
      25: istore        6
      27: lconst_0
      28: lstore        7
      30: iload         5
      32: istore        9
      34: iload         9
      36: iload         6
      38: if_icmpgt     58
      41: lload         7
      43: aload_0
      44: iload         9
      46: invokevirtual #106                // Method getCountAtIndex:(I)J
      49: ladd
      50: lstore        7
      52: iinc          9, 1
      55: goto          34
      58: lload         7
      60: lreturn

  public long getCountAtValue(long) throws java.lang.ArrayIndexOutOfBoundsException;
    Code:
       0: iconst_0
       1: aload_0
       2: lload_1
       3: invokevirtual #77                 // Method countsArrayIndex:(J)I
       6: invokestatic  #160                // Method java/lang/Math.max:(II)I
       9: aload_0
      10: getfield      #60                 // Field countsArrayLength:I
      13: iconst_1
      14: isub
      15: invokestatic  #159                // Method java/lang/Math.min:(II)I
      18: istore_3
      19: aload_0
      20: iload_3
      21: invokevirtual #106                // Method getCountAtIndex:(I)J
      24: lreturn

  public org.HdrHistogram.AbstractHistogram$Percentiles percentiles(int);
    Code:
       0: new           #161                // class org/HdrHistogram/AbstractHistogram$Percentiles
       3: dup
       4: aload_0
       5: aload_0
       6: iload_1
       7: aconst_null
       8: invokespecial #162                // Method org/HdrHistogram/AbstractHistogram$Percentiles."<init>":(Lorg/HdrHistogram/AbstractHistogram;Lorg/HdrHistogram/AbstractHistogram;ILorg/HdrHistogram/AbstractHistogram$1;)V
      11: areturn

  public org.HdrHistogram.AbstractHistogram$LinearBucketValues linearBucketValues(long);
    Code:
       0: new           #163                // class org/HdrHistogram/AbstractHistogram$LinearBucketValues
       3: dup
       4: aload_0
       5: aload_0
       6: lload_1
       7: aconst_null
       8: invokespecial #164                // Method org/HdrHistogram/AbstractHistogram$LinearBucketValues."<init>":(Lorg/HdrHistogram/AbstractHistogram;Lorg/HdrHistogram/AbstractHistogram;JLorg/HdrHistogram/AbstractHistogram$1;)V
      11: areturn

  public org.HdrHistogram.AbstractHistogram$LogarithmicBucketValues logarithmicBucketValues(long, double);
    Code:
       0: new           #165                // class org/HdrHistogram/AbstractHistogram$LogarithmicBucketValues
       3: dup
       4: aload_0
       5: aload_0
       6: lload_1
       7: dload_3
       8: aconst_null
       9: invokespecial #166                // Method org/HdrHistogram/AbstractHistogram$LogarithmicBucketValues."<init>":(Lorg/HdrHistogram/AbstractHistogram;Lorg/HdrHistogram/AbstractHistogram;JDLorg/HdrHistogram/AbstractHistogram$1;)V
      12: areturn

  public org.HdrHistogram.AbstractHistogram$RecordedValues recordedValues();
    Code:
       0: new           #167                // class org/HdrHistogram/AbstractHistogram$RecordedValues
       3: dup
       4: aload_0
       5: aload_0
       6: aconst_null
       7: invokespecial #168                // Method org/HdrHistogram/AbstractHistogram$RecordedValues."<init>":(Lorg/HdrHistogram/AbstractHistogram;Lorg/HdrHistogram/AbstractHistogram;Lorg/HdrHistogram/AbstractHistogram$1;)V
      10: areturn

  public org.HdrHistogram.AbstractHistogram$AllValues allValues();
    Code:
       0: new           #169                // class org/HdrHistogram/AbstractHistogram$AllValues
       3: dup
       4: aload_0
       5: aload_0
       6: aconst_null
       7: invokespecial #170                // Method org/HdrHistogram/AbstractHistogram$AllValues."<init>":(Lorg/HdrHistogram/AbstractHistogram;Lorg/HdrHistogram/AbstractHistogram;Lorg/HdrHistogram/AbstractHistogram$1;)V
      10: areturn

  public void outputPercentileDistribution(java.io.PrintStream, java.lang.Double);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_5
       3: aload_2
       4: invokevirtual #171                // Method outputPercentileDistribution:(Ljava/io/PrintStream;ILjava/lang/Double;)V
       7: return

  public void outputPercentileDistribution(java.io.PrintStream, int, java.lang.Double);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: iconst_0
       5: invokevirtual #172                // Method outputPercentileDistribution:(Ljava/io/PrintStream;ILjava/lang/Double;Z)V
       8: return

  public void outputPercentileDistribution(java.io.PrintStream, int, java.lang.Double, boolean);
    Code:
       0: iload         4
       2: ifeq          19
       5: aload_1
       6: ldc           #173                // String \"Value\",\"Percentile\",\"TotalCount\",\"1/(1-Percentile)\"\n
       8: iconst_0
       9: anewarray     #174                // class java/lang/Object
      12: invokevirtual #175                // Method java/io/PrintStream.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
      15: pop
      16: goto          50
      19: aload_1
      20: ldc           #176                // String %12s %14s %10s %14s\n\n
      22: iconst_4
      23: anewarray     #174                // class java/lang/Object
      26: dup
      27: iconst_0
      28: ldc           #177                // String Value
      30: aastore
      31: dup
      32: iconst_1
      33: ldc           #178                // String Percentile
      35: aastore
      36: dup
      37: iconst_2
      38: ldc           #179                // String TotalCount
      40: aastore
      41: dup
      42: iconst_3
      43: ldc           #180                // String 1/(1-Percentile)
      45: aastore
      46: invokevirtual #175                // Method java/io/PrintStream.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
      49: pop
      50: aload_0
      51: getfield      #55                 // Field percentileIterator:Lorg/HdrHistogram/PercentileIterator;
      54: astore        5
      56: aload         5
      58: iload_2
      59: invokevirtual #181                // Method org/HdrHistogram/PercentileIterator.reset:(I)V
      62: iload         4
      64: ifeq          128
      67: new           #63                 // class java/lang/StringBuilder
      70: dup
      71: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
      74: ldc           #182                // String %.
      76: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_0
      80: getfield      #35                 // Field numberOfSignificantValueDigits:I
      83: invokevirtual #183                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      86: ldc           #184                // String f,%.12f,%d,%.2f\n
      88: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: invokevirtual #69                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: astore        6
      96: new           #63                 // class java/lang/StringBuilder
      99: dup
     100: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
     103: ldc           #182                // String %.
     105: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: aload_0
     109: getfield      #35                 // Field numberOfSignificantValueDigits:I
     112: invokevirtual #183                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     115: ldc           #185                // String f,%.12f,%d,Infinity\n
     117: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: invokevirtual #69                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     123: astore        7
     125: goto          186
     128: new           #63                 // class java/lang/StringBuilder
     131: dup
     132: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
     135: ldc           #186                // String %12.
     137: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: aload_0
     141: getfield      #35                 // Field numberOfSignificantValueDigits:I
     144: invokevirtual #183                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     147: ldc           #187                // String f %2.12f %10d %14.2f\n
     149: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: invokevirtual #69                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     155: astore        6
     157: new           #63                 // class java/lang/StringBuilder
     160: dup
     161: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
     164: ldc           #186                // String %12.
     166: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     169: aload_0
     170: getfield      #35                 // Field numberOfSignificantValueDigits:I
     173: invokevirtual #183                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     176: ldc           #188                // String f %2.12f %10d\n
     178: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     181: invokevirtual #69                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     184: astore        7
     186: aload         5
     188: invokevirtual #189                // Method org/HdrHistogram/PercentileIterator.hasNext:()Z
     191: ifeq          352
     194: aload         5
     196: invokevirtual #190                // Method org/HdrHistogram/PercentileIterator.next:()Lorg/HdrHistogram/HistogramIterationValue;
     199: astore        8
     201: aload         8
     203: invokevirtual #191                // Method org/HdrHistogram/HistogramIterationValue.getPercentileLevelIteratedTo:()D
     206: ldc2_w        #154                // double 100.0d
     209: dcmpl
     210: ifeq          292
     213: aload_1
     214: getstatic     #192                // Field java/util/Locale.US:Ljava/util/Locale;
     217: aload         6
     219: iconst_4
     220: anewarray     #174                // class java/lang/Object
     223: dup
     224: iconst_0
     225: aload         8
     227: invokevirtual #124                // Method org/HdrHistogram/HistogramIterationValue.getValueIteratedTo:()J
     230: l2d
     231: aload_3
     232: invokevirtual #151                // Method java/lang/Double.doubleValue:()D
     235: ddiv
     236: invokestatic  #150                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
     239: aastore
     240: dup
     241: iconst_1
     242: aload         8
     244: invokevirtual #191                // Method org/HdrHistogram/HistogramIterationValue.getPercentileLevelIteratedTo:()D
     247: ldc2_w        #154                // double 100.0d
     250: ddiv
     251: invokestatic  #150                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
     254: aastore
     255: dup
     256: iconst_2
     257: aload         8
     259: invokevirtual #193                // Method org/HdrHistogram/HistogramIterationValue.getTotalCountToThisValue:()J
     262: invokestatic  #194                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     265: aastore
     266: dup
     267: iconst_3
     268: dconst_1
     269: dconst_1
     270: aload         8
     272: invokevirtual #191                // Method org/HdrHistogram/HistogramIterationValue.getPercentileLevelIteratedTo:()D
     275: ldc2_w        #154                // double 100.0d
     278: ddiv
     279: dsub
     280: ddiv
     281: invokestatic  #150                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
     284: aastore
     285: invokevirtual #195                // Method java/io/PrintStream.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
     288: pop
     289: goto          349
     292: aload_1
     293: getstatic     #192                // Field java/util/Locale.US:Ljava/util/Locale;
     296: aload         7
     298: iconst_3
     299: anewarray     #174                // class java/lang/Object
     302: dup
     303: iconst_0
     304: aload         8
     306: invokevirtual #124                // Method org/HdrHistogram/HistogramIterationValue.getValueIteratedTo:()J
     309: l2d
     310: aload_3
     311: invokevirtual #151                // Method java/lang/Double.doubleValue:()D
     314: ddiv
     315: invokestatic  #150                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
     318: aastore
     319: dup
     320: iconst_1
     321: aload         8
     323: invokevirtual #191                // Method org/HdrHistogram/HistogramIterationValue.getPercentileLevelIteratedTo:()D
     326: ldc2_w        #154                // double 100.0d
     329: ddiv
     330: invokestatic  #150                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
     333: aastore
     334: dup
     335: iconst_2
     336: aload         8
     338: invokevirtual #193                // Method org/HdrHistogram/HistogramIterationValue.getTotalCountToThisValue:()J
     341: invokestatic  #194                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     344: aastore
     345: invokevirtual #195                // Method java/io/PrintStream.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
     348: pop
     349: goto          186
     352: iload         4
     354: ifne          545
     357: aload_0
     358: invokevirtual #149                // Method getMean:()D
     361: aload_3
     362: invokevirtual #151                // Method java/lang/Double.doubleValue:()D
     365: ddiv
     366: dstore        8
     368: aload_0
     369: invokevirtual #196                // Method getStdDeviation:()D
     372: aload_3
     373: invokevirtual #151                // Method java/lang/Double.doubleValue:()D
     376: ddiv
     377: dstore        10
     379: aload_1
     380: getstatic     #192                // Field java/util/Locale.US:Ljava/util/Locale;
     383: new           #63                 // class java/lang/StringBuilder
     386: dup
     387: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
     390: ldc           #197                // String #[Mean    = %12.
     392: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     395: aload_0
     396: getfield      #35                 // Field numberOfSignificantValueDigits:I
     399: invokevirtual #183                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     402: ldc           #198                // String f, StdDeviation   = %12.
     404: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     407: aload_0
     408: getfield      #35                 // Field numberOfSignificantValueDigits:I
     411: invokevirtual #183                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     414: ldc           #199                // String f]\n
     416: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     419: invokevirtual #69                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     422: iconst_2
     423: anewarray     #174                // class java/lang/Object
     426: dup
     427: iconst_0
     428: dload         8
     430: invokestatic  #150                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
     433: aastore
     434: dup
     435: iconst_1
     436: dload         10
     438: invokestatic  #150                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
     441: aastore
     442: invokevirtual #195                // Method java/io/PrintStream.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
     445: pop
     446: aload_1
     447: getstatic     #192                // Field java/util/Locale.US:Ljava/util/Locale;
     450: new           #63                 // class java/lang/StringBuilder
     453: dup
     454: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
     457: ldc           #200                // String #[Max     = %12.
     459: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     462: aload_0
     463: getfield      #35                 // Field numberOfSignificantValueDigits:I
     466: invokevirtual #183                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     469: ldc           #201                // String f, Total count    = %12d]\n
     471: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     474: invokevirtual #69                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     477: iconst_2
     478: anewarray     #174                // class java/lang/Object
     481: dup
     482: iconst_0
     483: aload_0
     484: invokevirtual #101                // Method getMaxValue:()J
     487: l2d
     488: aload_3
     489: invokevirtual #151                // Method java/lang/Double.doubleValue:()D
     492: ddiv
     493: invokestatic  #150                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
     496: aastore
     497: dup
     498: iconst_1
     499: aload_0
     500: invokevirtual #107                // Method getTotalCount:()J
     503: invokestatic  #194                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     506: aastore
     507: invokevirtual #195                // Method java/io/PrintStream.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
     510: pop
     511: aload_1
     512: getstatic     #192                // Field java/util/Locale.US:Ljava/util/Locale;
     515: ldc           #202                // String #[Buckets = %12d, SubBuckets     = %12d]\n
     517: iconst_2
     518: anewarray     #174                // class java/lang/Object
     521: dup
     522: iconst_0
     523: aload_0
     524: getfield      #62                 // Field bucketCount:I
     527: invokestatic  #203                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     530: aastore
     531: dup
     532: iconst_1
     533: aload_0
     534: getfield      #48                 // Field subBucketCount:I
     537: invokestatic  #203                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     540: aastore
     541: invokevirtual #195                // Method java/io/PrintStream.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
     544: pop
     545: return

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #33                 // Field lowestDiscernibleValue:J
       5: invokevirtual #204                // Method java/io/ObjectOutputStream.writeLong:(J)V
       8: aload_1
       9: aload_0
      10: getfield      #34                 // Field highestTrackableValue:J
      13: invokevirtual #204                // Method java/io/ObjectOutputStream.writeLong:(J)V
      16: aload_1
      17: aload_0
      18: getfield      #35                 // Field numberOfSignificantValueDigits:I
      21: invokevirtual #205                // Method java/io/ObjectOutputStream.writeInt:(I)V
      24: aload_1
      25: aload_0
      26: invokevirtual #104                // Method getNormalizingIndexOffset:()I
      29: invokevirtual #205                // Method java/io/ObjectOutputStream.writeInt:(I)V
      32: aload_1
      33: aload_0
      34: getfield      #36                 // Field integerToDoubleValueConversionRatio:D
      37: invokevirtual #206                // Method java/io/ObjectOutputStream.writeDouble:(D)V
      40: aload_1
      41: aload_0
      42: invokevirtual #107                // Method getTotalCount:()J
      45: invokevirtual #204                // Method java/io/ObjectOutputStream.writeLong:(J)V
      48: aload_1
      49: aload_0
      50: getfield      #2                  // Field maxValue:J
      53: invokevirtual #204                // Method java/io/ObjectOutputStream.writeLong:(J)V
      56: aload_1
      57: aload_0
      58: getfield      #7                  // Field minNonZeroValue:J
      61: invokevirtual #204                // Method java/io/ObjectOutputStream.writeLong:(J)V
      64: aload_1
      65: aload_0
      66: getfield      #95                 // Field startTimeStampMsec:J
      69: invokevirtual #204                // Method java/io/ObjectOutputStream.writeLong:(J)V
      72: aload_1
      73: aload_0
      74: getfield      #96                 // Field endTimeStampMsec:J
      77: invokevirtual #204                // Method java/io/ObjectOutputStream.writeLong:(J)V
      80: aload_1
      81: aload_0
      82: getfield      #15                 // Field autoResize:Z
      85: invokevirtual #207                // Method java/io/ObjectOutputStream.writeBoolean:(Z)V
      88: aload_1
      89: aload_0
      90: getfield      #208                // Field wordSizeInBytes:I
      93: invokevirtual #205                // Method java/io/ObjectOutputStream.writeInt:(I)V
      96: return

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #209                // Method java/io/ObjectInputStream.readLong:()J
       4: lstore_2
       5: aload_1
       6: invokevirtual #209                // Method java/io/ObjectInputStream.readLong:()J
       9: lstore        4
      11: aload_1
      12: invokevirtual #210                // Method java/io/ObjectInputStream.readInt:()I
      15: istore        6
      17: aload_1
      18: invokevirtual #210                // Method java/io/ObjectInputStream.readInt:()I
      21: istore        7
      23: aload_1
      24: invokevirtual #211                // Method java/io/ObjectInputStream.readDouble:()D
      27: dstore        8
      29: aload_1
      30: invokevirtual #209                // Method java/io/ObjectInputStream.readLong:()J
      33: lstore        10
      35: aload_1
      36: invokevirtual #209                // Method java/io/ObjectInputStream.readLong:()J
      39: lstore        12
      41: aload_1
      42: invokevirtual #209                // Method java/io/ObjectInputStream.readLong:()J
      45: lstore        14
      47: aload_1
      48: invokevirtual #209                // Method java/io/ObjectInputStream.readLong:()J
      51: lstore        16
      53: aload_1
      54: invokevirtual #209                // Method java/io/ObjectInputStream.readLong:()J
      57: lstore        18
      59: aload_1
      60: invokevirtual #212                // Method java/io/ObjectInputStream.readBoolean:()Z
      63: istore        20
      65: aload_1
      66: invokevirtual #210                // Method java/io/ObjectInputStream.readInt:()I
      69: istore        21
      71: aload_0
      72: lload_2
      73: lload         4
      75: iload         6
      77: dload         8
      79: iload         7
      81: invokespecial #25                 // Method init:(JJIDI)V
      84: aload_0
      85: lload         10
      87: invokevirtual #108                // Method setTotalCount:(J)V
      90: aload_0
      91: lload         12
      93: putfield      #2                  // Field maxValue:J
      96: aload_0
      97: lload         14
      99: putfield      #7                  // Field minNonZeroValue:J
     102: aload_0
     103: lload         16
     105: putfield      #95                 // Field startTimeStampMsec:J
     108: aload_0
     109: lload         18
     111: putfield      #96                 // Field endTimeStampMsec:J
     114: aload_0
     115: iload         20
     117: putfield      #15                 // Field autoResize:Z
     120: aload_0
     121: iload         21
     123: putfield      #208                // Field wordSizeInBytes:I
     126: return

  public int getNeededByteBufferCapacity();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #60                 // Field countsArrayLength:I
       5: invokevirtual #213                // Method getNeededByteBufferCapacity:(I)I
       8: ireturn

  int getNeededByteBufferCapacity(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #214                // Method getNeededPayloadByteBufferCapacity:(I)I
       5: bipush        40
       7: iadd
       8: ireturn

  int getNeededPayloadByteBufferCapacity(int);
    Code:
       0: iload_1
       1: bipush        9
       3: imul
       4: ireturn

  int getNeededV0PayloadByteBufferCapacity(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #208                // Field wordSizeInBytes:I
       5: imul
       6: ireturn

  abstract void fillCountsArrayFromBuffer(java.nio.ByteBuffer, int);

  private int getEncodingCookie();
    Code:
       0: ldc           #215                // int 478450451
       2: ireturn

  private int getCompressedEncodingCookie();
    Code:
       0: ldc           #216                // int 478450452
       2: ireturn

  private static int getCookieBase(int);
    Code:
       0: iload_0
       1: sipush        -241
       4: iand
       5: ireturn

  private static int getWordSizeInBytesFromCookie(int);
    Code:
       0: iload_0
       1: invokestatic  #217                // Method getCookieBase:(I)I
       4: ldc           #218                // int 478450435
       6: if_icmpeq     18
       9: iload_0
      10: invokestatic  #217                // Method getCookieBase:(I)I
      13: ldc           #219                // int 478450436
      15: if_icmpne     21
      18: bipush        9
      20: ireturn
      21: iload_0
      22: sipush        240
      25: iand
      26: iconst_4
      27: ishr
      28: istore_1
      29: iload_1
      30: bipush        14
      32: iand
      33: ireturn

  public synchronized int encodeIntoByteBuffer(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #101                // Method getMaxValue:()J
       4: lstore_2
       5: aload_0
       6: lload_2
       7: invokevirtual #77                 // Method countsArrayIndex:(J)I
      10: iconst_1
      11: iadd
      12: istore        4
      14: aload_1
      15: invokevirtual #220                // Method java/nio/ByteBuffer.capacity:()I
      18: aload_0
      19: iload         4
      21: invokevirtual #213                // Method getNeededByteBufferCapacity:(I)I
      24: if_icmpge     64
      27: new           #79                 // class java/lang/ArrayIndexOutOfBoundsException
      30: dup
      31: new           #63                 // class java/lang/StringBuilder
      34: dup
      35: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
      38: ldc           #221                // String buffer does not have capacity for
      40: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_0
      44: iload         4
      46: invokevirtual #213                // Method getNeededByteBufferCapacity:(I)I
      49: invokevirtual #183                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      52: ldc           #222                // String  bytes
      54: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #69                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokespecial #88                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: aload_1
      65: invokevirtual #223                // Method java/nio/ByteBuffer.position:()I
      68: istore        5
      70: aload_1
      71: aload_0
      72: invokespecial #224                // Method getEncodingCookie:()I
      75: invokevirtual #225                // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      78: pop
      79: aload_1
      80: iconst_0
      81: invokevirtual #225                // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      84: pop
      85: aload_1
      86: aload_0
      87: invokevirtual #104                // Method getNormalizingIndexOffset:()I
      90: invokevirtual #225                // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      93: pop
      94: aload_1
      95: aload_0
      96: getfield      #35                 // Field numberOfSignificantValueDigits:I
      99: invokevirtual #225                // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
     102: pop
     103: aload_1
     104: aload_0
     105: getfield      #33                 // Field lowestDiscernibleValue:J
     108: invokevirtual #226                // Method java/nio/ByteBuffer.putLong:(J)Ljava/nio/ByteBuffer;
     111: pop
     112: aload_1
     113: aload_0
     114: getfield      #34                 // Field highestTrackableValue:J
     117: invokevirtual #226                // Method java/nio/ByteBuffer.putLong:(J)Ljava/nio/ByteBuffer;
     120: pop
     121: aload_1
     122: aload_0
     123: invokevirtual #227                // Method getIntegerToDoubleValueConversionRatio:()D
     126: invokevirtual #228                // Method java/nio/ByteBuffer.putDouble:(D)Ljava/nio/ByteBuffer;
     129: pop
     130: aload_1
     131: invokevirtual #223                // Method java/nio/ByteBuffer.position:()I
     134: istore        6
     136: aload_0
     137: aload_1
     138: invokevirtual #229                // Method fillBufferFromCountsArray:(Ljava/nio/ByteBuffer;)V
     141: aload_1
     142: iload         5
     144: iconst_4
     145: iadd
     146: aload_1
     147: invokevirtual #223                // Method java/nio/ByteBuffer.position:()I
     150: iload         6
     152: isub
     153: invokevirtual #230                // Method java/nio/ByteBuffer.putInt:(II)Ljava/nio/ByteBuffer;
     156: pop
     157: aload_1
     158: invokevirtual #223                // Method java/nio/ByteBuffer.position:()I
     161: iload         5
     163: isub
     164: ireturn

  public synchronized int encodeIntoCompressedByteBuffer(java.nio.ByteBuffer, int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #60                 // Field countsArrayLength:I
       5: invokevirtual #213                // Method getNeededByteBufferCapacity:(I)I
       8: istore_3
       9: aload_0
      10: getfield      #231                // Field intermediateUncompressedByteBuffer:Ljava/nio/ByteBuffer;
      13: ifnull        27
      16: aload_0
      17: getfield      #231                // Field intermediateUncompressedByteBuffer:Ljava/nio/ByteBuffer;
      20: invokevirtual #220                // Method java/nio/ByteBuffer.capacity:()I
      23: iload_3
      24: if_icmpge     41
      27: aload_0
      28: iload_3
      29: invokestatic  #232                // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      32: getstatic     #233                // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
      35: invokevirtual #234                // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      38: putfield      #231                // Field intermediateUncompressedByteBuffer:Ljava/nio/ByteBuffer;
      41: aload_0
      42: getfield      #231                // Field intermediateUncompressedByteBuffer:Ljava/nio/ByteBuffer;
      45: invokevirtual #235                // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      48: pop
      49: aload_1
      50: invokevirtual #223                // Method java/nio/ByteBuffer.position:()I
      53: istore        4
      55: aload_0
      56: aload_0
      57: getfield      #231                // Field intermediateUncompressedByteBuffer:Ljava/nio/ByteBuffer;
      60: invokevirtual #236                // Method encodeIntoByteBuffer:(Ljava/nio/ByteBuffer;)I
      63: istore        5
      65: aload_1
      66: aload_0
      67: invokespecial #237                // Method getCompressedEncodingCookie:()I
      70: invokevirtual #225                // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      73: pop
      74: aload_1
      75: iconst_0
      76: invokevirtual #225                // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      79: pop
      80: new           #238                // class java/util/zip/Deflater
      83: dup
      84: iload_2
      85: invokespecial #239                // Method java/util/zip/Deflater."<init>":(I)V
      88: astore        6
      90: aload         6
      92: aload_0
      93: getfield      #231                // Field intermediateUncompressedByteBuffer:Ljava/nio/ByteBuffer;
      96: invokevirtual #240                // Method java/nio/ByteBuffer.array:()[B
      99: iconst_0
     100: iload         5
     102: invokevirtual #241                // Method java/util/zip/Deflater.setInput:([BII)V
     105: aload         6
     107: invokevirtual #242                // Method java/util/zip/Deflater.finish:()V
     110: aload_1
     111: invokevirtual #243                // Method java/nio/ByteBuffer.hasArray:()Z
     114: ifeq          126
     117: aload_1
     118: invokevirtual #240                // Method java/nio/ByteBuffer.array:()[B
     121: astore        7
     123: goto          161
     126: aload_0
     127: getfield      #244                // Field intermediateUncompressedByteArray:[B
     130: ifnull        145
     133: aload_0
     134: getfield      #244                // Field intermediateUncompressedByteArray:[B
     137: arraylength
     138: aload_1
     139: invokevirtual #220                // Method java/nio/ByteBuffer.capacity:()I
     142: if_icmpge     155
     145: aload_0
     146: aload_1
     147: invokevirtual #220                // Method java/nio/ByteBuffer.capacity:()I
     150: newarray       byte
     152: putfield      #244                // Field intermediateUncompressedByteArray:[B
     155: aload_0
     156: getfield      #244                // Field intermediateUncompressedByteArray:[B
     159: astore        7
     161: iload         4
     163: bipush        8
     165: iadd
     166: istore        8
     168: aload         6
     170: aload         7
     172: iload         8
     174: aload         7
     176: arraylength
     177: iload         8
     179: isub
     180: invokevirtual #245                // Method java/util/zip/Deflater.deflate:([BII)I
     183: istore        9
     185: aload         6
     187: invokevirtual #246                // Method java/util/zip/Deflater.end:()V
     190: aload_1
     191: invokevirtual #243                // Method java/nio/ByteBuffer.hasArray:()Z
     194: ifne          208
     197: aload_1
     198: aload         7
     200: iload         8
     202: iload         9
     204: invokevirtual #247                // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     207: pop
     208: aload_1
     209: iload         4
     211: iconst_4
     212: iadd
     213: iload         9
     215: invokevirtual #230                // Method java/nio/ByteBuffer.putInt:(II)Ljava/nio/ByteBuffer;
     218: pop
     219: iload         9
     221: bipush        8
     223: iadd
     224: istore        10
     226: aload_1
     227: iload         4
     229: iload         10
     231: iadd
     232: invokevirtual #248                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     235: pop
     236: iload         10
     238: ireturn

  public int encodeIntoCompressedByteBuffer(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_m1
       3: invokevirtual #249                // Method encodeIntoCompressedByteBuffer:(Ljava/nio/ByteBuffer;I)I
       6: ireturn

  static <T extends org.HdrHistogram.AbstractHistogram> T decodeFromByteBuffer(java.nio.ByteBuffer, java.lang.Class<T>, long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: aconst_null
       4: invokestatic  #250                // Method decodeFromByteBuffer:(Ljava/nio/ByteBuffer;Ljava/lang/Class;JLjava/util/zip/Inflater;)Lorg/HdrHistogram/AbstractHistogram;
       7: areturn
       8: astore        4
      10: new           #252                // class java/lang/RuntimeException
      13: dup
      14: aload         4
      16: invokespecial #253                // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      19: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/util/zip/DataFormatException

  static <T extends org.HdrHistogram.AbstractHistogram> T decodeFromByteBuffer(java.nio.ByteBuffer, java.lang.Class<T>, long, java.util.zip.Inflater) throws java.util.zip.DataFormatException;
    Code:
       0: aload_0
       1: invokevirtual #254                // Method java/nio/ByteBuffer.getInt:()I
       4: istore        5
       6: iload         5
       8: invokestatic  #217                // Method getCookieBase:(I)I
      11: ldc           #218                // int 478450435
      13: if_icmpeq     26
      16: iload         5
      18: invokestatic  #217                // Method getCookieBase:(I)I
      21: ldc           #255                // int 478450433
      23: if_icmpne     99
      26: iload         5
      28: invokestatic  #217                // Method getCookieBase:(I)I
      31: ldc           #218                // int 478450435
      33: if_icmpne     57
      36: iload         5
      38: invokestatic  #256                // Method getWordSizeInBytesFromCookie:(I)I
      41: bipush        9
      43: if_icmpeq     57
      46: new           #17                 // class java/lang/IllegalArgumentException
      49: dup
      50: ldc_w         #257                // String The buffer does not contain a Histogram (no valid cookie found)
      53: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: aload_0
      58: invokevirtual #254                // Method java/nio/ByteBuffer.getInt:()I
      61: istore        6
      63: aload_0
      64: invokevirtual #254                // Method java/nio/ByteBuffer.getInt:()I
      67: istore        7
      69: aload_0
      70: invokevirtual #254                // Method java/nio/ByteBuffer.getInt:()I
      73: istore        8
      75: aload_0
      76: invokevirtual #258                // Method java/nio/ByteBuffer.getLong:()J
      79: lstore        9
      81: aload_0
      82: invokevirtual #258                // Method java/nio/ByteBuffer.getLong:()J
      85: lstore        11
      87: aload_0
      88: invokevirtual #259                // Method java/nio/ByteBuffer.getDouble:()D
      91: invokestatic  #150                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      94: astore        13
      96: goto          161
      99: iload         5
     101: invokestatic  #217                // Method getCookieBase:(I)I
     104: ldc_w         #260                // int 478450440
     107: if_icmpne     150
     110: aload_0
     111: invokevirtual #254                // Method java/nio/ByteBuffer.getInt:()I
     114: istore        8
     116: aload_0
     117: invokevirtual #258                // Method java/nio/ByteBuffer.getLong:()J
     120: lstore        9
     122: aload_0
     123: invokevirtual #258                // Method java/nio/ByteBuffer.getLong:()J
     126: lstore        11
     128: aload_0
     129: invokevirtual #258                // Method java/nio/ByteBuffer.getLong:()J
     132: pop2
     133: ldc_w         #262                // int 2147483647
     136: istore        6
     138: dconst_1
     139: invokestatic  #150                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
     142: astore        13
     144: iconst_0
     145: istore        7
     147: goto          161
     150: new           #17                 // class java/lang/IllegalArgumentException
     153: dup
     154: ldc_w         #257                // String The buffer does not contain a Histogram (no valid cookie found)
     157: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     160: athrow
     161: lload         11
     163: lload_2
     164: invokestatic  #109                // Method java/lang/Math.max:(JJ)J
     167: lstore        11
     169: aload_1
     170: getstatic     #263                // Field constructorArgsTypes:[Ljava/lang/Class;
     173: invokevirtual #264                // Method java/lang/Class.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
     176: astore        15
     178: aload         15
     180: iconst_3
     181: anewarray     #174                // class java/lang/Object
     184: dup
     185: iconst_0
     186: lload         9
     188: invokestatic  #194                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     191: aastore
     192: dup
     193: iconst_1
     194: lload         11
     196: invokestatic  #194                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     199: aastore
     200: dup
     201: iconst_2
     202: iload         8
     204: invokestatic  #203                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     207: aastore
     208: invokevirtual #265                // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
     211: checkcast     #136                // class org/HdrHistogram/AbstractHistogram
     214: astore        14
     216: aload         14
     218: aload         13
     220: invokevirtual #151                // Method java/lang/Double.doubleValue:()D
     223: invokevirtual #266                // Method setIntegerToDoubleValueConversionRatio:(D)V
     226: aload         14
     228: iload         7
     230: invokevirtual #37                 // Method setNormalizingIndexOffset:(I)V
     233: goto          284
     236: astore        15
     238: new           #17                 // class java/lang/IllegalArgumentException
     241: dup
     242: aload         15
     244: invokespecial #268                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
     247: athrow
     248: astore        15
     250: new           #17                 // class java/lang/IllegalArgumentException
     253: dup
     254: aload         15
     256: invokespecial #268                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
     259: athrow
     260: astore        15
     262: new           #17                 // class java/lang/IllegalArgumentException
     265: dup
     266: aload         15
     268: invokespecial #268                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
     271: athrow
     272: astore        15
     274: new           #17                 // class java/lang/IllegalArgumentException
     277: dup
     278: aload         15
     280: invokespecial #268                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
     283: athrow
     284: aload         14
     286: aload         14
     288: getfield      #60                 // Field countsArrayLength:I
     291: invokevirtual #272                // Method getNeededV0PayloadByteBufferCapacity:(I)I
     294: iload         6
     296: invokestatic  #159                // Method java/lang/Math.min:(II)I
     299: istore        16
     301: aload         4
     303: ifnonnull     332
     306: iload         16
     308: aload_0
     309: invokevirtual #273                // Method java/nio/ByteBuffer.remaining:()I
     312: if_icmple     326
     315: new           #17                 // class java/lang/IllegalArgumentException
     318: dup
     319: ldc_w         #274                // String The buffer does not contain the full Histogram payload
     322: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     325: athrow
     326: aload_0
     327: astore        15
     329: goto          383
     332: iload         16
     334: invokestatic  #232                // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
     337: getstatic     #233                // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
     340: invokevirtual #234                // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
     343: astore        15
     345: aload         4
     347: aload         15
     349: invokevirtual #240                // Method java/nio/ByteBuffer.array:()[B
     352: invokevirtual #275                // Method java/util/zip/Inflater.inflate:([B)I
     355: istore        17
     357: iload         6
     359: ldc_w         #262                // int 2147483647
     362: if_icmpeq     383
     365: iload         17
     367: iload         6
     369: if_icmpge     383
     372: new           #17                 // class java/lang/IllegalArgumentException
     375: dup
     376: ldc_w         #276                // String The buffer does not contain the indicated payload amount
     379: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     382: athrow
     383: aload         14
     385: aload         15
     387: iload         16
     389: iload         5
     391: invokestatic  #256                // Method getWordSizeInBytesFromCookie:(I)I
     394: invokespecial #277                // Method fillCountsArrayFromSourceBuffer:(Ljava/nio/ByteBuffer;II)I
     397: istore        17
     399: aload         14
     401: iload         17
     403: invokevirtual #278                // Method establishInternalTackingValues:(I)V
     406: aload         14
     408: areturn
    Exception table:
       from    to  target type
         169   233   236   Class java/lang/IllegalAccessException
         169   233   248   Class java/lang/NoSuchMethodException
         169   233   260   Class java/lang/InstantiationException
         169   233   272   Class java/lang/reflect/InvocationTargetException

  private int fillCountsArrayFromSourceBuffer(java.nio.ByteBuffer, int, int);
    Code:
       0: iload_3
       1: iconst_2
       2: if_icmpeq     33
       5: iload_3
       6: iconst_4
       7: if_icmpeq     33
      10: iload_3
      11: bipush        8
      13: if_icmpeq     33
      16: iload_3
      17: bipush        9
      19: if_icmpeq     33
      22: new           #17                 // class java/lang/IllegalArgumentException
      25: dup
      26: ldc_w         #279                // String word size must be 2, 4, 8, or V2maxWordSizeInBytes (9) bytes
      29: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: aload_0
      34: getfield      #208                // Field wordSizeInBytes:I
      37: iconst_2
      38: if_icmpne     47
      41: ldc2_w        #281                // long 32767l
      44: goto          64
      47: aload_0
      48: getfield      #208                // Field wordSizeInBytes:I
      51: iconst_4
      52: if_icmpne     61
      55: ldc2_w        #283                // long 2147483647l
      58: goto          64
      61: ldc2_w        #10                 // long 9223372036854775807l
      64: lstore        4
      66: iconst_0
      67: istore        6
      69: aload_1
      70: invokevirtual #223                // Method java/nio/ByteBuffer.position:()I
      73: iload_2
      74: iadd
      75: istore        7
      77: aload_1
      78: invokevirtual #223                // Method java/nio/ByteBuffer.position:()I
      81: iload         7
      83: if_icmpge     258
      86: iconst_0
      87: istore        10
      89: iload_3
      90: bipush        9
      92: if_icmpne     141
      95: aload_1
      96: invokestatic  #285                // Method org/HdrHistogram/ZigZagEncoding.getLong:(Ljava/nio/ByteBuffer;)J
      99: lstore        8
     101: lload         8
     103: lconst_0
     104: lcmp
     105: ifge          173
     108: lload         8
     110: lneg
     111: lstore        11
     113: lload         11
     115: ldc2_w        #283                // long 2147483647l
     118: lcmp
     119: ifle          133
     122: new           #17                 // class java/lang/IllegalArgumentException
     125: dup
     126: ldc_w         #286                // String An encoded zero count of > Integer.MAX_VALUE was encountered in the source
     129: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     132: athrow
     133: lload         11
     135: l2i
     136: istore        10
     138: goto          173
     141: iload_3
     142: iconst_2
     143: if_icmpne     154
     146: aload_1
     147: invokevirtual #287                // Method java/nio/ByteBuffer.getShort:()S
     150: i2l
     151: goto          171
     154: iload_3
     155: iconst_4
     156: if_icmpne     167
     159: aload_1
     160: invokevirtual #254                // Method java/nio/ByteBuffer.getInt:()I
     163: i2l
     164: goto          171
     167: aload_1
     168: invokevirtual #258                // Method java/nio/ByteBuffer.getLong:()J
     171: lstore        8
     173: lload         8
     175: lload         4
     177: lcmp
     178: ifle          229
     181: new           #17                 // class java/lang/IllegalArgumentException
     184: dup
     185: new           #63                 // class java/lang/StringBuilder
     188: dup
     189: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
     192: ldc_w         #288                // String An encoded count (
     195: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     198: lload         8
     200: invokevirtual #67                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     203: ldc_w         #289                // String ) does not fit in the Histogram\'s (
     206: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: aload_0
     210: getfield      #208                // Field wordSizeInBytes:I
     213: invokevirtual #183                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     216: ldc_w         #290                // String  bytes) was encountered in the source
     219: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     222: invokevirtual #69                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     225: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     228: athrow
     229: iload         10
     231: ifle          244
     234: iload         6
     236: iload         10
     238: iadd
     239: istore        6
     241: goto          255
     244: aload_0
     245: iload         6
     247: iinc          6, 1
     250: lload         8
     252: invokevirtual #131                // Method setCountAtIndex:(IJ)V
     255: goto          77
     258: iload         6
     260: ireturn

  synchronized void fillBufferFromCountsArray(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field maxValue:J
       5: invokevirtual #77                 // Method countsArrayIndex:(J)I
       8: iconst_1
       9: iadd
      10: istore_2
      11: iconst_0
      12: istore_3
      13: iload_3
      14: iload_2
      15: if_icmpge     181
      18: aload_0
      19: iload_3
      20: iinc          3, 1
      23: invokevirtual #106                // Method getCountAtIndex:(I)J
      26: lstore        4
      28: lload         4
      30: lconst_0
      31: lcmp
      32: ifge          115
      35: new           #252                // class java/lang/RuntimeException
      38: dup
      39: new           #63                 // class java/lang/StringBuilder
      42: dup
      43: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
      46: ldc_w         #291                // String Cannot encode histogram containing negative counts (
      49: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: lload         4
      54: invokevirtual #67                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      57: ldc_w         #292                // String ) at index
      60: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: iload_3
      64: invokevirtual #183                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      67: ldc_w         #293                // String , corresponding the value range [
      70: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_0
      74: aload_0
      75: iload_3
      76: invokevirtual #90                 // Method valueFromIndex:(I)J
      79: invokevirtual #142                // Method lowestEquivalentValue:(J)J
      82: invokevirtual #67                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      85: ldc_w         #294                // String ,
      88: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: aload_0
      92: aload_0
      93: iload_3
      94: invokevirtual #90                 // Method valueFromIndex:(I)J
      97: invokevirtual #141                // Method nextNonEquivalentValue:(J)J
     100: invokevirtual #67                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     103: ldc           #117                // String )
     105: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: invokevirtual #69                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     111: invokespecial #295                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     114: athrow
     115: lconst_0
     116: lstore        6
     118: lload         4
     120: lconst_0
     121: lcmp
     122: ifne          155
     125: lconst_1
     126: lstore        6
     128: iload_3
     129: iload_2
     130: if_icmpge     155
     133: aload_0
     134: iload_3
     135: invokevirtual #106                // Method getCountAtIndex:(I)J
     138: lconst_0
     139: lcmp
     140: ifne          155
     143: lload         6
     145: lconst_1
     146: ladd
     147: lstore        6
     149: iinc          3, 1
     152: goto          128
     155: lload         6
     157: lconst_1
     158: lcmp
     159: ifle          172
     162: aload_1
     163: lload         6
     165: lneg
     166: invokestatic  #296                // Method org/HdrHistogram/ZigZagEncoding.putLong:(Ljava/nio/ByteBuffer;J)V
     169: goto          178
     172: aload_1
     173: lload         4
     175: invokestatic  #296                // Method org/HdrHistogram/ZigZagEncoding.putLong:(Ljava/nio/ByteBuffer;J)V
     178: goto          13
     181: return

  static <T extends org.HdrHistogram.AbstractHistogram> T decodeFromCompressedByteBuffer(java.nio.ByteBuffer, java.lang.Class<T>, long) throws java.util.zip.DataFormatException;
    Code:
       0: aload_0
       1: invokevirtual #223                // Method java/nio/ByteBuffer.position:()I
       4: istore        4
       6: aload_0
       7: invokevirtual #254                // Method java/nio/ByteBuffer.getInt:()I
      10: istore        5
      12: iload         5
      14: invokestatic  #217                // Method getCookieBase:(I)I
      17: ldc           #219                // int 478450436
      19: if_icmpeq     33
      22: iload         5
      24: invokestatic  #217                // Method getCookieBase:(I)I
      27: ldc_w         #297                // int 478450434
      30: if_icmpne     40
      33: bipush        40
      35: istore        6
      37: goto          69
      40: iload         5
      42: invokestatic  #217                // Method getCookieBase:(I)I
      45: ldc_w         #298                // int 478450441
      48: if_icmpne     58
      51: bipush        32
      53: istore        6
      55: goto          69
      58: new           #17                 // class java/lang/IllegalArgumentException
      61: dup
      62: ldc_w         #299                // String The buffer does not contain a compressed Histogram
      65: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: aload_0
      70: invokevirtual #254                // Method java/nio/ByteBuffer.getInt:()I
      73: istore        7
      75: new           #300                // class java/util/zip/Inflater
      78: dup
      79: invokespecial #301                // Method java/util/zip/Inflater."<init>":()V
      82: astore        8
      84: aload_0
      85: invokevirtual #243                // Method java/nio/ByteBuffer.hasArray:()Z
      88: ifeq          110
      91: aload         8
      93: aload_0
      94: invokevirtual #240                // Method java/nio/ByteBuffer.array:()[B
      97: iload         4
      99: bipush        8
     101: iadd
     102: iload         7
     104: invokevirtual #302                // Method java/util/zip/Inflater.setInput:([BII)V
     107: goto          130
     110: iload         7
     112: newarray       byte
     114: astore        9
     116: aload_0
     117: aload         9
     119: invokevirtual #303                // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
     122: pop
     123: aload         8
     125: aload         9
     127: invokevirtual #304                // Method java/util/zip/Inflater.setInput:([B)V
     130: iload         6
     132: invokestatic  #232                // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
     135: getstatic     #233                // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
     138: invokevirtual #234                // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
     141: astore        9
     143: aload         8
     145: aload         9
     147: invokevirtual #240                // Method java/nio/ByteBuffer.array:()[B
     150: invokevirtual #275                // Method java/util/zip/Inflater.inflate:([B)I
     153: pop
     154: aload         9
     156: aload_1
     157: lload_2
     158: aload         8
     160: invokestatic  #250                // Method decodeFromByteBuffer:(Ljava/nio/ByteBuffer;Ljava/lang/Class;JLjava/util/zip/Inflater;)Lorg/HdrHistogram/AbstractHistogram;
     163: astore        10
     165: aload         8
     167: invokevirtual #305                // Method java/util/zip/Inflater.end:()V
     170: aload         10
     172: areturn

  void establishInternalTackingValues();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #60                 // Field countsArrayLength:I
       5: invokevirtual #278                // Method establishInternalTackingValues:(I)V
       8: return

  void establishInternalTackingValues(int);
    Code:
       0: aload_0
       1: lconst_0
       2: invokevirtual #93                 // Method resetMaxValue:(J)V
       5: aload_0
       6: ldc2_w        #10                 // long 9223372036854775807l
       9: invokevirtual #94                 // Method resetMinNonZeroValue:(J)V
      12: iconst_m1
      13: istore_2
      14: iconst_m1
      15: istore_3
      16: lconst_0
      17: lstore        4
      19: iconst_0
      20: istore        6
      22: iload         6
      24: iload_1
      25: if_icmpge     71
      28: aload_0
      29: iload         6
      31: invokevirtual #106                // Method getCountAtIndex:(I)J
      34: dup2
      35: lstore        7
      37: lconst_0
      38: lcmp
      39: ifle          65
      42: lload         4
      44: lload         7
      46: ladd
      47: lstore        4
      49: iload         6
      51: istore_2
      52: iload_3
      53: iconst_m1
      54: if_icmpne     65
      57: iload         6
      59: ifeq          65
      62: iload         6
      64: istore_3
      65: iinc          6, 1
      68: goto          22
      71: iload_2
      72: iflt          88
      75: aload_0
      76: aload_0
      77: aload_0
      78: iload_2
      79: invokevirtual #90                 // Method valueFromIndex:(I)J
      82: invokevirtual #91                 // Method highestEquivalentValue:(J)J
      85: invokevirtual #75                 // Method updatedMaxValue:(J)V
      88: iload_3
      89: iflt          101
      92: aload_0
      93: aload_0
      94: iload_3
      95: invokevirtual #90                 // Method valueFromIndex:(I)J
      98: invokevirtual #76                 // Method updateMinNonZeroValue:(J)V
     101: aload_0
     102: lload         4
     104: invokevirtual #108                // Method setTotalCount:(J)V
     107: return

  int getBucketsNeededToCoverValue(long);
    Code:
       0: aload_0
       1: getfield      #48                 // Field subBucketCount:I
       4: i2l
       5: aload_0
       6: getfield      #45                 // Field unitMagnitude:I
       9: lshl
      10: lstore_3
      11: iconst_1
      12: istore        5
      14: lload_3
      15: lload_1
      16: lcmp
      17: ifgt          43
      20: lload_3
      21: ldc2_w        #306                // long 4611686018427387903l
      24: lcmp
      25: ifle          33
      28: iload         5
      30: iconst_1
      31: iadd
      32: ireturn
      33: lload_3
      34: iconst_1
      35: lshl
      36: lstore_3
      37: iinc          5, 1
      40: goto          14
      43: iload         5
      45: ireturn

  int getLengthForNumberOfBuckets(int);
    Code:
       0: iload_1
       1: iconst_1
       2: iadd
       3: aload_0
       4: getfield      #48                 // Field subBucketCount:I
       7: iconst_2
       8: idiv
       9: imul
      10: istore_2
      11: iload_2
      12: ireturn

  int countsArrayIndex(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifge          17
       6: new           #79                 // class java/lang/ArrayIndexOutOfBoundsException
       9: dup
      10: ldc_w         #308                // String Histogram recorded value cannot be negative.
      13: invokespecial #88                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: lload_1
      19: invokevirtual #138                // Method getBucketIndex:(J)I
      22: istore_3
      23: aload_0
      24: lload_1
      25: iload_3
      26: invokevirtual #139                // Method getSubBucketIndex:(JI)I
      29: istore        4
      31: aload_0
      32: iload_3
      33: iload         4
      35: invokespecial #309                // Method countsArrayIndex:(II)I
      38: ireturn

  private int countsArrayIndex(int, int);
    Code:
       0: getstatic     #310                // Field $assertionsDisabled:Z
       3: ifne          22
       6: iload_2
       7: aload_0
       8: getfield      #48                 // Field subBucketCount:I
      11: if_icmplt     22
      14: new           #311                // class java/lang/AssertionError
      17: dup
      18: invokespecial #312                // Method java/lang/AssertionError."<init>":()V
      21: athrow
      22: getstatic     #310                // Field $assertionsDisabled:Z
      25: ifne          48
      28: iload_1
      29: ifeq          48
      32: iload_2
      33: aload_0
      34: getfield      #49                 // Field subBucketHalfCount:I
      37: if_icmpge     48
      40: new           #311                // class java/lang/AssertionError
      43: dup
      44: invokespecial #312                // Method java/lang/AssertionError."<init>":()V
      47: athrow
      48: iload_1
      49: iconst_1
      50: iadd
      51: aload_0
      52: getfield      #47                 // Field subBucketHalfCountMagnitude:I
      55: ishl
      56: istore_3
      57: iload_2
      58: aload_0
      59: getfield      #49                 // Field subBucketHalfCount:I
      62: isub
      63: istore        4
      65: iload_3
      66: iload         4
      68: iadd
      69: ireturn

  int getBucketIndex(long);
    Code:
       0: aload_0
       1: getfield      #52                 // Field leadingZeroCountBase:I
       4: lload_1
       5: aload_0
       6: getfield      #50                 // Field subBucketMask:J
       9: lor
      10: invokestatic  #313                // Method java/lang/Long.numberOfLeadingZeros:(J)I
      13: isub
      14: ireturn

  int getSubBucketIndex(long, int);
    Code:
       0: lload_1
       1: iload_3
       2: aload_0
       3: getfield      #45                 // Field unitMagnitude:I
       6: iadd
       7: lushr
       8: l2i
       9: ireturn

  int normalizeIndex(int, int, int);
    Code:
       0: iload_2
       1: ifne          6
       4: iload_1
       5: ireturn
       6: iload_1
       7: iload_3
       8: if_icmpgt     15
      11: iload_1
      12: ifge          26
      15: new           #79                 // class java/lang/ArrayIndexOutOfBoundsException
      18: dup
      19: ldc_w         #314                // String index out of covered value range
      22: invokespecial #88                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: iload_1
      27: iload_2
      28: isub
      29: istore        4
      31: iload         4
      33: ifge          45
      36: iload         4
      38: iload_3
      39: iadd
      40: istore        4
      42: goto          57
      45: iload         4
      47: iload_3
      48: if_icmplt     57
      51: iload         4
      53: iload_3
      54: isub
      55: istore        4
      57: iload         4
      59: ireturn

  final long valueFromIndex(int, int);
    Code:
       0: iload_2
       1: i2l
       2: iload_1
       3: aload_0
       4: getfield      #45                 // Field unitMagnitude:I
       7: iadd
       8: lshl
       9: lreturn

  final long valueFromIndex(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #47                 // Field subBucketHalfCountMagnitude:I
       5: ishr
       6: iconst_1
       7: isub
       8: istore_2
       9: iload_1
      10: aload_0
      11: getfield      #49                 // Field subBucketHalfCount:I
      14: iconst_1
      15: isub
      16: iand
      17: aload_0
      18: getfield      #49                 // Field subBucketHalfCount:I
      21: iadd
      22: istore_3
      23: iload_2
      24: ifge          36
      27: iload_3
      28: aload_0
      29: getfield      #49                 // Field subBucketHalfCount:I
      32: isub
      33: istore_3
      34: iconst_0
      35: istore_2
      36: aload_0
      37: iload_2
      38: iload_3
      39: invokevirtual #140                // Method valueFromIndex:(II)J
      42: lreturn

  static int numberOfSubbuckets(int);
    Code:
       0: ldc2_w        #12                 // long 2l
       3: ldc2_w        #38                 // double 10.0d
       6: iload_0
       7: i2d
       8: invokestatic  #40                 // Method java/lang/Math.pow:(DD)D
      11: d2l
      12: lmul
      13: lstore_1
      14: lload_1
      15: l2d
      16: invokestatic  #41                 // Method java/lang/Math.log:(D)D
      19: ldc2_w        #42                 // double 2.0d
      22: invokestatic  #41                 // Method java/lang/Math.log:(D)D
      25: ddiv
      26: invokestatic  #46                 // Method java/lang/Math.ceil:(D)D
      29: d2i
      30: istore_3
      31: ldc2_w        #42                 // double 2.0d
      34: iload_3
      35: i2d
      36: invokestatic  #40                 // Method java/lang/Math.pow:(DD)D
      39: d2i
      40: istore        4
      42: iload         4
      44: ireturn

  static {};
    Code:
       0: ldc           #136                // class org/HdrHistogram/AbstractHistogram
       2: invokevirtual #315                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #310                // Field $assertionsDisabled:Z
      16: ldc           #136                // class org/HdrHistogram/AbstractHistogram
      18: ldc_w         #316                // String maxValue
      21: invokestatic  #317                // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      24: putstatic     #3                  // Field maxValueUpdater:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      27: ldc           #136                // class org/HdrHistogram/AbstractHistogram
      29: ldc_w         #318                // String minNonZeroValue
      32: invokestatic  #317                // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      35: putstatic     #8                  // Field minNonZeroValueUpdater:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      38: iconst_3
      39: anewarray     #319                // class java/lang/Class
      42: dup
      43: iconst_0
      44: getstatic     #320                // Field java/lang/Long.TYPE:Ljava/lang/Class;
      47: aastore
      48: dup
      49: iconst_1
      50: getstatic     #320                // Field java/lang/Long.TYPE:Ljava/lang/Class;
      53: aastore
      54: dup
      55: iconst_2
      56: getstatic     #321                // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      59: aastore
      60: putstatic     #263                // Field constructorArgsTypes:[Ljava/lang/Class;
      63: return
}
