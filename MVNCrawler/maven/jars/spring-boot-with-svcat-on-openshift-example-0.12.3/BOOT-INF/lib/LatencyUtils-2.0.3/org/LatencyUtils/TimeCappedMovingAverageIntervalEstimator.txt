Compiled from "TimeCappedMovingAverageIntervalEstimator.java"
public class org.LatencyUtils.TimeCappedMovingAverageIntervalEstimator extends org.LatencyUtils.MovingAverageIntervalEstimator {
  private final long baseTimeCap;

  private final org.LatencyUtils.TimeCappedMovingAverageIntervalEstimator$PauseTracker pauseTracker;

  private long timeCap;

  private volatile long timeOfLastEstimatedInterval;

  private static final int maxPausesToTrack;

  private java.util.concurrent.atomic.AtomicLongArray pauseStartTimes;

  private java.util.concurrent.atomic.AtomicLongArray pauseLengths;

  private int earliestPauseIndex;

  private int nextPauseRecordingIndex;

  public org.LatencyUtils.TimeCappedMovingAverageIntervalEstimator(int, long);
    Code:
       0: aload_0
       1: iload_1
       2: lload_2
       3: aconst_null
       4: invokespecial #2                  // Method "<init>":(IJLorg/LatencyUtils/PauseDetector;)V
       7: return

  public org.LatencyUtils.TimeCappedMovingAverageIntervalEstimator(int, long, org.LatencyUtils.PauseDetector);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #3                  // Method org/LatencyUtils/MovingAverageIntervalEstimator."<init>":(I)V
       5: aload_0
       6: lconst_0
       7: putfield      #4                  // Field timeOfLastEstimatedInterval:J
      10: aload_0
      11: new           #5                  // class java/util/concurrent/atomic/AtomicLongArray
      14: dup
      15: bipush        32
      17: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicLongArray."<init>":(I)V
      20: putfield      #8                  // Field pauseStartTimes:Ljava/util/concurrent/atomic/AtomicLongArray;
      23: aload_0
      24: new           #5                  // class java/util/concurrent/atomic/AtomicLongArray
      27: dup
      28: bipush        32
      30: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicLongArray."<init>":(I)V
      33: putfield      #9                  // Field pauseLengths:Ljava/util/concurrent/atomic/AtomicLongArray;
      36: aload_0
      37: iconst_0
      38: putfield      #10                 // Field earliestPauseIndex:I
      41: aload_0
      42: iconst_0
      43: putfield      #11                 // Field nextPauseRecordingIndex:I
      46: aload_0
      47: lload_2
      48: putfield      #12                 // Field baseTimeCap:J
      51: aload_0
      52: lload_2
      53: putfield      #13                 // Field timeCap:J
      56: aload         4
      58: ifnull        78
      61: aload_0
      62: new           #14                 // class org/LatencyUtils/TimeCappedMovingAverageIntervalEstimator$PauseTracker
      65: dup
      66: aload         4
      68: aload_0
      69: invokespecial #15                 // Method org/LatencyUtils/TimeCappedMovingAverageIntervalEstimator$PauseTracker."<init>":(Lorg/LatencyUtils/PauseDetector;Lorg/LatencyUtils/TimeCappedMovingAverageIntervalEstimator;)V
      72: putfield      #16                 // Field pauseTracker:Lorg/LatencyUtils/TimeCappedMovingAverageIntervalEstimator$PauseTracker;
      75: goto          83
      78: aload_0
      79: aconst_null
      80: putfield      #16                 // Field pauseTracker:Lorg/LatencyUtils/TimeCappedMovingAverageIntervalEstimator$PauseTracker;
      83: iconst_0
      84: istore        5
      86: iload         5
      88: bipush        32
      90: if_icmpge     121
      93: aload_0
      94: getfield      #8                  // Field pauseStartTimes:Ljava/util/concurrent/atomic/AtomicLongArray;
      97: iload         5
      99: ldc2_w        #18                 // long 9223372036854775807l
     102: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicLongArray.set:(IJ)V
     105: aload_0
     106: getfield      #9                  // Field pauseLengths:Ljava/util/concurrent/atomic/AtomicLongArray;
     109: iload         5
     111: lconst_0
     112: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicLongArray.set:(IJ)V
     115: iinc          5, 1
     118: goto          86
     121: return

  public void recordInterval(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #21                 // Method org/LatencyUtils/MovingAverageIntervalEstimator.recordIntervalAndReturnWindowPosition:(J)I
       5: pop
       6: return

  public synchronized long getEstimatedInterval(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #4                  // Field timeOfLastEstimatedInterval:J
       5: aload_0
       6: lload_1
       7: invokespecial #22                 // Method eliminateStalePauses:(J)V
      10: aload_0
      11: getfield      #23                 // Field count:Ljava/util/concurrent/atomic/AtomicLong;
      14: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      17: lstore_3
      18: lload_3
      19: aload_0
      20: getfield      #25                 // Field windowLength:I
      23: i2l
      24: lcmp
      25: ifge          32
      28: ldc2_w        #18                 // long 9223372036854775807l
      31: lreturn
      32: aload_0
      33: lload_1
      34: invokespecial #26                 // Method determineNumberOfWindowPositionsOutsideOfTimeCap:(J)I
      37: istore        9
      39: lload_3
      40: lstore        5
      42: lload_3
      43: aload_0
      44: getfield      #25                 // Field windowLength:I
      47: i2l
      48: ladd
      49: lconst_1
      50: lsub
      51: aload_0
      52: getfield      #27                 // Field windowMask:I
      55: i2l
      56: land
      57: l2i
      58: istore        10
      60: aload_0
      61: lload_1
      62: invokespecial #28                 // Method determineEarliestQualifyingTimeInWindow:(J)J
      65: lstore        11
      67: lload         11
      69: ldc2_w        #18                 // long 9223372036854775807l
      72: lcmp
      73: ifne          80
      76: ldc2_w        #18                 // long 9223372036854775807l
      79: lreturn
      80: aload_0
      81: getfield      #29                 // Field intervalEndTimes:[J
      84: iload         10
      86: laload
      87: lload_1
      88: invokestatic  #30                 // Method java/lang/Math.max:(JJ)J
      91: lstore        13
      93: lload         13
      95: lload         11
      97: lsub
      98: lstore        7
     100: aload_0
     101: getfield      #23                 // Field count:Ljava/util/concurrent/atomic/AtomicLong;
     104: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
     107: lstore_3
     108: lload_3
     109: lload         5
     111: lcmp
     112: ifne          39
     115: lload         7
     117: lconst_0
     118: lcmp
     119: iflt          39
     122: aload_0
     123: getfield      #13                 // Field timeCap:J
     126: aload_0
     127: getfield      #12                 // Field baseTimeCap:J
     130: lsub
     131: lstore        10
     133: aload_0
     134: getfield      #25                 // Field windowLength:I
     137: iload         9
     139: isub
     140: iconst_1
     141: isub
     142: istore        12
     144: iload         12
     146: ifgt          153
     149: ldc2_w        #18                 // long 9223372036854775807l
     152: lreturn
     153: lload         7
     155: lload         10
     157: lsub
     158: iload         12
     160: i2l
     161: ldiv
     162: lstore        13
     164: lload         13
     166: lconst_0
     167: lcmp
     168: ifgt          175
     171: ldc2_w        #18                 // long 9223372036854775807l
     174: lreturn
     175: lload         13
     177: lreturn

  private synchronized void recordPause(long, long);
    Code:
       0: aload_0
       1: getfield      #8                  // Field pauseStartTimes:Ljava/util/concurrent/atomic/AtomicLongArray;
       4: aload_0
       5: getfield      #11                 // Field nextPauseRecordingIndex:I
       8: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicLongArray.get:(I)J
      11: ldc2_w        #18                 // long 9223372036854775807l
      14: lcmp
      15: ifeq          51
      18: aload_0
      19: dup
      20: getfield      #13                 // Field timeCap:J
      23: aload_0
      24: getfield      #9                  // Field pauseLengths:Ljava/util/concurrent/atomic/AtomicLongArray;
      27: aload_0
      28: getfield      #11                 // Field nextPauseRecordingIndex:I
      31: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicLongArray.get:(I)J
      34: lsub
      35: putfield      #13                 // Field timeCap:J
      38: aload_0
      39: aload_0
      40: getfield      #11                 // Field nextPauseRecordingIndex:I
      43: iconst_1
      44: iadd
      45: bipush        32
      47: irem
      48: putfield      #10                 // Field earliestPauseIndex:I
      51: aload_0
      52: dup
      53: getfield      #13                 // Field timeCap:J
      56: lload_1
      57: ladd
      58: putfield      #13                 // Field timeCap:J
      61: aload_0
      62: getfield      #8                  // Field pauseStartTimes:Ljava/util/concurrent/atomic/AtomicLongArray;
      65: aload_0
      66: getfield      #11                 // Field nextPauseRecordingIndex:I
      69: lload_3
      70: lload_1
      71: lsub
      72: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicLongArray.set:(IJ)V
      75: aload_0
      76: getfield      #9                  // Field pauseLengths:Ljava/util/concurrent/atomic/AtomicLongArray;
      79: aload_0
      80: getfield      #11                 // Field nextPauseRecordingIndex:I
      83: lload_1
      84: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicLongArray.set:(IJ)V
      87: aload_0
      88: aload_0
      89: getfield      #11                 // Field nextPauseRecordingIndex:I
      92: iconst_1
      93: iadd
      94: bipush        32
      96: irem
      97: putfield      #11                 // Field nextPauseRecordingIndex:I
     100: return

  public void stop();
    Code:
       0: aload_0
       1: getfield      #16                 // Field pauseTracker:Lorg/LatencyUtils/TimeCappedMovingAverageIntervalEstimator$PauseTracker;
       4: ifnull        14
       7: aload_0
       8: getfield      #16                 // Field pauseTracker:Lorg/LatencyUtils/TimeCappedMovingAverageIntervalEstimator$PauseTracker;
      11: invokevirtual #32                 // Method org/LatencyUtils/TimeCappedMovingAverageIntervalEstimator$PauseTracker.stop:()V
      14: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #4                  // Field timeOfLastEstimatedInterval:J
       4: lstore_1
       5: aload_0
       6: lload_1
       7: invokespecial #22                 // Method eliminateStalePauses:(J)V
      10: aload_0
      11: lload_1
      12: invokespecial #26                 // Method determineNumberOfWindowPositionsOutsideOfTimeCap:(J)I
      15: istore_3
      16: aload_0
      17: lload_1
      18: invokespecial #28                 // Method determineEarliestQualifyingTimeInWindow:(J)J
      21: lstore        4
      23: lload_1
      24: lload         4
      26: lsub
      27: lstore        6
      29: aload_0
      30: getfield      #13                 // Field timeCap:J
      33: aload_0
      34: getfield      #12                 // Field baseTimeCap:J
      37: lsub
      38: lstore        8
      40: aload_0
      41: getfield      #25                 // Field windowLength:I
      44: iload_3
      45: isub
      46: iconst_1
      47: isub
      48: istore        10
      50: ldc2_w        #18                 // long 9223372036854775807l
      53: lstore        11
      55: iload         10
      57: ifle          71
      60: lload         6
      62: lload         8
      64: lsub
      65: iload         10
      67: i2l
      68: ldiv
      69: lstore        11
      71: new           #33                 // class java/lang/StringBuilder
      74: dup
      75: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      78: ldc           #35                 // String IntervalEstimator: \nEstimated Interval:
      80: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: aload_0
      84: lload_1
      85: invokevirtual #37                 // Method getEstimatedInterval:(J)J
      88: invokevirtual #38                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      91: ldc           #39                 // String  (calculated at time
      93: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: lload_1
      97: invokevirtual #38                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     100: ldc           #40                 // String )\n
     102: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: ldc           #41                 // String Time cap:
     107: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: aload_0
     111: getfield      #13                 // Field timeCap:J
     114: invokevirtual #38                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     117: ldc           #42                 // String , count =
     119: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: aload_0
     123: getfield      #23                 // Field count:Ljava/util/concurrent/atomic/AtomicLong;
     126: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
     129: invokevirtual #38                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     132: ldc           #43                 // String , currentPosition =
     134: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: aload_0
     138: invokevirtual #44                 // Method getCurrentPosition:()I
     141: invokevirtual #45                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     144: ldc           #46                 // String \n
     146: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: ldc           #47                 // String timeCapStartTime =
     151: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: lload_1
     155: aload_0
     156: getfield      #13                 // Field timeCap:J
     159: lsub
     160: invokevirtual #38                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     163: ldc           #48                 // String , numberOfWindowPositionsSkipped =
     165: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: iload_3
     169: invokevirtual #45                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     172: ldc           #46                 // String \n
     174: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     177: ldc           #49                 // String windowStartTime =
     179: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     182: lload         4
     184: invokevirtual #38                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     187: ldc           #50                 // String , windowTimeSpan =
     189: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     192: lload         6
     194: invokevirtual #38                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     197: ldc           #51                 // String , positionDelta =
     199: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     202: iload         10
     204: invokevirtual #45                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     207: ldc           #46                 // String \n
     209: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     212: ldc           #52                 // String totalPauseTimeInWindow =
     214: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     217: lload         8
     219: invokevirtual #38                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     222: ldc           #53                 // String , averageInterval =
     224: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     227: lload         11
     229: invokevirtual #38                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     232: ldc           #46                 // String \n
     234: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     237: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     240: areturn

  private void eliminateStalePauses(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #28                 // Method determineEarliestQualifyingTimeInWindow:(J)J
       5: lstore_3
       6: lload_3
       7: lstore        5
       9: lload_1
      10: aload_0
      11: getfield      #13                 // Field timeCap:J
      14: lsub
      15: lstore        7
      17: lload         7
      19: lload         5
      21: invokestatic  #30                 // Method java/lang/Math.max:(JJ)J
      24: lstore        9
      26: aload_0
      27: getfield      #8                  // Field pauseStartTimes:Ljava/util/concurrent/atomic/AtomicLongArray;
      30: aload_0
      31: getfield      #10                 // Field earliestPauseIndex:I
      34: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicLongArray.get:(I)J
      37: lstore        11
      39: lload         11
      41: lload         9
      43: lcmp
      44: ifge          139
      47: aload_0
      48: dup
      49: getfield      #13                 // Field timeCap:J
      52: aload_0
      53: getfield      #9                  // Field pauseLengths:Ljava/util/concurrent/atomic/AtomicLongArray;
      56: aload_0
      57: getfield      #10                 // Field earliestPauseIndex:I
      60: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicLongArray.get:(I)J
      63: lsub
      64: putfield      #13                 // Field timeCap:J
      67: lload_1
      68: aload_0
      69: getfield      #13                 // Field timeCap:J
      72: lsub
      73: lstore        7
      75: lload         7
      77: lload         5
      79: invokestatic  #30                 // Method java/lang/Math.max:(JJ)J
      82: lstore        9
      84: aload_0
      85: getfield      #8                  // Field pauseStartTimes:Ljava/util/concurrent/atomic/AtomicLongArray;
      88: aload_0
      89: getfield      #10                 // Field earliestPauseIndex:I
      92: ldc2_w        #18                 // long 9223372036854775807l
      95: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicLongArray.set:(IJ)V
      98: aload_0
      99: getfield      #9                  // Field pauseLengths:Ljava/util/concurrent/atomic/AtomicLongArray;
     102: aload_0
     103: getfield      #10                 // Field earliestPauseIndex:I
     106: lconst_0
     107: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicLongArray.set:(IJ)V
     110: aload_0
     111: aload_0
     112: getfield      #10                 // Field earliestPauseIndex:I
     115: iconst_1
     116: iadd
     117: bipush        32
     119: irem
     120: putfield      #10                 // Field earliestPauseIndex:I
     123: aload_0
     124: getfield      #8                  // Field pauseStartTimes:Ljava/util/concurrent/atomic/AtomicLongArray;
     127: aload_0
     128: getfield      #10                 // Field earliestPauseIndex:I
     131: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicLongArray.get:(I)J
     134: lstore        11
     136: goto          39
     139: aload_0
     140: lload_1
     141: invokespecial #28                 // Method determineEarliestQualifyingTimeInWindow:(J)J
     144: lstore_3
     145: lload         5
     147: lload_3
     148: lcmp
     149: ifne          6
     152: return

  private long determineEarliestQualifyingTimeInWindow(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #26                 // Method determineNumberOfWindowPositionsOutsideOfTimeCap:(J)I
       5: istore_3
       6: iload_3
       7: aload_0
       8: getfield      #25                 // Field windowLength:I
      11: if_icmpne     18
      14: ldc2_w        #18                 // long 9223372036854775807l
      17: lreturn
      18: aload_0
      19: invokevirtual #44                 // Method getCurrentPosition:()I
      22: iload_3
      23: iadd
      24: aload_0
      25: getfield      #27                 // Field windowMask:I
      28: iand
      29: istore        4
      31: aload_0
      32: getfield      #29                 // Field intervalEndTimes:[J
      35: iload         4
      37: laload
      38: lreturn

  private int determineNumberOfWindowPositionsOutsideOfTimeCap(long);
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method getCurrentPosition:()I
       4: istore_3
       5: lload_1
       6: aload_0
       7: getfield      #13                 // Field timeCap:J
      10: lsub
      11: lstore        4
      13: aload_0
      14: getfield      #29                 // Field intervalEndTimes:[J
      17: iload_3
      18: laload
      19: lload         4
      21: lcmp
      22: iflt          27
      25: iconst_0
      26: ireturn
      27: iconst_0
      28: istore        6
      30: aload_0
      31: getfield      #25                 // Field windowLength:I
      34: istore        7
      36: iload         6
      38: iload         7
      40: if_icmpge     96
      43: iload         6
      45: iload         7
      47: iadd
      48: iconst_1
      49: iushr
      50: istore        8
      52: iload_3
      53: iload         8
      55: iadd
      56: aload_0
      57: getfield      #27                 // Field windowMask:I
      60: iand
      61: istore        9
      63: aload_0
      64: getfield      #29                 // Field intervalEndTimes:[J
      67: iload         9
      69: laload
      70: lstore        10
      72: lload         10
      74: lload         4
      76: lcmp
      77: ifge          89
      80: iload         8
      82: iconst_1
      83: iadd
      84: istore        6
      86: goto          93
      89: iload         8
      91: istore        7
      93: goto          36
      96: iload         6
      98: ireturn

  static void access$000(org.LatencyUtils.TimeCappedMovingAverageIntervalEstimator, long, long);
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: invokespecial #1                  // Method recordPause:(JJ)V
       6: return
}
