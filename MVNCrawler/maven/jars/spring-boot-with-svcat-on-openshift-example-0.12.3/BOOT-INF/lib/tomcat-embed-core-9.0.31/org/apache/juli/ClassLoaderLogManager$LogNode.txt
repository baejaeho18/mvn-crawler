Compiled from "ClassLoaderLogManager.java"
public final class org.apache.juli.ClassLoaderLogManager$LogNode {
  java.util.logging.Logger logger;

  final java.util.Map<java.lang.String, org.apache.juli.ClassLoaderLogManager$LogNode> children;

  final org.apache.juli.ClassLoaderLogManager$LogNode parent;

  org.apache.juli.ClassLoaderLogManager$LogNode(org.apache.juli.ClassLoaderLogManager$LogNode, java.util.logging.Logger);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field children:Ljava/util/Map;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field parent:Lorg/apache/juli/ClassLoaderLogManager$LogNode;
      20: aload_0
      21: aload_2
      22: putfield      #6                  // Field logger:Ljava/util/logging/Logger;
      25: return

  org.apache.juli.ClassLoaderLogManager$LogNode(org.apache.juli.ClassLoaderLogManager$LogNode);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #7                  // Method "<init>":(Lorg/apache/juli/ClassLoaderLogManager$LogNode;Ljava/util/logging/Logger;)V
       6: return

  org.apache.juli.ClassLoaderLogManager$LogNode findNode(java.lang.String);
    Code:
       0: aload_0
       1: astore_2
       2: aload_0
       3: getfield      #6                  // Field logger:Ljava/util/logging/Logger;
       6: invokevirtual #8                  // Method java/util/logging/Logger.getName:()Ljava/lang/String;
       9: aload_1
      10: invokevirtual #9                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      13: ifeq          18
      16: aload_0
      17: areturn
      18: aload_1
      19: ifnull        108
      22: aload_1
      23: bipush        46
      25: invokevirtual #10                 // Method java/lang/String.indexOf:(I)I
      28: istore_3
      29: iload_3
      30: ifge          41
      33: aload_1
      34: astore        4
      36: aconst_null
      37: astore_1
      38: goto          57
      41: aload_1
      42: iconst_0
      43: iload_3
      44: invokevirtual #11                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      47: astore        4
      49: aload_1
      50: iload_3
      51: iconst_1
      52: iadd
      53: invokevirtual #12                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      56: astore_1
      57: aload_2
      58: getfield      #4                  // Field children:Ljava/util/Map;
      61: aload         4
      63: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      68: checkcast     #14                 // class org/apache/juli/ClassLoaderLogManager$LogNode
      71: astore        5
      73: aload         5
      75: ifnonnull     102
      78: new           #14                 // class org/apache/juli/ClassLoaderLogManager$LogNode
      81: dup
      82: aload_2
      83: invokespecial #15                 // Method "<init>":(Lorg/apache/juli/ClassLoaderLogManager$LogNode;)V
      86: astore        5
      88: aload_2
      89: getfield      #4                  // Field children:Ljava/util/Map;
      92: aload         4
      94: aload         5
      96: invokeinterface #16,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     101: pop
     102: aload         5
     104: astore_2
     105: goto          18
     108: aload_2
     109: areturn

  java.util.logging.Logger findParentLogger();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #5                  // Field parent:Lorg/apache/juli/ClassLoaderLogManager$LogNode;
       6: astore_2
       7: aload_2
       8: ifnull        28
      11: aload_1
      12: ifnonnull     28
      15: aload_2
      16: getfield      #6                  // Field logger:Ljava/util/logging/Logger;
      19: astore_1
      20: aload_2
      21: getfield      #5                  // Field parent:Lorg/apache/juli/ClassLoaderLogManager$LogNode;
      24: astore_2
      25: goto          7
      28: aload_1
      29: areturn

  void setParentLogger(java.util.logging.Logger);
    Code:
       0: aload_0
       1: getfield      #4                  // Field children:Ljava/util/Map;
       4: invokeinterface #17,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokeinterface #18,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          60
      24: aload_2
      25: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #14                 // class org/apache/juli/ClassLoaderLogManager$LogNode
      33: astore_3
      34: aload_3
      35: getfield      #6                  // Field logger:Ljava/util/logging/Logger;
      38: ifnonnull     49
      41: aload_3
      42: aload_1
      43: invokevirtual #21                 // Method setParentLogger:(Ljava/util/logging/Logger;)V
      46: goto          57
      49: aload_3
      50: getfield      #6                  // Field logger:Ljava/util/logging/Logger;
      53: aload_1
      54: invokestatic  #22                 // Method org/apache/juli/ClassLoaderLogManager.doSetParentLogger:(Ljava/util/logging/Logger;Ljava/util/logging/Logger;)V
      57: goto          15
      60: return
}
