Compiled from "RemoteCIDRFilter.java"
public final class org.apache.catalina.filters.RemoteCIDRFilter extends org.apache.catalina.filters.FilterBase {
  private static final java.lang.String PLAIN_TEXT_MIME_TYPE;

  private final org.apache.juli.logging.Log log;

  private final java.util.List<org.apache.catalina.util.NetMask> allow;

  private final java.util.List<org.apache.catalina.util.NetMask> deny;

  public org.apache.catalina.filters.RemoteCIDRFilter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/catalina/filters/FilterBase."<init>":()V
       4: aload_0
       5: ldc           #2                  // class org/apache/catalina/filters/RemoteCIDRFilter
       7: invokestatic  #3                  // Method org/apache/juli/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/juli/logging/Log;
      10: putfield      #4                  // Field log:Lorg/apache/juli/logging/Log;
      13: aload_0
      14: new           #5                  // class java/util/ArrayList
      17: dup
      18: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
      21: putfield      #7                  // Field allow:Ljava/util/List;
      24: aload_0
      25: new           #5                  // class java/util/ArrayList
      28: dup
      29: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
      32: putfield      #8                  // Field deny:Ljava/util/List;
      35: return

  public java.lang.String getAllow();
    Code:
       0: aload_0
       1: getfield      #7                  // Field allow:Ljava/util/List;
       4: invokevirtual #9                  // Method java/lang/Object.toString:()Ljava/lang/String;
       7: ldc           #10                 // String [
       9: ldc           #11                 // String
      11: invokevirtual #12                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      14: ldc           #13                 // String ]
      16: ldc           #11                 // String
      18: invokevirtual #12                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      21: areturn

  public void setAllow(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #7                  // Field allow:Ljava/util/List;
       6: invokespecial #14                 // Method fillFromInput:(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
       9: astore_2
      10: aload_2
      11: invokeinterface #15,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifeq          20
      19: return
      20: aload_2
      21: invokeinterface #16,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      26: astore_3
      27: aload_3
      28: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          61
      36: aload_3
      37: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #19                 // class java/lang/String
      45: astore        4
      47: aload_0
      48: getfield      #4                  // Field log:Lorg/apache/juli/logging/Log;
      51: aload         4
      53: invokeinterface #20,  2           // InterfaceMethod org/apache/juli/logging/Log.error:(Ljava/lang/Object;)V
      58: goto          27
      61: new           #21                 // class java/lang/IllegalArgumentException
      64: dup
      65: getstatic     #22                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
      68: ldc           #23                 // String remoteCidrFilter.invalid
      70: iconst_1
      71: anewarray     #24                 // class java/lang/Object
      74: dup
      75: iconst_0
      76: ldc           #25                 // String allow
      78: aastore
      79: invokevirtual #26                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      82: invokespecial #27                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      85: athrow

  public java.lang.String getDeny();
    Code:
       0: aload_0
       1: getfield      #8                  // Field deny:Ljava/util/List;
       4: invokevirtual #9                  // Method java/lang/Object.toString:()Ljava/lang/String;
       7: ldc           #10                 // String [
       9: ldc           #11                 // String
      11: invokevirtual #12                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      14: ldc           #13                 // String ]
      16: ldc           #11                 // String
      18: invokevirtual #12                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      21: areturn

  public void setDeny(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #8                  // Field deny:Ljava/util/List;
       6: invokespecial #14                 // Method fillFromInput:(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
       9: astore_2
      10: aload_2
      11: invokeinterface #15,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifeq          20
      19: return
      20: aload_2
      21: invokeinterface #16,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      26: astore_3
      27: aload_3
      28: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          61
      36: aload_3
      37: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #19                 // class java/lang/String
      45: astore        4
      47: aload_0
      48: getfield      #4                  // Field log:Lorg/apache/juli/logging/Log;
      51: aload         4
      53: invokeinterface #20,  2           // InterfaceMethod org/apache/juli/logging/Log.error:(Ljava/lang/Object;)V
      58: goto          27
      61: new           #21                 // class java/lang/IllegalArgumentException
      64: dup
      65: getstatic     #22                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
      68: ldc           #23                 // String remoteCidrFilter.invalid
      70: iconst_1
      71: anewarray     #24                 // class java/lang/Object
      74: dup
      75: iconst_0
      76: ldc           #28                 // String deny
      78: aastore
      79: invokevirtual #26                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      82: invokespecial #27                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      85: athrow

  protected boolean isConfigProblemFatal();
    Code:
       0: iconst_1
       1: ireturn

  public void doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain) throws java.io.IOException, javax.servlet.ServletException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #29,  1           // InterfaceMethod javax/servlet/ServletRequest.getRemoteAddr:()Ljava/lang/String;
       7: invokespecial #30                 // Method isAllowed:(Ljava/lang/String;)Z
      10: ifeq          22
      13: aload_3
      14: aload_1
      15: aload_2
      16: invokeinterface #31,  3           // InterfaceMethod javax/servlet/FilterChain.doFilter:(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
      21: return
      22: aload_2
      23: instanceof    #32                 // class javax/servlet/http/HttpServletResponse
      26: ifne          35
      29: aload_0
      30: aload_2
      31: invokespecial #33                 // Method sendErrorWhenNotHttp:(Ljavax/servlet/ServletResponse;)V
      34: return
      35: aload_2
      36: checkcast     #32                 // class javax/servlet/http/HttpServletResponse
      39: sipush        403
      42: invokeinterface #34,  2           // InterfaceMethod javax/servlet/http/HttpServletResponse.sendError:(I)V
      47: return

  public org.apache.juli.logging.Log getLogger();
    Code:
       0: aload_0
       1: getfield      #4                  // Field log:Lorg/apache/juli/logging/Log;
       4: areturn

  private boolean isAllowed(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #35                 // Method java/net/InetAddress.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;
       4: astore_2
       5: goto          29
       8: astore_3
       9: aload_0
      10: getfield      #4                  // Field log:Lorg/apache/juli/logging/Log;
      13: getstatic     #22                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
      16: ldc           #37                 // String remoteCidrFilter.noRemoteIp
      18: invokevirtual #38                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;)Ljava/lang/String;
      21: aload_3
      22: invokeinterface #39,  3           // InterfaceMethod org/apache/juli/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      27: iconst_0
      28: ireturn
      29: aload_0
      30: getfield      #8                  // Field deny:Ljava/util/List;
      33: invokeinterface #16,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      38: astore_3
      39: aload_3
      40: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      45: ifeq          73
      48: aload_3
      49: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      54: checkcast     #40                 // class org/apache/catalina/util/NetMask
      57: astore        4
      59: aload         4
      61: aload_2
      62: invokevirtual #41                 // Method org/apache/catalina/util/NetMask.matches:(Ljava/net/InetAddress;)Z
      65: ifeq          70
      68: iconst_0
      69: ireturn
      70: goto          39
      73: aload_0
      74: getfield      #7                  // Field allow:Ljava/util/List;
      77: invokeinterface #16,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      82: astore_3
      83: aload_3
      84: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      89: ifeq          117
      92: aload_3
      93: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      98: checkcast     #40                 // class org/apache/catalina/util/NetMask
     101: astore        4
     103: aload         4
     105: aload_2
     106: invokevirtual #41                 // Method org/apache/catalina/util/NetMask.matches:(Ljava/net/InetAddress;)Z
     109: ifeq          114
     112: iconst_1
     113: ireturn
     114: goto          83
     117: aload_0
     118: getfield      #8                  // Field deny:Ljava/util/List;
     121: invokeinterface #15,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     126: ifne          143
     129: aload_0
     130: getfield      #7                  // Field allow:Ljava/util/List;
     133: invokeinterface #15,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     138: ifeq          143
     141: iconst_1
     142: ireturn
     143: iconst_0
     144: ireturn
    Exception table:
       from    to  target type
           0     5     8   Class java/net/UnknownHostException

  private void sendErrorWhenNotHttp(javax.servlet.ServletResponse) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #42,  1           // InterfaceMethod javax/servlet/ServletResponse.getWriter:()Ljava/io/PrintWriter;
       6: astore_2
       7: aload_1
       8: ldc           #43                 // String text/plain
      10: invokeinterface #44,  2           // InterfaceMethod javax/servlet/ServletResponse.setContentType:(Ljava/lang/String;)V
      15: aload_2
      16: getstatic     #22                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
      19: ldc           #45                 // String http.403
      21: invokevirtual #38                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;)Ljava/lang/String;
      24: invokevirtual #46                 // Method java/io/PrintWriter.write:(Ljava/lang/String;)V
      27: aload_2
      28: invokevirtual #47                 // Method java/io/PrintWriter.flush:()V
      31: return

  private java.util.List<java.lang.String> fillFromInput(java.lang.String, java.util.List<org.apache.catalina.util.NetMask>);
    Code:
       0: aload_2
       1: invokeinterface #48,  1           // InterfaceMethod java/util/List.clear:()V
       6: aload_1
       7: ifnull        17
      10: aload_1
      11: invokevirtual #49                 // Method java/lang/String.isEmpty:()Z
      14: ifeq          21
      17: invokestatic  #50                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      20: areturn
      21: new           #51                 // class java/util/LinkedList
      24: dup
      25: invokespecial #52                 // Method java/util/LinkedList."<init>":()V
      28: astore_3
      29: aload_1
      30: ldc           #53                 // String \\s*,\\s*
      32: invokevirtual #54                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      35: astore        5
      37: aload         5
      39: arraylength
      40: istore        6
      42: iconst_0
      43: istore        7
      45: iload         7
      47: iload         6
      49: if_icmpge     125
      52: aload         5
      54: iload         7
      56: aaload
      57: astore        8
      59: new           #40                 // class org/apache/catalina/util/NetMask
      62: dup
      63: aload         8
      65: invokespecial #55                 // Method org/apache/catalina/util/NetMask."<init>":(Ljava/lang/String;)V
      68: astore        4
      70: aload_2
      71: aload         4
      73: invokeinterface #56,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      78: pop
      79: goto          119
      82: astore        9
      84: aload_3
      85: new           #57                 // class java/lang/StringBuilder
      88: dup
      89: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
      92: aload         8
      94: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: ldc           #60                 // String :
      99: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: aload         9
     104: invokevirtual #61                 // Method java/lang/IllegalArgumentException.getMessage:()Ljava/lang/String;
     107: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     113: invokeinterface #56,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     118: pop
     119: iinc          7, 1
     122: goto          45
     125: aload_3
     126: invokestatic  #63                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
     129: areturn
    Exception table:
       from    to  target type
          59    79    82   Class java/lang/IllegalArgumentException
}
