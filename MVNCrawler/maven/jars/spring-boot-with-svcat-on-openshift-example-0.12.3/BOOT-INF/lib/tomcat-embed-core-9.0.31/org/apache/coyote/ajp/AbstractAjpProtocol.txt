Compiled from "AbstractAjpProtocol.java"
public abstract class org.apache.coyote.ajp.AbstractAjpProtocol<S> extends org.apache.coyote.AbstractProtocol<S> {
  protected static final org.apache.tomcat.util.res.StringManager sm;

  private boolean ajpFlush;

  private boolean tomcatAuthentication;

  private boolean tomcatAuthorization;

  private java.lang.String secret;

  private boolean secretRequired;

  private java.util.regex.Pattern allowedRequestAttributesPattern;

  private int packetSize;

  public org.apache.coyote.ajp.AbstractAjpProtocol(org.apache.tomcat.util.net.AbstractEndpoint<S, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/coyote/AbstractProtocol."<init>":(Lorg/apache/tomcat/util/net/AbstractEndpoint;)V
       5: aload_0
       6: iconst_1
       7: putfield      #2                  // Field ajpFlush:Z
      10: aload_0
      11: iconst_1
      12: putfield      #3                  // Field tomcatAuthentication:Z
      15: aload_0
      16: iconst_0
      17: putfield      #4                  // Field tomcatAuthorization:Z
      20: aload_0
      21: aconst_null
      22: putfield      #5                  // Field secret:Ljava/lang/String;
      25: aload_0
      26: iconst_1
      27: putfield      #6                  // Field secretRequired:Z
      30: aload_0
      31: sipush        8192
      34: putfield      #8                  // Field packetSize:I
      37: aload_0
      38: iconst_m1
      39: invokevirtual #9                  // Method setConnectionTimeout:(I)V
      42: aload_0
      43: invokevirtual #10                 // Method getEndpoint:()Lorg/apache/tomcat/util/net/AbstractEndpoint;
      46: iconst_0
      47: invokevirtual #11                 // Method org/apache/tomcat/util/net/AbstractEndpoint.setUseSendfile:(Z)V
      50: aload_0
      51: invokevirtual #10                 // Method getEndpoint:()Lorg/apache/tomcat/util/net/AbstractEndpoint;
      54: invokestatic  #12                 // Method java/net/InetAddress.getLoopbackAddress:()Ljava/net/InetAddress;
      57: invokevirtual #13                 // Method org/apache/tomcat/util/net/AbstractEndpoint.setAddress:(Ljava/net/InetAddress;)V
      60: new           #14                 // class org/apache/coyote/AbstractProtocol$ConnectionHandler
      63: dup
      64: aload_0
      65: invokespecial #15                 // Method org/apache/coyote/AbstractProtocol$ConnectionHandler."<init>":(Lorg/apache/coyote/AbstractProtocol;)V
      68: astore_2
      69: aload_0
      70: aload_2
      71: invokevirtual #16                 // Method setHandler:(Lorg/apache/tomcat/util/net/AbstractEndpoint$Handler;)V
      74: aload_0
      75: invokevirtual #10                 // Method getEndpoint:()Lorg/apache/tomcat/util/net/AbstractEndpoint;
      78: aload_2
      79: invokevirtual #17                 // Method org/apache/tomcat/util/net/AbstractEndpoint.setHandler:(Lorg/apache/tomcat/util/net/AbstractEndpoint$Handler;)V
      82: return

  protected java.lang.String getProtocolName();
    Code:
       0: ldc           #18                 // String Ajp
       2: areturn

  protected org.apache.tomcat.util.net.AbstractEndpoint<S, ?> getEndpoint();
    Code:
       0: aload_0
       1: invokespecial #19                 // Method org/apache/coyote/AbstractProtocol.getEndpoint:()Lorg/apache/tomcat/util/net/AbstractEndpoint;
       4: areturn

  protected org.apache.coyote.UpgradeProtocol getNegotiatedProtocol(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  protected org.apache.coyote.UpgradeProtocol getUpgradeProtocol(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  public boolean getAjpFlush();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ajpFlush:Z
       4: ireturn

  public void setAjpFlush(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field ajpFlush:Z
       5: return

  public boolean getTomcatAuthentication();
    Code:
       0: aload_0
       1: getfield      #3                  // Field tomcatAuthentication:Z
       4: ireturn

  public void setTomcatAuthentication(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field tomcatAuthentication:Z
       5: return

  public boolean getTomcatAuthorization();
    Code:
       0: aload_0
       1: getfield      #4                  // Field tomcatAuthorization:Z
       4: ireturn

  public void setTomcatAuthorization(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field tomcatAuthorization:Z
       5: return

  public void setSecret(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field secret:Ljava/lang/String;
       5: return

  protected java.lang.String getSecret();
    Code:
       0: aload_0
       1: getfield      #5                  // Field secret:Ljava/lang/String;
       4: areturn

  public void setRequiredSecret(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method setSecret:(Ljava/lang/String;)V
       5: return

  protected java.lang.String getRequiredSecret();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method getSecret:()Ljava/lang/String;
       4: areturn

  public void setSecretRequired(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field secretRequired:Z
       5: return

  public boolean getSecretRequired();
    Code:
       0: aload_0
       1: getfield      #6                  // Field secretRequired:Z
       4: ireturn

  public void setAllowedRequestAttributesPattern(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #22                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putfield      #23                 // Field allowedRequestAttributesPattern:Ljava/util/regex/Pattern;
       8: return

  public java.lang.String getAllowedRequestAttributesPattern();
    Code:
       0: aload_0
       1: getfield      #23                 // Field allowedRequestAttributesPattern:Ljava/util/regex/Pattern;
       4: invokevirtual #24                 // Method java/util/regex/Pattern.pattern:()Ljava/lang/String;
       7: areturn

  protected java.util.regex.Pattern getAllowedRequestAttributesPatternInternal();
    Code:
       0: aload_0
       1: getfield      #23                 // Field allowedRequestAttributesPattern:Ljava/util/regex/Pattern;
       4: areturn

  public int getPacketSize();
    Code:
       0: aload_0
       1: getfield      #8                  // Field packetSize:I
       4: ireturn

  public void setPacketSize(int);
    Code:
       0: iload_1
       1: sipush        8192
       4: if_icmpge     17
       7: aload_0
       8: sipush        8192
      11: putfield      #8                  // Field packetSize:I
      14: goto          22
      17: aload_0
      18: iload_1
      19: putfield      #8                  // Field packetSize:I
      22: return

  public void addSslHostConfig(org.apache.tomcat.util.net.SSLHostConfig);
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getLog:()Lorg/apache/juli/logging/Log;
       4: getstatic     #26                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
       7: ldc           #27                 // String ajpprotocol.noSSL
       9: iconst_1
      10: anewarray     #28                 // class java/lang/Object
      13: dup
      14: iconst_0
      15: aload_1
      16: invokevirtual #29                 // Method org/apache/tomcat/util/net/SSLHostConfig.getHostName:()Ljava/lang/String;
      19: aastore
      20: invokevirtual #30                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      23: invokeinterface #31,  2           // InterfaceMethod org/apache/juli/logging/Log.warn:(Ljava/lang/Object;)V
      28: return

  public org.apache.tomcat.util.net.SSLHostConfig[] findSslHostConfigs();
    Code:
       0: iconst_0
       1: anewarray     #32                 // class org/apache/tomcat/util/net/SSLHostConfig
       4: areturn

  public void addUpgradeProtocol(org.apache.coyote.UpgradeProtocol);
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getLog:()Lorg/apache/juli/logging/Log;
       4: getstatic     #26                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
       7: ldc           #33                 // String ajpprotocol.noUpgrade
       9: iconst_1
      10: anewarray     #28                 // class java/lang/Object
      13: dup
      14: iconst_0
      15: aload_1
      16: invokevirtual #34                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: invokevirtual #35                 // Method java/lang/Class.getName:()Ljava/lang/String;
      22: aastore
      23: invokevirtual #30                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      26: invokeinterface #31,  2           // InterfaceMethod org/apache/juli/logging/Log.warn:(Ljava/lang/Object;)V
      31: return

  public org.apache.coyote.UpgradeProtocol[] findUpgradeProtocols();
    Code:
       0: iconst_0
       1: anewarray     #36                 // class org/apache/coyote/UpgradeProtocol
       4: areturn

  protected org.apache.coyote.Processor createProcessor();
    Code:
       0: new           #37                 // class org/apache/coyote/ajp/AjpProcessor
       3: dup
       4: aload_0
       5: aload_0
       6: invokevirtual #38                 // Method getAdapter:()Lorg/apache/coyote/Adapter;
       9: invokespecial #39                 // Method org/apache/coyote/ajp/AjpProcessor."<init>":(Lorg/apache/coyote/ajp/AbstractAjpProtocol;Lorg/apache/coyote/Adapter;)V
      12: astore_1
      13: aload_1
      14: areturn

  protected org.apache.coyote.Processor createUpgradeProcessor(org.apache.tomcat.util.net.SocketWrapperBase<?>, org.apache.coyote.UpgradeToken);
    Code:
       0: new           #40                 // class java/lang/IllegalStateException
       3: dup
       4: getstatic     #26                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
       7: ldc           #41                 // String ajpprotocol.noUpgradeHandler
       9: iconst_1
      10: anewarray     #28                 // class java/lang/Object
      13: dup
      14: iconst_0
      15: aload_2
      16: invokevirtual #42                 // Method org/apache/coyote/UpgradeToken.getHttpUpgradeHandler:()Ljavax/servlet/http/HttpUpgradeHandler;
      19: invokevirtual #34                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      22: invokevirtual #35                 // Method java/lang/Class.getName:()Ljava/lang/String;
      25: aastore
      26: invokevirtual #30                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      29: invokespecial #43                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      32: athrow

  public void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method getSecretRequired:()Z
       4: ifeq          39
       7: aload_0
       8: invokevirtual #21                 // Method getSecret:()Ljava/lang/String;
      11: astore_1
      12: aload_1
      13: ifnull        23
      16: aload_1
      17: invokevirtual #45                 // Method java/lang/String.length:()I
      20: ifne          39
      23: new           #46                 // class java/lang/IllegalArgumentException
      26: dup
      27: getstatic     #26                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
      30: ldc           #47                 // String ajpprotocol.nosecret
      32: invokevirtual #48                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;)Ljava/lang/String;
      35: invokespecial #49                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: invokespecial #50                 // Method org/apache/coyote/AbstractProtocol.start:()V
      43: return

  static {};
    Code:
       0: ldc           #51                 // class org/apache/coyote/ajp/AbstractAjpProtocol
       2: invokestatic  #52                 // Method org/apache/tomcat/util/res/StringManager.getManager:(Ljava/lang/Class;)Lorg/apache/tomcat/util/res/StringManager;
       5: putstatic     #26                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
       8: return
}
