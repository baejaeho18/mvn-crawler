Compiled from "AccessLogValve.java"
public class org.apache.catalina.valves.AccessLogValve extends org.apache.catalina.valves.AbstractAccessLogValve {
  private static final org.apache.juli.logging.Log log;

  private volatile java.lang.String dateStamp;

  private java.lang.String directory;

  protected volatile java.lang.String prefix;

  protected boolean rotatable;

  protected boolean renameOnRotate;

  private boolean buffered;

  protected volatile java.lang.String suffix;

  protected java.io.PrintWriter writer;

  protected java.text.SimpleDateFormat fileDateFormatter;

  protected java.io.File currentLogFile;

  private volatile long rotationLastChecked;

  private boolean checkExists;

  protected java.lang.String fileDateFormat;

  protected volatile java.lang.String encoding;

  private int maxDays;

  private volatile boolean checkForOldLogs;

  public org.apache.catalina.valves.AccessLogValve();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/catalina/valves/AbstractAccessLogValve."<init>":()V
       4: aload_0
       5: ldc           #2                  // String
       7: putfield      #3                  // Field dateStamp:Ljava/lang/String;
      10: aload_0
      11: ldc           #4                  // String logs
      13: putfield      #5                  // Field directory:Ljava/lang/String;
      16: aload_0
      17: ldc           #6                  // String access_log
      19: putfield      #7                  // Field prefix:Ljava/lang/String;
      22: aload_0
      23: iconst_1
      24: putfield      #8                  // Field rotatable:Z
      27: aload_0
      28: iconst_0
      29: putfield      #9                  // Field renameOnRotate:Z
      32: aload_0
      33: iconst_1
      34: putfield      #10                 // Field buffered:Z
      37: aload_0
      38: ldc           #2                  // String
      40: putfield      #11                 // Field suffix:Ljava/lang/String;
      43: aload_0
      44: aconst_null
      45: putfield      #12                 // Field writer:Ljava/io/PrintWriter;
      48: aload_0
      49: aconst_null
      50: putfield      #13                 // Field fileDateFormatter:Ljava/text/SimpleDateFormat;
      53: aload_0
      54: aconst_null
      55: putfield      #14                 // Field currentLogFile:Ljava/io/File;
      58: aload_0
      59: lconst_0
      60: putfield      #15                 // Field rotationLastChecked:J
      63: aload_0
      64: iconst_0
      65: putfield      #16                 // Field checkExists:Z
      68: aload_0
      69: ldc           #17                 // String .yyyy-MM-dd
      71: putfield      #18                 // Field fileDateFormat:Ljava/lang/String;
      74: aload_0
      75: aconst_null
      76: putfield      #19                 // Field encoding:Ljava/lang/String;
      79: aload_0
      80: iconst_m1
      81: putfield      #20                 // Field maxDays:I
      84: aload_0
      85: iconst_0
      86: putfield      #21                 // Field checkForOldLogs:Z
      89: return

  public int getMaxDays();
    Code:
       0: aload_0
       1: getfield      #20                 // Field maxDays:I
       4: ireturn

  public void setMaxDays(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field maxDays:I
       5: return

  public java.lang.String getDirectory();
    Code:
       0: aload_0
       1: getfield      #5                  // Field directory:Ljava/lang/String;
       4: areturn

  public void setDirectory(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field directory:Ljava/lang/String;
       5: return

  public boolean isCheckExists();
    Code:
       0: aload_0
       1: getfield      #16                 // Field checkExists:Z
       4: ireturn

  public void setCheckExists(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #16                 // Field checkExists:Z
       5: return

  public java.lang.String getPrefix();
    Code:
       0: aload_0
       1: getfield      #7                  // Field prefix:Ljava/lang/String;
       4: areturn

  public void setPrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field prefix:Ljava/lang/String;
       5: return

  public boolean isRotatable();
    Code:
       0: aload_0
       1: getfield      #8                  // Field rotatable:Z
       4: ireturn

  public void setRotatable(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field rotatable:Z
       5: return

  public boolean isRenameOnRotate();
    Code:
       0: aload_0
       1: getfield      #9                  // Field renameOnRotate:Z
       4: ireturn

  public void setRenameOnRotate(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field renameOnRotate:Z
       5: return

  public boolean isBuffered();
    Code:
       0: aload_0
       1: getfield      #10                 // Field buffered:Z
       4: ireturn

  public void setBuffered(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field buffered:Z
       5: return

  public java.lang.String getSuffix();
    Code:
       0: aload_0
       1: getfield      #11                 // Field suffix:Ljava/lang/String;
       4: areturn

  public void setSuffix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field suffix:Ljava/lang/String;
       5: return

  public java.lang.String getFileDateFormat();
    Code:
       0: aload_0
       1: getfield      #18                 // Field fileDateFormat:Ljava/lang/String;
       4: areturn

  public void setFileDateFormat(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: ldc           #2                  // String
       6: astore_2
       7: goto          12
      10: aload_1
      11: astore_2
      12: aload_0
      13: aload_2
      14: putfield      #18                 // Field fileDateFormat:Ljava/lang/String;
      17: aload_0
      18: dup
      19: astore_3
      20: monitorenter
      21: aload_0
      22: new           #22                 // class java/text/SimpleDateFormat
      25: dup
      26: aload_2
      27: getstatic     #23                 // Field java/util/Locale.US:Ljava/util/Locale;
      30: invokespecial #24                 // Method java/text/SimpleDateFormat."<init>":(Ljava/lang/String;Ljava/util/Locale;)V
      33: putfield      #13                 // Field fileDateFormatter:Ljava/text/SimpleDateFormat;
      36: aload_0
      37: getfield      #13                 // Field fileDateFormatter:Ljava/text/SimpleDateFormat;
      40: invokestatic  #25                 // Method java/util/TimeZone.getDefault:()Ljava/util/TimeZone;
      43: invokevirtual #26                 // Method java/text/SimpleDateFormat.setTimeZone:(Ljava/util/TimeZone;)V
      46: aload_3
      47: monitorexit
      48: goto          58
      51: astore        4
      53: aload_3
      54: monitorexit
      55: aload         4
      57: athrow
      58: return
    Exception table:
       from    to  target type
          21    48    51   any
          51    55    51   any

  public java.lang.String getEncoding();
    Code:
       0: aload_0
       1: getfield      #19                 // Field encoding:Ljava/lang/String;
       4: areturn

  public void setEncoding(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        19
       4: aload_1
       5: invokevirtual #27                 // Method java/lang/String.length:()I
       8: ifle          19
      11: aload_0
      12: aload_1
      13: putfield      #19                 // Field encoding:Ljava/lang/String;
      16: goto          24
      19: aload_0
      20: aconst_null
      21: putfield      #19                 // Field encoding:Ljava/lang/String;
      24: return

  public synchronized void backgroundProcess();
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method getState:()Lorg/apache/catalina/LifecycleState;
       4: invokevirtual #29                 // Method org/apache/catalina/LifecycleState.isAvailable:()Z
       7: ifeq          38
      10: aload_0
      11: invokevirtual #30                 // Method getEnabled:()Z
      14: ifeq          38
      17: aload_0
      18: getfield      #12                 // Field writer:Ljava/io/PrintWriter;
      21: ifnull        38
      24: aload_0
      25: getfield      #10                 // Field buffered:Z
      28: ifeq          38
      31: aload_0
      32: getfield      #12                 // Field writer:Ljava/io/PrintWriter;
      35: invokevirtual #31                 // Method java/io/PrintWriter.flush:()V
      38: aload_0
      39: getfield      #20                 // Field maxDays:I
      42: istore_1
      43: aload_0
      44: getfield      #7                  // Field prefix:Ljava/lang/String;
      47: astore_2
      48: aload_0
      49: getfield      #11                 // Field suffix:Ljava/lang/String;
      52: astore_3
      53: aload_0
      54: getfield      #8                  // Field rotatable:Z
      57: ifeq          286
      60: aload_0
      61: getfield      #21                 // Field checkForOldLogs:Z
      64: ifeq          286
      67: iload_1
      68: ifle          286
      71: invokestatic  #32                 // Method java/lang/System.currentTimeMillis:()J
      74: iload_1
      75: i2l
      76: ldc2_w        #33                 // long 24l
      79: lmul
      80: ldc2_w        #35                 // long 60l
      83: lmul
      84: ldc2_w        #35                 // long 60l
      87: lmul
      88: ldc2_w        #37                 // long 1000l
      91: lmul
      92: lsub
      93: lstore        4
      95: aload_0
      96: invokespecial #39                 // Method getDirectoryFile:()Ljava/io/File;
      99: astore        6
     101: aload         6
     103: invokevirtual #40                 // Method java/io/File.isDirectory:()Z
     106: ifeq          281
     109: aload         6
     111: invokevirtual #41                 // Method java/io/File.list:()[Ljava/lang/String;
     114: astore        7
     116: aload         7
     118: ifnull        281
     121: aload         7
     123: astore        8
     125: aload         8
     127: arraylength
     128: istore        9
     130: iconst_0
     131: istore        10
     133: iload         10
     135: iload         9
     137: if_icmpge     281
     140: aload         8
     142: iload         10
     144: aaload
     145: astore        11
     147: iconst_0
     148: istore        12
     150: aload_2
     151: ifnull        176
     154: aload_2
     155: invokevirtual #27                 // Method java/lang/String.length:()I
     158: ifle          176
     161: aload         11
     163: aload_2
     164: invokevirtual #42                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     167: ifne          173
     170: goto          275
     173: iconst_1
     174: istore        12
     176: aload_3
     177: ifnull        202
     180: aload_3
     181: invokevirtual #27                 // Method java/lang/String.length:()I
     184: ifle          202
     187: aload         11
     189: aload_3
     190: invokevirtual #43                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
     193: ifne          199
     196: goto          275
     199: iconst_1
     200: istore        12
     202: iload         12
     204: ifeq          275
     207: new           #44                 // class java/io/File
     210: dup
     211: aload         6
     213: aload         11
     215: invokespecial #45                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
     218: astore        13
     220: aload         13
     222: invokevirtual #46                 // Method java/io/File.isFile:()Z
     225: ifeq          275
     228: aload         13
     230: invokevirtual #47                 // Method java/io/File.lastModified:()J
     233: lload         4
     235: lcmp
     236: ifge          275
     239: aload         13
     241: invokevirtual #48                 // Method java/io/File.delete:()Z
     244: ifne          275
     247: getstatic     #49                 // Field log:Lorg/apache/juli/logging/Log;
     250: getstatic     #50                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
     253: ldc           #51                 // String accessLogValve.deleteFail
     255: iconst_1
     256: anewarray     #52                 // class java/lang/Object
     259: dup
     260: iconst_0
     261: aload         13
     263: invokevirtual #53                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     266: aastore
     267: invokevirtual #54                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     270: invokeinterface #55,  2           // InterfaceMethod org/apache/juli/logging/Log.warn:(Ljava/lang/Object;)V
     275: iinc          10, 1
     278: goto          133
     281: aload_0
     282: iconst_0
     283: putfield      #21                 // Field checkForOldLogs:Z
     286: return

  public void rotate();
    Code:
       0: aload_0
       1: getfield      #8                  // Field rotatable:Z
       4: ifeq          102
       7: invokestatic  #32                 // Method java/lang/System.currentTimeMillis:()J
      10: lstore_1
      11: lload_1
      12: aload_0
      13: getfield      #15                 // Field rotationLastChecked:J
      16: lsub
      17: ldc2_w        #37                 // long 1000l
      20: lcmp
      21: ifle          102
      24: aload_0
      25: dup
      26: astore_3
      27: monitorenter
      28: lload_1
      29: aload_0
      30: getfield      #15                 // Field rotationLastChecked:J
      33: lsub
      34: ldc2_w        #37                 // long 1000l
      37: lcmp
      38: ifle          90
      41: aload_0
      42: lload_1
      43: putfield      #15                 // Field rotationLastChecked:J
      46: aload_0
      47: getfield      #13                 // Field fileDateFormatter:Ljava/text/SimpleDateFormat;
      50: new           #56                 // class java/util/Date
      53: dup
      54: lload_1
      55: invokespecial #57                 // Method java/util/Date."<init>":(J)V
      58: invokevirtual #58                 // Method java/text/SimpleDateFormat.format:(Ljava/util/Date;)Ljava/lang/String;
      61: astore        4
      63: aload_0
      64: getfield      #3                  // Field dateStamp:Ljava/lang/String;
      67: aload         4
      69: invokevirtual #59                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      72: ifne          90
      75: aload_0
      76: iconst_1
      77: invokespecial #60                 // Method close:(Z)V
      80: aload_0
      81: aload         4
      83: putfield      #3                  // Field dateStamp:Ljava/lang/String;
      86: aload_0
      87: invokevirtual #61                 // Method open:()V
      90: aload_3
      91: monitorexit
      92: goto          102
      95: astore        5
      97: aload_3
      98: monitorexit
      99: aload         5
     101: athrow
     102: return
    Exception table:
       from    to  target type
          28    92    95   any
          95    99    95   any

  public synchronized boolean rotate(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #14                 // Field currentLogFile:Ljava/io/File;
       4: ifnull        82
       7: aload_0
       8: getfield      #14                 // Field currentLogFile:Ljava/io/File;
      11: astore_2
      12: aload_0
      13: iconst_0
      14: invokespecial #60                 // Method close:(Z)V
      17: aload_2
      18: new           #44                 // class java/io/File
      21: dup
      22: aload_1
      23: invokespecial #62                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      26: invokevirtual #63                 // Method java/io/File.renameTo:(Ljava/io/File;)Z
      29: pop
      30: goto          55
      33: astore_3
      34: aload_3
      35: invokestatic  #65                 // Method org/apache/tomcat/util/ExceptionUtils.handleThrowable:(Ljava/lang/Throwable;)V
      38: getstatic     #49                 // Field log:Lorg/apache/juli/logging/Log;
      41: getstatic     #50                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
      44: ldc           #66                 // String accessLogValve.rotateFail
      46: invokevirtual #67                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;)Ljava/lang/String;
      49: aload_3
      50: invokeinterface #68,  3           // InterfaceMethod org/apache/juli/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      55: aload_0
      56: aload_0
      57: getfield      #13                 // Field fileDateFormatter:Ljava/text/SimpleDateFormat;
      60: new           #56                 // class java/util/Date
      63: dup
      64: invokestatic  #32                 // Method java/lang/System.currentTimeMillis:()J
      67: invokespecial #57                 // Method java/util/Date."<init>":(J)V
      70: invokevirtual #58                 // Method java/text/SimpleDateFormat.format:(Ljava/util/Date;)Ljava/lang/String;
      73: putfield      #3                  // Field dateStamp:Ljava/lang/String;
      76: aload_0
      77: invokevirtual #61                 // Method open:()V
      80: iconst_1
      81: ireturn
      82: iconst_0
      83: ireturn
    Exception table:
       from    to  target type
          17    30    33   Class java/lang/Throwable

  private java.io.File getDirectoryFile();
    Code:
       0: new           #44                 // class java/io/File
       3: dup
       4: aload_0
       5: getfield      #5                  // Field directory:Ljava/lang/String;
       8: invokespecial #62                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      11: astore_1
      12: aload_1
      13: invokevirtual #69                 // Method java/io/File.isAbsolute:()Z
      16: ifne          40
      19: new           #44                 // class java/io/File
      22: dup
      23: aload_0
      24: invokevirtual #70                 // Method getContainer:()Lorg/apache/catalina/Container;
      27: invokeinterface #71,  1           // InterfaceMethod org/apache/catalina/Container.getCatalinaBase:()Ljava/io/File;
      32: aload_0
      33: getfield      #5                  // Field directory:Ljava/lang/String;
      36: invokespecial #45                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      39: astore_1
      40: aload_1
      41: areturn

  private java.io.File getLogFile(boolean);
    Code:
       0: aload_0
       1: invokespecial #39                 // Method getDirectoryFile:()Ljava/io/File;
       4: astore_2
       5: aload_2
       6: invokevirtual #72                 // Method java/io/File.mkdirs:()Z
       9: ifne          43
      12: aload_2
      13: invokevirtual #40                 // Method java/io/File.isDirectory:()Z
      16: ifne          43
      19: getstatic     #49                 // Field log:Lorg/apache/juli/logging/Log;
      22: getstatic     #50                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
      25: ldc           #73                 // String accessLogValve.openDirFail
      27: iconst_1
      28: anewarray     #52                 // class java/lang/Object
      31: dup
      32: iconst_0
      33: aload_2
      34: aastore
      35: invokevirtual #54                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      38: invokeinterface #74,  2           // InterfaceMethod org/apache/juli/logging/Log.error:(Ljava/lang/Object;)V
      43: iload_1
      44: ifeq          93
      47: new           #44                 // class java/io/File
      50: dup
      51: aload_2
      52: invokevirtual #75                 // Method java/io/File.getAbsoluteFile:()Ljava/io/File;
      55: new           #76                 // class java/lang/StringBuilder
      58: dup
      59: invokespecial #77                 // Method java/lang/StringBuilder."<init>":()V
      62: aload_0
      63: getfield      #7                  // Field prefix:Ljava/lang/String;
      66: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_0
      70: getfield      #3                  // Field dateStamp:Ljava/lang/String;
      73: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload_0
      77: getfield      #11                 // Field suffix:Ljava/lang/String;
      80: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: invokevirtual #79                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: invokespecial #45                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      89: astore_3
      90: goto          129
      93: new           #44                 // class java/io/File
      96: dup
      97: aload_2
      98: invokevirtual #75                 // Method java/io/File.getAbsoluteFile:()Ljava/io/File;
     101: new           #76                 // class java/lang/StringBuilder
     104: dup
     105: invokespecial #77                 // Method java/lang/StringBuilder."<init>":()V
     108: aload_0
     109: getfield      #7                  // Field prefix:Ljava/lang/String;
     112: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: aload_0
     116: getfield      #11                 // Field suffix:Ljava/lang/String;
     119: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: invokevirtual #79                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     125: invokespecial #45                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
     128: astore_3
     129: aload_3
     130: invokevirtual #80                 // Method java/io/File.getParentFile:()Ljava/io/File;
     133: astore        4
     135: aload         4
     137: invokevirtual #72                 // Method java/io/File.mkdirs:()Z
     140: ifne          176
     143: aload         4
     145: invokevirtual #40                 // Method java/io/File.isDirectory:()Z
     148: ifne          176
     151: getstatic     #49                 // Field log:Lorg/apache/juli/logging/Log;
     154: getstatic     #50                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
     157: ldc           #73                 // String accessLogValve.openDirFail
     159: iconst_1
     160: anewarray     #52                 // class java/lang/Object
     163: dup
     164: iconst_0
     165: aload         4
     167: aastore
     168: invokevirtual #54                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     171: invokeinterface #74,  2           // InterfaceMethod org/apache/juli/logging/Log.error:(Ljava/lang/Object;)V
     176: aload_3
     177: areturn

  private void restore();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #81                 // Method getLogFile:(Z)Ljava/io/File;
       5: astore_1
       6: aload_0
       7: iconst_1
       8: invokespecial #81                 // Method getLogFile:(Z)Ljava/io/File;
      11: astore_2
      12: aload_2
      13: invokevirtual #82                 // Method java/io/File.exists:()Z
      16: ifeq          107
      19: aload_1
      20: invokevirtual #82                 // Method java/io/File.exists:()Z
      23: ifne          107
      26: aload_2
      27: aload_1
      28: invokevirtual #83                 // Method java/io/File.equals:(Ljava/lang/Object;)Z
      31: ifne          107
      34: aload_2
      35: aload_1
      36: invokevirtual #63                 // Method java/io/File.renameTo:(Ljava/io/File;)Z
      39: ifne          70
      42: getstatic     #49                 // Field log:Lorg/apache/juli/logging/Log;
      45: getstatic     #50                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
      48: ldc           #84                 // String accessLogValve.renameFail
      50: iconst_2
      51: anewarray     #52                 // class java/lang/Object
      54: dup
      55: iconst_0
      56: aload_2
      57: aastore
      58: dup
      59: iconst_1
      60: aload_1
      61: aastore
      62: invokevirtual #54                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      65: invokeinterface #74,  2           // InterfaceMethod org/apache/juli/logging/Log.error:(Ljava/lang/Object;)V
      70: goto          107
      73: astore_3
      74: aload_3
      75: invokestatic  #65                 // Method org/apache/tomcat/util/ExceptionUtils.handleThrowable:(Ljava/lang/Throwable;)V
      78: getstatic     #49                 // Field log:Lorg/apache/juli/logging/Log;
      81: getstatic     #50                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
      84: ldc           #84                 // String accessLogValve.renameFail
      86: iconst_2
      87: anewarray     #52                 // class java/lang/Object
      90: dup
      91: iconst_0
      92: aload_2
      93: aastore
      94: dup
      95: iconst_1
      96: aload_1
      97: aastore
      98: invokevirtual #54                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     101: aload_3
     102: invokeinterface #68,  3           // InterfaceMethod org/apache/juli/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     107: return
    Exception table:
       from    to  target type
          34    70    73   Class java/lang/Throwable

  private synchronized void close(boolean);
    Code:
       0: aload_0
       1: getfield      #12                 // Field writer:Ljava/io/PrintWriter;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: getfield      #12                 // Field writer:Ljava/io/PrintWriter;
      12: invokevirtual #31                 // Method java/io/PrintWriter.flush:()V
      15: aload_0
      16: getfield      #12                 // Field writer:Ljava/io/PrintWriter;
      19: invokevirtual #85                 // Method java/io/PrintWriter.close:()V
      22: iload_1
      23: ifeq          162
      26: aload_0
      27: getfield      #9                  // Field renameOnRotate:Z
      30: ifeq          162
      33: aload_0
      34: iconst_1
      35: invokespecial #81                 // Method getLogFile:(Z)Ljava/io/File;
      38: astore_2
      39: aload_2
      40: invokevirtual #82                 // Method java/io/File.exists:()Z
      43: ifne          131
      46: aload_0
      47: getfield      #14                 // Field currentLogFile:Ljava/io/File;
      50: aload_2
      51: invokevirtual #63                 // Method java/io/File.renameTo:(Ljava/io/File;)Z
      54: ifne          88
      57: getstatic     #49                 // Field log:Lorg/apache/juli/logging/Log;
      60: getstatic     #50                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
      63: ldc           #84                 // String accessLogValve.renameFail
      65: iconst_2
      66: anewarray     #52                 // class java/lang/Object
      69: dup
      70: iconst_0
      71: aload_0
      72: getfield      #14                 // Field currentLogFile:Ljava/io/File;
      75: aastore
      76: dup
      77: iconst_1
      78: aload_2
      79: aastore
      80: invokevirtual #54                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      83: invokeinterface #74,  2           // InterfaceMethod org/apache/juli/logging/Log.error:(Ljava/lang/Object;)V
      88: goto          162
      91: astore_3
      92: aload_3
      93: invokestatic  #65                 // Method org/apache/tomcat/util/ExceptionUtils.handleThrowable:(Ljava/lang/Throwable;)V
      96: getstatic     #49                 // Field log:Lorg/apache/juli/logging/Log;
      99: getstatic     #50                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
     102: ldc           #84                 // String accessLogValve.renameFail
     104: iconst_2
     105: anewarray     #52                 // class java/lang/Object
     108: dup
     109: iconst_0
     110: aload_0
     111: getfield      #14                 // Field currentLogFile:Ljava/io/File;
     114: aastore
     115: dup
     116: iconst_1
     117: aload_2
     118: aastore
     119: invokevirtual #54                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     122: aload_3
     123: invokeinterface #68,  3           // InterfaceMethod org/apache/juli/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     128: goto          162
     131: getstatic     #49                 // Field log:Lorg/apache/juli/logging/Log;
     134: getstatic     #50                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
     137: ldc           #86                 // String accessLogValve.alreadyExists
     139: iconst_2
     140: anewarray     #52                 // class java/lang/Object
     143: dup
     144: iconst_0
     145: aload_0
     146: getfield      #14                 // Field currentLogFile:Ljava/io/File;
     149: aastore
     150: dup
     151: iconst_1
     152: aload_2
     153: aastore
     154: invokevirtual #54                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     157: invokeinterface #74,  2           // InterfaceMethod org/apache/juli/logging/Log.error:(Ljava/lang/Object;)V
     162: aload_0
     163: aconst_null
     164: putfield      #12                 // Field writer:Ljava/io/PrintWriter;
     167: aload_0
     168: ldc           #2                  // String
     170: putfield      #3                  // Field dateStamp:Ljava/lang/String;
     173: aload_0
     174: aconst_null
     175: putfield      #14                 // Field currentLogFile:Ljava/io/File;
     178: return
    Exception table:
       from    to  target type
          46    88    91   Class java/lang/Throwable

  public void log(java.io.CharArrayWriter);
    Code:
       0: aload_0
       1: invokevirtual #87                 // Method rotate:()V
       4: aload_0
       5: getfield      #16                 // Field checkExists:Z
       8: ifeq          99
      11: aload_0
      12: dup
      13: astore_2
      14: monitorenter
      15: aload_0
      16: getfield      #14                 // Field currentLogFile:Ljava/io/File;
      19: ifnull        87
      22: aload_0
      23: getfield      #14                 // Field currentLogFile:Ljava/io/File;
      26: invokevirtual #82                 // Method java/io/File.exists:()Z
      29: ifne          87
      32: aload_0
      33: iconst_0
      34: invokespecial #60                 // Method close:(Z)V
      37: goto          62
      40: astore_3
      41: aload_3
      42: invokestatic  #65                 // Method org/apache/tomcat/util/ExceptionUtils.handleThrowable:(Ljava/lang/Throwable;)V
      45: getstatic     #49                 // Field log:Lorg/apache/juli/logging/Log;
      48: getstatic     #50                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
      51: ldc           #88                 // String accessLogValve.closeFail
      53: invokevirtual #67                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;)Ljava/lang/String;
      56: aload_3
      57: invokeinterface #89,  3           // InterfaceMethod org/apache/juli/logging/Log.info:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      62: aload_0
      63: aload_0
      64: getfield      #13                 // Field fileDateFormatter:Ljava/text/SimpleDateFormat;
      67: new           #56                 // class java/util/Date
      70: dup
      71: invokestatic  #32                 // Method java/lang/System.currentTimeMillis:()J
      74: invokespecial #57                 // Method java/util/Date."<init>":(J)V
      77: invokevirtual #58                 // Method java/text/SimpleDateFormat.format:(Ljava/util/Date;)Ljava/lang/String;
      80: putfield      #3                  // Field dateStamp:Ljava/lang/String;
      83: aload_0
      84: invokevirtual #61                 // Method open:()V
      87: aload_2
      88: monitorexit
      89: goto          99
      92: astore        4
      94: aload_2
      95: monitorexit
      96: aload         4
      98: athrow
      99: aload_1
     100: invokestatic  #90                 // Method java/lang/System.lineSeparator:()Ljava/lang/String;
     103: invokevirtual #91                 // Method java/io/CharArrayWriter.write:(Ljava/lang/String;)V
     106: aload_0
     107: dup
     108: astore_2
     109: monitorenter
     110: aload_0
     111: getfield      #12                 // Field writer:Ljava/io/PrintWriter;
     114: ifnull        139
     117: aload_1
     118: aload_0
     119: getfield      #12                 // Field writer:Ljava/io/PrintWriter;
     122: invokevirtual #92                 // Method java/io/CharArrayWriter.writeTo:(Ljava/io/Writer;)V
     125: aload_0
     126: getfield      #10                 // Field buffered:Z
     129: ifne          139
     132: aload_0
     133: getfield      #12                 // Field writer:Ljava/io/PrintWriter;
     136: invokevirtual #31                 // Method java/io/PrintWriter.flush:()V
     139: aload_2
     140: monitorexit
     141: goto          151
     144: astore        5
     146: aload_2
     147: monitorexit
     148: aload         5
     150: athrow
     151: goto          183
     154: astore_2
     155: getstatic     #49                 // Field log:Lorg/apache/juli/logging/Log;
     158: getstatic     #50                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
     161: ldc           #94                 // String accessLogValve.writeFail
     163: iconst_1
     164: anewarray     #52                 // class java/lang/Object
     167: dup
     168: iconst_0
     169: aload_1
     170: invokevirtual #95                 // Method java/io/CharArrayWriter.toString:()Ljava/lang/String;
     173: aastore
     174: invokevirtual #54                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     177: aload_2
     178: invokeinterface #96,  3           // InterfaceMethod org/apache/juli/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     183: return
    Exception table:
       from    to  target type
          32    37    40   Class java/lang/Throwable
          15    89    92   any
          92    96    92   any
         110   141   144   any
         144   148   144   any
          99   151   154   Class java/io/IOException

  protected synchronized void open();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #8                  // Field rotatable:Z
       5: ifeq          19
       8: aload_0
       9: getfield      #9                  // Field renameOnRotate:Z
      12: ifne          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: invokespecial #81                 // Method getLogFile:(Z)Ljava/io/File;
      23: astore_1
      24: aconst_null
      25: astore_2
      26: aload_0
      27: getfield      #19                 // Field encoding:Ljava/lang/String;
      30: ifnull        73
      33: aload_0
      34: getfield      #19                 // Field encoding:Ljava/lang/String;
      37: invokestatic  #97                 // Method org/apache/tomcat/util/buf/B2CConverter.getCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      40: astore_2
      41: goto          73
      44: astore_3
      45: getstatic     #49                 // Field log:Lorg/apache/juli/logging/Log;
      48: getstatic     #50                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
      51: ldc           #99                 // String accessLogValve.unsupportedEncoding
      53: iconst_1
      54: anewarray     #52                 // class java/lang/Object
      57: dup
      58: iconst_0
      59: aload_0
      60: getfield      #19                 // Field encoding:Ljava/lang/String;
      63: aastore
      64: invokevirtual #54                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      67: aload_3
      68: invokeinterface #68,  3           // InterfaceMethod org/apache/juli/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      73: aload_2
      74: ifnonnull     81
      77: getstatic     #100                // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
      80: astore_2
      81: aload_0
      82: new           #101                // class java/io/PrintWriter
      85: dup
      86: new           #102                // class java/io/BufferedWriter
      89: dup
      90: new           #103                // class java/io/OutputStreamWriter
      93: dup
      94: new           #104                // class java/io/FileOutputStream
      97: dup
      98: aload_1
      99: iconst_1
     100: invokespecial #105                // Method java/io/FileOutputStream."<init>":(Ljava/io/File;Z)V
     103: aload_2
     104: invokespecial #106                // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V
     107: ldc           #107                // int 128000
     109: invokespecial #108                // Method java/io/BufferedWriter."<init>":(Ljava/io/Writer;I)V
     112: iconst_0
     113: invokespecial #109                // Method java/io/PrintWriter."<init>":(Ljava/io/Writer;Z)V
     116: putfield      #12                 // Field writer:Ljava/io/PrintWriter;
     119: aload_0
     120: aload_1
     121: putfield      #14                 // Field currentLogFile:Ljava/io/File;
     124: goto          163
     127: astore_3
     128: aload_0
     129: aconst_null
     130: putfield      #12                 // Field writer:Ljava/io/PrintWriter;
     133: aload_0
     134: aconst_null
     135: putfield      #14                 // Field currentLogFile:Ljava/io/File;
     138: getstatic     #49                 // Field log:Lorg/apache/juli/logging/Log;
     141: getstatic     #50                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
     144: ldc           #110                // String accessLogValve.openFail
     146: iconst_1
     147: anewarray     #52                 // class java/lang/Object
     150: dup
     151: iconst_0
     152: aload_1
     153: aastore
     154: invokevirtual #54                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     157: aload_3
     158: invokeinterface #68,  3           // InterfaceMethod org/apache/juli/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     163: aload_0
     164: iconst_1
     165: putfield      #21                 // Field checkForOldLogs:Z
     168: return
    Exception table:
       from    to  target type
          33    41    44   Class java/io/UnsupportedEncodingException
          81   124   127   Class java/io/IOException

  protected synchronized void startInternal() throws org.apache.catalina.LifecycleException;
    Code:
       0: aload_0
       1: invokevirtual #111                // Method getFileDateFormat:()Ljava/lang/String;
       4: astore_1
       5: aload_0
       6: new           #22                 // class java/text/SimpleDateFormat
       9: dup
      10: aload_1
      11: getstatic     #23                 // Field java/util/Locale.US:Ljava/util/Locale;
      14: invokespecial #24                 // Method java/text/SimpleDateFormat."<init>":(Ljava/lang/String;Ljava/util/Locale;)V
      17: putfield      #13                 // Field fileDateFormatter:Ljava/text/SimpleDateFormat;
      20: aload_0
      21: getfield      #13                 // Field fileDateFormatter:Ljava/text/SimpleDateFormat;
      24: invokestatic  #25                 // Method java/util/TimeZone.getDefault:()Ljava/util/TimeZone;
      27: invokevirtual #26                 // Method java/text/SimpleDateFormat.setTimeZone:(Ljava/util/TimeZone;)V
      30: aload_0
      31: aload_0
      32: getfield      #13                 // Field fileDateFormatter:Ljava/text/SimpleDateFormat;
      35: new           #56                 // class java/util/Date
      38: dup
      39: invokestatic  #32                 // Method java/lang/System.currentTimeMillis:()J
      42: invokespecial #57                 // Method java/util/Date."<init>":(J)V
      45: invokevirtual #58                 // Method java/text/SimpleDateFormat.format:(Ljava/util/Date;)Ljava/lang/String;
      48: putfield      #3                  // Field dateStamp:Ljava/lang/String;
      51: aload_0
      52: getfield      #8                  // Field rotatable:Z
      55: ifeq          69
      58: aload_0
      59: getfield      #9                  // Field renameOnRotate:Z
      62: ifeq          69
      65: aload_0
      66: invokespecial #112                // Method restore:()V
      69: aload_0
      70: invokevirtual #61                 // Method open:()V
      73: aload_0
      74: invokespecial #113                // Method org/apache/catalina/valves/AbstractAccessLogValve.startInternal:()V
      77: return

  protected synchronized void stopInternal() throws org.apache.catalina.LifecycleException;
    Code:
       0: aload_0
       1: invokespecial #114                // Method org/apache/catalina/valves/AbstractAccessLogValve.stopInternal:()V
       4: aload_0
       5: iconst_0
       6: invokespecial #60                 // Method close:(Z)V
       9: return

  static {};
    Code:
       0: ldc           #115                // class org/apache/catalina/valves/AccessLogValve
       2: invokestatic  #116                // Method org/apache/juli/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/juli/logging/Log;
       5: putstatic     #49                 // Field log:Lorg/apache/juli/logging/Log;
       8: return
}
