Compiled from "Context.java"
public interface org.apache.catalina.Context extends org.apache.catalina.Container,org.apache.tomcat.ContextBind {
  public static final java.lang.String ADD_WELCOME_FILE_EVENT;

  public static final java.lang.String REMOVE_WELCOME_FILE_EVENT;

  public static final java.lang.String CLEAR_WELCOME_FILES_EVENT;

  public static final java.lang.String CHANGE_SESSION_ID_EVENT;

  public abstract boolean getAllowCasualMultipartParsing();

  public abstract void setAllowCasualMultipartParsing(boolean);

  public abstract java.lang.Object[] getApplicationEventListeners();

  public abstract void setApplicationEventListeners(java.lang.Object[]);

  public abstract java.lang.Object[] getApplicationLifecycleListeners();

  public abstract void setApplicationLifecycleListeners(java.lang.Object[]);

  public abstract java.lang.String getCharset(java.util.Locale);

  public abstract java.net.URL getConfigFile();

  public abstract void setConfigFile(java.net.URL);

  public abstract boolean getConfigured();

  public abstract void setConfigured(boolean);

  public abstract boolean getCookies();

  public abstract void setCookies(boolean);

  public abstract java.lang.String getSessionCookieName();

  public abstract void setSessionCookieName(java.lang.String);

  public abstract boolean getUseHttpOnly();

  public abstract void setUseHttpOnly(boolean);

  public abstract java.lang.String getSessionCookieDomain();

  public abstract void setSessionCookieDomain(java.lang.String);

  public abstract java.lang.String getSessionCookiePath();

  public abstract void setSessionCookiePath(java.lang.String);

  public abstract boolean getSessionCookiePathUsesTrailingSlash();

  public abstract void setSessionCookiePathUsesTrailingSlash(boolean);

  public abstract boolean getCrossContext();

  public abstract java.lang.String getAltDDName();

  public abstract void setAltDDName(java.lang.String);

  public abstract void setCrossContext(boolean);

  public abstract boolean getDenyUncoveredHttpMethods();

  public abstract void setDenyUncoveredHttpMethods(boolean);

  public abstract java.lang.String getDisplayName();

  public abstract void setDisplayName(java.lang.String);

  public abstract boolean getDistributable();

  public abstract void setDistributable(boolean);

  public abstract java.lang.String getDocBase();

  public abstract void setDocBase(java.lang.String);

  public abstract java.lang.String getEncodedPath();

  public abstract boolean getIgnoreAnnotations();

  public abstract void setIgnoreAnnotations(boolean);

  public abstract org.apache.tomcat.util.descriptor.web.LoginConfig getLoginConfig();

  public abstract void setLoginConfig(org.apache.tomcat.util.descriptor.web.LoginConfig);

  public abstract org.apache.catalina.deploy.NamingResourcesImpl getNamingResources();

  public abstract void setNamingResources(org.apache.catalina.deploy.NamingResourcesImpl);

  public abstract java.lang.String getPath();

  public abstract void setPath(java.lang.String);

  public abstract java.lang.String getPublicId();

  public abstract void setPublicId(java.lang.String);

  public abstract boolean getReloadable();

  public abstract void setReloadable(boolean);

  public abstract boolean getOverride();

  public abstract void setOverride(boolean);

  public abstract boolean getPrivileged();

  public abstract void setPrivileged(boolean);

  public abstract javax.servlet.ServletContext getServletContext();

  public abstract int getSessionTimeout();

  public abstract void setSessionTimeout(int);

  public abstract boolean getSwallowAbortedUploads();

  public abstract void setSwallowAbortedUploads(boolean);

  public abstract boolean getSwallowOutput();

  public abstract void setSwallowOutput(boolean);

  public abstract java.lang.String getWrapperClass();

  public abstract void setWrapperClass(java.lang.String);

  public abstract boolean getXmlNamespaceAware();

  public abstract void setXmlNamespaceAware(boolean);

  public abstract boolean getXmlValidation();

  public abstract void setXmlValidation(boolean);

  public abstract boolean getXmlBlockExternal();

  public abstract void setXmlBlockExternal(boolean);

  public abstract boolean getTldValidation();

  public abstract void setTldValidation(boolean);

  public abstract org.apache.tomcat.JarScanner getJarScanner();

  public abstract void setJarScanner(org.apache.tomcat.JarScanner);

  public abstract org.apache.catalina.Authenticator getAuthenticator();

  public abstract void setLogEffectiveWebXml(boolean);

  public abstract boolean getLogEffectiveWebXml();

  public abstract org.apache.tomcat.InstanceManager getInstanceManager();

  public abstract void setInstanceManager(org.apache.tomcat.InstanceManager);

  public abstract void setContainerSciFilter(java.lang.String);

  public abstract java.lang.String getContainerSciFilter();

  public abstract void addApplicationListener(java.lang.String);

  public abstract void addApplicationParameter(org.apache.tomcat.util.descriptor.web.ApplicationParameter);

  public abstract void addConstraint(org.apache.tomcat.util.descriptor.web.SecurityConstraint);

  public abstract void addErrorPage(org.apache.tomcat.util.descriptor.web.ErrorPage);

  public abstract void addFilterDef(org.apache.tomcat.util.descriptor.web.FilterDef);

  public abstract void addFilterMap(org.apache.tomcat.util.descriptor.web.FilterMap);

  public abstract void addFilterMapBefore(org.apache.tomcat.util.descriptor.web.FilterMap);

  public abstract void addLocaleEncodingMappingParameter(java.lang.String, java.lang.String);

  public abstract void addMimeMapping(java.lang.String, java.lang.String);

  public abstract void addParameter(java.lang.String, java.lang.String);

  public abstract void addRoleMapping(java.lang.String, java.lang.String);

  public abstract void addSecurityRole(java.lang.String);

  public default void addServletMappingDecoded(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokeinterface #1,  4            // InterfaceMethod addServletMappingDecoded:(Ljava/lang/String;Ljava/lang/String;Z)V
       9: return

  public abstract void addServletMappingDecoded(java.lang.String, java.lang.String, boolean);

  public abstract void addWatchedResource(java.lang.String);

  public abstract void addWelcomeFile(java.lang.String);

  public abstract void addWrapperLifecycle(java.lang.String);

  public abstract void addWrapperListener(java.lang.String);

  public abstract org.apache.tomcat.InstanceManager createInstanceManager();

  public abstract org.apache.catalina.Wrapper createWrapper();

  public abstract java.lang.String[] findApplicationListeners();

  public abstract org.apache.tomcat.util.descriptor.web.ApplicationParameter[] findApplicationParameters();

  public abstract org.apache.tomcat.util.descriptor.web.SecurityConstraint[] findConstraints();

  public abstract org.apache.tomcat.util.descriptor.web.ErrorPage findErrorPage(int);

  public abstract org.apache.tomcat.util.descriptor.web.ErrorPage findErrorPage(java.lang.String);

  public abstract org.apache.tomcat.util.descriptor.web.ErrorPage findErrorPage(java.lang.Throwable);

  public abstract org.apache.tomcat.util.descriptor.web.ErrorPage[] findErrorPages();

  public abstract org.apache.tomcat.util.descriptor.web.FilterDef findFilterDef(java.lang.String);

  public abstract org.apache.tomcat.util.descriptor.web.FilterDef[] findFilterDefs();

  public abstract org.apache.tomcat.util.descriptor.web.FilterMap[] findFilterMaps();

  public abstract java.lang.String findMimeMapping(java.lang.String);

  public abstract java.lang.String[] findMimeMappings();

  public abstract java.lang.String findParameter(java.lang.String);

  public abstract java.lang.String[] findParameters();

  public abstract java.lang.String findRoleMapping(java.lang.String);

  public abstract boolean findSecurityRole(java.lang.String);

  public abstract java.lang.String[] findSecurityRoles();

  public abstract java.lang.String findServletMapping(java.lang.String);

  public abstract java.lang.String[] findServletMappings();

  public abstract java.lang.String findStatusPage(int);

  public abstract int[] findStatusPages();

  public abstract org.apache.catalina.ThreadBindingListener getThreadBindingListener();

  public abstract void setThreadBindingListener(org.apache.catalina.ThreadBindingListener);

  public abstract java.lang.String[] findWatchedResources();

  public abstract boolean findWelcomeFile(java.lang.String);

  public abstract java.lang.String[] findWelcomeFiles();

  public abstract java.lang.String[] findWrapperLifecycles();

  public abstract java.lang.String[] findWrapperListeners();

  public abstract boolean fireRequestInitEvent(javax.servlet.ServletRequest);

  public abstract boolean fireRequestDestroyEvent(javax.servlet.ServletRequest);

  public abstract void reload();

  public abstract void removeApplicationListener(java.lang.String);

  public abstract void removeApplicationParameter(java.lang.String);

  public abstract void removeConstraint(org.apache.tomcat.util.descriptor.web.SecurityConstraint);

  public abstract void removeErrorPage(org.apache.tomcat.util.descriptor.web.ErrorPage);

  public abstract void removeFilterDef(org.apache.tomcat.util.descriptor.web.FilterDef);

  public abstract void removeFilterMap(org.apache.tomcat.util.descriptor.web.FilterMap);

  public abstract void removeMimeMapping(java.lang.String);

  public abstract void removeParameter(java.lang.String);

  public abstract void removeRoleMapping(java.lang.String);

  public abstract void removeSecurityRole(java.lang.String);

  public abstract void removeServletMapping(java.lang.String);

  public abstract void removeWatchedResource(java.lang.String);

  public abstract void removeWelcomeFile(java.lang.String);

  public abstract void removeWrapperLifecycle(java.lang.String);

  public abstract void removeWrapperListener(java.lang.String);

  public abstract java.lang.String getRealPath(java.lang.String);

  public abstract int getEffectiveMajorVersion();

  public abstract void setEffectiveMajorVersion(int);

  public abstract int getEffectiveMinorVersion();

  public abstract void setEffectiveMinorVersion(int);

  public abstract javax.servlet.descriptor.JspConfigDescriptor getJspConfigDescriptor();

  public abstract void setJspConfigDescriptor(javax.servlet.descriptor.JspConfigDescriptor);

  public abstract void addServletContainerInitializer(javax.servlet.ServletContainerInitializer, java.util.Set<java.lang.Class<?>>);

  public abstract boolean getPaused();

  public abstract boolean isServlet22();

  public abstract java.util.Set<java.lang.String> addServletSecurity(javax.servlet.ServletRegistration$Dynamic, javax.servlet.ServletSecurityElement);

  public abstract void setResourceOnlyServlets(java.lang.String);

  public abstract java.lang.String getResourceOnlyServlets();

  public abstract boolean isResourceOnlyServlet(java.lang.String);

  public abstract java.lang.String getBaseName();

  public abstract void setWebappVersion(java.lang.String);

  public abstract java.lang.String getWebappVersion();

  public abstract void setFireRequestListenersOnForwards(boolean);

  public abstract boolean getFireRequestListenersOnForwards();

  public abstract void setPreemptiveAuthentication(boolean);

  public abstract boolean getPreemptiveAuthentication();

  public abstract void setSendRedirectBody(boolean);

  public abstract boolean getSendRedirectBody();

  public abstract org.apache.catalina.Loader getLoader();

  public abstract void setLoader(org.apache.catalina.Loader);

  public abstract org.apache.catalina.WebResourceRoot getResources();

  public abstract void setResources(org.apache.catalina.WebResourceRoot);

  public abstract org.apache.catalina.Manager getManager();

  public abstract void setManager(org.apache.catalina.Manager);

  public abstract void setAddWebinfClassesResources(boolean);

  public abstract boolean getAddWebinfClassesResources();

  public abstract void addPostConstructMethod(java.lang.String, java.lang.String);

  public abstract void addPreDestroyMethod(java.lang.String, java.lang.String);

  public abstract void removePostConstructMethod(java.lang.String);

  public abstract void removePreDestroyMethod(java.lang.String);

  public abstract java.lang.String findPostConstructMethod(java.lang.String);

  public abstract java.lang.String findPreDestroyMethod(java.lang.String);

  public abstract java.util.Map<java.lang.String, java.lang.String> findPostConstructMethods();

  public abstract java.util.Map<java.lang.String, java.lang.String> findPreDestroyMethods();

  public abstract java.lang.Object getNamingToken();

  public abstract void setCookieProcessor(org.apache.tomcat.util.http.CookieProcessor);

  public abstract org.apache.tomcat.util.http.CookieProcessor getCookieProcessor();

  public abstract void setValidateClientProvidedNewSessionId(boolean);

  public abstract boolean getValidateClientProvidedNewSessionId();

  public abstract void setMapperContextRootRedirectEnabled(boolean);

  public abstract boolean getMapperContextRootRedirectEnabled();

  public abstract void setMapperDirectoryRedirectEnabled(boolean);

  public abstract boolean getMapperDirectoryRedirectEnabled();

  public abstract void setUseRelativeRedirects(boolean);

  public abstract boolean getUseRelativeRedirects();

  public abstract void setDispatchersUseEncodedPaths(boolean);

  public abstract boolean getDispatchersUseEncodedPaths();

  public abstract void setRequestCharacterEncoding(java.lang.String);

  public abstract java.lang.String getRequestCharacterEncoding();

  public abstract void setResponseCharacterEncoding(java.lang.String);

  public abstract java.lang.String getResponseCharacterEncoding();

  public abstract void setAllowMultipleLeadingForwardSlashInPath(boolean);

  public abstract boolean getAllowMultipleLeadingForwardSlashInPath();

  public abstract void incrementInProgressAsyncCount();

  public abstract void decrementInProgressAsyncCount();

  public abstract void setCreateUploadTargets(boolean);

  public abstract boolean getCreateUploadTargets();
}
