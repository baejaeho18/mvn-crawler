Compiled from "GzipOutputFilter.java"
public class org.apache.coyote.http11.filters.GzipOutputFilter implements org.apache.coyote.http11.OutputFilter {
  protected static final org.apache.juli.logging.Log log;

  protected org.apache.coyote.http11.HttpOutputBuffer buffer;

  protected java.util.zip.GZIPOutputStream compressionStream;

  protected final java.io.OutputStream fakeOutputStream;

  public org.apache.coyote.http11.filters.GzipOutputFilter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field compressionStream:Ljava/util/zip/GZIPOutputStream;
       9: aload_0
      10: new           #3                  // class org/apache/coyote/http11/filters/GzipOutputFilter$FakeOutputStream
      13: dup
      14: aload_0
      15: invokespecial #4                  // Method org/apache/coyote/http11/filters/GzipOutputFilter$FakeOutputStream."<init>":(Lorg/apache/coyote/http11/filters/GzipOutputFilter;)V
      18: putfield      #5                  // Field fakeOutputStream:Ljava/io/OutputStream;
      21: return

  public int doWrite(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field compressionStream:Ljava/util/zip/GZIPOutputStream;
       4: ifnonnull     23
       7: aload_0
       8: new           #6                  // class java/util/zip/GZIPOutputStream
      11: dup
      12: aload_0
      13: getfield      #5                  // Field fakeOutputStream:Ljava/io/OutputStream;
      16: iconst_1
      17: invokespecial #7                  // Method java/util/zip/GZIPOutputStream."<init>":(Ljava/io/OutputStream;Z)V
      20: putfield      #2                  // Field compressionStream:Ljava/util/zip/GZIPOutputStream;
      23: aload_1
      24: invokevirtual #8                  // Method java/nio/ByteBuffer.remaining:()I
      27: istore_2
      28: aload_1
      29: invokevirtual #9                  // Method java/nio/ByteBuffer.hasArray:()Z
      32: ifeq          59
      35: aload_0
      36: getfield      #2                  // Field compressionStream:Ljava/util/zip/GZIPOutputStream;
      39: aload_1
      40: invokevirtual #10                 // Method java/nio/ByteBuffer.array:()[B
      43: aload_1
      44: invokevirtual #11                 // Method java/nio/ByteBuffer.arrayOffset:()I
      47: aload_1
      48: invokevirtual #12                 // Method java/nio/ByteBuffer.position:()I
      51: iadd
      52: iload_2
      53: invokevirtual #13                 // Method java/util/zip/GZIPOutputStream.write:([BII)V
      56: goto          79
      59: iload_2
      60: newarray       byte
      62: astore_3
      63: aload_1
      64: aload_3
      65: invokevirtual #14                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
      68: pop
      69: aload_0
      70: getfield      #2                  // Field compressionStream:Ljava/util/zip/GZIPOutputStream;
      73: aload_3
      74: iconst_0
      75: iload_2
      76: invokevirtual #13                 // Method java/util/zip/GZIPOutputStream.write:([BII)V
      79: iload_2
      80: ireturn

  public long getBytesWritten();
    Code:
       0: aload_0
       1: getfield      #15                 // Field buffer:Lorg/apache/coyote/http11/HttpOutputBuffer;
       4: invokeinterface #16,  1           // InterfaceMethod org/apache/coyote/http11/HttpOutputBuffer.getBytesWritten:()J
       9: lreturn

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field compressionStream:Ljava/util/zip/GZIPOutputStream;
       4: ifnull        61
       7: getstatic     #17                 // Field log:Lorg/apache/juli/logging/Log;
      10: invokeinterface #18,  1           // InterfaceMethod org/apache/juli/logging/Log.isDebugEnabled:()Z
      15: ifeq          28
      18: getstatic     #17                 // Field log:Lorg/apache/juli/logging/Log;
      21: ldc           #19                 // String Flushing the compression stream!
      23: invokeinterface #20,  2           // InterfaceMethod org/apache/juli/logging/Log.debug:(Ljava/lang/Object;)V
      28: aload_0
      29: getfield      #2                  // Field compressionStream:Ljava/util/zip/GZIPOutputStream;
      32: invokevirtual #21                 // Method java/util/zip/GZIPOutputStream.flush:()V
      35: goto          61
      38: astore_1
      39: getstatic     #17                 // Field log:Lorg/apache/juli/logging/Log;
      42: invokeinterface #18,  1           // InterfaceMethod org/apache/juli/logging/Log.isDebugEnabled:()Z
      47: ifeq          61
      50: getstatic     #17                 // Field log:Lorg/apache/juli/logging/Log;
      53: ldc           #23                 // String Ignored exception while flushing gzip filter
      55: aload_1
      56: invokeinterface #24,  3           // InterfaceMethod org/apache/juli/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      61: aload_0
      62: getfield      #15                 // Field buffer:Lorg/apache/coyote/http11/HttpOutputBuffer;
      65: invokeinterface #25,  1           // InterfaceMethod org/apache/coyote/http11/HttpOutputBuffer.flush:()V
      70: return
    Exception table:
       from    to  target type
           7    35    38   Class java/io/IOException

  public void setResponse(org.apache.coyote.Response);
    Code:
       0: return

  public void setBuffer(org.apache.coyote.http11.HttpOutputBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field buffer:Lorg/apache/coyote/http11/HttpOutputBuffer;
       5: return

  public void end() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field compressionStream:Ljava/util/zip/GZIPOutputStream;
       4: ifnonnull     23
       7: aload_0
       8: new           #6                  // class java/util/zip/GZIPOutputStream
      11: dup
      12: aload_0
      13: getfield      #5                  // Field fakeOutputStream:Ljava/io/OutputStream;
      16: iconst_1
      17: invokespecial #7                  // Method java/util/zip/GZIPOutputStream."<init>":(Ljava/io/OutputStream;Z)V
      20: putfield      #2                  // Field compressionStream:Ljava/util/zip/GZIPOutputStream;
      23: aload_0
      24: getfield      #2                  // Field compressionStream:Ljava/util/zip/GZIPOutputStream;
      27: invokevirtual #26                 // Method java/util/zip/GZIPOutputStream.finish:()V
      30: aload_0
      31: getfield      #2                  // Field compressionStream:Ljava/util/zip/GZIPOutputStream;
      34: invokevirtual #27                 // Method java/util/zip/GZIPOutputStream.close:()V
      37: aload_0
      38: getfield      #15                 // Field buffer:Lorg/apache/coyote/http11/HttpOutputBuffer;
      41: invokeinterface #28,  1           // InterfaceMethod org/apache/coyote/http11/HttpOutputBuffer.end:()V
      46: return

  public void recycle();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #2                  // Field compressionStream:Ljava/util/zip/GZIPOutputStream;
       5: return

  static {};
    Code:
       0: ldc           #29                 // class org/apache/coyote/http11/filters/GzipOutputFilter
       2: invokestatic  #30                 // Method org/apache/juli/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/juli/logging/Log;
       5: putstatic     #17                 // Field log:Lorg/apache/juli/logging/Log;
       8: return
}
