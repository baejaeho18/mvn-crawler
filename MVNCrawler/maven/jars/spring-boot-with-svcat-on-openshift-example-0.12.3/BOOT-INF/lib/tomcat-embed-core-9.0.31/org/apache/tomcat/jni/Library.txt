Compiled from "Library.java"
public final class org.apache.tomcat.jni.Library {
  private static final java.lang.String[] NAMES;

  private static org.apache.tomcat.jni.Library _instance;

  public static int TCN_MAJOR_VERSION;

  public static int TCN_MINOR_VERSION;

  public static int TCN_PATCH_VERSION;

  public static int TCN_IS_DEV_VERSION;

  public static int APR_MAJOR_VERSION;

  public static int APR_MINOR_VERSION;

  public static int APR_PATCH_VERSION;

  public static int APR_IS_DEV_VERSION;

  public static boolean APR_HAVE_IPV6;

  public static boolean APR_HAS_SHARED_MEMORY;

  public static boolean APR_HAS_THREADS;

  public static boolean APR_HAS_SENDFILE;

  public static boolean APR_HAS_MMAP;

  public static boolean APR_HAS_FORK;

  public static boolean APR_HAS_RANDOM;

  public static boolean APR_HAS_OTHER_CHILD;

  public static boolean APR_HAS_DSO;

  public static boolean APR_HAS_SO_ACCEPTFILTER;

  public static boolean APR_HAS_UNICODE_FS;

  public static boolean APR_HAS_PROC_INVOKED;

  public static boolean APR_HAS_USER;

  public static boolean APR_HAS_LARGE_FILES;

  public static boolean APR_HAS_XTHREAD_FILES;

  public static boolean APR_HAS_OS_UUID;

  public static boolean APR_IS_BIGENDIAN;

  public static boolean APR_FILES_AS_SOCKETS;

  public static boolean APR_CHARSET_EBCDIC;

  public static boolean APR_TCP_NODELAY_INHERITED;

  public static boolean APR_O_NONBLOCK_INHERITED;

  public static int APR_SIZEOF_VOIDP;

  public static int APR_PATH_MAX;

  public static int APRMAXHOSTLEN;

  public static int APR_MAX_IOVEC_SIZE;

  public static int APR_MAX_SECS_TO_LINGER;

  public static int APR_MMAP_THRESHOLD;

  public static int APR_MMAP_LIMIT;

  private org.apache.tomcat.jni.Library() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: iconst_0
       5: istore_1
       6: new           #2                  // class java/lang/StringBuilder
       9: dup
      10: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
      13: astore_2
      14: new           #4                  // class java/io/File
      17: dup
      18: ldc           #5                  // String catalina.home
      20: invokestatic  #6                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      23: ldc           #7                  // String bin
      25: invokespecial #8                  // Method java/io/File."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      28: astore_3
      29: iconst_0
      30: istore        4
      32: iload         4
      34: getstatic     #9                  // Field NAMES:[Ljava/lang/String;
      37: arraylength
      38: if_icmpge     131
      41: new           #4                  // class java/io/File
      44: dup
      45: aload_3
      46: getstatic     #9                  // Field NAMES:[Ljava/lang/String;
      49: iload         4
      51: aaload
      52: invokestatic  #10                 // Method java/lang/System.mapLibraryName:(Ljava/lang/String;)Ljava/lang/String;
      55: invokespecial #11                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      58: astore        5
      60: aload         5
      62: invokevirtual #12                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      65: invokestatic  #13                 // Method java/lang/System.load:(Ljava/lang/String;)V
      68: iconst_1
      69: istore_1
      70: goto          118
      73: astore        6
      75: aload         6
      77: athrow
      78: astore        6
      80: aload         6
      82: athrow
      83: astore        6
      85: aload         5
      87: invokevirtual #17                 // Method java/io/File.exists:()Z
      90: ifeq          96
      93: aload         6
      95: athrow
      96: iload         4
      98: ifle          108
     101: aload_2
     102: ldc           #18                 // String ,
     104: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: pop
     108: aload_2
     109: aload         6
     111: invokevirtual #20                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     114: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: pop
     118: iload_1
     119: ifeq          125
     122: goto          131
     125: iinc          4, 1
     128: goto          32
     131: iload_1
     132: ifne          282
     135: ldc           #21                 // String java.library.path
     137: invokestatic  #6                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
     140: astore        4
     142: aload         4
     144: getstatic     #22                 // Field java/io/File.pathSeparator:Ljava/lang/String;
     147: invokevirtual #23                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
     150: astore        5
     152: iconst_0
     153: istore        6
     155: iload         6
     157: getstatic     #9                  // Field NAMES:[Ljava/lang/String;
     160: arraylength
     161: if_icmpge     282
     164: getstatic     #9                  // Field NAMES:[Ljava/lang/String;
     167: iload         6
     169: aaload
     170: invokestatic  #24                 // Method java/lang/System.loadLibrary:(Ljava/lang/String;)V
     173: iconst_1
     174: istore_1
     175: goto          269
     178: astore        7
     180: aload         7
     182: athrow
     183: astore        7
     185: aload         7
     187: athrow
     188: astore        7
     190: getstatic     #9                  // Field NAMES:[Ljava/lang/String;
     193: iload         6
     195: aaload
     196: invokestatic  #10                 // Method java/lang/System.mapLibraryName:(Ljava/lang/String;)Ljava/lang/String;
     199: astore        8
     201: iconst_0
     202: istore        9
     204: iload         9
     206: aload         5
     208: arraylength
     209: if_icmpge     245
     212: new           #4                  // class java/io/File
     215: dup
     216: aload         5
     218: iload         9
     220: aaload
     221: aload         8
     223: invokespecial #8                  // Method java/io/File."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     226: astore        10
     228: aload         10
     230: invokevirtual #17                 // Method java/io/File.exists:()Z
     233: ifeq          239
     236: aload         7
     238: athrow
     239: iinc          9, 1
     242: goto          204
     245: aload_2
     246: invokevirtual #25                 // Method java/lang/StringBuilder.length:()I
     249: ifle          259
     252: aload_2
     253: ldc           #18                 // String ,
     255: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     258: pop
     259: aload_2
     260: aload         7
     262: invokevirtual #20                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     265: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     268: pop
     269: iload_1
     270: ifeq          276
     273: goto          282
     276: iinc          6, 1
     279: goto          155
     282: iload_1
     283: ifne          369
     286: new           #2                  // class java/lang/StringBuilder
     289: dup
     290: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
     293: astore        4
     295: getstatic     #9                  // Field NAMES:[Ljava/lang/String;
     298: astore        5
     300: aload         5
     302: arraylength
     303: istore        6
     305: iconst_0
     306: istore        7
     308: iload         7
     310: iload         6
     312: if_icmpge     344
     315: aload         5
     317: iload         7
     319: aaload
     320: astore        8
     322: aload         4
     324: aload         8
     326: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     329: pop
     330: aload         4
     332: ldc           #18                 // String ,
     334: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     337: pop
     338: iinc          7, 1
     341: goto          308
     344: new           #26                 // class org/apache/tomcat/jni/LibraryNotFoundError
     347: dup
     348: aload         4
     350: iconst_0
     351: aload         4
     353: invokevirtual #25                 // Method java/lang/StringBuilder.length:()I
     356: iconst_2
     357: isub
     358: invokevirtual #27                 // Method java/lang/StringBuilder.substring:(II)Ljava/lang/String;
     361: aload_2
     362: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     365: invokespecial #29                 // Method org/apache/tomcat/jni/LibraryNotFoundError."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     368: athrow
     369: return
    Exception table:
       from    to  target type
          60    70    73   Class java/lang/ThreadDeath
          60    70    78   Class java/lang/VirtualMachineError
          60    70    83   Class java/lang/Throwable
         164   175   178   Class java/lang/ThreadDeath
         164   175   183   Class java/lang/VirtualMachineError
         164   175   188   Class java/lang/Throwable

  private org.apache.tomcat.jni.Library(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokestatic  #24                 // Method java/lang/System.loadLibrary:(Ljava/lang/String;)V
       8: return

  private static native boolean initialize();

  public static native void terminate();

  private static native boolean has(int);

  private static native int version(int);

  private static native int size(int);

  public static native java.lang.String versionString();

  public static native java.lang.String aprVersionString();

  public static native long globalPool();

  public static synchronized boolean initialize(java.lang.String) throws java.lang.Exception;
    Code:
       0: getstatic     #30                 // Field _instance:Lorg/apache/tomcat/jni/Library;
       3: ifnonnull     364
       6: aload_0
       7: ifnonnull     23
      10: new           #31                 // class org/apache/tomcat/jni/Library
      13: dup
      14: invokespecial #32                 // Method "<init>":()V
      17: putstatic     #30                 // Field _instance:Lorg/apache/tomcat/jni/Library;
      20: goto          34
      23: new           #31                 // class org/apache/tomcat/jni/Library
      26: dup
      27: aload_0
      28: invokespecial #33                 // Method "<init>":(Ljava/lang/String;)V
      31: putstatic     #30                 // Field _instance:Lorg/apache/tomcat/jni/Library;
      34: iconst_1
      35: invokestatic  #34                 // Method version:(I)I
      38: putstatic     #35                 // Field TCN_MAJOR_VERSION:I
      41: iconst_2
      42: invokestatic  #34                 // Method version:(I)I
      45: putstatic     #36                 // Field TCN_MINOR_VERSION:I
      48: iconst_3
      49: invokestatic  #34                 // Method version:(I)I
      52: putstatic     #37                 // Field TCN_PATCH_VERSION:I
      55: iconst_4
      56: invokestatic  #34                 // Method version:(I)I
      59: putstatic     #38                 // Field TCN_IS_DEV_VERSION:I
      62: bipush        17
      64: invokestatic  #34                 // Method version:(I)I
      67: putstatic     #39                 // Field APR_MAJOR_VERSION:I
      70: bipush        18
      72: invokestatic  #34                 // Method version:(I)I
      75: putstatic     #40                 // Field APR_MINOR_VERSION:I
      78: bipush        19
      80: invokestatic  #34                 // Method version:(I)I
      83: putstatic     #41                 // Field APR_PATCH_VERSION:I
      86: bipush        20
      88: invokestatic  #34                 // Method version:(I)I
      91: putstatic     #42                 // Field APR_IS_DEV_VERSION:I
      94: iconst_1
      95: invokestatic  #43                 // Method size:(I)I
      98: putstatic     #44                 // Field APR_SIZEOF_VOIDP:I
     101: iconst_2
     102: invokestatic  #43                 // Method size:(I)I
     105: putstatic     #45                 // Field APR_PATH_MAX:I
     108: iconst_3
     109: invokestatic  #43                 // Method size:(I)I
     112: putstatic     #46                 // Field APRMAXHOSTLEN:I
     115: iconst_4
     116: invokestatic  #43                 // Method size:(I)I
     119: putstatic     #47                 // Field APR_MAX_IOVEC_SIZE:I
     122: iconst_5
     123: invokestatic  #43                 // Method size:(I)I
     126: putstatic     #48                 // Field APR_MAX_SECS_TO_LINGER:I
     129: bipush        6
     131: invokestatic  #43                 // Method size:(I)I
     134: putstatic     #49                 // Field APR_MMAP_THRESHOLD:I
     137: bipush        7
     139: invokestatic  #43                 // Method size:(I)I
     142: putstatic     #50                 // Field APR_MMAP_LIMIT:I
     145: iconst_0
     146: invokestatic  #51                 // Method has:(I)Z
     149: putstatic     #52                 // Field APR_HAVE_IPV6:Z
     152: iconst_1
     153: invokestatic  #51                 // Method has:(I)Z
     156: putstatic     #53                 // Field APR_HAS_SHARED_MEMORY:Z
     159: iconst_2
     160: invokestatic  #51                 // Method has:(I)Z
     163: putstatic     #54                 // Field APR_HAS_THREADS:Z
     166: iconst_3
     167: invokestatic  #51                 // Method has:(I)Z
     170: putstatic     #55                 // Field APR_HAS_SENDFILE:Z
     173: iconst_4
     174: invokestatic  #51                 // Method has:(I)Z
     177: putstatic     #56                 // Field APR_HAS_MMAP:Z
     180: iconst_5
     181: invokestatic  #51                 // Method has:(I)Z
     184: putstatic     #57                 // Field APR_HAS_FORK:Z
     187: bipush        6
     189: invokestatic  #51                 // Method has:(I)Z
     192: putstatic     #58                 // Field APR_HAS_RANDOM:Z
     195: bipush        7
     197: invokestatic  #51                 // Method has:(I)Z
     200: putstatic     #59                 // Field APR_HAS_OTHER_CHILD:Z
     203: bipush        8
     205: invokestatic  #51                 // Method has:(I)Z
     208: putstatic     #60                 // Field APR_HAS_DSO:Z
     211: bipush        9
     213: invokestatic  #51                 // Method has:(I)Z
     216: putstatic     #61                 // Field APR_HAS_SO_ACCEPTFILTER:Z
     219: bipush        10
     221: invokestatic  #51                 // Method has:(I)Z
     224: putstatic     #62                 // Field APR_HAS_UNICODE_FS:Z
     227: bipush        11
     229: invokestatic  #51                 // Method has:(I)Z
     232: putstatic     #63                 // Field APR_HAS_PROC_INVOKED:Z
     235: bipush        12
     237: invokestatic  #51                 // Method has:(I)Z
     240: putstatic     #64                 // Field APR_HAS_USER:Z
     243: bipush        13
     245: invokestatic  #51                 // Method has:(I)Z
     248: putstatic     #65                 // Field APR_HAS_LARGE_FILES:Z
     251: bipush        14
     253: invokestatic  #51                 // Method has:(I)Z
     256: putstatic     #66                 // Field APR_HAS_XTHREAD_FILES:Z
     259: bipush        15
     261: invokestatic  #51                 // Method has:(I)Z
     264: putstatic     #67                 // Field APR_HAS_OS_UUID:Z
     267: bipush        16
     269: invokestatic  #51                 // Method has:(I)Z
     272: putstatic     #68                 // Field APR_IS_BIGENDIAN:Z
     275: bipush        17
     277: invokestatic  #51                 // Method has:(I)Z
     280: putstatic     #69                 // Field APR_FILES_AS_SOCKETS:Z
     283: bipush        18
     285: invokestatic  #51                 // Method has:(I)Z
     288: putstatic     #70                 // Field APR_CHARSET_EBCDIC:Z
     291: bipush        19
     293: invokestatic  #51                 // Method has:(I)Z
     296: putstatic     #71                 // Field APR_TCP_NODELAY_INHERITED:Z
     299: bipush        20
     301: invokestatic  #51                 // Method has:(I)Z
     304: putstatic     #72                 // Field APR_O_NONBLOCK_INHERITED:Z
     307: getstatic     #39                 // Field APR_MAJOR_VERSION:I
     310: iconst_1
     311: if_icmpge     348
     314: new           #73                 // class java/lang/UnsatisfiedLinkError
     317: dup
     318: new           #2                  // class java/lang/StringBuilder
     321: dup
     322: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
     325: ldc           #74                 // String Unsupported APR Version (
     327: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     330: invokestatic  #75                 // Method aprVersionString:()Ljava/lang/String;
     333: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     336: ldc           #76                 // String )
     338: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     341: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     344: invokespecial #77                 // Method java/lang/UnsatisfiedLinkError."<init>":(Ljava/lang/String;)V
     347: athrow
     348: getstatic     #54                 // Field APR_HAS_THREADS:Z
     351: ifne          364
     354: new           #73                 // class java/lang/UnsatisfiedLinkError
     357: dup
     358: ldc           #78                 // String Missing APR_HAS_THREADS
     360: invokespecial #77                 // Method java/lang/UnsatisfiedLinkError."<init>":(Ljava/lang/String;)V
     363: athrow
     364: invokestatic  #79                 // Method initialize:()Z
     367: ireturn

  public static void load(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #13                 // Method java/lang/System.load:(Ljava/lang/String;)V
       4: return

  public static void loadLibrary(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #24                 // Method java/lang/System.loadLibrary:(Ljava/lang/String;)V
       4: return

  static {};
    Code:
       0: iconst_2
       1: anewarray     #80                 // class java/lang/String
       4: dup
       5: iconst_0
       6: ldc           #81                 // String tcnative-1
       8: aastore
       9: dup
      10: iconst_1
      11: ldc           #82                 // String libtcnative-1
      13: aastore
      14: putstatic     #9                  // Field NAMES:[Ljava/lang/String;
      17: aconst_null
      18: putstatic     #30                 // Field _instance:Lorg/apache/tomcat/jni/Library;
      21: iconst_0
      22: putstatic     #35                 // Field TCN_MAJOR_VERSION:I
      25: iconst_0
      26: putstatic     #36                 // Field TCN_MINOR_VERSION:I
      29: iconst_0
      30: putstatic     #37                 // Field TCN_PATCH_VERSION:I
      33: iconst_0
      34: putstatic     #38                 // Field TCN_IS_DEV_VERSION:I
      37: iconst_0
      38: putstatic     #39                 // Field APR_MAJOR_VERSION:I
      41: iconst_0
      42: putstatic     #40                 // Field APR_MINOR_VERSION:I
      45: iconst_0
      46: putstatic     #41                 // Field APR_PATCH_VERSION:I
      49: iconst_0
      50: putstatic     #42                 // Field APR_IS_DEV_VERSION:I
      53: iconst_0
      54: putstatic     #52                 // Field APR_HAVE_IPV6:Z
      57: iconst_0
      58: putstatic     #53                 // Field APR_HAS_SHARED_MEMORY:Z
      61: iconst_0
      62: putstatic     #54                 // Field APR_HAS_THREADS:Z
      65: iconst_0
      66: putstatic     #55                 // Field APR_HAS_SENDFILE:Z
      69: iconst_0
      70: putstatic     #56                 // Field APR_HAS_MMAP:Z
      73: iconst_0
      74: putstatic     #57                 // Field APR_HAS_FORK:Z
      77: iconst_0
      78: putstatic     #58                 // Field APR_HAS_RANDOM:Z
      81: iconst_0
      82: putstatic     #59                 // Field APR_HAS_OTHER_CHILD:Z
      85: iconst_0
      86: putstatic     #60                 // Field APR_HAS_DSO:Z
      89: iconst_0
      90: putstatic     #61                 // Field APR_HAS_SO_ACCEPTFILTER:Z
      93: iconst_0
      94: putstatic     #62                 // Field APR_HAS_UNICODE_FS:Z
      97: iconst_0
      98: putstatic     #63                 // Field APR_HAS_PROC_INVOKED:Z
     101: iconst_0
     102: putstatic     #64                 // Field APR_HAS_USER:Z
     105: iconst_0
     106: putstatic     #65                 // Field APR_HAS_LARGE_FILES:Z
     109: iconst_0
     110: putstatic     #66                 // Field APR_HAS_XTHREAD_FILES:Z
     113: iconst_0
     114: putstatic     #67                 // Field APR_HAS_OS_UUID:Z
     117: iconst_0
     118: putstatic     #68                 // Field APR_IS_BIGENDIAN:Z
     121: iconst_0
     122: putstatic     #69                 // Field APR_FILES_AS_SOCKETS:Z
     125: iconst_0
     126: putstatic     #70                 // Field APR_CHARSET_EBCDIC:Z
     129: iconst_0
     130: putstatic     #71                 // Field APR_TCP_NODELAY_INHERITED:Z
     133: iconst_0
     134: putstatic     #72                 // Field APR_O_NONBLOCK_INHERITED:Z
     137: return
}
