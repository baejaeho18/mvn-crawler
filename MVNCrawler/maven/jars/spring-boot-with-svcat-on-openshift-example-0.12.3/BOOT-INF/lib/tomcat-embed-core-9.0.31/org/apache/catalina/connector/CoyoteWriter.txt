Compiled from "CoyoteWriter.java"
public class org.apache.catalina.connector.CoyoteWriter extends java.io.PrintWriter {
  private static final char[] LINE_SEP;

  protected org.apache.catalina.connector.OutputBuffer ob;

  protected boolean error;

  public org.apache.catalina.connector.CoyoteWriter(org.apache.catalina.connector.OutputBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method java/io/PrintWriter."<init>":(Ljava/io/Writer;)V
       5: aload_0
       6: iconst_0
       7: putfield      #2                  // Field error:Z
      10: aload_0
      11: aload_1
      12: putfield      #3                  // Field ob:Lorg/apache/catalina/connector/OutputBuffer;
      15: return

  protected java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: new           #4                  // class java/lang/CloneNotSupportedException
       3: dup
       4: invokespecial #5                  // Method java/lang/CloneNotSupportedException."<init>":()V
       7: athrow

  void clear();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #3                  // Field ob:Lorg/apache/catalina/connector/OutputBuffer;
       5: return

  void recycle();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #2                  // Field error:Z
       5: return

  public void flush();
    Code:
       0: aload_0
       1: getfield      #2                  // Field error:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #3                  // Field ob:Lorg/apache/catalina/connector/OutputBuffer;
      12: invokevirtual #6                  // Method org/apache/catalina/connector/OutputBuffer.flush:()V
      15: goto          24
      18: astore_1
      19: aload_0
      20: iconst_1
      21: putfield      #2                  // Field error:Z
      24: return
    Exception table:
       from    to  target type
           8    15    18   Class java/io/IOException

  public void close();
    Code:
       0: aload_0
       1: getfield      #3                  // Field ob:Lorg/apache/catalina/connector/OutputBuffer;
       4: invokevirtual #8                  // Method org/apache/catalina/connector/OutputBuffer.close:()V
       7: goto          11
      10: astore_1
      11: aload_0
      12: iconst_0
      13: putfield      #2                  // Field error:Z
      16: return
    Exception table:
       from    to  target type
           0     7    10   Class java/io/IOException

  public boolean checkError();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method flush:()V
       4: aload_0
       5: getfield      #2                  // Field error:Z
       8: ireturn

  public void write(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field error:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #3                  // Field ob:Lorg/apache/catalina/connector/OutputBuffer;
      12: iload_1
      13: invokevirtual #10                 // Method org/apache/catalina/connector/OutputBuffer.write:(I)V
      16: goto          25
      19: astore_2
      20: aload_0
      21: iconst_1
      22: putfield      #2                  // Field error:Z
      25: return
    Exception table:
       from    to  target type
           8    16    19   Class java/io/IOException

  public void write(char[], int, int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field error:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #3                  // Field ob:Lorg/apache/catalina/connector/OutputBuffer;
      12: aload_1
      13: iload_2
      14: iload_3
      15: invokevirtual #11                 // Method org/apache/catalina/connector/OutputBuffer.write:([CII)V
      18: goto          28
      21: astore        4
      23: aload_0
      24: iconst_1
      25: putfield      #2                  // Field error:Z
      28: return
    Exception table:
       from    to  target type
           8    18    21   Class java/io/IOException

  public void write(char[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #12                 // Method write:([CII)V
       8: return

  public void write(java.lang.String, int, int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field error:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #3                  // Field ob:Lorg/apache/catalina/connector/OutputBuffer;
      12: aload_1
      13: iload_2
      14: iload_3
      15: invokevirtual #13                 // Method org/apache/catalina/connector/OutputBuffer.write:(Ljava/lang/String;II)V
      18: goto          28
      21: astore        4
      23: aload_0
      24: iconst_1
      25: putfield      #2                  // Field error:Z
      28: return
    Exception table:
       from    to  target type
           8    18    21   Class java/io/IOException

  public void write(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: invokevirtual #14                 // Method java/lang/String.length:()I
       7: invokevirtual #15                 // Method write:(Ljava/lang/String;II)V
      10: return

  public void print(boolean);
    Code:
       0: iload_1
       1: ifeq          13
       4: aload_0
       5: ldc           #16                 // String true
       7: invokevirtual #17                 // Method write:(Ljava/lang/String;)V
      10: goto          19
      13: aload_0
      14: ldc           #18                 // String false
      16: invokevirtual #17                 // Method write:(Ljava/lang/String;)V
      19: return

  public void print(char);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #19                 // Method write:(I)V
       5: return

  public void print(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #20                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
       5: invokevirtual #17                 // Method write:(Ljava/lang/String;)V
       8: return

  public void print(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #21                 // Method java/lang/String.valueOf:(J)Ljava/lang/String;
       5: invokevirtual #17                 // Method write:(Ljava/lang/String;)V
       8: return

  public void print(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #22                 // Method java/lang/String.valueOf:(F)Ljava/lang/String;
       5: invokevirtual #17                 // Method write:(Ljava/lang/String;)V
       8: return

  public void print(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #23                 // Method java/lang/String.valueOf:(D)Ljava/lang/String;
       5: invokevirtual #17                 // Method write:(Ljava/lang/String;)V
       8: return

  public void print(char[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #24                 // Method write:([C)V
       5: return

  public void print(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     7
       4: ldc           #25                 // String null
       6: astore_1
       7: aload_0
       8: aload_1
       9: invokevirtual #17                 // Method write:(Ljava/lang/String;)V
      12: return

  public void print(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #26                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
       5: invokevirtual #17                 // Method write:(Ljava/lang/String;)V
       8: return

  public void println();
    Code:
       0: aload_0
       1: getstatic     #27                 // Field LINE_SEP:[C
       4: invokevirtual #24                 // Method write:([C)V
       7: return

  public void println(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #28                 // Method print:(Z)V
       5: aload_0
       6: invokevirtual #29                 // Method println:()V
       9: return

  public void println(char);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #30                 // Method print:(C)V
       5: aload_0
       6: invokevirtual #29                 // Method println:()V
       9: return

  public void println(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #31                 // Method print:(I)V
       5: aload_0
       6: invokevirtual #29                 // Method println:()V
       9: return

  public void println(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #32                 // Method print:(J)V
       5: aload_0
       6: invokevirtual #29                 // Method println:()V
       9: return

  public void println(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokevirtual #33                 // Method print:(F)V
       5: aload_0
       6: invokevirtual #29                 // Method println:()V
       9: return

  public void println(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokevirtual #34                 // Method print:(D)V
       5: aload_0
       6: invokevirtual #29                 // Method println:()V
       9: return

  public void println(char[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #35                 // Method print:([C)V
       5: aload_0
       6: invokevirtual #29                 // Method println:()V
       9: return

  public void println(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #36                 // Method print:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #29                 // Method println:()V
       9: return

  public void println(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #37                 // Method print:(Ljava/lang/Object;)V
       5: aload_0
       6: invokevirtual #29                 // Method println:()V
       9: return

  static {};
    Code:
       0: invokestatic  #38                 // Method java/lang/System.lineSeparator:()Ljava/lang/String;
       3: invokevirtual #39                 // Method java/lang/String.toCharArray:()[C
       6: putstatic     #27                 // Field LINE_SEP:[C
       9: return
}
