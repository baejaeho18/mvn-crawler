Compiled from "Stream.java"
class org.apache.coyote.http2.Stream$StreamOutputBuffer implements org.apache.coyote.http11.HttpOutputBuffer,org.apache.tomcat.util.net.WriteBuffer$Sink {
  private final java.nio.ByteBuffer buffer;

  private final org.apache.tomcat.util.net.WriteBuffer writeBuffer;

  private boolean dataLeft;

  private volatile long written;

  private int streamReservation;

  private volatile boolean closed;

  private volatile org.apache.coyote.http2.StreamException reset;

  private volatile boolean endOfStreamSent;

  final org.apache.coyote.http2.Stream this$0;

  org.apache.coyote.http2.Stream$StreamOutputBuffer(org.apache.coyote.http2.Stream);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
       5: aload_0
       6: invokespecial #5                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: sipush        8192
      13: invokestatic  #6                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      16: putfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      19: aload_0
      20: new           #8                  // class org/apache/tomcat/util/net/WriteBuffer
      23: dup
      24: ldc           #9                  // int 32768
      26: invokespecial #10                 // Method org/apache/tomcat/util/net/WriteBuffer."<init>":(I)V
      29: putfield      #11                 // Field writeBuffer:Lorg/apache/tomcat/util/net/WriteBuffer;
      32: aload_0
      33: lconst_0
      34: putfield      #12                 // Field written:J
      37: aload_0
      38: iconst_0
      39: putfield      #13                 // Field streamReservation:I
      42: aload_0
      43: iconst_0
      44: putfield      #3                  // Field closed:Z
      47: aload_0
      48: aconst_null
      49: putfield      #2                  // Field reset:Lorg/apache/coyote/http2/StreamException;
      52: aload_0
      53: iconst_0
      54: putfield      #1                  // Field endOfStreamSent:Z
      57: return

  public final synchronized int doWrite(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field closed:Z
       4: ifeq          47
       7: new           #14                 // class java/lang/IllegalStateException
      10: dup
      11: invokestatic  #15                 // Method org/apache/coyote/http2/Stream.access$600:()Lorg/apache/tomcat/util/res/StringManager;
      14: ldc           #16                 // String stream.closed
      16: iconst_2
      17: anewarray     #17                 // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_0
      23: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
      26: invokevirtual #18                 // Method org/apache/coyote/http2/Stream.getConnectionId:()Ljava/lang/String;
      29: aastore
      30: dup
      31: iconst_1
      32: aload_0
      33: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
      36: invokevirtual #19                 // Method org/apache/coyote/http2/Stream.getIdentifier:()Ljava/lang/Integer;
      39: aastore
      40: invokevirtual #20                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      43: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_1
      48: invokevirtual #22                 // Method java/nio/ByteBuffer.remaining:()I
      51: istore_2
      52: aload_0
      53: getfield      #11                 // Field writeBuffer:Lorg/apache/tomcat/util/net/WriteBuffer;
      56: invokevirtual #23                 // Method org/apache/tomcat/util/net/WriteBuffer.isEmpty:()Z
      59: ifeq          182
      62: aload_1
      63: invokevirtual #24                 // Method java/nio/ByteBuffer.limit:()I
      66: istore_3
      67: aload_1
      68: invokevirtual #22                 // Method java/nio/ByteBuffer.remaining:()I
      71: ifle          179
      74: aload_0
      75: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      78: invokevirtual #22                 // Method java/nio/ByteBuffer.remaining:()I
      81: aload_1
      82: invokevirtual #22                 // Method java/nio/ByteBuffer.remaining:()I
      85: invokestatic  #25                 // Method java/lang/Math.min:(II)I
      88: istore        4
      90: aload_1
      91: aload_1
      92: invokevirtual #26                 // Method java/nio/ByteBuffer.position:()I
      95: iload         4
      97: iadd
      98: invokevirtual #27                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     101: pop
     102: aload_0
     103: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
     106: aload_1
     107: invokevirtual #28                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     110: pop
     111: aload_1
     112: iload_3
     113: invokevirtual #27                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     116: pop
     117: aload_1
     118: invokevirtual #22                 // Method java/nio/ByteBuffer.remaining:()I
     121: ifle          176
     124: aload_0
     125: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
     128: invokevirtual #29                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     131: ifne          176
     134: aload_0
     135: iconst_1
     136: aload_0
     137: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
     140: invokestatic  #30                 // Method org/apache/coyote/http2/Stream.access$700:(Lorg/apache/coyote/http2/Stream;)Lorg/apache/coyote/Response;
     143: invokevirtual #31                 // Method org/apache/coyote/Response.getWriteListener:()Ljavax/servlet/WriteListener;
     146: ifnonnull     153
     149: iconst_1
     150: goto          154
     153: iconst_0
     154: invokespecial #32                 // Method flush:(ZZ)Z
     157: ifeq          176
     160: aload_0
     161: getfield      #11                 // Field writeBuffer:Lorg/apache/tomcat/util/net/WriteBuffer;
     164: aload_1
     165: invokevirtual #33                 // Method org/apache/tomcat/util/net/WriteBuffer.add:(Ljava/nio/ByteBuffer;)V
     168: aload_0
     169: iconst_1
     170: putfield      #34                 // Field dataLeft:Z
     173: goto          179
     176: goto          67
     179: goto          190
     182: aload_0
     183: getfield      #11                 // Field writeBuffer:Lorg/apache/tomcat/util/net/WriteBuffer;
     186: aload_1
     187: invokevirtual #33                 // Method org/apache/tomcat/util/net/WriteBuffer.add:(Ljava/nio/ByteBuffer;)V
     190: aload_0
     191: dup
     192: getfield      #12                 // Field written:J
     195: iload_2
     196: i2l
     197: ladd
     198: putfield      #12                 // Field written:J
     201: iload_2
     202: ireturn

  final synchronized boolean flush(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #26                 // Method java/nio/ByteBuffer.position:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: istore_2
      16: iconst_0
      17: istore_3
      18: iload_2
      19: ifeq          31
      22: aload_0
      23: iconst_0
      24: iload_1
      25: invokespecial #32                 // Method flush:(ZZ)Z
      28: istore_2
      29: iconst_1
      30: istore_3
      31: iload_2
      32: ifeq          43
      35: aload_0
      36: iconst_1
      37: putfield      #34                 // Field dataLeft:Z
      40: goto          91
      43: aload_0
      44: getfield      #11                 // Field writeBuffer:Lorg/apache/tomcat/util/net/WriteBuffer;
      47: invokevirtual #23                 // Method org/apache/tomcat/util/net/WriteBuffer.isEmpty:()Z
      50: ifeq          78
      53: iload_3
      54: ifeq          65
      57: aload_0
      58: iconst_0
      59: putfield      #34                 // Field dataLeft:Z
      62: goto          91
      65: aload_0
      66: aload_0
      67: iconst_0
      68: iload_1
      69: invokespecial #32                 // Method flush:(ZZ)Z
      72: putfield      #34                 // Field dataLeft:Z
      75: goto          91
      78: aload_0
      79: aload_0
      80: getfield      #11                 // Field writeBuffer:Lorg/apache/tomcat/util/net/WriteBuffer;
      83: aload_0
      84: iload_1
      85: invokevirtual #35                 // Method org/apache/tomcat/util/net/WriteBuffer.write:(Lorg/apache/tomcat/util/net/WriteBuffer$Sink;Z)Z
      88: putfield      #34                 // Field dataLeft:Z
      91: aload_0
      92: getfield      #34                 // Field dataLeft:Z
      95: ireturn

  private final synchronized boolean flush(boolean, boolean) throws java.io.IOException;
    Code:
       0: invokestatic  #36                 // Method org/apache/coyote/http2/Stream.access$800:()Lorg/apache/juli/logging/Log;
       3: invokeinterface #37,  1           // InterfaceMethod org/apache/juli/logging/Log.isDebugEnabled:()Z
       8: ifeq          81
      11: invokestatic  #36                 // Method org/apache/coyote/http2/Stream.access$800:()Lorg/apache/juli/logging/Log;
      14: invokestatic  #15                 // Method org/apache/coyote/http2/Stream.access$600:()Lorg/apache/tomcat/util/res/StringManager;
      17: ldc           #38                 // String stream.outputBuffer.flush.debug
      19: iconst_5
      20: anewarray     #17                 // class java/lang/Object
      23: dup
      24: iconst_0
      25: aload_0
      26: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
      29: invokevirtual #18                 // Method org/apache/coyote/http2/Stream.getConnectionId:()Ljava/lang/String;
      32: aastore
      33: dup
      34: iconst_1
      35: aload_0
      36: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
      39: invokevirtual #19                 // Method org/apache/coyote/http2/Stream.getIdentifier:()Ljava/lang/Integer;
      42: aastore
      43: dup
      44: iconst_2
      45: aload_0
      46: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      49: invokevirtual #26                 // Method java/nio/ByteBuffer.position:()I
      52: invokestatic  #39                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      55: aastore
      56: dup
      57: iconst_3
      58: iload_1
      59: invokestatic  #40                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
      62: aastore
      63: dup
      64: iconst_4
      65: aload_0
      66: getfield      #3                  // Field closed:Z
      69: invokestatic  #40                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
      72: aastore
      73: invokevirtual #20                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      76: invokeinterface #41,  2           // InterfaceMethod org/apache/juli/logging/Log.debug:(Ljava/lang/Object;)V
      81: aload_0
      82: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      85: invokevirtual #26                 // Method java/nio/ByteBuffer.position:()I
      88: ifne          144
      91: aload_0
      92: getfield      #3                  // Field closed:Z
      95: ifeq          142
      98: aload_0
      99: getfield      #1                  // Field endOfStreamSent:Z
     102: ifne          142
     105: aload_0
     106: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
     109: invokestatic  #42                 // Method org/apache/coyote/http2/Stream.access$900:(Lorg/apache/coyote/http2/Stream;)Lorg/apache/coyote/http2/Http2UpgradeHandler;
     112: aload_0
     113: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
     116: aload_0
     117: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
     120: iconst_0
     121: aload_0
     122: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
     125: invokestatic  #30                 // Method org/apache/coyote/http2/Stream.access$700:(Lorg/apache/coyote/http2/Stream;)Lorg/apache/coyote/Response;
     128: invokevirtual #43                 // Method org/apache/coyote/Response.getTrailerFields:()Ljava/util/function/Supplier;
     131: ifnonnull     138
     134: iconst_1
     135: goto          139
     138: iconst_0
     139: invokevirtual #44                 // Method org/apache/coyote/http2/Http2UpgradeHandler.writeBody:(Lorg/apache/coyote/http2/Stream;Ljava/nio/ByteBuffer;IZ)V
     142: iconst_0
     143: ireturn
     144: aload_0
     145: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
     148: invokevirtual #45                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     151: pop
     152: aload_0
     153: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
     156: invokevirtual #22                 // Method java/nio/ByteBuffer.remaining:()I
     159: istore_3
     160: iload_3
     161: ifle          318
     164: aload_0
     165: getfield      #13                 // Field streamReservation:I
     168: ifne          201
     171: aload_0
     172: aload_0
     173: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
     176: iload_3
     177: iload_2
     178: invokevirtual #46                 // Method org/apache/coyote/http2/Stream.reserveWindowSize:(IZ)I
     181: putfield      #13                 // Field streamReservation:I
     184: aload_0
     185: getfield      #13                 // Field streamReservation:I
     188: ifne          201
     191: aload_0
     192: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
     195: invokevirtual #47                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     198: pop
     199: iconst_1
     200: ireturn
     201: aload_0
     202: getfield      #13                 // Field streamReservation:I
     205: ifle          160
     208: aload_0
     209: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
     212: invokestatic  #42                 // Method org/apache/coyote/http2/Stream.access$900:(Lorg/apache/coyote/http2/Stream;)Lorg/apache/coyote/http2/Http2UpgradeHandler;
     215: aload_0
     216: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
     219: aload_0
     220: getfield      #13                 // Field streamReservation:I
     223: iload_2
     224: invokevirtual #48                 // Method org/apache/coyote/http2/Http2UpgradeHandler.reserveWindowSize:(Lorg/apache/coyote/http2/Stream;IZ)I
     227: istore        4
     229: iload         4
     231: ifne          244
     234: aload_0
     235: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
     238: invokevirtual #47                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     241: pop
     242: iconst_1
     243: ireturn
     244: aload_0
     245: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
     248: invokestatic  #42                 // Method org/apache/coyote/http2/Stream.access$900:(Lorg/apache/coyote/http2/Stream;)Lorg/apache/coyote/http2/Http2UpgradeHandler;
     251: aload_0
     252: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
     255: aload_0
     256: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
     259: iload         4
     261: iload_1
     262: ifne          295
     265: aload_0
     266: getfield      #3                  // Field closed:Z
     269: ifeq          295
     272: iload_3
     273: iload         4
     275: if_icmpne     295
     278: aload_0
     279: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
     282: invokestatic  #30                 // Method org/apache/coyote/http2/Stream.access$700:(Lorg/apache/coyote/http2/Stream;)Lorg/apache/coyote/Response;
     285: invokevirtual #43                 // Method org/apache/coyote/Response.getTrailerFields:()Ljava/util/function/Supplier;
     288: ifnonnull     295
     291: iconst_1
     292: goto          296
     295: iconst_0
     296: invokevirtual #44                 // Method org/apache/coyote/http2/Http2UpgradeHandler.writeBody:(Lorg/apache/coyote/http2/Stream;Ljava/nio/ByteBuffer;IZ)V
     299: aload_0
     300: dup
     301: getfield      #13                 // Field streamReservation:I
     304: iload         4
     306: isub
     307: putfield      #13                 // Field streamReservation:I
     310: iload_3
     311: iload         4
     313: isub
     314: istore_3
     315: goto          201
     318: aload_0
     319: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
     322: invokevirtual #49                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     325: pop
     326: iconst_0
     327: ireturn

  final synchronized boolean isReady();
    Code:
       0: aload_0
       1: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
       4: invokevirtual #50                 // Method org/apache/coyote/http2/Stream.getWindowSize:()J
       7: lconst_0
       8: lcmp
       9: ifle          25
      12: aload_0
      13: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
      16: invokestatic  #51                 // Method org/apache/coyote/http2/Stream.access$1000:(Lorg/apache/coyote/http2/Stream;)Lorg/apache/coyote/http2/WindowAllocationManager;
      19: invokevirtual #52                 // Method org/apache/coyote/http2/WindowAllocationManager.isWaitingForStream:()Z
      22: ifne          60
      25: aload_0
      26: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
      29: invokestatic  #42                 // Method org/apache/coyote/http2/Stream.access$900:(Lorg/apache/coyote/http2/Stream;)Lorg/apache/coyote/http2/Http2UpgradeHandler;
      32: invokevirtual #53                 // Method org/apache/coyote/http2/Http2UpgradeHandler.getWindowSize:()J
      35: lconst_0
      36: lcmp
      37: ifle          53
      40: aload_0
      41: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
      44: invokestatic  #51                 // Method org/apache/coyote/http2/Stream.access$1000:(Lorg/apache/coyote/http2/Stream;)Lorg/apache/coyote/http2/WindowAllocationManager;
      47: invokevirtual #54                 // Method org/apache/coyote/http2/WindowAllocationManager.isWaitingForConnection:()Z
      50: ifne          60
      53: aload_0
      54: getfield      #34                 // Field dataLeft:Z
      57: ifeq          62
      60: iconst_0
      61: ireturn
      62: iconst_1
      63: ireturn

  public final long getBytesWritten();
    Code:
       0: aload_0
       1: getfield      #12                 // Field written:J
       4: lreturn

  public final void end() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field reset:Lorg/apache/coyote/http2/StreamException;
       4: ifnull        19
       7: new           #55                 // class org/apache/coyote/CloseNowException
      10: dup
      11: aload_0
      12: getfield      #2                  // Field reset:Lorg/apache/coyote/http2/StreamException;
      15: invokespecial #56                 // Method org/apache/coyote/CloseNowException."<init>":(Ljava/lang/Throwable;)V
      18: athrow
      19: aload_0
      20: getfield      #3                  // Field closed:Z
      23: ifne          44
      26: aload_0
      27: iconst_1
      28: putfield      #3                  // Field closed:Z
      31: aload_0
      32: iconst_1
      33: invokevirtual #57                 // Method flush:(Z)Z
      36: pop
      37: aload_0
      38: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
      41: invokevirtual #58                 // Method org/apache/coyote/http2/Stream.writeTrailers:()V
      44: return

  final boolean hasNoBody();
    Code:
       0: aload_0
       1: getfield      #12                 // Field written:J
       4: lconst_0
       5: lcmp
       6: ifne          20
       9: aload_0
      10: getfield      #3                  // Field closed:Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field this$0:Lorg/apache/coyote/http2/Stream;
       5: invokevirtual #59                 // Method org/apache/coyote/http2/Stream.getCoyoteResponse:()Lorg/apache/coyote/Response;
       8: invokevirtual #31                 // Method org/apache/coyote/Response.getWriteListener:()Ljavax/servlet/WriteListener;
      11: ifnonnull     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: invokevirtual #57                 // Method flush:(Z)Z
      22: pop
      23: return

  public synchronized boolean writeFromBuffer(java.nio.ByteBuffer, boolean) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #24                 // Method java/nio/ByteBuffer.limit:()I
       4: istore_3
       5: aload_1
       6: invokevirtual #22                 // Method java/nio/ByteBuffer.remaining:()I
       9: ifle          69
      12: aload_0
      13: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      16: invokevirtual #22                 // Method java/nio/ByteBuffer.remaining:()I
      19: aload_1
      20: invokevirtual #22                 // Method java/nio/ByteBuffer.remaining:()I
      23: invokestatic  #25                 // Method java/lang/Math.min:(II)I
      26: istore        4
      28: aload_1
      29: aload_1
      30: invokevirtual #26                 // Method java/nio/ByteBuffer.position:()I
      33: iload         4
      35: iadd
      36: invokevirtual #27                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      39: pop
      40: aload_0
      41: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      44: aload_1
      45: invokevirtual #28                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      48: pop
      49: aload_1
      50: iload_3
      51: invokevirtual #27                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      54: pop
      55: aload_0
      56: iconst_0
      57: iload_2
      58: invokespecial #32                 // Method flush:(ZZ)Z
      61: ifeq          66
      64: iconst_1
      65: ireturn
      66: goto          5
      69: iconst_0
      70: ireturn

  static boolean access$102(org.apache.coyote.http2.Stream$StreamOutputBuffer, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #3                  // Field closed:Z
       6: ireturn

  static org.apache.coyote.http2.StreamException access$202(org.apache.coyote.http2.Stream$StreamOutputBuffer, org.apache.coyote.http2.StreamException);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field reset:Lorg/apache/coyote/http2/StreamException;
       6: areturn

  static boolean access$502(org.apache.coyote.http2.Stream$StreamOutputBuffer, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #1                  // Field endOfStreamSent:Z
       6: ireturn

  static boolean access$500(org.apache.coyote.http2.Stream$StreamOutputBuffer);
    Code:
       0: aload_0
       1: getfield      #1                  // Field endOfStreamSent:Z
       4: ireturn

  static org.apache.coyote.http2.StreamException access$200(org.apache.coyote.http2.Stream$StreamOutputBuffer);
    Code:
       0: aload_0
       1: getfield      #2                  // Field reset:Lorg/apache/coyote/http2/StreamException;
       4: areturn
}
