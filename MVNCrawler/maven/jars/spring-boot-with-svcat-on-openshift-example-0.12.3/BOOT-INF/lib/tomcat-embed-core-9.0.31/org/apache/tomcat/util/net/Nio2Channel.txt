Compiled from "Nio2Channel.java"
public class org.apache.tomcat.util.net.Nio2Channel implements java.nio.channels.AsynchronousByteChannel {
  protected static final java.nio.ByteBuffer emptyBuf;

  protected final org.apache.tomcat.util.net.SocketBufferHandler bufHandler;

  protected java.nio.channels.AsynchronousSocketChannel sc;

  protected org.apache.tomcat.util.net.SocketWrapperBase<org.apache.tomcat.util.net.Nio2Channel> socketWrapper;

  private static final java.util.concurrent.Future<java.lang.Boolean> DONE;

  private org.apache.tomcat.util.net.ApplicationBufferHandler appReadBufHandler;

  private static final java.util.concurrent.Future<java.lang.Integer> DONE_INT;

  static final org.apache.tomcat.util.net.Nio2Channel CLOSED_NIO2_CHANNEL;

  public org.apache.tomcat.util.net.Nio2Channel(org.apache.tomcat.util.net.SocketBufferHandler);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #3                  // Field sc:Ljava/nio/channels/AsynchronousSocketChannel;
       9: aload_0
      10: aconst_null
      11: putfield      #4                  // Field socketWrapper:Lorg/apache/tomcat/util/net/SocketWrapperBase;
      14: aload_0
      15: aload_1
      16: putfield      #5                  // Field bufHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      19: return

  public void reset(java.nio.channels.AsynchronousSocketChannel, org.apache.tomcat.util.net.SocketWrapperBase<org.apache.tomcat.util.net.Nio2Channel>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field sc:Ljava/nio/channels/AsynchronousSocketChannel;
       5: aload_0
       6: aload_2
       7: putfield      #4                  // Field socketWrapper:Lorg/apache/tomcat/util/net/SocketWrapperBase;
      10: aload_0
      11: getfield      #5                  // Field bufHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      14: invokevirtual #6                  // Method org/apache/tomcat/util/net/SocketBufferHandler.reset:()V
      17: return

  public void free();
    Code:
       0: aload_0
       1: getfield      #5                  // Field bufHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
       4: invokevirtual #7                  // Method org/apache/tomcat/util/net/SocketBufferHandler.free:()V
       7: return

  org.apache.tomcat.util.net.SocketWrapperBase<org.apache.tomcat.util.net.Nio2Channel> getSocketWrapper();
    Code:
       0: aload_0
       1: getfield      #4                  // Field socketWrapper:Lorg/apache/tomcat/util/net/SocketWrapperBase;
       4: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field sc:Ljava/nio/channels/AsynchronousSocketChannel;
       4: invokevirtual #8                  // Method java/nio/channels/AsynchronousSocketChannel.close:()V
       7: return

  public void close(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method isOpen:()Z
       4: ifne          11
       7: iload_1
       8: ifeq          15
      11: aload_0
      12: invokevirtual #10                 // Method close:()V
      15: return

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #3                  // Field sc:Ljava/nio/channels/AsynchronousSocketChannel;
       4: invokevirtual #11                 // Method java/nio/channels/AsynchronousSocketChannel.isOpen:()Z
       7: ireturn

  public org.apache.tomcat.util.net.SocketBufferHandler getBufHandler();
    Code:
       0: aload_0
       1: getfield      #5                  // Field bufHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
       4: areturn

  public java.nio.channels.AsynchronousSocketChannel getIOChannel();
    Code:
       0: aload_0
       1: getfield      #3                  // Field sc:Ljava/nio/channels/AsynchronousSocketChannel;
       4: areturn

  public boolean isClosing();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isHandshakeComplete();
    Code:
       0: iconst_1
       1: ireturn

  public int handshake() throws java.io.IOException;
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String toString();
    Code:
       0: new           #12                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokespecial #14                 // Method java/lang/Object.toString:()Ljava/lang/String;
      11: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #16                 // String :
      16: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #3                  // Field sc:Ljava/nio/channels/AsynchronousSocketChannel;
      23: invokevirtual #14                 // Method java/lang/Object.toString:()Ljava/lang/String;
      26: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: areturn

  public java.util.concurrent.Future<java.lang.Integer> read(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getfield      #3                  // Field sc:Ljava/nio/channels/AsynchronousSocketChannel;
       4: aload_1
       5: invokevirtual #18                 // Method java/nio/channels/AsynchronousSocketChannel.read:(Ljava/nio/ByteBuffer;)Ljava/util/concurrent/Future;
       8: areturn

  public <A> void read(java.nio.ByteBuffer, A, java.nio.channels.CompletionHandler<java.lang.Integer, ? super A>);
    Code:
       0: aload_0
       1: aload_1
       2: lconst_0
       3: getstatic     #19                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       6: aload_2
       7: aload_3
       8: invokevirtual #20                 // Method read:(Ljava/nio/ByteBuffer;JLjava/util/concurrent/TimeUnit;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V
      11: return

  public <A> void read(java.nio.ByteBuffer, long, java.util.concurrent.TimeUnit, A, java.nio.channels.CompletionHandler<java.lang.Integer, ? super A>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field sc:Ljava/nio/channels/AsynchronousSocketChannel;
       4: aload_1
       5: lload_2
       6: aload         4
       8: aload         5
      10: aload         6
      12: invokevirtual #21                 // Method java/nio/channels/AsynchronousSocketChannel.read:(Ljava/nio/ByteBuffer;JLjava/util/concurrent/TimeUnit;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V
      15: return

  public <A> void read(java.nio.ByteBuffer[], int, int, long, java.util.concurrent.TimeUnit, A, java.nio.channels.CompletionHandler<java.lang.Long, ? super A>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field sc:Ljava/nio/channels/AsynchronousSocketChannel;
       4: aload_1
       5: iload_2
       6: iload_3
       7: lload         4
       9: aload         6
      11: aload         7
      13: aload         8
      15: invokevirtual #22                 // Method java/nio/channels/AsynchronousSocketChannel.read:([Ljava/nio/ByteBuffer;IIJLjava/util/concurrent/TimeUnit;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V
      18: return

  public java.util.concurrent.Future<java.lang.Integer> write(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getfield      #3                  // Field sc:Ljava/nio/channels/AsynchronousSocketChannel;
       4: aload_1
       5: invokevirtual #23                 // Method java/nio/channels/AsynchronousSocketChannel.write:(Ljava/nio/ByteBuffer;)Ljava/util/concurrent/Future;
       8: areturn

  public <A> void write(java.nio.ByteBuffer, A, java.nio.channels.CompletionHandler<java.lang.Integer, ? super A>);
    Code:
       0: aload_0
       1: aload_1
       2: lconst_0
       3: getstatic     #19                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       6: aload_2
       7: aload_3
       8: invokevirtual #24                 // Method write:(Ljava/nio/ByteBuffer;JLjava/util/concurrent/TimeUnit;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V
      11: return

  public <A> void write(java.nio.ByteBuffer, long, java.util.concurrent.TimeUnit, A, java.nio.channels.CompletionHandler<java.lang.Integer, ? super A>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field sc:Ljava/nio/channels/AsynchronousSocketChannel;
       4: aload_1
       5: lload_2
       6: aload         4
       8: aload         5
      10: aload         6
      12: invokevirtual #25                 // Method java/nio/channels/AsynchronousSocketChannel.write:(Ljava/nio/ByteBuffer;JLjava/util/concurrent/TimeUnit;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V
      15: return

  public <A> void write(java.nio.ByteBuffer[], int, int, long, java.util.concurrent.TimeUnit, A, java.nio.channels.CompletionHandler<java.lang.Long, ? super A>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field sc:Ljava/nio/channels/AsynchronousSocketChannel;
       4: aload_1
       5: iload_2
       6: iload_3
       7: lload         4
       9: aload         6
      11: aload         7
      13: aload         8
      15: invokevirtual #26                 // Method java/nio/channels/AsynchronousSocketChannel.write:([Ljava/nio/ByteBuffer;IIJLjava/util/concurrent/TimeUnit;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V
      18: return

  public java.util.concurrent.Future<java.lang.Boolean> flush();
    Code:
       0: getstatic     #27                 // Field DONE:Ljava/util/concurrent/Future;
       3: areturn

  public void setAppReadBufHandler(org.apache.tomcat.util.net.ApplicationBufferHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field appReadBufHandler:Lorg/apache/tomcat/util/net/ApplicationBufferHandler;
       5: return

  protected org.apache.tomcat.util.net.ApplicationBufferHandler getAppReadBufHandler();
    Code:
       0: aload_0
       1: getfield      #28                 // Field appReadBufHandler:Lorg/apache/tomcat/util/net/ApplicationBufferHandler;
       4: areturn

  static java.util.concurrent.Future access$000();
    Code:
       0: getstatic     #1                  // Field DONE_INT:Ljava/util/concurrent/Future;
       3: areturn

  static {};
    Code:
       0: iconst_0
       1: invokestatic  #29                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
       4: putstatic     #30                 // Field emptyBuf:Ljava/nio/ByteBuffer;
       7: new           #31                 // class org/apache/tomcat/util/net/Nio2Channel$1
      10: dup
      11: invokespecial #32                 // Method org/apache/tomcat/util/net/Nio2Channel$1."<init>":()V
      14: putstatic     #27                 // Field DONE:Ljava/util/concurrent/Future;
      17: new           #33                 // class org/apache/tomcat/util/net/Nio2Channel$2
      20: dup
      21: invokespecial #34                 // Method org/apache/tomcat/util/net/Nio2Channel$2."<init>":()V
      24: putstatic     #1                  // Field DONE_INT:Ljava/util/concurrent/Future;
      27: new           #35                 // class org/apache/tomcat/util/net/Nio2Channel$ClosedNio2Channel
      30: dup
      31: invokespecial #36                 // Method org/apache/tomcat/util/net/Nio2Channel$ClosedNio2Channel."<init>":()V
      34: putstatic     #37                 // Field CLOSED_NIO2_CHANNEL:Lorg/apache/tomcat/util/net/Nio2Channel;
      37: return
}
