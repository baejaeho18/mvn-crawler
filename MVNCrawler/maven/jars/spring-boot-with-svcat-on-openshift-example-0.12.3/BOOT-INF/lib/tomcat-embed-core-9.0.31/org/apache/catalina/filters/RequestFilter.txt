Compiled from "RequestFilter.java"
public abstract class org.apache.catalina.filters.RequestFilter extends org.apache.catalina.filters.FilterBase {
  protected java.util.regex.Pattern allow;

  protected java.util.regex.Pattern deny;

  protected int denyStatus;

  private static final java.lang.String PLAIN_TEXT_MIME_TYPE;

  public org.apache.catalina.filters.RequestFilter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/catalina/filters/FilterBase."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field allow:Ljava/util/regex/Pattern;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field deny:Ljava/util/regex/Pattern;
      14: aload_0
      15: sipush        403
      18: putfield      #5                  // Field denyStatus:I
      21: return

  public java.lang.String getAllow();
    Code:
       0: aload_0
       1: getfield      #2                  // Field allow:Ljava/util/regex/Pattern;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #2                  // Field allow:Ljava/util/regex/Pattern;
      13: invokevirtual #6                  // Method java/util/regex/Pattern.toString:()Ljava/lang/String;
      16: areturn

  public void setAllow(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #7                  // Method java/lang/String.length:()I
       8: ifne          19
      11: aload_0
      12: aconst_null
      13: putfield      #2                  // Field allow:Ljava/util/regex/Pattern;
      16: goto          27
      19: aload_0
      20: aload_1
      21: invokestatic  #8                  // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      24: putfield      #2                  // Field allow:Ljava/util/regex/Pattern;
      27: return

  public java.lang.String getDeny();
    Code:
       0: aload_0
       1: getfield      #3                  // Field deny:Ljava/util/regex/Pattern;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #3                  // Field deny:Ljava/util/regex/Pattern;
      13: invokevirtual #6                  // Method java/util/regex/Pattern.toString:()Ljava/lang/String;
      16: areturn

  public void setDeny(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #7                  // Method java/lang/String.length:()I
       8: ifne          19
      11: aload_0
      12: aconst_null
      13: putfield      #3                  // Field deny:Ljava/util/regex/Pattern;
      16: goto          27
      19: aload_0
      20: aload_1
      21: invokestatic  #8                  // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      24: putfield      #3                  // Field deny:Ljava/util/regex/Pattern;
      27: return

  public int getDenyStatus();
    Code:
       0: aload_0
       1: getfield      #5                  // Field denyStatus:I
       4: ireturn

  public void setDenyStatus(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field denyStatus:I
       5: return

  public abstract void doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain) throws java.io.IOException, javax.servlet.ServletException;

  protected boolean isConfigProblemFatal();
    Code:
       0: iconst_1
       1: ireturn

  protected void process(java.lang.String, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain) throws java.io.IOException, javax.servlet.ServletException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method isAllowed:(Ljava/lang/String;)Z
       5: ifeq          20
       8: aload         4
      10: aload_2
      11: aload_3
      12: invokeinterface #10,  3           // InterfaceMethod javax/servlet/FilterChain.doFilter:(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
      17: goto          97
      20: aload_3
      21: instanceof    #4                  // class javax/servlet/http/HttpServletResponse
      24: ifeq          92
      27: aload_0
      28: invokevirtual #11                 // Method getLogger:()Lorg/apache/juli/logging/Log;
      31: invokeinterface #12,  1           // InterfaceMethod org/apache/juli/logging/Log.isDebugEnabled:()Z
      36: ifeq          76
      39: aload_0
      40: invokevirtual #11                 // Method getLogger:()Lorg/apache/juli/logging/Log;
      43: getstatic     #13                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
      46: ldc           #14                 // String requestFilter.deny
      48: iconst_2
      49: anewarray     #15                 // class java/lang/Object
      52: dup
      53: iconst_0
      54: aload_2
      55: checkcast     #16                 // class javax/servlet/http/HttpServletRequest
      58: invokeinterface #17,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getRequestURI:()Ljava/lang/String;
      63: aastore
      64: dup
      65: iconst_1
      66: aload_1
      67: aastore
      68: invokevirtual #18                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      71: invokeinterface #19,  2           // InterfaceMethod org/apache/juli/logging/Log.debug:(Ljava/lang/Object;)V
      76: aload_3
      77: checkcast     #4                  // class javax/servlet/http/HttpServletResponse
      80: aload_0
      81: getfield      #5                  // Field denyStatus:I
      84: invokeinterface #20,  2           // InterfaceMethod javax/servlet/http/HttpServletResponse.sendError:(I)V
      89: goto          97
      92: aload_0
      93: aload_3
      94: invokespecial #21                 // Method sendErrorWhenNotHttp:(Ljavax/servlet/ServletResponse;)V
      97: return

  private boolean isAllowed(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field deny:Ljava/util/regex/Pattern;
       4: ifnull        23
       7: aload_0
       8: getfield      #3                  // Field deny:Ljava/util/regex/Pattern;
      11: aload_1
      12: invokevirtual #22                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      15: invokevirtual #23                 // Method java/util/regex/Matcher.matches:()Z
      18: ifeq          23
      21: iconst_0
      22: ireturn
      23: aload_0
      24: getfield      #2                  // Field allow:Ljava/util/regex/Pattern;
      27: ifnull        46
      30: aload_0
      31: getfield      #2                  // Field allow:Ljava/util/regex/Pattern;
      34: aload_1
      35: invokevirtual #22                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      38: invokevirtual #23                 // Method java/util/regex/Matcher.matches:()Z
      41: ifeq          46
      44: iconst_1
      45: ireturn
      46: aload_0
      47: getfield      #3                  // Field deny:Ljava/util/regex/Pattern;
      50: ifnull        62
      53: aload_0
      54: getfield      #2                  // Field allow:Ljava/util/regex/Pattern;
      57: ifnonnull     62
      60: iconst_1
      61: ireturn
      62: iconst_0
      63: ireturn

  private void sendErrorWhenNotHttp(javax.servlet.ServletResponse) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #25                 // String text/plain
       3: invokeinterface #26,  2           // InterfaceMethod javax/servlet/ServletResponse.setContentType:(Ljava/lang/String;)V
       8: aload_1
       9: invokeinterface #27,  1           // InterfaceMethod javax/servlet/ServletResponse.getWriter:()Ljava/io/PrintWriter;
      14: getstatic     #13                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
      17: ldc           #28                 // String http.403
      19: invokevirtual #29                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;)Ljava/lang/String;
      22: invokevirtual #30                 // Method java/io/PrintWriter.write:(Ljava/lang/String;)V
      25: aload_1
      26: invokeinterface #27,  1           // InterfaceMethod javax/servlet/ServletResponse.getWriter:()Ljava/io/PrintWriter;
      31: invokevirtual #31                 // Method java/io/PrintWriter.flush:()V
      34: return
}
