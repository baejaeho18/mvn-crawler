Compiled from "AspectJProxyFactory.java"
public class org.springframework.aop.aspectj.annotation.AspectJProxyFactory extends org.springframework.aop.framework.ProxyCreatorSupport {
  private static final java.util.Map<java.lang.Class<?>, java.lang.Object> aspectCache;

  private final org.springframework.aop.aspectj.annotation.AspectJAdvisorFactory aspectFactory;

  public org.springframework.aop.aspectj.annotation.AspectJProxyFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/aop/framework/ProxyCreatorSupport."<init>":()V
       4: aload_0
       5: new           #2                  // class org/springframework/aop/aspectj/annotation/ReflectiveAspectJAdvisorFactory
       8: dup
       9: invokespecial #3                  // Method org/springframework/aop/aspectj/annotation/ReflectiveAspectJAdvisorFactory."<init>":()V
      12: putfield      #4                  // Field aspectFactory:Lorg/springframework/aop/aspectj/annotation/AspectJAdvisorFactory;
      15: return

  public org.springframework.aop.aspectj.annotation.AspectJProxyFactory(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/aop/framework/ProxyCreatorSupport."<init>":()V
       4: aload_0
       5: new           #2                  // class org/springframework/aop/aspectj/annotation/ReflectiveAspectJAdvisorFactory
       8: dup
       9: invokespecial #3                  // Method org/springframework/aop/aspectj/annotation/ReflectiveAspectJAdvisorFactory."<init>":()V
      12: putfield      #4                  // Field aspectFactory:Lorg/springframework/aop/aspectj/annotation/AspectJAdvisorFactory;
      15: aload_1
      16: ldc           #5                  // String Target object must not be null
      18: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_0
      22: aload_1
      23: invokestatic  #7                  // Method org/springframework/util/ClassUtils.getAllInterfaces:(Ljava/lang/Object;)[Ljava/lang/Class;
      26: invokevirtual #8                  // Method setInterfaces:([Ljava/lang/Class;)V
      29: aload_0
      30: aload_1
      31: invokevirtual #9                  // Method setTarget:(Ljava/lang/Object;)V
      34: return

  public org.springframework.aop.aspectj.annotation.AspectJProxyFactory(java.lang.Class<?>...);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/aop/framework/ProxyCreatorSupport."<init>":()V
       4: aload_0
       5: new           #2                  // class org/springframework/aop/aspectj/annotation/ReflectiveAspectJAdvisorFactory
       8: dup
       9: invokespecial #3                  // Method org/springframework/aop/aspectj/annotation/ReflectiveAspectJAdvisorFactory."<init>":()V
      12: putfield      #4                  // Field aspectFactory:Lorg/springframework/aop/aspectj/annotation/AspectJAdvisorFactory;
      15: aload_0
      16: aload_1
      17: invokevirtual #8                  // Method setInterfaces:([Ljava/lang/Class;)V
      20: return

  public void addAspect(java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: astore_2
       5: aload_2
       6: invokevirtual #11                 // Method java/lang/Class.getName:()Ljava/lang/String;
       9: astore_3
      10: aload_0
      11: aload_2
      12: aload_3
      13: invokespecial #12                 // Method createAspectMetadata:(Ljava/lang/Class;Ljava/lang/String;)Lorg/springframework/aop/aspectj/annotation/AspectMetadata;
      16: astore        4
      18: aload         4
      20: invokevirtual #13                 // Method org/springframework/aop/aspectj/annotation/AspectMetadata.getAjType:()Lorg/aspectj/lang/reflect/AjType;
      23: invokeinterface #14,  1           // InterfaceMethod org/aspectj/lang/reflect/AjType.getPerClause:()Lorg/aspectj/lang/reflect/PerClause;
      28: invokeinterface #15,  1           // InterfaceMethod org/aspectj/lang/reflect/PerClause.getKind:()Lorg/aspectj/lang/reflect/PerClauseKind;
      33: getstatic     #16                 // Field org/aspectj/lang/reflect/PerClauseKind.SINGLETON:Lorg/aspectj/lang/reflect/PerClauseKind;
      36: if_acmpeq     74
      39: new           #17                 // class java/lang/IllegalArgumentException
      42: dup
      43: new           #18                 // class java/lang/StringBuilder
      46: dup
      47: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      50: ldc           #20                 // String Aspect class [
      52: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_2
      56: invokevirtual #11                 // Method java/lang/Class.getName:()Ljava/lang/String;
      59: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: ldc           #22                 // String ] does not define a singleton aspect
      64: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: aload_0
      75: new           #25                 // class org/springframework/aop/aspectj/annotation/SingletonMetadataAwareAspectInstanceFactory
      78: dup
      79: aload_1
      80: aload_3
      81: invokespecial #26                 // Method org/springframework/aop/aspectj/annotation/SingletonMetadataAwareAspectInstanceFactory."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
      84: invokespecial #27                 // Method addAdvisorsFromAspectInstanceFactory:(Lorg/springframework/aop/aspectj/annotation/MetadataAwareAspectInstanceFactory;)V
      87: return

  public void addAspect(java.lang.Class<?>);
    Code:
       0: aload_1
       1: invokevirtual #11                 // Method java/lang/Class.getName:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: aload_1
       7: aload_2
       8: invokespecial #12                 // Method createAspectMetadata:(Ljava/lang/Class;Ljava/lang/String;)Lorg/springframework/aop/aspectj/annotation/AspectMetadata;
      11: astore_3
      12: aload_0
      13: aload_3
      14: aload_1
      15: aload_2
      16: invokespecial #28                 // Method createAspectInstanceFactory:(Lorg/springframework/aop/aspectj/annotation/AspectMetadata;Ljava/lang/Class;Ljava/lang/String;)Lorg/springframework/aop/aspectj/annotation/MetadataAwareAspectInstanceFactory;
      19: astore        4
      21: aload_0
      22: aload         4
      24: invokespecial #27                 // Method addAdvisorsFromAspectInstanceFactory:(Lorg/springframework/aop/aspectj/annotation/MetadataAwareAspectInstanceFactory;)V
      27: return

  private void addAdvisorsFromAspectInstanceFactory(org.springframework.aop.aspectj.annotation.MetadataAwareAspectInstanceFactory);
    Code:
       0: aload_0
       1: getfield      #4                  // Field aspectFactory:Lorg/springframework/aop/aspectj/annotation/AspectJAdvisorFactory;
       4: aload_1
       5: invokeinterface #29,  2           // InterfaceMethod org/springframework/aop/aspectj/annotation/AspectJAdvisorFactory.getAdvisors:(Lorg/springframework/aop/aspectj/annotation/MetadataAwareAspectInstanceFactory;)Ljava/util/List;
      10: astore_2
      11: aload_0
      12: invokevirtual #30                 // Method getTargetClass:()Ljava/lang/Class;
      15: astore_3
      16: aload_3
      17: ifnull        24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ldc           #31                 // String Unresolvable target class
      27: invokestatic  #32                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      30: aload_2
      31: aload_3
      32: invokestatic  #33                 // Method org/springframework/aop/support/AopUtils.findAdvisorsThatCanApply:(Ljava/util/List;Ljava/lang/Class;)Ljava/util/List;
      35: astore_2
      36: aload_2
      37: invokestatic  #34                 // Method org/springframework/aop/aspectj/AspectJProxyUtils.makeAdvisorChainAspectJCapableIfNecessary:(Ljava/util/List;)Z
      40: pop
      41: aload_2
      42: invokestatic  #35                 // Method org/springframework/core/annotation/AnnotationAwareOrderComparator.sort:(Ljava/util/List;)V
      45: aload_0
      46: aload_2
      47: invokevirtual #36                 // Method addAdvisors:(Ljava/util/Collection;)V
      50: return

  private org.springframework.aop.aspectj.annotation.AspectMetadata createAspectMetadata(java.lang.Class<?>, java.lang.String);
    Code:
       0: new           #37                 // class org/springframework/aop/aspectj/annotation/AspectMetadata
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #38                 // Method org/springframework/aop/aspectj/annotation/AspectMetadata."<init>":(Ljava/lang/Class;Ljava/lang/String;)V
       9: astore_3
      10: aload_3
      11: invokevirtual #13                 // Method org/springframework/aop/aspectj/annotation/AspectMetadata.getAjType:()Lorg/aspectj/lang/reflect/AjType;
      14: invokeinterface #39,  1           // InterfaceMethod org/aspectj/lang/reflect/AjType.isAspect:()Z
      19: ifne          57
      22: new           #17                 // class java/lang/IllegalArgumentException
      25: dup
      26: new           #18                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #40                 // String Class [
      35: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_1
      39: invokevirtual #11                 // Method java/lang/Class.getName:()Ljava/lang/String;
      42: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: ldc           #41                 // String ] is not a valid aspect type
      47: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: aload_3
      58: areturn

  private org.springframework.aop.aspectj.annotation.MetadataAwareAspectInstanceFactory createAspectInstanceFactory(org.springframework.aop.aspectj.annotation.AspectMetadata, java.lang.Class<?>, java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #13                 // Method org/springframework/aop/aspectj/annotation/AspectMetadata.getAjType:()Lorg/aspectj/lang/reflect/AjType;
       4: invokeinterface #14,  1           // InterfaceMethod org/aspectj/lang/reflect/AjType.getPerClause:()Lorg/aspectj/lang/reflect/PerClause;
       9: invokeinterface #15,  1           // InterfaceMethod org/aspectj/lang/reflect/PerClause.getKind:()Lorg/aspectj/lang/reflect/PerClauseKind;
      14: getstatic     #16                 // Field org/aspectj/lang/reflect/PerClauseKind.SINGLETON:Lorg/aspectj/lang/reflect/PerClauseKind;
      17: if_acmpne     42
      20: aload_0
      21: aload_2
      22: invokespecial #42                 // Method getSingletonAspectInstance:(Ljava/lang/Class;)Ljava/lang/Object;
      25: astore        5
      27: new           #25                 // class org/springframework/aop/aspectj/annotation/SingletonMetadataAwareAspectInstanceFactory
      30: dup
      31: aload         5
      33: aload_3
      34: invokespecial #26                 // Method org/springframework/aop/aspectj/annotation/SingletonMetadataAwareAspectInstanceFactory."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
      37: astore        4
      39: goto          53
      42: new           #43                 // class org/springframework/aop/aspectj/annotation/SimpleMetadataAwareAspectInstanceFactory
      45: dup
      46: aload_2
      47: aload_3
      48: invokespecial #44                 // Method org/springframework/aop/aspectj/annotation/SimpleMetadataAwareAspectInstanceFactory."<init>":(Ljava/lang/Class;Ljava/lang/String;)V
      51: astore        4
      53: aload         4
      55: areturn

  private java.lang.Object getSingletonAspectInstance(java.lang.Class<?>);
    Code:
       0: getstatic     #45                 // Field aspectCache:Ljava/util/Map;
       3: aload_1
       4: invokeinterface #46,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: astore_2
      10: aload_2
      11: ifnonnull     69
      14: getstatic     #45                 // Field aspectCache:Ljava/util/Map;
      17: dup
      18: astore_3
      19: monitorenter
      20: getstatic     #45                 // Field aspectCache:Ljava/util/Map;
      23: aload_1
      24: invokeinterface #46,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      29: astore_2
      30: aload_2
      31: ifnonnull     57
      34: new           #47                 // class org/springframework/aop/aspectj/SimpleAspectInstanceFactory
      37: dup
      38: aload_1
      39: invokespecial #48                 // Method org/springframework/aop/aspectj/SimpleAspectInstanceFactory."<init>":(Ljava/lang/Class;)V
      42: invokevirtual #49                 // Method org/springframework/aop/aspectj/SimpleAspectInstanceFactory.getAspectInstance:()Ljava/lang/Object;
      45: astore_2
      46: getstatic     #45                 // Field aspectCache:Ljava/util/Map;
      49: aload_1
      50: aload_2
      51: invokeinterface #50,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      56: pop
      57: aload_3
      58: monitorexit
      59: goto          69
      62: astore        4
      64: aload_3
      65: monitorexit
      66: aload         4
      68: athrow
      69: aload_2
      70: areturn
    Exception table:
       from    to  target type
          20    59    62   any
          62    66    62   any

  public <T> T getProxy();
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method createAopProxy:()Lorg/springframework/aop/framework/AopProxy;
       4: invokeinterface #52,  1           // InterfaceMethod org/springframework/aop/framework/AopProxy.getProxy:()Ljava/lang/Object;
       9: areturn

  public <T> T getProxy(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method createAopProxy:()Lorg/springframework/aop/framework/AopProxy;
       4: aload_1
       5: invokeinterface #53,  2           // InterfaceMethod org/springframework/aop/framework/AopProxy.getProxy:(Ljava/lang/ClassLoader;)Ljava/lang/Object;
      10: areturn

  static {};
    Code:
       0: new           #54                 // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: invokespecial #55                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       7: putstatic     #45                 // Field aspectCache:Ljava/util/Map;
      10: return
}
