Compiled from "MethodInvocationProceedingJoinPoint.java"
class org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint$MethodSignatureImpl implements org.aspectj.lang.reflect.MethodSignature {
  private volatile java.lang.String[] parameterNames;

  final org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint this$0;

  private org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint$MethodSignatureImpl(org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/springframework/aop/aspectj/MethodInvocationProceedingJoinPoint;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/springframework/aop/aspectj/MethodInvocationProceedingJoinPoint;
       4: invokestatic  #4                  // Method org/springframework/aop/aspectj/MethodInvocationProceedingJoinPoint.access$200:(Lorg/springframework/aop/aspectj/MethodInvocationProceedingJoinPoint;)Lorg/springframework/aop/ProxyMethodInvocation;
       7: invokeinterface #5,  1            // InterfaceMethod org/springframework/aop/ProxyMethodInvocation.getMethod:()Ljava/lang/reflect/Method;
      12: invokevirtual #6                  // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
      15: areturn

  public int getModifiers();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/springframework/aop/aspectj/MethodInvocationProceedingJoinPoint;
       4: invokestatic  #4                  // Method org/springframework/aop/aspectj/MethodInvocationProceedingJoinPoint.access$200:(Lorg/springframework/aop/aspectj/MethodInvocationProceedingJoinPoint;)Lorg/springframework/aop/ProxyMethodInvocation;
       7: invokeinterface #5,  1            // InterfaceMethod org/springframework/aop/ProxyMethodInvocation.getMethod:()Ljava/lang/reflect/Method;
      12: invokevirtual #7                  // Method java/lang/reflect/Method.getModifiers:()I
      15: ireturn

  public java.lang.Class<?> getDeclaringType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/springframework/aop/aspectj/MethodInvocationProceedingJoinPoint;
       4: invokestatic  #4                  // Method org/springframework/aop/aspectj/MethodInvocationProceedingJoinPoint.access$200:(Lorg/springframework/aop/aspectj/MethodInvocationProceedingJoinPoint;)Lorg/springframework/aop/ProxyMethodInvocation;
       7: invokeinterface #5,  1            // InterfaceMethod org/springframework/aop/ProxyMethodInvocation.getMethod:()Ljava/lang/reflect/Method;
      12: invokevirtual #8                  // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
      15: areturn

  public java.lang.String getDeclaringTypeName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/springframework/aop/aspectj/MethodInvocationProceedingJoinPoint;
       4: invokestatic  #4                  // Method org/springframework/aop/aspectj/MethodInvocationProceedingJoinPoint.access$200:(Lorg/springframework/aop/aspectj/MethodInvocationProceedingJoinPoint;)Lorg/springframework/aop/ProxyMethodInvocation;
       7: invokeinterface #5,  1            // InterfaceMethod org/springframework/aop/ProxyMethodInvocation.getMethod:()Ljava/lang/reflect/Method;
      12: invokevirtual #8                  // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
      15: invokevirtual #9                  // Method java/lang/Class.getName:()Ljava/lang/String;
      18: areturn

  public java.lang.Class<?> getReturnType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/springframework/aop/aspectj/MethodInvocationProceedingJoinPoint;
       4: invokestatic  #4                  // Method org/springframework/aop/aspectj/MethodInvocationProceedingJoinPoint.access$200:(Lorg/springframework/aop/aspectj/MethodInvocationProceedingJoinPoint;)Lorg/springframework/aop/ProxyMethodInvocation;
       7: invokeinterface #5,  1            // InterfaceMethod org/springframework/aop/ProxyMethodInvocation.getMethod:()Ljava/lang/reflect/Method;
      12: invokevirtual #10                 // Method java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;
      15: areturn

  public java.lang.reflect.Method getMethod();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/springframework/aop/aspectj/MethodInvocationProceedingJoinPoint;
       4: invokestatic  #4                  // Method org/springframework/aop/aspectj/MethodInvocationProceedingJoinPoint.access$200:(Lorg/springframework/aop/aspectj/MethodInvocationProceedingJoinPoint;)Lorg/springframework/aop/ProxyMethodInvocation;
       7: invokeinterface #5,  1            // InterfaceMethod org/springframework/aop/ProxyMethodInvocation.getMethod:()Ljava/lang/reflect/Method;
      12: areturn

  public java.lang.Class<?>[] getParameterTypes();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/springframework/aop/aspectj/MethodInvocationProceedingJoinPoint;
       4: invokestatic  #4                  // Method org/springframework/aop/aspectj/MethodInvocationProceedingJoinPoint.access$200:(Lorg/springframework/aop/aspectj/MethodInvocationProceedingJoinPoint;)Lorg/springframework/aop/ProxyMethodInvocation;
       7: invokeinterface #5,  1            // InterfaceMethod org/springframework/aop/ProxyMethodInvocation.getMethod:()Ljava/lang/reflect/Method;
      12: invokevirtual #11                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      15: areturn

  public java.lang.String[] getParameterNames();
    Code:
       0: aload_0
       1: getfield      #12                 // Field parameterNames:[Ljava/lang/String;
       4: ifnonnull     23
       7: aload_0
       8: invokestatic  #13                 // Method org/springframework/aop/aspectj/MethodInvocationProceedingJoinPoint.access$300:()Lorg/springframework/core/ParameterNameDiscoverer;
      11: aload_0
      12: invokevirtual #14                 // Method getMethod:()Ljava/lang/reflect/Method;
      15: invokeinterface #15,  2           // InterfaceMethod org/springframework/core/ParameterNameDiscoverer.getParameterNames:(Ljava/lang/reflect/Method;)[Ljava/lang/String;
      20: putfield      #12                 // Field parameterNames:[Ljava/lang/String;
      23: aload_0
      24: getfield      #12                 // Field parameterNames:[Ljava/lang/String;
      27: areturn

  public java.lang.Class<?>[] getExceptionTypes();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/springframework/aop/aspectj/MethodInvocationProceedingJoinPoint;
       4: invokestatic  #4                  // Method org/springframework/aop/aspectj/MethodInvocationProceedingJoinPoint.access$200:(Lorg/springframework/aop/aspectj/MethodInvocationProceedingJoinPoint;)Lorg/springframework/aop/ProxyMethodInvocation;
       7: invokeinterface #5,  1            // InterfaceMethod org/springframework/aop/ProxyMethodInvocation.getMethod:()Ljava/lang/reflect/Method;
      12: invokevirtual #16                 // Method java/lang/reflect/Method.getExceptionTypes:()[Ljava/lang/Class;
      15: areturn

  public java.lang.String toShortString();
    Code:
       0: aload_0
       1: iconst_0
       2: iconst_0
       3: iconst_0
       4: iconst_0
       5: invokespecial #17                 // Method toString:(ZZZZ)Ljava/lang/String;
       8: areturn

  public java.lang.String toLongString();
    Code:
       0: aload_0
       1: iconst_1
       2: iconst_1
       3: iconst_1
       4: iconst_1
       5: invokespecial #17                 // Method toString:(ZZZZ)Ljava/lang/String;
       8: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: iconst_0
       2: iconst_1
       3: iconst_0
       4: iconst_1
       5: invokespecial #17                 // Method toString:(ZZZZ)Ljava/lang/String;
       8: areturn

  private java.lang.String toString(boolean, boolean, boolean, boolean);
    Code:
       0: new           #18                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
       7: astore        5
       9: iload_1
      10: ifeq          34
      13: aload         5
      15: aload_0
      16: invokevirtual #20                 // Method getModifiers:()I
      19: invokestatic  #21                 // Method java/lang/reflect/Modifier.toString:(I)Ljava/lang/String;
      22: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: pop
      26: aload         5
      28: ldc           #23                 // String
      30: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: pop
      34: iload_2
      35: ifeq          57
      38: aload_0
      39: aload         5
      41: aload_0
      42: invokevirtual #24                 // Method getReturnType:()Ljava/lang/Class;
      45: iload_3
      46: invokespecial #25                 // Method appendType:(Ljava/lang/StringBuilder;Ljava/lang/Class;Z)V
      49: aload         5
      51: ldc           #23                 // String
      53: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: pop
      57: aload_0
      58: aload         5
      60: aload_0
      61: invokevirtual #26                 // Method getDeclaringType:()Ljava/lang/Class;
      64: iload         4
      66: invokespecial #25                 // Method appendType:(Ljava/lang/StringBuilder;Ljava/lang/Class;Z)V
      69: aload         5
      71: ldc           #27                 // String .
      73: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: pop
      77: aload         5
      79: aload_0
      80: invokevirtual #14                 // Method getMethod:()Ljava/lang/reflect/Method;
      83: invokevirtual #6                  // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
      86: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: pop
      90: aload         5
      92: ldc           #28                 // String (
      94: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: pop
      98: aload_0
      99: invokevirtual #29                 // Method getParameterTypes:()[Ljava/lang/Class;
     102: astore        6
     104: aload_0
     105: aload         5
     107: aload         6
     109: iload_2
     110: iload_3
     111: invokespecial #30                 // Method appendTypes:(Ljava/lang/StringBuilder;[Ljava/lang/Class;ZZ)V
     114: aload         5
     116: ldc           #31                 // String )
     118: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: pop
     122: aload         5
     124: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     127: areturn

  private void appendTypes(java.lang.StringBuilder, java.lang.Class<?>[], boolean, boolean);
    Code:
       0: iload_3
       1: ifeq          54
       4: aload_2
       5: arraylength
       6: istore        5
       8: iconst_0
       9: istore        6
      11: iload         6
      13: iload         5
      15: if_icmpge     51
      18: aload_0
      19: aload_1
      20: aload_2
      21: iload         6
      23: aaload
      24: iload         4
      26: invokespecial #25                 // Method appendType:(Ljava/lang/StringBuilder;Ljava/lang/Class;Z)V
      29: iload         6
      31: iload         5
      33: iconst_1
      34: isub
      35: if_icmpge     45
      38: aload_1
      39: ldc           #33                 // String ,
      41: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: pop
      45: iinc          6, 1
      48: goto          11
      51: goto          66
      54: aload_2
      55: arraylength
      56: ifeq          66
      59: aload_1
      60: ldc           #34                 // String ..
      62: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: pop
      66: return

  private void appendType(java.lang.StringBuilder, java.lang.Class<?>, boolean);
    Code:
       0: aload_2
       1: invokevirtual #35                 // Method java/lang/Class.isArray:()Z
       4: ifeq          27
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokevirtual #36                 // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
      13: iload_3
      14: invokespecial #25                 // Method appendType:(Ljava/lang/StringBuilder;Ljava/lang/Class;Z)V
      17: aload_1
      18: ldc           #37                 // String []
      20: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: pop
      24: goto          47
      27: aload_1
      28: iload_3
      29: ifeq          39
      32: aload_2
      33: invokevirtual #9                  // Method java/lang/Class.getName:()Ljava/lang/String;
      36: goto          43
      39: aload_2
      40: invokevirtual #38                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      43: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: pop
      47: return

  org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint$MethodSignatureImpl(org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint, org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/springframework/aop/aspectj/MethodInvocationProceedingJoinPoint;)V
       5: return
}
