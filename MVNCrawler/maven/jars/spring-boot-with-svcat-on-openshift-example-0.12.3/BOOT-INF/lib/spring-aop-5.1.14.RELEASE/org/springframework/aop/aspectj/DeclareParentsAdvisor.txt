Compiled from "DeclareParentsAdvisor.java"
public class org.springframework.aop.aspectj.DeclareParentsAdvisor implements org.springframework.aop.IntroductionAdvisor {
  private final org.aopalliance.aop.Advice advice;

  private final java.lang.Class<?> introducedInterface;

  private final org.springframework.aop.ClassFilter typePatternClassFilter;

  public org.springframework.aop.aspectj.DeclareParentsAdvisor(java.lang.Class<?>, java.lang.String, java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: new           #1                  // class org/springframework/aop/support/DelegatePerTargetObjectIntroductionInterceptor
       6: dup
       7: aload_3
       8: aload_1
       9: invokespecial #2                  // Method org/springframework/aop/support/DelegatePerTargetObjectIntroductionInterceptor."<init>":(Ljava/lang/Class;Ljava/lang/Class;)V
      12: invokespecial #3                  // Method "<init>":(Ljava/lang/Class;Ljava/lang/String;Lorg/springframework/aop/IntroductionInterceptor;)V
      15: return

  public org.springframework.aop.aspectj.DeclareParentsAdvisor(java.lang.Class<?>, java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: new           #4                  // class org/springframework/aop/support/DelegatingIntroductionInterceptor
       6: dup
       7: aload_3
       8: invokespecial #5                  // Method org/springframework/aop/support/DelegatingIntroductionInterceptor."<init>":(Ljava/lang/Object;)V
      11: invokespecial #3                  // Method "<init>":(Ljava/lang/Class;Ljava/lang/String;Lorg/springframework/aop/IntroductionInterceptor;)V
      14: return

  private org.springframework.aop.aspectj.DeclareParentsAdvisor(java.lang.Class<?>, java.lang.String, org.springframework.aop.IntroductionInterceptor);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_3
       6: putfield      #7                  // Field advice:Lorg/aopalliance/aop/Advice;
       9: aload_0
      10: aload_1
      11: putfield      #8                  // Field introducedInterface:Ljava/lang/Class;
      14: new           #9                  // class org/springframework/aop/aspectj/TypePatternClassFilter
      17: dup
      18: aload_2
      19: invokespecial #10                 // Method org/springframework/aop/aspectj/TypePatternClassFilter."<init>":(Ljava/lang/String;)V
      22: astore        4
      24: aload_0
      25: invokedynamic #11,  0             // InvokeDynamic #0:matches:(Lorg/springframework/aop/aspectj/DeclareParentsAdvisor;)Lorg/springframework/aop/ClassFilter;
      30: astore        5
      32: aload_0
      33: aload         4
      35: aload         5
      37: invokestatic  #12                 // Method org/springframework/aop/support/ClassFilters.intersection:(Lorg/springframework/aop/ClassFilter;Lorg/springframework/aop/ClassFilter;)Lorg/springframework/aop/ClassFilter;
      40: putfield      #13                 // Field typePatternClassFilter:Lorg/springframework/aop/ClassFilter;
      43: return

  public org.springframework.aop.ClassFilter getClassFilter();
    Code:
       0: aload_0
       1: getfield      #13                 // Field typePatternClassFilter:Lorg/springframework/aop/ClassFilter;
       4: areturn

  public void validateInterfaces() throws java.lang.IllegalArgumentException;
    Code:
       0: return

  public boolean isPerInstance();
    Code:
       0: iconst_1
       1: ireturn

  public org.aopalliance.aop.Advice getAdvice();
    Code:
       0: aload_0
       1: getfield      #7                  // Field advice:Lorg/aopalliance/aop/Advice;
       4: areturn

  public java.lang.Class<?>[] getInterfaces();
    Code:
       0: iconst_1
       1: anewarray     #14                 // class java/lang/Class
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #8                  // Field introducedInterface:Ljava/lang/Class;
      10: aastore
      11: areturn

  private boolean lambda$new$0(java.lang.Class);
    Code:
       0: aload_0
       1: getfield      #8                  // Field introducedInterface:Ljava/lang/Class;
       4: aload_1
       5: invokevirtual #15                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn
}
