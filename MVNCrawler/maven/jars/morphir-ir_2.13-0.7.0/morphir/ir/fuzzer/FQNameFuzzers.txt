Compiled from "FQNameFuzzers.scala"
public interface morphir.ir.fuzzer.FQNameFuzzers {
  public static zio.test.Gen fuzzFQName$(morphir.ir.fuzzer.FQNameFuzzers, zio.test.Gen, zio.test.Gen);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #35                 // InterfaceMethod fuzzFQName:(Lzio/test/Gen;Lzio/test/Gen;)Lzio/test/Gen;
       6: areturn

  public default zio.test.Gen<zio.Has<zio.random.package$Random$Service>, morphir.ir.FQName> fuzzFQName(zio.test.Gen<zio.Has<zio.random.package$Random$Service>, java.lang.Object>, zio.test.Gen<zio.Has<zio.random.package$Random$Service>, morphir.ir.name$Name>);
    Code:
       0: aload_1
       1: aload_1
       2: aload_2
       3: invokedynamic #60,  0             // InvokeDynamic #0:apply:(Lzio/test/Gen;Lzio/test/Gen;)Lscala/Function1;
       8: invokevirtual #66                 // Method zio/test/Gen.flatMap:(Lscala/Function1;)Lzio/test/Gen;
      11: areturn

  public static morphir.ir.FQName $anonfun$fuzzFQName$3(java.lang.Object, java.lang.Object, scala.collection.immutable.List);
    Code:
       0: new           #74                 // class morphir/ir/FQName
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #78                 // Method morphir/ir/FQName."<init>":(Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/immutable/List;)V
      10: areturn

  public static zio.test.Gen $anonfun$fuzzFQName$2(zio.test.Gen, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #94,  0             // InvokeDynamic #1:apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Function1;
       8: invokevirtual #97                 // Method zio/test/Gen.map:(Lscala/Function1;)Lzio/test/Gen;
      11: areturn

  public static zio.test.Gen $anonfun$fuzzFQName$1(zio.test.Gen, zio.test.Gen, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #105,  0            // InvokeDynamic #2:apply:(Lzio/test/Gen;Ljava/lang/Object;)Lscala/Function1;
       8: invokevirtual #66                 // Method zio/test/Gen.flatMap:(Lscala/Function1;)Lzio/test/Gen;
      11: areturn

  public static void $init$(morphir.ir.fuzzer.FQNameFuzzers);
    Code:
       0: return

  public static morphir.ir.FQName $anonfun$fuzzFQName$3$adapted(java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #15                 // class morphir/ir/name$Name
       6: invokevirtual #111                // Method morphir/ir/name$Name.value:()Lscala/collection/immutable/List;
       9: invokestatic  #113                // InterfaceMethod $anonfun$fuzzFQName$3:(Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/immutable/List;)Lmorphir/ir/FQName;
      12: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #125,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
