Compiled from "recursions.scala"
public final class morphir.ir.recursions$TypeMapperRec<A, B, C, D> implements scala.Function1<morphir.ir.recursions$TypeCase<morphir.ir.recursions$Type<A>, B>, morphir.ir.recursions$TypeCase<morphir.ir.recursions$Type<C>, D>>, scala.Product, java.io.Serializable {
  private final scala.Function1<morphir.ir.recursions$TypeCase<morphir.ir.recursions$Type<A>, B>, morphir.ir.recursions$TypeCase<morphir.ir.recursions$Type<C>, D>> fn;

  public scala.collection.Iterator<java.lang.String> productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #31                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public boolean apply$mcZD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #40                 // InterfaceMethod scala/Function1.apply$mcZD$sp$:(Lscala/Function1;D)Z
       5: ireturn

  public double apply$mcDD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #47                 // InterfaceMethod scala/Function1.apply$mcDD$sp$:(Lscala/Function1;D)D
       5: dreturn

  public float apply$mcFD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #53                 // InterfaceMethod scala/Function1.apply$mcFD$sp$:(Lscala/Function1;D)F
       5: freturn

  public int apply$mcID$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #59                 // InterfaceMethod scala/Function1.apply$mcID$sp$:(Lscala/Function1;D)I
       5: ireturn

  public long apply$mcJD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #65                 // InterfaceMethod scala/Function1.apply$mcJD$sp$:(Lscala/Function1;D)J
       5: lreturn

  public void apply$mcVD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #71                 // InterfaceMethod scala/Function1.apply$mcVD$sp$:(Lscala/Function1;D)V
       5: return

  public boolean apply$mcZF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #77                 // InterfaceMethod scala/Function1.apply$mcZF$sp$:(Lscala/Function1;F)Z
       5: ireturn

  public double apply$mcDF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #84                 // InterfaceMethod scala/Function1.apply$mcDF$sp$:(Lscala/Function1;F)D
       5: dreturn

  public float apply$mcFF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #90                 // InterfaceMethod scala/Function1.apply$mcFF$sp$:(Lscala/Function1;F)F
       5: freturn

  public int apply$mcIF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #96                 // InterfaceMethod scala/Function1.apply$mcIF$sp$:(Lscala/Function1;F)I
       5: ireturn

  public long apply$mcJF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #102                // InterfaceMethod scala/Function1.apply$mcJF$sp$:(Lscala/Function1;F)J
       5: lreturn

  public void apply$mcVF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #108                // InterfaceMethod scala/Function1.apply$mcVF$sp$:(Lscala/Function1;F)V
       5: return

  public boolean apply$mcZI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #114                // InterfaceMethod scala/Function1.apply$mcZI$sp$:(Lscala/Function1;I)Z
       5: ireturn

  public double apply$mcDI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #121                // InterfaceMethod scala/Function1.apply$mcDI$sp$:(Lscala/Function1;I)D
       5: dreturn

  public float apply$mcFI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #127                // InterfaceMethod scala/Function1.apply$mcFI$sp$:(Lscala/Function1;I)F
       5: freturn

  public int apply$mcII$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #133                // InterfaceMethod scala/Function1.apply$mcII$sp$:(Lscala/Function1;I)I
       5: ireturn

  public long apply$mcJI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #139                // InterfaceMethod scala/Function1.apply$mcJI$sp$:(Lscala/Function1;I)J
       5: lreturn

  public void apply$mcVI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #145                // InterfaceMethod scala/Function1.apply$mcVI$sp$:(Lscala/Function1;I)V
       5: return

  public boolean apply$mcZJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #151                // InterfaceMethod scala/Function1.apply$mcZJ$sp$:(Lscala/Function1;J)Z
       5: ireturn

  public double apply$mcDJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #158                // InterfaceMethod scala/Function1.apply$mcDJ$sp$:(Lscala/Function1;J)D
       5: dreturn

  public float apply$mcFJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #164                // InterfaceMethod scala/Function1.apply$mcFJ$sp$:(Lscala/Function1;J)F
       5: freturn

  public int apply$mcIJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #170                // InterfaceMethod scala/Function1.apply$mcIJ$sp$:(Lscala/Function1;J)I
       5: ireturn

  public long apply$mcJJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #176                // InterfaceMethod scala/Function1.apply$mcJJ$sp$:(Lscala/Function1;J)J
       5: lreturn

  public void apply$mcVJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #182                // InterfaceMethod scala/Function1.apply$mcVJ$sp$:(Lscala/Function1;J)V
       5: return

  public <A$> scala.Function1<A$, morphir.ir.recursions$TypeCase<morphir.ir.recursions$Type<C>, D>> compose(scala.Function1<A$, morphir.ir.recursions$TypeCase<morphir.ir.recursions$Type<A>, B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #190                // InterfaceMethod scala/Function1.compose$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public <A$> scala.Function1<morphir.ir.recursions$TypeCase<morphir.ir.recursions$Type<A>, B>, A$> andThen(scala.Function1<morphir.ir.recursions$TypeCase<morphir.ir.recursions$Type<C>, D>, A$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #195                // InterfaceMethod scala/Function1.andThen$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #201                // InterfaceMethod scala/Function1.toString$:(Lscala/Function1;)Ljava/lang/String;
       4: areturn

  public scala.Function1<morphir.ir.recursions$TypeCase<morphir.ir.recursions$Type<A>, B>, morphir.ir.recursions$TypeCase<morphir.ir.recursions$Type<C>, D>> fn();
    Code:
       0: aload_0
       1: getfield      #205                // Field fn:Lscala/Function1;
       4: areturn

  public morphir.ir.recursions$TypeCase<morphir.ir.recursions$Type<C>, D> apply(morphir.ir.recursions$TypeCase<morphir.ir.recursions$Type<A>, B>);
    Code:
       0: aload_0
       1: invokevirtual #210                // Method fn:()Lscala/Function1;
       4: aload_1
       5: invokeinterface #213,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #19                 // class morphir/ir/recursions$TypeCase
      13: areturn

  public <A, B, C, D> morphir.ir.recursions$TypeMapperRec<A, B, C, D> copy(scala.Function1<morphir.ir.recursions$TypeCase<morphir.ir.recursions$Type<A>, B>, morphir.ir.recursions$TypeCase<morphir.ir.recursions$Type<C>, D>>);
    Code:
       0: new           #2                  // class morphir/ir/recursions$TypeMapperRec
       3: dup
       4: aload_1
       5: invokespecial #221                // Method "<init>":(Lscala/Function1;)V
       8: areturn

  public <A, B, C, D> scala.Function1<morphir.ir.recursions$TypeCase<morphir.ir.recursions$Type<A>, B>, morphir.ir.recursions$TypeCase<morphir.ir.recursions$Type<C>, D>> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #210                // Method fn:()Lscala/Function1;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #225                // String TypeMapperRec
       2: areturn

  public int productArity();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 0
                     0: 20
               default: 27
          }
      20: aload_0
      21: invokevirtual #210                // Method fn:()Lscala/Function1;
      24: goto          34
      27: iload_1
      28: invokestatic  #235                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
      31: goto          34
      34: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #243                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #246                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class morphir/ir/recursions$TypeMapperRec
       4: ireturn

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 0
                     0: 20
               default: 25
          }
      20: ldc           #252                // String fn
      22: goto          35
      25: iload_1
      26: invokestatic  #235                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
      29: checkcast     #254                // class java/lang/String
      32: goto          35
      35: areturn

  public int hashCode();
    Code:
       0: getstatic     #243                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #259                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     77
       5: aload_1
       6: astore_3
       7: aload_3
       8: instanceof    #2                  // class morphir/ir/recursions$TypeMapperRec
      11: ifeq          19
      14: iconst_1
      15: istore_2
      16: goto          27
      19: goto          22
      22: iconst_0
      23: istore_2
      24: goto          27
      27: iload_2
      28: ifeq          81
      31: aload_1
      32: checkcast     #2                  // class morphir/ir/recursions$TypeMapperRec
      35: astore        4
      37: aload_0
      38: invokevirtual #210                // Method fn:()Lscala/Function1;
      41: aload         4
      43: invokevirtual #210                // Method fn:()Lscala/Function1;
      46: astore        5
      48: dup
      49: ifnonnull     61
      52: pop
      53: aload         5
      55: ifnull        69
      58: goto          73
      61: aload         5
      63: invokevirtual #262                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      66: ifeq          73
      69: iconst_1
      70: goto          74
      73: iconst_0
      74: ifeq          81
      77: iconst_1
      78: goto          82
      81: iconst_0
      82: ireturn

  public java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #19                 // class morphir/ir/recursions$TypeCase
       5: invokevirtual #264                // Method apply:(Lmorphir/ir/recursions$TypeCase;)Lmorphir/ir/recursions$TypeCase;
       8: areturn

  public morphir.ir.recursions$TypeMapperRec(scala.Function1<morphir.ir.recursions$TypeCase<morphir.ir.recursions$Type<A>, B>, morphir.ir.recursions$TypeCase<morphir.ir.recursions$Type<C>, D>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #205                // Field fn:Lscala/Function1;
       5: aload_0
       6: invokespecial #268                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #271                // InterfaceMethod scala/Function1.$init$:(Lscala/Function1;)V
      13: aload_0
      14: invokestatic  #274                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
      17: return
}
