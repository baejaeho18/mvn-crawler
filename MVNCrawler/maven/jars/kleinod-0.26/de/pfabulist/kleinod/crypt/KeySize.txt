Compiled from "KeySize.java"
public class de.pfabulist.kleinod.crypt.KeySize {
  private static final java.util.logging.Logger LOG;

  private de.pfabulist.kleinod.crypt.KeySize();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static int get(java.lang.String);
    Code:
       0: sipush        256
       3: aload_0
       4: invokestatic  #2                  // Method javax/crypto/Cipher.getMaxAllowedKeyLength:(Ljava/lang/String;)I
       7: invokestatic  #3                  // Method java/lang/Math.min:(II)I
      10: ireturn
      11: astore_1
      12: getstatic     #5                  // Field LOG:Ljava/util/logging/Logger;
      15: ldc           #6                  // String unlimited strength libs missing from java, key is only 128 bits
      17: invokevirtual #7                  // Method java/util/logging/Logger.warning:(Ljava/lang/String;)V
      20: sipush        128
      23: ireturn
    Exception table:
       from    to  target type
           0    10    11   Class java/security/NoSuchAlgorithmException

  public static int getAES_CBC_PKCS5Padding();
    Code:
       0: ldc           #8                  // String AES/CBC/PKCS5Padding
       2: invokestatic  #9                  // Method get:(Ljava/lang/String;)I
       5: ireturn

  static {};
    Code:
       0: ldc           #10                 // class de/pfabulist/kleinod/crypt/KeySize
       2: invokevirtual #11                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #12                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #5                  // Field LOG:Ljava/util/logging/Logger;
      11: return
}
