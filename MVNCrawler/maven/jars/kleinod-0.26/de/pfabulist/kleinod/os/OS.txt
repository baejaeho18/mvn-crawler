Compiled from "OS.java"
public class de.pfabulist.kleinod.os.OS {
  private static final java.util.regex.Pattern UNIX_PATTERN;

  private final java.lang.String osName;

  public static final de.pfabulist.kleinod.os.OS UNIX;

  public static final de.pfabulist.kleinod.os.OS WINDOWS;

  public static final de.pfabulist.kleinod.os.OS OSX;

  public de.pfabulist.kleinod.os.OS();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #2                  // String os.name
       7: invokestatic  #3                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      10: putfield      #4                  // Field osName:Ljava/lang/String;
      13: return

  de.pfabulist.kleinod.os.OS(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field osName:Ljava/lang/String;
       9: return

  public boolean isWindows();
    Code:
       0: aload_0
       1: getfield      #4                  // Field osName:Ljava/lang/String;
       4: ldc           #5                  // String Windows
       6: invokevirtual #6                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       9: ireturn

  public boolean isWindowsVistaPlus();
    Code:
       0: ldc           #7                  // String Windows Vista
       2: aload_0
       3: getfield      #4                  // Field osName:Ljava/lang/String;
       6: invokevirtual #8                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifne          24
      12: ldc           #9                  // String Windows 7
      14: aload_0
      15: getfield      #4                  // Field osName:Ljava/lang/String;
      18: invokevirtual #8                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public boolean isLinux();
    Code:
       0: aload_0
       1: getfield      #4                  // Field osName:Ljava/lang/String;
       4: ldc           #10                 // String Linux
       6: invokevirtual #6                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       9: ireturn

  public boolean isOSX();
    Code:
       0: aload_0
       1: getfield      #4                  // Field osName:Ljava/lang/String;
       4: ldc           #11                 // String Mac OS X
       6: invokevirtual #6                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       9: ireturn

  public boolean isUnix();
    Code:
       0: aload_0
       1: getfield      #4                  // Field osName:Ljava/lang/String;
       4: ldc           #12                 // String nux
       6: invokevirtual #13                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
       9: ifne          52
      12: aload_0
      13: getfield      #4                  // Field osName:Ljava/lang/String;
      16: ldc           #14                 // String nix
      18: invokevirtual #13                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      21: ifne          52
      24: aload_0
      25: getfield      #4                  // Field osName:Ljava/lang/String;
      28: ldc           #15                 // String BSD
      30: invokevirtual #13                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      33: ifne          52
      36: getstatic     #16                 // Field UNIX_PATTERN:Ljava/util/regex/Pattern;
      39: aload_0
      40: getfield      #4                  // Field osName:Ljava/lang/String;
      43: invokevirtual #17                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      46: invokevirtual #18                 // Method java/util/regex/Matcher.matches:()Z
      49: ifeq          56
      52: iconst_1
      53: goto          57
      56: iconst_0
      57: ireturn

  static {};
    Code:
       0: ldc           #19                 // String Mac OS X|Mac OS X Server|AIX|FreeBSD|HP UX|Irix|Solaris|HP-UX|SunOS|OSF1
       2: invokestatic  #20                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #16                 // Field UNIX_PATTERN:Ljava/util/regex/Pattern;
       8: new           #21                 // class de/pfabulist/kleinod/os/OS
      11: dup
      12: ldc           #22                 // String unix
      14: invokespecial #23                 // Method "<init>":(Ljava/lang/String;)V
      17: putstatic     #24                 // Field UNIX:Lde/pfabulist/kleinod/os/OS;
      20: new           #21                 // class de/pfabulist/kleinod/os/OS
      23: dup
      24: ldc           #25                 // String windows
      26: invokespecial #23                 // Method "<init>":(Ljava/lang/String;)V
      29: putstatic     #26                 // Field WINDOWS:Lde/pfabulist/kleinod/os/OS;
      32: new           #21                 // class de/pfabulist/kleinod/os/OS
      35: dup
      36: ldc           #11                 // String Mac OS X
      38: invokespecial #23                 // Method "<init>":(Ljava/lang/String;)V
      41: putstatic     #27                 // Field OSX:Lde/pfabulist/kleinod/os/OS;
      44: return
}
