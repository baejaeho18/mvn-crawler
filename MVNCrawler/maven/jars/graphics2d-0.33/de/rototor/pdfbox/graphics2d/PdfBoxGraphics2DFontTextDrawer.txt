Compiled from "PdfBoxGraphics2DFontTextDrawer.java"
public class de.rototor.pdfbox.graphics2d.PdfBoxGraphics2DFontTextDrawer implements de.rototor.pdfbox.graphics2d.IPdfBoxGraphics2DFontTextDrawer,java.io.Closeable {
  private final java.util.List<de.rototor.pdfbox.graphics2d.PdfBoxGraphics2DFontTextDrawer$FontEntry> fontFiles;

  private final java.util.List<java.io.File> tempFiles;

  private final java.util.Map<java.lang.String, org.apache.pdfbox.pdmodel.font.PDFont> fontMap;

  private static final boolean ENABLE_EXPERIMENTAL_TEXT_DECORATION;

  private org.apache.pdfbox.pdmodel.font.PDFont fallbackFontUnknownEncodings;

  private static final boolean DEBUG_BOX;

  public de.rototor.pdfbox.graphics2d.PdfBoxGraphics2DFontTextDrawer();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class java/util/ArrayList
       8: dup
       9: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #7                  // Field fontFiles:Ljava/util/List;
      15: aload_0
      16: new           #5                  // class java/util/ArrayList
      19: dup
      20: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
      23: putfield      #8                  // Field tempFiles:Ljava/util/List;
      26: aload_0
      27: new           #9                  // class java/util/HashMap
      30: dup
      31: invokespecial #10                 // Method java/util/HashMap."<init>":()V
      34: putfield      #2                  // Field fontMap:Ljava/util/Map;
      37: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #8                  // Field tempFiles:Ljava/util/List;
       4: invokeinterface #11,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          37
      19: aload_1
      20: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #14                 // class java/io/File
      28: astore_2
      29: aload_2
      30: invokevirtual #15                 // Method java/io/File.delete:()Z
      33: pop
      34: goto          10
      37: aload_0
      38: getfield      #8                  // Field tempFiles:Ljava/util/List;
      41: invokeinterface #16,  1           // InterfaceMethod java/util/List.clear:()V
      46: aload_0
      47: getfield      #7                  // Field fontFiles:Ljava/util/List;
      50: invokeinterface #16,  1           // InterfaceMethod java/util/List.clear:()V
      55: aload_0
      56: getfield      #2                  // Field fontMap:Ljava/util/Map;
      59: invokeinterface #17,  1           // InterfaceMethod java/util/Map.clear:()V
      64: return

  public void registerFont(java.lang.String, java.io.InputStream) throws java.io.IOException;
    Code:
       0: ldc           #18                 // String pdfboxgfx2dfont
       2: ldc           #19                 // String .ttf
       4: invokestatic  #20                 // Method java/io/File.createTempFile:(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
       7: astore_3
       8: new           #21                 // class java/io/FileOutputStream
      11: dup
      12: aload_3
      13: invokespecial #22                 // Method java/io/FileOutputStream."<init>":(Ljava/io/File;)V
      16: astore        4
      18: aload_2
      19: aload         4
      21: invokestatic  #23                 // Method org/apache/pdfbox/io/IOUtils.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)J
      24: pop2
      25: aload         4
      27: invokevirtual #24                 // Method java/io/FileOutputStream.close:()V
      30: goto          43
      33: astore        5
      35: aload         4
      37: invokevirtual #24                 // Method java/io/FileOutputStream.close:()V
      40: aload         5
      42: athrow
      43: aload_3
      44: invokevirtual #25                 // Method java/io/File.deleteOnExit:()V
      47: aload_0
      48: getfield      #8                  // Field tempFiles:Ljava/util/List;
      51: aload_3
      52: invokeinterface #26,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      57: pop
      58: aload_0
      59: aload_1
      60: aload_3
      61: invokevirtual #27                 // Method registerFont:(Ljava/lang/String;Ljava/io/File;)V
      64: return
    Exception table:
       from    to  target type
          18    25    33   any
          33    35    33   any

  public void registerFont(java.lang.String, java.io.File);
    Code:
       0: aload_2
       1: invokevirtual #28                 // Method java/io/File.exists:()Z
       4: ifne          39
       7: new           #29                 // class java/lang/IllegalArgumentException
      10: dup
      11: new           #30                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #32                 // String Font
      20: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_2
      24: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      27: ldc           #35                 // String  does not exist!
      29: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokespecial #37                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: new           #38                 // class de/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer$FontEntry
      42: dup
      43: aconst_null
      44: invokespecial #39                 // Method de/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer$FontEntry."<init>":(Lde/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer$1;)V
      47: astore_3
      48: aload_3
      49: aload_1
      50: putfield      #40                 // Field de/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer$FontEntry.overrideName:Ljava/lang/String;
      53: aload_3
      54: aload_2
      55: putfield      #41                 // Field de/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer$FontEntry.file:Ljava/io/File;
      58: aload_0
      59: getfield      #7                  // Field fontFiles:Ljava/util/List;
      62: aload_3
      63: invokeinterface #26,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      68: pop
      69: return

  public void registerFont(java.io.File);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokevirtual #27                 // Method registerFont:(Ljava/lang/String;Ljava/io/File;)V
       6: return

  public void registerFont(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokevirtual #42                 // Method registerFont:(Ljava/lang/String;Ljava/io/InputStream;)V
       6: return

  public void registerFont(java.lang.String, org.apache.pdfbox.pdmodel.font.PDFont);
    Code:
       0: aload_0
       1: getfield      #2                  // Field fontMap:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #43,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  protected boolean hasDynamicFontMapping();
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc           #1                  // class de/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer
       6: if_acmpeq     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean canDrawText(java.text.AttributedCharacterIterator, de.rototor.pdfbox.graphics2d.IPdfBoxGraphics2DFontTextDrawer$IFontTextDrawerEnv) throws java.io.IOException, java.awt.FontFormatException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field fontMap:Ljava/util/Map;
       4: invokeinterface #45,  1           // InterfaceMethod java/util/Map.size:()I
       9: ifne          33
      12: aload_0
      13: getfield      #7                  // Field fontFiles:Ljava/util/List;
      16: invokeinterface #46,  1           // InterfaceMethod java/util/List.size:()I
      21: ifne          33
      24: aload_0
      25: invokevirtual #47                 // Method hasDynamicFontMapping:()Z
      28: ifne          33
      31: iconst_0
      32: ireturn
      33: iconst_1
      34: istore_3
      35: new           #30                 // class java/lang/StringBuilder
      38: dup
      39: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      42: astore        4
      44: iload_3
      45: ifeq          339
      48: aload_1
      49: getstatic     #48                 // Field java/awt/font/TextAttribute.FONT:Ljava/awt/font/TextAttribute;
      52: invokeinterface #49,  2           // InterfaceMethod java/text/AttributedCharacterIterator.getAttribute:(Ljava/text/AttributedCharacterIterator$Attribute;)Ljava/lang/Object;
      57: checkcast     #50                 // class java/awt/Font
      60: astore        5
      62: aload         5
      64: ifnonnull     75
      67: aload_2
      68: invokeinterface #51,  1           // InterfaceMethod de/rototor/pdfbox/graphics2d/IPdfBoxGraphics2DFontTextDrawer$IFontTextDrawerEnv.getFont:()Ljava/awt/Font;
      73: astore        5
      75: aload_0
      76: aload         5
      78: aload_2
      79: invokevirtual #52                 // Method mapFont:(Ljava/awt/Font;Lde/rototor/pdfbox/graphics2d/IPdfBoxGraphics2DFontTextDrawer$IFontTextDrawerEnv;)Lorg/apache/pdfbox/pdmodel/font/PDFont;
      82: ifnonnull     87
      85: iconst_0
      86: ireturn
      87: aload_1
      88: getstatic     #53                 // Field java/awt/font/TextAttribute.BACKGROUND:Ljava/awt/font/TextAttribute;
      91: invokeinterface #49,  2           // InterfaceMethod java/text/AttributedCharacterIterator.getAttribute:(Ljava/text/AttributedCharacterIterator$Attribute;)Ljava/lang/Object;
      96: ifnull        101
      99: iconst_0
     100: ireturn
     101: getstatic     #54                 // Field java/awt/font/TextAttribute.STRIKETHROUGH_ON:Ljava/lang/Boolean;
     104: aload_1
     105: getstatic     #55                 // Field java/awt/font/TextAttribute.STRIKETHROUGH:Ljava/awt/font/TextAttribute;
     108: invokeinterface #49,  2           // InterfaceMethod java/text/AttributedCharacterIterator.getAttribute:(Ljava/text/AttributedCharacterIterator$Attribute;)Ljava/lang/Object;
     113: invokevirtual #56                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
     116: istore        6
     118: getstatic     #57                 // Field java/awt/font/TextAttribute.UNDERLINE_ON:Ljava/lang/Integer;
     121: aload_1
     122: getstatic     #58                 // Field java/awt/font/TextAttribute.UNDERLINE:Ljava/awt/font/TextAttribute;
     125: invokeinterface #49,  2           // InterfaceMethod java/text/AttributedCharacterIterator.getAttribute:(Ljava/text/AttributedCharacterIterator$Attribute;)Ljava/lang/Object;
     130: invokevirtual #59                 // Method java/lang/Integer.equals:(Ljava/lang/Object;)Z
     133: istore        7
     135: getstatic     #60                 // Field java/awt/font/TextAttribute.LIGATURES_ON:Ljava/lang/Integer;
     138: aload_1
     139: getstatic     #61                 // Field java/awt/font/TextAttribute.LIGATURES:Ljava/awt/font/TextAttribute;
     142: invokeinterface #49,  2           // InterfaceMethod java/text/AttributedCharacterIterator.getAttribute:(Ljava/text/AttributedCharacterIterator$Attribute;)Ljava/lang/Object;
     147: invokevirtual #59                 // Method java/lang/Integer.equals:(Ljava/lang/Object;)Z
     150: istore        8
     152: iload         6
     154: ifne          162
     157: iload         7
     159: ifeq          162
     162: iload         8
     164: ifeq          169
     167: iconst_0
     168: ireturn
     169: aload_0
     170: aload_1
     171: aload         4
     173: invokespecial #62                 // Method iterateRun:(Ljava/text/AttributedCharacterIterator;Ljava/lang/StringBuilder;)Z
     176: istore_3
     177: aload         4
     179: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     182: astore        9
     184: aload         9
     186: invokevirtual #63                 // Method java/lang/String.length:()I
     189: istore        10
     191: iconst_0
     192: istore        11
     194: iload         11
     196: iload         10
     198: if_icmpge     336
     201: aload         9
     203: iload         11
     205: invokevirtual #64                 // Method java/lang/String.codePointAt:(I)I
     208: istore        12
     210: iload         12
     212: invokestatic  #65                 // Method java/lang/Character.getDirectionality:(I)B
     215: tableswitch   { // 0 to 18
                     0: 304
                     1: 307
                     2: 307
                     3: 304
                     4: 304
                     5: 304
                     6: 304
                     7: 304
                     8: 304
                     9: 304
                    10: 304
                    11: 304
                    12: 304
                    13: 304
                    14: 309
                    15: 309
                    16: 307
                    17: 307
                    18: 307
               default: 309
          }
     304: goto          311
     307: iconst_0
     308: ireturn
     309: iconst_0
     310: ireturn
     311: aload         5
     313: iload         12
     315: invokevirtual #66                 // Method java/awt/Font.canDisplay:(I)Z
     318: ifne          323
     321: iconst_0
     322: ireturn
     323: iload         11
     325: iload         12
     327: invokestatic  #67                 // Method java/lang/Character.charCount:(I)I
     330: iadd
     331: istore        11
     333: goto          194
     336: goto          44
     339: iconst_1
     340: ireturn

  public void drawText(java.text.AttributedCharacterIterator, de.rototor.pdfbox.graphics2d.IPdfBoxGraphics2DFontTextDrawer$IFontTextDrawerEnv) throws java.io.IOException, java.awt.FontFormatException;
    Code:
       0: aload_2
       1: invokeinterface #68,  1           // InterfaceMethod de/rototor/pdfbox/graphics2d/IPdfBoxGraphics2DFontTextDrawer$IFontTextDrawerEnv.getContentStream:()Lorg/apache/pdfbox/pdmodel/PDPageContentStream;
       6: astore_3
       7: new           #69                 // class de/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer$DrawTextDecorationState
      10: dup
      11: aconst_null
      12: invokespecial #70                 // Method de/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer$DrawTextDecorationState."<init>":(Lde/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer$1;)V
      15: astore        4
      17: aload_3
      18: invokevirtual #71                 // Method org/apache/pdfbox/pdmodel/PDPageContentStream.saveGraphicsState:()V
      21: aload_3
      22: invokevirtual #72                 // Method org/apache/pdfbox/pdmodel/PDPageContentStream.beginText:()V
      25: new           #73                 // class org/apache/pdfbox/util/Matrix
      28: dup
      29: invokespecial #74                 // Method org/apache/pdfbox/util/Matrix."<init>":()V
      32: astore        5
      34: aload         5
      36: fconst_1
      37: ldc           #75                 // float -1.0f
      39: invokevirtual #76                 // Method org/apache/pdfbox/util/Matrix.scale:(FF)V
      42: aload_3
      43: aload         5
      45: invokevirtual #77                 // Method org/apache/pdfbox/pdmodel/PDPageContentStream.setTextMatrix:(Lorg/apache/pdfbox/util/Matrix;)V
      48: new           #30                 // class java/lang/StringBuilder
      51: dup
      52: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      55: astore        6
      57: iconst_1
      58: istore        7
      60: iload         7
      62: ifeq          415
      65: aload_1
      66: getstatic     #48                 // Field java/awt/font/TextAttribute.FONT:Ljava/awt/font/TextAttribute;
      69: invokeinterface #49,  2           // InterfaceMethod java/text/AttributedCharacterIterator.getAttribute:(Ljava/text/AttributedCharacterIterator$Attribute;)Ljava/lang/Object;
      74: checkcast     #50                 // class java/awt/Font
      77: astore        8
      79: aload         8
      81: ifnonnull     92
      84: aload_2
      85: invokeinterface #51,  1           // InterfaceMethod de/rototor/pdfbox/graphics2d/IPdfBoxGraphics2DFontTextDrawer$IFontTextDrawerEnv.getFont:()Ljava/awt/Font;
      90: astore        8
      92: aload_1
      93: getstatic     #78                 // Field java/awt/font/TextAttribute.SIZE:Ljava/awt/font/TextAttribute;
      96: invokeinterface #49,  2           // InterfaceMethod java/text/AttributedCharacterIterator.getAttribute:(Ljava/text/AttributedCharacterIterator$Attribute;)Ljava/lang/Object;
     101: checkcast     #79                 // class java/lang/Number
     104: astore        9
     106: aload         9
     108: ifnull        123
     111: aload         8
     113: aload         9
     115: invokevirtual #80                 // Method java/lang/Number.floatValue:()F
     118: invokevirtual #81                 // Method java/awt/Font.deriveFont:(F)Ljava/awt/Font;
     121: astore        8
     123: aload_0
     124: aload         8
     126: aload_2
     127: invokespecial #82                 // Method applyFont:(Ljava/awt/Font;Lde/rototor/pdfbox/graphics2d/IPdfBoxGraphics2DFontTextDrawer$IFontTextDrawerEnv;)Lorg/apache/pdfbox/pdmodel/font/PDFont;
     130: astore        10
     132: aload_1
     133: getstatic     #83                 // Field java/awt/font/TextAttribute.FOREGROUND:Ljava/awt/font/TextAttribute;
     136: invokeinterface #49,  2           // InterfaceMethod java/text/AttributedCharacterIterator.getAttribute:(Ljava/text/AttributedCharacterIterator$Attribute;)Ljava/lang/Object;
     141: checkcast     #84                 // class java/awt/Paint
     144: astore        11
     146: aload         11
     148: ifnonnull     159
     151: aload_2
     152: invokeinterface #85,  1           // InterfaceMethod de/rototor/pdfbox/graphics2d/IPdfBoxGraphics2DFontTextDrawer$IFontTextDrawerEnv.getPaint:()Ljava/awt/Paint;
     157: astore        11
     159: getstatic     #54                 // Field java/awt/font/TextAttribute.STRIKETHROUGH_ON:Ljava/lang/Boolean;
     162: aload_1
     163: getstatic     #55                 // Field java/awt/font/TextAttribute.STRIKETHROUGH:Ljava/awt/font/TextAttribute;
     166: invokeinterface #49,  2           // InterfaceMethod java/text/AttributedCharacterIterator.getAttribute:(Ljava/text/AttributedCharacterIterator$Attribute;)Ljava/lang/Object;
     171: invokevirtual #56                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
     174: istore        12
     176: getstatic     #57                 // Field java/awt/font/TextAttribute.UNDERLINE_ON:Ljava/lang/Integer;
     179: aload_1
     180: getstatic     #58                 // Field java/awt/font/TextAttribute.UNDERLINE:Ljava/awt/font/TextAttribute;
     183: invokeinterface #49,  2           // InterfaceMethod java/text/AttributedCharacterIterator.getAttribute:(Ljava/text/AttributedCharacterIterator$Attribute;)Ljava/lang/Object;
     188: invokevirtual #59                 // Method java/lang/Integer.equals:(Ljava/lang/Object;)Z
     191: istore        13
     193: getstatic     #60                 // Field java/awt/font/TextAttribute.LIGATURES_ON:Ljava/lang/Integer;
     196: aload_1
     197: getstatic     #61                 // Field java/awt/font/TextAttribute.LIGATURES:Ljava/awt/font/TextAttribute;
     200: invokeinterface #49,  2           // InterfaceMethod java/text/AttributedCharacterIterator.getAttribute:(Ljava/text/AttributedCharacterIterator$Attribute;)Ljava/lang/Object;
     205: invokevirtual #59                 // Method java/lang/Integer.equals:(Ljava/lang/Object;)Z
     208: istore        14
     210: aload_0
     211: aload_1
     212: aload         6
     214: invokespecial #62                 // Method iterateRun:(Ljava/text/AttributedCharacterIterator;Ljava/lang/StringBuilder;)Z
     217: istore        7
     219: aload         6
     221: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     224: astore        15
     226: aload_2
     227: aload         11
     229: aconst_null
     230: invokeinterface #86,  3           // InterfaceMethod de/rototor/pdfbox/graphics2d/IPdfBoxGraphics2DFontTextDrawer$IFontTextDrawerEnv.applyPaint:(Ljava/awt/Paint;Ljava/awt/Shape;)V
     235: aload_0
     236: aload_2
     237: aload_3
     238: aload         8
     240: aload         10
     242: iload         12
     244: iload         13
     246: iload         14
     248: aload         4
     250: aload         11
     252: aload         15
     254: invokespecial #87                 // Method showTextOnStream:(Lde/rototor/pdfbox/graphics2d/IPdfBoxGraphics2DFontTextDrawer$IFontTextDrawerEnv;Lorg/apache/pdfbox/pdmodel/PDPageContentStream;Ljava/awt/Font;Lorg/apache/pdfbox/pdmodel/font/PDFont;ZZZLde/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer$DrawTextDecorationState;Ljava/awt/Paint;Ljava/lang/String;)V
     257: goto          412
     260: astore        16
     262: aload         10
     264: instanceof    #88                 // class org/apache/pdfbox/pdmodel/font/PDType1Font
     267: ifeq          355
     270: aload         10
     272: invokevirtual #89                 // Method org/apache/pdfbox/pdmodel/font/PDFont.isEmbedded:()Z
     275: ifne          355
     278: aload_0
     279: getfield      #90                 // Field fallbackFontUnknownEncodings:Lorg/apache/pdfbox/pdmodel/font/PDFont;
     282: ifnonnull     294
     285: aload_0
     286: aload_0
     287: aload_2
     288: invokespecial #91                 // Method findFallbackFont:(Lde/rototor/pdfbox/graphics2d/IPdfBoxGraphics2DFontTextDrawer$IFontTextDrawerEnv;)Lorg/apache/pdfbox/pdmodel/font/PDFont;
     291: putfield      #90                 // Field fallbackFontUnknownEncodings:Lorg/apache/pdfbox/pdmodel/font/PDFont;
     294: aload_0
     295: getfield      #90                 // Field fallbackFontUnknownEncodings:Lorg/apache/pdfbox/pdmodel/font/PDFont;
     298: ifnull        346
     301: aload_2
     302: invokeinterface #68,  1           // InterfaceMethod de/rototor/pdfbox/graphics2d/IPdfBoxGraphics2DFontTextDrawer$IFontTextDrawerEnv.getContentStream:()Lorg/apache/pdfbox/pdmodel/PDPageContentStream;
     307: aload_0
     308: getfield      #90                 // Field fallbackFontUnknownEncodings:Lorg/apache/pdfbox/pdmodel/font/PDFont;
     311: aload         8
     313: invokevirtual #92                 // Method java/awt/Font.getSize2D:()F
     316: invokevirtual #93                 // Method org/apache/pdfbox/pdmodel/PDPageContentStream.setFont:(Lorg/apache/pdfbox/pdmodel/font/PDFont;F)V
     319: aload_0
     320: aload_2
     321: aload_3
     322: aload         8
     324: aload_0
     325: getfield      #90                 // Field fallbackFontUnknownEncodings:Lorg/apache/pdfbox/pdmodel/font/PDFont;
     328: iload         12
     330: iload         13
     332: iload         14
     334: aload         4
     336: aload         11
     338: aload         15
     340: invokespecial #87                 // Method showTextOnStream:(Lde/rototor/pdfbox/graphics2d/IPdfBoxGraphics2DFontTextDrawer$IFontTextDrawerEnv;Lorg/apache/pdfbox/pdmodel/PDPageContentStream;Ljava/awt/Font;Lorg/apache/pdfbox/pdmodel/font/PDFont;ZZZLde/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer$DrawTextDecorationState;Ljava/awt/Paint;Ljava/lang/String;)V
     343: aconst_null
     344: astore        16
     346: goto          355
     349: astore        17
     351: aload         17
     353: astore        16
     355: aload         16
     357: ifnull        412
     360: getstatic     #94                 // Field java/lang/System.err:Ljava/io/PrintStream;
     363: new           #30                 // class java/lang/StringBuilder
     366: dup
     367: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
     370: ldc           #95                 // String PDFBoxGraphics: Can not map text
     372: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     375: aload         15
     377: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     380: ldc           #96                 // String  with font
     382: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     385: aload         8
     387: invokevirtual #97                 // Method java/awt/Font.getFontName:()Ljava/lang/String;
     390: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     393: ldc           #98                 // String :
     395: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     398: aload         16
     400: invokevirtual #99                 // Method java/lang/IllegalArgumentException.getMessage:()Ljava/lang/String;
     403: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     406: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     409: invokevirtual #100                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     412: goto          60
     415: aload_3
     416: invokevirtual #101                // Method org/apache/pdfbox/pdmodel/PDPageContentStream.endText:()V
     419: aload_3
     420: invokevirtual #102                // Method org/apache/pdfbox/pdmodel/PDPageContentStream.restoreGraphicsState:()V
     423: aload         4
     425: getfield      #103                // Field de/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer$DrawTextDecorationState.drawers:Ljava/util/List;
     428: invokeinterface #104,  1          // InterfaceMethod java/util/List.isEmpty:()Z
     433: ifne          495
     436: aload_3
     437: invokevirtual #71                 // Method org/apache/pdfbox/pdmodel/PDPageContentStream.saveGraphicsState:()V
     440: aload_3
     441: aload         5
     443: invokevirtual #105                // Method org/apache/pdfbox/pdmodel/PDPageContentStream.transform:(Lorg/apache/pdfbox/util/Matrix;)V
     446: aload         4
     448: getfield      #103                // Field de/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer$DrawTextDecorationState.drawers:Ljava/util/List;
     451: invokeinterface #11,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     456: astore        8
     458: aload         8
     460: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     465: ifeq          491
     468: aload         8
     470: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     475: checkcast     #106                // class de/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer$ITextDecorationDrawer
     478: astore        9
     480: aload         9
     482: aload_3
     483: invokeinterface #107,  2          // InterfaceMethod de/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer$ITextDecorationDrawer.draw:(Lorg/apache/pdfbox/pdmodel/PDPageContentStream;)V
     488: goto          458
     491: aload_3
     492: invokevirtual #102                // Method org/apache/pdfbox/pdmodel/PDPageContentStream.restoreGraphicsState:()V
     495: return
    Exception table:
       from    to  target type
         235   257   260   Class java/lang/IllegalArgumentException
         278   346   349   Class java/lang/IllegalArgumentException

  public java.awt.FontMetrics getFontMetrics(java.awt.Font, de.rototor.pdfbox.graphics2d.IPdfBoxGraphics2DFontTextDrawer$IFontTextDrawerEnv) throws java.io.IOException, java.awt.FontFormatException;
    Code:
       0: aload_2
       1: invokeinterface #108,  1          // InterfaceMethod de/rototor/pdfbox/graphics2d/IPdfBoxGraphics2DFontTextDrawer$IFontTextDrawerEnv.getCalculationGraphics:()Ljava/awt/Graphics2D;
       6: aload_1
       7: invokevirtual #109                // Method java/awt/Graphics2D.getFontMetrics:(Ljava/awt/Font;)Ljava/awt/FontMetrics;
      10: astore_3
      11: aload_0
      12: aload_1
      13: aload_2
      14: invokevirtual #52                 // Method mapFont:(Ljava/awt/Font;Lde/rototor/pdfbox/graphics2d/IPdfBoxGraphics2DFontTextDrawer$IFontTextDrawerEnv;)Lorg/apache/pdfbox/pdmodel/font/PDFont;
      17: astore        4
      19: aload         4
      21: ifnonnull     26
      24: aload_3
      25: areturn
      26: new           #110                // class de/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer$1
      29: dup
      30: aload_0
      31: aload_1
      32: aload_3
      33: aload         4
      35: aload_1
      36: invokespecial #111                // Method de/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer$1."<init>":(Lde/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer;Ljava/awt/Font;Ljava/awt/FontMetrics;Lorg/apache/pdfbox/pdmodel/font/PDFont;Ljava/awt/Font;)V
      39: areturn

  private org.apache.pdfbox.pdmodel.font.PDFont findFallbackFont(de.rototor.pdfbox.graphics2d.IPdfBoxGraphics2DFontTextDrawer$IFontTextDrawerEnv) throws java.io.IOException;
    Code:
       0: ldc           #112                // String java.home
       2: ldc           #113                // String .
       4: invokestatic  #114                // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: astore_2
       8: new           #30                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      15: aload_2
      16: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #115                // String /lib/fonts
      21: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: astore_3
      28: ldc           #116                // String WINDIR
      30: invokestatic  #117                // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
      33: astore        4
      35: aload         4
      37: ifnonnull     43
      40: aload_3
      41: astore        4
      43: bipush        9
      45: anewarray     #14                 // class java/io/File
      48: dup
      49: iconst_0
      50: new           #14                 // class java/io/File
      53: dup
      54: new           #14                 // class java/io/File
      57: dup
      58: aload         4
      60: invokespecial #118                // Method java/io/File."<init>":(Ljava/lang/String;)V
      63: ldc           #119                // String fonts
      65: invokespecial #120                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      68: aastore
      69: dup
      70: iconst_1
      71: new           #14                 // class java/io/File
      74: dup
      75: ldc           #121                // String user.dir
      77: ldc           #113                // String .
      79: invokestatic  #114                // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      82: invokespecial #118                // Method java/io/File."<init>":(Ljava/lang/String;)V
      85: aastore
      86: dup
      87: iconst_2
      88: new           #14                 // class java/io/File
      91: dup
      92: ldc           #122                // String /Library/Fonts
      94: invokespecial #118                // Method java/io/File."<init>":(Ljava/lang/String;)V
      97: aastore
      98: dup
      99: iconst_3
     100: new           #14                 // class java/io/File
     103: dup
     104: ldc           #123                // String /System/Library/Fonts/Supplemental/
     106: invokespecial #118                // Method java/io/File."<init>":(Ljava/lang/String;)V
     109: aastore
     110: dup
     111: iconst_4
     112: new           #14                 // class java/io/File
     115: dup
     116: ldc           #124                // String /usr/share/fonts/truetype
     118: invokespecial #118                // Method java/io/File."<init>":(Ljava/lang/String;)V
     121: aastore
     122: dup
     123: iconst_5
     124: new           #14                 // class java/io/File
     127: dup
     128: ldc           #125                // String /usr/share/fonts/truetype/dejavu
     130: invokespecial #118                // Method java/io/File."<init>":(Ljava/lang/String;)V
     133: aastore
     134: dup
     135: bipush        6
     137: new           #14                 // class java/io/File
     140: dup
     141: ldc           #126                // String /usr/share/fonts/truetype/liberation
     143: invokespecial #118                // Method java/io/File."<init>":(Ljava/lang/String;)V
     146: aastore
     147: dup
     148: bipush        7
     150: new           #14                 // class java/io/File
     153: dup
     154: ldc           #127                // String /usr/share/fonts/truetype/noto
     156: invokespecial #118                // Method java/io/File."<init>":(Ljava/lang/String;)V
     159: aastore
     160: dup
     161: bipush        8
     163: new           #14                 // class java/io/File
     166: dup
     167: aload_3
     168: invokespecial #118                // Method java/io/File."<init>":(Ljava/lang/String;)V
     171: aastore
     172: astore        5
     174: bipush        8
     176: anewarray     #128                // class java/lang/String
     179: dup
     180: iconst_0
     181: ldc           #129                // String LucidaSansRegular.ttf
     183: aastore
     184: dup
     185: iconst_1
     186: ldc           #130                // String arial.ttf
     188: aastore
     189: dup
     190: iconst_2
     191: ldc           #131                // String Arial.ttf
     193: aastore
     194: dup
     195: iconst_3
     196: ldc           #132                // String DejaVuSans.ttf
     198: aastore
     199: dup
     200: iconst_4
     201: ldc           #133                // String LiberationMono-Regular.ttf
     203: aastore
     204: dup
     205: iconst_5
     206: ldc           #134                // String NotoSerif-Regular.ttf
     208: aastore
     209: dup
     210: bipush        6
     212: ldc           #135                // String Arial Unicode.ttf
     214: aastore
     215: dup
     216: bipush        7
     218: ldc           #136                // String Tahoma.ttf
     220: aastore
     221: astore        6
     223: aload         6
     225: arraylength
     226: istore        7
     228: iconst_0
     229: istore        8
     231: iload         8
     233: iload         7
     235: if_icmpge     321
     238: aload         6
     240: iload         8
     242: aaload
     243: astore        9
     245: aload         5
     247: astore        10
     249: aload         10
     251: arraylength
     252: istore        11
     254: iconst_0
     255: istore        12
     257: iload         12
     259: iload         11
     261: if_icmpge     315
     264: aload         10
     266: iload         12
     268: aaload
     269: astore        13
     271: new           #14                 // class java/io/File
     274: dup
     275: aload         13
     277: aload         9
     279: invokespecial #120                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
     282: astore        14
     284: aload         14
     286: invokevirtual #28                 // Method java/io/File.exists:()Z
     289: ifeq          309
     292: aload_0
     293: aload_1
     294: aload         14
     296: invokespecial #137                // Method tryToLoadFont:(Lde/rototor/pdfbox/graphics2d/IPdfBoxGraphics2DFontTextDrawer$IFontTextDrawerEnv;Ljava/io/File;)Lorg/apache/pdfbox/pdmodel/font/PDType0Font;
     299: astore        15
     301: aload         15
     303: ifnull        309
     306: aload         15
     308: areturn
     309: iinc          12, 1
     312: goto          257
     315: iinc          8, 1
     318: goto          231
     321: aconst_null
     322: areturn

  private org.apache.pdfbox.pdmodel.font.PDType0Font tryToLoadFont(de.rototor.pdfbox.graphics2d.IPdfBoxGraphics2DFontTextDrawer$IFontTextDrawerEnv, java.io.File) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #138,  1          // InterfaceMethod de/rototor/pdfbox/graphics2d/IPdfBoxGraphics2DFontTextDrawer$IFontTextDrawerEnv.getDocument:()Lorg/apache/pdfbox/pdmodel/PDDocument;
       6: aload_2
       7: invokestatic  #139                // Method org/apache/pdfbox/pdmodel/font/PDType0Font.load:(Lorg/apache/pdfbox/pdmodel/PDDocument;Ljava/io/File;)Lorg/apache/pdfbox/pdmodel/font/PDType0Font;
      10: areturn
      11: astore_3
      12: aconst_null
      13: areturn
    Exception table:
       from    to  target type
           0    10    11   Class java/io/IOException

  private void showTextOnStream(de.rototor.pdfbox.graphics2d.IPdfBoxGraphics2DFontTextDrawer$IFontTextDrawerEnv, org.apache.pdfbox.pdmodel.PDPageContentStream, java.awt.Font, org.apache.pdfbox.pdmodel.font.PDFont, boolean, boolean, boolean, de.rototor.pdfbox.graphics2d.PdfBoxGraphics2DFontTextDrawer$DrawTextDecorationState, java.awt.Paint, java.lang.String) throws java.io.IOException;
    Code:
       0: iload         7
       2: ifeq          5
       5: aload_2
       6: aload         10
       8: invokevirtual #141                // Method org/apache/pdfbox/pdmodel/PDPageContentStream.showText:(Ljava/lang/String;)V
      11: aload         4
      13: aload         10
      15: invokevirtual #142                // Method org/apache/pdfbox/pdmodel/font/PDFont.getStringWidth:(Ljava/lang/String;)F
      18: ldc           #143                // float 1000.0f
      20: fdiv
      21: aload_3
      22: invokevirtual #92                 // Method java/awt/Font.getSize2D:()F
      25: fmul
      26: fstore        11
      28: iload         5
      30: ifne          38
      33: iload         6
      35: ifeq          95
      38: aload_3
      39: aload         10
      41: aload_1
      42: invokeinterface #144,  1          // InterfaceMethod de/rototor/pdfbox/graphics2d/IPdfBoxGraphics2DFontTextDrawer$IFontTextDrawerEnv.getFontRenderContext:()Ljava/awt/font/FontRenderContext;
      47: invokevirtual #145                // Method java/awt/Font.getLineMetrics:(Ljava/lang/String;Ljava/awt/font/FontRenderContext;)Ljava/awt/font/LineMetrics;
      50: astore        12
      52: aload         8
      54: getfield      #146                // Field de/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer$DrawTextDecorationState.x:F
      57: fstore        13
      59: aload         8
      61: getfield      #103                // Field de/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer$DrawTextDecorationState.drawers:Ljava/util/List;
      64: new           #147                // class de/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer$2
      67: dup
      68: aload_0
      69: aload         12
      71: aload         4
      73: aload_3
      74: aload_1
      75: fload         13
      77: fload         11
      79: aload_2
      80: aload         9
      82: iload         5
      84: iload         6
      86: invokespecial #148                // Method de/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer$2."<init>":(Lde/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer;Ljava/awt/font/LineMetrics;Lorg/apache/pdfbox/pdmodel/font/PDFont;Ljava/awt/Font;Lde/rototor/pdfbox/graphics2d/IPdfBoxGraphics2DFontTextDrawer$IFontTextDrawerEnv;FFLorg/apache/pdfbox/pdmodel/PDPageContentStream;Ljava/awt/Paint;ZZ)V
      89: invokeinterface #26,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      94: pop
      95: aload         8
      97: dup
      98: getfield      #146                // Field de/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer$DrawTextDecorationState.x:F
     101: fload         11
     103: fadd
     104: putfield      #146                // Field de/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer$DrawTextDecorationState.x:F
     107: return

  private float getSensibleThickness(float, java.awt.Font);
    Code:
       0: fload_1
       1: ldc           #149                // float 1.0E-5f
       3: fcmpg
       4: ifge          15
       7: ldc           #150                // float 0.04f
       9: aload_2
      10: invokevirtual #92                 // Method java/awt/Font.getSize2D:()F
      13: fmul
      14: freturn
      15: fload_1
      16: freturn

  private org.apache.pdfbox.pdmodel.font.PDFont applyFont(java.awt.Font, de.rototor.pdfbox.graphics2d.IPdfBoxGraphics2DFontTextDrawer$IFontTextDrawerEnv) throws java.io.IOException, java.awt.FontFormatException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #52                 // Method mapFont:(Ljava/awt/Font;Lde/rototor/pdfbox/graphics2d/IPdfBoxGraphics2DFontTextDrawer$IFontTextDrawerEnv;)Lorg/apache/pdfbox/pdmodel/font/PDFont;
       6: astore_3
       7: aload_3
       8: ifnonnull     16
      11: aload_1
      12: invokestatic  #151                // Method de/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawerDefaultFonts.chooseMatchingHelvetica:(Ljava/awt/Font;)Lorg/apache/pdfbox/pdmodel/font/PDFont;
      15: astore_3
      16: aload_2
      17: invokeinterface #68,  1           // InterfaceMethod de/rototor/pdfbox/graphics2d/IPdfBoxGraphics2DFontTextDrawer$IFontTextDrawerEnv.getContentStream:()Lorg/apache/pdfbox/pdmodel/PDPageContentStream;
      22: aload_3
      23: aload_1
      24: invokevirtual #92                 // Method java/awt/Font.getSize2D:()F
      27: invokevirtual #93                 // Method org/apache/pdfbox/pdmodel/PDPageContentStream.setFont:(Lorg/apache/pdfbox/pdmodel/font/PDFont;F)V
      30: aload_3
      31: areturn

  protected org.apache.pdfbox.pdmodel.font.PDFont mapFont(java.awt.Font, de.rototor.pdfbox.graphics2d.IPdfBoxGraphics2DFontTextDrawer$IFontTextDrawerEnv) throws java.io.IOException, java.awt.FontFormatException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field fontFiles:Ljava/util/List;
       4: invokeinterface #11,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          150
      19: aload_3
      20: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #38                 // class de/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer$FontEntry
      28: astore        4
      30: aload         4
      32: getfield      #40                 // Field de/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer$FontEntry.overrideName:Ljava/lang/String;
      35: ifnonnull     59
      38: iconst_0
      39: aload         4
      41: getfield      #41                 // Field de/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer$FontEntry.file:Ljava/io/File;
      44: invokestatic  #152                // Method java/awt/Font.createFont:(ILjava/io/File;)Ljava/awt/Font;
      47: astore        5
      49: aload         4
      51: aload         5
      53: invokevirtual #97                 // Method java/awt/Font.getFontName:()Ljava/lang/String;
      56: putfield      #40                 // Field de/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer$FontEntry.overrideName:Ljava/lang/String;
      59: aload         4
      61: getfield      #41                 // Field de/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer$FontEntry.file:Ljava/io/File;
      64: invokevirtual #153                // Method java/io/File.getName:()Ljava/lang/String;
      67: getstatic     #154                // Field java/util/Locale.US:Ljava/util/Locale;
      70: invokevirtual #155                // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      73: ldc           #156                // String .ttc
      75: invokevirtual #157                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      78: ifeq          114
      81: new           #158                // class org/apache/fontbox/ttf/TrueTypeCollection
      84: dup
      85: aload         4
      87: getfield      #41                 // Field de/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer$FontEntry.file:Ljava/io/File;
      90: invokespecial #159                // Method org/apache/fontbox/ttf/TrueTypeCollection."<init>":(Ljava/io/File;)V
      93: astore        5
      95: aload         5
      97: new           #160                // class de/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer$3
     100: dup
     101: aload_0
     102: aload_2
     103: aload         4
     105: invokespecial #161                // Method de/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer$3."<init>":(Lde/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer;Lde/rototor/pdfbox/graphics2d/IPdfBoxGraphics2DFontTextDrawer$IFontTextDrawerEnv;Lde/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer$FontEntry;)V
     108: invokevirtual #162                // Method org/apache/fontbox/ttf/TrueTypeCollection.processAllFonts:(Lorg/apache/fontbox/ttf/TrueTypeCollection$TrueTypeFontProcessor;)V
     111: goto          147
     114: aload_2
     115: invokeinterface #138,  1          // InterfaceMethod de/rototor/pdfbox/graphics2d/IPdfBoxGraphics2DFontTextDrawer$IFontTextDrawerEnv.getDocument:()Lorg/apache/pdfbox/pdmodel/PDDocument;
     120: aload         4
     122: getfield      #41                 // Field de/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer$FontEntry.file:Ljava/io/File;
     125: invokestatic  #139                // Method org/apache/pdfbox/pdmodel/font/PDType0Font.load:(Lorg/apache/pdfbox/pdmodel/PDDocument;Ljava/io/File;)Lorg/apache/pdfbox/pdmodel/font/PDType0Font;
     128: astore        5
     130: aload_0
     131: getfield      #2                  // Field fontMap:Ljava/util/Map;
     134: aload         4
     136: getfield      #40                 // Field de/rototor/pdfbox/graphics2d/PdfBoxGraphics2DFontTextDrawer$FontEntry.overrideName:Ljava/lang/String;
     139: aload         5
     141: invokeinterface #43,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     146: pop
     147: goto          10
     150: aload_0
     151: getfield      #7                  // Field fontFiles:Ljava/util/List;
     154: invokeinterface #16,  1           // InterfaceMethod java/util/List.clear:()V
     159: aload_0
     160: getfield      #2                  // Field fontMap:Ljava/util/Map;
     163: aload_1
     164: invokevirtual #97                 // Method java/awt/Font.getFontName:()Ljava/lang/String;
     167: invokeinterface #163,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     172: checkcast     #164                // class org/apache/pdfbox/pdmodel/font/PDFont
     175: areturn

  private boolean iterateRun(java.text.AttributedCharacterIterator, java.lang.StringBuilder);
    Code:
       0: aload_2
       1: iconst_0
       2: invokevirtual #165                // Method java/lang/StringBuilder.setLength:(I)V
       5: aload_1
       6: invokeinterface #166,  1          // InterfaceMethod java/text/AttributedCharacterIterator.getRunLimit:()I
      11: aload_1
      12: invokeinterface #167,  1          // InterfaceMethod java/text/AttributedCharacterIterator.getRunStart:()I
      17: isub
      18: istore_3
      19: iload_3
      20: iinc          3, -1
      23: ifle          60
      26: aload_1
      27: invokeinterface #168,  1          // InterfaceMethod java/text/AttributedCharacterIterator.current:()C
      32: istore        4
      34: aload_1
      35: invokeinterface #169,  1          // InterfaceMethod java/text/AttributedCharacterIterator.next:()C
      40: pop
      41: iload         4
      43: ldc           #171                // int 65535
      45: if_icmpne     50
      48: iconst_0
      49: ireturn
      50: aload_2
      51: iload         4
      53: invokevirtual #172                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      56: pop
      57: goto          19
      60: aload_1
      61: invokeinterface #173,  1          // InterfaceMethod java/text/AttributedCharacterIterator.getIndex:()I
      66: aload_1
      67: invokeinterface #166,  1          // InterfaceMethod java/text/AttributedCharacterIterator.getRunLimit:()I
      72: if_icmpge     79
      75: iconst_1
      76: goto          80
      79: iconst_0
      80: ireturn

  static float access$200(de.rototor.pdfbox.graphics2d.PdfBoxGraphics2DFontTextDrawer, float, java.awt.Font);
    Code:
       0: aload_0
       1: fload_1
       2: aload_2
       3: invokespecial #3                  // Method getSensibleThickness:(FLjava/awt/Font;)F
       6: freturn

  static java.util.Map access$300(de.rototor.pdfbox.graphics2d.PdfBoxGraphics2DFontTextDrawer);
    Code:
       0: aload_0
       1: getfield      #2                  // Field fontMap:Ljava/util/Map;
       4: areturn
}
