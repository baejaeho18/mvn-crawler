Compiled from "AkkaLineNumbers.scala"
public final class zio.internal.stacktracer.impl.AkkaLineNumbers$ {
  public static final zio.internal.stacktracer.impl.AkkaLineNumbers$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class zio/internal/stacktracer/impl/AkkaLineNumbers$
       3: dup
       4: invokespecial #52                 // Method "<init>":()V
       7: putstatic     #54                 // Field MODULE$:Lzio/internal/stacktracer/impl/AkkaLineNumbers$;
      10: return

  public final zio.internal.stacktracer.impl.AkkaLineNumbers$Result apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #61                 // Method getStreamForLambda:(Ljava/lang/Object;)Lscala/Option;
       5: aload_1
       6: invokedynamic #81,  0             // InvokeDynamic #0:apply:(Ljava/lang/Object;)Lscala/Function0;
      11: invokevirtual #87                 // Method scala/Option.orElse:(Lscala/Function0;)Lscala/Option;
      14: astore_3
      15: aload_3
      16: instanceof    #89                 // class scala/Some
      19: ifeq          83
      22: aload_3
      23: checkcast     #89                 // class scala/Some
      26: invokevirtual #92                 // Method scala/Some.value:()Ljava/lang/Object;
      29: checkcast     #94                 // class scala/Tuple3
      32: astore        4
      34: aload         4
      36: ifnull        83
      39: aload         4
      41: invokevirtual #97                 // Method scala/Tuple3._1:()Ljava/lang/Object;
      44: checkcast     #99                 // class java/io/InputStream
      47: astore        5
      49: aload         4
      51: invokevirtual #102                // Method scala/Tuple3._2:()Ljava/lang/Object;
      54: checkcast     #104                // class java/lang/String
      57: astore        6
      59: aload         4
      61: invokevirtual #107                // Method scala/Tuple3._3:()Ljava/lang/Object;
      64: checkcast     #83                 // class scala/Option
      67: astore        7
      69: aload_0
      70: aload         5
      72: aload         6
      74: aload         7
      76: invokespecial #111                // Method getInfo:(Ljava/io/InputStream;Ljava/lang/String;Lscala/Option;)Lzio/internal/stacktracer/impl/AkkaLineNumbers$Result;
      79: astore_2
      80: goto          109
      83: getstatic     #116                // Field scala/None$.MODULE$:Lscala/None$;
      86: aload_3
      87: invokevirtual #120                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      90: ifeq          100
      93: getstatic     #123                // Field zio/internal/stacktracer/impl/AkkaLineNumbers$NoSourceInfo$.MODULE$:Lzio/internal/stacktracer/impl/AkkaLineNumbers$NoSourceInfo$;
      96: astore_2
      97: goto          109
     100: new           #125                // class scala/MatchError
     103: dup
     104: aload_3
     105: invokespecial #128                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     108: athrow
     109: aload_2
     110: areturn

  private zio.internal.stacktracer.impl.AkkaLineNumbers$Result getInfo(java.io.InputStream, java.lang.String, scala.Option<java.lang.String>);
    Code:
       0: new           #141                // class java/io/DataInputStream
       3: dup
       4: aload_1
       5: invokespecial #144                // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
       8: astore        6
      10: aload_0
      11: aload         6
      13: invokespecial #148                // Method skipID:(Ljava/io/DataInputStream;)V
      16: aload_0
      17: aload         6
      19: invokespecial #151                // Method skipVersion:(Ljava/io/DataInputStream;)V
      22: aload_0
      23: aload         6
      25: invokespecial #155                // Method getConstants:(Ljava/io/DataInputStream;)Lzio/internal/stacktracer/impl/AkkaLineNumbers$Constants;
      28: astore        8
      30: aload_0
      31: aload         6
      33: aload         8
      35: invokespecial #159                // Method skipClassInfo:(Ljava/io/DataInputStream;Lzio/internal/stacktracer/impl/AkkaLineNumbers$Constants;)V
      38: aload_0
      39: aload         6
      41: aload         8
      43: invokespecial #162                // Method skipInterfaceInfo:(Ljava/io/DataInputStream;Lzio/internal/stacktracer/impl/AkkaLineNumbers$Constants;)V
      46: aload_0
      47: aload         6
      49: aload         8
      51: invokespecial #165                // Method skipFields:(Ljava/io/DataInputStream;Lzio/internal/stacktracer/impl/AkkaLineNumbers$Constants;)V
      54: aload_0
      55: aload         6
      57: aload_3
      58: aload         8
      60: invokespecial #169                // Method readMethods:(Ljava/io/DataInputStream;Lscala/Option;Lzio/internal/stacktracer/impl/AkkaLineNumbers$Constants;)Lscala/Option;
      63: astore        9
      65: aload_0
      66: aload         6
      68: aload         8
      70: invokespecial #173                // Method readAttributes:(Ljava/io/DataInputStream;Lzio/internal/stacktracer/impl/AkkaLineNumbers$Constants;)Lscala/Option;
      73: astore        10
      75: aload         10
      77: invokevirtual #177                // Method scala/Option.isEmpty:()Z
      80: ifeq          89
      83: getstatic     #123                // Field zio/internal/stacktracer/impl/AkkaLineNumbers$NoSourceInfo$.MODULE$:Lzio/internal/stacktracer/impl/AkkaLineNumbers$NoSourceInfo$;
      86: goto          321
      89: getstatic     #116                // Field scala/None$.MODULE$:Lscala/None$;
      92: aload         9
      94: invokevirtual #120                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      97: ifeq          120
     100: new           #38                 // class zio/internal/stacktracer/impl/AkkaLineNumbers$SourceFile
     103: dup
     104: aload         10
     106: invokevirtual #180                // Method scala/Option.get:()Ljava/lang/Object;
     109: checkcast     #104                // class java/lang/String
     112: invokespecial #183                // Method zio/internal/stacktracer/impl/AkkaLineNumbers$SourceFile."<init>":(Ljava/lang/String;)V
     115: astore        5
     117: goto          207
     120: aload         9
     122: instanceof    #89                 // class scala/Some
     125: ifeq          197
     128: aload         9
     130: checkcast     #89                 // class scala/Some
     133: invokevirtual #92                 // Method scala/Some.value:()Ljava/lang/Object;
     136: checkcast     #185                // class scala/Tuple2
     139: astore        11
     141: aload         11
     143: ifnull        197
     146: aload         11
     148: invokevirtual #189                // Method scala/Tuple2._1$mcI$sp:()I
     151: istore        12
     153: aload         11
     155: invokevirtual #192                // Method scala/Tuple2._2$mcI$sp:()I
     158: istore        13
     160: new           #41                 // class zio/internal/stacktracer/impl/AkkaLineNumbers$SourceFileLines
     163: dup
     164: aload         10
     166: invokevirtual #180                // Method scala/Option.get:()Ljava/lang/Object;
     169: checkcast     #104                // class java/lang/String
     172: iload         12
     174: iload         13
     176: aload_2
     177: aload_3
     178: invokedynamic #201,  0            // InvokeDynamic #1:apply:()Lscala/Function0;
     183: invokevirtual #205                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
     186: checkcast     #104                // class java/lang/String
     189: invokespecial #208                // Method zio/internal/stacktracer/impl/AkkaLineNumbers$SourceFileLines."<init>":(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;)V
     192: astore        5
     194: goto          207
     197: new           #125                // class scala/MatchError
     200: dup
     201: aload         9
     203: invokespecial #128                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     206: athrow
     207: aload         5
     209: goto          321
     212: astore        14
     214: getstatic     #213                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
     217: aload         14
     219: invokevirtual #216                // Method scala/util/control/NonFatal$.apply:(Ljava/lang/Throwable;)Z
     222: ifeq          262
     225: new           #44                 // class zio/internal/stacktracer/impl/AkkaLineNumbers$UnknownSourceFormat
     228: dup
     229: new           #218                // class java/lang/StringBuilder
     232: dup
     233: ldc           #219                // int 13
     235: invokespecial #222                // Method java/lang/StringBuilder."<init>":(I)V
     238: ldc           #224                // String parse error:
     240: invokevirtual #228                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     243: aload         14
     245: invokevirtual #231                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     248: invokevirtual #228                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     251: invokevirtual #234                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     254: invokespecial #235                // Method zio/internal/stacktracer/impl/AkkaLineNumbers$UnknownSourceFormat."<init>":(Ljava/lang/String;)V
     257: astore        4
     259: goto          265
     262: aload         14
     264: athrow
     265: aload         4
     267: goto          321
     270: astore        15
     272: aload         6
     274: invokevirtual #238                // Method java/io/DataInputStream.close:()V
     277: goto          318
     280: astore        16
     282: aload         16
     284: instanceof    #240                // class java/lang/InterruptedException
     287: ifeq          296
     290: aload         16
     292: checkcast     #240                // class java/lang/InterruptedException
     295: athrow
     296: aload         16
     298: ifnull        315
     301: getstatic     #213                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
     304: aload         16
     306: invokevirtual #244                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
     309: invokevirtual #177                // Method scala/Option.isEmpty:()Z
     312: ifeq          318
     315: aload         16
     317: athrow
     318: aload         15
     320: athrow
     321: astore        7
     323: aload         6
     325: invokevirtual #238                // Method java/io/DataInputStream.close:()V
     328: goto          369
     331: astore        16
     333: aload         16
     335: instanceof    #240                // class java/lang/InterruptedException
     338: ifeq          347
     341: aload         16
     343: checkcast     #240                // class java/lang/InterruptedException
     346: athrow
     347: aload         16
     349: ifnull        366
     352: getstatic     #213                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
     355: aload         16
     357: invokevirtual #244                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
     360: invokevirtual #177                // Method scala/Option.isEmpty:()Z
     363: ifeq          369
     366: aload         16
     368: athrow
     369: aload         7
     371: areturn
    Exception table:
       from    to  target type
          10   209   212   Class java/lang/Throwable
          10   270   270   any
         272   277   280   Class java/lang/Throwable
         323   328   331   Class java/lang/Throwable

  private scala.Option<scala.Tuple3<java.io.InputStream, java.lang.String, scala.None$>> getStreamForClass(java.lang.Class<?>);
    Code:
       0: aload_1
       1: invokevirtual #262                // Method java/lang/Class.getName:()Ljava/lang/String;
       4: astore_3
       5: new           #218                // class java/lang/StringBuilder
       8: dup
       9: ldc_w         #263                // int 6
      12: invokespecial #222                // Method java/lang/StringBuilder."<init>":(I)V
      15: aload_3
      16: bipush        46
      18: bipush        47
      20: invokevirtual #267                // Method java/lang/String.replace:(CC)Ljava/lang/String;
      23: invokevirtual #228                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc_w         #269                // String .class
      29: invokevirtual #228                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #234                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: astore        4
      37: aload_1
      38: invokevirtual #273                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      41: astore        5
      43: aload         5
      45: ifnull        58
      48: aload         5
      50: aload         4
      52: invokevirtual #279                // Method java/lang/ClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
      55: goto          59
      58: aconst_null
      59: astore        6
      61: aload         6
      63: ifnull        89
      66: new           #89                 // class scala/Some
      69: dup
      70: new           #94                 // class scala/Tuple3
      73: dup
      74: aload         6
      76: aload_3
      77: getstatic     #116                // Field scala/None$.MODULE$:Lscala/None$;
      80: invokespecial #282                // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      83: invokespecial #283                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      86: goto          117
      89: getstatic     #116                // Field scala/None$.MODULE$:Lscala/None$;
      92: areturn
      93: astore        7
      95: getstatic     #213                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
      98: aload         7
     100: invokevirtual #216                // Method scala/util/control/NonFatal$.apply:(Ljava/lang/Throwable;)Z
     103: ifeq          113
     106: getstatic     #116                // Field scala/None$.MODULE$:Lscala/None$;
     109: astore_2
     110: goto          116
     113: aload         7
     115: athrow
     116: aload_2
     117: areturn
    Exception table:
       from    to  target type
           0    92    93   Class java/lang/Throwable

  private scala.Option<scala.Tuple3<java.io.InputStream, java.lang.String, scala.Some<java.lang.String>>> getStreamForLambda(java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #295                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: astore        4
       6: aload         4
       8: ldc_w         #297                // String writeReplace
      11: iconst_0
      12: anewarray     #259                // class java/lang/Class
      15: invokevirtual #301                // Method java/lang/Class.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      18: astore        5
      20: aload         5
      22: iconst_1
      23: invokevirtual #307                // Method java/lang/reflect/Method.setAccessible:(Z)V
      26: aload         5
      28: aload_1
      29: iconst_0
      30: anewarray     #4                  // class java/lang/Object
      33: invokevirtual #311                // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      36: astore        6
      38: aload         6
      40: instanceof    #313                // class java/lang/invoke/SerializedLambda
      43: ifeq          138
      46: aload         6
      48: checkcast     #313                // class java/lang/invoke/SerializedLambda
      51: astore        7
      53: aload         4
      55: invokevirtual #273                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      58: new           #218                // class java/lang/StringBuilder
      61: dup
      62: ldc_w         #263                // int 6
      65: invokespecial #222                // Method java/lang/StringBuilder."<init>":(I)V
      68: aload         7
      70: invokevirtual #316                // Method java/lang/invoke/SerializedLambda.getImplClass:()Ljava/lang/String;
      73: invokevirtual #228                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: ldc_w         #269                // String .class
      79: invokevirtual #228                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: invokevirtual #234                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: invokevirtual #279                // Method java/lang/ClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
      88: astore        8
      90: aload         8
      92: ifnull        131
      95: new           #89                 // class scala/Some
      98: dup
      99: new           #94                 // class scala/Tuple3
     102: dup
     103: aload         8
     105: aload         7
     107: invokevirtual #316                // Method java/lang/invoke/SerializedLambda.getImplClass:()Ljava/lang/String;
     110: new           #89                 // class scala/Some
     113: dup
     114: aload         7
     116: invokevirtual #319                // Method java/lang/invoke/SerializedLambda.getImplMethodName:()Ljava/lang/String;
     119: invokespecial #283                // Method scala/Some."<init>":(Ljava/lang/Object;)V
     122: invokespecial #282                // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
     125: invokespecial #283                // Method scala/Some."<init>":(Ljava/lang/Object;)V
     128: goto          134
     131: getstatic     #116                // Field scala/None$.MODULE$:Lscala/None$;
     134: astore_3
     135: goto          142
     138: getstatic     #116                // Field scala/None$.MODULE$:Lscala/None$;
     141: astore_3
     142: aload_3
     143: areturn
     144: astore        9
     146: getstatic     #213                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
     149: aload         9
     151: invokevirtual #216                // Method scala/util/control/NonFatal$.apply:(Ljava/lang/Throwable;)Z
     154: ifeq          164
     157: getstatic     #116                // Field scala/None$.MODULE$:Lscala/None$;
     160: astore_2
     161: goto          167
     164: aload         9
     166: athrow
     167: aload_2
     168: areturn
    Exception table:
       from    to  target type
           0   143   144   Class java/lang/Throwable

  private void skipID(java.io.DataInputStream);
    Code:
       0: aload_1
       1: invokevirtual #324                // Method java/io/DataInputStream.readInt:()I
       4: ldc_w         #325                // int -889275714
       7: if_icmpeq     21
      10: new           #327                // class java/lang/IllegalArgumentException
      13: dup
      14: ldc_w         #329                // String not a Java class file
      17: invokespecial #330                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: return

  private void skipVersion(java.io.DataInputStream);
    Code:
       0: aload_1
       1: invokevirtual #334                // Method java/io/DataInputStream.readShort:()S
       4: pop
       5: aload_1
       6: invokevirtual #334                // Method java/io/DataInputStream.readShort:()S
       9: pop
      10: return

  private zio.internal.stacktracer.impl.AkkaLineNumbers$Constants getConstants(java.io.DataInputStream);
    Code:
       0: aload_1
       1: invokevirtual #337                // Method java/io/DataInputStream.readUnsignedShort:()I
       4: istore_2
       5: new           #27                 // class zio/internal/stacktracer/impl/AkkaLineNumbers$Constants
       8: dup
       9: iload_2
      10: invokespecial #338                // Method zio/internal/stacktracer/impl/AkkaLineNumbers$Constants."<init>":(I)V
      13: astore_3
      14: aload_3
      15: invokevirtual #341                // Method zio/internal/stacktracer/impl/AkkaLineNumbers$Constants.isDone:()Z
      18: ifne          29
      21: aload_3
      22: aload_1
      23: invokevirtual #344                // Method zio/internal/stacktracer/impl/AkkaLineNumbers$Constants.readOne:(Ljava/io/DataInputStream;)V
      26: goto          14
      29: aload_3
      30: invokevirtual #347                // Method zio/internal/stacktracer/impl/AkkaLineNumbers$Constants.resolve:()V
      33: aload_3
      34: areturn

  private void skipClassInfo(java.io.DataInputStream, zio.internal.stacktracer.impl.AkkaLineNumbers$Constants);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_2
       3: invokevirtual #352                // Method zio$internal$stacktracer$impl$AkkaLineNumbers$$skip:(Ljava/io/DataInputStream;I)V
       6: aload_1
       7: invokevirtual #337                // Method java/io/DataInputStream.readUnsignedShort:()I
      10: pop
      11: aload_0
      12: aload_1
      13: iconst_2
      14: invokevirtual #352                // Method zio$internal$stacktracer$impl$AkkaLineNumbers$$skip:(Ljava/io/DataInputStream;I)V
      17: return

  private void skipInterfaceInfo(java.io.DataInputStream, zio.internal.stacktracer.impl.AkkaLineNumbers$Constants);
    Code:
       0: aload_1
       1: invokevirtual #337                // Method java/io/DataInputStream.readUnsignedShort:()I
       4: istore_3
       5: iconst_1
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpgt     25
      14: iinc          4, 1
      17: aload_1
      18: invokevirtual #337                // Method java/io/DataInputStream.readUnsignedShort:()I
      21: pop
      22: goto          8
      25: return

  private void skipFields(java.io.DataInputStream, zio.internal.stacktracer.impl.AkkaLineNumbers$Constants);
    Code:
       0: aload_1
       1: invokevirtual #337                // Method java/io/DataInputStream.readUnsignedShort:()I
       4: istore_3
       5: iconst_1
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpgt     26
      14: iinc          4, 1
      17: aload_0
      18: aload_1
      19: aload_2
      20: invokespecial #356                // Method skipMethodOrField:(Ljava/io/DataInputStream;Lzio/internal/stacktracer/impl/AkkaLineNumbers$Constants;)V
      23: goto          8
      26: return

  private void skipMethodOrField(java.io.DataInputStream, zio.internal.stacktracer.impl.AkkaLineNumbers$Constants);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_2
       3: invokevirtual #352                // Method zio$internal$stacktracer$impl$AkkaLineNumbers$$skip:(Ljava/io/DataInputStream;I)V
       6: aload_1
       7: invokevirtual #337                // Method java/io/DataInputStream.readUnsignedShort:()I
      10: pop
      11: aload_0
      12: aload_1
      13: iconst_2
      14: invokevirtual #352                // Method zio$internal$stacktracer$impl$AkkaLineNumbers$$skip:(Ljava/io/DataInputStream;I)V
      17: aload_1
      18: invokevirtual #337                // Method java/io/DataInputStream.readUnsignedShort:()I
      21: istore_3
      22: iconst_1
      23: istore        4
      25: iload         4
      27: iload_3
      28: if_icmpgt     42
      31: iinc          4, 1
      34: aload_0
      35: aload_1
      36: invokespecial #359                // Method skipAttribute:(Ljava/io/DataInputStream;)V
      39: goto          25
      42: return

  private void skipAttribute(java.io.DataInputStream);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_2
       3: invokevirtual #352                // Method zio$internal$stacktracer$impl$AkkaLineNumbers$$skip:(Ljava/io/DataInputStream;I)V
       6: aload_1
       7: invokevirtual #324                // Method java/io/DataInputStream.readInt:()I
      10: istore_2
      11: aload_0
      12: aload_1
      13: iload_2
      14: invokevirtual #352                // Method zio$internal$stacktracer$impl$AkkaLineNumbers$$skip:(Ljava/io/DataInputStream;I)V
      17: return

  private scala.Option<scala.Tuple2<java.lang.Object, java.lang.Object>> readMethods(java.io.DataInputStream, scala.Option<java.lang.String>, zio.internal.stacktracer.impl.AkkaLineNumbers$Constants);
    Code:
       0: aload_1
       1: invokevirtual #337                // Method java/io/DataInputStream.readUnsignedShort:()I
       4: istore        5
       6: aload_3
       7: ldc_w         #364                // String Code
      10: invokevirtual #368                // Method zio/internal/stacktracer/impl/AkkaLineNumbers$Constants.contains:(Ljava/lang/String;)Z
      13: ifeq          147
      16: aload_3
      17: ldc_w         #370                // String LineNumberTable
      20: invokevirtual #368                // Method zio/internal/stacktracer/impl/AkkaLineNumbers$Constants.contains:(Ljava/lang/String;)Z
      23: ifeq          147
      26: getstatic     #375                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
      29: getstatic     #380                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      32: iconst_1
      33: invokevirtual #384                // Method scala/Predef$.intWrapper:(I)I
      36: iload         5
      38: invokevirtual #388                // Method scala/runtime/RichInt$.to$extension:(II)Lscala/collection/immutable/Range$Inclusive;
      41: aload_1
      42: aload_3
      43: aload_2
      44: invokedynamic #400,  0            // InvokeDynamic #2:apply:(Ljava/io/DataInputStream;Lzio/internal/stacktracer/impl/AkkaLineNumbers$Constants;Lscala/Option;)Lscala/Function1;
      49: invokevirtual #404                // Method scala/collection/immutable/Range$Inclusive.flatMap:(Lscala/Function1;)Ljava/lang/Object;
      52: checkcast     #406                // class scala/collection/IterableOnceOps
      55: getstatic     #409                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      58: getstatic     #380                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      61: ldc_w         #410                // int 2147483647
      64: invokestatic  #416                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      67: invokevirtual #419                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      70: iconst_0
      71: invokestatic  #416                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      74: invokevirtual #423                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      77: invokedynamic #434,  0            // InvokeDynamic #3:apply:()Lscala/Function2;
      82: invokeinterface #438,  3          // InterfaceMethod scala/collection/IterableOnceOps.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      87: checkcast     #185                // class scala/Tuple2
      90: astore        6
      92: aload         6
      94: ifnull        133
      97: aload         6
      99: invokevirtual #189                // Method scala/Tuple2._1$mcI$sp:()I
     102: istore        7
     104: aload         6
     106: invokevirtual #192                // Method scala/Tuple2._2$mcI$sp:()I
     109: istore        8
     111: ldc_w         #410                // int 2147483647
     114: iload         7
     116: if_icmpne     133
     119: iconst_0
     120: iload         8
     122: if_icmpne     133
     125: getstatic     #116                // Field scala/None$.MODULE$:Lscala/None$;
     128: astore        4
     130: goto          144
     133: new           #89                 // class scala/Some
     136: dup
     137: aload         6
     139: invokespecial #283                // Method scala/Some."<init>":(Ljava/lang/Object;)V
     142: astore        4
     144: aload         4
     146: areturn
     147: iconst_1
     148: istore        9
     150: iload         9
     152: iload         5
     154: if_icmpgt     169
     157: iinc          9, 1
     160: aload_0
     161: aload_1
     162: aload_3
     163: invokespecial #356                // Method skipMethodOrField:(Ljava/io/DataInputStream;Lzio/internal/stacktracer/impl/AkkaLineNumbers$Constants;)V
     166: goto          150
     169: getstatic     #116                // Field scala/None$.MODULE$:Lscala/None$;
     172: areturn

  private scala.Option<scala.Tuple2<java.lang.Object, java.lang.Object>> readMethod(java.io.DataInputStream, int, int, scala.Option<java.lang.String>, zio.internal.stacktracer.impl.AkkaLineNumbers$Constants);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_2
       3: invokevirtual #352                // Method zio$internal$stacktracer$impl$AkkaLineNumbers$$skip:(Ljava/io/DataInputStream;I)V
       6: aload_1
       7: invokevirtual #337                // Method java/io/DataInputStream.readUnsignedShort:()I
      10: istore        6
      12: aload_0
      13: aload_1
      14: iconst_2
      15: invokevirtual #352                // Method zio$internal$stacktracer$impl$AkkaLineNumbers$$skip:(Ljava/io/DataInputStream;I)V
      18: getstatic     #375                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
      21: getstatic     #380                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      24: iconst_1
      25: invokevirtual #384                // Method scala/Predef$.intWrapper:(I)I
      28: aload_1
      29: invokevirtual #337                // Method java/io/DataInputStream.readUnsignedShort:()I
      32: invokevirtual #388                // Method scala/runtime/RichInt$.to$extension:(II)Lscala/collection/immutable/Range$Inclusive;
      35: aload_1
      36: iload_2
      37: aload         4
      39: aload         5
      41: iload         6
      43: iload_3
      44: invokedynamic #452,  0            // InvokeDynamic #4:apply:(Ljava/io/DataInputStream;ILscala/Option;Lzio/internal/stacktracer/impl/AkkaLineNumbers$Constants;II)Lscala/Function1;
      49: invokevirtual #456                // Method scala/collection/immutable/Range$Inclusive.map:(Lscala/Function1;)Lscala/collection/immutable/IndexedSeq;
      52: invokedynamic #465,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
      57: invokeinterface #471,  2          // InterfaceMethod scala/collection/immutable/IndexedSeq.find:(Lscala/Function1;)Lscala/Option;
      62: getstatic     #476                // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
      65: invokevirtual #480                // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
      68: invokevirtual #484                // Method scala/Option.flatten:(Lscala/$less$colon$less;)Lscala/Option;
      71: areturn

  private scala.Option<java.lang.String> readAttributes(java.io.DataInputStream, zio.internal.stacktracer.impl.AkkaLineNumbers$Constants);
    Code:
       0: aload_1
       1: invokevirtual #337                // Method java/io/DataInputStream.readUnsignedShort:()I
       4: istore_3
       5: aload_2
       6: ldc_w         #486                // String SourceFile
       9: invokevirtual #368                // Method zio/internal/stacktracer/impl/AkkaLineNumbers$Constants.contains:(Ljava/lang/String;)Z
      12: ifeq          70
      15: aload_2
      16: ldc_w         #486                // String SourceFile
      19: invokevirtual #489                // Method zio/internal/stacktracer/impl/AkkaLineNumbers$Constants.apply:(Ljava/lang/String;)I
      22: istore        4
      24: getstatic     #375                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
      27: getstatic     #380                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      30: iconst_1
      31: invokevirtual #384                // Method scala/Predef$.intWrapper:(I)I
      34: iload_3
      35: invokevirtual #388                // Method scala/runtime/RichInt$.to$extension:(II)Lscala/collection/immutable/Range$Inclusive;
      38: aload_1
      39: iload         4
      41: aload_2
      42: invokedynamic #497,  0            // InvokeDynamic #6:apply:(Ljava/io/DataInputStream;ILzio/internal/stacktracer/impl/AkkaLineNumbers$Constants;)Lscala/Function1;
      47: invokevirtual #456                // Method scala/collection/immutable/Range$Inclusive.map:(Lscala/Function1;)Lscala/collection/immutable/IndexedSeq;
      50: getstatic     #380                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      53: invokevirtual #500                // Method scala/Predef$.$conforms:()Lscala/Function1;
      56: invokeinterface #502,  2          // InterfaceMethod scala/collection/immutable/IndexedSeq.flatten:(Lscala/Function1;)Ljava/lang/Object;
      61: checkcast     #504                // class scala/collection/IndexedSeqOps
      64: invokeinterface #507,  1          // InterfaceMethod scala/collection/IndexedSeqOps.headOption:()Lscala/Option;
      69: areturn
      70: getstatic     #116                // Field scala/None$.MODULE$:Lscala/None$;
      73: areturn

  public void zio$internal$stacktracer$impl$AkkaLineNumbers$$skip(java.io.DataInputStream, int);
    Code:
       0: aload_1
       1: iload_2
       2: invokevirtual #511                // Method java/io/DataInputStream.skipBytes:(I)I
       5: iload_2
       6: if_icmpeq     20
       9: new           #327                // class java/lang/IllegalArgumentException
      12: dup
      13: ldc_w         #513                // String class file ends prematurely
      16: invokespecial #330                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: return

  public static final scala.Option $anonfun$apply$1(java.lang.Object);
    Code:
       0: getstatic     #54                 // Field MODULE$:Lzio/internal/stacktracer/impl/AkkaLineNumbers$;
       3: aload_0
       4: invokevirtual #295                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       7: invokespecial #516                // Method getStreamForClass:(Ljava/lang/Class;)Lscala/Option;
      10: areturn

  public static final java.lang.String $anonfun$getInfo$1();
    Code:
       0: ldc_w         #517                // String apply
       3: areturn

  public static final scala.collection.immutable.List $anonfun$readMethods$1(java.io.DataInputStream, zio.internal.stacktracer.impl.AkkaLineNumbers$Constants, scala.Option, int);
    Code:
       0: getstatic     #54                 // Field MODULE$:Lzio/internal/stacktracer/impl/AkkaLineNumbers$;
       3: aload_0
       4: aload_1
       5: ldc_w         #364                // String Code
       8: invokevirtual #489                // Method zio/internal/stacktracer/impl/AkkaLineNumbers$Constants.apply:(Ljava/lang/String;)I
      11: aload_1
      12: ldc_w         #370                // String LineNumberTable
      15: invokevirtual #489                // Method zio/internal/stacktracer/impl/AkkaLineNumbers$Constants.apply:(Ljava/lang/String;)I
      18: aload_2
      19: aload_1
      20: invokespecial #525                // Method readMethod:(Ljava/io/DataInputStream;IILscala/Option;Lzio/internal/stacktracer/impl/AkkaLineNumbers$Constants;)Lscala/Option;
      23: invokevirtual #529                // Method scala/Option.toList:()Lscala/collection/immutable/List;
      26: areturn

  public static final scala.Tuple2 $anonfun$readMethods$2(scala.Tuple2, scala.Tuple2);
    Code:
       0: new           #185                // class scala/Tuple2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #534                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: astore_3
      10: aload_0
      11: ifnull        67
      14: aload_0
      15: invokevirtual #189                // Method scala/Tuple2._1$mcI$sp:()I
      18: istore        4
      20: aload_0
      21: invokevirtual #192                // Method scala/Tuple2._2$mcI$sp:()I
      24: istore        5
      26: aload_1
      27: ifnull        67
      30: aload_1
      31: invokevirtual #189                // Method scala/Tuple2._1$mcI$sp:()I
      34: istore        6
      36: aload_1
      37: invokevirtual #192                // Method scala/Tuple2._2$mcI$sp:()I
      40: istore        7
      42: new           #536                // class scala/Tuple2$mcII$sp
      45: dup
      46: iload         4
      48: iload         6
      50: invokestatic  #542                // Method java/lang/Math.min:(II)I
      53: iload         5
      55: iload         7
      57: invokestatic  #545                // Method java/lang/Math.max:(II)I
      60: invokespecial #548                // Method scala/Tuple2$mcII$sp."<init>":(II)V
      63: astore_2
      64: goto          76
      67: new           #125                // class scala/MatchError
      70: dup
      71: aload_3
      72: invokespecial #128                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      75: athrow
      76: aload_2
      77: areturn

  public static final int $anonfun$readMethod$3(java.io.DataInputStream, int);
    Code:
       0: getstatic     #54                 // Field MODULE$:Lzio/internal/stacktracer/impl/AkkaLineNumbers$;
       3: aload_0
       4: iconst_2
       5: invokevirtual #352                // Method zio$internal$stacktracer$impl$AkkaLineNumbers$$skip:(Ljava/io/DataInputStream;I)V
       8: aload_0
       9: invokevirtual #337                // Method java/io/DataInputStream.readUnsignedShort:()I
      12: ireturn

  public static final scala.Option $anonfun$readMethod$2(java.io.DataInputStream, int, int);
    Code:
       0: aload_0
       1: invokevirtual #337                // Method java/io/DataInputStream.readUnsignedShort:()I
       4: istore_3
       5: aload_0
       6: invokevirtual #324                // Method java/io/DataInputStream.readInt:()I
       9: istore        4
      11: iload_3
      12: iload_1
      13: if_icmpeq     29
      16: getstatic     #54                 // Field MODULE$:Lzio/internal/stacktracer/impl/AkkaLineNumbers$;
      19: aload_0
      20: iload         4
      22: invokevirtual #352                // Method zio$internal$stacktracer$impl$AkkaLineNumbers$$skip:(Ljava/io/DataInputStream;I)V
      25: getstatic     #116                // Field scala/None$.MODULE$:Lscala/None$;
      28: areturn
      29: getstatic     #375                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
      32: getstatic     #380                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      35: iconst_1
      36: invokevirtual #384                // Method scala/Predef$.intWrapper:(I)I
      39: aload_0
      40: invokevirtual #337                // Method java/io/DataInputStream.readUnsignedShort:()I
      43: invokevirtual #388                // Method scala/runtime/RichInt$.to$extension:(II)Lscala/collection/immutable/Range$Inclusive;
      46: aload_0
      47: invokedynamic #569,  0            // InvokeDynamic #7:apply$mcII$sp:(Ljava/io/DataInputStream;)Lscala/runtime/java8/JFunction1$mcII$sp;
      52: invokevirtual #456                // Method scala/collection/immutable/Range$Inclusive.map:(Lscala/Function1;)Lscala/collection/immutable/IndexedSeq;
      55: astore        5
      57: new           #89                 // class scala/Some
      60: dup
      61: getstatic     #409                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      64: getstatic     #380                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      67: aload         5
      69: getstatic     #572                // Field scala/math/Ordering$Int$.MODULE$:Lscala/math/Ordering$Int$;
      72: invokeinterface #575,  2          // InterfaceMethod scala/collection/immutable/IndexedSeq.min:(Lscala/math/Ordering;)Ljava/lang/Object;
      77: invokevirtual #419                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      80: aload         5
      82: getstatic     #572                // Field scala/math/Ordering$Int$.MODULE$:Lscala/math/Ordering$Int$;
      85: invokeinterface #577,  2          // InterfaceMethod scala/collection/immutable/IndexedSeq.max:(Lscala/math/Ordering;)Ljava/lang/Object;
      90: invokevirtual #423                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      93: invokespecial #283                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      96: areturn

  public static final scala.Option $anonfun$readMethod$1(java.io.DataInputStream, int, scala.Option, zio.internal.stacktracer.impl.AkkaLineNumbers$Constants, int, int, int);
    Code:
       0: aload_0
       1: invokevirtual #337                // Method java/io/DataInputStream.readUnsignedShort:()I
       4: istore        7
       6: aload_0
       7: invokevirtual #324                // Method java/io/DataInputStream.readInt:()I
      10: istore        8
      12: iload         7
      14: iload_1
      15: if_icmpne     58
      18: aload_2
      19: invokevirtual #589                // Method scala/Option.isDefined:()Z
      22: ifeq          71
      25: aload_3
      26: iload         4
      28: invokevirtual #592                // Method zio/internal/stacktracer/impl/AkkaLineNumbers$Constants.apply:(I)Ljava/lang/String;
      31: aload_2
      32: invokevirtual #180                // Method scala/Option.get:()Ljava/lang/Object;
      35: astore        9
      37: dup
      38: ifnonnull     50
      41: pop
      42: aload         9
      44: ifnull        71
      47: goto          58
      50: aload         9
      52: invokevirtual #120                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      55: ifne          71
      58: getstatic     #54                 // Field MODULE$:Lzio/internal/stacktracer/impl/AkkaLineNumbers$;
      61: aload_0
      62: iload         8
      64: invokevirtual #352                // Method zio$internal$stacktracer$impl$AkkaLineNumbers$$skip:(Ljava/io/DataInputStream;I)V
      67: getstatic     #116                // Field scala/None$.MODULE$:Lscala/None$;
      70: areturn
      71: getstatic     #54                 // Field MODULE$:Lzio/internal/stacktracer/impl/AkkaLineNumbers$;
      74: aload_0
      75: iconst_4
      76: invokevirtual #352                // Method zio$internal$stacktracer$impl$AkkaLineNumbers$$skip:(Ljava/io/DataInputStream;I)V
      79: getstatic     #54                 // Field MODULE$:Lzio/internal/stacktracer/impl/AkkaLineNumbers$;
      82: aload_0
      83: aload_0
      84: invokevirtual #324                // Method java/io/DataInputStream.readInt:()I
      87: invokevirtual #352                // Method zio$internal$stacktracer$impl$AkkaLineNumbers$$skip:(Ljava/io/DataInputStream;I)V
      90: getstatic     #54                 // Field MODULE$:Lzio/internal/stacktracer/impl/AkkaLineNumbers$;
      93: aload_0
      94: bipush        8
      96: aload_0
      97: invokevirtual #337                // Method java/io/DataInputStream.readUnsignedShort:()I
     100: imul
     101: invokevirtual #352                // Method zio$internal$stacktracer$impl$AkkaLineNumbers$$skip:(Ljava/io/DataInputStream;I)V
     104: getstatic     #375                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
     107: getstatic     #380                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     110: iconst_1
     111: invokevirtual #384                // Method scala/Predef$.intWrapper:(I)I
     114: aload_0
     115: invokevirtual #337                // Method java/io/DataInputStream.readUnsignedShort:()I
     118: invokevirtual #388                // Method scala/runtime/RichInt$.to$extension:(II)Lscala/collection/immutable/Range$Inclusive;
     121: aload_0
     122: iload         5
     124: invokedynamic #600,  0            // InvokeDynamic #8:apply:(Ljava/io/DataInputStream;I)Lscala/Function1;
     129: invokevirtual #456                // Method scala/collection/immutable/Range$Inclusive.map:(Lscala/Function1;)Lscala/collection/immutable/IndexedSeq;
     132: getstatic     #380                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     135: invokevirtual #500                // Method scala/Predef$.$conforms:()Lscala/Function1;
     138: invokeinterface #502,  2          // InterfaceMethod scala/collection/immutable/IndexedSeq.flatten:(Lscala/Function1;)Ljava/lang/Object;
     143: checkcast     #504                // class scala/collection/IndexedSeqOps
     146: invokeinterface #507,  1          // InterfaceMethod scala/collection/IndexedSeqOps.headOption:()Lscala/Option;
     151: areturn

  public static final boolean $anonfun$readMethod$4(scala.Option);
    Code:
       0: aload_0
       1: invokevirtual #589                // Method scala/Option.isDefined:()Z
       4: ireturn

  public static final scala.Option $anonfun$readAttributes$1(java.io.DataInputStream, int, zio.internal.stacktracer.impl.AkkaLineNumbers$Constants, int);
    Code:
       0: aload_0
       1: invokevirtual #337                // Method java/io/DataInputStream.readUnsignedShort:()I
       4: istore        4
       6: aload_0
       7: invokevirtual #324                // Method java/io/DataInputStream.readInt:()I
      10: istore        5
      12: iload         4
      14: iload_1
      15: if_icmpeq     31
      18: getstatic     #54                 // Field MODULE$:Lzio/internal/stacktracer/impl/AkkaLineNumbers$;
      21: aload_0
      22: iload         5
      24: invokevirtual #352                // Method zio$internal$stacktracer$impl$AkkaLineNumbers$$skip:(Ljava/io/DataInputStream;I)V
      27: getstatic     #116                // Field scala/None$.MODULE$:Lscala/None$;
      30: areturn
      31: aload_0
      32: invokevirtual #337                // Method java/io/DataInputStream.readUnsignedShort:()I
      35: istore        6
      37: new           #89                 // class scala/Some
      40: dup
      41: aload_2
      42: iload         6
      44: invokevirtual #592                // Method zio/internal/stacktracer/impl/AkkaLineNumbers$Constants.apply:(I)Ljava/lang/String;
      47: invokespecial #283                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      50: areturn

  private zio.internal.stacktracer.impl.AkkaLineNumbers$();
    Code:
       0: aload_0
       1: invokespecial #610                // Method java/lang/Object."<init>":()V
       4: return

  public static final scala.collection.immutable.List $anonfun$readMethods$1$adapted(java.io.DataInputStream, zio.internal.stacktracer.impl.AkkaLineNumbers$Constants, scala.Option, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #614                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       7: invokestatic  #616                // Method $anonfun$readMethods$1:(Ljava/io/DataInputStream;Lzio/internal/stacktracer/impl/AkkaLineNumbers$Constants;Lscala/Option;I)Lscala/collection/immutable/List;
      10: areturn

  public static final scala.Option $anonfun$readMethod$1$adapted(java.io.DataInputStream, int, scala.Option, zio.internal.stacktracer.impl.AkkaLineNumbers$Constants, int, int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: iload         5
       8: aload         6
      10: invokestatic  #614                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
      13: invokestatic  #618                // Method $anonfun$readMethod$1:(Ljava/io/DataInputStream;ILscala/Option;Lzio/internal/stacktracer/impl/AkkaLineNumbers$Constants;III)Lscala/Option;
      16: areturn

  public static final java.lang.Object $anonfun$readMethod$4$adapted(scala.Option);
    Code:
       0: aload_0
       1: invokestatic  #620                // Method $anonfun$readMethod$4:(Lscala/Option;)Z
       4: invokestatic  #624                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: areturn

  public static final scala.Option $anonfun$readAttributes$1$adapted(java.io.DataInputStream, int, zio.internal.stacktracer.impl.AkkaLineNumbers$Constants, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #614                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       7: invokestatic  #626                // Method $anonfun$readAttributes$1:(Ljava/io/DataInputStream;ILzio/internal/stacktracer/impl/AkkaLineNumbers$Constants;I)Lscala/Option;
      10: areturn

  public static final scala.Option $anonfun$readMethod$2$adapted(java.io.DataInputStream, int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #614                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       6: invokestatic  #628                // Method $anonfun$readMethod$2:(Ljava/io/DataInputStream;II)Lscala/Option;
       9: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #640,  0            // InvokeDynamic #9:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
