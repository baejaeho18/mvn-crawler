Compiled from "AkkaLineNumbers.scala"
public class zio.internal.stacktracer.impl.AkkaLineNumbers$SourceFileLines$ extends scala.runtime.AbstractFunction5<java.lang.String, java.lang.Object, java.lang.Object, java.lang.String, java.lang.String, zio.internal.stacktracer.impl.AkkaLineNumbers$SourceFileLines> implements java.io.Serializable {
  public static final zio.internal.stacktracer.impl.AkkaLineNumbers$SourceFileLines$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class zio/internal/stacktracer/impl/AkkaLineNumbers$SourceFileLines$
       3: dup
       4: invokespecial #21                 // Method "<init>":()V
       7: putstatic     #23                 // Field MODULE$:Lzio/internal/stacktracer/impl/AkkaLineNumbers$SourceFileLines$;
      10: return

  public final java.lang.String toString();
    Code:
       0: ldc           #26                 // String SourceFileLines
       2: areturn

  public zio.internal.stacktracer.impl.AkkaLineNumbers$SourceFileLines apply(java.lang.String, int, int, java.lang.String, java.lang.String);
    Code:
       0: new           #10                 // class zio/internal/stacktracer/impl/AkkaLineNumbers$SourceFileLines
       3: dup
       4: aload_1
       5: iload_2
       6: iload_3
       7: aload         4
       9: aload         5
      11: invokespecial #37                 // Method zio/internal/stacktracer/impl/AkkaLineNumbers$SourceFileLines."<init>":(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;)V
      14: areturn

  public scala.Option<scala.Tuple5<java.lang.String, java.lang.Object, java.lang.Object, java.lang.String, java.lang.String>> unapply(zio.internal.stacktracer.impl.AkkaLineNumbers$SourceFileLines);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: getstatic     #48                 // Field scala/None$.MODULE$:Lscala/None$;
       7: areturn
       8: new           #50                 // class scala/Some
      11: dup
      12: new           #52                 // class scala/Tuple5
      15: dup
      16: aload_1
      17: invokevirtual #54                 // Method zio/internal/stacktracer/impl/AkkaLineNumbers$SourceFileLines.filename:()Ljava/lang/String;
      20: aload_1
      21: invokevirtual #57                 // Method zio/internal/stacktracer/impl/AkkaLineNumbers$SourceFileLines.from:()I
      24: invokestatic  #63                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      27: aload_1
      28: invokevirtual #65                 // Method zio/internal/stacktracer/impl/AkkaLineNumbers$SourceFileLines.to:()I
      31: invokestatic  #63                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      34: aload_1
      35: invokevirtual #67                 // Method zio/internal/stacktracer/impl/AkkaLineNumbers$SourceFileLines.className:()Ljava/lang/String;
      38: aload_1
      39: invokevirtual #69                 // Method zio/internal/stacktracer/impl/AkkaLineNumbers$SourceFileLines.methodName:()Ljava/lang/String;
      42: invokespecial #72                 // Method scala/Tuple5."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      45: invokespecial #75                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
      48: areturn

  private java.lang.Object writeReplace();
    Code:
       0: new           #80                 // class scala/runtime/ModuleSerializationProxy
       3: dup
       4: ldc           #2                  // class zio/internal/stacktracer/impl/AkkaLineNumbers$SourceFileLines$
       6: invokespecial #83                 // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
       9: areturn

  public java.lang.Object apply(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #91                 // class java/lang/String
       5: aload_2
       6: invokestatic  #95                 // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       9: aload_3
      10: invokestatic  #95                 // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
      13: aload         4
      15: checkcast     #91                 // class java/lang/String
      18: aload         5
      20: checkcast     #91                 // class java/lang/String
      23: invokevirtual #97                 // Method apply:(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;)Lzio/internal/stacktracer/impl/AkkaLineNumbers$SourceFileLines;
      26: areturn

  public zio.internal.stacktracer.impl.AkkaLineNumbers$SourceFileLines$();
    Code:
       0: aload_0
       1: invokespecial #99                 // Method scala/runtime/AbstractFunction5."<init>":()V
       4: return
}
