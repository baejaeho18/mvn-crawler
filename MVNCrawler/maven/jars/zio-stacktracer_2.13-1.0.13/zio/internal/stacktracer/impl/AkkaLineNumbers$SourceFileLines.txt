Compiled from "AkkaLineNumbers.scala"
public final class zio.internal.stacktracer.impl.AkkaLineNumbers$SourceFileLines extends zio.internal.stacktracer.impl.AkkaLineNumbers$Result implements scala.Product,java.io.Serializable {
  private final java.lang.String filename;

  private final int from;

  private final int to;

  private final java.lang.String className;

  private final java.lang.String methodName;

  public scala.collection.Iterator<java.lang.String> productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #27                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public java.lang.String filename();
    Code:
       0: aload_0
       1: getfield      #32                 // Field filename:Ljava/lang/String;
       4: areturn

  public int from();
    Code:
       0: aload_0
       1: getfield      #35                 // Field from:I
       4: ireturn

  public int to();
    Code:
       0: aload_0
       1: getfield      #37                 // Field to:I
       4: ireturn

  public java.lang.String className();
    Code:
       0: aload_0
       1: getfield      #39                 // Field className:Ljava/lang/String;
       4: areturn

  public java.lang.String methodName();
    Code:
       0: aload_0
       1: getfield      #41                 // Field methodName:Ljava/lang/String;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method from:()I
       4: aload_0
       5: invokevirtual #46                 // Method to:()I
       8: if_icmpeq     55
      11: new           #48                 // class java/lang/StringBuilder
      14: dup
      15: ldc           #49                 // int 2
      17: invokespecial #53                 // Method java/lang/StringBuilder."<init>":(I)V
      20: aload_0
      21: invokevirtual #55                 // Method filename:()Ljava/lang/String;
      24: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: ldc           #61                 // String :
      29: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_0
      33: invokevirtual #44                 // Method from:()I
      36: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      39: ldc           #66                 // String -
      41: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_0
      45: invokevirtual #46                 // Method to:()I
      48: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      51: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: areturn
      55: new           #48                 // class java/lang/StringBuilder
      58: dup
      59: ldc           #69                 // int 1
      61: invokespecial #53                 // Method java/lang/StringBuilder."<init>":(I)V
      64: aload_0
      65: invokevirtual #55                 // Method filename:()Ljava/lang/String;
      68: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: ldc           #61                 // String :
      73: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload_0
      77: invokevirtual #44                 // Method from:()I
      80: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      83: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: areturn

  public zio.internal.stacktracer.impl.AkkaLineNumbers$SourceFileLines copy(java.lang.String, int, int, java.lang.String, java.lang.String);
    Code:
       0: new           #2                  // class zio/internal/stacktracer/impl/AkkaLineNumbers$SourceFileLines
       3: dup
       4: aload_1
       5: iload_2
       6: iload_3
       7: aload         4
       9: aload         5
      11: invokespecial #74                 // Method "<init>":(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;)V
      14: areturn

  public java.lang.String copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method filename:()Ljava/lang/String;
       4: areturn

  public int copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method from:()I
       4: ireturn

  public int copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method to:()I
       4: ireturn

  public java.lang.String copy$default$4();
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method className:()Ljava/lang/String;
       4: areturn

  public java.lang.String copy$default$5();
    Code:
       0: aload_0
       1: invokevirtual #83                 // Method methodName:()Ljava/lang/String;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #85                 // String SourceFileLines
       2: areturn

  public int productArity();
    Code:
       0: iconst_5
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: tableswitch   { // 0 to 4
                     0: 36
                     1: 41
                     2: 49
                     3: 57
                     4: 62
               default: 67
          }
      36: aload_0
      37: invokevirtual #55                 // Method filename:()Ljava/lang/String;
      40: areturn
      41: aload_0
      42: invokevirtual #44                 // Method from:()I
      45: invokestatic  #95                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      48: areturn
      49: aload_0
      50: invokevirtual #46                 // Method to:()I
      53: invokestatic  #95                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      56: areturn
      57: aload_0
      58: invokevirtual #80                 // Method className:()Ljava/lang/String;
      61: areturn
      62: aload_0
      63: invokevirtual #83                 // Method methodName:()Ljava/lang/String;
      66: areturn
      67: iload_1
      68: invokestatic  #100                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
      71: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #108                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #111                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class zio/internal/stacktracer/impl/AkkaLineNumbers$SourceFileLines
       4: ireturn

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: tableswitch   { // 0 to 4
                     0: 36
                     1: 39
                     2: 42
                     3: 45
                     4: 48
               default: 51
          }
      36: ldc           #117                // String filename
      38: areturn
      39: ldc           #118                // String from
      41: areturn
      42: ldc           #119                // String to
      44: areturn
      45: ldc           #120                // String className
      47: areturn
      48: ldc           #121                // String methodName
      50: areturn
      51: iload_1
      52: invokestatic  #100                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
      55: checkcast     #123                // class java/lang/String
      58: areturn

  public int hashCode();
    Code:
       0: ldc           #125                // int -889275714
       2: ldc           #85                 // String SourceFileLines
       4: invokevirtual #127                // Method java/lang/String.hashCode:()I
       7: invokestatic  #131                // Method scala/runtime/Statics.mix:(II)I
      10: aload_0
      11: invokevirtual #55                 // Method filename:()Ljava/lang/String;
      14: invokestatic  #135                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      17: invokestatic  #131                // Method scala/runtime/Statics.mix:(II)I
      20: aload_0
      21: invokevirtual #44                 // Method from:()I
      24: invokestatic  #131                // Method scala/runtime/Statics.mix:(II)I
      27: aload_0
      28: invokevirtual #46                 // Method to:()I
      31: invokestatic  #131                // Method scala/runtime/Statics.mix:(II)I
      34: aload_0
      35: invokevirtual #80                 // Method className:()Ljava/lang/String;
      38: invokestatic  #135                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      41: invokestatic  #131                // Method scala/runtime/Statics.mix:(II)I
      44: aload_0
      45: invokevirtual #83                 // Method methodName:()Ljava/lang/String;
      48: invokestatic  #135                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      51: invokestatic  #131                // Method scala/runtime/Statics.mix:(II)I
      54: iconst_5
      55: invokestatic  #138                // Method scala/runtime/Statics.finalizeHash:(II)I
      58: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     151
       5: aload_1
       6: instanceof    #2                  // class zio/internal/stacktracer/impl/AkkaLineNumbers$SourceFileLines
       9: ifeq          17
      12: iconst_1
      13: istore_2
      14: goto          19
      17: iconst_0
      18: istore_2
      19: iload_2
      20: ifeq          153
      23: aload_1
      24: checkcast     #2                  // class zio/internal/stacktracer/impl/AkkaLineNumbers$SourceFileLines
      27: astore_3
      28: aload_0
      29: invokevirtual #44                 // Method from:()I
      32: aload_3
      33: invokevirtual #44                 // Method from:()I
      36: if_icmpne     147
      39: aload_0
      40: invokevirtual #46                 // Method to:()I
      43: aload_3
      44: invokevirtual #46                 // Method to:()I
      47: if_icmpne     147
      50: aload_0
      51: invokevirtual #55                 // Method filename:()Ljava/lang/String;
      54: aload_3
      55: invokevirtual #55                 // Method filename:()Ljava/lang/String;
      58: astore        4
      60: dup
      61: ifnonnull     73
      64: pop
      65: aload         4
      67: ifnull        81
      70: goto          147
      73: aload         4
      75: invokevirtual #143                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      78: ifeq          147
      81: aload_0
      82: invokevirtual #80                 // Method className:()Ljava/lang/String;
      85: aload_3
      86: invokevirtual #80                 // Method className:()Ljava/lang/String;
      89: astore        5
      91: dup
      92: ifnonnull     104
      95: pop
      96: aload         5
      98: ifnull        112
     101: goto          147
     104: aload         5
     106: invokevirtual #143                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     109: ifeq          147
     112: aload_0
     113: invokevirtual #83                 // Method methodName:()Ljava/lang/String;
     116: aload_3
     117: invokevirtual #83                 // Method methodName:()Ljava/lang/String;
     120: astore        6
     122: dup
     123: ifnonnull     135
     126: pop
     127: aload         6
     129: ifnull        143
     132: goto          147
     135: aload         6
     137: invokevirtual #143                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     140: ifeq          147
     143: iconst_1
     144: goto          148
     147: iconst_0
     148: ifeq          153
     151: iconst_1
     152: ireturn
     153: iconst_0
     154: ireturn

  public zio.internal.stacktracer.impl.AkkaLineNumbers$SourceFileLines(java.lang.String, int, int, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field filename:Ljava/lang/String;
       5: aload_0
       6: iload_2
       7: putfield      #35                 // Field from:I
      10: aload_0
      11: iload_3
      12: putfield      #37                 // Field to:I
      15: aload_0
      16: aload         4
      18: putfield      #39                 // Field className:Ljava/lang/String;
      21: aload_0
      22: aload         5
      24: putfield      #41                 // Field methodName:Ljava/lang/String;
      27: aload_0
      28: invokespecial #146                // Method zio/internal/stacktracer/impl/AkkaLineNumbers$Result."<init>":()V
      31: aload_0
      32: invokestatic  #150                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
      35: return
}
