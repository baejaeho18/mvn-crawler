Compiled from "Plugin.java"
public final class org.cdk8s.jenkins.Plugin$Jsii$Proxy extends software.amazon.jsii.JsiiObject implements org.cdk8s.jenkins.Plugin {
  private final java.lang.String name;

  private final java.lang.String version;

  private final java.lang.String downloadUrl;

  protected org.cdk8s.jenkins.Plugin$Jsii$Proxy(software.amazon.jsii.JsiiObjectRef);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method software/amazon/jsii/JsiiObject."<init>":(Lsoftware/amazon/jsii/JsiiObjectRef;)V
       5: aload_0
       6: aload_0
       7: ldc           #2                  // String name
       9: ldc           #3                  // class java/lang/String
      11: invokestatic  #4                  // Method software/amazon/jsii/NativeType.forClass:(Ljava/lang/Class;)Lsoftware/amazon/jsii/NativeType;
      14: invokestatic  #5                  // Method software/amazon/jsii/Kernel.get:(Ljava/lang/Object;Ljava/lang/String;Lsoftware/amazon/jsii/NativeType;)Ljava/lang/Object;
      17: checkcast     #3                  // class java/lang/String
      20: putfield      #6                  // Field name:Ljava/lang/String;
      23: aload_0
      24: aload_0
      25: ldc           #7                  // String version
      27: ldc           #3                  // class java/lang/String
      29: invokestatic  #4                  // Method software/amazon/jsii/NativeType.forClass:(Ljava/lang/Class;)Lsoftware/amazon/jsii/NativeType;
      32: invokestatic  #5                  // Method software/amazon/jsii/Kernel.get:(Ljava/lang/Object;Ljava/lang/String;Lsoftware/amazon/jsii/NativeType;)Ljava/lang/Object;
      35: checkcast     #3                  // class java/lang/String
      38: putfield      #8                  // Field version:Ljava/lang/String;
      41: aload_0
      42: aload_0
      43: ldc           #9                  // String downloadUrl
      45: ldc           #3                  // class java/lang/String
      47: invokestatic  #4                  // Method software/amazon/jsii/NativeType.forClass:(Ljava/lang/Class;)Lsoftware/amazon/jsii/NativeType;
      50: invokestatic  #5                  // Method software/amazon/jsii/Kernel.get:(Ljava/lang/Object;Ljava/lang/String;Lsoftware/amazon/jsii/NativeType;)Ljava/lang/Object;
      53: checkcast     #3                  // class java/lang/String
      56: putfield      #10                 // Field downloadUrl:Ljava/lang/String;
      59: return

  protected org.cdk8s.jenkins.Plugin$Jsii$Proxy(org.cdk8s.jenkins.Plugin$Builder);
    Code:
       0: aload_0
       1: getstatic     #11                 // Field software/amazon/jsii/JsiiObject$InitializationMode.JSII:Lsoftware/amazon/jsii/JsiiObject$InitializationMode;
       4: invokespecial #12                 // Method software/amazon/jsii/JsiiObject."<init>":(Lsoftware/amazon/jsii/JsiiObject$InitializationMode;)V
       7: aload_0
       8: aload_1
       9: getfield      #13                 // Field org/cdk8s/jenkins/Plugin$Builder.name:Ljava/lang/String;
      12: ldc           #14                 // String name is required
      14: invokestatic  #15                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      17: checkcast     #3                  // class java/lang/String
      20: putfield      #6                  // Field name:Ljava/lang/String;
      23: aload_0
      24: aload_1
      25: getfield      #16                 // Field org/cdk8s/jenkins/Plugin$Builder.version:Ljava/lang/String;
      28: ldc           #17                 // String version is required
      30: invokestatic  #15                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      33: checkcast     #3                  // class java/lang/String
      36: putfield      #8                  // Field version:Ljava/lang/String;
      39: aload_0
      40: aload_1
      41: getfield      #18                 // Field org/cdk8s/jenkins/Plugin$Builder.downloadUrl:Ljava/lang/String;
      44: putfield      #10                 // Field downloadUrl:Ljava/lang/String;
      47: return

  public final java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #6                  // Field name:Ljava/lang/String;
       4: areturn

  public final java.lang.String getVersion();
    Code:
       0: aload_0
       1: getfield      #8                  // Field version:Ljava/lang/String;
       4: areturn

  public final java.lang.String getDownloadUrl();
    Code:
       0: aload_0
       1: getfield      #10                 // Field downloadUrl:Ljava/lang/String;
       4: areturn

  public com.fasterxml.jackson.databind.JsonNode $jsii$toJson();
    Code:
       0: getstatic     #19                 // Field software/amazon/jsii/JsiiObjectMapper.INSTANCE:Lcom/fasterxml/jackson/databind/ObjectMapper;
       3: astore_1
       4: getstatic     #20                 // Field com/fasterxml/jackson/databind/node/JsonNodeFactory.instance:Lcom/fasterxml/jackson/databind/node/JsonNodeFactory;
       7: invokevirtual #21                 // Method com/fasterxml/jackson/databind/node/JsonNodeFactory.objectNode:()Lcom/fasterxml/jackson/databind/node/ObjectNode;
      10: astore_2
      11: aload_2
      12: ldc           #2                  // String name
      14: aload_1
      15: aload_0
      16: invokevirtual #22                 // Method getName:()Ljava/lang/String;
      19: invokevirtual #23                 // Method com/fasterxml/jackson/databind/ObjectMapper.valueToTree:(Ljava/lang/Object;)Lcom/fasterxml/jackson/databind/JsonNode;
      22: invokevirtual #24                 // Method com/fasterxml/jackson/databind/node/ObjectNode.set:(Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/fasterxml/jackson/databind/JsonNode;
      25: pop
      26: aload_2
      27: ldc           #7                  // String version
      29: aload_1
      30: aload_0
      31: invokevirtual #25                 // Method getVersion:()Ljava/lang/String;
      34: invokevirtual #23                 // Method com/fasterxml/jackson/databind/ObjectMapper.valueToTree:(Ljava/lang/Object;)Lcom/fasterxml/jackson/databind/JsonNode;
      37: invokevirtual #24                 // Method com/fasterxml/jackson/databind/node/ObjectNode.set:(Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/fasterxml/jackson/databind/JsonNode;
      40: pop
      41: aload_0
      42: invokevirtual #26                 // Method getDownloadUrl:()Ljava/lang/String;
      45: ifnull        63
      48: aload_2
      49: ldc           #9                  // String downloadUrl
      51: aload_1
      52: aload_0
      53: invokevirtual #26                 // Method getDownloadUrl:()Ljava/lang/String;
      56: invokevirtual #23                 // Method com/fasterxml/jackson/databind/ObjectMapper.valueToTree:(Ljava/lang/Object;)Lcom/fasterxml/jackson/databind/JsonNode;
      59: invokevirtual #24                 // Method com/fasterxml/jackson/databind/node/ObjectNode.set:(Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/fasterxml/jackson/databind/JsonNode;
      62: pop
      63: getstatic     #20                 // Field com/fasterxml/jackson/databind/node/JsonNodeFactory.instance:Lcom/fasterxml/jackson/databind/node/JsonNodeFactory;
      66: invokevirtual #21                 // Method com/fasterxml/jackson/databind/node/JsonNodeFactory.objectNode:()Lcom/fasterxml/jackson/databind/node/ObjectNode;
      69: astore_3
      70: aload_3
      71: ldc           #27                 // String fqn
      73: aload_1
      74: ldc           #28                 // String cdk8s-jenkins.Plugin
      76: invokevirtual #23                 // Method com/fasterxml/jackson/databind/ObjectMapper.valueToTree:(Ljava/lang/Object;)Lcom/fasterxml/jackson/databind/JsonNode;
      79: invokevirtual #24                 // Method com/fasterxml/jackson/databind/node/ObjectNode.set:(Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/fasterxml/jackson/databind/JsonNode;
      82: pop
      83: aload_3
      84: ldc           #29                 // String data
      86: aload_2
      87: invokevirtual #24                 // Method com/fasterxml/jackson/databind/node/ObjectNode.set:(Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/fasterxml/jackson/databind/JsonNode;
      90: pop
      91: getstatic     #20                 // Field com/fasterxml/jackson/databind/node/JsonNodeFactory.instance:Lcom/fasterxml/jackson/databind/node/JsonNodeFactory;
      94: invokevirtual #21                 // Method com/fasterxml/jackson/databind/node/JsonNodeFactory.objectNode:()Lcom/fasterxml/jackson/databind/node/ObjectNode;
      97: astore        4
      99: aload         4
     101: ldc           #30                 // String $jsii.struct
     103: aload_3
     104: invokevirtual #24                 // Method com/fasterxml/jackson/databind/node/ObjectNode.set:(Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/fasterxml/jackson/databind/JsonNode;
     107: pop
     108: aload         4
     110: areturn

  public final boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #31                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #31                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #32                 // class org/cdk8s/jenkins/Plugin$Jsii$Proxy
      28: astore_2
      29: aload_0
      30: getfield      #6                  // Field name:Ljava/lang/String;
      33: aload_2
      34: getfield      #6                  // Field name:Ljava/lang/String;
      37: invokevirtual #33                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      40: ifne          45
      43: iconst_0
      44: ireturn
      45: aload_0
      46: getfield      #8                  // Field version:Ljava/lang/String;
      49: aload_2
      50: getfield      #8                  // Field version:Ljava/lang/String;
      53: invokevirtual #33                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      56: ifne          61
      59: iconst_0
      60: ireturn
      61: aload_0
      62: getfield      #10                 // Field downloadUrl:Ljava/lang/String;
      65: ifnull        82
      68: aload_0
      69: getfield      #10                 // Field downloadUrl:Ljava/lang/String;
      72: aload_2
      73: getfield      #10                 // Field downloadUrl:Ljava/lang/String;
      76: invokevirtual #33                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      79: goto          94
      82: aload_2
      83: getfield      #10                 // Field downloadUrl:Ljava/lang/String;
      86: ifnonnull     93
      89: iconst_1
      90: goto          94
      93: iconst_0
      94: ireturn

  public final int hashCode();
    Code:
       0: aload_0
       1: getfield      #6                  // Field name:Ljava/lang/String;
       4: invokevirtual #34                 // Method java/lang/String.hashCode:()I
       7: istore_1
       8: bipush        31
      10: iload_1
      11: imul
      12: aload_0
      13: getfield      #8                  // Field version:Ljava/lang/String;
      16: invokevirtual #34                 // Method java/lang/String.hashCode:()I
      19: iadd
      20: istore_1
      21: bipush        31
      23: iload_1
      24: imul
      25: aload_0
      26: getfield      #10                 // Field downloadUrl:Ljava/lang/String;
      29: ifnull        42
      32: aload_0
      33: getfield      #10                 // Field downloadUrl:Ljava/lang/String;
      36: invokevirtual #34                 // Method java/lang/String.hashCode:()I
      39: goto          43
      42: iconst_0
      43: iadd
      44: istore_1
      45: iload_1
      46: ireturn

  public com.fasterxml.jackson.core.TreeNode $jsii$toJson();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method $jsii$toJson:()Lcom/fasterxml/jackson/databind/JsonNode;
       4: areturn
}
