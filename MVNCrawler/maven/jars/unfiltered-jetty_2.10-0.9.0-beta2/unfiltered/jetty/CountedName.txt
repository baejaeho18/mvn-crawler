Compiled from "filters.scala"
public class unfiltered.jetty.CountedName implements scala.Product,scala.Serializable {
  private final java.lang.String prefix;

  private final java.util.concurrent.atomic.AtomicInteger counter;

  private volatile boolean bitmap$init$0;

  public static unfiltered.jetty.CountedName Filter();
    Code:
       0: getstatic     #20                 // Field unfiltered/jetty/CountedName$.MODULE$:Lunfiltered/jetty/CountedName$;
       3: invokevirtual #22                 // Method unfiltered/jetty/CountedName$.Filter:()Lunfiltered/jetty/CountedName;
       6: areturn

  public static unfiltered.jetty.CountedName Servlet();
    Code:
       0: getstatic     #20                 // Field unfiltered/jetty/CountedName$.MODULE$:Lunfiltered/jetty/CountedName$;
       3: invokevirtual #25                 // Method unfiltered/jetty/CountedName$.Servlet:()Lunfiltered/jetty/CountedName;
       6: areturn

  public java.lang.String prefix();
    Code:
       0: aload_0
       1: getfield      #34                 // Field prefix:Ljava/lang/String;
       4: areturn

  private java.util.concurrent.atomic.AtomicInteger counter();
    Code:
       0: aload_0
       1: getfield      #39                 // Field bitmap$init$0:Z
       4: ifeq          17
       7: aload_0
       8: getfield      #41                 // Field counter:Ljava/util/concurrent/atomic/AtomicInteger;
      11: pop
      12: aload_0
      13: getfield      #41                 // Field counter:Ljava/util/concurrent/atomic/AtomicInteger;
      16: areturn
      17: new           #43                 // class scala/UninitializedFieldError
      20: dup
      21: ldc           #45                 // String Uninitialized field: filters.scala: 28
      23: invokevirtual #50                 // Method java/lang/String.toString:()Ljava/lang/String;
      26: invokespecial #54                 // Method scala/UninitializedFieldError."<init>":(Ljava/lang/String;)V
      29: athrow

  public java.lang.String name();
    Code:
       0: new           #57                 // class scala/collection/mutable/StringBuilder
       3: dup
       4: invokespecial #60                 // Method scala/collection/mutable/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #62                 // Method prefix:()Ljava/lang/String;
      11: invokevirtual #66                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      14: ldc           #68                 // String
      16: invokevirtual #66                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      19: aload_0
      20: invokespecial #70                 // Method counter:()Ljava/util/concurrent/atomic/AtomicInteger;
      23: invokevirtual #76                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      26: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      29: invokevirtual #66                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      32: invokevirtual #83                 // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
      35: areturn

  public unfiltered.jetty.CountedName copy(java.lang.String);
    Code:
       0: new           #2                  // class unfiltered/jetty/CountedName
       3: dup
       4: aload_1
       5: invokespecial #86                 // Method "<init>":(Ljava/lang/String;)V
       8: areturn

  public java.lang.String copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method prefix:()Ljava/lang/String;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #90                 // String CountedName
       2: areturn

  public int productArity();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 0
                     0: 35
               default: 20
          }
      20: new           #95                 // class java/lang/IndexOutOfBoundsException
      23: dup
      24: iload_1
      25: invokestatic  #82                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      28: invokevirtual #96                 // Method java/lang/Object.toString:()Ljava/lang/String;
      31: invokespecial #97                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: invokevirtual #62                 // Method prefix:()Ljava/lang/String;
      39: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #106                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #110                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class unfiltered/jetty/CountedName
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #106                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #118                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #106                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #122                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     80
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class unfiltered/jetty/CountedName
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          84
      25: aload_1
      26: checkcast     #2                  // class unfiltered/jetty/CountedName
      29: astore        4
      31: aload_0
      32: invokevirtual #62                 // Method prefix:()Ljava/lang/String;
      35: aload         4
      37: invokevirtual #62                 // Method prefix:()Ljava/lang/String;
      40: astore        5
      42: dup
      43: ifnonnull     55
      46: pop
      47: aload         5
      49: ifnull        63
      52: goto          76
      55: aload         5
      57: invokevirtual #125                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifeq          76
      63: aload         4
      65: aload_0
      66: invokevirtual #127                // Method canEqual:(Ljava/lang/Object;)Z
      69: ifeq          76
      72: iconst_1
      73: goto          77
      76: iconst_0
      77: ifeq          84
      80: iconst_1
      81: goto          85
      84: iconst_0
      85: ireturn

  public unfiltered.jetty.CountedName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #34                 // Field prefix:Ljava/lang/String;
       5: aload_0
       6: invokespecial #128                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #134                // Method scala/Product$class.$init$:(Lscala/Product;)V
      13: aload_0
      14: new           #72                 // class java/util/concurrent/atomic/AtomicInteger
      17: dup
      18: invokespecial #135                // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      21: putfield      #41                 // Field counter:Ljava/util/concurrent/atomic/AtomicInteger;
      24: aload_0
      25: iconst_1
      26: putfield      #39                 // Field bitmap$init$0:Z
      29: return
}
