Compiled from "FlakyAnnotationVerifier.java"
public class io.trino.testng.services.FlakyAnnotationVerifier implements org.testng.IClassListener {
  public io.trino.testng.services.FlakyAnnotationVerifier();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void onBeforeClass(org.testng.ITestClass);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2                  // Method reportMethodsWithFlakyAndNoTestAnnotation:(Lorg/testng/ITestClass;)V
       5: goto          31
       8: astore_2
       9: ldc           #5                  // class io/trino/testng/services/FlakyAnnotationVerifier
      11: ldc           #6                  // String Failed to process %s: \n%s
      13: iconst_2
      14: anewarray     #7                  // class java/lang/Object
      17: dup
      18: iconst_0
      19: aload_1
      20: aastore
      21: dup
      22: iconst_1
      23: aload_2
      24: invokestatic  #8                  // Method com/google/common/base/Throwables.getStackTraceAsString:(Ljava/lang/Throwable;)Ljava/lang/String;
      27: aastore
      28: invokestatic  #9                  // Method io/trino/testng/services/Listeners.reportListenerFailure:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)V
      31: return
    Exception table:
       from    to  target type
           0     5     8   Class java/lang/RuntimeException
           0     5     8   Class java/lang/Error

  private void reportMethodsWithFlakyAndNoTestAnnotation(org.testng.ITestClass);
    Code:
       0: aload_1
       1: invokeinterface #10,  1           // InterfaceMethod org/testng/ITestClass.getRealClass:()Ljava/lang/Class;
       6: astore_2
       7: aload_2
       8: invokevirtual #11                 // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
      11: ifnull        30
      14: ldc           #12                 // String io.trino.tempto.internal.convention.ConventionBasedTestProxyGenerator$ConventionBasedTestProxy
      16: aload_2
      17: invokevirtual #11                 // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
      20: invokevirtual #13                 // Method java/lang/Class.getName:()Ljava/lang/String;
      23: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      26: ifeq          30
      29: return
      30: aload_2
      31: invokevirtual #13                 // Method java/lang/Class.getName:()Ljava/lang/String;
      34: ldc           #15                 // String io.trino.testng.services.TestFlakyAnnotationVerifier
      36: invokevirtual #16                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      39: ifeq          43
      42: return
      43: aload_2
      44: invokestatic  #17                 // Method findMethodsWithFlakyAndNoTestAnnotation:(Ljava/lang/Class;)Ljava/util/List;
      47: astore_3
      48: aload_3
      49: invokeinterface #18,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      54: ifne          108
      57: ldc           #5                  // class io/trino/testng/services/FlakyAnnotationVerifier
      59: ldc           #19                 // String Test class %s has methods which are marked as @Flaky but are not explicitly annotated with @Test:%s
      61: iconst_2
      62: anewarray     #7                  // class java/lang/Object
      65: dup
      66: iconst_0
      67: aload_2
      68: invokevirtual #13                 // Method java/lang/Class.getName:()Ljava/lang/String;
      71: aastore
      72: dup
      73: iconst_1
      74: aload_3
      75: invokeinterface #20,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      80: invokedynamic #21,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      85: invokeinterface #22,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      90: ldc           #23                 // String \n\t\t
      92: ldc           #23                 // String \n\t\t
      94: ldc           #24                 // String
      96: invokestatic  #25                 // Method java/util/stream/Collectors.joining:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/util/stream/Collector;
      99: invokeinterface #26,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
     104: aastore
     105: invokestatic  #9                  // Method io/trino/testng/services/Listeners.reportListenerFailure:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)V
     108: aload_2
     109: invokestatic  #27                 // Method verifyFlakyAnnotations:(Ljava/lang/Class;)Ljava/util/Optional;
     112: invokedynamic #28,  0             // InvokeDynamic #1:accept:()Ljava/util/function/Consumer;
     117: invokevirtual #29                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
     120: return

  static java.util.Optional<java.lang.String> verifyFlakyAnnotations(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method java/lang/Class.getMethods:()[Ljava/lang/reflect/Method;
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     131
      15: aload_1
      16: iload_3
      17: aaload
      18: astore        4
      20: aload         4
      22: ldc           #31                 // class io/trino/testng/services/Flaky
      24: invokestatic  #32                 // Method findInheritableAnnotation:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/util/Optional;
      27: astore        5
      29: aload         5
      31: invokevirtual #33                 // Method java/util/Optional.isEmpty:()Z
      34: ifeq          40
      37: goto          125
      40: aload         5
      42: invokevirtual #34                 // Method java/util/Optional.get:()Ljava/lang/Object;
      45: checkcast     #31                 // class io/trino/testng/services/Flaky
      48: invokeinterface #35,  1           // InterfaceMethod io/trino/testng/services/Flaky.issue:()Ljava/lang/String;
      53: invokevirtual #36                 // Method java/lang/String.isBlank:()Z
      56: ifeq          77
      59: ldc           #37                 // String Test method %s has empty @Flaky.issue
      61: iconst_1
      62: anewarray     #7                  // class java/lang/Object
      65: dup
      66: iconst_0
      67: aload         4
      69: aastore
      70: invokestatic  #38                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      73: invokestatic  #39                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      76: areturn
      77: aload         5
      79: invokevirtual #34                 // Method java/util/Optional.get:()Ljava/lang/Object;
      82: checkcast     #31                 // class io/trino/testng/services/Flaky
      85: invokeinterface #40,  1           // InterfaceMethod io/trino/testng/services/Flaky.match:()Ljava/lang/String;
      90: invokestatic  #41                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      93: pop
      94: goto          125
      97: astore        6
      99: ldc           #43                 // String Test method %s has invalid @Flaky.match: %s
     101: iconst_2
     102: anewarray     #7                  // class java/lang/Object
     105: dup
     106: iconst_0
     107: aload         4
     109: aastore
     110: dup
     111: iconst_1
     112: aload         6
     114: invokestatic  #8                  // Method com/google/common/base/Throwables.getStackTraceAsString:(Ljava/lang/Throwable;)Ljava/lang/String;
     117: aastore
     118: invokestatic  #38                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     121: invokestatic  #39                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
     124: areturn
     125: iinc          3, 1
     128: goto          10
     131: invokestatic  #44                 // Method java/util/Optional.empty:()Ljava/util/Optional;
     134: areturn
    Exception table:
       from    to  target type
          77    94    97   Class java/util/regex/PatternSyntaxException

  static java.util.List<java.lang.reflect.Method> findMethodsWithFlakyAndNoTestAnnotation(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method java/lang/Class.getMethods:()[Ljava/lang/reflect/Method;
       4: invokestatic  #45                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
       7: invokedynamic #46,  0             // InvokeDynamic #2:test:()Ljava/util/function/Predicate;
      12: invokeinterface #47,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      17: invokedynamic #48,  0             // InvokeDynamic #3:test:()Ljava/util/function/Predicate;
      22: invokeinterface #47,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      27: invokestatic  #49                 // Method com/google/common/collect/ImmutableList.toImmutableList:()Ljava/util/stream/Collector;
      30: invokeinterface #26,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      35: checkcast     #50                 // class java/util/List
      38: areturn

  public void onAfterClass(org.testng.ITestClass);
    Code:
       0: return

  private static <T extends java.lang.annotation.Annotation> java.util.Optional<T> findInheritableAnnotation(java.lang.reflect.Method, java.lang.Class<T>);
    Code:
       0: aload_0
       1: ifnull        34
       4: aload_0
       5: aload_1
       6: invokevirtual #51                 // Method java/lang/reflect/Method.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       9: astore_2
      10: aload_2
      11: ifnull        19
      14: aload_2
      15: invokestatic  #39                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      18: areturn
      19: aload_0
      20: invokestatic  #52                 // Method getSuperMethod:(Ljava/lang/reflect/Method;)Ljava/util/Optional;
      23: aconst_null
      24: invokevirtual #53                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      27: checkcast     #54                 // class java/lang/reflect/Method
      30: astore_0
      31: goto          0
      34: invokestatic  #44                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      37: areturn

  private static java.util.Optional<java.lang.reflect.Method> getSuperMethod(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
       4: invokevirtual #11                 // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
       7: astore_1
       8: aload_1
       9: ifnonnull     16
      12: invokestatic  #44                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      15: areturn
      16: aload_1
      17: aload_0
      18: invokevirtual #56                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
      21: aload_0
      22: invokevirtual #57                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      25: invokevirtual #58                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      28: invokestatic  #39                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      31: areturn
      32: astore_1
      33: invokestatic  #44                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      36: areturn
    Exception table:
       from    to  target type
           0    15    32   Class java/lang/NoSuchMethodException
          16    31    32   Class java/lang/NoSuchMethodException

  private static boolean lambda$findMethodsWithFlakyAndNoTestAnnotation$2(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: ldc           #60                 // class org/testng/annotations/Test
       3: invokevirtual #61                 // Method java/lang/reflect/Method.isAnnotationPresent:(Ljava/lang/Class;)Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  private static boolean lambda$findMethodsWithFlakyAndNoTestAnnotation$1(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: ldc           #31                 // class io/trino/testng/services/Flaky
       3: invokestatic  #32                 // Method findInheritableAnnotation:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/util/Optional;
       6: invokevirtual #62                 // Method java/util/Optional.isPresent:()Z
       9: ireturn

  private static void lambda$reportMethodsWithFlakyAndNoTestAnnotation$0(java.lang.String);
    Code:
       0: ldc           #5                  // class io/trino/testng/services/FlakyAnnotationVerifier
       2: ldc           #63                 // String %s
       4: iconst_1
       5: anewarray     #7                  // class java/lang/Object
       8: dup
       9: iconst_0
      10: aload_0
      11: aastore
      12: invokestatic  #9                  // Method io/trino/testng/services/Listeners.reportListenerFailure:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)V
      15: return
}
