Compiled from "WebSocketMessageBrokerConfiguration.java"
public class cn.herodotus.engine.message.websocket.configuration.WebSocketMessageBrokerConfiguration extends org.springframework.session.web.socket.config.annotation.AbstractSessionWebSocketMessageBrokerConfigurer<org.springframework.session.Session> {
  private static final org.slf4j.Logger log;

  private final cn.herodotus.engine.message.websocket.properties.WebSocketProperties webSocketProperties;

  private final cn.herodotus.engine.message.websocket.interceptor.WebSocketChannelInterceptor webSocketChannelInterceptor;

  private final cn.herodotus.engine.message.websocket.interceptor.WebSocketSessionHandshakeInterceptor webSocketSessionHandshakeInterceptor;

  public cn.herodotus.engine.message.websocket.configuration.WebSocketMessageBrokerConfiguration(cn.herodotus.engine.message.websocket.properties.WebSocketProperties, cn.herodotus.engine.message.websocket.interceptor.WebSocketChannelInterceptor, cn.herodotus.engine.message.websocket.interceptor.WebSocketSessionHandshakeInterceptor);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/session/web/socket/config/annotation/AbstractSessionWebSocketMessageBrokerConfigurer."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #7                  // Field webSocketProperties:Lcn/herodotus/engine/message/websocket/properties/WebSocketProperties;
       9: aload_0
      10: aload_2
      11: putfield      #13                 // Field webSocketChannelInterceptor:Lcn/herodotus/engine/message/websocket/interceptor/WebSocketChannelInterceptor;
      14: aload_0
      15: aload_3
      16: putfield      #17                 // Field webSocketSessionHandshakeInterceptor:Lcn/herodotus/engine/message/websocket/interceptor/WebSocketSessionHandshakeInterceptor;
      19: return

  public void postConstruct();
    Code:
       0: getstatic     #21                 // Field log:Lorg/slf4j/Logger;
       3: ldc           #25                 // String [Herodotus] |- SDK [WebSocket Message Broker] Auto Configure.
       5: invokeinterface #27,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      10: return

  protected void configureStompEndpoints(org.springframework.web.socket.config.annotation.StompEndpointRegistry);
    Code:
       0: new           #33                 // class cn/herodotus/engine/message/websocket/interceptor/WebSocketPrincipalHandshakeHandler
       3: dup
       4: invokespecial #35                 // Method cn/herodotus/engine/message/websocket/interceptor/WebSocketPrincipalHandshakeHandler."<init>":()V
       7: astore_2
       8: aload_1
       9: iconst_1
      10: anewarray     #36                 // class java/lang/String
      13: dup
      14: iconst_0
      15: aload_0
      16: getfield      #7                  // Field webSocketProperties:Lcn/herodotus/engine/message/websocket/properties/WebSocketProperties;
      19: invokevirtual #38                 // Method cn/herodotus/engine/message/websocket/properties/WebSocketProperties.getEndpoint:()Ljava/lang/String;
      22: aastore
      23: invokeinterface #44,  2           // InterfaceMethod org/springframework/web/socket/config/annotation/StompEndpointRegistry.addEndpoint:([Ljava/lang/String;)Lorg/springframework/web/socket/config/annotation/StompWebSocketEndpointRegistration;
      28: iconst_1
      29: anewarray     #36                 // class java/lang/String
      32: dup
      33: iconst_0
      34: ldc           #50                 // String *
      36: aastore
      37: invokeinterface #52,  2           // InterfaceMethod org/springframework/web/socket/config/annotation/StompWebSocketEndpointRegistration.setAllowedOrigins:([Ljava/lang/String;)Lorg/springframework/web/socket/config/annotation/StompWebSocketEndpointRegistration;
      42: iconst_1
      43: anewarray     #57                 // class org/springframework/web/socket/server/HandshakeInterceptor
      46: dup
      47: iconst_0
      48: aload_0
      49: getfield      #17                 // Field webSocketSessionHandshakeInterceptor:Lcn/herodotus/engine/message/websocket/interceptor/WebSocketSessionHandshakeInterceptor;
      52: aastore
      53: invokeinterface #59,  2           // InterfaceMethod org/springframework/web/socket/config/annotation/StompWebSocketEndpointRegistration.addInterceptors:([Lorg/springframework/web/socket/server/HandshakeInterceptor;)Lorg/springframework/web/socket/config/annotation/StompWebSocketEndpointRegistration;
      58: aload_2
      59: invokeinterface #63,  2           // InterfaceMethod org/springframework/web/socket/config/annotation/StompWebSocketEndpointRegistration.setHandshakeHandler:(Lorg/springframework/web/socket/server/HandshakeHandler;)Lorg/springframework/web/socket/config/annotation/StompWebSocketEndpointRegistration;
      64: invokeinterface #67,  1           // InterfaceMethod org/springframework/web/socket/config/annotation/StompWebSocketEndpointRegistration.withSockJS:()Lorg/springframework/web/socket/config/annotation/SockJsServiceRegistration;
      69: pop
      70: aload_1
      71: iconst_1
      72: anewarray     #36                 // class java/lang/String
      75: dup
      76: iconst_0
      77: aload_0
      78: getfield      #7                  // Field webSocketProperties:Lcn/herodotus/engine/message/websocket/properties/WebSocketProperties;
      81: invokevirtual #38                 // Method cn/herodotus/engine/message/websocket/properties/WebSocketProperties.getEndpoint:()Ljava/lang/String;
      84: aastore
      85: invokeinterface #44,  2           // InterfaceMethod org/springframework/web/socket/config/annotation/StompEndpointRegistry.addEndpoint:([Ljava/lang/String;)Lorg/springframework/web/socket/config/annotation/StompWebSocketEndpointRegistration;
      90: iconst_1
      91: anewarray     #36                 // class java/lang/String
      94: dup
      95: iconst_0
      96: ldc           #50                 // String *
      98: aastore
      99: invokeinterface #52,  2           // InterfaceMethod org/springframework/web/socket/config/annotation/StompWebSocketEndpointRegistration.setAllowedOrigins:([Ljava/lang/String;)Lorg/springframework/web/socket/config/annotation/StompWebSocketEndpointRegistration;
     104: iconst_1
     105: anewarray     #57                 // class org/springframework/web/socket/server/HandshakeInterceptor
     108: dup
     109: iconst_0
     110: aload_0
     111: getfield      #17                 // Field webSocketSessionHandshakeInterceptor:Lcn/herodotus/engine/message/websocket/interceptor/WebSocketSessionHandshakeInterceptor;
     114: aastore
     115: invokeinterface #59,  2           // InterfaceMethod org/springframework/web/socket/config/annotation/StompWebSocketEndpointRegistration.addInterceptors:([Lorg/springframework/web/socket/server/HandshakeInterceptor;)Lorg/springframework/web/socket/config/annotation/StompWebSocketEndpointRegistration;
     120: aload_2
     121: invokeinterface #63,  2           // InterfaceMethod org/springframework/web/socket/config/annotation/StompWebSocketEndpointRegistration.setHandshakeHandler:(Lorg/springframework/web/socket/server/HandshakeHandler;)Lorg/springframework/web/socket/config/annotation/StompWebSocketEndpointRegistration;
     126: pop
     127: return

  public void configureMessageBroker(org.springframework.messaging.simp.config.MessageBrokerRegistry);
    Code:
       0: new           #71                 // class org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler
       3: dup
       4: invokespecial #73                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler."<init>":()V
       7: astore_2
       8: aload_2
       9: iconst_1
      10: invokevirtual #74                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.setPoolSize:(I)V
      13: aload_2
      14: ldc           #78                 // String herodotus-websocket-heartbeat-thread-
      16: invokevirtual #80                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.setThreadNamePrefix:(Ljava/lang/String;)V
      19: aload_2
      20: invokevirtual #83                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.initialize:()V
      23: aload_1
      24: iconst_2
      25: anewarray     #36                 // class java/lang/String
      28: dup
      29: iconst_0
      30: ldc           #88                 // String /broadcast
      32: aastore
      33: dup
      34: iconst_1
      35: ldc           #90                 // String /personal
      37: aastore
      38: invokevirtual #92                 // Method org/springframework/messaging/simp/config/MessageBrokerRegistry.enableSimpleBroker:([Ljava/lang/String;)Lorg/springframework/messaging/simp/config/SimpleBrokerRegistration;
      41: iconst_2
      42: newarray       long
      44: dup
      45: iconst_0
      46: ldc2_w        #98                 // long 10000l
      49: lastore
      50: dup
      51: iconst_1
      52: ldc2_w        #98                 // long 10000l
      55: lastore
      56: invokevirtual #100                // Method org/springframework/messaging/simp/config/SimpleBrokerRegistration.setHeartbeatValue:([J)Lorg/springframework/messaging/simp/config/SimpleBrokerRegistration;
      59: aload_2
      60: invokevirtual #106                // Method org/springframework/messaging/simp/config/SimpleBrokerRegistration.setTaskScheduler:(Lorg/springframework/scheduling/TaskScheduler;)Lorg/springframework/messaging/simp/config/SimpleBrokerRegistration;
      63: pop
      64: aload_0
      65: getfield      #7                  // Field webSocketProperties:Lcn/herodotus/engine/message/websocket/properties/WebSocketProperties;
      68: invokevirtual #110                // Method cn/herodotus/engine/message/websocket/properties/WebSocketProperties.getApplicationPrefixes:()[Ljava/lang/String;
      71: astore_3
      72: aload_3
      73: invokestatic  #114                // Method org/apache/commons/lang3/ArrayUtils.isNotEmpty:([Ljava/lang/Object;)Z
      76: ifeq          85
      79: aload_1
      80: aload_3
      81: invokevirtual #120                // Method org/springframework/messaging/simp/config/MessageBrokerRegistry.setApplicationDestinationPrefixes:([Ljava/lang/String;)Lorg/springframework/messaging/simp/config/MessageBrokerRegistry;
      84: pop
      85: aload_0
      86: getfield      #7                  // Field webSocketProperties:Lcn/herodotus/engine/message/websocket/properties/WebSocketProperties;
      89: invokevirtual #124                // Method cn/herodotus/engine/message/websocket/properties/WebSocketProperties.getUserDestinationPrefix:()Ljava/lang/String;
      92: invokestatic  #127                // Method org/apache/commons/lang3/StringUtils.isNotBlank:(Ljava/lang/CharSequence;)Z
      95: ifeq          110
      98: aload_1
      99: aload_0
     100: getfield      #7                  // Field webSocketProperties:Lcn/herodotus/engine/message/websocket/properties/WebSocketProperties;
     103: invokevirtual #124                // Method cn/herodotus/engine/message/websocket/properties/WebSocketProperties.getUserDestinationPrefix:()Ljava/lang/String;
     106: invokevirtual #133                // Method org/springframework/messaging/simp/config/MessageBrokerRegistry.setUserDestinationPrefix:(Ljava/lang/String;)Lorg/springframework/messaging/simp/config/MessageBrokerRegistry;
     109: pop
     110: return

  public void configureWebSocketTransport(org.springframework.web.socket.config.annotation.WebSocketTransportRegistration);
    Code:
       0: aload_1
       1: sipush        10240
       4: invokevirtual #137                // Method org/springframework/web/socket/config/annotation/WebSocketTransportRegistration.setMessageSizeLimit:(I)Lorg/springframework/web/socket/config/annotation/WebSocketTransportRegistration;
       7: sipush        10240
      10: invokevirtual #143                // Method org/springframework/web/socket/config/annotation/WebSocketTransportRegistration.setSendBufferSizeLimit:(I)Lorg/springframework/web/socket/config/annotation/WebSocketTransportRegistration;
      13: sipush        10000
      16: invokevirtual #146                // Method org/springframework/web/socket/config/annotation/WebSocketTransportRegistration.setSendTimeLimit:(I)Lorg/springframework/web/socket/config/annotation/WebSocketTransportRegistration;
      19: pop
      20: aload_0
      21: aload_1
      22: invokespecial #149                // Method org/springframework/session/web/socket/config/annotation/AbstractSessionWebSocketMessageBrokerConfigurer.configureWebSocketTransport:(Lorg/springframework/web/socket/config/annotation/WebSocketTransportRegistration;)V
      25: return

  public void configureClientInboundChannel(org.springframework.messaging.simp.config.ChannelRegistration);
    Code:
       0: aload_1
       1: invokevirtual #153                // Method org/springframework/messaging/simp/config/ChannelRegistration.taskExecutor:()Lorg/springframework/messaging/simp/config/TaskExecutorRegistration;
       4: bipush        10
       6: invokevirtual #159                // Method org/springframework/messaging/simp/config/TaskExecutorRegistration.corePoolSize:(I)Lorg/springframework/messaging/simp/config/TaskExecutorRegistration;
       9: bipush        20
      11: invokevirtual #165                // Method org/springframework/messaging/simp/config/TaskExecutorRegistration.maxPoolSize:(I)Lorg/springframework/messaging/simp/config/TaskExecutorRegistration;
      14: bipush        60
      16: invokevirtual #168                // Method org/springframework/messaging/simp/config/TaskExecutorRegistration.keepAliveSeconds:(I)Lorg/springframework/messaging/simp/config/TaskExecutorRegistration;
      19: pop
      20: aload_1
      21: iconst_1
      22: anewarray     #171                // class org/springframework/messaging/support/ChannelInterceptor
      25: dup
      26: iconst_0
      27: aload_0
      28: getfield      #13                 // Field webSocketChannelInterceptor:Lcn/herodotus/engine/message/websocket/interceptor/WebSocketChannelInterceptor;
      31: aastore
      32: invokevirtual #173                // Method org/springframework/messaging/simp/config/ChannelRegistration.interceptors:([Lorg/springframework/messaging/support/ChannelInterceptor;)Lorg/springframework/messaging/simp/config/ChannelRegistration;
      35: pop
      36: aload_0
      37: aload_1
      38: invokespecial #177                // Method org/springframework/session/web/socket/config/annotation/AbstractSessionWebSocketMessageBrokerConfigurer.configureClientInboundChannel:(Lorg/springframework/messaging/simp/config/ChannelRegistration;)V
      41: return

  public void configureClientOutboundChannel(org.springframework.messaging.simp.config.ChannelRegistration);
    Code:
       0: aload_1
       1: invokevirtual #153                // Method org/springframework/messaging/simp/config/ChannelRegistration.taskExecutor:()Lorg/springframework/messaging/simp/config/TaskExecutorRegistration;
       4: bipush        10
       6: invokevirtual #159                // Method org/springframework/messaging/simp/config/TaskExecutorRegistration.corePoolSize:(I)Lorg/springframework/messaging/simp/config/TaskExecutorRegistration;
       9: bipush        20
      11: invokevirtual #165                // Method org/springframework/messaging/simp/config/TaskExecutorRegistration.maxPoolSize:(I)Lorg/springframework/messaging/simp/config/TaskExecutorRegistration;
      14: bipush        60
      16: invokevirtual #168                // Method org/springframework/messaging/simp/config/TaskExecutorRegistration.keepAliveSeconds:(I)Lorg/springframework/messaging/simp/config/TaskExecutorRegistration;
      19: pop
      20: return

  static {};
    Code:
       0: ldc           #8                  // class cn/herodotus/engine/message/websocket/configuration/WebSocketMessageBrokerConfiguration
       2: invokestatic  #181                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #21                 // Field log:Lorg/slf4j/Logger;
       8: return
}
