Compiled from "Canvas.scala"
public final class wvlet.airframe.canvas.Canvas$ {
  public static wvlet.airframe.canvas.Canvas$ MODULE$;

  private final wvlet.airframe.canvas.OffHeapMemoryAllocator defaultCanvasAllocator;

  public static {};
    Code:
       0: new           #2                  // class wvlet/airframe/canvas/Canvas$
       3: invokespecial #14                 // Method "<init>":()V
       6: return

  public wvlet.airframe.canvas.OffHeapMemoryAllocator defaultCanvasAllocator();
    Code:
       0: aload_0
       1: getfield      #17                 // Field defaultCanvasAllocator:Lwvlet/airframe/canvas/OffHeapMemoryAllocator;
       4: areturn

  public wvlet.airframe.canvas.Canvas newCanvas(int);
    Code:
       0: aload_0
       1: iload_1
       2: newarray       byte
       4: invokevirtual #25                 // Method wrap:([B)Lwvlet/airframe/canvas/Canvas;
       7: areturn

  public wvlet.airframe.canvas.Canvas newOffHeapCanvas(long);
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method defaultCanvasAllocator:()Lwvlet/airframe/canvas/OffHeapMemoryAllocator;
       4: lload_1
       5: invokevirtual #36                 // Method wvlet/airframe/canvas/OffHeapMemoryAllocator.allocate:(J)Lwvlet/airframe/canvas/OffHeapMemory;
       8: astore_3
       9: new           #38                 // class wvlet/airframe/canvas/UnsafeCanvas
      12: dup
      13: aconst_null
      14: aload_3
      15: invokevirtual #44                 // Method wvlet/airframe/canvas/OffHeapMemory.address:()J
      18: aload_3
      19: invokevirtual #46                 // Method wvlet/airframe/canvas/OffHeapMemory.size:()J
      22: aload_3
      23: invokespecial #49                 // Method wvlet/airframe/canvas/UnsafeCanvas."<init>":(Ljava/lang/Object;JJLjava/lang/Object;)V
      26: areturn

  public wvlet.airframe.canvas.Canvas wrap(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #56                 // Method wrap:([BII)Lwvlet/airframe/canvas/Canvas;
       8: areturn

  public wvlet.airframe.canvas.Canvas wrap(byte[], int, int);
    Code:
       0: getstatic     #64                 // Field wvlet/airframe/canvas/UnsafeCanvas$.MODULE$:Lwvlet/airframe/canvas/UnsafeCanvas$;
       3: aload_1
       4: iload_2
       5: iload_3
       6: invokevirtual #65                 // Method wvlet/airframe/canvas/UnsafeCanvas$.wrap:([BII)Lwvlet/airframe/canvas/Canvas;
       9: areturn

  public wvlet.airframe.canvas.Canvas wrap(java.nio.ByteBuffer);
    Code:
       0: getstatic     #64                 // Field wvlet/airframe/canvas/UnsafeCanvas$.MODULE$:Lwvlet/airframe/canvas/UnsafeCanvas$;
       3: aload_1
       4: invokevirtual #69                 // Method wvlet/airframe/canvas/UnsafeCanvas$.wrap:(Ljava/nio/ByteBuffer;)Lwvlet/airframe/canvas/Canvas;
       7: areturn

  private wvlet.airframe.canvas.Canvas$();
    Code:
       0: aload_0
       1: invokespecial #71                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #73                 // Field MODULE$:Lwvlet/airframe/canvas/Canvas$;
       8: aload_0
       9: new           #32                 // class wvlet/airframe/canvas/OffHeapMemoryAllocator
      12: dup
      13: invokespecial #74                 // Method wvlet/airframe/canvas/OffHeapMemoryAllocator."<init>":()V
      16: putfield      #17                 // Field defaultCanvasAllocator:Lwvlet/airframe/canvas/OffHeapMemoryAllocator;
      19: return
}
