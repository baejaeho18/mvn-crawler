Compiled from "Canvas.scala"
public abstract class wvlet.airframe.canvas.Canvas implements java.lang.AutoCloseable {
  public static wvlet.airframe.canvas.Canvas wrap(java.nio.ByteBuffer);
    Code:
       0: getstatic     #24                 // Field wvlet/airframe/canvas/Canvas$.MODULE$:Lwvlet/airframe/canvas/Canvas$;
       3: aload_0
       4: invokevirtual #26                 // Method wvlet/airframe/canvas/Canvas$.wrap:(Ljava/nio/ByteBuffer;)Lwvlet/airframe/canvas/Canvas;
       7: areturn

  public static wvlet.airframe.canvas.Canvas wrap(byte[], int, int);
    Code:
       0: getstatic     #24                 // Field wvlet/airframe/canvas/Canvas$.MODULE$:Lwvlet/airframe/canvas/Canvas$;
       3: aload_0
       4: iload_1
       5: iload_2
       6: invokevirtual #32                 // Method wvlet/airframe/canvas/Canvas$.wrap:([BII)Lwvlet/airframe/canvas/Canvas;
       9: areturn

  public static wvlet.airframe.canvas.Canvas wrap(byte[]);
    Code:
       0: getstatic     #24                 // Field wvlet/airframe/canvas/Canvas$.MODULE$:Lwvlet/airframe/canvas/Canvas$;
       3: aload_0
       4: invokevirtual #35                 // Method wvlet/airframe/canvas/Canvas$.wrap:([B)Lwvlet/airframe/canvas/Canvas;
       7: areturn

  public static wvlet.airframe.canvas.Canvas newOffHeapCanvas(long);
    Code:
       0: getstatic     #24                 // Field wvlet/airframe/canvas/Canvas$.MODULE$:Lwvlet/airframe/canvas/Canvas$;
       3: lload_0
       4: invokevirtual #40                 // Method wvlet/airframe/canvas/Canvas$.newOffHeapCanvas:(J)Lwvlet/airframe/canvas/Canvas;
       7: areturn

  public static wvlet.airframe.canvas.Canvas newCanvas(int);
    Code:
       0: getstatic     #24                 // Field wvlet/airframe/canvas/Canvas$.MODULE$:Lwvlet/airframe/canvas/Canvas$;
       3: iload_0
       4: invokevirtual #44                 // Method wvlet/airframe/canvas/Canvas$.newCanvas:(I)Lwvlet/airframe/canvas/Canvas;
       7: areturn

  public abstract long size();

  public abstract byte readByte(long);

  public abstract boolean readBoolean(long);

  public abstract short readShort(long);

  public abstract int readInt(long);

  public abstract int readIntBigEndian(long);

  public abstract long readLong(long);

  public abstract long readLongBigEndian(long);

  public abstract float readFloat(long);

  public abstract double readDouble(long);

  public abstract void readBytes(long, wvlet.airframe.canvas.Canvas, long, long);

  public abstract void readBytes(long, byte[], int, int);

  public byte[] readBytes(long, long);
    Code:
       0: getstatic     #72                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: getstatic     #77                 // Field scala/runtime/RichLong$.MODULE$:Lscala/runtime/RichLong$;
       6: getstatic     #72                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       9: lload_3
      10: invokevirtual #80                 // Method scala/Predef$.longWrapper:(J)J
      13: invokevirtual #83                 // Method scala/runtime/RichLong$.isValidInt$extension:(J)Z
      16: invokedynamic #106,  0            // InvokeDynamic #0:apply:()Lscala/Function0;
      21: invokevirtual #110                // Method scala/Predef$.require:(ZLscala/Function0;)V
      24: lload_3
      25: l2i
      26: istore        5
      28: iload         5
      30: newarray       byte
      32: astore        6
      34: aload_0
      35: lload_1
      36: aload         6
      38: iconst_0
      39: iload         5
      41: invokevirtual #112                // Method readBytes:(J[BII)V
      44: aload         6
      46: areturn

  public abstract void writeByte(long, byte);

  public abstract void writeBoolean(long, boolean);

  public abstract void writeShort(long, short);

  public abstract void writeInt(long, int);

  public abstract void writeIntBigEndian(long, int);

  public abstract void writeLong(long, long);

  public abstract void writeLongBigEndian(long, long);

  public abstract void writeFloat(long, float);

  public abstract void writeDouble(long, double);

  public void writeBytes(long, byte[]);
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: iconst_0
       4: aload_3
       5: arraylength
       6: invokevirtual #141                // Method writeBytes:(J[BII)V
       9: return

  public abstract void writeBytes(long, byte[], int, int);

  public abstract void writeBytes(long, wvlet.airframe.canvas.Canvas, long, long);

  public void close();
    Code:
       0: aload_0
       1: invokevirtual #147                // Method release:()V
       4: return

  public abstract void release();

  public abstract wvlet.airframe.canvas.Canvas slice(long, long);

  public abstract byte[] toByteArray();

  public static final java.lang.String $anonfun$readBytes$1();
    Code:
       0: new           #153                // class java/lang/StringBuilder
       3: dup
       4: ldc           #154                // int 30
       6: invokespecial #158                // Method java/lang/StringBuilder."<init>":(I)V
       9: ldc           #160                // String read length must be less than
      11: invokevirtual #164                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #165                // int 2147483647
      16: invokevirtual #168                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: invokevirtual #171                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  public wvlet.airframe.canvas.Canvas();
    Code:
       0: aload_0
       1: invokespecial #173                // Method java/lang/Object."<init>":()V
       4: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #185,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
