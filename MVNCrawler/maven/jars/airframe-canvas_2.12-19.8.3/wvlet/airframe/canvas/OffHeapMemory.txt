Compiled from "Memory.scala"
public class wvlet.airframe.canvas.OffHeapMemory extends wvlet.airframe.canvas.Memory implements scala.Product,scala.Serializable {
  private final long address;

  private final long size;

  private final wvlet.airframe.canvas.OffHeapMemoryAllocator memoryAllocator;

  public static scala.Option<scala.Tuple3<java.lang.Object, java.lang.Object, wvlet.airframe.canvas.OffHeapMemoryAllocator>> unapply(wvlet.airframe.canvas.OffHeapMemory);
    Code:
       0: getstatic     #27                 // Field wvlet/airframe/canvas/OffHeapMemory$.MODULE$:Lwvlet/airframe/canvas/OffHeapMemory$;
       3: aload_0
       4: invokevirtual #29                 // Method wvlet/airframe/canvas/OffHeapMemory$.unapply:(Lwvlet/airframe/canvas/OffHeapMemory;)Lscala/Option;
       7: areturn

  public static wvlet.airframe.canvas.OffHeapMemory apply(long, long, wvlet.airframe.canvas.OffHeapMemoryAllocator);
    Code:
       0: getstatic     #27                 // Field wvlet/airframe/canvas/OffHeapMemory$.MODULE$:Lwvlet/airframe/canvas/OffHeapMemory$;
       3: lload_0
       4: lload_2
       5: aload         4
       7: invokevirtual #33                 // Method wvlet/airframe/canvas/OffHeapMemory$.apply:(JJLwvlet/airframe/canvas/OffHeapMemoryAllocator;)Lwvlet/airframe/canvas/OffHeapMemory;
      10: areturn

  public static scala.Function1<scala.Tuple3<java.lang.Object, java.lang.Object, wvlet.airframe.canvas.OffHeapMemoryAllocator>, wvlet.airframe.canvas.OffHeapMemory> tupled();
    Code:
       0: getstatic     #27                 // Field wvlet/airframe/canvas/OffHeapMemory$.MODULE$:Lwvlet/airframe/canvas/OffHeapMemory$;
       3: invokevirtual #38                 // Method wvlet/airframe/canvas/OffHeapMemory$.tupled:()Lscala/Function1;
       6: areturn

  public static scala.Function1<java.lang.Object, scala.Function1<java.lang.Object, scala.Function1<wvlet.airframe.canvas.OffHeapMemoryAllocator, wvlet.airframe.canvas.OffHeapMemory>>> curried();
    Code:
       0: getstatic     #27                 // Field wvlet/airframe/canvas/OffHeapMemory$.MODULE$:Lwvlet/airframe/canvas/OffHeapMemory$;
       3: invokevirtual #42                 // Method wvlet/airframe/canvas/OffHeapMemory$.curried:()Lscala/Function1;
       6: areturn

  public long address();
    Code:
       0: aload_0
       1: getfield      #45                 // Field address:J
       4: lreturn

  public long size();
    Code:
       0: aload_0
       1: getfield      #49                 // Field size:J
       4: lreturn

  public wvlet.airframe.canvas.OffHeapMemoryAllocator memoryAllocator();
    Code:
       0: aload_0
       1: getfield      #52                 // Field memoryAllocator:Lwvlet/airframe/canvas/OffHeapMemoryAllocator;
       4: areturn

  public void release();
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method memoryAllocator:()Lwvlet/airframe/canvas/OffHeapMemoryAllocator;
       4: aload_0
       5: invokevirtual #61                 // Method wvlet/airframe/canvas/OffHeapMemoryAllocator.release:(Lwvlet/airframe/canvas/OffHeapMemory;)V
       8: return

  public wvlet.airframe.canvas.OffHeapMemory copy(long, long, wvlet.airframe.canvas.OffHeapMemoryAllocator);
    Code:
       0: new           #2                  // class wvlet/airframe/canvas/OffHeapMemory
       3: dup
       4: lload_1
       5: lload_3
       6: aload         5
       8: invokespecial #66                 // Method "<init>":(JJLwvlet/airframe/canvas/OffHeapMemoryAllocator;)V
      11: areturn

  public long copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method address:()J
       4: lreturn

  public long copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method size:()J
       4: lreturn

  public wvlet.airframe.canvas.OffHeapMemoryAllocator copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method memoryAllocator:()Lwvlet/airframe/canvas/OffHeapMemoryAllocator;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #77                 // String OffHeapMemory
       2: areturn

  public int productArity();
    Code:
       0: iconst_3
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 2
                     0: 28
                     1: 38
                     2: 48
               default: 55
          }
      28: aload_0
      29: invokevirtual #69                 // Method address:()J
      32: invokestatic  #88                 // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      35: goto          70
      38: aload_0
      39: invokevirtual #72                 // Method size:()J
      42: invokestatic  #88                 // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      45: goto          70
      48: aload_0
      49: invokevirtual #56                 // Method memoryAllocator:()Lwvlet/airframe/canvas/OffHeapMemoryAllocator;
      52: goto          70
      55: new           #90                 // class java/lang/IndexOutOfBoundsException
      58: dup
      59: iload_1
      60: invokestatic  #94                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      63: invokevirtual #99                 // Method java/lang/Object.toString:()Ljava/lang/String;
      66: invokespecial #102                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      69: athrow
      70: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #111                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #115                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class wvlet/airframe/canvas/OffHeapMemory
       4: ireturn

  public int hashCode();
    Code:
       0: ldc           #120                // int -889275714
       2: istore_1
       3: iload_1
       4: aload_0
       5: invokevirtual #69                 // Method address:()J
       8: invokestatic  #126                // Method scala/runtime/Statics.longHash:(J)I
      11: invokestatic  #130                // Method scala/runtime/Statics.mix:(II)I
      14: istore_1
      15: iload_1
      16: aload_0
      17: invokevirtual #72                 // Method size:()J
      20: invokestatic  #126                // Method scala/runtime/Statics.longHash:(J)I
      23: invokestatic  #130                // Method scala/runtime/Statics.mix:(II)I
      26: istore_1
      27: iload_1
      28: aload_0
      29: invokevirtual #56                 // Method memoryAllocator:()Lwvlet/airframe/canvas/OffHeapMemoryAllocator;
      32: invokestatic  #134                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      35: invokestatic  #130                // Method scala/runtime/Statics.mix:(II)I
      38: istore_1
      39: iload_1
      40: iconst_3
      41: invokestatic  #137                // Method scala/runtime/Statics.finalizeHash:(II)I
      44: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #111                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #141                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     112
       5: aload_1
       6: astore_3
       7: aload_3
       8: instanceof    #2                  // class wvlet/airframe/canvas/OffHeapMemory
      11: ifeq          19
      14: iconst_1
      15: istore_2
      16: goto          27
      19: goto          22
      22: iconst_0
      23: istore_2
      24: goto          27
      27: iload_2
      28: ifeq          116
      31: aload_1
      32: checkcast     #2                  // class wvlet/airframe/canvas/OffHeapMemory
      35: astore        4
      37: aload_0
      38: invokevirtual #69                 // Method address:()J
      41: aload         4
      43: invokevirtual #69                 // Method address:()J
      46: lcmp
      47: ifne          108
      50: aload_0
      51: invokevirtual #72                 // Method size:()J
      54: aload         4
      56: invokevirtual #72                 // Method size:()J
      59: lcmp
      60: ifne          108
      63: aload_0
      64: invokevirtual #56                 // Method memoryAllocator:()Lwvlet/airframe/canvas/OffHeapMemoryAllocator;
      67: aload         4
      69: invokevirtual #56                 // Method memoryAllocator:()Lwvlet/airframe/canvas/OffHeapMemoryAllocator;
      72: astore        5
      74: dup
      75: ifnonnull     87
      78: pop
      79: aload         5
      81: ifnull        95
      84: goto          108
      87: aload         5
      89: invokevirtual #144                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      92: ifeq          108
      95: aload         4
      97: aload_0
      98: invokevirtual #146                // Method canEqual:(Ljava/lang/Object;)Z
     101: ifeq          108
     104: iconst_1
     105: goto          109
     108: iconst_0
     109: ifeq          116
     112: iconst_1
     113: goto          117
     116: iconst_0
     117: ireturn

  public wvlet.airframe.canvas.OffHeapMemory(long, long, wvlet.airframe.canvas.OffHeapMemoryAllocator);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #45                 // Field address:J
       5: aload_0
       6: lload_3
       7: putfield      #49                 // Field size:J
      10: aload_0
      11: aload         5
      13: putfield      #52                 // Field memoryAllocator:Lwvlet/airframe/canvas/OffHeapMemoryAllocator;
      16: aload_0
      17: invokespecial #148                // Method wvlet/airframe/canvas/Memory."<init>":()V
      20: aload_0
      21: invokestatic  #152                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
      24: return
}
