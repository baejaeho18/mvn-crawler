Compiled from "OffHeapMemoryAllocator.scala"
public class wvlet.airframe.canvas.MemoryRefHolder implements scala.Product,scala.Serializable {
  private final wvlet.airframe.canvas.MemoryReference ref;

  private final long size;

  public static scala.Option<scala.Tuple2<wvlet.airframe.canvas.MemoryReference, java.lang.Object>> unapply(wvlet.airframe.canvas.MemoryRefHolder);
    Code:
       0: getstatic     #26                 // Field wvlet/airframe/canvas/MemoryRefHolder$.MODULE$:Lwvlet/airframe/canvas/MemoryRefHolder$;
       3: aload_0
       4: invokevirtual #28                 // Method wvlet/airframe/canvas/MemoryRefHolder$.unapply:(Lwvlet/airframe/canvas/MemoryRefHolder;)Lscala/Option;
       7: areturn

  public static wvlet.airframe.canvas.MemoryRefHolder apply(wvlet.airframe.canvas.MemoryReference, long);
    Code:
       0: getstatic     #26                 // Field wvlet/airframe/canvas/MemoryRefHolder$.MODULE$:Lwvlet/airframe/canvas/MemoryRefHolder$;
       3: aload_0
       4: lload_1
       5: invokevirtual #32                 // Method wvlet/airframe/canvas/MemoryRefHolder$.apply:(Lwvlet/airframe/canvas/MemoryReference;J)Lwvlet/airframe/canvas/MemoryRefHolder;
       8: areturn

  public static scala.Function1<scala.Tuple2<wvlet.airframe.canvas.MemoryReference, java.lang.Object>, wvlet.airframe.canvas.MemoryRefHolder> tupled();
    Code:
       0: getstatic     #26                 // Field wvlet/airframe/canvas/MemoryRefHolder$.MODULE$:Lwvlet/airframe/canvas/MemoryRefHolder$;
       3: invokevirtual #37                 // Method wvlet/airframe/canvas/MemoryRefHolder$.tupled:()Lscala/Function1;
       6: areturn

  public static scala.Function1<wvlet.airframe.canvas.MemoryReference, scala.Function1<java.lang.Object, wvlet.airframe.canvas.MemoryRefHolder>> curried();
    Code:
       0: getstatic     #26                 // Field wvlet/airframe/canvas/MemoryRefHolder$.MODULE$:Lwvlet/airframe/canvas/MemoryRefHolder$;
       3: invokevirtual #41                 // Method wvlet/airframe/canvas/MemoryRefHolder$.curried:()Lscala/Function1;
       6: areturn

  public wvlet.airframe.canvas.MemoryReference ref();
    Code:
       0: aload_0
       1: getfield      #44                 // Field ref:Lwvlet/airframe/canvas/MemoryReference;
       4: areturn

  public long size();
    Code:
       0: aload_0
       1: getfield      #49                 // Field size:J
       4: lreturn

  public wvlet.airframe.canvas.MemoryRefHolder copy(wvlet.airframe.canvas.MemoryReference, long);
    Code:
       0: new           #2                  // class wvlet/airframe/canvas/MemoryRefHolder
       3: dup
       4: aload_1
       5: lload_2
       6: invokespecial #54                 // Method "<init>":(Lwvlet/airframe/canvas/MemoryReference;J)V
       9: areturn

  public wvlet.airframe.canvas.MemoryReference copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method ref:()Lwvlet/airframe/canvas/MemoryReference;
       4: areturn

  public long copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #60                 // Method size:()J
       4: lreturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #64                 // String MemoryRefHolder
       2: areturn

  public int productArity();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 1
                     0: 24
                     1: 31
               default: 41
          }
      24: aload_0
      25: invokevirtual #57                 // Method ref:()Lwvlet/airframe/canvas/MemoryReference;
      28: goto          56
      31: aload_0
      32: invokevirtual #60                 // Method size:()J
      35: invokestatic  #75                 // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      38: goto          56
      41: new           #77                 // class java/lang/IndexOutOfBoundsException
      44: dup
      45: iload_1
      46: invokestatic  #81                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      49: invokevirtual #84                 // Method java/lang/Object.toString:()Ljava/lang/String;
      52: invokespecial #87                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #96                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #100                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class wvlet/airframe/canvas/MemoryRefHolder
       4: ireturn

  public int hashCode();
    Code:
       0: ldc           #105                // int -889275714
       2: istore_1
       3: iload_1
       4: aload_0
       5: invokevirtual #57                 // Method ref:()Lwvlet/airframe/canvas/MemoryReference;
       8: invokestatic  #111                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      11: invokestatic  #115                // Method scala/runtime/Statics.mix:(II)I
      14: istore_1
      15: iload_1
      16: aload_0
      17: invokevirtual #60                 // Method size:()J
      20: invokestatic  #119                // Method scala/runtime/Statics.longHash:(J)I
      23: invokestatic  #115                // Method scala/runtime/Statics.mix:(II)I
      26: istore_1
      27: iload_1
      28: iconst_2
      29: invokestatic  #122                // Method scala/runtime/Statics.finalizeHash:(II)I
      32: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #96                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #126                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     99
       5: aload_1
       6: astore_3
       7: aload_3
       8: instanceof    #2                  // class wvlet/airframe/canvas/MemoryRefHolder
      11: ifeq          19
      14: iconst_1
      15: istore_2
      16: goto          27
      19: goto          22
      22: iconst_0
      23: istore_2
      24: goto          27
      27: iload_2
      28: ifeq          103
      31: aload_1
      32: checkcast     #2                  // class wvlet/airframe/canvas/MemoryRefHolder
      35: astore        4
      37: aload_0
      38: invokevirtual #57                 // Method ref:()Lwvlet/airframe/canvas/MemoryReference;
      41: aload         4
      43: invokevirtual #57                 // Method ref:()Lwvlet/airframe/canvas/MemoryReference;
      46: astore        5
      48: dup
      49: ifnonnull     61
      52: pop
      53: aload         5
      55: ifnull        69
      58: goto          95
      61: aload         5
      63: invokevirtual #129                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      66: ifeq          95
      69: aload_0
      70: invokevirtual #60                 // Method size:()J
      73: aload         4
      75: invokevirtual #60                 // Method size:()J
      78: lcmp
      79: ifne          95
      82: aload         4
      84: aload_0
      85: invokevirtual #131                // Method canEqual:(Ljava/lang/Object;)Z
      88: ifeq          95
      91: iconst_1
      92: goto          96
      95: iconst_0
      96: ifeq          103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: ireturn

  public wvlet.airframe.canvas.MemoryRefHolder(wvlet.airframe.canvas.MemoryReference, long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #44                 // Field ref:Lwvlet/airframe/canvas/MemoryReference;
       5: aload_0
       6: lload_2
       7: putfield      #49                 // Field size:J
      10: aload_0
      11: invokespecial #136                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #140                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
      18: return
}
