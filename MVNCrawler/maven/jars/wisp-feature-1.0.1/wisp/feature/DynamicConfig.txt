Compiled from "DynamicConfig.kt"
public interface wisp.feature.DynamicConfig {
  public abstract boolean getBoolean(wisp.feature.Feature);

  public abstract double getDouble(wisp.feature.Feature);

  public abstract int getInt(wisp.feature.Feature);

  public abstract java.lang.String getString(wisp.feature.Feature);

  public abstract <T extends java.lang.Enum<T>> T getEnum(wisp.feature.Feature, java.lang.Class<T>);

  public abstract <T> T getJson(wisp.feature.Feature, java.lang.Class<T>);

  public abstract wisp.feature.TrackerReference trackBoolean(wisp.feature.Feature, java.util.concurrent.Executor, kotlin.jvm.functions.Function1<? super java.lang.Boolean, kotlin.Unit>);

  public abstract wisp.feature.TrackerReference trackDouble(wisp.feature.Feature, java.util.concurrent.Executor, kotlin.jvm.functions.Function1<? super java.lang.Double, kotlin.Unit>);

  public abstract wisp.feature.TrackerReference trackInt(wisp.feature.Feature, java.util.concurrent.Executor, kotlin.jvm.functions.Function1<? super java.lang.Integer, kotlin.Unit>);

  public abstract wisp.feature.TrackerReference trackString(wisp.feature.Feature, java.util.concurrent.Executor, kotlin.jvm.functions.Function1<? super java.lang.String, kotlin.Unit>);

  public abstract <T extends java.lang.Enum<T>> wisp.feature.TrackerReference trackEnum(wisp.feature.Feature, java.lang.Class<T>, java.util.concurrent.Executor, kotlin.jvm.functions.Function1<? super T, kotlin.Unit>);

  public abstract <T> wisp.feature.TrackerReference trackJson(wisp.feature.Feature, java.lang.Class<T>, java.util.concurrent.Executor, kotlin.jvm.functions.Function1<? super T, kotlin.Unit>);
}
