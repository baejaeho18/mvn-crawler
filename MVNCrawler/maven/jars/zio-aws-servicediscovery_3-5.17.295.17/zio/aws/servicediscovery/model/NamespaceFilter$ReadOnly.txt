Compiled from "NamespaceFilter.scala"
public interface zio.aws.servicediscovery.model.NamespaceFilter$ReadOnly {
  public static zio.aws.servicediscovery.model.NamespaceFilter asEditable$(zio.aws.servicediscovery.model.NamespaceFilter$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #15                 // InterfaceMethod asEditable:()Lzio/aws/servicediscovery/model/NamespaceFilter;
       4: areturn

  public default zio.aws.servicediscovery.model.NamespaceFilter asEditable();
    Code:
       0: getstatic     #22                 // Field zio/aws/servicediscovery/model/NamespaceFilter$.MODULE$:Lzio/aws/servicediscovery/model/NamespaceFilter$;
       3: aload_0
       4: invokeinterface #26,  1           // InterfaceMethod name:()Lzio/aws/servicediscovery/model/NamespaceFilterName;
       9: aload_0
      10: invokeinterface #30,  1           // InterfaceMethod values:()Lscala/collection/immutable/List;
      15: aload_0
      16: invokeinterface #34,  1           // InterfaceMethod condition:()Lzio/prelude/data/Optional;
      21: aload_0
      22: invokedynamic #55,  0             // InvokeDynamic #0:apply:(Lzio/aws/servicediscovery/model/NamespaceFilter$ReadOnly;)Lscala/Function1;
      27: invokeinterface #61,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      32: invokevirtual #64                 // Method zio/aws/servicediscovery/model/NamespaceFilter$.apply:(Lzio/aws/servicediscovery/model/NamespaceFilterName;Lscala/collection/Iterable;Lzio/prelude/data/Optional;)Lzio/aws/servicediscovery/model/NamespaceFilter;
      35: areturn

  public abstract zio.aws.servicediscovery.model.NamespaceFilterName name();

  public abstract scala.collection.immutable.List<java.lang.String> values();

  public abstract zio.prelude.data.Optional<zio.aws.servicediscovery.model.FilterCondition> condition();

  public static zio.ZIO getName$(zio.aws.servicediscovery.model.NamespaceFilter$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #73                 // InterfaceMethod getName:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, scala.runtime.Nothing$, zio.aws.servicediscovery.model.NamespaceFilterName> getName();
    Code:
       0: getstatic     #79                 // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: invokedynamic #86,  0             // InvokeDynamic #1:apply:(Lzio/aws/servicediscovery/model/NamespaceFilter$ReadOnly;)Lscala/Function1;
       9: ldc           #88                 // String zio.aws.servicediscovery.model.NamespaceFilter.ReadOnly.getName(NamespaceFilter.scala:43)
      11: invokevirtual #92                 // Method zio/ZIO$.succeed:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getValues$(zio.aws.servicediscovery.model.NamespaceFilter$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #96                 // InterfaceMethod getValues:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, scala.runtime.Nothing$, scala.collection.immutable.List<java.lang.String>> getValues();
    Code:
       0: getstatic     #79                 // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: invokedynamic #104,  0            // InvokeDynamic #2:apply:(Lzio/aws/servicediscovery/model/NamespaceFilter$ReadOnly;)Lscala/Function1;
       9: ldc           #106                // String zio.aws.servicediscovery.model.NamespaceFilter.ReadOnly.getValues(NamespaceFilter.scala:44)
      11: invokevirtual #92                 // Method zio/ZIO$.succeed:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getCondition$(zio.aws.servicediscovery.model.NamespaceFilter$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #110                // InterfaceMethod getCondition:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.servicediscovery.model.FilterCondition> getCondition();
    Code:
       0: getstatic     #116                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #117                // String condition
       5: aload_0
       6: invokedynamic #127,  0            // InvokeDynamic #3:apply:(Lzio/aws/servicediscovery/model/NamespaceFilter$ReadOnly;)Lscala/Function0;
      11: invokevirtual #131                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  private zio.aws.servicediscovery.model.FilterCondition asEditable$$anonfun$1(zio.aws.servicediscovery.model.FilterCondition);
    Code:
       0: aload_1
       1: areturn

  private zio.aws.servicediscovery.model.NamespaceFilterName getName$$anonfun$1(zio.Unsafe);
    Code:
       0: aload_0
       1: invokeinterface #26,  1           // InterfaceMethod name:()Lzio/aws/servicediscovery/model/NamespaceFilterName;
       6: areturn

  private scala.collection.immutable.List getValues$$anonfun$1(zio.Unsafe);
    Code:
       0: aload_0
       1: invokeinterface #30,  1           // InterfaceMethod values:()Lscala/collection/immutable/List;
       6: areturn

  private zio.prelude.data.Optional getCondition$$anonfun$1();
    Code:
       0: aload_0
       1: invokeinterface #34,  1           // InterfaceMethod condition:()Lzio/prelude/data/Optional;
       6: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #148,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
