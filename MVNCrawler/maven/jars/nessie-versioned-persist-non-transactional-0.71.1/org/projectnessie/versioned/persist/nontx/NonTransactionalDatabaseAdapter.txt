Compiled from "NonTransactionalDatabaseAdapter.java"
public abstract class org.projectnessie.versioned.persist.nontx.NonTransactionalDatabaseAdapter<CONFIG extends org.projectnessie.versioned.persist.nontx.NonTransactionalDatabaseAdapterConfig> extends org.projectnessie.versioned.persist.adapter.spi.AbstractDatabaseAdapter<org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, CONFIG> {
  public static final java.lang.String TAG_COMMIT_COUNT;

  public static final java.lang.String TAG_KEY_LIST_COUNT;

  public static final java.lang.String TAG_REF;

  protected org.projectnessie.versioned.persist.nontx.NonTransactionalDatabaseAdapter(CONFIG, org.projectnessie.versioned.persist.adapter.events.AdapterEventConsumer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/projectnessie/versioned/persist/adapter/spi/AbstractDatabaseAdapter."<init>":(Lorg/projectnessie/versioned/persist/adapter/DatabaseAdapterConfig;Lorg/projectnessie/versioned/persist/adapter/events/AdapterEventConsumer;)V
       6: return

  public org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext borrowConnection();
    Code:
       0: getstatic     #2                  // Field org/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext.NON_TRANSACTIONAL_OPERATION_CONTEXT:Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;
       3: areturn

  public org.projectnessie.versioned.Hash hashOnReference(org.projectnessie.versioned.NamedRef, java.util.Optional<org.projectnessie.versioned.Hash>) throws org.projectnessie.versioned.ReferenceNotFoundException;
    Code:
       0: aload_0
       1: getstatic     #2                  // Field org/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext.NON_TRANSACTIONAL_OPERATION_CONTEXT:Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;
       4: aload_1
       5: aload_2
       6: invokevirtual #3                  // Method hashOnRef:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Lorg/projectnessie/versioned/NamedRef;Ljava/util/Optional;)Lorg/projectnessie/versioned/Hash;
       9: areturn

  public java.util.Map<org.projectnessie.model.ContentKey, org.projectnessie.versioned.persist.adapter.ContentAndState> values(org.projectnessie.versioned.Hash, java.util.Collection<org.projectnessie.model.ContentKey>, org.projectnessie.versioned.persist.adapter.KeyFilterPredicate) throws org.projectnessie.versioned.ReferenceNotFoundException;
    Code:
       0: aload_0
       1: getstatic     #2                  // Field org/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext.NON_TRANSACTIONAL_OPERATION_CONTEXT:Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #4                  // Method fetchValues:(Ljava/lang/AutoCloseable;Lorg/projectnessie/versioned/Hash;Ljava/util/Collection;Lorg/projectnessie/versioned/persist/adapter/KeyFilterPredicate;)Ljava/util/Map;
      10: areturn

  public java.util.stream.Stream<org.projectnessie.versioned.persist.adapter.CommitLogEntry> commitLog(org.projectnessie.versioned.Hash) throws org.projectnessie.versioned.ReferenceNotFoundException;
    Code:
       0: aload_0
       1: getstatic     #2                  // Field org/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext.NON_TRANSACTIONAL_OPERATION_CONTEXT:Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;
       4: aload_1
       5: invokevirtual #5                  // Method readCommitLogStream:(Ljava/lang/AutoCloseable;Lorg/projectnessie/versioned/Hash;)Ljava/util/stream/Stream;
       8: areturn

  public org.projectnessie.versioned.ReferenceInfo<org.projectnessie.nessie.relocated.protobuf.ByteString> namedRef(java.lang.String, org.projectnessie.versioned.GetNamedRefsParams) throws org.projectnessie.versioned.ReferenceNotFoundException;
    Code:
       0: aload_2
       1: ldc           #6                  // String Parameter for GetNamedRefsParams must not be null
       3: invokestatic  #7                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: getstatic     #2                  // Field org/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext.NON_TRANSACTIONAL_OPERATION_CONTEXT:Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;
      10: astore_3
      11: aload_0
      12: aload_3
      13: aload_1
      14: invokevirtual #8                  // Method referenceHead:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Ljava/lang/String;)Lorg/projectnessie/versioned/ReferenceInfo;
      17: astore        4
      19: aload_0
      20: aload_3
      21: aload_2
      22: invokespecial #9                  // Method namedRefsDefaultBranchHead:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Lorg/projectnessie/versioned/GetNamedRefsParams;)Lorg/projectnessie/versioned/Hash;
      25: astore        5
      27: aload         4
      29: invokestatic  #10                 // InterfaceMethod java/util/stream/Stream.of:(Ljava/lang/Object;)Ljava/util/stream/Stream;
      32: astore        6
      34: aload_0
      35: aload_3
      36: aload_2
      37: aload         5
      39: aload         6
      41: invokevirtual #11                 // Method namedRefsFilterAndEnhance:(Ljava/lang/AutoCloseable;Lorg/projectnessie/versioned/GetNamedRefsParams;Lorg/projectnessie/versioned/Hash;Ljava/util/stream/Stream;)Ljava/util/stream/Stream;
      44: astore        7
      46: aload         7
      48: invokeinterface #12,  1           // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      53: aload_1
      54: invokedynamic #13,  0             // InvokeDynamic #0:get:(Ljava/lang/String;)Ljava/util/function/Supplier;
      59: invokevirtual #14                 // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      62: checkcast     #15                 // class org/projectnessie/versioned/ReferenceInfo
      65: astore        8
      67: aload         7
      69: ifnull        79
      72: aload         7
      74: invokeinterface #16,  1           // InterfaceMethod java/util/stream/Stream.close:()V
      79: aload         8
      81: areturn
      82: astore        8
      84: aload         7
      86: ifnull        108
      89: aload         7
      91: invokeinterface #16,  1           // InterfaceMethod java/util/stream/Stream.close:()V
      96: goto          108
      99: astore        9
     101: aload         8
     103: aload         9
     105: invokevirtual #18                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     108: aload         8
     110: athrow
    Exception table:
       from    to  target type
          46    67    82   Class java/lang/Throwable
          89    96    99   Class java/lang/Throwable

  public java.util.stream.Stream<org.projectnessie.versioned.ReferenceInfo<org.projectnessie.nessie.relocated.protobuf.ByteString>> namedRefs(org.projectnessie.versioned.GetNamedRefsParams) throws org.projectnessie.versioned.ReferenceNotFoundException;
    Code:
       0: aload_1
       1: ldc           #19                 // String Parameter for GetNamedRefsParams must not be null.
       3: invokestatic  #7                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: invokestatic  #20                 // Method namedRefsAnyRetrieves:(Lorg/projectnessie/versioned/GetNamedRefsParams;)Z
      11: ldc           #21                 // String Must retrieve branches or tags or both.
      13: invokestatic  #22                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      16: getstatic     #2                  // Field org/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext.NON_TRANSACTIONAL_OPERATION_CONTEXT:Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;
      19: astore_2
      20: aload_0
      21: aload_2
      22: invokevirtual #23                 // Method fetchNamedReferences:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;)Ljava/util/stream/Stream;
      25: invokedynamic #24,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      30: invokeinterface #25,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      35: astore_3
      36: aload_0
      37: aload_2
      38: aload_1
      39: invokespecial #9                  // Method namedRefsDefaultBranchHead:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Lorg/projectnessie/versioned/GetNamedRefsParams;)Lorg/projectnessie/versioned/Hash;
      42: astore        4
      44: aload_0
      45: aload_2
      46: aload_1
      47: aload         4
      49: aload_3
      50: invokevirtual #11                 // Method namedRefsFilterAndEnhance:(Ljava/lang/AutoCloseable;Lorg/projectnessie/versioned/GetNamedRefsParams;Lorg/projectnessie/versioned/Hash;Ljava/util/stream/Stream;)Ljava/util/stream/Stream;
      53: areturn

  public java.util.stream.Stream<org.projectnessie.versioned.persist.adapter.KeyListEntry> keys(org.projectnessie.versioned.Hash, org.projectnessie.versioned.persist.adapter.KeyFilterPredicate) throws org.projectnessie.versioned.ReferenceNotFoundException;
    Code:
       0: aload_0
       1: getstatic     #2                  // Field org/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext.NON_TRANSACTIONAL_OPERATION_CONTEXT:Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;
       4: aload_1
       5: aload_2
       6: invokevirtual #26                 // Method keysForCommitEntry:(Ljava/lang/AutoCloseable;Lorg/projectnessie/versioned/Hash;Lorg/projectnessie/versioned/persist/adapter/KeyFilterPredicate;)Ljava/util/stream/Stream;
       9: areturn

  public org.projectnessie.versioned.MergeResult<org.projectnessie.versioned.persist.adapter.CommitLogEntry> merge(org.projectnessie.versioned.persist.adapter.MergeParams) throws org.projectnessie.versioned.ReferenceNotFoundException, org.projectnessie.versioned.ReferenceConflictException;
    Code:
       0: aload_0
       1: ldc           #27                 // String merge
       3: aload_1
       4: invokeinterface #28,  1           // InterfaceMethod org/projectnessie/versioned/persist/adapter/MergeParams.getToBranch:()Lorg/projectnessie/versioned/BranchName;
       9: getstatic     #29                 // Field org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpVariant.MERGE:Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpVariant;
      12: aload_0
      13: aload_1
      14: invokedynamic #30,  0             // InvokeDynamic #2:apply:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter;Lorg/projectnessie/versioned/persist/adapter/MergeParams;)Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOp;
      19: aload_1
      20: invokedynamic #31,  0             // InvokeDynamic #3:get:(Lorg/projectnessie/versioned/persist/adapter/MergeParams;)Ljava/util/function/Supplier;
      25: invokevirtual #32                 // Method casOpLoop:(Ljava/lang/String;Lorg/projectnessie/versioned/NamedRef;Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpVariant;Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOp;Ljava/util/function/Supplier;)Ljava/lang/Object;
      28: checkcast     #33                 // class org/projectnessie/versioned/MergeResult
      31: areturn
      32: astore_2
      33: aload_2
      34: athrow
      35: astore_2
      36: new           #36                 // class java/lang/RuntimeException
      39: dup
      40: aload_2
      41: invokespecial #38                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      44: athrow
    Exception table:
       from    to  target type
           0    31    32   Class org/projectnessie/versioned/ReferenceNotFoundException
           0    31    32   Class org/projectnessie/versioned/ReferenceConflictException
           0    31    32   Class java/lang/RuntimeException
           0    31    35   Class java/lang/Exception

  public org.projectnessie.versioned.MergeResult<org.projectnessie.versioned.persist.adapter.CommitLogEntry> transplant(org.projectnessie.versioned.persist.adapter.TransplantParams) throws org.projectnessie.versioned.ReferenceNotFoundException, org.projectnessie.versioned.ReferenceConflictException;
    Code:
       0: aload_0
       1: ldc           #39                 // String transplant
       3: aload_1
       4: invokeinterface #40,  1           // InterfaceMethod org/projectnessie/versioned/persist/adapter/TransplantParams.getToBranch:()Lorg/projectnessie/versioned/BranchName;
       9: getstatic     #29                 // Field org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpVariant.MERGE:Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpVariant;
      12: aload_0
      13: aload_1
      14: invokedynamic #41,  0             // InvokeDynamic #4:apply:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter;Lorg/projectnessie/versioned/persist/adapter/TransplantParams;)Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOp;
      19: aload_1
      20: invokedynamic #42,  0             // InvokeDynamic #5:get:(Lorg/projectnessie/versioned/persist/adapter/TransplantParams;)Ljava/util/function/Supplier;
      25: invokevirtual #32                 // Method casOpLoop:(Ljava/lang/String;Lorg/projectnessie/versioned/NamedRef;Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpVariant;Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOp;Ljava/util/function/Supplier;)Ljava/lang/Object;
      28: checkcast     #33                 // class org/projectnessie/versioned/MergeResult
      31: areturn
      32: astore_2
      33: aload_2
      34: athrow
      35: astore_2
      36: new           #36                 // class java/lang/RuntimeException
      39: dup
      40: aload_2
      41: invokespecial #38                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      44: athrow
    Exception table:
       from    to  target type
           0    31    32   Class org/projectnessie/versioned/ReferenceNotFoundException
           0    31    32   Class org/projectnessie/versioned/ReferenceConflictException
           0    31    32   Class java/lang/RuntimeException
           0    31    35   Class java/lang/Exception

  public org.projectnessie.versioned.CommitResult<org.projectnessie.versioned.persist.adapter.CommitLogEntry> commit(org.projectnessie.versioned.persist.adapter.CommitParams) throws org.projectnessie.versioned.ReferenceConflictException, org.projectnessie.versioned.ReferenceNotFoundException;
    Code:
       0: aload_0
       1: ldc           #43                 // String commit
       3: aload_1
       4: invokeinterface #44,  1           // InterfaceMethod org/projectnessie/versioned/persist/adapter/CommitParams.getToBranch:()Lorg/projectnessie/versioned/BranchName;
       9: getstatic     #45                 // Field org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpVariant.COMMIT:Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpVariant;
      12: aload_0
      13: aload_1
      14: invokedynamic #46,  0             // InvokeDynamic #6:apply:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter;Lorg/projectnessie/versioned/persist/adapter/CommitParams;)Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOp;
      19: aload_1
      20: invokedynamic #47,  0             // InvokeDynamic #7:get:(Lorg/projectnessie/versioned/persist/adapter/CommitParams;)Ljava/util/function/Supplier;
      25: invokevirtual #32                 // Method casOpLoop:(Ljava/lang/String;Lorg/projectnessie/versioned/NamedRef;Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpVariant;Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOp;Ljava/util/function/Supplier;)Ljava/lang/Object;
      28: checkcast     #48                 // class org/projectnessie/versioned/CommitResult
      31: areturn
      32: astore_2
      33: aload_2
      34: athrow
      35: astore_2
      36: new           #36                 // class java/lang/RuntimeException
      39: dup
      40: aload_2
      41: invokespecial #38                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      44: athrow
    Exception table:
       from    to  target type
           0    31    32   Class org/projectnessie/versioned/ReferenceNotFoundException
           0    31    32   Class org/projectnessie/versioned/ReferenceConflictException
           0    31    32   Class java/lang/RuntimeException
           0    31    35   Class java/lang/Exception

  public org.projectnessie.versioned.ReferenceCreatedResult create(org.projectnessie.versioned.NamedRef, org.projectnessie.versioned.Hash) throws org.projectnessie.versioned.ReferenceAlreadyExistsException, org.projectnessie.versioned.ReferenceNotFoundException;
    Code:
       0: aload_0
       1: ldc           #49                 // String createRef
       3: aload_1
       4: getstatic     #50                 // Field org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpVariant.CREATE_REF:Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpVariant;
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokedynamic #51,  0             // InvokeDynamic #8:apply:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter;Lorg/projectnessie/versioned/NamedRef;Lorg/projectnessie/versioned/Hash;)Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOp;
      15: aload_1
      16: aload_2
      17: invokedynamic #52,  0             // InvokeDynamic #9:get:(Lorg/projectnessie/versioned/NamedRef;Lorg/projectnessie/versioned/Hash;)Ljava/util/function/Supplier;
      22: invokevirtual #32                 // Method casOpLoop:(Ljava/lang/String;Lorg/projectnessie/versioned/NamedRef;Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpVariant;Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOp;Ljava/util/function/Supplier;)Ljava/lang/Object;
      25: checkcast     #53                 // class org/projectnessie/versioned/ReferenceCreatedResult
      28: areturn
      29: astore_3
      30: aload_3
      31: athrow
      32: astore_3
      33: new           #36                 // class java/lang/RuntimeException
      36: dup
      37: aload_3
      38: invokespecial #38                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      41: athrow
    Exception table:
       from    to  target type
           0    28    29   Class org/projectnessie/versioned/ReferenceAlreadyExistsException
           0    28    29   Class org/projectnessie/versioned/ReferenceNotFoundException
           0    28    29   Class java/lang/RuntimeException
           0    28    32   Class java/lang/Exception

  public org.projectnessie.versioned.ReferenceDeletedResult delete(org.projectnessie.versioned.NamedRef, java.util.Optional<org.projectnessie.versioned.Hash>) throws org.projectnessie.versioned.ReferenceNotFoundException, org.projectnessie.versioned.ReferenceConflictException;
    Code:
       0: aload_0
       1: ldc           #55                 // String deleteRef
       3: aload_1
       4: getstatic     #56                 // Field org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpVariant.DELETE_REF:Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpVariant;
       7: aload_1
       8: aload_2
       9: invokedynamic #57,  0             // InvokeDynamic #10:apply:(Lorg/projectnessie/versioned/NamedRef;Ljava/util/Optional;)Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOp;
      14: aload_1
      15: aload_2
      16: invokedynamic #58,  0             // InvokeDynamic #11:get:(Lorg/projectnessie/versioned/NamedRef;Ljava/util/Optional;)Ljava/util/function/Supplier;
      21: invokevirtual #32                 // Method casOpLoop:(Ljava/lang/String;Lorg/projectnessie/versioned/NamedRef;Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpVariant;Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOp;Ljava/util/function/Supplier;)Ljava/lang/Object;
      24: checkcast     #59                 // class org/projectnessie/versioned/ReferenceDeletedResult
      27: areturn
      28: astore_3
      29: aload_3
      30: athrow
      31: astore_3
      32: new           #36                 // class java/lang/RuntimeException
      35: dup
      36: aload_3
      37: invokespecial #38                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      40: athrow
    Exception table:
       from    to  target type
           0    27    28   Class org/projectnessie/versioned/ReferenceNotFoundException
           0    27    28   Class org/projectnessie/versioned/ReferenceConflictException
           0    27    28   Class java/lang/RuntimeException
           0    27    31   Class java/lang/Exception

  public org.projectnessie.versioned.ReferenceAssignedResult assign(org.projectnessie.versioned.NamedRef, java.util.Optional<org.projectnessie.versioned.Hash>, org.projectnessie.versioned.Hash) throws org.projectnessie.versioned.ReferenceNotFoundException, org.projectnessie.versioned.ReferenceConflictException;
    Code:
       0: aload_0
       1: ldc           #60                 // String assignRef
       3: aload_1
       4: getstatic     #61                 // Field org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpVariant.REF_UPDATE:Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpVariant;
       7: aload_0
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokedynamic #62,  0             // InvokeDynamic #12:apply:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter;Lorg/projectnessie/versioned/NamedRef;Ljava/util/Optional;Lorg/projectnessie/versioned/Hash;)Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOp;
      16: aload_1
      17: aload_2
      18: aload_3
      19: invokedynamic #63,  0             // InvokeDynamic #13:get:(Lorg/projectnessie/versioned/NamedRef;Ljava/util/Optional;Lorg/projectnessie/versioned/Hash;)Ljava/util/function/Supplier;
      24: invokevirtual #32                 // Method casOpLoop:(Ljava/lang/String;Lorg/projectnessie/versioned/NamedRef;Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpVariant;Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOp;Ljava/util/function/Supplier;)Ljava/lang/Object;
      27: checkcast     #64                 // class org/projectnessie/versioned/ReferenceAssignedResult
      30: areturn
      31: astore        4
      33: aload         4
      35: athrow
      36: astore        4
      38: new           #36                 // class java/lang/RuntimeException
      41: dup
      42: aload         4
      44: invokespecial #38                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      47: athrow
    Exception table:
       from    to  target type
           0    30    31   Class org/projectnessie/versioned/ReferenceNotFoundException
           0    30    31   Class org/projectnessie/versioned/ReferenceConflictException
           0    30    31   Class java/lang/RuntimeException
           0    30    36   Class java/lang/Exception

  public java.util.stream.Stream<org.projectnessie.versioned.persist.adapter.Difference> diff(org.projectnessie.versioned.Hash, org.projectnessie.versioned.Hash, org.projectnessie.versioned.persist.adapter.KeyFilterPredicate) throws org.projectnessie.versioned.ReferenceNotFoundException;
    Code:
       0: aload_0
       1: getstatic     #2                  // Field org/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext.NON_TRANSACTIONAL_OPERATION_CONTEXT:Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #65                 // Method buildDiff:(Ljava/lang/AutoCloseable;Lorg/projectnessie/versioned/Hash;Lorg/projectnessie/versioned/Hash;Lorg/projectnessie/versioned/persist/adapter/KeyFilterPredicate;)Ljava/util/stream/Stream;
      10: areturn

  public void initializeRepo(java.lang.String);
    Code:
       0: getstatic     #2                  // Field org/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext.NON_TRANSACTIONAL_OPERATION_CONTEXT:Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;
       3: astore_2
       4: aload_0
       5: aload_2
       6: invokevirtual #66                 // Method fetchGlobalPointer:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;)Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer;
       9: ifnonnull     107
      12: aload_0
      13: aload_2
      14: invokestatic  #67                 // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer.newBuilder:()Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer$Builder;
      17: invokestatic  #68                 // Method org/projectnessie/versioned/persist/adapter/spi/DatabaseAdapterUtil.randomHash:()Lorg/projectnessie/versioned/Hash;
      20: invokevirtual #69                 // Method org/projectnessie/versioned/Hash.asBytes:()Lorg/projectnessie/nessie/relocated/protobuf/ByteString;
      23: invokevirtual #70                 // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer$Builder.setGlobalId:(Lorg/projectnessie/nessie/relocated/protobuf/ByteString;)Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer$Builder;
      26: getstatic     #71                 // Field NO_ANCESTOR:Lorg/projectnessie/versioned/Hash;
      29: invokevirtual #69                 // Method org/projectnessie/versioned/Hash.asBytes:()Lorg/projectnessie/nessie/relocated/protobuf/ByteString;
      32: invokevirtual #72                 // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer$Builder.setGlobalLogHead:(Lorg/projectnessie/nessie/relocated/protobuf/ByteString;)Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer$Builder;
      35: getstatic     #71                 // Field NO_ANCESTOR:Lorg/projectnessie/versioned/Hash;
      38: invokevirtual #69                 // Method org/projectnessie/versioned/Hash.asBytes:()Lorg/projectnessie/nessie/relocated/protobuf/ByteString;
      41: invokevirtual #73                 // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer$Builder.setRefLogId:(Lorg/projectnessie/nessie/relocated/protobuf/ByteString;)Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer$Builder;
      44: getstatic     #71                 // Field NO_ANCESTOR:Lorg/projectnessie/versioned/Hash;
      47: invokevirtual #69                 // Method org/projectnessie/versioned/Hash.asBytes:()Lorg/projectnessie/nessie/relocated/protobuf/ByteString;
      50: invokevirtual #74                 // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer$Builder.addRefLogParentsInclHead:(Lorg/projectnessie/nessie/relocated/protobuf/ByteString;)Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer$Builder;
      53: getstatic     #71                 // Field NO_ANCESTOR:Lorg/projectnessie/versioned/Hash;
      56: invokevirtual #69                 // Method org/projectnessie/versioned/Hash.asBytes:()Lorg/projectnessie/nessie/relocated/protobuf/ByteString;
      59: invokevirtual #75                 // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer$Builder.addGlobalParentsInclHead:(Lorg/projectnessie/nessie/relocated/protobuf/ByteString;)Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer$Builder;
      62: invokevirtual #76                 // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer$Builder.build:()Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer;
      65: invokevirtual #77                 // Method unsafeWriteGlobalPointer:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer;)V
      68: aload_0
      69: aload_1
      70: invokedynamic #78,  0             // InvokeDynamic #14:get:(Ljava/lang/String;)Ljava/util/function/Supplier;
      75: invokevirtual #79                 // Method repositoryEvent:(Ljava/util/function/Supplier;)V
      78: aload_1
      79: invokestatic  #80                 // InterfaceMethod org/projectnessie/versioned/BranchName.of:(Ljava/lang/String;)Lorg/projectnessie/versioned/BranchName;
      82: astore_3
      83: aload_0
      84: aload_2
      85: aload_3
      86: getstatic     #71                 // Field NO_ANCESTOR:Lorg/projectnessie/versioned/Hash;
      89: invokevirtual #81                 // Method createNamedReference:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Lorg/projectnessie/versioned/NamedRef;Lorg/projectnessie/versioned/Hash;)Z
      92: ldc           #82                 // String Could not create default branch
      94: invokestatic  #83                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      97: aload_0
      98: aload_3
      99: invokedynamic #84,  0             // InvokeDynamic #15:get:(Lorg/projectnessie/versioned/BranchName;)Ljava/util/function/Supplier;
     104: invokevirtual #79                 // Method repositoryEvent:(Ljava/util/function/Supplier;)V
     107: return

  public void eraseRepo();
    Code:
       0: aload_0
       1: invokevirtual #85                 // Method doEraseRepo:()V
       4: aload_0
       5: invokedynamic #86,  0             // InvokeDynamic #16:get:()Ljava/util/function/Supplier;
      10: invokevirtual #79                 // Method repositoryEvent:(Ljava/util/function/Supplier;)V
      13: return

  protected abstract void doEraseRepo();

  public java.util.Optional<org.projectnessie.versioned.persist.adapter.ContentIdAndBytes> globalContent(org.projectnessie.versioned.persist.adapter.ContentId);
    Code:
       0: aload_0
       1: getstatic     #2                  // Field org/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext.NON_TRANSACTIONAL_OPERATION_CONTEXT:Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;
       4: invokespecial #87                 // Method globalLogFetcher:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;)Ljava/util/stream/Stream;
       7: invokedynamic #88,  0             // InvokeDynamic #17:apply:()Ljava/util/function/Function;
      12: invokeinterface #89,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      17: invokedynamic #90,  0             // InvokeDynamic #18:apply:()Ljava/util/function/Function;
      22: invokeinterface #25,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      27: aload_1
      28: invokedynamic #91,  0             // InvokeDynamic #19:test:(Lorg/projectnessie/versioned/persist/adapter/ContentId;)Ljava/util/function/Predicate;
      33: invokeinterface #92,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      38: invokedynamic #93,  0             // InvokeDynamic #20:apply:()Ljava/util/function/Function;
      43: invokeinterface #25,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      48: invokeinterface #12,  1           // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      53: areturn

  public org.projectnessie.versioned.persist.adapter.RepoDescription fetchRepositoryDescription();
    Code:
       0: getstatic     #2                  // Field org/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext.NON_TRANSACTIONAL_OPERATION_CONTEXT:Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;
       3: astore_1
       4: aload_0
       5: aload_1
       6: invokevirtual #94                 // Method fetchRepositoryDescription:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;)Lorg/projectnessie/versioned/persist/adapter/RepoDescription;
       9: astore_2
      10: aload_2
      11: ifnonnull     20
      14: getstatic     #95                 // Field org/projectnessie/versioned/persist/adapter/RepoDescription.DEFAULT:Lorg/projectnessie/versioned/persist/adapter/RepoDescription;
      17: goto          21
      20: aload_2
      21: areturn

  public void updateRepositoryDescription(java.util.function.Function<org.projectnessie.versioned.persist.adapter.RepoDescription, org.projectnessie.versioned.persist.adapter.RepoDescription>) throws org.projectnessie.versioned.ReferenceConflictException;
    Code:
       0: getstatic     #2                  // Field org/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext.NON_TRANSACTIONAL_OPERATION_CONTEXT:Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;
       3: astore_2
       4: ldc           #96                 // String updateRepositoryDescription
       6: invokedynamic #97,  0             // InvokeDynamic #21:apply:()Ljava/util/function/Function;
      11: aload_0
      12: invokedynamic #98,  0             // InvokeDynamic #22:accept:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter;)Ljava/util/function/BiConsumer;
      17: aload_0
      18: getfield      #99                 // Field config:Lorg/projectnessie/versioned/persist/adapter/DatabaseAdapterConfig;
      21: invokestatic  #100                // Method org/projectnessie/versioned/persist/adapter/spi/TryLoopState.newTryLoopState:(Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/BiConsumer;Lorg/projectnessie/versioned/persist/adapter/DatabaseAdapterConfig;)Lorg/projectnessie/versioned/persist/adapter/spi/TryLoopState;
      24: astore_3
      25: aload_0
      26: aload_2
      27: invokevirtual #94                 // Method fetchRepositoryDescription:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;)Lorg/projectnessie/versioned/persist/adapter/RepoDescription;
      30: astore        4
      32: aload_1
      33: aload         4
      35: ifnonnull     44
      38: getstatic     #95                 // Field org/projectnessie/versioned/persist/adapter/RepoDescription.DEFAULT:Lorg/projectnessie/versioned/persist/adapter/RepoDescription;
      41: goto          46
      44: aload         4
      46: invokeinterface #101,  2          // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      51: checkcast     #102                // class org/projectnessie/versioned/persist/adapter/RepoDescription
      54: astore        5
      56: aload         5
      58: ifnonnull     70
      61: aload_3
      62: ifnull        69
      65: aload_3
      66: invokevirtual #103                // Method org/projectnessie/versioned/persist/adapter/spi/TryLoopState.close:()V
      69: return
      70: aload_0
      71: aload_2
      72: aload         4
      74: aload         5
      76: invokevirtual #104                // Method tryUpdateRepositoryDescription:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Lorg/projectnessie/versioned/persist/adapter/RepoDescription;Lorg/projectnessie/versioned/persist/adapter/RepoDescription;)Z
      79: ifeq          99
      82: aload_3
      83: getstatic     #71                 // Field NO_ANCESTOR:Lorg/projectnessie/versioned/Hash;
      86: invokevirtual #105                // Method org/projectnessie/versioned/persist/adapter/spi/TryLoopState.success:(Ljava/lang/Object;)Ljava/lang/Object;
      89: pop
      90: aload_3
      91: ifnull        98
      94: aload_3
      95: invokevirtual #103                // Method org/projectnessie/versioned/persist/adapter/spi/TryLoopState.close:()V
      98: return
      99: aload_3
     100: invokevirtual #106                // Method org/projectnessie/versioned/persist/adapter/spi/TryLoopState.retry:()V
     103: goto          25
     106: astore        4
     108: aload_3
     109: ifnull        128
     112: aload_3
     113: invokevirtual #103                // Method org/projectnessie/versioned/persist/adapter/spi/TryLoopState.close:()V
     116: goto          128
     119: astore        5
     121: aload         4
     123: aload         5
     125: invokevirtual #18                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     128: aload         4
     130: athrow
    Exception table:
       from    to  target type
          25    61   106   Class java/lang/Throwable
          70    90   106   Class java/lang/Throwable
          99   106   106   Class java/lang/Throwable
         112   116   119   Class java/lang/Throwable

  public java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>> repoMaintenance(org.projectnessie.versioned.persist.adapter.RepoMaintenanceParams);
    Code:
       0: invokestatic  #107                // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       3: areturn

  public void assertCleanStateForTests();
    Code:
       0: return

  public void writeMultipleCommits(java.util.List<org.projectnessie.versioned.persist.adapter.CommitLogEntry>) throws org.projectnessie.versioned.ReferenceConflictException;
    Code:
       0: aload_0
       1: getstatic     #2                  // Field org/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext.NON_TRANSACTIONAL_OPERATION_CONTEXT:Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;
       4: aload_1
       5: invokevirtual #108                // Method doWriteMultipleCommits:(Ljava/lang/AutoCloseable;Ljava/util/List;)V
       8: goto          14
      11: astore_2
      12: aload_2
      13: athrow
      14: return
    Exception table:
       from    to  target type
           0     8    11   Class org/projectnessie/versioned/ReferenceConflictException

  public void updateMultipleCommits(java.util.List<org.projectnessie.versioned.persist.adapter.CommitLogEntry>) throws org.projectnessie.versioned.ReferenceNotFoundException;
    Code:
       0: aload_0
       1: getstatic     #2                  // Field org/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext.NON_TRANSACTIONAL_OPERATION_CONTEXT:Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;
       4: aload_1
       5: invokevirtual #109                // Method doUpdateMultipleCommits:(Ljava/lang/AutoCloseable;Ljava/util/List;)V
       8: goto          14
      11: astore_2
      12: aload_2
      13: athrow
      14: return
    Exception table:
       from    to  target type
           0     8    11   Class org/projectnessie/versioned/ReferenceNotFoundException

  protected final org.projectnessie.versioned.persist.adapter.RepoDescription fetchRepositoryDescription(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext);
    Code:
       0: ldc           #110                // String fetchRepositoryDescription
       2: invokestatic  #111                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.trace:(Ljava/lang/String;)Lorg/projectnessie/versioned/persist/adapter/spi/Traced;
       5: astore_2
       6: aload_0
       7: aload_1
       8: invokevirtual #112                // Method doFetchRepositoryDescription:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;)Lorg/projectnessie/versioned/persist/adapter/RepoDescription;
      11: astore_3
      12: aload_2
      13: ifnull        20
      16: aload_2
      17: invokevirtual #113                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.close:()V
      20: aload_3
      21: areturn
      22: astore_3
      23: aload_2
      24: ifnull        42
      27: aload_2
      28: invokevirtual #113                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.close:()V
      31: goto          42
      34: astore        4
      36: aload_3
      37: aload         4
      39: invokevirtual #18                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      42: aload_3
      43: athrow
    Exception table:
       from    to  target type
           6    12    22   Class java/lang/Throwable
          27    31    34   Class java/lang/Throwable

  protected abstract org.projectnessie.versioned.persist.adapter.RepoDescription doFetchRepositoryDescription(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext);

  protected final boolean tryUpdateRepositoryDescription(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, org.projectnessie.versioned.persist.adapter.RepoDescription, org.projectnessie.versioned.persist.adapter.RepoDescription);
    Code:
       0: ldc           #114                // String tryUpdateRepositoryDescription
       2: invokestatic  #111                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.trace:(Ljava/lang/String;)Lorg/projectnessie/versioned/persist/adapter/spi/Traced;
       5: astore        4
       7: aload_0
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokevirtual #115                // Method doTryUpdateRepositoryDescription:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Lorg/projectnessie/versioned/persist/adapter/RepoDescription;Lorg/projectnessie/versioned/persist/adapter/RepoDescription;)Z
      14: istore        5
      16: aload         4
      18: ifnull        26
      21: aload         4
      23: invokevirtual #113                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.close:()V
      26: iload         5
      28: ireturn
      29: astore        5
      31: aload         4
      33: ifnull        53
      36: aload         4
      38: invokevirtual #113                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.close:()V
      41: goto          53
      44: astore        6
      46: aload         5
      48: aload         6
      50: invokevirtual #18                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      53: aload         5
      55: athrow
    Exception table:
       from    to  target type
           7    16    29   Class java/lang/Throwable
          36    41    44   Class java/lang/Throwable

  protected abstract boolean doTryUpdateRepositoryDescription(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, org.projectnessie.versioned.persist.adapter.RepoDescription, org.projectnessie.versioned.persist.adapter.RepoDescription);

  protected static org.projectnessie.versioned.persist.serialize.AdapterTypes$RefType protoTypeForRef(org.projectnessie.versioned.NamedRef);
    Code:
       0: aload_0
       1: instanceof    #116                // class org/projectnessie/versioned/BranchName
       4: ifeq          14
       7: getstatic     #117                // Field org/projectnessie/versioned/persist/serialize/AdapterTypes$RefType.Branch:Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefType;
      10: astore_1
      11: goto          43
      14: aload_0
      15: instanceof    #118                // class org/projectnessie/versioned/TagName
      18: ifeq          28
      21: getstatic     #119                // Field org/projectnessie/versioned/persist/serialize/AdapterTypes$RefType.Tag:Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefType;
      24: astore_1
      25: goto          43
      28: new           #120                // class java/lang/IllegalArgumentException
      31: dup
      32: aload_0
      33: invokevirtual #121                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      36: invokevirtual #122                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      39: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_1
      44: areturn

  protected static org.projectnessie.versioned.NamedRef toNamedRef(org.projectnessie.versioned.persist.serialize.AdapterTypes$RefType, java.lang.String);
    Code:
       0: getstatic     #124                // Field org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$1.$SwitchMap$org$projectnessie$versioned$persist$serialize$AdapterTypes$RefType:[I
       3: aload_0
       4: invokevirtual #125                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$RefType.ordinal:()I
       7: iaload
       8: lookupswitch  { // 2
                     1: 36
                     2: 41
               default: 46
          }
      36: aload_1
      37: invokestatic  #80                 // InterfaceMethod org/projectnessie/versioned/BranchName.of:(Ljava/lang/String;)Lorg/projectnessie/versioned/BranchName;
      40: areturn
      41: aload_1
      42: invokestatic  #126                // InterfaceMethod org/projectnessie/versioned/TagName.of:(Ljava/lang/String;)Lorg/projectnessie/versioned/TagName;
      45: areturn
      46: new           #120                // class java/lang/IllegalArgumentException
      49: dup
      50: aload_0
      51: invokevirtual #127                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$RefType.name:()Ljava/lang/String;
      54: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      57: athrow

  protected org.projectnessie.versioned.Hash hashOnRef(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, org.projectnessie.versioned.NamedRef, java.util.Optional<org.projectnessie.versioned.Hash>) throws org.projectnessie.versioned.ReferenceNotFoundException;
    Code:
       0: getstatic     #128                // Field org/projectnessie/versioned/DetachedRef.INSTANCE:Lorg/projectnessie/versioned/DetachedRef;
       3: aload_2
       4: invokevirtual #129                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       7: ifeq          23
      10: aload_3
      11: invokedynamic #130,  0            // InvokeDynamic #23:get:()Ljava/util/function/Supplier;
      16: invokevirtual #14                 // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      19: checkcast     #131                // class org/projectnessie/versioned/Hash
      22: areturn
      23: aload_0
      24: aload_1
      25: aload_2
      26: aload_3
      27: aload_0
      28: aload_1
      29: aload_2
      30: invokevirtual #132                // Method branchHead:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Lorg/projectnessie/versioned/NamedRef;)Lorg/projectnessie/versioned/Hash;
      33: invokevirtual #133                // Method hashOnRef:(Ljava/lang/AutoCloseable;Lorg/projectnessie/versioned/NamedRef;Ljava/util/Optional;Lorg/projectnessie/versioned/Hash;)Lorg/projectnessie/versioned/Hash;
      36: areturn

  protected <R> R casOpLoop(java.lang.String, org.projectnessie.versioned.NamedRef, org.projectnessie.versioned.persist.nontx.NonTransactionalDatabaseAdapter$CasOpVariant, org.projectnessie.versioned.persist.nontx.NonTransactionalDatabaseAdapter$CasOp<R>, java.util.function.Supplier<java.lang.String>) throws org.projectnessie.versioned.VersionStoreException;
    Code:
       0: getstatic     #2                  // Field org/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext.NON_TRANSACTIONAL_OPERATION_CONTEXT:Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;
       3: astore        6
       5: aload_1
       6: aload         5
       8: invokedynamic #134,  0            // InvokeDynamic #24:apply:(Ljava/util/function/Supplier;)Ljava/util/function/Function;
      13: aload_0
      14: invokedynamic #98,  0             // InvokeDynamic #22:accept:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter;)Ljava/util/function/BiConsumer;
      19: aload_0
      20: getfield      #99                 // Field config:Lorg/projectnessie/versioned/persist/adapter/DatabaseAdapterConfig;
      23: invokestatic  #100                // Method org/projectnessie/versioned/persist/adapter/spi/TryLoopState.newTryLoopState:(Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/BiConsumer;Lorg/projectnessie/versioned/persist/adapter/DatabaseAdapterConfig;)Lorg/projectnessie/versioned/persist/adapter/spi/TryLoopState;
      26: astore        7
      28: new           #135                // class java/util/HashSet
      31: dup
      32: invokespecial #136                // Method java/util/HashSet."<init>":()V
      35: astore        8
      37: new           #135                // class java/util/HashSet
      40: dup
      41: invokespecial #136                // Method java/util/HashSet."<init>":()V
      44: astore        9
      46: aload_0
      47: aload         6
      49: aload_2
      50: invokeinterface #137,  1          // InterfaceMethod org/projectnessie/versioned/NamedRef.getName:()Ljava/lang/String;
      55: invokevirtual #138                // Method fetchNamedReference:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Ljava/lang/String;)Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference;
      58: astore        10
      60: aload         10
      62: ifnull        80
      65: aload         10
      67: invokevirtual #139                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference.getRef:()Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer;
      70: invokevirtual #140                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer.getType:()Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefType;
      73: aload_2
      74: invokestatic  #141                // Method protoTypeForRef:(Lorg/projectnessie/versioned/NamedRef;)Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefType;
      77: if_acmpeq     92
      80: aload_3
      81: getstatic     #50                 // Field org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpVariant.CREATE_REF:Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpVariant;
      84: if_acmpeq     92
      87: aload_2
      88: invokestatic  #142                // Method org/projectnessie/versioned/persist/adapter/spi/DatabaseAdapterUtil.referenceNotFound:(Lorg/projectnessie/versioned/NamedRef;)Lorg/projectnessie/versioned/ReferenceNotFoundException;
      91: athrow
      92: aload         4
      94: aload         6
      96: aload         10
      98: ifnull        109
     101: aload         10
     103: invokevirtual #139                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference.getRef:()Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer;
     106: goto          110
     109: aconst_null
     110: aload         8
     112: dup
     113: invokestatic  #143                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
     116: pop
     117: invokedynamic #144,  0            // InvokeDynamic #25:accept:(Ljava/util/Set;)Ljava/util/function/Consumer;
     122: aload         9
     124: dup
     125: invokestatic  #143                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
     128: pop
     129: invokedynamic #144,  0            // InvokeDynamic #25:accept:(Ljava/util/Set;)Ljava/util/function/Consumer;
     134: invokeinterface #145,  5          // InterfaceMethod org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOp.apply:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpResult;
     139: astore        11
     141: getstatic     #146                // Field org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$1.$SwitchMap$org$projectnessie$versioned$persist$nontx$NonTransactionalDatabaseAdapter$CasOpVariant:[I
     144: aload_3
     145: invokevirtual #147                // Method org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpVariant.ordinal:()I
     148: iaload
     149: tableswitch   { // 1 to 5
                     1: 184
                     2: 213
                     3: 230
                     4: 313
                     5: 396
               default: 489
          }
     184: aload         11
     186: getfield      #148                // Field org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpResult.result:Ljava/lang/Object;
     189: checkcast     #53                 // class org/projectnessie/versioned/ReferenceCreatedResult
     192: astore        13
     194: aload_0
     195: aload         6
     197: aload_2
     198: aload         13
     200: invokeinterface #149,  1          // InterfaceMethod org/projectnessie/versioned/ReferenceCreatedResult.getHash:()Lorg/projectnessie/versioned/Hash;
     205: invokevirtual #81                 // Method createNamedReference:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Lorg/projectnessie/versioned/NamedRef;Lorg/projectnessie/versioned/Hash;)Z
     208: istore        12
     210: goto          516
     213: aload_0
     214: aload         6
     216: aload_2
     217: aload         10
     219: invokevirtual #139                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference.getRef:()Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer;
     222: invokevirtual #150                // Method deleteNamedReference:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Lorg/projectnessie/versioned/NamedRef;Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer;)Z
     225: istore        12
     227: goto          516
     230: aload         11
     232: getfield      #148                // Field org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpResult.result:Ljava/lang/Object;
     235: checkcast     #64                 // class org/projectnessie/versioned/ReferenceAssignedResult
     238: astore        14
     240: aload         10
     242: invokevirtual #139                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference.getRef:()Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer;
     245: invokevirtual #151                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer.getHash:()Lorg/projectnessie/nessie/relocated/protobuf/ByteString;
     248: aload         14
     250: invokeinterface #152,  1          // InterfaceMethod org/projectnessie/versioned/ReferenceAssignedResult.getCurrentHash:()Lorg/projectnessie/versioned/Hash;
     255: invokevirtual #69                 // Method org/projectnessie/versioned/Hash.asBytes:()Lorg/projectnessie/nessie/relocated/protobuf/ByteString;
     258: invokevirtual #153                // Method org/projectnessie/nessie/relocated/protobuf/ByteString.equals:(Ljava/lang/Object;)Z
     261: ifeq          289
     264: aload         7
     266: aload         11
     268: getfield      #148                // Field org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpResult.result:Ljava/lang/Object;
     271: invokevirtual #105                // Method org/projectnessie/versioned/persist/adapter/spi/TryLoopState.success:(Ljava/lang/Object;)Ljava/lang/Object;
     274: astore        15
     276: aload         7
     278: ifnull        286
     281: aload         7
     283: invokevirtual #103                // Method org/projectnessie/versioned/persist/adapter/spi/TryLoopState.close:()V
     286: aload         15
     288: areturn
     289: aload_0
     290: aload         6
     292: aload_2
     293: aload         10
     295: invokevirtual #139                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference.getRef:()Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer;
     298: aload         14
     300: invokeinterface #152,  1          // InterfaceMethod org/projectnessie/versioned/ReferenceAssignedResult.getCurrentHash:()Lorg/projectnessie/versioned/Hash;
     305: invokevirtual #154                // Method updateNamedReference:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Lorg/projectnessie/versioned/NamedRef;Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer;Lorg/projectnessie/versioned/Hash;)Z
     308: istore        12
     310: goto          516
     313: aload         11
     315: getfield      #148                // Field org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpResult.result:Ljava/lang/Object;
     318: checkcast     #48                 // class org/projectnessie/versioned/CommitResult
     321: astore        15
     323: aload         10
     325: invokevirtual #139                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference.getRef:()Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer;
     328: invokevirtual #151                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer.getHash:()Lorg/projectnessie/nessie/relocated/protobuf/ByteString;
     331: aload         15
     333: invokeinterface #155,  1          // InterfaceMethod org/projectnessie/versioned/CommitResult.getCommitHash:()Lorg/projectnessie/versioned/Hash;
     338: invokevirtual #69                 // Method org/projectnessie/versioned/Hash.asBytes:()Lorg/projectnessie/nessie/relocated/protobuf/ByteString;
     341: invokevirtual #153                // Method org/projectnessie/nessie/relocated/protobuf/ByteString.equals:(Ljava/lang/Object;)Z
     344: ifeq          372
     347: aload         7
     349: aload         11
     351: getfield      #148                // Field org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpResult.result:Ljava/lang/Object;
     354: invokevirtual #105                // Method org/projectnessie/versioned/persist/adapter/spi/TryLoopState.success:(Ljava/lang/Object;)Ljava/lang/Object;
     357: astore        16
     359: aload         7
     361: ifnull        369
     364: aload         7
     366: invokevirtual #103                // Method org/projectnessie/versioned/persist/adapter/spi/TryLoopState.close:()V
     369: aload         16
     371: areturn
     372: aload_0
     373: aload         6
     375: aload_2
     376: aload         10
     378: invokevirtual #139                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference.getRef:()Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer;
     381: aload         15
     383: invokeinterface #155,  1          // InterfaceMethod org/projectnessie/versioned/CommitResult.getCommitHash:()Lorg/projectnessie/versioned/Hash;
     388: invokevirtual #154                // Method updateNamedReference:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Lorg/projectnessie/versioned/NamedRef;Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer;Lorg/projectnessie/versioned/Hash;)Z
     391: istore        12
     393: goto          516
     396: aload         11
     398: getfield      #148                // Field org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpResult.result:Ljava/lang/Object;
     401: checkcast     #33                 // class org/projectnessie/versioned/MergeResult
     404: astore        16
     406: aload         16
     408: invokeinterface #156,  1          // InterfaceMethod org/projectnessie/versioned/MergeResult.getResultantTargetHash:()Lorg/projectnessie/versioned/Hash;
     413: invokestatic  #143                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
     416: checkcast     #131                // class org/projectnessie/versioned/Hash
     419: astore        17
     421: aload         10
     423: invokevirtual #139                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference.getRef:()Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer;
     426: invokevirtual #151                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer.getHash:()Lorg/projectnessie/nessie/relocated/protobuf/ByteString;
     429: aload         17
     431: invokevirtual #69                 // Method org/projectnessie/versioned/Hash.asBytes:()Lorg/projectnessie/nessie/relocated/protobuf/ByteString;
     434: invokevirtual #153                // Method org/projectnessie/nessie/relocated/protobuf/ByteString.equals:(Ljava/lang/Object;)Z
     437: ifeq          465
     440: aload         7
     442: aload         11
     444: getfield      #148                // Field org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpResult.result:Ljava/lang/Object;
     447: invokevirtual #105                // Method org/projectnessie/versioned/persist/adapter/spi/TryLoopState.success:(Ljava/lang/Object;)Ljava/lang/Object;
     450: astore        18
     452: aload         7
     454: ifnull        462
     457: aload         7
     459: invokevirtual #103                // Method org/projectnessie/versioned/persist/adapter/spi/TryLoopState.close:()V
     462: aload         18
     464: areturn
     465: aload_0
     466: aload         6
     468: aload_2
     469: aload         10
     471: invokevirtual #139                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference.getRef:()Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer;
     474: aload         16
     476: invokeinterface #156,  1          // InterfaceMethod org/projectnessie/versioned/MergeResult.getResultantTargetHash:()Lorg/projectnessie/versioned/Hash;
     481: invokevirtual #154                // Method updateNamedReference:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Lorg/projectnessie/versioned/NamedRef;Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer;Lorg/projectnessie/versioned/Hash;)Z
     484: istore        12
     486: goto          516
     489: new           #157                // class java/lang/UnsupportedOperationException
     492: dup
     493: new           #158                // class java/lang/StringBuilder
     496: dup
     497: invokespecial #159                // Method java/lang/StringBuilder."<init>":()V
     500: ldc           #160                // String Unknown opVariant
     502: invokevirtual #161                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     505: aload_3
     506: invokevirtual #162                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     509: invokevirtual #163                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     512: invokespecial #164                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
     515: athrow
     516: iload         12
     518: ifne          553
     521: aload_3
     522: getstatic     #45                 // Field org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpVariant.COMMIT:Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpVariant;
     525: if_acmpeq     535
     528: aload_3
     529: getstatic     #29                 // Field org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpVariant.MERGE:Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpVariant;
     532: if_acmpne     545
     535: aload_0
     536: aload         6
     538: aload         8
     540: aload         9
     542: invokevirtual #165                // Method cleanUpCommitCas:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Ljava/util/Set;Ljava/util/Set;)V
     545: aload         7
     547: invokevirtual #106                // Method org/projectnessie/versioned/persist/adapter/spi/TryLoopState.retry:()V
     550: goto          28
     553: aload_0
     554: aload         11
     556: getfield      #166                // Field org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpResult.adapterEventBuilder:Ljava/util/function/Supplier;
     559: invokevirtual #79                 // Method repositoryEvent:(Ljava/util/function/Supplier;)V
     562: aload         7
     564: aload         11
     566: getfield      #148                // Field org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpResult.result:Ljava/lang/Object;
     569: invokevirtual #105                // Method org/projectnessie/versioned/persist/adapter/spi/TryLoopState.success:(Ljava/lang/Object;)Ljava/lang/Object;
     572: astore        13
     574: aload         7
     576: ifnull        584
     579: aload         7
     581: invokevirtual #103                // Method org/projectnessie/versioned/persist/adapter/spi/TryLoopState.close:()V
     584: aload         13
     586: areturn
     587: astore        8
     589: aload         7
     591: ifnull        611
     594: aload         7
     596: invokevirtual #103                // Method org/projectnessie/versioned/persist/adapter/spi/TryLoopState.close:()V
     599: goto          611
     602: astore        9
     604: aload         8
     606: aload         9
     608: invokevirtual #18                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     611: aload         8
     613: athrow
    Exception table:
       from    to  target type
          28   276   587   Class java/lang/Throwable
         289   359   587   Class java/lang/Throwable
         372   452   587   Class java/lang/Throwable
         465   574   587   Class java/lang/Throwable
         594   599   602   Class java/lang/Throwable

  protected static org.projectnessie.versioned.ReferenceInfo<org.projectnessie.nessie.relocated.protobuf.ByteString> namedReferenceToReferenceInfo(org.projectnessie.versioned.persist.serialize.AdapterTypes$NamedReference);
    Code:
       0: aload_0
       1: invokevirtual #139                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference.getRef:()Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer;
       4: invokevirtual #151                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer.getHash:()Lorg/projectnessie/nessie/relocated/protobuf/ByteString;
       7: invokestatic  #167                // Method org/projectnessie/versioned/Hash.of:(Lorg/projectnessie/nessie/relocated/protobuf/ByteString;)Lorg/projectnessie/versioned/Hash;
      10: aload_0
      11: invokevirtual #139                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference.getRef:()Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer;
      14: invokevirtual #140                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer.getType:()Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefType;
      17: aload_0
      18: invokevirtual #168                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference.getName:()Ljava/lang/String;
      21: invokestatic  #169                // Method toNamedRef:(Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefType;Ljava/lang/String;)Lorg/projectnessie/versioned/NamedRef;
      24: invokestatic  #170                // InterfaceMethod org/projectnessie/versioned/ReferenceInfo.of:(Lorg/projectnessie/versioned/Hash;Lorg/projectnessie/versioned/NamedRef;)Lorg/projectnessie/versioned/ReferenceInfo;
      27: areturn

  protected final org.projectnessie.versioned.persist.serialize.AdapterTypes$NamedReference fetchNamedReference(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #171                // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
       6: invokevirtual #172                // Method fetchNamedReference:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Ljava/util/List;)Ljava/util/List;
       9: astore_3
      10: aload_3
      11: invokeinterface #173,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifeq          23
      19: aconst_null
      20: goto          33
      23: aload_3
      24: iconst_0
      25: invokeinterface #174,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      30: checkcast     #175                // class org/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference
      33: areturn

  protected final java.util.List<org.projectnessie.versioned.persist.serialize.AdapterTypes$NamedReference> fetchNamedReference(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, java.util.List<java.lang.String>);
    Code:
       0: ldc           #176                // String fetchNamedReference
       2: invokestatic  #111                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.trace:(Ljava/lang/String;)Lorg/projectnessie/versioned/persist/adapter/spi/Traced;
       5: ldc           #178                // String ref
       7: aload_2
       8: invokeinterface #179,  1          // InterfaceMethod java/util/List.size:()I
      13: invokestatic  #180                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      16: invokevirtual #181                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.tag:(Ljava/lang/String;Ljava/lang/Number;)Lorg/projectnessie/versioned/persist/adapter/spi/Traced;
      19: astore_3
      20: aload_0
      21: aload_1
      22: aload_2
      23: invokevirtual #182                // Method doFetchNamedReference:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Ljava/util/List;)Ljava/util/List;
      26: astore        4
      28: aload         4
      30: invokeinterface #173,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      35: ifeq          54
      38: aload_0
      39: aload_1
      40: invokespecial #183                // Method maybeMigrateLegacyNamedReferences:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;)Z
      43: ifeq          54
      46: aload_0
      47: aload_1
      48: aload_2
      49: invokevirtual #182                // Method doFetchNamedReference:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Ljava/util/List;)Ljava/util/List;
      52: astore        4
      54: aload         4
      56: astore        5
      58: aload_3
      59: ifnull        66
      62: aload_3
      63: invokevirtual #113                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.close:()V
      66: aload         5
      68: areturn
      69: astore        4
      71: aload_3
      72: ifnull        91
      75: aload_3
      76: invokevirtual #113                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.close:()V
      79: goto          91
      82: astore        5
      84: aload         4
      86: aload         5
      88: invokevirtual #18                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      91: aload         4
      93: athrow
    Exception table:
       from    to  target type
          20    58    69   Class java/lang/Throwable
          75    79    82   Class java/lang/Throwable

  private boolean maybeMigrateLegacyNamedReferences(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #66                 // Method fetchGlobalPointer:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;)Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer;
       5: astore_2
       6: aload_2
       7: ifnull        17
      10: aload_2
      11: invokevirtual #184                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer.getNamedReferencesCount:()I
      14: ifne          19
      17: iconst_0
      18: ireturn
      19: aload_2
      20: invokevirtual #184                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer.getNamedReferencesCount:()I
      23: invokestatic  #185                // Method com/google/common/collect/Maps.newHashMapWithExpectedSize:(I)Ljava/util/HashMap;
      26: astore_3
      27: aload_2
      28: invokevirtual #186                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer.getNamedReferencesList:()Ljava/util/List;
      31: aload_3
      32: invokedynamic #187,  0            // InvokeDynamic #26:accept:(Ljava/util/Map;)Ljava/util/function/Consumer;
      37: invokeinterface #188,  2          // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      42: aload_0
      43: aload_1
      44: invokevirtual #189                // Method fetchReferenceNames:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;)Ljava/util/Spliterator;
      47: iconst_0
      48: invokestatic  #190                // Method java/util/stream/StreamSupport.stream:(Ljava/util/Spliterator;Z)Ljava/util/stream/Stream;
      51: invokestatic  #191                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      54: invokeinterface #192,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      59: checkcast     #193                // class java/util/List
      62: astore        4
      64: new           #194                // class java/util/HashMap
      67: dup
      68: aload_3
      69: invokespecial #195                // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      72: astore        5
      74: aload         4
      76: invokeinterface #196,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      81: astore        6
      83: aload         6
      85: invokeinterface #197,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      90: ifeq          130
      93: aload         6
      95: invokeinterface #198,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     100: checkcast     #199                // class org/projectnessie/versioned/persist/serialize/AdapterTypes$ReferenceNames
     103: astore        7
     105: aload         7
     107: invokevirtual #200                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$ReferenceNames.getRefNamesList:()Lorg/projectnessie/nessie/relocated/protobuf/ProtocolStringList;
     110: aload         5
     112: dup
     113: invokestatic  #143                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
     116: pop
     117: invokedynamic #201,  0            // InvokeDynamic #27:accept:(Ljava/util/Map;)Ljava/util/function/Consumer;
     122: invokeinterface #202,  2          // InterfaceMethod org/projectnessie/nessie/relocated/protobuf/ProtocolStringList.forEach:(Ljava/util/function/Consumer;)V
     127: goto          83
     130: aload         5
     132: invokeinterface #203,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
     137: ifne          356
     140: aload         5
     142: invokeinterface #204,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     147: invokeinterface #205,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     152: astore        6
     154: iconst_0
     155: istore        7
     157: new           #206                // class java/util/ArrayList
     160: dup
     161: invokespecial #207                // Method java/util/ArrayList."<init>":()V
     164: astore        8
     166: aload_0
     167: aload         4
     169: invokedynamic #208,  0            // InvokeDynamic #28:apply:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter;Ljava/util/List;)Ljava/util/function/IntFunction;
     174: astore        9
     176: aload         9
     178: iload         7
     180: invokeinterface #209,  2          // InterfaceMethod java/util/function/IntFunction.apply:(I)Ljava/lang/Object;
     185: checkcast     #210                // class java/lang/Integer
     188: invokevirtual #211                // Method java/lang/Integer.intValue:()I
     191: istore        10
     193: aload         6
     195: invokeinterface #197,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     200: ifeq          325
     203: aload         6
     205: invokeinterface #198,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     210: checkcast     #175                // class org/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference
     213: astore        11
     215: aload         11
     217: invokevirtual #168                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference.getName:()Ljava/lang/String;
     220: invokestatic  #212                // Method org/projectnessie/nessie/relocated/protobuf/ByteString.copyFromUtf8:(Ljava/lang/String;)Lorg/projectnessie/nessie/relocated/protobuf/ByteString;
     223: invokevirtual #213                // Method org/projectnessie/nessie/relocated/protobuf/ByteString.size:()I
     226: iconst_3
     227: iadd
     228: istore        12
     230: iload         10
     232: iload         12
     234: if_icmpge     291
     237: aload         8
     239: invokeinterface #173,  1          // InterfaceMethod java/util/List.isEmpty:()Z
     244: ifne          268
     247: aload_0
     248: aload_1
     249: aload         8
     251: invokeinterface #214,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
     256: iload         7
     258: invokevirtual #215                // Method doAddToNamedReferences:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Ljava/util/stream/Stream;I)V
     261: aload         8
     263: invokeinterface #216,  1          // InterfaceMethod java/util/List.clear:()V
     268: iinc          7, 1
     271: aload         9
     273: iload         7
     275: invokeinterface #209,  2          // InterfaceMethod java/util/function/IntFunction.apply:(I)Ljava/lang/Object;
     280: checkcast     #210                // class java/lang/Integer
     283: invokevirtual #211                // Method java/lang/Integer.intValue:()I
     286: istore        10
     288: goto          230
     291: aload         8
     293: aload         11
     295: invokevirtual #139                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference.getRef:()Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer;
     298: invokevirtual #140                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer.getType:()Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefType;
     301: aload         11
     303: invokevirtual #168                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference.getName:()Ljava/lang/String;
     306: invokestatic  #169                // Method toNamedRef:(Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefType;Ljava/lang/String;)Lorg/projectnessie/versioned/NamedRef;
     309: invokeinterface #217,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     314: pop
     315: iload         10
     317: iload         12
     319: isub
     320: istore        10
     322: goto          193
     325: aload         8
     327: invokeinterface #173,  1          // InterfaceMethod java/util/List.isEmpty:()Z
     332: ifne          356
     335: aload_0
     336: aload_1
     337: aload         8
     339: invokeinterface #214,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
     344: iload         7
     346: invokevirtual #215                // Method doAddToNamedReferences:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Ljava/util/stream/Stream;I)V
     349: aload         8
     351: invokeinterface #216,  1          // InterfaceMethod java/util/List.clear:()V
     356: aload_2
     357: invokevirtual #186                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer.getNamedReferencesList:()Ljava/util/List;
     360: invokestatic  #218                // Method java/util/concurrent/ThreadLocalRandom.current:()Ljava/util/concurrent/ThreadLocalRandom;
     363: aload_2
     364: invokevirtual #184                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer.getNamedReferencesCount:()I
     367: invokevirtual #219                // Method java/util/concurrent/ThreadLocalRandom.nextInt:(I)I
     370: invokeinterface #174,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     375: checkcast     #175                // class org/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference
     378: astore        6
     380: aload_0
     381: aload_1
     382: aload         6
     384: invokevirtual #220                // Method doCreateNamedReference:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference;)Z
     387: pop
     388: aload_2
     389: invokevirtual #221                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer.toBuilder:()Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer$Builder;
     392: invokevirtual #222                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer$Builder.clearNamedReferences:()Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer$Builder;
     395: invokestatic  #68                 // Method org/projectnessie/versioned/persist/adapter/spi/DatabaseAdapterUtil.randomHash:()Lorg/projectnessie/versioned/Hash;
     398: invokevirtual #69                 // Method org/projectnessie/versioned/Hash.asBytes:()Lorg/projectnessie/nessie/relocated/protobuf/ByteString;
     401: invokevirtual #70                 // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer$Builder.setGlobalId:(Lorg/projectnessie/nessie/relocated/protobuf/ByteString;)Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer$Builder;
     404: astore        7
     406: aload_2
     407: invokevirtual #186                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer.getNamedReferencesList:()Ljava/util/List;
     410: invokeinterface #214,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
     415: aload         6
     417: invokedynamic #223,  0            // InvokeDynamic #29:test:(Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference;)Ljava/util/function/Predicate;
     422: invokeinterface #92,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
     427: aload         7
     429: dup
     430: invokestatic  #143                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
     433: pop
     434: invokedynamic #224,  0            // InvokeDynamic #30:accept:(Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer$Builder;)Ljava/util/function/Consumer;
     439: invokeinterface #225,  2          // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
     444: aload         7
     446: invokevirtual #76                 // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer$Builder.build:()Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer;
     449: astore        8
     451: aload_0
     452: aload_1
     453: aload_2
     454: aload         8
     456: invokevirtual #226                // Method globalPointerCas:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer;Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer;)Z
     459: ifeq          468
     462: aload         8
     464: astore_2
     465: goto          474
     468: aload_0
     469: aload_1
     470: invokevirtual #66                 // Method fetchGlobalPointer:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;)Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer;
     473: astore_2
     474: aload_2
     475: ifnull        491
     478: aload_2
     479: invokevirtual #184                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer.getNamedReferencesCount:()I
     482: ifne          488
     485: goto          491
     488: goto          356
     491: iconst_1
     492: ireturn

  protected abstract java.util.List<org.projectnessie.versioned.persist.serialize.AdapterTypes$NamedReference> doFetchNamedReference(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, java.util.List<java.lang.String>);

  protected final java.util.stream.Stream<org.projectnessie.versioned.persist.serialize.AdapterTypes$NamedReference> fetchNamedReferences(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #183                // Method maybeMigrateLegacyNamedReferences:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;)Z
       5: pop
       6: aload_0
       7: aload_1
       8: invokevirtual #189                // Method fetchReferenceNames:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;)Ljava/util/Spliterator;
      11: astore_2
      12: aload_2
      13: iconst_0
      14: invokestatic  #190                // Method java/util/stream/StreamSupport.stream:(Ljava/util/Spliterator;Z)Ljava/util/stream/Stream;
      17: invokedynamic #227,  0            // InvokeDynamic #31:apply:()Ljava/util/function/Function;
      22: invokeinterface #25,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      27: invokedynamic #228,  0            // InvokeDynamic #32:apply:()Ljava/util/function/Function;
      32: invokeinterface #89,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      37: invokeinterface #229,  1          // InterfaceMethod java/util/stream/Stream.distinct:()Ljava/util/stream/Stream;
      42: invokeinterface #230,  1          // InterfaceMethod java/util/stream/Stream.spliterator:()Ljava/util/Spliterator;
      47: astore_3
      48: new           #231                // class org/projectnessie/versioned/persist/adapter/spi/BatchSpliterator
      51: dup
      52: aload_0
      53: getfield      #99                 // Field config:Lorg/projectnessie/versioned/persist/adapter/DatabaseAdapterConfig;
      56: checkcast     #232                // class org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapterConfig
      59: invokeinterface #233,  1          // InterfaceMethod org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapterConfig.getReferenceNamesBatchSize:()I
      64: aload_3
      65: aload_0
      66: aload_1
      67: invokedynamic #234,  0            // InvokeDynamic #33:apply:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter;Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;)Ljava/util/function/Function;
      72: sipush        1281
      75: invokespecial #236                // Method org/projectnessie/versioned/persist/adapter/spi/BatchSpliterator."<init>":(ILjava/util/Spliterator;Ljava/util/function/Function;I)V
      78: astore        4
      80: aload         4
      82: iconst_0
      83: invokestatic  #190                // Method java/util/stream/StreamSupport.stream:(Ljava/util/Spliterator;Z)Ljava/util/stream/Stream;
      86: areturn

  protected final boolean createNamedReference(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, org.projectnessie.versioned.NamedRef, org.projectnessie.versioned.Hash);
    Code:
       0: invokestatic  #237                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference.newBuilder:()Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference$Builder;
       3: aload_2
       4: invokeinterface #137,  1          // InterfaceMethod org/projectnessie/versioned/NamedRef.getName:()Ljava/lang/String;
       9: invokevirtual #238                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference$Builder.setName:(Ljava/lang/String;)Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference$Builder;
      12: invokestatic  #239                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer.newBuilder:()Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer$Builder;
      15: aload_2
      16: invokestatic  #141                // Method protoTypeForRef:(Lorg/projectnessie/versioned/NamedRef;)Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefType;
      19: invokevirtual #240                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer$Builder.setType:(Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefType;)Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer$Builder;
      22: aload_3
      23: invokevirtual #69                 // Method org/projectnessie/versioned/Hash.asBytes:()Lorg/projectnessie/nessie/relocated/protobuf/ByteString;
      26: invokevirtual #241                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer$Builder.setHash:(Lorg/projectnessie/nessie/relocated/protobuf/ByteString;)Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer$Builder;
      29: invokevirtual #242                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference$Builder.setRef:(Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer$Builder;)Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference$Builder;
      32: invokevirtual #243                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference$Builder.build:()Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference;
      35: astore        4
      37: ldc           #244                // String createNamedReference
      39: invokestatic  #111                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.trace:(Ljava/lang/String;)Lorg/projectnessie/versioned/persist/adapter/spi/Traced;
      42: ldc           #178                // String ref
      44: aload_2
      45: invokeinterface #137,  1          // InterfaceMethod org/projectnessie/versioned/NamedRef.getName:()Ljava/lang/String;
      50: invokevirtual #245                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.tag:(Ljava/lang/String;Ljava/lang/String;)Lorg/projectnessie/versioned/persist/adapter/spi/Traced;
      53: astore        5
      55: aload_0
      56: aload_1
      57: invokevirtual #246                // Method findAvailableNamedReferencesSegment:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;)I
      60: istore        6
      62: aload_0
      63: aload_1
      64: aload_2
      65: invokestatic  #10                 // InterfaceMethod java/util/stream/Stream.of:(Ljava/lang/Object;)Ljava/util/stream/Stream;
      68: iload         6
      70: invokevirtual #215                // Method doAddToNamedReferences:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Ljava/util/stream/Stream;I)V
      73: aload_0
      74: aload_1
      75: aload         4
      77: invokevirtual #220                // Method doCreateNamedReference:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference;)Z
      80: istore        7
      82: aload         5
      84: ifnull        92
      87: aload         5
      89: invokevirtual #113                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.close:()V
      92: iload         7
      94: ireturn
      95: astore        6
      97: aload         5
      99: ifnull        119
     102: aload         5
     104: invokevirtual #113                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.close:()V
     107: goto          119
     110: astore        7
     112: aload         6
     114: aload         7
     116: invokevirtual #18                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     119: aload         6
     121: athrow
    Exception table:
       from    to  target type
          55    82    95   Class java/lang/Throwable
         102   107   110   Class java/lang/Throwable

  protected int findAvailableNamedReferencesSegment(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: aload_1
       4: invokevirtual #189                // Method fetchReferenceNames:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;)Ljava/util/Spliterator;
       7: invokestatic  #247                // Method java/util/Spliterators.iterator:(Ljava/util/Spliterator;)Ljava/util/Iterator;
      10: astore_3
      11: aload_3
      12: invokeinterface #197,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          67
      20: aload_3
      21: invokeinterface #198,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: checkcast     #199                // class org/projectnessie/versioned/persist/serialize/AdapterTypes$ReferenceNames
      29: astore        4
      31: aload         4
      33: invokevirtual #248                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$ReferenceNames.getSerializedSize:()I
      36: istore        5
      38: iload         5
      40: aload_0
      41: aload_0
      42: getfield      #99                 // Field config:Lorg/projectnessie/versioned/persist/adapter/DatabaseAdapterConfig;
      45: checkcast     #232                // class org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapterConfig
      48: invokeinterface #249,  1          // InterfaceMethod org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapterConfig.getReferencesSegmentSize:()I
      53: invokevirtual #250                // Method maxEntitySize:(I)I
      56: if_icmpge     61
      59: iload_2
      60: ireturn
      61: iinc          2, 1
      64: goto          11
      67: iload_2
      68: ireturn

  protected abstract void doAddToNamedReferences(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, java.util.stream.Stream<org.projectnessie.versioned.NamedRef>, int);

  protected abstract void doRemoveFromNamedReferences(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, org.projectnessie.versioned.NamedRef, int);

  protected abstract boolean doCreateNamedReference(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, org.projectnessie.versioned.persist.serialize.AdapterTypes$NamedReference);

  protected final boolean deleteNamedReference(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, org.projectnessie.versioned.NamedRef, org.projectnessie.versioned.persist.serialize.AdapterTypes$RefPointer);
    Code:
       0: ldc           #251                // String deleteNamedReference
       2: invokestatic  #111                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.trace:(Ljava/lang/String;)Lorg/projectnessie/versioned/persist/adapter/spi/Traced;
       5: ldc           #178                // String ref
       7: aload_2
       8: invokeinterface #137,  1          // InterfaceMethod org/projectnessie/versioned/NamedRef.getName:()Ljava/lang/String;
      13: invokevirtual #245                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.tag:(Ljava/lang/String;Ljava/lang/String;)Lorg/projectnessie/versioned/persist/adapter/spi/Traced;
      16: astore        4
      18: aload_0
      19: aload_1
      20: aload_2
      21: aload_3
      22: invokevirtual #252                // Method doDeleteNamedReference:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Lorg/projectnessie/versioned/NamedRef;Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer;)Z
      25: ifne          44
      28: iconst_0
      29: istore        5
      31: aload         4
      33: ifnull        41
      36: aload         4
      38: invokevirtual #113                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.close:()V
      41: iload         5
      43: ireturn
      44: iconst_0
      45: istore        5
      47: aload_0
      48: aload_1
      49: invokevirtual #189                // Method fetchReferenceNames:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;)Ljava/util/Spliterator;
      52: invokestatic  #247                // Method java/util/Spliterators.iterator:(Ljava/util/Spliterator;)Ljava/util/Iterator;
      55: astore        6
      57: aload         6
      59: invokeinterface #197,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      64: ifeq          112
      67: aload         6
      69: invokeinterface #198,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      74: checkcast     #199                // class org/projectnessie/versioned/persist/serialize/AdapterTypes$ReferenceNames
      77: astore        7
      79: aload         7
      81: invokevirtual #200                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$ReferenceNames.getRefNamesList:()Lorg/projectnessie/nessie/relocated/protobuf/ProtocolStringList;
      84: aload_2
      85: invokeinterface #137,  1          // InterfaceMethod org/projectnessie/versioned/NamedRef.getName:()Ljava/lang/String;
      90: invokeinterface #253,  2          // InterfaceMethod org/projectnessie/nessie/relocated/protobuf/ProtocolStringList.contains:(Ljava/lang/Object;)Z
      95: ifeq          106
      98: aload_0
      99: aload_1
     100: aload_2
     101: iload         5
     103: invokevirtual #254                // Method doRemoveFromNamedReferences:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Lorg/projectnessie/versioned/NamedRef;I)V
     106: iinc          5, 1
     109: goto          57
     112: iconst_1
     113: istore        6
     115: aload         4
     117: ifnull        125
     120: aload         4
     122: invokevirtual #113                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.close:()V
     125: iload         6
     127: ireturn
     128: astore        5
     130: aload         4
     132: ifnull        152
     135: aload         4
     137: invokevirtual #113                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.close:()V
     140: goto          152
     143: astore        6
     145: aload         5
     147: aload         6
     149: invokevirtual #18                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     152: aload         5
     154: athrow
    Exception table:
       from    to  target type
          18    31   128   Class java/lang/Throwable
          44   115   128   Class java/lang/Throwable
         135   140   143   Class java/lang/Throwable

  protected abstract boolean doDeleteNamedReference(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, org.projectnessie.versioned.NamedRef, org.projectnessie.versioned.persist.serialize.AdapterTypes$RefPointer);

  protected final boolean updateNamedReference(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, org.projectnessie.versioned.NamedRef, org.projectnessie.versioned.persist.serialize.AdapterTypes$RefPointer, org.projectnessie.versioned.Hash);
    Code:
       0: ldc           #255                // String updateNamedReference
       2: invokestatic  #111                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.trace:(Ljava/lang/String;)Lorg/projectnessie/versioned/persist/adapter/spi/Traced;
       5: ldc           #178                // String ref
       7: aload_2
       8: invokeinterface #137,  1          // InterfaceMethod org/projectnessie/versioned/NamedRef.getName:()Ljava/lang/String;
      13: invokevirtual #245                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.tag:(Ljava/lang/String;Ljava/lang/String;)Lorg/projectnessie/versioned/persist/adapter/spi/Traced;
      16: astore        5
      18: aload_0
      19: aload_1
      20: aload_2
      21: aload_3
      22: aload         4
      24: invokevirtual #256                // Method doUpdateNamedReference:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Lorg/projectnessie/versioned/NamedRef;Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer;Lorg/projectnessie/versioned/Hash;)Z
      27: istore        6
      29: aload         5
      31: ifnull        39
      34: aload         5
      36: invokevirtual #113                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.close:()V
      39: iload         6
      41: ireturn
      42: astore        6
      44: aload         5
      46: ifnull        66
      49: aload         5
      51: invokevirtual #113                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.close:()V
      54: goto          66
      57: astore        7
      59: aload         6
      61: aload         7
      63: invokevirtual #18                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      66: aload         6
      68: athrow
    Exception table:
       from    to  target type
          18    29    42   Class java/lang/Throwable
          49    54    57   Class java/lang/Throwable

  protected abstract boolean doUpdateNamedReference(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, org.projectnessie.versioned.NamedRef, org.projectnessie.versioned.persist.serialize.AdapterTypes$RefPointer, org.projectnessie.versioned.Hash);

  protected abstract void unsafeWriteGlobalPointer(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, org.projectnessie.versioned.persist.serialize.AdapterTypes$GlobalStatePointer);

  protected final boolean globalPointerCas(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, org.projectnessie.versioned.persist.serialize.AdapterTypes$GlobalStatePointer, org.projectnessie.versioned.persist.serialize.AdapterTypes$GlobalStatePointer);
    Code:
       0: ldc_w         #257                // String globalPointerCas
       3: invokestatic  #111                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.trace:(Ljava/lang/String;)Lorg/projectnessie/versioned/persist/adapter/spi/Traced;
       6: astore        4
       8: aload_0
       9: aload_1
      10: aload_2
      11: aload_3
      12: invokevirtual #258                // Method doGlobalPointerCas:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer;Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer;)Z
      15: istore        5
      17: aload         4
      19: ifnull        27
      22: aload         4
      24: invokevirtual #113                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.close:()V
      27: iload         5
      29: ireturn
      30: astore        5
      32: aload         4
      34: ifnull        54
      37: aload         4
      39: invokevirtual #113                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.close:()V
      42: goto          54
      45: astore        6
      47: aload         5
      49: aload         6
      51: invokevirtual #18                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      54: aload         5
      56: athrow
    Exception table:
       from    to  target type
           8    17    30   Class java/lang/Throwable
          37    42    45   Class java/lang/Throwable

  protected abstract boolean doGlobalPointerCas(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, org.projectnessie.versioned.persist.serialize.AdapterTypes$GlobalStatePointer, org.projectnessie.versioned.persist.serialize.AdapterTypes$GlobalStatePointer);

  protected final void cleanUpCommitCas(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, java.util.Set<org.projectnessie.versioned.Hash>, java.util.Set<org.projectnessie.versioned.Hash>);
    Code:
       0: ldc_w         #259                // String cleanUpCommitCas
       3: invokestatic  #111                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.trace:(Ljava/lang/String;)Lorg/projectnessie/versioned/persist/adapter/spi/Traced;
       6: ldc_w         #260                // String commit-count
       9: aload_2
      10: invokeinterface #261,  1          // InterfaceMethod java/util/Set.size:()I
      15: invokestatic  #180                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      18: invokevirtual #181                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.tag:(Ljava/lang/String;Ljava/lang/Number;)Lorg/projectnessie/versioned/persist/adapter/spi/Traced;
      21: ldc_w         #262                // String key-list-count
      24: aload_3
      25: invokeinterface #261,  1          // InterfaceMethod java/util/Set.size:()I
      30: invokestatic  #180                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      33: invokevirtual #181                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.tag:(Ljava/lang/String;Ljava/lang/Number;)Lorg/projectnessie/versioned/persist/adapter/spi/Traced;
      36: astore        4
      38: aload_0
      39: aload_1
      40: aload_2
      41: aload_3
      42: invokevirtual #263                // Method doCleanUpCommitCas:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Ljava/util/Set;Ljava/util/Set;)V
      45: aload         4
      47: ifnull        85
      50: aload         4
      52: invokevirtual #113                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.close:()V
      55: goto          85
      58: astore        5
      60: aload         4
      62: ifnull        82
      65: aload         4
      67: invokevirtual #113                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.close:()V
      70: goto          82
      73: astore        6
      75: aload         5
      77: aload         6
      79: invokevirtual #18                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      82: aload         5
      84: athrow
      85: return
    Exception table:
       from    to  target type
          38    45    58   Class java/lang/Throwable
          65    70    73   Class java/lang/Throwable

  protected abstract void doCleanUpCommitCas(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, java.util.Set<org.projectnessie.versioned.Hash>, java.util.Set<org.projectnessie.versioned.Hash>);

  protected final java.util.Spliterator<org.projectnessie.versioned.persist.serialize.AdapterTypes$ReferenceNames> fetchReferenceNames(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext);
    Code:
       0: new           #264                // class org/projectnessie/versioned/persist/nontx/ReferenceNamesSpliterator
       3: dup
       4: aload_0
       5: aload_1
       6: invokedynamic #265,  0            // InvokeDynamic #34:apply:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter;Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;)Ljava/util/function/IntFunction;
      11: invokespecial #266                // Method org/projectnessie/versioned/persist/nontx/ReferenceNamesSpliterator."<init>":(Ljava/util/function/IntFunction;)V
      14: areturn

  protected final java.util.List<org.projectnessie.versioned.persist.serialize.AdapterTypes$ReferenceNames> fetchReferenceNames(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, int, int);
    Code:
       0: ldc_w         #267                // String fetchReferenceNames
       3: invokestatic  #111                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.trace:(Ljava/lang/String;)Lorg/projectnessie/versioned/persist/adapter/spi/Traced;
       6: astore        4
       8: aload_0
       9: aload_1
      10: iload_2
      11: iload_3
      12: invokevirtual #268                // Method doFetchReferenceNames:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;II)Ljava/util/List;
      15: astore        5
      17: aload         4
      19: ifnull        27
      22: aload         4
      24: invokevirtual #113                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.close:()V
      27: aload         5
      29: areturn
      30: astore        5
      32: aload         4
      34: ifnull        54
      37: aload         4
      39: invokevirtual #113                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.close:()V
      42: goto          54
      45: astore        6
      47: aload         5
      49: aload         6
      51: invokevirtual #18                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      54: aload         5
      56: athrow
    Exception table:
       from    to  target type
           8    17    30   Class java/lang/Throwable
          37    42    45   Class java/lang/Throwable

  protected abstract java.util.List<org.projectnessie.versioned.persist.serialize.AdapterTypes$ReferenceNames> doFetchReferenceNames(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, int, int);

  protected org.projectnessie.versioned.Hash branchHead(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, org.projectnessie.versioned.NamedRef) throws org.projectnessie.versioned.ReferenceNotFoundException;
    Code:
       0: aload_2
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokeinterface #137,  1          // InterfaceMethod org/projectnessie/versioned/NamedRef.getName:()Ljava/lang/String;
      14: invokevirtual #138                // Method fetchNamedReference:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Ljava/lang/String;)Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference;
      17: astore_3
      18: aload_3
      19: ifnull        36
      22: aload_3
      23: invokevirtual #139                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference.getRef:()Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer;
      26: invokevirtual #140                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer.getType:()Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefType;
      29: aload_2
      30: invokestatic  #141                // Method protoTypeForRef:(Lorg/projectnessie/versioned/NamedRef;)Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefType;
      33: if_acmpeq     46
      36: aload_2
      37: invokeinterface #137,  1          // InterfaceMethod org/projectnessie/versioned/NamedRef.getName:()Ljava/lang/String;
      42: invokestatic  #269                // Method org/projectnessie/versioned/persist/adapter/spi/DatabaseAdapterUtil.referenceNotFound:(Ljava/lang/String;)Lorg/projectnessie/versioned/ReferenceNotFoundException;
      45: athrow
      46: aload_3
      47: invokevirtual #139                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference.getRef:()Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer;
      50: invokevirtual #151                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer.getHash:()Lorg/projectnessie/nessie/relocated/protobuf/ByteString;
      53: invokestatic  #167                // Method org/projectnessie/versioned/Hash.of:(Lorg/projectnessie/nessie/relocated/protobuf/ByteString;)Lorg/projectnessie/versioned/Hash;
      56: areturn

  protected org.projectnessie.versioned.ReferenceInfo<org.projectnessie.nessie.relocated.protobuf.ByteString> referenceHead(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, java.lang.String) throws org.projectnessie.versioned.ReferenceNotFoundException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #138                // Method fetchNamedReference:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Ljava/lang/String;)Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference;
       6: astore_3
       7: aload_3
       8: ifnonnull     16
      11: aload_2
      12: invokestatic  #269                // Method org/projectnessie/versioned/persist/adapter/spi/DatabaseAdapterUtil.referenceNotFound:(Ljava/lang/String;)Lorg/projectnessie/versioned/ReferenceNotFoundException;
      15: athrow
      16: aload_3
      17: invokestatic  #270                // Method namedReferenceToReferenceInfo:(Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference;)Lorg/projectnessie/versioned/ReferenceInfo;
      20: areturn

  private org.projectnessie.versioned.Hash namedRefsDefaultBranchHead(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, org.projectnessie.versioned.GetNamedRefsParams) throws org.projectnessie.versioned.ReferenceNotFoundException;
    Code:
       0: aload_2
       1: invokestatic  #271                // Method namedRefsRequiresBaseReference:(Lorg/projectnessie/versioned/GetNamedRefsParams;)Z
       4: ifeq          32
       7: aload_2
       8: invokeinterface #272,  1          // InterfaceMethod org/projectnessie/versioned/GetNamedRefsParams.getBaseReference:()Lorg/projectnessie/versioned/NamedRef;
      13: ldc_w         #273                // String Base reference name missing.
      16: invokestatic  #7                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: aload_0
      21: aload_1
      22: aload_2
      23: invokeinterface #272,  1          // InterfaceMethod org/projectnessie/versioned/GetNamedRefsParams.getBaseReference:()Lorg/projectnessie/versioned/NamedRef;
      28: invokevirtual #132                // Method branchHead:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Lorg/projectnessie/versioned/NamedRef;)Lorg/projectnessie/versioned/Hash;
      31: areturn
      32: aconst_null
      33: areturn

  protected final org.projectnessie.versioned.persist.serialize.AdapterTypes$GlobalStatePointer fetchGlobalPointer(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext);
    Code:
       0: ldc_w         #274                // String fetchGlobalPointer
       3: invokestatic  #111                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.trace:(Ljava/lang/String;)Lorg/projectnessie/versioned/persist/adapter/spi/Traced;
       6: astore_2
       7: aload_0
       8: aload_1
       9: invokevirtual #275                // Method doFetchGlobalPointer:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;)Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer;
      12: astore_3
      13: aload_2
      14: ifnull        21
      17: aload_2
      18: invokevirtual #113                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.close:()V
      21: aload_3
      22: areturn
      23: astore_3
      24: aload_2
      25: ifnull        43
      28: aload_2
      29: invokevirtual #113                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.close:()V
      32: goto          43
      35: astore        4
      37: aload_3
      38: aload         4
      40: invokevirtual #18                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      43: aload_3
      44: athrow
    Exception table:
       from    to  target type
           7    13    23   Class java/lang/Throwable
          28    32    35   Class java/lang/Throwable

  protected abstract org.projectnessie.versioned.persist.serialize.AdapterTypes$GlobalStatePointer doFetchGlobalPointer(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext);

  protected static org.projectnessie.nessie.relocated.protobuf.ByteString globalLogHead(org.projectnessie.versioned.persist.serialize.AdapterTypes$GlobalStatePointer);
    Code:
       0: aload_0
       1: invokevirtual #276                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer.hasGlobalLogHead:()Z
       4: ifeq          14
       7: aload_0
       8: invokevirtual #277                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer.getGlobalLogHead:()Lorg/projectnessie/nessie/relocated/protobuf/ByteString;
      11: goto          18
      14: aload_0
      15: invokevirtual #278                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer.getGlobalId:()Lorg/projectnessie/nessie/relocated/protobuf/ByteString;
      18: areturn

  protected java.util.Map<org.projectnessie.versioned.persist.adapter.ContentId, org.projectnessie.nessie.relocated.protobuf.ByteString> doFetchGlobalStates(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, java.util.Set<org.projectnessie.versioned.persist.adapter.ContentId>);
    Code:
       0: aload_2
       1: invokeinterface #279,  1          // InterfaceMethod java/util/Set.isEmpty:()Z
       6: ifeq          13
       9: invokestatic  #107                // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      12: areturn
      13: aload_0
      14: aload_1
      15: invokespecial #87                 // Method globalLogFetcher:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;)Ljava/util/stream/Stream;
      18: astore_3
      19: new           #135                // class java/util/HashSet
      22: dup
      23: aload_2
      24: invokespecial #280                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      27: astore        4
      29: aload_3
      30: aload         4
      32: invokedynamic #281,  0            // InvokeDynamic #35:test:(Ljava/util/Set;)Ljava/util/function/Predicate;
      37: invokestatic  #282                // Method org/projectnessie/versioned/persist/adapter/spi/DatabaseAdapterUtil.takeUntilExcludeLast:(Ljava/util/stream/Stream;Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      40: invokedynamic #283,  0            // InvokeDynamic #36:apply:()Ljava/util/function/Function;
      45: invokeinterface #89,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      50: aload         4
      52: invokedynamic #284,  0            // InvokeDynamic #37:test:(Ljava/util/Set;)Ljava/util/function/Predicate;
      57: invokeinterface #92,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      62: invokedynamic #285,  0            // InvokeDynamic #38:apply:()Ljava/util/function/Function;
      67: invokedynamic #286,  0            // InvokeDynamic #39:apply:()Ljava/util/function/Function;
      72: invokestatic  #287                // Method java/util/stream/Collectors.toMap:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
      75: invokeinterface #192,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      80: checkcast     #288                // class java/util/Map
      83: areturn

  private java.util.stream.Stream<org.projectnessie.versioned.persist.serialize.AdapterTypes$GlobalStateLogEntry> globalLogFetcher(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #66                 // Method fetchGlobalPointer:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;)Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer;
       5: astore_2
       6: aload_2
       7: ifnonnull     14
      10: invokestatic  #289                // InterfaceMethod java/util/stream/Stream.empty:()Ljava/util/stream/Stream;
      13: areturn
      14: aload_2
      15: invokevirtual #290                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer.getGlobalParentsInclHeadCount:()I
      18: ifeq          36
      21: aload_2
      22: invokestatic  #291                // Method globalLogHead:(Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer;)Lorg/projectnessie/nessie/relocated/protobuf/ByteString;
      25: aload_2
      26: iconst_0
      27: invokevirtual #292                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer.getGlobalParentsInclHead:(I)Lorg/projectnessie/nessie/relocated/protobuf/ByteString;
      30: invokevirtual #153                // Method org/projectnessie/nessie/relocated/protobuf/ByteString.equals:(Ljava/lang/Object;)Z
      33: ifne          114
      36: aload_2
      37: invokestatic  #291                // Method globalLogHead:(Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer;)Lorg/projectnessie/nessie/relocated/protobuf/ByteString;
      40: invokestatic  #167                // Method org/projectnessie/versioned/Hash.of:(Lorg/projectnessie/nessie/relocated/protobuf/ByteString;)Lorg/projectnessie/versioned/Hash;
      43: astore        4
      45: aload_0
      46: aload_1
      47: aload         4
      49: invokevirtual #293                // Method fetchFromGlobalLog:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Lorg/projectnessie/versioned/Hash;)Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStateLogEntry;
      52: astore        5
      54: aload         5
      56: ifnonnull     92
      59: new           #36                 // class java/lang/RuntimeException
      62: dup
      63: new           #34                 // class org/projectnessie/versioned/ReferenceNotFoundException
      66: dup
      67: ldc_w         #294                // String Global log entry \'%s\' not does not exist.
      70: iconst_1
      71: anewarray     #295                // class java/lang/Object
      74: dup
      75: iconst_0
      76: aload         4
      78: invokevirtual #296                // Method org/projectnessie/versioned/Hash.asString:()Ljava/lang/String;
      81: aastore
      82: invokestatic  #297                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      85: invokespecial #298                // Method org/projectnessie/versioned/ReferenceNotFoundException."<init>":(Ljava/lang/String;)V
      88: invokespecial #38                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      91: athrow
      92: aload_0
      93: aload_1
      94: aload         5
      96: aload_0
      97: invokedynamic #299,  0            // InvokeDynamic #40:apply:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter;)Ljava/util/function/BiFunction;
     102: invokedynamic #300,  0            // InvokeDynamic #41:apply:()Ljava/util/function/Function;
     107: invokevirtual #301                // Method logFetcher:(Ljava/lang/AutoCloseable;Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Function;)Ljava/util/Spliterator;
     110: astore_3
     111: goto          165
     114: aload_2
     115: invokevirtual #302                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStatePointer.getGlobalParentsInclHeadList:()Ljava/util/List;
     118: invokeinterface #214,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
     123: invokedynamic #303,  0            // InvokeDynamic #42:apply:()Ljava/util/function/Function;
     128: invokeinterface #25,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     133: invokestatic  #191                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
     136: invokeinterface #192,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
     141: checkcast     #193                // class java/util/List
     144: astore        4
     146: aload_0
     147: aload_1
     148: aload         4
     150: aload_0
     151: invokedynamic #299,  0            // InvokeDynamic #40:apply:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter;)Ljava/util/function/BiFunction;
     156: invokedynamic #304,  0            // InvokeDynamic #43:apply:()Ljava/util/function/Function;
     161: invokevirtual #305                // Method logFetcherWithPage:(Ljava/lang/AutoCloseable;Ljava/util/List;Ljava/util/function/BiFunction;Ljava/util/function/Function;)Ljava/util/Spliterator;
     164: astore_3
     165: aload_3
     166: iconst_0
     167: invokestatic  #190                // Method java/util/stream/StreamSupport.stream:(Ljava/util/Spliterator;Z)Ljava/util/stream/Stream;
     170: areturn

  protected final org.projectnessie.versioned.persist.serialize.AdapterTypes$GlobalStateLogEntry fetchFromGlobalLog(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, org.projectnessie.versioned.Hash);
    Code:
       0: ldc_w         #306                // String fetchFromGlobalLog
       3: invokestatic  #111                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.trace:(Ljava/lang/String;)Lorg/projectnessie/versioned/persist/adapter/spi/Traced;
       6: ldc_w         #308                // String hash
       9: aload_2
      10: invokevirtual #296                // Method org/projectnessie/versioned/Hash.asString:()Ljava/lang/String;
      13: invokevirtual #245                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.tag:(Ljava/lang/String;Ljava/lang/String;)Lorg/projectnessie/versioned/persist/adapter/spi/Traced;
      16: astore_3
      17: aload_0
      18: aload_1
      19: aload_2
      20: invokevirtual #309                // Method doFetchFromGlobalLog:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Lorg/projectnessie/versioned/Hash;)Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStateLogEntry;
      23: astore        4
      25: aload_3
      26: ifnull        33
      29: aload_3
      30: invokevirtual #113                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.close:()V
      33: aload         4
      35: areturn
      36: astore        4
      38: aload_3
      39: ifnull        58
      42: aload_3
      43: invokevirtual #113                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.close:()V
      46: goto          58
      49: astore        5
      51: aload         4
      53: aload         5
      55: invokevirtual #18                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      58: aload         4
      60: athrow
    Exception table:
       from    to  target type
          17    25    36   Class java/lang/Throwable
          42    46    49   Class java/lang/Throwable

  protected abstract org.projectnessie.versioned.persist.serialize.AdapterTypes$GlobalStateLogEntry doFetchFromGlobalLog(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, org.projectnessie.versioned.Hash);

  protected final java.util.List<org.projectnessie.versioned.persist.serialize.AdapterTypes$GlobalStateLogEntry> fetchPageFromGlobalLog(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, java.util.List<org.projectnessie.versioned.Hash>);
    Code:
       0: ldc_w         #310                // String fetchPageFromGlobalLog
       3: invokestatic  #111                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.trace:(Ljava/lang/String;)Lorg/projectnessie/versioned/persist/adapter/spi/Traced;
       6: ldc_w         #308                // String hash
       9: aload_2
      10: iconst_0
      11: invokeinterface #174,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      16: checkcast     #131                // class org/projectnessie/versioned/Hash
      19: invokevirtual #296                // Method org/projectnessie/versioned/Hash.asString:()Ljava/lang/String;
      22: invokevirtual #245                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.tag:(Ljava/lang/String;Ljava/lang/String;)Lorg/projectnessie/versioned/persist/adapter/spi/Traced;
      25: ldc_w         #311                // String count
      28: aload_2
      29: invokeinterface #179,  1          // InterfaceMethod java/util/List.size:()I
      34: invokestatic  #180                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      37: invokevirtual #181                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.tag:(Ljava/lang/String;Ljava/lang/Number;)Lorg/projectnessie/versioned/persist/adapter/spi/Traced;
      40: astore_3
      41: aload_0
      42: aload_1
      43: aload_2
      44: invokevirtual #312                // Method doFetchPageFromGlobalLog:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Ljava/util/List;)Ljava/util/List;
      47: astore        4
      49: aload_3
      50: ifnull        57
      53: aload_3
      54: invokevirtual #113                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.close:()V
      57: aload         4
      59: areturn
      60: astore        4
      62: aload_3
      63: ifnull        82
      66: aload_3
      67: invokevirtual #113                // Method org/projectnessie/versioned/persist/adapter/spi/Traced.close:()V
      70: goto          82
      73: astore        5
      75: aload         4
      77: aload         5
      79: invokevirtual #18                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      82: aload         4
      84: athrow
    Exception table:
       from    to  target type
          41    49    60   Class java/lang/Throwable
          66    70    73   Class java/lang/Throwable

  protected abstract java.util.List<org.projectnessie.versioned.persist.serialize.AdapterTypes$GlobalStateLogEntry> doFetchPageFromGlobalLog(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, java.util.List<org.projectnessie.versioned.Hash>);

  protected java.util.Map doFetchGlobalStates(java.lang.AutoCloseable, java.util.Set) throws org.projectnessie.versioned.ReferenceNotFoundException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #313                // class org/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext
       5: aload_2
       6: invokevirtual #314                // Method doFetchGlobalStates:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Ljava/util/Set;)Ljava/util/Map;
       9: areturn

  public java.lang.AutoCloseable borrowConnection();
    Code:
       0: aload_0
       1: invokevirtual #315                // Method borrowConnection:()Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;
       4: areturn

  private static java.util.List lambda$globalLogFetcher$37(org.projectnessie.versioned.persist.serialize.AdapterTypes$GlobalStateLogEntry);
    Code:
       0: aload_0
       1: invokevirtual #316                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStateLogEntry.getParentsList:()Ljava/util/List;
       4: invokeinterface #214,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: invokedynamic #303,  0            // InvokeDynamic #42:apply:()Ljava/util/function/Function;
      14: invokeinterface #25,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      19: invokestatic  #191                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      22: invokeinterface #192,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      27: checkcast     #193                // class java/util/List
      30: areturn

  private static java.util.List lambda$globalLogFetcher$36(org.projectnessie.versioned.persist.serialize.AdapterTypes$GlobalStateLogEntry);
    Code:
       0: aload_0
       1: invokevirtual #316                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStateLogEntry.getParentsList:()Ljava/util/List;
       4: invokeinterface #214,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: invokedynamic #303,  0            // InvokeDynamic #42:apply:()Ljava/util/function/Function;
      14: invokeinterface #25,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      19: invokestatic  #191                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      22: invokeinterface #192,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      27: checkcast     #193                // class java/util/List
      30: areturn

  private static org.projectnessie.versioned.persist.adapter.ContentId lambda$doFetchGlobalStates$35(org.projectnessie.versioned.persist.serialize.AdapterTypes$ContentIdWithBytes);
    Code:
       0: aload_0
       1: invokevirtual #317                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$ContentIdWithBytes.getContentId:()Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$ContentId;
       4: invokevirtual #318                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$ContentId.getId:()Ljava/lang/String;
       7: invokestatic  #319                // Method org/projectnessie/versioned/persist/adapter/ContentId.of:(Ljava/lang/String;)Lorg/projectnessie/versioned/persist/adapter/ContentId;
      10: areturn

  private static boolean lambda$doFetchGlobalStates$34(java.util.Set, org.projectnessie.versioned.persist.serialize.AdapterTypes$ContentIdWithBytes);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #317                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$ContentIdWithBytes.getContentId:()Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$ContentId;
       5: invokevirtual #318                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$ContentId.getId:()Ljava/lang/String;
       8: invokestatic  #319                // Method org/projectnessie/versioned/persist/adapter/ContentId.of:(Ljava/lang/String;)Lorg/projectnessie/versioned/persist/adapter/ContentId;
      11: invokeinterface #320,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      16: ireturn

  private static java.util.stream.Stream lambda$doFetchGlobalStates$33(org.projectnessie.versioned.persist.serialize.AdapterTypes$GlobalStateLogEntry);
    Code:
       0: aload_0
       1: invokevirtual #321                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStateLogEntry.getPutsList:()Ljava/util/List;
       4: invokeinterface #214,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: areturn

  private static boolean lambda$doFetchGlobalStates$32(java.util.Set, org.projectnessie.versioned.persist.serialize.AdapterTypes$GlobalStateLogEntry);
    Code:
       0: aload_0
       1: invokeinterface #279,  1          // InterfaceMethod java/util/Set.isEmpty:()Z
       6: ireturn

  private java.util.List lambda$fetchReferenceNames$31(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_0
       4: getfield      #99                 // Field config:Lorg/projectnessie/versioned/persist/adapter/DatabaseAdapterConfig;
       7: checkcast     #232                // class org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapterConfig
      10: invokeinterface #322,  1          // InterfaceMethod org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapterConfig.getReferencesSegmentPrefetch:()I
      15: invokevirtual #323                // Method fetchReferenceNames:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;II)Ljava/util/List;
      18: areturn

  private java.util.Spliterator lambda$fetchNamedReferences$30(org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #172                // Method fetchNamedReference:(Lorg/projectnessie/versioned/persist/nontx/NonTransactionalOperationContext;Ljava/util/List;)Ljava/util/List;
       6: invokeinterface #324,  1          // InterfaceMethod java/util/List.spliterator:()Ljava/util/Spliterator;
      11: areturn

  private static boolean lambda$maybeMigrateLegacyNamedReferences$29(org.projectnessie.versioned.persist.serialize.AdapterTypes$NamedReference, org.projectnessie.versioned.persist.serialize.AdapterTypes$NamedReference);
    Code:
       0: aload_1
       1: invokevirtual #168                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference.getName:()Ljava/lang/String;
       4: aload_0
       5: invokevirtual #168                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference.getName:()Ljava/lang/String;
       8: invokevirtual #325                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  private java.lang.Integer lambda$maybeMigrateLegacyNamedReferences$28(java.util.List, int);
    Code:
       0: aload_1
       1: invokeinterface #179,  1          // InterfaceMethod java/util/List.size:()I
       6: iload_2
       7: if_icmple     23
      10: aload_1
      11: iload_2
      12: invokeinterface #174,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      17: checkcast     #199                // class org/projectnessie/versioned/persist/serialize/AdapterTypes$ReferenceNames
      20: goto          24
      23: aconst_null
      24: astore_3
      25: aload_0
      26: aload_0
      27: getfield      #99                 // Field config:Lorg/projectnessie/versioned/persist/adapter/DatabaseAdapterConfig;
      30: checkcast     #232                // class org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapterConfig
      33: invokeinterface #249,  1          // InterfaceMethod org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapterConfig.getReferencesSegmentSize:()I
      38: invokevirtual #250                // Method maxEntitySize:(I)I
      41: aload_3
      42: ifnull        52
      45: aload_3
      46: invokevirtual #248                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$ReferenceNames.getSerializedSize:()I
      49: goto          53
      52: iconst_0
      53: isub
      54: invokestatic  #180                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      57: areturn

  private static void lambda$maybeMigrateLegacyNamedReferences$27(java.util.Map, org.projectnessie.versioned.persist.serialize.AdapterTypes$NamedReference);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #168                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$NamedReference.getName:()Ljava/lang/String;
       5: aload_1
       6: invokeinterface #326,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  private static java.lang.String lambda$casOpLoop$26(java.util.function.Supplier, org.projectnessie.versioned.persist.adapter.spi.TryLoopState);
    Code:
       0: ldc_w         #327                // String %s after %d retries, %d ms
       3: iconst_3
       4: anewarray     #295                // class java/lang/Object
       7: dup
       8: iconst_0
       9: aload_0
      10: invokeinterface #328,  1          // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      15: aastore
      16: dup
      17: iconst_1
      18: aload_1
      19: invokevirtual #329                // Method org/projectnessie/versioned/persist/adapter/spi/TryLoopState.getRetries:()I
      22: invokestatic  #180                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      25: aastore
      26: dup
      27: iconst_2
      28: aload_1
      29: getstatic     #330                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      32: invokevirtual #331                // Method org/projectnessie/versioned/persist/adapter/spi/TryLoopState.getDuration:(Ljava/util/concurrent/TimeUnit;)J
      35: invokestatic  #332                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      38: aastore
      39: invokestatic  #297                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      42: areturn

  private static java.lang.IllegalArgumentException lambda$hashOnRef$25();
    Code:
       0: new           #120                // class java/lang/IllegalArgumentException
       3: dup
       4: ldc_w         #333                // String Must supply \'hashOnReference\' for DETACHED
       7: invokespecial #123                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      10: areturn

  private static java.lang.String lambda$updateRepositoryDescription$24(org.projectnessie.versioned.persist.adapter.spi.TryLoopState);
    Code:
       0: ldc_w         #334                // String Retry-failure after %d retries, %d ms
       3: iconst_2
       4: anewarray     #295                // class java/lang/Object
       7: dup
       8: iconst_0
       9: aload_0
      10: invokevirtual #329                // Method org/projectnessie/versioned/persist/adapter/spi/TryLoopState.getRetries:()I
      13: invokestatic  #180                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      16: aastore
      17: dup
      18: iconst_1
      19: aload_0
      20: getstatic     #330                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      23: invokevirtual #331                // Method org/projectnessie/versioned/persist/adapter/spi/TryLoopState.getDuration:(Ljava/util/concurrent/TimeUnit;)J
      26: invokestatic  #332                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      29: aastore
      30: invokestatic  #297                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      33: invokestatic  #335                // Method org/projectnessie/versioned/persist/adapter/spi/DatabaseAdapterUtil.repoDescUpdateConflictMessage:(Ljava/lang/String;)Ljava/lang/String;
      36: areturn

  private static org.projectnessie.versioned.persist.adapter.ContentIdAndBytes lambda$globalContent$23(org.projectnessie.versioned.persist.adapter.ContentIdAndBytes);
    Code:
       0: aload_0
       1: invokeinterface #336,  1          // InterfaceMethod org/projectnessie/versioned/persist/adapter/ContentIdAndBytes.getContentId:()Lorg/projectnessie/versioned/persist/adapter/ContentId;
       6: aload_0
       7: invokeinterface #337,  1          // InterfaceMethod org/projectnessie/versioned/persist/adapter/ContentIdAndBytes.getValue:()Lorg/projectnessie/nessie/relocated/protobuf/ByteString;
      12: invokestatic  #338                // InterfaceMethod org/projectnessie/versioned/persist/adapter/ContentIdAndBytes.of:(Lorg/projectnessie/versioned/persist/adapter/ContentId;Lorg/projectnessie/nessie/relocated/protobuf/ByteString;)Lorg/projectnessie/versioned/persist/adapter/ContentIdAndBytes;
      15: areturn

  private static boolean lambda$globalContent$22(org.projectnessie.versioned.persist.adapter.ContentId, org.projectnessie.versioned.persist.adapter.ContentIdAndBytes);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #336,  1          // InterfaceMethod org/projectnessie/versioned/persist/adapter/ContentIdAndBytes.getContentId:()Lorg/projectnessie/versioned/persist/adapter/ContentId;
       7: invokevirtual #129                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      10: ireturn

  private static java.util.stream.Stream lambda$globalContent$21(org.projectnessie.versioned.persist.serialize.AdapterTypes$GlobalStateLogEntry);
    Code:
       0: aload_0
       1: invokevirtual #321                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$GlobalStateLogEntry.getPutsList:()Ljava/util/List;
       4: invokeinterface #214,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: areturn

  private static org.projectnessie.versioned.persist.adapter.events.AdapterEvent$Builder lambda$initializeRepo$20(org.projectnessie.versioned.BranchName);
    Code:
       0: invokestatic  #339                // InterfaceMethod org/projectnessie/versioned/persist/adapter/events/ReferenceCreatedEvent.builder:()Lorg/projectnessie/versioned/persist/adapter/events/ReferenceCreatedEvent$Builder;
       3: aload_0
       4: invokeinterface #340,  2          // InterfaceMethod org/projectnessie/versioned/persist/adapter/events/ReferenceCreatedEvent$Builder.ref:(Lorg/projectnessie/versioned/NamedRef;)Lorg/projectnessie/versioned/persist/adapter/events/ReferenceEvent$Builder;
       9: checkcast     #341                // class org/projectnessie/versioned/persist/adapter/events/ReferenceCreatedEvent$Builder
      12: getstatic     #71                 // Field NO_ANCESTOR:Lorg/projectnessie/versioned/Hash;
      15: invokeinterface #342,  2          // InterfaceMethod org/projectnessie/versioned/persist/adapter/events/ReferenceCreatedEvent$Builder.currentHash:(Lorg/projectnessie/versioned/Hash;)Lorg/projectnessie/versioned/persist/adapter/events/ReferenceEvent$Builder;
      20: areturn

  private static org.projectnessie.versioned.persist.adapter.events.AdapterEvent$Builder lambda$initializeRepo$19(java.lang.String);
    Code:
       0: invokestatic  #343                // InterfaceMethod org/projectnessie/versioned/persist/adapter/events/RepositoryInitializedEvent.builder:()Lorg/projectnessie/versioned/persist/adapter/events/RepositoryInitializedEvent$Builder;
       3: aload_0
       4: invokeinterface #344,  2          // InterfaceMethod org/projectnessie/versioned/persist/adapter/events/RepositoryInitializedEvent$Builder.defaultBranch:(Ljava/lang/String;)Lorg/projectnessie/versioned/persist/adapter/events/RepositoryInitializedEvent$Builder;
       9: areturn

  private static java.lang.String lambda$assign$18(org.projectnessie.versioned.NamedRef, java.util.Optional, org.projectnessie.versioned.Hash);
    Code:
       0: ldc_w         #345                // String Retry-Failure
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokestatic  #346                // Method org/projectnessie/versioned/persist/adapter/spi/DatabaseAdapterUtil.assignConflictMessage:(Ljava/lang/String;Lorg/projectnessie/versioned/NamedRef;Ljava/util/Optional;Lorg/projectnessie/versioned/Hash;)Ljava/lang/String;
       9: areturn

  private org.projectnessie.versioned.persist.nontx.NonTransactionalDatabaseAdapter$CasOpResult lambda$assign$17(org.projectnessie.versioned.NamedRef, java.util.Optional, org.projectnessie.versioned.Hash, org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, org.projectnessie.versioned.persist.serialize.AdapterTypes$RefPointer, java.util.function.Consumer, java.util.function.Consumer) throws org.projectnessie.versioned.VersionStoreException;
    Code:
       0: invokestatic  #347                // Method org/projectnessie/versioned/ImmutableReferenceAssignedResult.builder:()Lorg/projectnessie/versioned/ImmutableReferenceAssignedResult$Builder;
       3: aload_1
       4: invokevirtual #348                // Method org/projectnessie/versioned/ImmutableReferenceAssignedResult$Builder.namedRef:(Lorg/projectnessie/versioned/NamedRef;)Lorg/projectnessie/versioned/ImmutableReferenceAssignedResult$Builder;
       7: astore        8
       9: aload         5
      11: invokevirtual #151                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer.getHash:()Lorg/projectnessie/nessie/relocated/protobuf/ByteString;
      14: invokestatic  #167                // Method org/projectnessie/versioned/Hash.of:(Lorg/projectnessie/nessie/relocated/protobuf/ByteString;)Lorg/projectnessie/versioned/Hash;
      17: astore        9
      19: aload         9
      21: aload_1
      22: aload_2
      23: invokestatic  #349                // Method org/projectnessie/versioned/persist/adapter/spi/DatabaseAdapterUtil.verifyExpectedHash:(Lorg/projectnessie/versioned/Hash;Lorg/projectnessie/versioned/NamedRef;Ljava/util/Optional;)V
      26: aload_0
      27: aload         4
      29: aload_3
      30: invokevirtual #350                // Method validateHashExists:(Ljava/lang/AutoCloseable;Lorg/projectnessie/versioned/Hash;)V
      33: aload         8
      35: aload         9
      37: invokevirtual #351                // Method org/projectnessie/versioned/ImmutableReferenceAssignedResult$Builder.previousHash:(Lorg/projectnessie/versioned/Hash;)Lorg/projectnessie/versioned/ImmutableReferenceAssignedResult$Builder;
      40: aload_3
      41: invokevirtual #352                // Method org/projectnessie/versioned/ImmutableReferenceAssignedResult$Builder.currentHash:(Lorg/projectnessie/versioned/Hash;)Lorg/projectnessie/versioned/ImmutableReferenceAssignedResult$Builder;
      44: pop
      45: aload         5
      47: aload         8
      49: invokevirtual #353                // Method org/projectnessie/versioned/ImmutableReferenceAssignedResult$Builder.build:()Lorg/projectnessie/versioned/ImmutableReferenceAssignedResult;
      52: aload_3
      53: aload_1
      54: aload         9
      56: invokedynamic #354,  0            // InvokeDynamic #44:get:(Lorg/projectnessie/versioned/Hash;Lorg/projectnessie/versioned/NamedRef;Lorg/projectnessie/versioned/Hash;)Ljava/util/function/Supplier;
      61: invokestatic  #355                // Method org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpResult.casOpResult:(Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer;Ljava/lang/Object;Ljava/util/function/Supplier;)Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpResult;
      64: areturn

  private static org.projectnessie.versioned.persist.adapter.events.AdapterEvent$Builder lambda$assign$16(org.projectnessie.versioned.Hash, org.projectnessie.versioned.NamedRef, org.projectnessie.versioned.Hash);
    Code:
       0: invokestatic  #356                // InterfaceMethod org/projectnessie/versioned/persist/adapter/events/ReferenceAssignedEvent.builder:()Lorg/projectnessie/versioned/persist/adapter/events/ReferenceAssignedEvent$Builder;
       3: aload_0
       4: invokeinterface #357,  2          // InterfaceMethod org/projectnessie/versioned/persist/adapter/events/ReferenceAssignedEvent$Builder.currentHash:(Lorg/projectnessie/versioned/Hash;)Lorg/projectnessie/versioned/persist/adapter/events/ReferenceEvent$Builder;
       9: checkcast     #358                // class org/projectnessie/versioned/persist/adapter/events/ReferenceAssignedEvent$Builder
      12: aload_1
      13: invokeinterface #359,  2          // InterfaceMethod org/projectnessie/versioned/persist/adapter/events/ReferenceAssignedEvent$Builder.ref:(Lorg/projectnessie/versioned/NamedRef;)Lorg/projectnessie/versioned/persist/adapter/events/ReferenceEvent$Builder;
      18: checkcast     #358                // class org/projectnessie/versioned/persist/adapter/events/ReferenceAssignedEvent$Builder
      21: aload_2
      22: invokeinterface #360,  2          // InterfaceMethod org/projectnessie/versioned/persist/adapter/events/ReferenceAssignedEvent$Builder.previousHash:(Lorg/projectnessie/versioned/Hash;)Lorg/projectnessie/versioned/persist/adapter/events/ReferenceAssignedEvent$Builder;
      27: areturn

  private static java.lang.String lambda$delete$15(org.projectnessie.versioned.NamedRef, java.util.Optional);
    Code:
       0: ldc_w         #345                // String Retry-Failure
       3: aload_0
       4: aload_1
       5: invokestatic  #361                // Method org/projectnessie/versioned/persist/adapter/spi/DatabaseAdapterUtil.deleteConflictMessage:(Ljava/lang/String;Lorg/projectnessie/versioned/NamedRef;Ljava/util/Optional;)Ljava/lang/String;
       8: areturn

  private static org.projectnessie.versioned.persist.nontx.NonTransactionalDatabaseAdapter$CasOpResult lambda$delete$14(org.projectnessie.versioned.NamedRef, java.util.Optional, org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, org.projectnessie.versioned.persist.serialize.AdapterTypes$RefPointer, java.util.function.Consumer, java.util.function.Consumer) throws org.projectnessie.versioned.VersionStoreException;
    Code:
       0: invokestatic  #362                // Method org/projectnessie/versioned/ImmutableReferenceDeletedResult.builder:()Lorg/projectnessie/versioned/ImmutableReferenceDeletedResult$Builder;
       3: aload_0
       4: invokevirtual #363                // Method org/projectnessie/versioned/ImmutableReferenceDeletedResult$Builder.namedRef:(Lorg/projectnessie/versioned/NamedRef;)Lorg/projectnessie/versioned/ImmutableReferenceDeletedResult$Builder;
       7: astore        6
       9: aload_3
      10: invokevirtual #151                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer.getHash:()Lorg/projectnessie/nessie/relocated/protobuf/ByteString;
      13: invokestatic  #167                // Method org/projectnessie/versioned/Hash.of:(Lorg/projectnessie/nessie/relocated/protobuf/ByteString;)Lorg/projectnessie/versioned/Hash;
      16: astore        7
      18: aload         7
      20: aload_0
      21: aload_1
      22: invokestatic  #349                // Method org/projectnessie/versioned/persist/adapter/spi/DatabaseAdapterUtil.verifyExpectedHash:(Lorg/projectnessie/versioned/Hash;Lorg/projectnessie/versioned/NamedRef;Ljava/util/Optional;)V
      25: aload         6
      27: aload         7
      29: invokevirtual #364                // Method org/projectnessie/versioned/ImmutableReferenceDeletedResult$Builder.hash:(Lorg/projectnessie/versioned/Hash;)Lorg/projectnessie/versioned/ImmutableReferenceDeletedResult$Builder;
      32: pop
      33: aload_3
      34: aload         6
      36: invokevirtual #365                // Method org/projectnessie/versioned/ImmutableReferenceDeletedResult$Builder.build:()Lorg/projectnessie/versioned/ImmutableReferenceDeletedResult;
      39: aload         7
      41: aload_0
      42: invokedynamic #366,  0            // InvokeDynamic #45:get:(Lorg/projectnessie/versioned/Hash;Lorg/projectnessie/versioned/NamedRef;)Ljava/util/function/Supplier;
      47: invokestatic  #355                // Method org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpResult.casOpResult:(Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer;Ljava/lang/Object;Ljava/util/function/Supplier;)Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpResult;
      50: areturn

  private static org.projectnessie.versioned.persist.adapter.events.AdapterEvent$Builder lambda$delete$13(org.projectnessie.versioned.Hash, org.projectnessie.versioned.NamedRef);
    Code:
       0: invokestatic  #367                // InterfaceMethod org/projectnessie/versioned/persist/adapter/events/ReferenceDeletedEvent.builder:()Lorg/projectnessie/versioned/persist/adapter/events/ReferenceDeletedEvent$Builder;
       3: aload_0
       4: invokeinterface #368,  2          // InterfaceMethod org/projectnessie/versioned/persist/adapter/events/ReferenceDeletedEvent$Builder.currentHash:(Lorg/projectnessie/versioned/Hash;)Lorg/projectnessie/versioned/persist/adapter/events/ReferenceEvent$Builder;
       9: checkcast     #369                // class org/projectnessie/versioned/persist/adapter/events/ReferenceDeletedEvent$Builder
      12: aload_1
      13: invokeinterface #370,  2          // InterfaceMethod org/projectnessie/versioned/persist/adapter/events/ReferenceDeletedEvent$Builder.ref:(Lorg/projectnessie/versioned/NamedRef;)Lorg/projectnessie/versioned/persist/adapter/events/ReferenceEvent$Builder;
      18: areturn

  private static java.lang.String lambda$create$12(org.projectnessie.versioned.NamedRef, org.projectnessie.versioned.Hash);
    Code:
       0: ldc_w         #345                // String Retry-Failure
       3: aload_0
       4: aload_1
       5: invokestatic  #371                // Method org/projectnessie/versioned/persist/adapter/spi/DatabaseAdapterUtil.createConflictMessage:(Ljava/lang/String;Lorg/projectnessie/versioned/NamedRef;Lorg/projectnessie/versioned/Hash;)Ljava/lang/String;
       8: areturn

  private org.projectnessie.versioned.persist.nontx.NonTransactionalDatabaseAdapter$CasOpResult lambda$create$11(org.projectnessie.versioned.NamedRef, org.projectnessie.versioned.Hash, org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, org.projectnessie.versioned.persist.serialize.AdapterTypes$RefPointer, java.util.function.Consumer, java.util.function.Consumer) throws org.projectnessie.versioned.VersionStoreException;
    Code:
       0: invokestatic  #372                // Method org/projectnessie/versioned/ImmutableReferenceCreatedResult.builder:()Lorg/projectnessie/versioned/ImmutableReferenceCreatedResult$Builder;
       3: aload_1
       4: invokevirtual #373                // Method org/projectnessie/versioned/ImmutableReferenceCreatedResult$Builder.namedRef:(Lorg/projectnessie/versioned/NamedRef;)Lorg/projectnessie/versioned/ImmutableReferenceCreatedResult$Builder;
       7: astore        7
       9: aload         4
      11: ifnull        19
      14: aload_1
      15: invokestatic  #374                // Method org/projectnessie/versioned/persist/adapter/spi/DatabaseAdapterUtil.referenceAlreadyExists:(Lorg/projectnessie/versioned/NamedRef;)Lorg/projectnessie/versioned/ReferenceAlreadyExistsException;
      18: athrow
      19: aload_2
      20: astore        8
      22: aload         8
      24: ifnonnull     32
      27: getstatic     #71                 // Field NO_ANCESTOR:Lorg/projectnessie/versioned/Hash;
      30: astore        8
      32: aload_0
      33: aload_3
      34: aload         8
      36: invokevirtual #350                // Method validateHashExists:(Ljava/lang/AutoCloseable;Lorg/projectnessie/versioned/Hash;)V
      39: aload         8
      41: astore        9
      43: aload         7
      45: aload         9
      47: invokevirtual #375                // Method org/projectnessie/versioned/ImmutableReferenceCreatedResult$Builder.hash:(Lorg/projectnessie/versioned/Hash;)Lorg/projectnessie/versioned/ImmutableReferenceCreatedResult$Builder;
      50: pop
      51: aconst_null
      52: aload         7
      54: invokevirtual #376                // Method org/projectnessie/versioned/ImmutableReferenceCreatedResult$Builder.build:()Lorg/projectnessie/versioned/ImmutableReferenceCreatedResult;
      57: aload         9
      59: aload_1
      60: invokedynamic #377,  0            // InvokeDynamic #46:get:(Lorg/projectnessie/versioned/Hash;Lorg/projectnessie/versioned/NamedRef;)Ljava/util/function/Supplier;
      65: invokestatic  #355                // Method org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpResult.casOpResult:(Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer;Ljava/lang/Object;Ljava/util/function/Supplier;)Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpResult;
      68: areturn

  private static org.projectnessie.versioned.persist.adapter.events.AdapterEvent$Builder lambda$create$10(org.projectnessie.versioned.Hash, org.projectnessie.versioned.NamedRef);
    Code:
       0: invokestatic  #339                // InterfaceMethod org/projectnessie/versioned/persist/adapter/events/ReferenceCreatedEvent.builder:()Lorg/projectnessie/versioned/persist/adapter/events/ReferenceCreatedEvent$Builder;
       3: aload_0
       4: invokeinterface #342,  2          // InterfaceMethod org/projectnessie/versioned/persist/adapter/events/ReferenceCreatedEvent$Builder.currentHash:(Lorg/projectnessie/versioned/Hash;)Lorg/projectnessie/versioned/persist/adapter/events/ReferenceEvent$Builder;
       9: checkcast     #341                // class org/projectnessie/versioned/persist/adapter/events/ReferenceCreatedEvent$Builder
      12: aload_1
      13: invokeinterface #340,  2          // InterfaceMethod org/projectnessie/versioned/persist/adapter/events/ReferenceCreatedEvent$Builder.ref:(Lorg/projectnessie/versioned/NamedRef;)Lorg/projectnessie/versioned/persist/adapter/events/ReferenceEvent$Builder;
      18: areturn

  private static java.lang.String lambda$commit$9(org.projectnessie.versioned.persist.adapter.CommitParams);
    Code:
       0: ldc_w         #345                // String Retry-Failure
       3: aload_0
       4: invokeinterface #44,  1           // InterfaceMethod org/projectnessie/versioned/persist/adapter/CommitParams.getToBranch:()Lorg/projectnessie/versioned/BranchName;
       9: aload_0
      10: invokeinterface #378,  1          // InterfaceMethod org/projectnessie/versioned/persist/adapter/CommitParams.getExpectedHead:()Ljava/util/Optional;
      15: invokestatic  #379                // Method org/projectnessie/versioned/persist/adapter/spi/DatabaseAdapterUtil.commitConflictMessage:(Ljava/lang/String;Lorg/projectnessie/versioned/BranchName;Ljava/util/Optional;)Ljava/lang/String;
      18: areturn

  private org.projectnessie.versioned.persist.nontx.NonTransactionalDatabaseAdapter$CasOpResult lambda$commit$8(org.projectnessie.versioned.persist.adapter.CommitParams, org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, org.projectnessie.versioned.persist.serialize.AdapterTypes$RefPointer, java.util.function.Consumer, java.util.function.Consumer) throws org.projectnessie.versioned.VersionStoreException;
    Code:
       0: aload_3
       1: invokevirtual #151                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer.getHash:()Lorg/projectnessie/nessie/relocated/protobuf/ByteString;
       4: invokestatic  #167                // Method org/projectnessie/versioned/Hash.of:(Lorg/projectnessie/nessie/relocated/protobuf/ByteString;)Lorg/projectnessie/versioned/Hash;
       7: astore        6
       9: invokestatic  #380                // InterfaceMethod org/projectnessie/versioned/CommitResult.builder:()Lorg/projectnessie/versioned/ImmutableCommitResult$Builder;
      12: astore        7
      14: aload_0
      15: getfield      #99                 // Field config:Lorg/projectnessie/versioned/persist/adapter/DatabaseAdapterConfig;
      18: checkcast     #232                // class org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapterConfig
      21: invokeinterface #381,  1          // InterfaceMethod org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapterConfig.currentTimeInMicros:()J
      26: lstore        8
      28: aload_0
      29: aload_2
      30: lload         8
      32: aload         6
      34: aload_1
      35: aload         5
      37: invokevirtual #382                // Method commitAttempt:(Ljava/lang/AutoCloseable;JLorg/projectnessie/versioned/Hash;Lorg/projectnessie/versioned/persist/adapter/CommitParams;Ljava/util/function/Consumer;)Lorg/projectnessie/versioned/persist/adapter/CommitLogEntry;
      40: astore        10
      42: aload         10
      44: invokeinterface #383,  1          // InterfaceMethod org/projectnessie/versioned/persist/adapter/CommitLogEntry.getHash:()Lorg/projectnessie/versioned/Hash;
      49: astore        11
      51: aload         4
      53: aload         11
      55: invokeinterface #384,  2          // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      60: aload         7
      62: aload_1
      63: invokeinterface #44,  1           // InterfaceMethod org/projectnessie/versioned/persist/adapter/CommitParams.getToBranch:()Lorg/projectnessie/versioned/BranchName;
      68: invokevirtual #385                // Method org/projectnessie/versioned/ImmutableCommitResult$Builder.targetBranch:(Lorg/projectnessie/versioned/BranchName;)Lorg/projectnessie/versioned/ImmutableCommitResult$Builder;
      71: aload         10
      73: invokevirtual #386                // Method org/projectnessie/versioned/ImmutableCommitResult$Builder.commit:(Lorg/projectnessie/versioned/Hashable;)Lorg/projectnessie/versioned/ImmutableCommitResult$Builder;
      76: pop
      77: aload_3
      78: aload         7
      80: invokevirtual #387                // Method org/projectnessie/versioned/ImmutableCommitResult$Builder.build:()Lorg/projectnessie/versioned/ImmutableCommitResult;
      83: aload         6
      85: aload         11
      87: aload_1
      88: aload         10
      90: invokedynamic #388,  0            // InvokeDynamic #47:get:(Lorg/projectnessie/versioned/Hash;Lorg/projectnessie/versioned/Hash;Lorg/projectnessie/versioned/persist/adapter/CommitParams;Lorg/projectnessie/versioned/persist/adapter/CommitLogEntry;)Ljava/util/function/Supplier;
      95: invokestatic  #355                // Method org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpResult.casOpResult:(Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer;Ljava/lang/Object;Ljava/util/function/Supplier;)Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpResult;
      98: areturn

  private static org.projectnessie.versioned.persist.adapter.events.AdapterEvent$Builder lambda$commit$7(org.projectnessie.versioned.Hash, org.projectnessie.versioned.Hash, org.projectnessie.versioned.persist.adapter.CommitParams, org.projectnessie.versioned.persist.adapter.CommitLogEntry);
    Code:
       0: invokestatic  #389                // InterfaceMethod org/projectnessie/versioned/persist/adapter/events/CommitEvent.builder:()Lorg/projectnessie/versioned/persist/adapter/events/CommitEvent$Builder;
       3: aload_0
       4: invokeinterface #390,  2          // InterfaceMethod org/projectnessie/versioned/persist/adapter/events/CommitEvent$Builder.previousHash:(Lorg/projectnessie/versioned/Hash;)Lorg/projectnessie/versioned/persist/adapter/events/CommittingEvent$Builder;
       9: checkcast     #391                // class org/projectnessie/versioned/persist/adapter/events/CommitEvent$Builder
      12: aload_1
      13: invokeinterface #392,  2          // InterfaceMethod org/projectnessie/versioned/persist/adapter/events/CommitEvent$Builder.hash:(Lorg/projectnessie/versioned/Hash;)Lorg/projectnessie/versioned/persist/adapter/events/CommittingEvent$Builder;
      18: checkcast     #391                // class org/projectnessie/versioned/persist/adapter/events/CommitEvent$Builder
      21: aload_2
      22: invokeinterface #44,  1           // InterfaceMethod org/projectnessie/versioned/persist/adapter/CommitParams.getToBranch:()Lorg/projectnessie/versioned/BranchName;
      27: invokeinterface #393,  2          // InterfaceMethod org/projectnessie/versioned/persist/adapter/events/CommitEvent$Builder.branch:(Lorg/projectnessie/versioned/BranchName;)Lorg/projectnessie/versioned/persist/adapter/events/CommittingEvent$Builder;
      32: checkcast     #391                // class org/projectnessie/versioned/persist/adapter/events/CommitEvent$Builder
      35: aload_3
      36: invokeinterface #394,  2          // InterfaceMethod org/projectnessie/versioned/persist/adapter/events/CommitEvent$Builder.addCommits:(Lorg/projectnessie/versioned/persist/adapter/CommitLogEntry;)Lorg/projectnessie/versioned/persist/adapter/events/CommittingEvent$Builder;
      41: areturn

  private static java.lang.String lambda$transplant$6(org.projectnessie.versioned.persist.adapter.TransplantParams);
    Code:
       0: ldc_w         #395                // String Retry-failure
       3: aload_0
       4: invokestatic  #396                // Method org/projectnessie/versioned/persist/adapter/spi/DatabaseAdapterUtil.transplantConflictMessage:(Ljava/lang/String;Lorg/projectnessie/versioned/persist/adapter/TransplantParams;)Ljava/lang/String;
       7: areturn

  private org.projectnessie.versioned.persist.nontx.NonTransactionalDatabaseAdapter$CasOpResult lambda$transplant$5(org.projectnessie.versioned.persist.adapter.TransplantParams, org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, org.projectnessie.versioned.persist.serialize.AdapterTypes$RefPointer, java.util.function.Consumer, java.util.function.Consumer) throws org.projectnessie.versioned.VersionStoreException;
    Code:
       0: invokestatic  #397                // InterfaceMethod org/projectnessie/versioned/MergeResult.builder:()Lorg/projectnessie/versioned/ImmutableMergeResult$Builder;
       3: getstatic     #398                // Field org/projectnessie/versioned/ResultType.TRANSPLANT:Lorg/projectnessie/versioned/ResultType;
       6: invokevirtual #399                // Method org/projectnessie/versioned/ImmutableMergeResult$Builder.resultType:(Lorg/projectnessie/versioned/ResultType;)Lorg/projectnessie/versioned/ImmutableMergeResult$Builder;
       9: aload_1
      10: invokeinterface #400,  1          // InterfaceMethod org/projectnessie/versioned/persist/adapter/TransplantParams.getFromRef:()Lorg/projectnessie/versioned/NamedRef;
      15: invokevirtual #401                // Method org/projectnessie/versioned/ImmutableMergeResult$Builder.sourceRef:(Lorg/projectnessie/versioned/NamedRef;)Lorg/projectnessie/versioned/ImmutableMergeResult$Builder;
      18: astore        6
      20: aload_3
      21: invokevirtual #151                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer.getHash:()Lorg/projectnessie/nessie/relocated/protobuf/ByteString;
      24: invokestatic  #167                // Method org/projectnessie/versioned/Hash.of:(Lorg/projectnessie/nessie/relocated/protobuf/ByteString;)Lorg/projectnessie/versioned/Hash;
      27: astore        7
      29: aload_0
      30: getfield      #99                 // Field config:Lorg/projectnessie/versioned/persist/adapter/DatabaseAdapterConfig;
      33: checkcast     #232                // class org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapterConfig
      36: invokeinterface #381,  1          // InterfaceMethod org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapterConfig.currentTimeInMicros:()J
      41: lstore        8
      43: new           #206                // class java/util/ArrayList
      46: dup
      47: invokespecial #207                // Method java/util/ArrayList."<init>":()V
      50: astore        10
      52: aload_0
      53: aload_2
      54: lload         8
      56: aload         7
      58: aload         4
      60: aload         5
      62: aload         10
      64: dup
      65: invokestatic  #143                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      68: pop
      69: invokedynamic #402,  0            // InvokeDynamic #48:accept:(Ljava/util/List;)Ljava/util/function/Consumer;
      74: aload         6
      76: dup
      77: invokestatic  #143                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      80: pop
      81: invokedynamic #403,  0            // InvokeDynamic #49:accept:(Lorg/projectnessie/versioned/ImmutableMergeResult$Builder;)Ljava/util/function/Consumer;
      86: aload_1
      87: aload         6
      89: invokevirtual #404                // Method transplantAttempt:(Ljava/lang/AutoCloseable;JLorg/projectnessie/versioned/Hash;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Lorg/projectnessie/versioned/persist/adapter/TransplantParams;Lorg/projectnessie/versioned/ImmutableMergeResult$Builder;)Lorg/projectnessie/versioned/Hash;
      92: astore        11
      94: aload_1
      95: invokeinterface #405,  1          // InterfaceMethod org/projectnessie/versioned/persist/adapter/TransplantParams.isDryRun:()Z
     100: ifne          110
     103: aload         6
     105: iconst_1
     106: invokevirtual #406                // Method org/projectnessie/versioned/ImmutableMergeResult$Builder.wasApplied:(Z)Lorg/projectnessie/versioned/ImmutableMergeResult$Builder;
     109: pop
     110: aload         6
     112: aload         11
     114: invokevirtual #407                // Method org/projectnessie/versioned/ImmutableMergeResult$Builder.resultantTargetHash:(Lorg/projectnessie/versioned/Hash;)Lorg/projectnessie/versioned/ImmutableMergeResult$Builder;
     117: pop
     118: aload_3
     119: aload         6
     121: invokevirtual #408                // Method org/projectnessie/versioned/ImmutableMergeResult$Builder.build:()Lorg/projectnessie/versioned/ImmutableMergeResult;
     124: aload         7
     126: aload         11
     128: aload_1
     129: aload         10
     131: invokedynamic #409,  0            // InvokeDynamic #50:get:(Lorg/projectnessie/versioned/Hash;Lorg/projectnessie/versioned/Hash;Lorg/projectnessie/versioned/persist/adapter/TransplantParams;Ljava/util/List;)Ljava/util/function/Supplier;
     136: invokestatic  #355                // Method org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpResult.casOpResult:(Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer;Ljava/lang/Object;Ljava/util/function/Supplier;)Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpResult;
     139: areturn

  private static org.projectnessie.versioned.persist.adapter.events.AdapterEvent$Builder lambda$transplant$4(org.projectnessie.versioned.Hash, org.projectnessie.versioned.Hash, org.projectnessie.versioned.persist.adapter.TransplantParams, java.util.List);
    Code:
       0: invokestatic  #410                // InterfaceMethod org/projectnessie/versioned/persist/adapter/events/TransplantEvent.builder:()Lorg/projectnessie/versioned/persist/adapter/events/TransplantEvent$Builder;
       3: aload_0
       4: invokeinterface #411,  2          // InterfaceMethod org/projectnessie/versioned/persist/adapter/events/TransplantEvent$Builder.previousHash:(Lorg/projectnessie/versioned/Hash;)Lorg/projectnessie/versioned/persist/adapter/events/CommittingEvent$Builder;
       9: checkcast     #412                // class org/projectnessie/versioned/persist/adapter/events/TransplantEvent$Builder
      12: aload_1
      13: invokeinterface #413,  2          // InterfaceMethod org/projectnessie/versioned/persist/adapter/events/TransplantEvent$Builder.hash:(Lorg/projectnessie/versioned/Hash;)Lorg/projectnessie/versioned/persist/adapter/events/CommittingEvent$Builder;
      18: checkcast     #412                // class org/projectnessie/versioned/persist/adapter/events/TransplantEvent$Builder
      21: aload_2
      22: invokeinterface #40,  1           // InterfaceMethod org/projectnessie/versioned/persist/adapter/TransplantParams.getToBranch:()Lorg/projectnessie/versioned/BranchName;
      27: invokeinterface #414,  2          // InterfaceMethod org/projectnessie/versioned/persist/adapter/events/TransplantEvent$Builder.branch:(Lorg/projectnessie/versioned/BranchName;)Lorg/projectnessie/versioned/persist/adapter/events/CommittingEvent$Builder;
      32: checkcast     #412                // class org/projectnessie/versioned/persist/adapter/events/TransplantEvent$Builder
      35: aload_3
      36: invokeinterface #415,  2          // InterfaceMethod org/projectnessie/versioned/persist/adapter/events/TransplantEvent$Builder.commits:(Ljava/lang/Iterable;)Lorg/projectnessie/versioned/persist/adapter/events/CommittingEvent$Builder;
      41: areturn

  private static java.lang.String lambda$merge$3(org.projectnessie.versioned.persist.adapter.MergeParams);
    Code:
       0: ldc_w         #395                // String Retry-failure
       3: aload_0
       4: invokestatic  #416                // Method org/projectnessie/versioned/persist/adapter/spi/DatabaseAdapterUtil.mergeConflictMessage:(Ljava/lang/String;Lorg/projectnessie/versioned/persist/adapter/MergeParams;)Ljava/lang/String;
       7: areturn

  private org.projectnessie.versioned.persist.nontx.NonTransactionalDatabaseAdapter$CasOpResult lambda$merge$2(org.projectnessie.versioned.persist.adapter.MergeParams, org.projectnessie.versioned.persist.nontx.NonTransactionalOperationContext, org.projectnessie.versioned.persist.serialize.AdapterTypes$RefPointer, java.util.function.Consumer, java.util.function.Consumer) throws org.projectnessie.versioned.VersionStoreException;
    Code:
       0: invokestatic  #397                // InterfaceMethod org/projectnessie/versioned/MergeResult.builder:()Lorg/projectnessie/versioned/ImmutableMergeResult$Builder;
       3: getstatic     #417                // Field org/projectnessie/versioned/ResultType.MERGE:Lorg/projectnessie/versioned/ResultType;
       6: invokevirtual #399                // Method org/projectnessie/versioned/ImmutableMergeResult$Builder.resultType:(Lorg/projectnessie/versioned/ResultType;)Lorg/projectnessie/versioned/ImmutableMergeResult$Builder;
       9: aload_1
      10: invokeinterface #418,  1          // InterfaceMethod org/projectnessie/versioned/persist/adapter/MergeParams.getFromRef:()Lorg/projectnessie/versioned/NamedRef;
      15: invokevirtual #401                // Method org/projectnessie/versioned/ImmutableMergeResult$Builder.sourceRef:(Lorg/projectnessie/versioned/NamedRef;)Lorg/projectnessie/versioned/ImmutableMergeResult$Builder;
      18: astore        6
      20: aload_3
      21: invokevirtual #151                // Method org/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer.getHash:()Lorg/projectnessie/nessie/relocated/protobuf/ByteString;
      24: invokestatic  #167                // Method org/projectnessie/versioned/Hash.of:(Lorg/projectnessie/nessie/relocated/protobuf/ByteString;)Lorg/projectnessie/versioned/Hash;
      27: astore        7
      29: aload_0
      30: getfield      #99                 // Field config:Lorg/projectnessie/versioned/persist/adapter/DatabaseAdapterConfig;
      33: checkcast     #232                // class org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapterConfig
      36: invokeinterface #381,  1          // InterfaceMethod org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapterConfig.currentTimeInMicros:()J
      41: lstore        8
      43: new           #206                // class java/util/ArrayList
      46: dup
      47: invokespecial #207                // Method java/util/ArrayList."<init>":()V
      50: astore        10
      52: aload_0
      53: aload_2
      54: lload         8
      56: aload         7
      58: aload         4
      60: aload         5
      62: aload         10
      64: dup
      65: invokestatic  #143                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      68: pop
      69: invokedynamic #402,  0            // InvokeDynamic #48:accept:(Ljava/util/List;)Ljava/util/function/Consumer;
      74: aload         6
      76: dup
      77: invokestatic  #143                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      80: pop
      81: invokedynamic #403,  0            // InvokeDynamic #49:accept:(Lorg/projectnessie/versioned/ImmutableMergeResult$Builder;)Ljava/util/function/Consumer;
      86: aload_1
      87: aload         6
      89: invokevirtual #419                // Method mergeAttempt:(Ljava/lang/AutoCloseable;JLorg/projectnessie/versioned/Hash;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Lorg/projectnessie/versioned/persist/adapter/MergeParams;Lorg/projectnessie/versioned/ImmutableMergeResult$Builder;)Lorg/projectnessie/versioned/Hash;
      92: astore        11
      94: aload_1
      95: invokeinterface #420,  1          // InterfaceMethod org/projectnessie/versioned/persist/adapter/MergeParams.isDryRun:()Z
     100: ifne          110
     103: aload         6
     105: iconst_1
     106: invokevirtual #406                // Method org/projectnessie/versioned/ImmutableMergeResult$Builder.wasApplied:(Z)Lorg/projectnessie/versioned/ImmutableMergeResult$Builder;
     109: pop
     110: aload         6
     112: aload         11
     114: invokevirtual #407                // Method org/projectnessie/versioned/ImmutableMergeResult$Builder.resultantTargetHash:(Lorg/projectnessie/versioned/Hash;)Lorg/projectnessie/versioned/ImmutableMergeResult$Builder;
     117: pop
     118: aload_3
     119: aload         6
     121: invokevirtual #408                // Method org/projectnessie/versioned/ImmutableMergeResult$Builder.build:()Lorg/projectnessie/versioned/ImmutableMergeResult;
     124: aload         7
     126: aload         11
     128: aload_1
     129: aload         10
     131: invokedynamic #421,  0            // InvokeDynamic #51:get:(Lorg/projectnessie/versioned/Hash;Lorg/projectnessie/versioned/Hash;Lorg/projectnessie/versioned/persist/adapter/MergeParams;Ljava/util/List;)Ljava/util/function/Supplier;
     136: invokestatic  #355                // Method org/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpResult.casOpResult:(Lorg/projectnessie/versioned/persist/serialize/AdapterTypes$RefPointer;Ljava/lang/Object;Ljava/util/function/Supplier;)Lorg/projectnessie/versioned/persist/nontx/NonTransactionalDatabaseAdapter$CasOpResult;
     139: areturn

  private static org.projectnessie.versioned.persist.adapter.events.AdapterEvent$Builder lambda$merge$1(org.projectnessie.versioned.Hash, org.projectnessie.versioned.Hash, org.projectnessie.versioned.persist.adapter.MergeParams, java.util.List);
    Code:
       0: invokestatic  #422                // InterfaceMethod org/projectnessie/versioned/persist/adapter/events/MergeEvent.builder:()Lorg/projectnessie/versioned/persist/adapter/events/MergeEvent$Builder;
       3: aload_0
       4: invokeinterface #423,  2          // InterfaceMethod org/projectnessie/versioned/persist/adapter/events/MergeEvent$Builder.previousHash:(Lorg/projectnessie/versioned/Hash;)Lorg/projectnessie/versioned/persist/adapter/events/CommittingEvent$Builder;
       9: checkcast     #424                // class org/projectnessie/versioned/persist/adapter/events/MergeEvent$Builder
      12: aload_1
      13: invokeinterface #425,  2          // InterfaceMethod org/projectnessie/versioned/persist/adapter/events/MergeEvent$Builder.hash:(Lorg/projectnessie/versioned/Hash;)Lorg/projectnessie/versioned/persist/adapter/events/CommittingEvent$Builder;
      18: checkcast     #424                // class org/projectnessie/versioned/persist/adapter/events/MergeEvent$Builder
      21: aload_2
      22: invokeinterface #28,  1           // InterfaceMethod org/projectnessie/versioned/persist/adapter/MergeParams.getToBranch:()Lorg/projectnessie/versioned/BranchName;
      27: invokeinterface #426,  2          // InterfaceMethod org/projectnessie/versioned/persist/adapter/events/MergeEvent$Builder.branch:(Lorg/projectnessie/versioned/BranchName;)Lorg/projectnessie/versioned/persist/adapter/events/CommittingEvent$Builder;
      32: checkcast     #424                // class org/projectnessie/versioned/persist/adapter/events/MergeEvent$Builder
      35: aload_3
      36: invokeinterface #427,  2          // InterfaceMethod org/projectnessie/versioned/persist/adapter/events/MergeEvent$Builder.commits:(Ljava/lang/Iterable;)Lorg/projectnessie/versioned/persist/adapter/events/CommittingEvent$Builder;
      41: areturn

  private static org.projectnessie.versioned.ReferenceNotFoundException lambda$namedRef$0(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #269                // Method org/projectnessie/versioned/persist/adapter/spi/DatabaseAdapterUtil.referenceNotFound:(Ljava/lang/String;)Lorg/projectnessie/versioned/ReferenceNotFoundException;
       4: areturn
}
