Compiled from "ImmutableAdjustableNonTransactionalDatabaseAdapterConfig.java"
final class org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim {
  private byte validateNamespacesBuildStage;

  private boolean validateNamespaces;

  private byte repositoryIdBuildStage;

  private java.lang.String repositoryId;

  private byte parentsPerCommitBuildStage;

  private int parentsPerCommit;

  private byte keyListDistanceBuildStage;

  private int keyListDistance;

  private byte maxKeyListSizeBuildStage;

  private int maxKeyListSize;

  private byte maxKeyListEntitySizeBuildStage;

  private int maxKeyListEntitySize;

  private byte keyListHashLoadFactorBuildStage;

  private float keyListHashLoadFactor;

  private byte keyListEntityPrefetchBuildStage;

  private int keyListEntityPrefetch;

  private byte commitTimeoutBuildStage;

  private long commitTimeout;

  private byte commitRetriesBuildStage;

  private int commitRetries;

  private byte retryInitialSleepMillisLowerBuildStage;

  private long retryInitialSleepMillisLower;

  private byte retryInitialSleepMillisUpperBuildStage;

  private long retryInitialSleepMillisUpper;

  private byte retryMaxSleepMillisBuildStage;

  private long retryMaxSleepMillis;

  private byte clockBuildStage;

  private java.time.Clock clock;

  private byte parentsPerRefLogEntryBuildStage;

  private int parentsPerRefLogEntry;

  private byte assumedWallClockDriftMicrosBuildStage;

  private long assumedWallClockDriftMicros;

  private byte referencesSegmentSizeBuildStage;

  private int referencesSegmentSize;

  private byte referencesSegmentPrefetchBuildStage;

  private int referencesSegmentPrefetch;

  private byte referenceNamesBatchSizeBuildStage;

  private int referenceNamesBatchSize;

  private byte refLogStripesBuildStage;

  private int refLogStripes;

  private byte commitLogScanPrefetchBuildStage;

  private int commitLogScanPrefetch;

  final org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig this$0;

  private org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim(org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field this$0:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
       5: aload_0
       6: invokespecial #4                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: iconst_0
      11: putfield      #5                  // Field validateNamespacesBuildStage:B
      14: aload_0
      15: iconst_0
      16: putfield      #6                  // Field repositoryIdBuildStage:B
      19: aload_0
      20: iconst_0
      21: putfield      #7                  // Field parentsPerCommitBuildStage:B
      24: aload_0
      25: iconst_0
      26: putfield      #8                  // Field keyListDistanceBuildStage:B
      29: aload_0
      30: iconst_0
      31: putfield      #9                  // Field maxKeyListSizeBuildStage:B
      34: aload_0
      35: iconst_0
      36: putfield      #10                 // Field maxKeyListEntitySizeBuildStage:B
      39: aload_0
      40: iconst_0
      41: putfield      #11                 // Field keyListHashLoadFactorBuildStage:B
      44: aload_0
      45: iconst_0
      46: putfield      #12                 // Field keyListEntityPrefetchBuildStage:B
      49: aload_0
      50: iconst_0
      51: putfield      #13                 // Field commitTimeoutBuildStage:B
      54: aload_0
      55: iconst_0
      56: putfield      #14                 // Field commitRetriesBuildStage:B
      59: aload_0
      60: iconst_0
      61: putfield      #15                 // Field retryInitialSleepMillisLowerBuildStage:B
      64: aload_0
      65: iconst_0
      66: putfield      #16                 // Field retryInitialSleepMillisUpperBuildStage:B
      69: aload_0
      70: iconst_0
      71: putfield      #17                 // Field retryMaxSleepMillisBuildStage:B
      74: aload_0
      75: iconst_0
      76: putfield      #18                 // Field clockBuildStage:B
      79: aload_0
      80: iconst_0
      81: putfield      #19                 // Field parentsPerRefLogEntryBuildStage:B
      84: aload_0
      85: iconst_0
      86: putfield      #20                 // Field assumedWallClockDriftMicrosBuildStage:B
      89: aload_0
      90: iconst_0
      91: putfield      #21                 // Field referencesSegmentSizeBuildStage:B
      94: aload_0
      95: iconst_0
      96: putfield      #22                 // Field referencesSegmentPrefetchBuildStage:B
      99: aload_0
     100: iconst_0
     101: putfield      #23                 // Field referenceNamesBatchSizeBuildStage:B
     104: aload_0
     105: iconst_0
     106: putfield      #24                 // Field refLogStripesBuildStage:B
     109: aload_0
     110: iconst_0
     111: putfield      #25                 // Field commitLogScanPrefetchBuildStage:B
     114: return

  boolean validateNamespaces();
    Code:
       0: aload_0
       1: getfield      #5                  // Field validateNamespacesBuildStage:B
       4: iconst_m1
       5: if_icmpne     20
       8: new           #26                 // class java/lang/IllegalStateException
      11: dup
      12: aload_0
      13: invokespecial #27                 // Method formatInitCycleMessage:()Ljava/lang/String;
      16: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #5                  // Field validateNamespacesBuildStage:B
      24: ifne          48
      27: aload_0
      28: iconst_m1
      29: putfield      #5                  // Field validateNamespacesBuildStage:B
      32: aload_0
      33: aload_0
      34: getfield      #3                  // Field this$0:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
      37: invokestatic  #29                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig.access$4100:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;)Z
      40: putfield      #30                 // Field validateNamespaces:Z
      43: aload_0
      44: iconst_1
      45: putfield      #5                  // Field validateNamespacesBuildStage:B
      48: aload_0
      49: getfield      #30                 // Field validateNamespaces:Z
      52: ireturn

  void validateNamespaces(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #30                 // Field validateNamespaces:Z
       5: aload_0
       6: iconst_1
       7: putfield      #5                  // Field validateNamespacesBuildStage:B
      10: return

  java.lang.String getRepositoryId();
    Code:
       0: aload_0
       1: getfield      #6                  // Field repositoryIdBuildStage:B
       4: iconst_m1
       5: if_icmpne     20
       8: new           #26                 // class java/lang/IllegalStateException
      11: dup
      12: aload_0
      13: invokespecial #27                 // Method formatInitCycleMessage:()Ljava/lang/String;
      16: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #6                  // Field repositoryIdBuildStage:B
      24: ifne          56
      27: aload_0
      28: iconst_m1
      29: putfield      #6                  // Field repositoryIdBuildStage:B
      32: aload_0
      33: aload_0
      34: getfield      #3                  // Field this$0:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
      37: invokestatic  #31                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig.access$4200:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;)Ljava/lang/String;
      40: ldc           #32                 // String repositoryId
      42: invokestatic  #33                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      45: checkcast     #34                 // class java/lang/String
      48: putfield      #35                 // Field repositoryId:Ljava/lang/String;
      51: aload_0
      52: iconst_1
      53: putfield      #6                  // Field repositoryIdBuildStage:B
      56: aload_0
      57: getfield      #35                 // Field repositoryId:Ljava/lang/String;
      60: areturn

  void repositoryId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #35                 // Field repositoryId:Ljava/lang/String;
       5: aload_0
       6: iconst_1
       7: putfield      #6                  // Field repositoryIdBuildStage:B
      10: return

  int getParentsPerCommit();
    Code:
       0: aload_0
       1: getfield      #7                  // Field parentsPerCommitBuildStage:B
       4: iconst_m1
       5: if_icmpne     20
       8: new           #26                 // class java/lang/IllegalStateException
      11: dup
      12: aload_0
      13: invokespecial #27                 // Method formatInitCycleMessage:()Ljava/lang/String;
      16: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #7                  // Field parentsPerCommitBuildStage:B
      24: ifne          48
      27: aload_0
      28: iconst_m1
      29: putfield      #7                  // Field parentsPerCommitBuildStage:B
      32: aload_0
      33: aload_0
      34: getfield      #3                  // Field this$0:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
      37: invokestatic  #36                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig.access$4300:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;)I
      40: putfield      #37                 // Field parentsPerCommit:I
      43: aload_0
      44: iconst_1
      45: putfield      #7                  // Field parentsPerCommitBuildStage:B
      48: aload_0
      49: getfield      #37                 // Field parentsPerCommit:I
      52: ireturn

  void parentsPerCommit(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #37                 // Field parentsPerCommit:I
       5: aload_0
       6: iconst_1
       7: putfield      #7                  // Field parentsPerCommitBuildStage:B
      10: return

  int getKeyListDistance();
    Code:
       0: aload_0
       1: getfield      #8                  // Field keyListDistanceBuildStage:B
       4: iconst_m1
       5: if_icmpne     20
       8: new           #26                 // class java/lang/IllegalStateException
      11: dup
      12: aload_0
      13: invokespecial #27                 // Method formatInitCycleMessage:()Ljava/lang/String;
      16: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #8                  // Field keyListDistanceBuildStage:B
      24: ifne          48
      27: aload_0
      28: iconst_m1
      29: putfield      #8                  // Field keyListDistanceBuildStage:B
      32: aload_0
      33: aload_0
      34: getfield      #3                  // Field this$0:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
      37: invokestatic  #38                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig.access$4400:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;)I
      40: putfield      #39                 // Field keyListDistance:I
      43: aload_0
      44: iconst_1
      45: putfield      #8                  // Field keyListDistanceBuildStage:B
      48: aload_0
      49: getfield      #39                 // Field keyListDistance:I
      52: ireturn

  void keyListDistance(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #39                 // Field keyListDistance:I
       5: aload_0
       6: iconst_1
       7: putfield      #8                  // Field keyListDistanceBuildStage:B
      10: return

  int getMaxKeyListSize();
    Code:
       0: aload_0
       1: getfield      #9                  // Field maxKeyListSizeBuildStage:B
       4: iconst_m1
       5: if_icmpne     20
       8: new           #26                 // class java/lang/IllegalStateException
      11: dup
      12: aload_0
      13: invokespecial #27                 // Method formatInitCycleMessage:()Ljava/lang/String;
      16: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #9                  // Field maxKeyListSizeBuildStage:B
      24: ifne          48
      27: aload_0
      28: iconst_m1
      29: putfield      #9                  // Field maxKeyListSizeBuildStage:B
      32: aload_0
      33: aload_0
      34: getfield      #3                  // Field this$0:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
      37: invokestatic  #40                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig.access$4500:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;)I
      40: putfield      #41                 // Field maxKeyListSize:I
      43: aload_0
      44: iconst_1
      45: putfield      #9                  // Field maxKeyListSizeBuildStage:B
      48: aload_0
      49: getfield      #41                 // Field maxKeyListSize:I
      52: ireturn

  void maxKeyListSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #41                 // Field maxKeyListSize:I
       5: aload_0
       6: iconst_1
       7: putfield      #9                  // Field maxKeyListSizeBuildStage:B
      10: return

  int getMaxKeyListEntitySize();
    Code:
       0: aload_0
       1: getfield      #10                 // Field maxKeyListEntitySizeBuildStage:B
       4: iconst_m1
       5: if_icmpne     20
       8: new           #26                 // class java/lang/IllegalStateException
      11: dup
      12: aload_0
      13: invokespecial #27                 // Method formatInitCycleMessage:()Ljava/lang/String;
      16: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #10                 // Field maxKeyListEntitySizeBuildStage:B
      24: ifne          48
      27: aload_0
      28: iconst_m1
      29: putfield      #10                 // Field maxKeyListEntitySizeBuildStage:B
      32: aload_0
      33: aload_0
      34: getfield      #3                  // Field this$0:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
      37: invokestatic  #42                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig.access$4600:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;)I
      40: putfield      #43                 // Field maxKeyListEntitySize:I
      43: aload_0
      44: iconst_1
      45: putfield      #10                 // Field maxKeyListEntitySizeBuildStage:B
      48: aload_0
      49: getfield      #43                 // Field maxKeyListEntitySize:I
      52: ireturn

  void maxKeyListEntitySize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #43                 // Field maxKeyListEntitySize:I
       5: aload_0
       6: iconst_1
       7: putfield      #10                 // Field maxKeyListEntitySizeBuildStage:B
      10: return

  float getKeyListHashLoadFactor();
    Code:
       0: aload_0
       1: getfield      #11                 // Field keyListHashLoadFactorBuildStage:B
       4: iconst_m1
       5: if_icmpne     20
       8: new           #26                 // class java/lang/IllegalStateException
      11: dup
      12: aload_0
      13: invokespecial #27                 // Method formatInitCycleMessage:()Ljava/lang/String;
      16: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #11                 // Field keyListHashLoadFactorBuildStage:B
      24: ifne          48
      27: aload_0
      28: iconst_m1
      29: putfield      #11                 // Field keyListHashLoadFactorBuildStage:B
      32: aload_0
      33: aload_0
      34: getfield      #3                  // Field this$0:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
      37: invokestatic  #44                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig.access$4700:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;)F
      40: putfield      #45                 // Field keyListHashLoadFactor:F
      43: aload_0
      44: iconst_1
      45: putfield      #11                 // Field keyListHashLoadFactorBuildStage:B
      48: aload_0
      49: getfield      #45                 // Field keyListHashLoadFactor:F
      52: freturn

  void keyListHashLoadFactor(float);
    Code:
       0: aload_0
       1: fload_1
       2: putfield      #45                 // Field keyListHashLoadFactor:F
       5: aload_0
       6: iconst_1
       7: putfield      #11                 // Field keyListHashLoadFactorBuildStage:B
      10: return

  int getKeyListEntityPrefetch();
    Code:
       0: aload_0
       1: getfield      #12                 // Field keyListEntityPrefetchBuildStage:B
       4: iconst_m1
       5: if_icmpne     20
       8: new           #26                 // class java/lang/IllegalStateException
      11: dup
      12: aload_0
      13: invokespecial #27                 // Method formatInitCycleMessage:()Ljava/lang/String;
      16: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #12                 // Field keyListEntityPrefetchBuildStage:B
      24: ifne          48
      27: aload_0
      28: iconst_m1
      29: putfield      #12                 // Field keyListEntityPrefetchBuildStage:B
      32: aload_0
      33: aload_0
      34: getfield      #3                  // Field this$0:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
      37: invokestatic  #46                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig.access$4800:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;)I
      40: putfield      #47                 // Field keyListEntityPrefetch:I
      43: aload_0
      44: iconst_1
      45: putfield      #12                 // Field keyListEntityPrefetchBuildStage:B
      48: aload_0
      49: getfield      #47                 // Field keyListEntityPrefetch:I
      52: ireturn

  void keyListEntityPrefetch(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #47                 // Field keyListEntityPrefetch:I
       5: aload_0
       6: iconst_1
       7: putfield      #12                 // Field keyListEntityPrefetchBuildStage:B
      10: return

  long getCommitTimeout();
    Code:
       0: aload_0
       1: getfield      #13                 // Field commitTimeoutBuildStage:B
       4: iconst_m1
       5: if_icmpne     20
       8: new           #26                 // class java/lang/IllegalStateException
      11: dup
      12: aload_0
      13: invokespecial #27                 // Method formatInitCycleMessage:()Ljava/lang/String;
      16: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #13                 // Field commitTimeoutBuildStage:B
      24: ifne          48
      27: aload_0
      28: iconst_m1
      29: putfield      #13                 // Field commitTimeoutBuildStage:B
      32: aload_0
      33: aload_0
      34: getfield      #3                  // Field this$0:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
      37: invokestatic  #48                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig.access$4900:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;)J
      40: putfield      #49                 // Field commitTimeout:J
      43: aload_0
      44: iconst_1
      45: putfield      #13                 // Field commitTimeoutBuildStage:B
      48: aload_0
      49: getfield      #49                 // Field commitTimeout:J
      52: lreturn

  void commitTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #49                 // Field commitTimeout:J
       5: aload_0
       6: iconst_1
       7: putfield      #13                 // Field commitTimeoutBuildStage:B
      10: return

  int getCommitRetries();
    Code:
       0: aload_0
       1: getfield      #14                 // Field commitRetriesBuildStage:B
       4: iconst_m1
       5: if_icmpne     20
       8: new           #26                 // class java/lang/IllegalStateException
      11: dup
      12: aload_0
      13: invokespecial #27                 // Method formatInitCycleMessage:()Ljava/lang/String;
      16: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #14                 // Field commitRetriesBuildStage:B
      24: ifne          48
      27: aload_0
      28: iconst_m1
      29: putfield      #14                 // Field commitRetriesBuildStage:B
      32: aload_0
      33: aload_0
      34: getfield      #3                  // Field this$0:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
      37: invokestatic  #50                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig.access$5000:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;)I
      40: putfield      #51                 // Field commitRetries:I
      43: aload_0
      44: iconst_1
      45: putfield      #14                 // Field commitRetriesBuildStage:B
      48: aload_0
      49: getfield      #51                 // Field commitRetries:I
      52: ireturn

  void commitRetries(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #51                 // Field commitRetries:I
       5: aload_0
       6: iconst_1
       7: putfield      #14                 // Field commitRetriesBuildStage:B
      10: return

  long getRetryInitialSleepMillisLower();
    Code:
       0: aload_0
       1: getfield      #15                 // Field retryInitialSleepMillisLowerBuildStage:B
       4: iconst_m1
       5: if_icmpne     20
       8: new           #26                 // class java/lang/IllegalStateException
      11: dup
      12: aload_0
      13: invokespecial #27                 // Method formatInitCycleMessage:()Ljava/lang/String;
      16: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #15                 // Field retryInitialSleepMillisLowerBuildStage:B
      24: ifne          48
      27: aload_0
      28: iconst_m1
      29: putfield      #15                 // Field retryInitialSleepMillisLowerBuildStage:B
      32: aload_0
      33: aload_0
      34: getfield      #3                  // Field this$0:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
      37: invokestatic  #52                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig.access$5100:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;)J
      40: putfield      #53                 // Field retryInitialSleepMillisLower:J
      43: aload_0
      44: iconst_1
      45: putfield      #15                 // Field retryInitialSleepMillisLowerBuildStage:B
      48: aload_0
      49: getfield      #53                 // Field retryInitialSleepMillisLower:J
      52: lreturn

  void retryInitialSleepMillisLower(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #53                 // Field retryInitialSleepMillisLower:J
       5: aload_0
       6: iconst_1
       7: putfield      #15                 // Field retryInitialSleepMillisLowerBuildStage:B
      10: return

  long getRetryInitialSleepMillisUpper();
    Code:
       0: aload_0
       1: getfield      #16                 // Field retryInitialSleepMillisUpperBuildStage:B
       4: iconst_m1
       5: if_icmpne     20
       8: new           #26                 // class java/lang/IllegalStateException
      11: dup
      12: aload_0
      13: invokespecial #27                 // Method formatInitCycleMessage:()Ljava/lang/String;
      16: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #16                 // Field retryInitialSleepMillisUpperBuildStage:B
      24: ifne          48
      27: aload_0
      28: iconst_m1
      29: putfield      #16                 // Field retryInitialSleepMillisUpperBuildStage:B
      32: aload_0
      33: aload_0
      34: getfield      #3                  // Field this$0:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
      37: invokestatic  #54                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig.access$5200:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;)J
      40: putfield      #55                 // Field retryInitialSleepMillisUpper:J
      43: aload_0
      44: iconst_1
      45: putfield      #16                 // Field retryInitialSleepMillisUpperBuildStage:B
      48: aload_0
      49: getfield      #55                 // Field retryInitialSleepMillisUpper:J
      52: lreturn

  void retryInitialSleepMillisUpper(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #55                 // Field retryInitialSleepMillisUpper:J
       5: aload_0
       6: iconst_1
       7: putfield      #16                 // Field retryInitialSleepMillisUpperBuildStage:B
      10: return

  long getRetryMaxSleepMillis();
    Code:
       0: aload_0
       1: getfield      #17                 // Field retryMaxSleepMillisBuildStage:B
       4: iconst_m1
       5: if_icmpne     20
       8: new           #26                 // class java/lang/IllegalStateException
      11: dup
      12: aload_0
      13: invokespecial #27                 // Method formatInitCycleMessage:()Ljava/lang/String;
      16: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #17                 // Field retryMaxSleepMillisBuildStage:B
      24: ifne          48
      27: aload_0
      28: iconst_m1
      29: putfield      #17                 // Field retryMaxSleepMillisBuildStage:B
      32: aload_0
      33: aload_0
      34: getfield      #3                  // Field this$0:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
      37: invokestatic  #56                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig.access$5300:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;)J
      40: putfield      #57                 // Field retryMaxSleepMillis:J
      43: aload_0
      44: iconst_1
      45: putfield      #17                 // Field retryMaxSleepMillisBuildStage:B
      48: aload_0
      49: getfield      #57                 // Field retryMaxSleepMillis:J
      52: lreturn

  void retryMaxSleepMillis(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #57                 // Field retryMaxSleepMillis:J
       5: aload_0
       6: iconst_1
       7: putfield      #17                 // Field retryMaxSleepMillisBuildStage:B
      10: return

  java.time.Clock getClock();
    Code:
       0: aload_0
       1: getfield      #18                 // Field clockBuildStage:B
       4: iconst_m1
       5: if_icmpne     20
       8: new           #26                 // class java/lang/IllegalStateException
      11: dup
      12: aload_0
      13: invokespecial #27                 // Method formatInitCycleMessage:()Ljava/lang/String;
      16: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #18                 // Field clockBuildStage:B
      24: ifne          56
      27: aload_0
      28: iconst_m1
      29: putfield      #18                 // Field clockBuildStage:B
      32: aload_0
      33: aload_0
      34: getfield      #3                  // Field this$0:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
      37: invokestatic  #58                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig.access$5400:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;)Ljava/time/Clock;
      40: ldc           #59                 // String clock
      42: invokestatic  #33                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      45: checkcast     #60                 // class java/time/Clock
      48: putfield      #61                 // Field clock:Ljava/time/Clock;
      51: aload_0
      52: iconst_1
      53: putfield      #18                 // Field clockBuildStage:B
      56: aload_0
      57: getfield      #61                 // Field clock:Ljava/time/Clock;
      60: areturn

  void clock(java.time.Clock);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #61                 // Field clock:Ljava/time/Clock;
       5: aload_0
       6: iconst_1
       7: putfield      #18                 // Field clockBuildStage:B
      10: return

  int getParentsPerRefLogEntry();
    Code:
       0: aload_0
       1: getfield      #19                 // Field parentsPerRefLogEntryBuildStage:B
       4: iconst_m1
       5: if_icmpne     20
       8: new           #26                 // class java/lang/IllegalStateException
      11: dup
      12: aload_0
      13: invokespecial #27                 // Method formatInitCycleMessage:()Ljava/lang/String;
      16: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #19                 // Field parentsPerRefLogEntryBuildStage:B
      24: ifne          48
      27: aload_0
      28: iconst_m1
      29: putfield      #19                 // Field parentsPerRefLogEntryBuildStage:B
      32: aload_0
      33: aload_0
      34: getfield      #3                  // Field this$0:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
      37: invokestatic  #62                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig.access$5500:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;)I
      40: putfield      #63                 // Field parentsPerRefLogEntry:I
      43: aload_0
      44: iconst_1
      45: putfield      #19                 // Field parentsPerRefLogEntryBuildStage:B
      48: aload_0
      49: getfield      #63                 // Field parentsPerRefLogEntry:I
      52: ireturn

  void parentsPerRefLogEntry(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #63                 // Field parentsPerRefLogEntry:I
       5: aload_0
       6: iconst_1
       7: putfield      #19                 // Field parentsPerRefLogEntryBuildStage:B
      10: return

  long getAssumedWallClockDriftMicros();
    Code:
       0: aload_0
       1: getfield      #20                 // Field assumedWallClockDriftMicrosBuildStage:B
       4: iconst_m1
       5: if_icmpne     20
       8: new           #26                 // class java/lang/IllegalStateException
      11: dup
      12: aload_0
      13: invokespecial #27                 // Method formatInitCycleMessage:()Ljava/lang/String;
      16: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #20                 // Field assumedWallClockDriftMicrosBuildStage:B
      24: ifne          48
      27: aload_0
      28: iconst_m1
      29: putfield      #20                 // Field assumedWallClockDriftMicrosBuildStage:B
      32: aload_0
      33: aload_0
      34: getfield      #3                  // Field this$0:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
      37: invokestatic  #64                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig.access$5600:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;)J
      40: putfield      #65                 // Field assumedWallClockDriftMicros:J
      43: aload_0
      44: iconst_1
      45: putfield      #20                 // Field assumedWallClockDriftMicrosBuildStage:B
      48: aload_0
      49: getfield      #65                 // Field assumedWallClockDriftMicros:J
      52: lreturn

  void assumedWallClockDriftMicros(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #65                 // Field assumedWallClockDriftMicros:J
       5: aload_0
       6: iconst_1
       7: putfield      #20                 // Field assumedWallClockDriftMicrosBuildStage:B
      10: return

  int getReferencesSegmentSize();
    Code:
       0: aload_0
       1: getfield      #21                 // Field referencesSegmentSizeBuildStage:B
       4: iconst_m1
       5: if_icmpne     20
       8: new           #26                 // class java/lang/IllegalStateException
      11: dup
      12: aload_0
      13: invokespecial #27                 // Method formatInitCycleMessage:()Ljava/lang/String;
      16: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #21                 // Field referencesSegmentSizeBuildStage:B
      24: ifne          48
      27: aload_0
      28: iconst_m1
      29: putfield      #21                 // Field referencesSegmentSizeBuildStage:B
      32: aload_0
      33: aload_0
      34: getfield      #3                  // Field this$0:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
      37: invokestatic  #66                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig.access$5700:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;)I
      40: putfield      #67                 // Field referencesSegmentSize:I
      43: aload_0
      44: iconst_1
      45: putfield      #21                 // Field referencesSegmentSizeBuildStage:B
      48: aload_0
      49: getfield      #67                 // Field referencesSegmentSize:I
      52: ireturn

  void referencesSegmentSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #67                 // Field referencesSegmentSize:I
       5: aload_0
       6: iconst_1
       7: putfield      #21                 // Field referencesSegmentSizeBuildStage:B
      10: return

  int getReferencesSegmentPrefetch();
    Code:
       0: aload_0
       1: getfield      #22                 // Field referencesSegmentPrefetchBuildStage:B
       4: iconst_m1
       5: if_icmpne     20
       8: new           #26                 // class java/lang/IllegalStateException
      11: dup
      12: aload_0
      13: invokespecial #27                 // Method formatInitCycleMessage:()Ljava/lang/String;
      16: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #22                 // Field referencesSegmentPrefetchBuildStage:B
      24: ifne          48
      27: aload_0
      28: iconst_m1
      29: putfield      #22                 // Field referencesSegmentPrefetchBuildStage:B
      32: aload_0
      33: aload_0
      34: getfield      #3                  // Field this$0:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
      37: invokestatic  #68                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig.access$5800:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;)I
      40: putfield      #69                 // Field referencesSegmentPrefetch:I
      43: aload_0
      44: iconst_1
      45: putfield      #22                 // Field referencesSegmentPrefetchBuildStage:B
      48: aload_0
      49: getfield      #69                 // Field referencesSegmentPrefetch:I
      52: ireturn

  void referencesSegmentPrefetch(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #69                 // Field referencesSegmentPrefetch:I
       5: aload_0
       6: iconst_1
       7: putfield      #22                 // Field referencesSegmentPrefetchBuildStage:B
      10: return

  int getReferenceNamesBatchSize();
    Code:
       0: aload_0
       1: getfield      #23                 // Field referenceNamesBatchSizeBuildStage:B
       4: iconst_m1
       5: if_icmpne     20
       8: new           #26                 // class java/lang/IllegalStateException
      11: dup
      12: aload_0
      13: invokespecial #27                 // Method formatInitCycleMessage:()Ljava/lang/String;
      16: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #23                 // Field referenceNamesBatchSizeBuildStage:B
      24: ifne          48
      27: aload_0
      28: iconst_m1
      29: putfield      #23                 // Field referenceNamesBatchSizeBuildStage:B
      32: aload_0
      33: aload_0
      34: getfield      #3                  // Field this$0:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
      37: invokestatic  #70                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig.access$5900:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;)I
      40: putfield      #71                 // Field referenceNamesBatchSize:I
      43: aload_0
      44: iconst_1
      45: putfield      #23                 // Field referenceNamesBatchSizeBuildStage:B
      48: aload_0
      49: getfield      #71                 // Field referenceNamesBatchSize:I
      52: ireturn

  void referenceNamesBatchSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #71                 // Field referenceNamesBatchSize:I
       5: aload_0
       6: iconst_1
       7: putfield      #23                 // Field referenceNamesBatchSizeBuildStage:B
      10: return

  int getRefLogStripes();
    Code:
       0: aload_0
       1: getfield      #24                 // Field refLogStripesBuildStage:B
       4: iconst_m1
       5: if_icmpne     20
       8: new           #26                 // class java/lang/IllegalStateException
      11: dup
      12: aload_0
      13: invokespecial #27                 // Method formatInitCycleMessage:()Ljava/lang/String;
      16: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #24                 // Field refLogStripesBuildStage:B
      24: ifne          48
      27: aload_0
      28: iconst_m1
      29: putfield      #24                 // Field refLogStripesBuildStage:B
      32: aload_0
      33: aload_0
      34: getfield      #3                  // Field this$0:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
      37: invokestatic  #72                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig.access$6000:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;)I
      40: putfield      #73                 // Field refLogStripes:I
      43: aload_0
      44: iconst_1
      45: putfield      #24                 // Field refLogStripesBuildStage:B
      48: aload_0
      49: getfield      #73                 // Field refLogStripes:I
      52: ireturn

  void refLogStripes(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #73                 // Field refLogStripes:I
       5: aload_0
       6: iconst_1
       7: putfield      #24                 // Field refLogStripesBuildStage:B
      10: return

  int getCommitLogScanPrefetch();
    Code:
       0: aload_0
       1: getfield      #25                 // Field commitLogScanPrefetchBuildStage:B
       4: iconst_m1
       5: if_icmpne     20
       8: new           #26                 // class java/lang/IllegalStateException
      11: dup
      12: aload_0
      13: invokespecial #27                 // Method formatInitCycleMessage:()Ljava/lang/String;
      16: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #25                 // Field commitLogScanPrefetchBuildStage:B
      24: ifne          48
      27: aload_0
      28: iconst_m1
      29: putfield      #25                 // Field commitLogScanPrefetchBuildStage:B
      32: aload_0
      33: aload_0
      34: getfield      #3                  // Field this$0:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
      37: invokestatic  #74                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig.access$6100:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;)I
      40: putfield      #75                 // Field commitLogScanPrefetch:I
      43: aload_0
      44: iconst_1
      45: putfield      #25                 // Field commitLogScanPrefetchBuildStage:B
      48: aload_0
      49: getfield      #75                 // Field commitLogScanPrefetch:I
      52: ireturn

  void commitLogScanPrefetch(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #75                 // Field commitLogScanPrefetch:I
       5: aload_0
       6: iconst_1
       7: putfield      #25                 // Field commitLogScanPrefetchBuildStage:B
      10: return

  private java.lang.String formatInitCycleMessage();
    Code:
       0: new           #76                 // class java/util/ArrayList
       3: dup
       4: invokespecial #77                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #5                  // Field validateNamespacesBuildStage:B
      12: iconst_m1
      13: if_icmpne     25
      16: aload_1
      17: ldc           #78                 // String validateNamespaces
      19: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      24: pop
      25: aload_0
      26: getfield      #6                  // Field repositoryIdBuildStage:B
      29: iconst_m1
      30: if_icmpne     42
      33: aload_1
      34: ldc           #32                 // String repositoryId
      36: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      41: pop
      42: aload_0
      43: getfield      #7                  // Field parentsPerCommitBuildStage:B
      46: iconst_m1
      47: if_icmpne     59
      50: aload_1
      51: ldc           #80                 // String parentsPerCommit
      53: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      58: pop
      59: aload_0
      60: getfield      #8                  // Field keyListDistanceBuildStage:B
      63: iconst_m1
      64: if_icmpne     76
      67: aload_1
      68: ldc           #81                 // String keyListDistance
      70: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      75: pop
      76: aload_0
      77: getfield      #9                  // Field maxKeyListSizeBuildStage:B
      80: iconst_m1
      81: if_icmpne     93
      84: aload_1
      85: ldc           #82                 // String maxKeyListSize
      87: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      92: pop
      93: aload_0
      94: getfield      #10                 // Field maxKeyListEntitySizeBuildStage:B
      97: iconst_m1
      98: if_icmpne     110
     101: aload_1
     102: ldc           #83                 // String maxKeyListEntitySize
     104: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     109: pop
     110: aload_0
     111: getfield      #11                 // Field keyListHashLoadFactorBuildStage:B
     114: iconst_m1
     115: if_icmpne     127
     118: aload_1
     119: ldc           #84                 // String keyListHashLoadFactor
     121: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     126: pop
     127: aload_0
     128: getfield      #12                 // Field keyListEntityPrefetchBuildStage:B
     131: iconst_m1
     132: if_icmpne     144
     135: aload_1
     136: ldc           #85                 // String keyListEntityPrefetch
     138: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     143: pop
     144: aload_0
     145: getfield      #13                 // Field commitTimeoutBuildStage:B
     148: iconst_m1
     149: if_icmpne     161
     152: aload_1
     153: ldc           #86                 // String commitTimeout
     155: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     160: pop
     161: aload_0
     162: getfield      #14                 // Field commitRetriesBuildStage:B
     165: iconst_m1
     166: if_icmpne     178
     169: aload_1
     170: ldc           #87                 // String commitRetries
     172: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     177: pop
     178: aload_0
     179: getfield      #15                 // Field retryInitialSleepMillisLowerBuildStage:B
     182: iconst_m1
     183: if_icmpne     195
     186: aload_1
     187: ldc           #88                 // String retryInitialSleepMillisLower
     189: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     194: pop
     195: aload_0
     196: getfield      #16                 // Field retryInitialSleepMillisUpperBuildStage:B
     199: iconst_m1
     200: if_icmpne     212
     203: aload_1
     204: ldc           #89                 // String retryInitialSleepMillisUpper
     206: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     211: pop
     212: aload_0
     213: getfield      #17                 // Field retryMaxSleepMillisBuildStage:B
     216: iconst_m1
     217: if_icmpne     229
     220: aload_1
     221: ldc           #90                 // String retryMaxSleepMillis
     223: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     228: pop
     229: aload_0
     230: getfield      #18                 // Field clockBuildStage:B
     233: iconst_m1
     234: if_icmpne     246
     237: aload_1
     238: ldc           #59                 // String clock
     240: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     245: pop
     246: aload_0
     247: getfield      #19                 // Field parentsPerRefLogEntryBuildStage:B
     250: iconst_m1
     251: if_icmpne     263
     254: aload_1
     255: ldc           #91                 // String parentsPerRefLogEntry
     257: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     262: pop
     263: aload_0
     264: getfield      #20                 // Field assumedWallClockDriftMicrosBuildStage:B
     267: iconst_m1
     268: if_icmpne     280
     271: aload_1
     272: ldc           #92                 // String assumedWallClockDriftMicros
     274: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     279: pop
     280: aload_0
     281: getfield      #21                 // Field referencesSegmentSizeBuildStage:B
     284: iconst_m1
     285: if_icmpne     297
     288: aload_1
     289: ldc           #93                 // String referencesSegmentSize
     291: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     296: pop
     297: aload_0
     298: getfield      #22                 // Field referencesSegmentPrefetchBuildStage:B
     301: iconst_m1
     302: if_icmpne     314
     305: aload_1
     306: ldc           #94                 // String referencesSegmentPrefetch
     308: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     313: pop
     314: aload_0
     315: getfield      #23                 // Field referenceNamesBatchSizeBuildStage:B
     318: iconst_m1
     319: if_icmpne     331
     322: aload_1
     323: ldc           #95                 // String referenceNamesBatchSize
     325: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     330: pop
     331: aload_0
     332: getfield      #24                 // Field refLogStripesBuildStage:B
     335: iconst_m1
     336: if_icmpne     348
     339: aload_1
     340: ldc           #96                 // String refLogStripes
     342: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     347: pop
     348: aload_0
     349: getfield      #25                 // Field commitLogScanPrefetchBuildStage:B
     352: iconst_m1
     353: if_icmpne     365
     356: aload_1
     357: ldc           #97                 // String commitLogScanPrefetch
     359: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     364: pop
     365: new           #98                 // class java/lang/StringBuilder
     368: dup
     369: invokespecial #99                 // Method java/lang/StringBuilder."<init>":()V
     372: ldc           #100                // String Cannot build AdjustableNonTransactionalDatabaseAdapterConfig, attribute initializers form cycle
     374: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     377: aload_1
     378: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     381: invokevirtual #103                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     384: areturn

  org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim(org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig, org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method "<init>":(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;)V
       5: return
}
