Compiled from "ImmutableAdjustableNonTransactionalDatabaseAdapterConfig.java"
public final class org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig implements org.projectnessie.versioned.persist.nontx.AdjustableNonTransactionalDatabaseAdapterConfig {
  private final boolean validateNamespaces;

  private final java.lang.String repositoryId;

  private final int parentsPerCommit;

  private final int keyListDistance;

  private final int maxKeyListSize;

  private final int maxKeyListEntitySize;

  private final float keyListHashLoadFactor;

  private final int keyListEntityPrefetch;

  private final long commitTimeout;

  private final int commitRetries;

  private final long retryInitialSleepMillisLower;

  private final long retryInitialSleepMillisUpper;

  private final long retryMaxSleepMillis;

  private final java.time.Clock clock;

  private final int parentsPerRefLogEntry;

  private final long assumedWallClockDriftMicros;

  private final int referencesSegmentSize;

  private final int referencesSegmentPrefetch;

  private final int referenceNamesBatchSize;

  private final int refLogStripes;

  private final int commitLogScanPrefetch;

  private static final byte STAGE_INITIALIZING;

  private static final byte STAGE_UNINITIALIZED;

  private static final byte STAGE_INITIALIZED;

  private volatile transient org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim initShim;

  private org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig(org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #24                 // class org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim
       8: dup
       9: aload_0
      10: aconst_null
      11: invokespecial #25                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim."<init>":(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$1;)V
      14: putfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
      17: aload_1
      18: invokestatic  #27                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$000:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)Z
      21: ifeq          35
      24: aload_0
      25: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
      28: aload_1
      29: invokestatic  #28                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$100:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)Z
      32: invokevirtual #29                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.validateNamespaces:(Z)V
      35: aload_1
      36: invokestatic  #30                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$200:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)Ljava/lang/String;
      39: ifnull        53
      42: aload_0
      43: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
      46: aload_1
      47: invokestatic  #30                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$200:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)Ljava/lang/String;
      50: invokevirtual #31                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.repositoryId:(Ljava/lang/String;)V
      53: aload_1
      54: invokestatic  #32                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$300:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)Z
      57: ifeq          71
      60: aload_0
      61: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
      64: aload_1
      65: invokestatic  #33                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$400:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)I
      68: invokevirtual #34                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.parentsPerCommit:(I)V
      71: aload_1
      72: invokestatic  #35                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$500:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)Z
      75: ifeq          89
      78: aload_0
      79: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
      82: aload_1
      83: invokestatic  #36                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$600:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)I
      86: invokevirtual #37                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.keyListDistance:(I)V
      89: aload_1
      90: invokestatic  #38                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$700:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)Z
      93: ifeq          107
      96: aload_0
      97: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     100: aload_1
     101: invokestatic  #39                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$800:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)I
     104: invokevirtual #40                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.maxKeyListSize:(I)V
     107: aload_1
     108: invokestatic  #41                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$900:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)Z
     111: ifeq          125
     114: aload_0
     115: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     118: aload_1
     119: invokestatic  #42                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$1000:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)I
     122: invokevirtual #43                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.maxKeyListEntitySize:(I)V
     125: aload_1
     126: invokestatic  #44                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$1100:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)Z
     129: ifeq          143
     132: aload_0
     133: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     136: aload_1
     137: invokestatic  #45                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$1200:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)F
     140: invokevirtual #46                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.keyListHashLoadFactor:(F)V
     143: aload_1
     144: invokestatic  #47                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$1300:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)Z
     147: ifeq          161
     150: aload_0
     151: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     154: aload_1
     155: invokestatic  #48                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$1400:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)I
     158: invokevirtual #49                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.keyListEntityPrefetch:(I)V
     161: aload_1
     162: invokestatic  #50                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$1500:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)Z
     165: ifeq          179
     168: aload_0
     169: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     172: aload_1
     173: invokestatic  #51                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$1600:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)J
     176: invokevirtual #52                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.commitTimeout:(J)V
     179: aload_1
     180: invokestatic  #53                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$1700:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)Z
     183: ifeq          197
     186: aload_0
     187: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     190: aload_1
     191: invokestatic  #54                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$1800:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)I
     194: invokevirtual #55                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.commitRetries:(I)V
     197: aload_1
     198: invokestatic  #56                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$1900:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)Z
     201: ifeq          215
     204: aload_0
     205: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     208: aload_1
     209: invokestatic  #57                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$2000:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)J
     212: invokevirtual #58                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.retryInitialSleepMillisLower:(J)V
     215: aload_1
     216: invokestatic  #59                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$2100:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)Z
     219: ifeq          233
     222: aload_0
     223: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     226: aload_1
     227: invokestatic  #60                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$2200:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)J
     230: invokevirtual #61                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.retryInitialSleepMillisUpper:(J)V
     233: aload_1
     234: invokestatic  #62                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$2300:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)Z
     237: ifeq          251
     240: aload_0
     241: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     244: aload_1
     245: invokestatic  #63                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$2400:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)J
     248: invokevirtual #64                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.retryMaxSleepMillis:(J)V
     251: aload_1
     252: invokestatic  #65                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$2500:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)Ljava/time/Clock;
     255: ifnull        269
     258: aload_0
     259: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     262: aload_1
     263: invokestatic  #65                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$2500:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)Ljava/time/Clock;
     266: invokevirtual #66                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.clock:(Ljava/time/Clock;)V
     269: aload_1
     270: invokestatic  #67                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$2600:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)Z
     273: ifeq          287
     276: aload_0
     277: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     280: aload_1
     281: invokestatic  #68                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$2700:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)I
     284: invokevirtual #69                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.parentsPerRefLogEntry:(I)V
     287: aload_1
     288: invokestatic  #70                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$2800:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)Z
     291: ifeq          305
     294: aload_0
     295: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     298: aload_1
     299: invokestatic  #71                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$2900:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)J
     302: invokevirtual #72                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.assumedWallClockDriftMicros:(J)V
     305: aload_1
     306: invokestatic  #73                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$3000:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)Z
     309: ifeq          323
     312: aload_0
     313: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     316: aload_1
     317: invokestatic  #74                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$3100:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)I
     320: invokevirtual #75                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.referencesSegmentSize:(I)V
     323: aload_1
     324: invokestatic  #76                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$3200:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)Z
     327: ifeq          341
     330: aload_0
     331: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     334: aload_1
     335: invokestatic  #77                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$3300:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)I
     338: invokevirtual #78                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.referencesSegmentPrefetch:(I)V
     341: aload_1
     342: invokestatic  #79                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$3400:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)Z
     345: ifeq          359
     348: aload_0
     349: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     352: aload_1
     353: invokestatic  #80                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$3500:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)I
     356: invokevirtual #81                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.referenceNamesBatchSize:(I)V
     359: aload_1
     360: invokestatic  #82                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$3600:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)Z
     363: ifeq          377
     366: aload_0
     367: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     370: aload_1
     371: invokestatic  #83                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$3700:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)I
     374: invokevirtual #84                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.refLogStripes:(I)V
     377: aload_1
     378: invokestatic  #85                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$3800:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)Z
     381: ifeq          395
     384: aload_0
     385: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     388: aload_1
     389: invokestatic  #86                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.access$3900:(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)I
     392: invokevirtual #87                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.commitLogScanPrefetch:(I)V
     395: aload_0
     396: aload_0
     397: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     400: invokevirtual #88                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.validateNamespaces:()Z
     403: putfield      #89                 // Field validateNamespaces:Z
     406: aload_0
     407: aload_0
     408: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     411: invokevirtual #90                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getRepositoryId:()Ljava/lang/String;
     414: putfield      #91                 // Field repositoryId:Ljava/lang/String;
     417: aload_0
     418: aload_0
     419: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     422: invokevirtual #92                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getParentsPerCommit:()I
     425: putfield      #93                 // Field parentsPerCommit:I
     428: aload_0
     429: aload_0
     430: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     433: invokevirtual #94                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getKeyListDistance:()I
     436: putfield      #95                 // Field keyListDistance:I
     439: aload_0
     440: aload_0
     441: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     444: invokevirtual #96                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getMaxKeyListSize:()I
     447: putfield      #97                 // Field maxKeyListSize:I
     450: aload_0
     451: aload_0
     452: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     455: invokevirtual #98                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getMaxKeyListEntitySize:()I
     458: putfield      #99                 // Field maxKeyListEntitySize:I
     461: aload_0
     462: aload_0
     463: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     466: invokevirtual #100                // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getKeyListHashLoadFactor:()F
     469: putfield      #101                // Field keyListHashLoadFactor:F
     472: aload_0
     473: aload_0
     474: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     477: invokevirtual #102                // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getKeyListEntityPrefetch:()I
     480: putfield      #103                // Field keyListEntityPrefetch:I
     483: aload_0
     484: aload_0
     485: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     488: invokevirtual #104                // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getCommitTimeout:()J
     491: putfield      #105                // Field commitTimeout:J
     494: aload_0
     495: aload_0
     496: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     499: invokevirtual #106                // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getCommitRetries:()I
     502: putfield      #107                // Field commitRetries:I
     505: aload_0
     506: aload_0
     507: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     510: invokevirtual #108                // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getRetryInitialSleepMillisLower:()J
     513: putfield      #109                // Field retryInitialSleepMillisLower:J
     516: aload_0
     517: aload_0
     518: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     521: invokevirtual #110                // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getRetryInitialSleepMillisUpper:()J
     524: putfield      #111                // Field retryInitialSleepMillisUpper:J
     527: aload_0
     528: aload_0
     529: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     532: invokevirtual #112                // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getRetryMaxSleepMillis:()J
     535: putfield      #113                // Field retryMaxSleepMillis:J
     538: aload_0
     539: aload_0
     540: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     543: invokevirtual #114                // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getClock:()Ljava/time/Clock;
     546: putfield      #115                // Field clock:Ljava/time/Clock;
     549: aload_0
     550: aload_0
     551: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     554: invokevirtual #116                // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getParentsPerRefLogEntry:()I
     557: putfield      #117                // Field parentsPerRefLogEntry:I
     560: aload_0
     561: aload_0
     562: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     565: invokevirtual #118                // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getAssumedWallClockDriftMicros:()J
     568: putfield      #119                // Field assumedWallClockDriftMicros:J
     571: aload_0
     572: aload_0
     573: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     576: invokevirtual #120                // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getReferencesSegmentSize:()I
     579: putfield      #121                // Field referencesSegmentSize:I
     582: aload_0
     583: aload_0
     584: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     587: invokevirtual #122                // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getReferencesSegmentPrefetch:()I
     590: putfield      #123                // Field referencesSegmentPrefetch:I
     593: aload_0
     594: aload_0
     595: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     598: invokevirtual #124                // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getReferenceNamesBatchSize:()I
     601: putfield      #125                // Field referenceNamesBatchSize:I
     604: aload_0
     605: aload_0
     606: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     609: invokevirtual #126                // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getRefLogStripes:()I
     612: putfield      #127                // Field refLogStripes:I
     615: aload_0
     616: aload_0
     617: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     620: invokevirtual #128                // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getCommitLogScanPrefetch:()I
     623: putfield      #129                // Field commitLogScanPrefetch:I
     626: aload_0
     627: aconst_null
     628: putfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     631: return

  private org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig(boolean, java.lang.String, int, int, int, int, float, int, long, int, long, long, long, java.time.Clock, int, long, int, int, int, int, int);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #24                 // class org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim
       8: dup
       9: aload_0
      10: aconst_null
      11: invokespecial #25                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim."<init>":(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$1;)V
      14: putfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
      17: aload_0
      18: iload_1
      19: putfield      #89                 // Field validateNamespaces:Z
      22: aload_0
      23: aload_2
      24: putfield      #91                 // Field repositoryId:Ljava/lang/String;
      27: aload_0
      28: iload_3
      29: putfield      #93                 // Field parentsPerCommit:I
      32: aload_0
      33: iload         4
      35: putfield      #95                 // Field keyListDistance:I
      38: aload_0
      39: iload         5
      41: putfield      #97                 // Field maxKeyListSize:I
      44: aload_0
      45: iload         6
      47: putfield      #99                 // Field maxKeyListEntitySize:I
      50: aload_0
      51: fload         7
      53: putfield      #101                // Field keyListHashLoadFactor:F
      56: aload_0
      57: iload         8
      59: putfield      #103                // Field keyListEntityPrefetch:I
      62: aload_0
      63: lload         9
      65: putfield      #105                // Field commitTimeout:J
      68: aload_0
      69: iload         11
      71: putfield      #107                // Field commitRetries:I
      74: aload_0
      75: lload         12
      77: putfield      #109                // Field retryInitialSleepMillisLower:J
      80: aload_0
      81: lload         14
      83: putfield      #111                // Field retryInitialSleepMillisUpper:J
      86: aload_0
      87: lload         16
      89: putfield      #113                // Field retryMaxSleepMillis:J
      92: aload_0
      93: aload         18
      95: putfield      #115                // Field clock:Ljava/time/Clock;
      98: aload_0
      99: iload         19
     101: putfield      #117                // Field parentsPerRefLogEntry:I
     104: aload_0
     105: lload         20
     107: putfield      #119                // Field assumedWallClockDriftMicros:J
     110: aload_0
     111: iload         22
     113: putfield      #121                // Field referencesSegmentSize:I
     116: aload_0
     117: iload         23
     119: putfield      #123                // Field referencesSegmentPrefetch:I
     122: aload_0
     123: iload         24
     125: putfield      #125                // Field referenceNamesBatchSize:I
     128: aload_0
     129: iload         25
     131: putfield      #127                // Field refLogStripes:I
     134: aload_0
     135: iload         26
     137: putfield      #129                // Field commitLogScanPrefetch:I
     140: aload_0
     141: aconst_null
     142: putfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
     145: return

  private boolean validateNamespacesInitialize();
    Code:
       0: aload_0
       1: invokespecial #130                // InterfaceMethod org/projectnessie/versioned/persist/nontx/AdjustableNonTransactionalDatabaseAdapterConfig.validateNamespaces:()Z
       4: ireturn

  private java.lang.String getRepositoryIdInitialize();
    Code:
       0: aload_0
       1: invokespecial #131                // InterfaceMethod org/projectnessie/versioned/persist/nontx/AdjustableNonTransactionalDatabaseAdapterConfig.getRepositoryId:()Ljava/lang/String;
       4: areturn

  private int getParentsPerCommitInitialize();
    Code:
       0: aload_0
       1: invokespecial #132                // InterfaceMethod org/projectnessie/versioned/persist/nontx/AdjustableNonTransactionalDatabaseAdapterConfig.getParentsPerCommit:()I
       4: ireturn

  private int getKeyListDistanceInitialize();
    Code:
       0: aload_0
       1: invokespecial #133                // InterfaceMethod org/projectnessie/versioned/persist/nontx/AdjustableNonTransactionalDatabaseAdapterConfig.getKeyListDistance:()I
       4: ireturn

  private int getMaxKeyListSizeInitialize();
    Code:
       0: aload_0
       1: invokespecial #134                // InterfaceMethod org/projectnessie/versioned/persist/nontx/AdjustableNonTransactionalDatabaseAdapterConfig.getMaxKeyListSize:()I
       4: ireturn

  private int getMaxKeyListEntitySizeInitialize();
    Code:
       0: aload_0
       1: invokespecial #135                // InterfaceMethod org/projectnessie/versioned/persist/nontx/AdjustableNonTransactionalDatabaseAdapterConfig.getMaxKeyListEntitySize:()I
       4: ireturn

  private float getKeyListHashLoadFactorInitialize();
    Code:
       0: aload_0
       1: invokespecial #136                // InterfaceMethod org/projectnessie/versioned/persist/nontx/AdjustableNonTransactionalDatabaseAdapterConfig.getKeyListHashLoadFactor:()F
       4: freturn

  private int getKeyListEntityPrefetchInitialize();
    Code:
       0: aload_0
       1: invokespecial #137                // InterfaceMethod org/projectnessie/versioned/persist/nontx/AdjustableNonTransactionalDatabaseAdapterConfig.getKeyListEntityPrefetch:()I
       4: ireturn

  private long getCommitTimeoutInitialize();
    Code:
       0: aload_0
       1: invokespecial #138                // InterfaceMethod org/projectnessie/versioned/persist/nontx/AdjustableNonTransactionalDatabaseAdapterConfig.getCommitTimeout:()J
       4: lreturn

  private int getCommitRetriesInitialize();
    Code:
       0: aload_0
       1: invokespecial #139                // InterfaceMethod org/projectnessie/versioned/persist/nontx/AdjustableNonTransactionalDatabaseAdapterConfig.getCommitRetries:()I
       4: ireturn

  private long getRetryInitialSleepMillisLowerInitialize();
    Code:
       0: aload_0
       1: invokespecial #140                // InterfaceMethod org/projectnessie/versioned/persist/nontx/AdjustableNonTransactionalDatabaseAdapterConfig.getRetryInitialSleepMillisLower:()J
       4: lreturn

  private long getRetryInitialSleepMillisUpperInitialize();
    Code:
       0: aload_0
       1: invokespecial #141                // InterfaceMethod org/projectnessie/versioned/persist/nontx/AdjustableNonTransactionalDatabaseAdapterConfig.getRetryInitialSleepMillisUpper:()J
       4: lreturn

  private long getRetryMaxSleepMillisInitialize();
    Code:
       0: aload_0
       1: invokespecial #142                // InterfaceMethod org/projectnessie/versioned/persist/nontx/AdjustableNonTransactionalDatabaseAdapterConfig.getRetryMaxSleepMillis:()J
       4: lreturn

  private java.time.Clock getClockInitialize();
    Code:
       0: aload_0
       1: invokespecial #143                // InterfaceMethod org/projectnessie/versioned/persist/nontx/AdjustableNonTransactionalDatabaseAdapterConfig.getClock:()Ljava/time/Clock;
       4: areturn

  private int getParentsPerRefLogEntryInitialize();
    Code:
       0: aload_0
       1: invokespecial #144                // InterfaceMethod org/projectnessie/versioned/persist/nontx/AdjustableNonTransactionalDatabaseAdapterConfig.getParentsPerRefLogEntry:()I
       4: ireturn

  private long getAssumedWallClockDriftMicrosInitialize();
    Code:
       0: aload_0
       1: invokespecial #145                // InterfaceMethod org/projectnessie/versioned/persist/nontx/AdjustableNonTransactionalDatabaseAdapterConfig.getAssumedWallClockDriftMicros:()J
       4: lreturn

  private int getReferencesSegmentSizeInitialize();
    Code:
       0: aload_0
       1: invokespecial #146                // InterfaceMethod org/projectnessie/versioned/persist/nontx/AdjustableNonTransactionalDatabaseAdapterConfig.getReferencesSegmentSize:()I
       4: ireturn

  private int getReferencesSegmentPrefetchInitialize();
    Code:
       0: aload_0
       1: invokespecial #147                // InterfaceMethod org/projectnessie/versioned/persist/nontx/AdjustableNonTransactionalDatabaseAdapterConfig.getReferencesSegmentPrefetch:()I
       4: ireturn

  private int getReferenceNamesBatchSizeInitialize();
    Code:
       0: aload_0
       1: invokespecial #148                // InterfaceMethod org/projectnessie/versioned/persist/nontx/AdjustableNonTransactionalDatabaseAdapterConfig.getReferenceNamesBatchSize:()I
       4: ireturn

  private int getRefLogStripesInitialize();
    Code:
       0: aload_0
       1: invokespecial #149                // InterfaceMethod org/projectnessie/versioned/persist/nontx/AdjustableNonTransactionalDatabaseAdapterConfig.getRefLogStripes:()I
       4: ireturn

  private int getCommitLogScanPrefetchInitialize();
    Code:
       0: aload_0
       1: invokespecial #150                // InterfaceMethod org/projectnessie/versioned/persist/nontx/AdjustableNonTransactionalDatabaseAdapterConfig.getCommitLogScanPrefetch:()I
       4: ireturn

  public boolean validateNamespaces();
    Code:
       0: aload_0
       1: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokevirtual #88                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.validateNamespaces:()Z
      13: goto          20
      16: aload_0
      17: getfield      #89                 // Field validateNamespaces:Z
      20: ireturn

  public java.lang.String getRepositoryId();
    Code:
       0: aload_0
       1: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokevirtual #90                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getRepositoryId:()Ljava/lang/String;
      13: goto          20
      16: aload_0
      17: getfield      #91                 // Field repositoryId:Ljava/lang/String;
      20: areturn

  public int getParentsPerCommit();
    Code:
       0: aload_0
       1: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokevirtual #92                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getParentsPerCommit:()I
      13: goto          20
      16: aload_0
      17: getfield      #93                 // Field parentsPerCommit:I
      20: ireturn

  public int getKeyListDistance();
    Code:
       0: aload_0
       1: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokevirtual #94                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getKeyListDistance:()I
      13: goto          20
      16: aload_0
      17: getfield      #95                 // Field keyListDistance:I
      20: ireturn

  public int getMaxKeyListSize();
    Code:
       0: aload_0
       1: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokevirtual #96                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getMaxKeyListSize:()I
      13: goto          20
      16: aload_0
      17: getfield      #97                 // Field maxKeyListSize:I
      20: ireturn

  public int getMaxKeyListEntitySize();
    Code:
       0: aload_0
       1: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokevirtual #98                 // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getMaxKeyListEntitySize:()I
      13: goto          20
      16: aload_0
      17: getfield      #99                 // Field maxKeyListEntitySize:I
      20: ireturn

  public float getKeyListHashLoadFactor();
    Code:
       0: aload_0
       1: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokevirtual #100                // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getKeyListHashLoadFactor:()F
      13: goto          20
      16: aload_0
      17: getfield      #101                // Field keyListHashLoadFactor:F
      20: freturn

  public int getKeyListEntityPrefetch();
    Code:
       0: aload_0
       1: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokevirtual #102                // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getKeyListEntityPrefetch:()I
      13: goto          20
      16: aload_0
      17: getfield      #103                // Field keyListEntityPrefetch:I
      20: ireturn

  public long getCommitTimeout();
    Code:
       0: aload_0
       1: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokevirtual #104                // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getCommitTimeout:()J
      13: goto          20
      16: aload_0
      17: getfield      #105                // Field commitTimeout:J
      20: lreturn

  public int getCommitRetries();
    Code:
       0: aload_0
       1: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokevirtual #106                // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getCommitRetries:()I
      13: goto          20
      16: aload_0
      17: getfield      #107                // Field commitRetries:I
      20: ireturn

  public long getRetryInitialSleepMillisLower();
    Code:
       0: aload_0
       1: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokevirtual #108                // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getRetryInitialSleepMillisLower:()J
      13: goto          20
      16: aload_0
      17: getfield      #109                // Field retryInitialSleepMillisLower:J
      20: lreturn

  public long getRetryInitialSleepMillisUpper();
    Code:
       0: aload_0
       1: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokevirtual #110                // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getRetryInitialSleepMillisUpper:()J
      13: goto          20
      16: aload_0
      17: getfield      #111                // Field retryInitialSleepMillisUpper:J
      20: lreturn

  public long getRetryMaxSleepMillis();
    Code:
       0: aload_0
       1: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokevirtual #112                // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getRetryMaxSleepMillis:()J
      13: goto          20
      16: aload_0
      17: getfield      #113                // Field retryMaxSleepMillis:J
      20: lreturn

  public java.time.Clock getClock();
    Code:
       0: aload_0
       1: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokevirtual #114                // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getClock:()Ljava/time/Clock;
      13: goto          20
      16: aload_0
      17: getfield      #115                // Field clock:Ljava/time/Clock;
      20: areturn

  public int getParentsPerRefLogEntry();
    Code:
       0: aload_0
       1: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokevirtual #116                // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getParentsPerRefLogEntry:()I
      13: goto          20
      16: aload_0
      17: getfield      #117                // Field parentsPerRefLogEntry:I
      20: ireturn

  public long getAssumedWallClockDriftMicros();
    Code:
       0: aload_0
       1: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokevirtual #118                // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getAssumedWallClockDriftMicros:()J
      13: goto          20
      16: aload_0
      17: getfield      #119                // Field assumedWallClockDriftMicros:J
      20: lreturn

  public int getReferencesSegmentSize();
    Code:
       0: aload_0
       1: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokevirtual #120                // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getReferencesSegmentSize:()I
      13: goto          20
      16: aload_0
      17: getfield      #121                // Field referencesSegmentSize:I
      20: ireturn

  public int getReferencesSegmentPrefetch();
    Code:
       0: aload_0
       1: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokevirtual #122                // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getReferencesSegmentPrefetch:()I
      13: goto          20
      16: aload_0
      17: getfield      #123                // Field referencesSegmentPrefetch:I
      20: ireturn

  public int getReferenceNamesBatchSize();
    Code:
       0: aload_0
       1: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokevirtual #124                // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getReferenceNamesBatchSize:()I
      13: goto          20
      16: aload_0
      17: getfield      #125                // Field referenceNamesBatchSize:I
      20: ireturn

  public int getRefLogStripes();
    Code:
       0: aload_0
       1: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokevirtual #126                // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getRefLogStripes:()I
      13: goto          20
      16: aload_0
      17: getfield      #127                // Field refLogStripes:I
      20: ireturn

  public int getCommitLogScanPrefetch();
    Code:
       0: aload_0
       1: getfield      #26                 // Field initShim:Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokevirtual #128                // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$InitShim.getCommitLogScanPrefetch:()I
      13: goto          20
      16: aload_0
      17: getfield      #129                // Field commitLogScanPrefetch:I
      20: ireturn

  public final org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig withValidateNamespaces(boolean);
    Code:
       0: aload_0
       1: getfield      #89                 // Field validateNamespaces:Z
       4: iload_1
       5: if_icmpne     10
       8: aload_0
       9: areturn
      10: new           #151                // class org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig
      13: dup
      14: iload_1
      15: aload_0
      16: getfield      #91                 // Field repositoryId:Ljava/lang/String;
      19: aload_0
      20: getfield      #93                 // Field parentsPerCommit:I
      23: aload_0
      24: getfield      #95                 // Field keyListDistance:I
      27: aload_0
      28: getfield      #97                 // Field maxKeyListSize:I
      31: aload_0
      32: getfield      #99                 // Field maxKeyListEntitySize:I
      35: aload_0
      36: getfield      #101                // Field keyListHashLoadFactor:F
      39: aload_0
      40: getfield      #103                // Field keyListEntityPrefetch:I
      43: aload_0
      44: getfield      #105                // Field commitTimeout:J
      47: aload_0
      48: getfield      #107                // Field commitRetries:I
      51: aload_0
      52: getfield      #109                // Field retryInitialSleepMillisLower:J
      55: aload_0
      56: getfield      #111                // Field retryInitialSleepMillisUpper:J
      59: aload_0
      60: getfield      #113                // Field retryMaxSleepMillis:J
      63: aload_0
      64: getfield      #115                // Field clock:Ljava/time/Clock;
      67: aload_0
      68: getfield      #117                // Field parentsPerRefLogEntry:I
      71: aload_0
      72: getfield      #119                // Field assumedWallClockDriftMicros:J
      75: aload_0
      76: getfield      #121                // Field referencesSegmentSize:I
      79: aload_0
      80: getfield      #123                // Field referencesSegmentPrefetch:I
      83: aload_0
      84: getfield      #125                // Field referenceNamesBatchSize:I
      87: aload_0
      88: getfield      #127                // Field refLogStripes:I
      91: aload_0
      92: getfield      #129                // Field commitLogScanPrefetch:I
      95: invokespecial #152                // Method "<init>":(ZLjava/lang/String;IIIIFIJIJJJLjava/time/Clock;IJIIIII)V
      98: areturn

  public final org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig withRepositoryId(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #153                // String repositoryId
       3: invokestatic  #154                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: checkcast     #155                // class java/lang/String
       9: astore_2
      10: aload_0
      11: getfield      #91                 // Field repositoryId:Ljava/lang/String;
      14: aload_2
      15: invokevirtual #156                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: new           #151                // class org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig
      26: dup
      27: aload_0
      28: getfield      #89                 // Field validateNamespaces:Z
      31: aload_2
      32: aload_0
      33: getfield      #93                 // Field parentsPerCommit:I
      36: aload_0
      37: getfield      #95                 // Field keyListDistance:I
      40: aload_0
      41: getfield      #97                 // Field maxKeyListSize:I
      44: aload_0
      45: getfield      #99                 // Field maxKeyListEntitySize:I
      48: aload_0
      49: getfield      #101                // Field keyListHashLoadFactor:F
      52: aload_0
      53: getfield      #103                // Field keyListEntityPrefetch:I
      56: aload_0
      57: getfield      #105                // Field commitTimeout:J
      60: aload_0
      61: getfield      #107                // Field commitRetries:I
      64: aload_0
      65: getfield      #109                // Field retryInitialSleepMillisLower:J
      68: aload_0
      69: getfield      #111                // Field retryInitialSleepMillisUpper:J
      72: aload_0
      73: getfield      #113                // Field retryMaxSleepMillis:J
      76: aload_0
      77: getfield      #115                // Field clock:Ljava/time/Clock;
      80: aload_0
      81: getfield      #117                // Field parentsPerRefLogEntry:I
      84: aload_0
      85: getfield      #119                // Field assumedWallClockDriftMicros:J
      88: aload_0
      89: getfield      #121                // Field referencesSegmentSize:I
      92: aload_0
      93: getfield      #123                // Field referencesSegmentPrefetch:I
      96: aload_0
      97: getfield      #125                // Field referenceNamesBatchSize:I
     100: aload_0
     101: getfield      #127                // Field refLogStripes:I
     104: aload_0
     105: getfield      #129                // Field commitLogScanPrefetch:I
     108: invokespecial #152                // Method "<init>":(ZLjava/lang/String;IIIIFIJIJJJLjava/time/Clock;IJIIIII)V
     111: areturn

  public final org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig withParentsPerCommit(int);
    Code:
       0: aload_0
       1: getfield      #93                 // Field parentsPerCommit:I
       4: iload_1
       5: if_icmpne     10
       8: aload_0
       9: areturn
      10: new           #151                // class org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig
      13: dup
      14: aload_0
      15: getfield      #89                 // Field validateNamespaces:Z
      18: aload_0
      19: getfield      #91                 // Field repositoryId:Ljava/lang/String;
      22: iload_1
      23: aload_0
      24: getfield      #95                 // Field keyListDistance:I
      27: aload_0
      28: getfield      #97                 // Field maxKeyListSize:I
      31: aload_0
      32: getfield      #99                 // Field maxKeyListEntitySize:I
      35: aload_0
      36: getfield      #101                // Field keyListHashLoadFactor:F
      39: aload_0
      40: getfield      #103                // Field keyListEntityPrefetch:I
      43: aload_0
      44: getfield      #105                // Field commitTimeout:J
      47: aload_0
      48: getfield      #107                // Field commitRetries:I
      51: aload_0
      52: getfield      #109                // Field retryInitialSleepMillisLower:J
      55: aload_0
      56: getfield      #111                // Field retryInitialSleepMillisUpper:J
      59: aload_0
      60: getfield      #113                // Field retryMaxSleepMillis:J
      63: aload_0
      64: getfield      #115                // Field clock:Ljava/time/Clock;
      67: aload_0
      68: getfield      #117                // Field parentsPerRefLogEntry:I
      71: aload_0
      72: getfield      #119                // Field assumedWallClockDriftMicros:J
      75: aload_0
      76: getfield      #121                // Field referencesSegmentSize:I
      79: aload_0
      80: getfield      #123                // Field referencesSegmentPrefetch:I
      83: aload_0
      84: getfield      #125                // Field referenceNamesBatchSize:I
      87: aload_0
      88: getfield      #127                // Field refLogStripes:I
      91: aload_0
      92: getfield      #129                // Field commitLogScanPrefetch:I
      95: invokespecial #152                // Method "<init>":(ZLjava/lang/String;IIIIFIJIJJJLjava/time/Clock;IJIIIII)V
      98: areturn

  public final org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig withKeyListDistance(int);
    Code:
       0: aload_0
       1: getfield      #95                 // Field keyListDistance:I
       4: iload_1
       5: if_icmpne     10
       8: aload_0
       9: areturn
      10: new           #151                // class org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig
      13: dup
      14: aload_0
      15: getfield      #89                 // Field validateNamespaces:Z
      18: aload_0
      19: getfield      #91                 // Field repositoryId:Ljava/lang/String;
      22: aload_0
      23: getfield      #93                 // Field parentsPerCommit:I
      26: iload_1
      27: aload_0
      28: getfield      #97                 // Field maxKeyListSize:I
      31: aload_0
      32: getfield      #99                 // Field maxKeyListEntitySize:I
      35: aload_0
      36: getfield      #101                // Field keyListHashLoadFactor:F
      39: aload_0
      40: getfield      #103                // Field keyListEntityPrefetch:I
      43: aload_0
      44: getfield      #105                // Field commitTimeout:J
      47: aload_0
      48: getfield      #107                // Field commitRetries:I
      51: aload_0
      52: getfield      #109                // Field retryInitialSleepMillisLower:J
      55: aload_0
      56: getfield      #111                // Field retryInitialSleepMillisUpper:J
      59: aload_0
      60: getfield      #113                // Field retryMaxSleepMillis:J
      63: aload_0
      64: getfield      #115                // Field clock:Ljava/time/Clock;
      67: aload_0
      68: getfield      #117                // Field parentsPerRefLogEntry:I
      71: aload_0
      72: getfield      #119                // Field assumedWallClockDriftMicros:J
      75: aload_0
      76: getfield      #121                // Field referencesSegmentSize:I
      79: aload_0
      80: getfield      #123                // Field referencesSegmentPrefetch:I
      83: aload_0
      84: getfield      #125                // Field referenceNamesBatchSize:I
      87: aload_0
      88: getfield      #127                // Field refLogStripes:I
      91: aload_0
      92: getfield      #129                // Field commitLogScanPrefetch:I
      95: invokespecial #152                // Method "<init>":(ZLjava/lang/String;IIIIFIJIJJJLjava/time/Clock;IJIIIII)V
      98: areturn

  public final org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig withMaxKeyListSize(int);
    Code:
       0: aload_0
       1: getfield      #97                 // Field maxKeyListSize:I
       4: iload_1
       5: if_icmpne     10
       8: aload_0
       9: areturn
      10: new           #151                // class org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig
      13: dup
      14: aload_0
      15: getfield      #89                 // Field validateNamespaces:Z
      18: aload_0
      19: getfield      #91                 // Field repositoryId:Ljava/lang/String;
      22: aload_0
      23: getfield      #93                 // Field parentsPerCommit:I
      26: aload_0
      27: getfield      #95                 // Field keyListDistance:I
      30: iload_1
      31: aload_0
      32: getfield      #99                 // Field maxKeyListEntitySize:I
      35: aload_0
      36: getfield      #101                // Field keyListHashLoadFactor:F
      39: aload_0
      40: getfield      #103                // Field keyListEntityPrefetch:I
      43: aload_0
      44: getfield      #105                // Field commitTimeout:J
      47: aload_0
      48: getfield      #107                // Field commitRetries:I
      51: aload_0
      52: getfield      #109                // Field retryInitialSleepMillisLower:J
      55: aload_0
      56: getfield      #111                // Field retryInitialSleepMillisUpper:J
      59: aload_0
      60: getfield      #113                // Field retryMaxSleepMillis:J
      63: aload_0
      64: getfield      #115                // Field clock:Ljava/time/Clock;
      67: aload_0
      68: getfield      #117                // Field parentsPerRefLogEntry:I
      71: aload_0
      72: getfield      #119                // Field assumedWallClockDriftMicros:J
      75: aload_0
      76: getfield      #121                // Field referencesSegmentSize:I
      79: aload_0
      80: getfield      #123                // Field referencesSegmentPrefetch:I
      83: aload_0
      84: getfield      #125                // Field referenceNamesBatchSize:I
      87: aload_0
      88: getfield      #127                // Field refLogStripes:I
      91: aload_0
      92: getfield      #129                // Field commitLogScanPrefetch:I
      95: invokespecial #152                // Method "<init>":(ZLjava/lang/String;IIIIFIJIJJJLjava/time/Clock;IJIIIII)V
      98: areturn

  public final org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig withMaxKeyListEntitySize(int);
    Code:
       0: aload_0
       1: getfield      #99                 // Field maxKeyListEntitySize:I
       4: iload_1
       5: if_icmpne     10
       8: aload_0
       9: areturn
      10: new           #151                // class org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig
      13: dup
      14: aload_0
      15: getfield      #89                 // Field validateNamespaces:Z
      18: aload_0
      19: getfield      #91                 // Field repositoryId:Ljava/lang/String;
      22: aload_0
      23: getfield      #93                 // Field parentsPerCommit:I
      26: aload_0
      27: getfield      #95                 // Field keyListDistance:I
      30: aload_0
      31: getfield      #97                 // Field maxKeyListSize:I
      34: iload_1
      35: aload_0
      36: getfield      #101                // Field keyListHashLoadFactor:F
      39: aload_0
      40: getfield      #103                // Field keyListEntityPrefetch:I
      43: aload_0
      44: getfield      #105                // Field commitTimeout:J
      47: aload_0
      48: getfield      #107                // Field commitRetries:I
      51: aload_0
      52: getfield      #109                // Field retryInitialSleepMillisLower:J
      55: aload_0
      56: getfield      #111                // Field retryInitialSleepMillisUpper:J
      59: aload_0
      60: getfield      #113                // Field retryMaxSleepMillis:J
      63: aload_0
      64: getfield      #115                // Field clock:Ljava/time/Clock;
      67: aload_0
      68: getfield      #117                // Field parentsPerRefLogEntry:I
      71: aload_0
      72: getfield      #119                // Field assumedWallClockDriftMicros:J
      75: aload_0
      76: getfield      #121                // Field referencesSegmentSize:I
      79: aload_0
      80: getfield      #123                // Field referencesSegmentPrefetch:I
      83: aload_0
      84: getfield      #125                // Field referenceNamesBatchSize:I
      87: aload_0
      88: getfield      #127                // Field refLogStripes:I
      91: aload_0
      92: getfield      #129                // Field commitLogScanPrefetch:I
      95: invokespecial #152                // Method "<init>":(ZLjava/lang/String;IIIIFIJIJJJLjava/time/Clock;IJIIIII)V
      98: areturn

  public final org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig withKeyListHashLoadFactor(float);
    Code:
       0: aload_0
       1: getfield      #101                // Field keyListHashLoadFactor:F
       4: invokestatic  #157                // Method java/lang/Float.floatToIntBits:(F)I
       7: fload_1
       8: invokestatic  #157                // Method java/lang/Float.floatToIntBits:(F)I
      11: if_icmpne     16
      14: aload_0
      15: areturn
      16: new           #151                // class org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig
      19: dup
      20: aload_0
      21: getfield      #89                 // Field validateNamespaces:Z
      24: aload_0
      25: getfield      #91                 // Field repositoryId:Ljava/lang/String;
      28: aload_0
      29: getfield      #93                 // Field parentsPerCommit:I
      32: aload_0
      33: getfield      #95                 // Field keyListDistance:I
      36: aload_0
      37: getfield      #97                 // Field maxKeyListSize:I
      40: aload_0
      41: getfield      #99                 // Field maxKeyListEntitySize:I
      44: fload_1
      45: aload_0
      46: getfield      #103                // Field keyListEntityPrefetch:I
      49: aload_0
      50: getfield      #105                // Field commitTimeout:J
      53: aload_0
      54: getfield      #107                // Field commitRetries:I
      57: aload_0
      58: getfield      #109                // Field retryInitialSleepMillisLower:J
      61: aload_0
      62: getfield      #111                // Field retryInitialSleepMillisUpper:J
      65: aload_0
      66: getfield      #113                // Field retryMaxSleepMillis:J
      69: aload_0
      70: getfield      #115                // Field clock:Ljava/time/Clock;
      73: aload_0
      74: getfield      #117                // Field parentsPerRefLogEntry:I
      77: aload_0
      78: getfield      #119                // Field assumedWallClockDriftMicros:J
      81: aload_0
      82: getfield      #121                // Field referencesSegmentSize:I
      85: aload_0
      86: getfield      #123                // Field referencesSegmentPrefetch:I
      89: aload_0
      90: getfield      #125                // Field referenceNamesBatchSize:I
      93: aload_0
      94: getfield      #127                // Field refLogStripes:I
      97: aload_0
      98: getfield      #129                // Field commitLogScanPrefetch:I
     101: invokespecial #152                // Method "<init>":(ZLjava/lang/String;IIIIFIJIJJJLjava/time/Clock;IJIIIII)V
     104: areturn

  public final org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig withKeyListEntityPrefetch(int);
    Code:
       0: aload_0
       1: getfield      #103                // Field keyListEntityPrefetch:I
       4: iload_1
       5: if_icmpne     10
       8: aload_0
       9: areturn
      10: new           #151                // class org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig
      13: dup
      14: aload_0
      15: getfield      #89                 // Field validateNamespaces:Z
      18: aload_0
      19: getfield      #91                 // Field repositoryId:Ljava/lang/String;
      22: aload_0
      23: getfield      #93                 // Field parentsPerCommit:I
      26: aload_0
      27: getfield      #95                 // Field keyListDistance:I
      30: aload_0
      31: getfield      #97                 // Field maxKeyListSize:I
      34: aload_0
      35: getfield      #99                 // Field maxKeyListEntitySize:I
      38: aload_0
      39: getfield      #101                // Field keyListHashLoadFactor:F
      42: iload_1
      43: aload_0
      44: getfield      #105                // Field commitTimeout:J
      47: aload_0
      48: getfield      #107                // Field commitRetries:I
      51: aload_0
      52: getfield      #109                // Field retryInitialSleepMillisLower:J
      55: aload_0
      56: getfield      #111                // Field retryInitialSleepMillisUpper:J
      59: aload_0
      60: getfield      #113                // Field retryMaxSleepMillis:J
      63: aload_0
      64: getfield      #115                // Field clock:Ljava/time/Clock;
      67: aload_0
      68: getfield      #117                // Field parentsPerRefLogEntry:I
      71: aload_0
      72: getfield      #119                // Field assumedWallClockDriftMicros:J
      75: aload_0
      76: getfield      #121                // Field referencesSegmentSize:I
      79: aload_0
      80: getfield      #123                // Field referencesSegmentPrefetch:I
      83: aload_0
      84: getfield      #125                // Field referenceNamesBatchSize:I
      87: aload_0
      88: getfield      #127                // Field refLogStripes:I
      91: aload_0
      92: getfield      #129                // Field commitLogScanPrefetch:I
      95: invokespecial #152                // Method "<init>":(ZLjava/lang/String;IIIIFIJIJJJLjava/time/Clock;IJIIIII)V
      98: areturn

  public final org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig withCommitTimeout(long);
    Code:
       0: aload_0
       1: getfield      #105                // Field commitTimeout:J
       4: lload_1
       5: lcmp
       6: ifne          11
       9: aload_0
      10: areturn
      11: new           #151                // class org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig
      14: dup
      15: aload_0
      16: getfield      #89                 // Field validateNamespaces:Z
      19: aload_0
      20: getfield      #91                 // Field repositoryId:Ljava/lang/String;
      23: aload_0
      24: getfield      #93                 // Field parentsPerCommit:I
      27: aload_0
      28: getfield      #95                 // Field keyListDistance:I
      31: aload_0
      32: getfield      #97                 // Field maxKeyListSize:I
      35: aload_0
      36: getfield      #99                 // Field maxKeyListEntitySize:I
      39: aload_0
      40: getfield      #101                // Field keyListHashLoadFactor:F
      43: aload_0
      44: getfield      #103                // Field keyListEntityPrefetch:I
      47: lload_1
      48: aload_0
      49: getfield      #107                // Field commitRetries:I
      52: aload_0
      53: getfield      #109                // Field retryInitialSleepMillisLower:J
      56: aload_0
      57: getfield      #111                // Field retryInitialSleepMillisUpper:J
      60: aload_0
      61: getfield      #113                // Field retryMaxSleepMillis:J
      64: aload_0
      65: getfield      #115                // Field clock:Ljava/time/Clock;
      68: aload_0
      69: getfield      #117                // Field parentsPerRefLogEntry:I
      72: aload_0
      73: getfield      #119                // Field assumedWallClockDriftMicros:J
      76: aload_0
      77: getfield      #121                // Field referencesSegmentSize:I
      80: aload_0
      81: getfield      #123                // Field referencesSegmentPrefetch:I
      84: aload_0
      85: getfield      #125                // Field referenceNamesBatchSize:I
      88: aload_0
      89: getfield      #127                // Field refLogStripes:I
      92: aload_0
      93: getfield      #129                // Field commitLogScanPrefetch:I
      96: invokespecial #152                // Method "<init>":(ZLjava/lang/String;IIIIFIJIJJJLjava/time/Clock;IJIIIII)V
      99: areturn

  public final org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig withCommitRetries(int);
    Code:
       0: aload_0
       1: getfield      #107                // Field commitRetries:I
       4: iload_1
       5: if_icmpne     10
       8: aload_0
       9: areturn
      10: new           #151                // class org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig
      13: dup
      14: aload_0
      15: getfield      #89                 // Field validateNamespaces:Z
      18: aload_0
      19: getfield      #91                 // Field repositoryId:Ljava/lang/String;
      22: aload_0
      23: getfield      #93                 // Field parentsPerCommit:I
      26: aload_0
      27: getfield      #95                 // Field keyListDistance:I
      30: aload_0
      31: getfield      #97                 // Field maxKeyListSize:I
      34: aload_0
      35: getfield      #99                 // Field maxKeyListEntitySize:I
      38: aload_0
      39: getfield      #101                // Field keyListHashLoadFactor:F
      42: aload_0
      43: getfield      #103                // Field keyListEntityPrefetch:I
      46: aload_0
      47: getfield      #105                // Field commitTimeout:J
      50: iload_1
      51: aload_0
      52: getfield      #109                // Field retryInitialSleepMillisLower:J
      55: aload_0
      56: getfield      #111                // Field retryInitialSleepMillisUpper:J
      59: aload_0
      60: getfield      #113                // Field retryMaxSleepMillis:J
      63: aload_0
      64: getfield      #115                // Field clock:Ljava/time/Clock;
      67: aload_0
      68: getfield      #117                // Field parentsPerRefLogEntry:I
      71: aload_0
      72: getfield      #119                // Field assumedWallClockDriftMicros:J
      75: aload_0
      76: getfield      #121                // Field referencesSegmentSize:I
      79: aload_0
      80: getfield      #123                // Field referencesSegmentPrefetch:I
      83: aload_0
      84: getfield      #125                // Field referenceNamesBatchSize:I
      87: aload_0
      88: getfield      #127                // Field refLogStripes:I
      91: aload_0
      92: getfield      #129                // Field commitLogScanPrefetch:I
      95: invokespecial #152                // Method "<init>":(ZLjava/lang/String;IIIIFIJIJJJLjava/time/Clock;IJIIIII)V
      98: areturn

  public final org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig withRetryInitialSleepMillisLower(long);
    Code:
       0: aload_0
       1: getfield      #109                // Field retryInitialSleepMillisLower:J
       4: lload_1
       5: lcmp
       6: ifne          11
       9: aload_0
      10: areturn
      11: new           #151                // class org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig
      14: dup
      15: aload_0
      16: getfield      #89                 // Field validateNamespaces:Z
      19: aload_0
      20: getfield      #91                 // Field repositoryId:Ljava/lang/String;
      23: aload_0
      24: getfield      #93                 // Field parentsPerCommit:I
      27: aload_0
      28: getfield      #95                 // Field keyListDistance:I
      31: aload_0
      32: getfield      #97                 // Field maxKeyListSize:I
      35: aload_0
      36: getfield      #99                 // Field maxKeyListEntitySize:I
      39: aload_0
      40: getfield      #101                // Field keyListHashLoadFactor:F
      43: aload_0
      44: getfield      #103                // Field keyListEntityPrefetch:I
      47: aload_0
      48: getfield      #105                // Field commitTimeout:J
      51: aload_0
      52: getfield      #107                // Field commitRetries:I
      55: lload_1
      56: aload_0
      57: getfield      #111                // Field retryInitialSleepMillisUpper:J
      60: aload_0
      61: getfield      #113                // Field retryMaxSleepMillis:J
      64: aload_0
      65: getfield      #115                // Field clock:Ljava/time/Clock;
      68: aload_0
      69: getfield      #117                // Field parentsPerRefLogEntry:I
      72: aload_0
      73: getfield      #119                // Field assumedWallClockDriftMicros:J
      76: aload_0
      77: getfield      #121                // Field referencesSegmentSize:I
      80: aload_0
      81: getfield      #123                // Field referencesSegmentPrefetch:I
      84: aload_0
      85: getfield      #125                // Field referenceNamesBatchSize:I
      88: aload_0
      89: getfield      #127                // Field refLogStripes:I
      92: aload_0
      93: getfield      #129                // Field commitLogScanPrefetch:I
      96: invokespecial #152                // Method "<init>":(ZLjava/lang/String;IIIIFIJIJJJLjava/time/Clock;IJIIIII)V
      99: areturn

  public final org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig withRetryInitialSleepMillisUpper(long);
    Code:
       0: aload_0
       1: getfield      #111                // Field retryInitialSleepMillisUpper:J
       4: lload_1
       5: lcmp
       6: ifne          11
       9: aload_0
      10: areturn
      11: new           #151                // class org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig
      14: dup
      15: aload_0
      16: getfield      #89                 // Field validateNamespaces:Z
      19: aload_0
      20: getfield      #91                 // Field repositoryId:Ljava/lang/String;
      23: aload_0
      24: getfield      #93                 // Field parentsPerCommit:I
      27: aload_0
      28: getfield      #95                 // Field keyListDistance:I
      31: aload_0
      32: getfield      #97                 // Field maxKeyListSize:I
      35: aload_0
      36: getfield      #99                 // Field maxKeyListEntitySize:I
      39: aload_0
      40: getfield      #101                // Field keyListHashLoadFactor:F
      43: aload_0
      44: getfield      #103                // Field keyListEntityPrefetch:I
      47: aload_0
      48: getfield      #105                // Field commitTimeout:J
      51: aload_0
      52: getfield      #107                // Field commitRetries:I
      55: aload_0
      56: getfield      #109                // Field retryInitialSleepMillisLower:J
      59: lload_1
      60: aload_0
      61: getfield      #113                // Field retryMaxSleepMillis:J
      64: aload_0
      65: getfield      #115                // Field clock:Ljava/time/Clock;
      68: aload_0
      69: getfield      #117                // Field parentsPerRefLogEntry:I
      72: aload_0
      73: getfield      #119                // Field assumedWallClockDriftMicros:J
      76: aload_0
      77: getfield      #121                // Field referencesSegmentSize:I
      80: aload_0
      81: getfield      #123                // Field referencesSegmentPrefetch:I
      84: aload_0
      85: getfield      #125                // Field referenceNamesBatchSize:I
      88: aload_0
      89: getfield      #127                // Field refLogStripes:I
      92: aload_0
      93: getfield      #129                // Field commitLogScanPrefetch:I
      96: invokespecial #152                // Method "<init>":(ZLjava/lang/String;IIIIFIJIJJJLjava/time/Clock;IJIIIII)V
      99: areturn

  public final org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig withRetryMaxSleepMillis(long);
    Code:
       0: aload_0
       1: getfield      #113                // Field retryMaxSleepMillis:J
       4: lload_1
       5: lcmp
       6: ifne          11
       9: aload_0
      10: areturn
      11: new           #151                // class org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig
      14: dup
      15: aload_0
      16: getfield      #89                 // Field validateNamespaces:Z
      19: aload_0
      20: getfield      #91                 // Field repositoryId:Ljava/lang/String;
      23: aload_0
      24: getfield      #93                 // Field parentsPerCommit:I
      27: aload_0
      28: getfield      #95                 // Field keyListDistance:I
      31: aload_0
      32: getfield      #97                 // Field maxKeyListSize:I
      35: aload_0
      36: getfield      #99                 // Field maxKeyListEntitySize:I
      39: aload_0
      40: getfield      #101                // Field keyListHashLoadFactor:F
      43: aload_0
      44: getfield      #103                // Field keyListEntityPrefetch:I
      47: aload_0
      48: getfield      #105                // Field commitTimeout:J
      51: aload_0
      52: getfield      #107                // Field commitRetries:I
      55: aload_0
      56: getfield      #109                // Field retryInitialSleepMillisLower:J
      59: aload_0
      60: getfield      #111                // Field retryInitialSleepMillisUpper:J
      63: lload_1
      64: aload_0
      65: getfield      #115                // Field clock:Ljava/time/Clock;
      68: aload_0
      69: getfield      #117                // Field parentsPerRefLogEntry:I
      72: aload_0
      73: getfield      #119                // Field assumedWallClockDriftMicros:J
      76: aload_0
      77: getfield      #121                // Field referencesSegmentSize:I
      80: aload_0
      81: getfield      #123                // Field referencesSegmentPrefetch:I
      84: aload_0
      85: getfield      #125                // Field referenceNamesBatchSize:I
      88: aload_0
      89: getfield      #127                // Field refLogStripes:I
      92: aload_0
      93: getfield      #129                // Field commitLogScanPrefetch:I
      96: invokespecial #152                // Method "<init>":(ZLjava/lang/String;IIIIFIJIJJJLjava/time/Clock;IJIIIII)V
      99: areturn

  public final org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig withClock(java.time.Clock);
    Code:
       0: aload_0
       1: getfield      #115                // Field clock:Ljava/time/Clock;
       4: aload_1
       5: if_acmpne     10
       8: aload_0
       9: areturn
      10: aload_1
      11: ldc           #158                // String clock
      13: invokestatic  #154                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      16: checkcast     #159                // class java/time/Clock
      19: astore_2
      20: new           #151                // class org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig
      23: dup
      24: aload_0
      25: getfield      #89                 // Field validateNamespaces:Z
      28: aload_0
      29: getfield      #91                 // Field repositoryId:Ljava/lang/String;
      32: aload_0
      33: getfield      #93                 // Field parentsPerCommit:I
      36: aload_0
      37: getfield      #95                 // Field keyListDistance:I
      40: aload_0
      41: getfield      #97                 // Field maxKeyListSize:I
      44: aload_0
      45: getfield      #99                 // Field maxKeyListEntitySize:I
      48: aload_0
      49: getfield      #101                // Field keyListHashLoadFactor:F
      52: aload_0
      53: getfield      #103                // Field keyListEntityPrefetch:I
      56: aload_0
      57: getfield      #105                // Field commitTimeout:J
      60: aload_0
      61: getfield      #107                // Field commitRetries:I
      64: aload_0
      65: getfield      #109                // Field retryInitialSleepMillisLower:J
      68: aload_0
      69: getfield      #111                // Field retryInitialSleepMillisUpper:J
      72: aload_0
      73: getfield      #113                // Field retryMaxSleepMillis:J
      76: aload_2
      77: aload_0
      78: getfield      #117                // Field parentsPerRefLogEntry:I
      81: aload_0
      82: getfield      #119                // Field assumedWallClockDriftMicros:J
      85: aload_0
      86: getfield      #121                // Field referencesSegmentSize:I
      89: aload_0
      90: getfield      #123                // Field referencesSegmentPrefetch:I
      93: aload_0
      94: getfield      #125                // Field referenceNamesBatchSize:I
      97: aload_0
      98: getfield      #127                // Field refLogStripes:I
     101: aload_0
     102: getfield      #129                // Field commitLogScanPrefetch:I
     105: invokespecial #152                // Method "<init>":(ZLjava/lang/String;IIIIFIJIJJJLjava/time/Clock;IJIIIII)V
     108: areturn

  public final org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig withParentsPerRefLogEntry(int);
    Code:
       0: aload_0
       1: getfield      #117                // Field parentsPerRefLogEntry:I
       4: iload_1
       5: if_icmpne     10
       8: aload_0
       9: areturn
      10: new           #151                // class org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig
      13: dup
      14: aload_0
      15: getfield      #89                 // Field validateNamespaces:Z
      18: aload_0
      19: getfield      #91                 // Field repositoryId:Ljava/lang/String;
      22: aload_0
      23: getfield      #93                 // Field parentsPerCommit:I
      26: aload_0
      27: getfield      #95                 // Field keyListDistance:I
      30: aload_0
      31: getfield      #97                 // Field maxKeyListSize:I
      34: aload_0
      35: getfield      #99                 // Field maxKeyListEntitySize:I
      38: aload_0
      39: getfield      #101                // Field keyListHashLoadFactor:F
      42: aload_0
      43: getfield      #103                // Field keyListEntityPrefetch:I
      46: aload_0
      47: getfield      #105                // Field commitTimeout:J
      50: aload_0
      51: getfield      #107                // Field commitRetries:I
      54: aload_0
      55: getfield      #109                // Field retryInitialSleepMillisLower:J
      58: aload_0
      59: getfield      #111                // Field retryInitialSleepMillisUpper:J
      62: aload_0
      63: getfield      #113                // Field retryMaxSleepMillis:J
      66: aload_0
      67: getfield      #115                // Field clock:Ljava/time/Clock;
      70: iload_1
      71: aload_0
      72: getfield      #119                // Field assumedWallClockDriftMicros:J
      75: aload_0
      76: getfield      #121                // Field referencesSegmentSize:I
      79: aload_0
      80: getfield      #123                // Field referencesSegmentPrefetch:I
      83: aload_0
      84: getfield      #125                // Field referenceNamesBatchSize:I
      87: aload_0
      88: getfield      #127                // Field refLogStripes:I
      91: aload_0
      92: getfield      #129                // Field commitLogScanPrefetch:I
      95: invokespecial #152                // Method "<init>":(ZLjava/lang/String;IIIIFIJIJJJLjava/time/Clock;IJIIIII)V
      98: areturn

  public final org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig withAssumedWallClockDriftMicros(long);
    Code:
       0: aload_0
       1: getfield      #119                // Field assumedWallClockDriftMicros:J
       4: lload_1
       5: lcmp
       6: ifne          11
       9: aload_0
      10: areturn
      11: new           #151                // class org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig
      14: dup
      15: aload_0
      16: getfield      #89                 // Field validateNamespaces:Z
      19: aload_0
      20: getfield      #91                 // Field repositoryId:Ljava/lang/String;
      23: aload_0
      24: getfield      #93                 // Field parentsPerCommit:I
      27: aload_0
      28: getfield      #95                 // Field keyListDistance:I
      31: aload_0
      32: getfield      #97                 // Field maxKeyListSize:I
      35: aload_0
      36: getfield      #99                 // Field maxKeyListEntitySize:I
      39: aload_0
      40: getfield      #101                // Field keyListHashLoadFactor:F
      43: aload_0
      44: getfield      #103                // Field keyListEntityPrefetch:I
      47: aload_0
      48: getfield      #105                // Field commitTimeout:J
      51: aload_0
      52: getfield      #107                // Field commitRetries:I
      55: aload_0
      56: getfield      #109                // Field retryInitialSleepMillisLower:J
      59: aload_0
      60: getfield      #111                // Field retryInitialSleepMillisUpper:J
      63: aload_0
      64: getfield      #113                // Field retryMaxSleepMillis:J
      67: aload_0
      68: getfield      #115                // Field clock:Ljava/time/Clock;
      71: aload_0
      72: getfield      #117                // Field parentsPerRefLogEntry:I
      75: lload_1
      76: aload_0
      77: getfield      #121                // Field referencesSegmentSize:I
      80: aload_0
      81: getfield      #123                // Field referencesSegmentPrefetch:I
      84: aload_0
      85: getfield      #125                // Field referenceNamesBatchSize:I
      88: aload_0
      89: getfield      #127                // Field refLogStripes:I
      92: aload_0
      93: getfield      #129                // Field commitLogScanPrefetch:I
      96: invokespecial #152                // Method "<init>":(ZLjava/lang/String;IIIIFIJIJJJLjava/time/Clock;IJIIIII)V
      99: areturn

  public final org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig withReferencesSegmentSize(int);
    Code:
       0: aload_0
       1: getfield      #121                // Field referencesSegmentSize:I
       4: iload_1
       5: if_icmpne     10
       8: aload_0
       9: areturn
      10: new           #151                // class org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig
      13: dup
      14: aload_0
      15: getfield      #89                 // Field validateNamespaces:Z
      18: aload_0
      19: getfield      #91                 // Field repositoryId:Ljava/lang/String;
      22: aload_0
      23: getfield      #93                 // Field parentsPerCommit:I
      26: aload_0
      27: getfield      #95                 // Field keyListDistance:I
      30: aload_0
      31: getfield      #97                 // Field maxKeyListSize:I
      34: aload_0
      35: getfield      #99                 // Field maxKeyListEntitySize:I
      38: aload_0
      39: getfield      #101                // Field keyListHashLoadFactor:F
      42: aload_0
      43: getfield      #103                // Field keyListEntityPrefetch:I
      46: aload_0
      47: getfield      #105                // Field commitTimeout:J
      50: aload_0
      51: getfield      #107                // Field commitRetries:I
      54: aload_0
      55: getfield      #109                // Field retryInitialSleepMillisLower:J
      58: aload_0
      59: getfield      #111                // Field retryInitialSleepMillisUpper:J
      62: aload_0
      63: getfield      #113                // Field retryMaxSleepMillis:J
      66: aload_0
      67: getfield      #115                // Field clock:Ljava/time/Clock;
      70: aload_0
      71: getfield      #117                // Field parentsPerRefLogEntry:I
      74: aload_0
      75: getfield      #119                // Field assumedWallClockDriftMicros:J
      78: iload_1
      79: aload_0
      80: getfield      #123                // Field referencesSegmentPrefetch:I
      83: aload_0
      84: getfield      #125                // Field referenceNamesBatchSize:I
      87: aload_0
      88: getfield      #127                // Field refLogStripes:I
      91: aload_0
      92: getfield      #129                // Field commitLogScanPrefetch:I
      95: invokespecial #152                // Method "<init>":(ZLjava/lang/String;IIIIFIJIJJJLjava/time/Clock;IJIIIII)V
      98: areturn

  public final org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig withReferencesSegmentPrefetch(int);
    Code:
       0: aload_0
       1: getfield      #123                // Field referencesSegmentPrefetch:I
       4: iload_1
       5: if_icmpne     10
       8: aload_0
       9: areturn
      10: new           #151                // class org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig
      13: dup
      14: aload_0
      15: getfield      #89                 // Field validateNamespaces:Z
      18: aload_0
      19: getfield      #91                 // Field repositoryId:Ljava/lang/String;
      22: aload_0
      23: getfield      #93                 // Field parentsPerCommit:I
      26: aload_0
      27: getfield      #95                 // Field keyListDistance:I
      30: aload_0
      31: getfield      #97                 // Field maxKeyListSize:I
      34: aload_0
      35: getfield      #99                 // Field maxKeyListEntitySize:I
      38: aload_0
      39: getfield      #101                // Field keyListHashLoadFactor:F
      42: aload_0
      43: getfield      #103                // Field keyListEntityPrefetch:I
      46: aload_0
      47: getfield      #105                // Field commitTimeout:J
      50: aload_0
      51: getfield      #107                // Field commitRetries:I
      54: aload_0
      55: getfield      #109                // Field retryInitialSleepMillisLower:J
      58: aload_0
      59: getfield      #111                // Field retryInitialSleepMillisUpper:J
      62: aload_0
      63: getfield      #113                // Field retryMaxSleepMillis:J
      66: aload_0
      67: getfield      #115                // Field clock:Ljava/time/Clock;
      70: aload_0
      71: getfield      #117                // Field parentsPerRefLogEntry:I
      74: aload_0
      75: getfield      #119                // Field assumedWallClockDriftMicros:J
      78: aload_0
      79: getfield      #121                // Field referencesSegmentSize:I
      82: iload_1
      83: aload_0
      84: getfield      #125                // Field referenceNamesBatchSize:I
      87: aload_0
      88: getfield      #127                // Field refLogStripes:I
      91: aload_0
      92: getfield      #129                // Field commitLogScanPrefetch:I
      95: invokespecial #152                // Method "<init>":(ZLjava/lang/String;IIIIFIJIJJJLjava/time/Clock;IJIIIII)V
      98: areturn

  public final org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig withReferenceNamesBatchSize(int);
    Code:
       0: aload_0
       1: getfield      #125                // Field referenceNamesBatchSize:I
       4: iload_1
       5: if_icmpne     10
       8: aload_0
       9: areturn
      10: new           #151                // class org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig
      13: dup
      14: aload_0
      15: getfield      #89                 // Field validateNamespaces:Z
      18: aload_0
      19: getfield      #91                 // Field repositoryId:Ljava/lang/String;
      22: aload_0
      23: getfield      #93                 // Field parentsPerCommit:I
      26: aload_0
      27: getfield      #95                 // Field keyListDistance:I
      30: aload_0
      31: getfield      #97                 // Field maxKeyListSize:I
      34: aload_0
      35: getfield      #99                 // Field maxKeyListEntitySize:I
      38: aload_0
      39: getfield      #101                // Field keyListHashLoadFactor:F
      42: aload_0
      43: getfield      #103                // Field keyListEntityPrefetch:I
      46: aload_0
      47: getfield      #105                // Field commitTimeout:J
      50: aload_0
      51: getfield      #107                // Field commitRetries:I
      54: aload_0
      55: getfield      #109                // Field retryInitialSleepMillisLower:J
      58: aload_0
      59: getfield      #111                // Field retryInitialSleepMillisUpper:J
      62: aload_0
      63: getfield      #113                // Field retryMaxSleepMillis:J
      66: aload_0
      67: getfield      #115                // Field clock:Ljava/time/Clock;
      70: aload_0
      71: getfield      #117                // Field parentsPerRefLogEntry:I
      74: aload_0
      75: getfield      #119                // Field assumedWallClockDriftMicros:J
      78: aload_0
      79: getfield      #121                // Field referencesSegmentSize:I
      82: aload_0
      83: getfield      #123                // Field referencesSegmentPrefetch:I
      86: iload_1
      87: aload_0
      88: getfield      #127                // Field refLogStripes:I
      91: aload_0
      92: getfield      #129                // Field commitLogScanPrefetch:I
      95: invokespecial #152                // Method "<init>":(ZLjava/lang/String;IIIIFIJIJJJLjava/time/Clock;IJIIIII)V
      98: areturn

  public final org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig withRefLogStripes(int);
    Code:
       0: aload_0
       1: getfield      #127                // Field refLogStripes:I
       4: iload_1
       5: if_icmpne     10
       8: aload_0
       9: areturn
      10: new           #151                // class org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig
      13: dup
      14: aload_0
      15: getfield      #89                 // Field validateNamespaces:Z
      18: aload_0
      19: getfield      #91                 // Field repositoryId:Ljava/lang/String;
      22: aload_0
      23: getfield      #93                 // Field parentsPerCommit:I
      26: aload_0
      27: getfield      #95                 // Field keyListDistance:I
      30: aload_0
      31: getfield      #97                 // Field maxKeyListSize:I
      34: aload_0
      35: getfield      #99                 // Field maxKeyListEntitySize:I
      38: aload_0
      39: getfield      #101                // Field keyListHashLoadFactor:F
      42: aload_0
      43: getfield      #103                // Field keyListEntityPrefetch:I
      46: aload_0
      47: getfield      #105                // Field commitTimeout:J
      50: aload_0
      51: getfield      #107                // Field commitRetries:I
      54: aload_0
      55: getfield      #109                // Field retryInitialSleepMillisLower:J
      58: aload_0
      59: getfield      #111                // Field retryInitialSleepMillisUpper:J
      62: aload_0
      63: getfield      #113                // Field retryMaxSleepMillis:J
      66: aload_0
      67: getfield      #115                // Field clock:Ljava/time/Clock;
      70: aload_0
      71: getfield      #117                // Field parentsPerRefLogEntry:I
      74: aload_0
      75: getfield      #119                // Field assumedWallClockDriftMicros:J
      78: aload_0
      79: getfield      #121                // Field referencesSegmentSize:I
      82: aload_0
      83: getfield      #123                // Field referencesSegmentPrefetch:I
      86: aload_0
      87: getfield      #125                // Field referenceNamesBatchSize:I
      90: iload_1
      91: aload_0
      92: getfield      #129                // Field commitLogScanPrefetch:I
      95: invokespecial #152                // Method "<init>":(ZLjava/lang/String;IIIIFIJIJJJLjava/time/Clock;IJIIIII)V
      98: areturn

  public final org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig withCommitLogScanPrefetch(int);
    Code:
       0: aload_0
       1: getfield      #129                // Field commitLogScanPrefetch:I
       4: iload_1
       5: if_icmpne     10
       8: aload_0
       9: areturn
      10: new           #151                // class org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig
      13: dup
      14: aload_0
      15: getfield      #89                 // Field validateNamespaces:Z
      18: aload_0
      19: getfield      #91                 // Field repositoryId:Ljava/lang/String;
      22: aload_0
      23: getfield      #93                 // Field parentsPerCommit:I
      26: aload_0
      27: getfield      #95                 // Field keyListDistance:I
      30: aload_0
      31: getfield      #97                 // Field maxKeyListSize:I
      34: aload_0
      35: getfield      #99                 // Field maxKeyListEntitySize:I
      38: aload_0
      39: getfield      #101                // Field keyListHashLoadFactor:F
      42: aload_0
      43: getfield      #103                // Field keyListEntityPrefetch:I
      46: aload_0
      47: getfield      #105                // Field commitTimeout:J
      50: aload_0
      51: getfield      #107                // Field commitRetries:I
      54: aload_0
      55: getfield      #109                // Field retryInitialSleepMillisLower:J
      58: aload_0
      59: getfield      #111                // Field retryInitialSleepMillisUpper:J
      62: aload_0
      63: getfield      #113                // Field retryMaxSleepMillis:J
      66: aload_0
      67: getfield      #115                // Field clock:Ljava/time/Clock;
      70: aload_0
      71: getfield      #117                // Field parentsPerRefLogEntry:I
      74: aload_0
      75: getfield      #119                // Field assumedWallClockDriftMicros:J
      78: aload_0
      79: getfield      #121                // Field referencesSegmentSize:I
      82: aload_0
      83: getfield      #123                // Field referencesSegmentPrefetch:I
      86: aload_0
      87: getfield      #125                // Field referenceNamesBatchSize:I
      90: aload_0
      91: getfield      #127                // Field refLogStripes:I
      94: iload_1
      95: invokespecial #152                // Method "<init>":(ZLjava/lang/String;IIIIFIJIJJJLjava/time/Clock;IJIIIII)V
      98: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #151                // class org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig
      11: ifeq          30
      14: aload_0
      15: iconst_0
      16: aload_1
      17: checkcast     #151                // class org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig
      20: invokespecial #160                // Method equalTo:(ILorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;)Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  private boolean equalTo(int, org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig);
    Code:
       0: aload_0
       1: getfield      #89                 // Field validateNamespaces:Z
       4: aload_2
       5: getfield      #89                 // Field validateNamespaces:Z
       8: if_icmpne     252
      11: aload_0
      12: getfield      #91                 // Field repositoryId:Ljava/lang/String;
      15: aload_2
      16: getfield      #91                 // Field repositoryId:Ljava/lang/String;
      19: invokevirtual #156                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      22: ifeq          252
      25: aload_0
      26: getfield      #93                 // Field parentsPerCommit:I
      29: aload_2
      30: getfield      #93                 // Field parentsPerCommit:I
      33: if_icmpne     252
      36: aload_0
      37: getfield      #95                 // Field keyListDistance:I
      40: aload_2
      41: getfield      #95                 // Field keyListDistance:I
      44: if_icmpne     252
      47: aload_0
      48: getfield      #97                 // Field maxKeyListSize:I
      51: aload_2
      52: getfield      #97                 // Field maxKeyListSize:I
      55: if_icmpne     252
      58: aload_0
      59: getfield      #99                 // Field maxKeyListEntitySize:I
      62: aload_2
      63: getfield      #99                 // Field maxKeyListEntitySize:I
      66: if_icmpne     252
      69: aload_0
      70: getfield      #101                // Field keyListHashLoadFactor:F
      73: invokestatic  #157                // Method java/lang/Float.floatToIntBits:(F)I
      76: aload_2
      77: getfield      #101                // Field keyListHashLoadFactor:F
      80: invokestatic  #157                // Method java/lang/Float.floatToIntBits:(F)I
      83: if_icmpne     252
      86: aload_0
      87: getfield      #103                // Field keyListEntityPrefetch:I
      90: aload_2
      91: getfield      #103                // Field keyListEntityPrefetch:I
      94: if_icmpne     252
      97: aload_0
      98: getfield      #105                // Field commitTimeout:J
     101: aload_2
     102: getfield      #105                // Field commitTimeout:J
     105: lcmp
     106: ifne          252
     109: aload_0
     110: getfield      #107                // Field commitRetries:I
     113: aload_2
     114: getfield      #107                // Field commitRetries:I
     117: if_icmpne     252
     120: aload_0
     121: getfield      #109                // Field retryInitialSleepMillisLower:J
     124: aload_2
     125: getfield      #109                // Field retryInitialSleepMillisLower:J
     128: lcmp
     129: ifne          252
     132: aload_0
     133: getfield      #111                // Field retryInitialSleepMillisUpper:J
     136: aload_2
     137: getfield      #111                // Field retryInitialSleepMillisUpper:J
     140: lcmp
     141: ifne          252
     144: aload_0
     145: getfield      #113                // Field retryMaxSleepMillis:J
     148: aload_2
     149: getfield      #113                // Field retryMaxSleepMillis:J
     152: lcmp
     153: ifne          252
     156: aload_0
     157: getfield      #115                // Field clock:Ljava/time/Clock;
     160: aload_2
     161: getfield      #115                // Field clock:Ljava/time/Clock;
     164: invokevirtual #161                // Method java/time/Clock.equals:(Ljava/lang/Object;)Z
     167: ifeq          252
     170: aload_0
     171: getfield      #117                // Field parentsPerRefLogEntry:I
     174: aload_2
     175: getfield      #117                // Field parentsPerRefLogEntry:I
     178: if_icmpne     252
     181: aload_0
     182: getfield      #119                // Field assumedWallClockDriftMicros:J
     185: aload_2
     186: getfield      #119                // Field assumedWallClockDriftMicros:J
     189: lcmp
     190: ifne          252
     193: aload_0
     194: getfield      #121                // Field referencesSegmentSize:I
     197: aload_2
     198: getfield      #121                // Field referencesSegmentSize:I
     201: if_icmpne     252
     204: aload_0
     205: getfield      #123                // Field referencesSegmentPrefetch:I
     208: aload_2
     209: getfield      #123                // Field referencesSegmentPrefetch:I
     212: if_icmpne     252
     215: aload_0
     216: getfield      #125                // Field referenceNamesBatchSize:I
     219: aload_2
     220: getfield      #125                // Field referenceNamesBatchSize:I
     223: if_icmpne     252
     226: aload_0
     227: getfield      #127                // Field refLogStripes:I
     230: aload_2
     231: getfield      #127                // Field refLogStripes:I
     234: if_icmpne     252
     237: aload_0
     238: getfield      #129                // Field commitLogScanPrefetch:I
     241: aload_2
     242: getfield      #129                // Field commitLogScanPrefetch:I
     245: if_icmpne     252
     248: iconst_1
     249: goto          253
     252: iconst_0
     253: ireturn

  public int hashCode();
    Code:
       0: sipush        5381
       3: istore_1
       4: iload_1
       5: iload_1
       6: iconst_5
       7: ishl
       8: aload_0
       9: getfield      #89                 // Field validateNamespaces:Z
      12: invokestatic  #162                // Method com/google/common/primitives/Booleans.hashCode:(Z)I
      15: iadd
      16: iadd
      17: istore_1
      18: iload_1
      19: iload_1
      20: iconst_5
      21: ishl
      22: aload_0
      23: getfield      #91                 // Field repositoryId:Ljava/lang/String;
      26: invokevirtual #163                // Method java/lang/String.hashCode:()I
      29: iadd
      30: iadd
      31: istore_1
      32: iload_1
      33: iload_1
      34: iconst_5
      35: ishl
      36: aload_0
      37: getfield      #93                 // Field parentsPerCommit:I
      40: iadd
      41: iadd
      42: istore_1
      43: iload_1
      44: iload_1
      45: iconst_5
      46: ishl
      47: aload_0
      48: getfield      #95                 // Field keyListDistance:I
      51: iadd
      52: iadd
      53: istore_1
      54: iload_1
      55: iload_1
      56: iconst_5
      57: ishl
      58: aload_0
      59: getfield      #97                 // Field maxKeyListSize:I
      62: iadd
      63: iadd
      64: istore_1
      65: iload_1
      66: iload_1
      67: iconst_5
      68: ishl
      69: aload_0
      70: getfield      #99                 // Field maxKeyListEntitySize:I
      73: iadd
      74: iadd
      75: istore_1
      76: iload_1
      77: iload_1
      78: iconst_5
      79: ishl
      80: aload_0
      81: getfield      #101                // Field keyListHashLoadFactor:F
      84: invokestatic  #164                // Method com/google/common/primitives/Floats.hashCode:(F)I
      87: iadd
      88: iadd
      89: istore_1
      90: iload_1
      91: iload_1
      92: iconst_5
      93: ishl
      94: aload_0
      95: getfield      #103                // Field keyListEntityPrefetch:I
      98: iadd
      99: iadd
     100: istore_1
     101: iload_1
     102: iload_1
     103: iconst_5
     104: ishl
     105: aload_0
     106: getfield      #105                // Field commitTimeout:J
     109: invokestatic  #165                // Method com/google/common/primitives/Longs.hashCode:(J)I
     112: iadd
     113: iadd
     114: istore_1
     115: iload_1
     116: iload_1
     117: iconst_5
     118: ishl
     119: aload_0
     120: getfield      #107                // Field commitRetries:I
     123: iadd
     124: iadd
     125: istore_1
     126: iload_1
     127: iload_1
     128: iconst_5
     129: ishl
     130: aload_0
     131: getfield      #109                // Field retryInitialSleepMillisLower:J
     134: invokestatic  #165                // Method com/google/common/primitives/Longs.hashCode:(J)I
     137: iadd
     138: iadd
     139: istore_1
     140: iload_1
     141: iload_1
     142: iconst_5
     143: ishl
     144: aload_0
     145: getfield      #111                // Field retryInitialSleepMillisUpper:J
     148: invokestatic  #165                // Method com/google/common/primitives/Longs.hashCode:(J)I
     151: iadd
     152: iadd
     153: istore_1
     154: iload_1
     155: iload_1
     156: iconst_5
     157: ishl
     158: aload_0
     159: getfield      #113                // Field retryMaxSleepMillis:J
     162: invokestatic  #165                // Method com/google/common/primitives/Longs.hashCode:(J)I
     165: iadd
     166: iadd
     167: istore_1
     168: iload_1
     169: iload_1
     170: iconst_5
     171: ishl
     172: aload_0
     173: getfield      #115                // Field clock:Ljava/time/Clock;
     176: invokevirtual #166                // Method java/time/Clock.hashCode:()I
     179: iadd
     180: iadd
     181: istore_1
     182: iload_1
     183: iload_1
     184: iconst_5
     185: ishl
     186: aload_0
     187: getfield      #117                // Field parentsPerRefLogEntry:I
     190: iadd
     191: iadd
     192: istore_1
     193: iload_1
     194: iload_1
     195: iconst_5
     196: ishl
     197: aload_0
     198: getfield      #119                // Field assumedWallClockDriftMicros:J
     201: invokestatic  #165                // Method com/google/common/primitives/Longs.hashCode:(J)I
     204: iadd
     205: iadd
     206: istore_1
     207: iload_1
     208: iload_1
     209: iconst_5
     210: ishl
     211: aload_0
     212: getfield      #121                // Field referencesSegmentSize:I
     215: iadd
     216: iadd
     217: istore_1
     218: iload_1
     219: iload_1
     220: iconst_5
     221: ishl
     222: aload_0
     223: getfield      #123                // Field referencesSegmentPrefetch:I
     226: iadd
     227: iadd
     228: istore_1
     229: iload_1
     230: iload_1
     231: iconst_5
     232: ishl
     233: aload_0
     234: getfield      #125                // Field referenceNamesBatchSize:I
     237: iadd
     238: iadd
     239: istore_1
     240: iload_1
     241: iload_1
     242: iconst_5
     243: ishl
     244: aload_0
     245: getfield      #127                // Field refLogStripes:I
     248: iadd
     249: iadd
     250: istore_1
     251: iload_1
     252: iload_1
     253: iconst_5
     254: ishl
     255: aload_0
     256: getfield      #129                // Field commitLogScanPrefetch:I
     259: iadd
     260: iadd
     261: istore_1
     262: iload_1
     263: ireturn

  public java.lang.String toString();
    Code:
       0: ldc           #167                // String AdjustableNonTransactionalDatabaseAdapterConfig
       2: invokestatic  #168                // Method com/google/common/base/MoreObjects.toStringHelper:(Ljava/lang/String;)Lcom/google/common/base/MoreObjects$ToStringHelper;
       5: invokevirtual #169                // Method com/google/common/base/MoreObjects$ToStringHelper.omitNullValues:()Lcom/google/common/base/MoreObjects$ToStringHelper;
       8: ldc           #170                // String validateNamespaces
      10: aload_0
      11: getfield      #89                 // Field validateNamespaces:Z
      14: invokevirtual #171                // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Z)Lcom/google/common/base/MoreObjects$ToStringHelper;
      17: ldc           #153                // String repositoryId
      19: aload_0
      20: getfield      #91                 // Field repositoryId:Ljava/lang/String;
      23: invokevirtual #172                // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
      26: ldc           #173                // String parentsPerCommit
      28: aload_0
      29: getfield      #93                 // Field parentsPerCommit:I
      32: invokevirtual #174                // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;I)Lcom/google/common/base/MoreObjects$ToStringHelper;
      35: ldc           #175                // String keyListDistance
      37: aload_0
      38: getfield      #95                 // Field keyListDistance:I
      41: invokevirtual #174                // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;I)Lcom/google/common/base/MoreObjects$ToStringHelper;
      44: ldc           #176                // String maxKeyListSize
      46: aload_0
      47: getfield      #97                 // Field maxKeyListSize:I
      50: invokevirtual #174                // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;I)Lcom/google/common/base/MoreObjects$ToStringHelper;
      53: ldc           #177                // String maxKeyListEntitySize
      55: aload_0
      56: getfield      #99                 // Field maxKeyListEntitySize:I
      59: invokevirtual #174                // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;I)Lcom/google/common/base/MoreObjects$ToStringHelper;
      62: ldc           #178                // String keyListHashLoadFactor
      64: aload_0
      65: getfield      #101                // Field keyListHashLoadFactor:F
      68: invokevirtual #179                // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;F)Lcom/google/common/base/MoreObjects$ToStringHelper;
      71: ldc           #180                // String keyListEntityPrefetch
      73: aload_0
      74: getfield      #103                // Field keyListEntityPrefetch:I
      77: invokevirtual #174                // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;I)Lcom/google/common/base/MoreObjects$ToStringHelper;
      80: ldc           #181                // String commitTimeout
      82: aload_0
      83: getfield      #105                // Field commitTimeout:J
      86: invokevirtual #182                // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;J)Lcom/google/common/base/MoreObjects$ToStringHelper;
      89: ldc           #183                // String commitRetries
      91: aload_0
      92: getfield      #107                // Field commitRetries:I
      95: invokevirtual #174                // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;I)Lcom/google/common/base/MoreObjects$ToStringHelper;
      98: ldc           #184                // String retryInitialSleepMillisLower
     100: aload_0
     101: getfield      #109                // Field retryInitialSleepMillisLower:J
     104: invokevirtual #182                // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;J)Lcom/google/common/base/MoreObjects$ToStringHelper;
     107: ldc           #185                // String retryInitialSleepMillisUpper
     109: aload_0
     110: getfield      #111                // Field retryInitialSleepMillisUpper:J
     113: invokevirtual #182                // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;J)Lcom/google/common/base/MoreObjects$ToStringHelper;
     116: ldc           #186                // String retryMaxSleepMillis
     118: aload_0
     119: getfield      #113                // Field retryMaxSleepMillis:J
     122: invokevirtual #182                // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;J)Lcom/google/common/base/MoreObjects$ToStringHelper;
     125: ldc           #158                // String clock
     127: aload_0
     128: getfield      #115                // Field clock:Ljava/time/Clock;
     131: invokevirtual #172                // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
     134: ldc           #187                // String parentsPerRefLogEntry
     136: aload_0
     137: getfield      #117                // Field parentsPerRefLogEntry:I
     140: invokevirtual #174                // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;I)Lcom/google/common/base/MoreObjects$ToStringHelper;
     143: ldc           #188                // String assumedWallClockDriftMicros
     145: aload_0
     146: getfield      #119                // Field assumedWallClockDriftMicros:J
     149: invokevirtual #182                // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;J)Lcom/google/common/base/MoreObjects$ToStringHelper;
     152: ldc           #189                // String referencesSegmentSize
     154: aload_0
     155: getfield      #121                // Field referencesSegmentSize:I
     158: invokevirtual #174                // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;I)Lcom/google/common/base/MoreObjects$ToStringHelper;
     161: ldc           #190                // String referencesSegmentPrefetch
     163: aload_0
     164: getfield      #123                // Field referencesSegmentPrefetch:I
     167: invokevirtual #174                // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;I)Lcom/google/common/base/MoreObjects$ToStringHelper;
     170: ldc           #191                // String referenceNamesBatchSize
     172: aload_0
     173: getfield      #125                // Field referenceNamesBatchSize:I
     176: invokevirtual #174                // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;I)Lcom/google/common/base/MoreObjects$ToStringHelper;
     179: ldc           #192                // String refLogStripes
     181: aload_0
     182: getfield      #127                // Field refLogStripes:I
     185: invokevirtual #174                // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;I)Lcom/google/common/base/MoreObjects$ToStringHelper;
     188: ldc           #193                // String commitLogScanPrefetch
     190: aload_0
     191: getfield      #129                // Field commitLogScanPrefetch:I
     194: invokevirtual #174                // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;I)Lcom/google/common/base/MoreObjects$ToStringHelper;
     197: invokevirtual #194                // Method com/google/common/base/MoreObjects$ToStringHelper.toString:()Ljava/lang/String;
     200: areturn

  public static org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig copyOf(org.projectnessie.versioned.persist.nontx.AdjustableNonTransactionalDatabaseAdapterConfig);
    Code:
       0: aload_0
       1: instanceof    #151                // class org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig
       4: ifeq          12
       7: aload_0
       8: checkcast     #151                // class org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig
      11: areturn
      12: invokestatic  #195                // Method builder:()Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;
      15: aload_0
      16: invokevirtual #196                // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.from:(Lorg/projectnessie/versioned/persist/nontx/AdjustableNonTransactionalDatabaseAdapterConfig;)Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;
      19: invokevirtual #197                // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder.build:()Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
      22: areturn

  public static org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder builder();
    Code:
       0: new           #198                // class org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder
       3: dup
       4: aconst_null
       5: invokespecial #199                // Method org/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder."<init>":(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$1;)V
       8: areturn

  public org.projectnessie.versioned.persist.nontx.AdjustableNonTransactionalDatabaseAdapterConfig withCommitLogScanPrefetch(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #200                // Method withCommitLogScanPrefetch:(I)Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
       5: areturn

  public org.projectnessie.versioned.persist.nontx.AdjustableNonTransactionalDatabaseAdapterConfig withRefLogStripes(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #201                // Method withRefLogStripes:(I)Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
       5: areturn

  public org.projectnessie.versioned.persist.nontx.AdjustableNonTransactionalDatabaseAdapterConfig withReferenceNamesBatchSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #202                // Method withReferenceNamesBatchSize:(I)Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
       5: areturn

  public org.projectnessie.versioned.persist.nontx.AdjustableNonTransactionalDatabaseAdapterConfig withReferencesSegmentPrefetch(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #203                // Method withReferencesSegmentPrefetch:(I)Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
       5: areturn

  public org.projectnessie.versioned.persist.nontx.AdjustableNonTransactionalDatabaseAdapterConfig withReferencesSegmentSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #204                // Method withReferencesSegmentSize:(I)Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
       5: areturn

  public org.projectnessie.versioned.persist.adapter.AdjustableDatabaseAdapterConfig withAssumedWallClockDriftMicros(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #205                // Method withAssumedWallClockDriftMicros:(J)Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
       5: areturn

  public org.projectnessie.versioned.persist.adapter.AdjustableDatabaseAdapterConfig withParentsPerRefLogEntry(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #206                // Method withParentsPerRefLogEntry:(I)Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
       5: areturn

  public org.projectnessie.versioned.persist.adapter.AdjustableDatabaseAdapterConfig withClock(java.time.Clock);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #207                // Method withClock:(Ljava/time/Clock;)Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
       5: areturn

  public org.projectnessie.versioned.persist.adapter.AdjustableDatabaseAdapterConfig withRetryMaxSleepMillis(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #208                // Method withRetryMaxSleepMillis:(J)Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
       5: areturn

  public org.projectnessie.versioned.persist.adapter.AdjustableDatabaseAdapterConfig withRetryInitialSleepMillisUpper(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #209                // Method withRetryInitialSleepMillisUpper:(J)Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
       5: areturn

  public org.projectnessie.versioned.persist.adapter.AdjustableDatabaseAdapterConfig withRetryInitialSleepMillisLower(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #210                // Method withRetryInitialSleepMillisLower:(J)Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
       5: areturn

  public org.projectnessie.versioned.persist.adapter.AdjustableDatabaseAdapterConfig withCommitRetries(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #211                // Method withCommitRetries:(I)Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
       5: areturn

  public org.projectnessie.versioned.persist.adapter.AdjustableDatabaseAdapterConfig withCommitTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #212                // Method withCommitTimeout:(J)Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
       5: areturn

  public org.projectnessie.versioned.persist.adapter.AdjustableDatabaseAdapterConfig withKeyListEntityPrefetch(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #213                // Method withKeyListEntityPrefetch:(I)Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
       5: areturn

  public org.projectnessie.versioned.persist.adapter.AdjustableDatabaseAdapterConfig withKeyListHashLoadFactor(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokevirtual #214                // Method withKeyListHashLoadFactor:(F)Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
       5: areturn

  public org.projectnessie.versioned.persist.adapter.AdjustableDatabaseAdapterConfig withMaxKeyListEntitySize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #215                // Method withMaxKeyListEntitySize:(I)Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
       5: areturn

  public org.projectnessie.versioned.persist.adapter.AdjustableDatabaseAdapterConfig withMaxKeyListSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #216                // Method withMaxKeyListSize:(I)Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
       5: areturn

  public org.projectnessie.versioned.persist.adapter.AdjustableDatabaseAdapterConfig withKeyListDistance(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #217                // Method withKeyListDistance:(I)Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
       5: areturn

  public org.projectnessie.versioned.persist.adapter.AdjustableDatabaseAdapterConfig withParentsPerCommit(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #218                // Method withParentsPerCommit:(I)Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
       5: areturn

  public org.projectnessie.versioned.persist.adapter.AdjustableDatabaseAdapterConfig withRepositoryId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #219                // Method withRepositoryId:(Ljava/lang/String;)Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
       5: areturn

  public org.projectnessie.versioned.persist.adapter.AdjustableDatabaseAdapterConfig withValidateNamespaces(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #220                // Method withValidateNamespaces:(Z)Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig;
       5: areturn

  static boolean access$4100(org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig);
    Code:
       0: aload_0
       1: invokespecial #22                 // Method validateNamespacesInitialize:()Z
       4: ireturn

  static java.lang.String access$4200(org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig);
    Code:
       0: aload_0
       1: invokespecial #21                 // Method getRepositoryIdInitialize:()Ljava/lang/String;
       4: areturn

  static int access$4300(org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method getParentsPerCommitInitialize:()I
       4: ireturn

  static int access$4400(org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method getKeyListDistanceInitialize:()I
       4: ireturn

  static int access$4500(org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig);
    Code:
       0: aload_0
       1: invokespecial #18                 // Method getMaxKeyListSizeInitialize:()I
       4: ireturn

  static int access$4600(org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig);
    Code:
       0: aload_0
       1: invokespecial #17                 // Method getMaxKeyListEntitySizeInitialize:()I
       4: ireturn

  static float access$4700(org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method getKeyListHashLoadFactorInitialize:()F
       4: freturn

  static int access$4800(org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method getKeyListEntityPrefetchInitialize:()I
       4: ireturn

  static long access$4900(org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method getCommitTimeoutInitialize:()J
       4: lreturn

  static int access$5000(org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method getCommitRetriesInitialize:()I
       4: ireturn

  static long access$5100(org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method getRetryInitialSleepMillisLowerInitialize:()J
       4: lreturn

  static long access$5200(org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method getRetryInitialSleepMillisUpperInitialize:()J
       4: lreturn

  static long access$5300(org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method getRetryMaxSleepMillisInitialize:()J
       4: lreturn

  static java.time.Clock access$5400(org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method getClockInitialize:()Ljava/time/Clock;
       4: areturn

  static int access$5500(org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method getParentsPerRefLogEntryInitialize:()I
       4: ireturn

  static long access$5600(org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method getAssumedWallClockDriftMicrosInitialize:()J
       4: lreturn

  static int access$5700(org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method getReferencesSegmentSizeInitialize:()I
       4: ireturn

  static int access$5800(org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method getReferencesSegmentPrefetchInitialize:()I
       4: ireturn

  static int access$5900(org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method getReferenceNamesBatchSizeInitialize:()I
       4: ireturn

  static int access$6000(org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method getRefLogStripesInitialize:()I
       4: ireturn

  static int access$6100(org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method getCommitLogScanPrefetchInitialize:()I
       4: ireturn

  org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig(org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder, org.projectnessie.versioned.persist.nontx.ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/projectnessie/versioned/persist/nontx/ImmutableAdjustableNonTransactionalDatabaseAdapterConfig$Builder;)V
       5: return
}
