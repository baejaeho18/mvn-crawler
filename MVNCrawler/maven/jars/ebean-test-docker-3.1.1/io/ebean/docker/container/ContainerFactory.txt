Compiled from "ContainerFactory.java"
public class io.ebean.docker.container.ContainerFactory {
  private final java.util.Properties properties;

  private final java.util.List<io.ebean.docker.container.Container> containers;

  private final java.util.Set<java.lang.String> runWith;

  private static java.lang.String defaultRunWith();
    Code:
       0: ldc           #1                  // String DOCKER_RUN_WITH
       2: invokestatic  #2                  // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_0
       6: ldc           #3                  // String docker_run_with
       8: aload_0
       9: invokestatic  #4                  // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      12: areturn

  public io.ebean.docker.container.ContainerFactory(java.util.Properties);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #5                  // Method defaultRunWith:()Ljava/lang/String;
       5: invokespecial #6                  // Method "<init>":(Ljava/util/Properties;Ljava/lang/String;)V
       8: return

  public io.ebean.docker.container.ContainerFactory(java.util.Properties, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #8                  // class java/util/ArrayList
       8: dup
       9: invokespecial #9                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #10                 // Field containers:Ljava/util/List;
      15: aload_0
      16: new           #11                 // class java/util/HashSet
      19: dup
      20: invokespecial #12                 // Method java/util/HashSet."<init>":()V
      23: putfield      #13                 // Field runWith:Ljava/util/Set;
      26: aload_0
      27: aload_1
      28: putfield      #14                 // Field properties:Ljava/util/Properties;
      31: aload_0
      32: aload_2
      33: invokespecial #15                 // Method initRunWith:(Ljava/lang/String;)V
      36: aload_0
      37: invokespecial #16                 // Method init:()V
      40: return

  private void initRunWith(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        53
       4: aload_1
       5: ldc           #17                 // String ,
       7: invokevirtual #18                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      10: astore_2
      11: aload_2
      12: arraylength
      13: istore_3
      14: iconst_0
      15: istore        4
      17: iload         4
      19: iload_3
      20: if_icmpge     53
      23: aload_2
      24: iload         4
      26: aaload
      27: astore        5
      29: aload_0
      30: getfield      #13                 // Field runWith:Ljava/util/Set;
      33: aload         5
      35: invokevirtual #19                 // Method java/lang/String.trim:()Ljava/lang/String;
      38: invokevirtual #20                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      41: invokeinterface #21,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      46: pop
      47: iinc          4, 1
      50: goto          17
      53: return

  private void init();
    Code:
       0: aload_0
       1: ldc           #22                 // String elastic
       3: invokespecial #23                 // Method version:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnull        29
      11: aload_0
      12: getfield      #10                 // Field containers:Ljava/util/List;
      15: aload_1
      16: aload_0
      17: getfield      #14                 // Field properties:Ljava/util/Properties;
      20: invokestatic  #24                 // Method io/ebean/docker/commands/ElasticContainer.create:(Ljava/lang/String;Ljava/util/Properties;)Lio/ebean/docker/commands/ElasticContainer;
      23: invokeinterface #25,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      28: pop
      29: aload_0
      30: ldc           #26                 // String redis
      32: invokespecial #23                 // Method version:(Ljava/lang/String;)Ljava/lang/String;
      35: astore_2
      36: aload_2
      37: ifnull        58
      40: aload_0
      41: getfield      #10                 // Field containers:Ljava/util/List;
      44: aload_2
      45: aload_0
      46: getfield      #14                 // Field properties:Ljava/util/Properties;
      49: invokestatic  #27                 // Method io/ebean/docker/commands/RedisContainer.create:(Ljava/lang/String;Ljava/util/Properties;)Lio/ebean/docker/commands/RedisContainer;
      52: invokeinterface #25,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      57: pop
      58: aload_0
      59: ldc           #28                 // String postgres
      61: invokevirtual #29                 // Method runWithVersion:(Ljava/lang/String;)Ljava/lang/String;
      64: astore_3
      65: aload_3
      66: ifnull        87
      69: aload_0
      70: getfield      #10                 // Field containers:Ljava/util/List;
      73: aload_3
      74: aload_0
      75: getfield      #14                 // Field properties:Ljava/util/Properties;
      78: invokestatic  #30                 // Method io/ebean/docker/commands/PostgresContainer.create:(Ljava/lang/String;Ljava/util/Properties;)Lio/ebean/docker/commands/PostgresContainer;
      81: invokeinterface #25,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      86: pop
      87: aload_0
      88: ldc           #31                 // String mysql
      90: invokevirtual #29                 // Method runWithVersion:(Ljava/lang/String;)Ljava/lang/String;
      93: astore        4
      95: aload         4
      97: ifnull        119
     100: aload_0
     101: getfield      #10                 // Field containers:Ljava/util/List;
     104: aload         4
     106: aload_0
     107: getfield      #14                 // Field properties:Ljava/util/Properties;
     110: invokestatic  #32                 // Method io/ebean/docker/commands/MySqlContainer.create:(Ljava/lang/String;Ljava/util/Properties;)Lio/ebean/docker/commands/MySqlContainer;
     113: invokeinterface #25,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     118: pop
     119: aload_0
     120: ldc           #33                 // String mariadb
     122: invokevirtual #29                 // Method runWithVersion:(Ljava/lang/String;)Ljava/lang/String;
     125: astore        5
     127: aload         5
     129: ifnull        151
     132: aload_0
     133: getfield      #10                 // Field containers:Ljava/util/List;
     136: aload         5
     138: aload_0
     139: getfield      #14                 // Field properties:Ljava/util/Properties;
     142: invokestatic  #34                 // Method io/ebean/docker/commands/MariaDBContainer.create:(Ljava/lang/String;Ljava/util/Properties;)Lio/ebean/docker/commands/MariaDBContainer;
     145: invokeinterface #25,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     150: pop
     151: aload_0
     152: ldc           #35                 // String nuodb
     154: invokevirtual #29                 // Method runWithVersion:(Ljava/lang/String;)Ljava/lang/String;
     157: astore        6
     159: aload         6
     161: ifnull        183
     164: aload_0
     165: getfield      #10                 // Field containers:Ljava/util/List;
     168: aload         6
     170: aload_0
     171: getfield      #14                 // Field properties:Ljava/util/Properties;
     174: invokestatic  #36                 // Method io/ebean/docker/commands/NuoDBContainer.create:(Ljava/lang/String;Ljava/util/Properties;)Lio/ebean/docker/commands/NuoDBContainer;
     177: invokeinterface #25,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     182: pop
     183: aload_0
     184: ldc           #37                 // String sqlserver
     186: invokevirtual #29                 // Method runWithVersion:(Ljava/lang/String;)Ljava/lang/String;
     189: astore        7
     191: aload         7
     193: ifnull        215
     196: aload_0
     197: getfield      #10                 // Field containers:Ljava/util/List;
     200: aload         7
     202: aload_0
     203: getfield      #14                 // Field properties:Ljava/util/Properties;
     206: invokestatic  #38                 // Method io/ebean/docker/commands/SqlServerContainer.create:(Ljava/lang/String;Ljava/util/Properties;)Lio/ebean/docker/commands/SqlServerContainer;
     209: invokeinterface #25,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     214: pop
     215: aload_0
     216: ldc           #39                 // String oracle
     218: invokevirtual #29                 // Method runWithVersion:(Ljava/lang/String;)Ljava/lang/String;
     221: astore        8
     223: aload         8
     225: ifnull        247
     228: aload_0
     229: getfield      #10                 // Field containers:Ljava/util/List;
     232: aload         8
     234: aload_0
     235: getfield      #14                 // Field properties:Ljava/util/Properties;
     238: invokestatic  #40                 // Method io/ebean/docker/commands/OracleContainer.create:(Ljava/lang/String;Ljava/util/Properties;)Lio/ebean/docker/commands/OracleContainer;
     241: invokeinterface #25,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     246: pop
     247: aload_0
     248: ldc           #41                 // String hana
     250: invokevirtual #29                 // Method runWithVersion:(Ljava/lang/String;)Ljava/lang/String;
     253: astore        9
     255: aload         9
     257: ifnull        279
     260: aload_0
     261: getfield      #10                 // Field containers:Ljava/util/List;
     264: aload         9
     266: aload_0
     267: getfield      #14                 // Field properties:Ljava/util/Properties;
     270: invokestatic  #42                 // Method io/ebean/docker/commands/HanaContainer.create:(Ljava/lang/String;Ljava/util/Properties;)Lio/ebean/docker/commands/HanaContainer;
     273: invokeinterface #25,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     278: pop
     279: aload_0
     280: ldc           #43                 // String clickhouse
     282: invokevirtual #29                 // Method runWithVersion:(Ljava/lang/String;)Ljava/lang/String;
     285: astore        10
     287: aload         10
     289: ifnull        311
     292: aload_0
     293: getfield      #10                 // Field containers:Ljava/util/List;
     296: aload         10
     298: aload_0
     299: getfield      #14                 // Field properties:Ljava/util/Properties;
     302: invokestatic  #44                 // Method io/ebean/docker/commands/ClickHouseContainer.create:(Ljava/lang/String;Ljava/util/Properties;)Lio/ebean/docker/commands/ClickHouseContainer;
     305: invokeinterface #25,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     310: pop
     311: aload_0
     312: ldc           #45                 // String cockroach
     314: invokevirtual #29                 // Method runWithVersion:(Ljava/lang/String;)Ljava/lang/String;
     317: astore        11
     319: aload         11
     321: ifnull        343
     324: aload_0
     325: getfield      #10                 // Field containers:Ljava/util/List;
     328: aload         11
     330: aload_0
     331: getfield      #14                 // Field properties:Ljava/util/Properties;
     334: invokestatic  #46                 // Method io/ebean/docker/commands/CockroachContainer.create:(Ljava/lang/String;Ljava/util/Properties;)Lio/ebean/docker/commands/CockroachContainer;
     337: invokeinterface #25,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     342: pop
     343: return

  java.lang.String runWithVersion(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #23                 // Method version:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_0
      13: getfield      #13                 // Field runWith:Ljava/util/Set;
      16: invokeinterface #47,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      21: ifne          37
      24: aload_0
      25: getfield      #13                 // Field runWith:Ljava/util/Set;
      28: aload_1
      29: invokeinterface #48,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      34: ifeq          41
      37: aload_2
      38: goto          42
      41: aconst_null
      42: areturn

  private java.lang.String version(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #14                 // Field properties:Ljava/util/Properties;
       4: new           #49                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #50                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_1
      12: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: ldc           #52                 // String .version
      17: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: invokevirtual #54                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      26: areturn

  public void startContainers();
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #55                 // Method startContainers:(Ljava/util/function/Consumer;)V
       5: return

  public void startContainers(java.util.function.Consumer<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field containers:Ljava/util/List;
       4: invokeinterface #56,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          60
      19: aload_2
      20: invokeinterface #58,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #59                 // class io/ebean/docker/container/Container
      28: astore_3
      29: aload_1
      30: ifnull        50
      33: aload_1
      34: aload_3
      35: invokeinterface #60,  1           // InterfaceMethod io/ebean/docker/container/Container.config:()Lio/ebean/docker/container/ContainerConfig;
      40: invokeinterface #61,  1           // InterfaceMethod io/ebean/docker/container/ContainerConfig.startDescription:()Ljava/lang/String;
      45: invokeinterface #62,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      50: aload_3
      51: invokeinterface #63,  1           // InterfaceMethod io/ebean/docker/container/Container.start:()Z
      56: pop
      57: goto          10
      60: return

  public void stopContainers();
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #64                 // Method stopContainers:(Ljava/util/function/Consumer;)V
       5: return

  public void stopContainers(java.util.function.Consumer<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field containers:Ljava/util/List;
       4: invokeinterface #56,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          59
      19: aload_2
      20: invokeinterface #58,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #59                 // class io/ebean/docker/container/Container
      28: astore_3
      29: aload_1
      30: ifnull        50
      33: aload_1
      34: aload_3
      35: invokeinterface #60,  1           // InterfaceMethod io/ebean/docker/container/Container.config:()Lio/ebean/docker/container/ContainerConfig;
      40: invokeinterface #65,  1           // InterfaceMethod io/ebean/docker/container/ContainerConfig.stopDescription:()Ljava/lang/String;
      45: invokeinterface #62,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      50: aload_3
      51: invokeinterface #66,  1           // InterfaceMethod io/ebean/docker/container/Container.stop:()V
      56: goto          10
      59: return

  public void stopOnly();
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #67                 // Method stopOnly:(Ljava/util/function/Consumer;)V
       5: return

  public void stopOnly(java.util.function.Consumer<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field containers:Ljava/util/List;
       4: invokeinterface #56,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          59
      19: aload_2
      20: invokeinterface #58,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #59                 // class io/ebean/docker/container/Container
      28: astore_3
      29: aload_1
      30: ifnull        50
      33: aload_1
      34: aload_3
      35: invokeinterface #60,  1           // InterfaceMethod io/ebean/docker/container/Container.config:()Lio/ebean/docker/container/ContainerConfig;
      40: invokeinterface #65,  1           // InterfaceMethod io/ebean/docker/container/ContainerConfig.stopDescription:()Ljava/lang/String;
      45: invokeinterface #62,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      50: aload_3
      51: invokeinterface #68,  1           // InterfaceMethod io/ebean/docker/container/Container.stopOnly:()V
      56: goto          10
      59: return

  public io.ebean.docker.container.ContainerConfig config(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #69                 // Method container:(Ljava/lang/String;)Lio/ebean/docker/container/Container;
       5: astore_2
       6: aload_2
       7: ifnonnull     14
      10: aconst_null
      11: goto          20
      14: aload_2
      15: invokeinterface #60,  1           // InterfaceMethod io/ebean/docker/container/Container.config:()Lio/ebean/docker/container/ContainerConfig;
      20: areturn

  public io.ebean.docker.container.Container container(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field containers:Ljava/util/List;
       4: invokeinterface #56,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          56
      19: aload_2
      20: invokeinterface #58,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #59                 // class io/ebean/docker/container/Container
      28: astore_3
      29: aload_3
      30: invokeinterface #60,  1           // InterfaceMethod io/ebean/docker/container/Container.config:()Lio/ebean/docker/container/ContainerConfig;
      35: astore        4
      37: aload         4
      39: invokeinterface #70,  1           // InterfaceMethod io/ebean/docker/container/ContainerConfig.platform:()Ljava/lang/String;
      44: aload_1
      45: invokevirtual #71                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      48: ifeq          53
      51: aload_3
      52: areturn
      53: goto          10
      56: aconst_null
      57: areturn
}
