Compiled from "HanaContainer.java"
public class io.ebean.docker.commands.HanaContainer extends io.ebean.docker.commands.DbContainer implements io.ebean.docker.container.Container {
  private static final org.slf4j.Logger log;

  private final io.ebean.docker.commands.HanaConfig hanaConfig;

  public static io.ebean.docker.commands.HanaContainer create(java.lang.String, java.util.Properties);
    Code:
       0: new           #1                  // class io/ebean/docker/commands/HanaContainer
       3: dup
       4: new           #2                  // class io/ebean/docker/commands/HanaConfig
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #3                  // Method io/ebean/docker/commands/HanaConfig."<init>":(Ljava/lang/String;Ljava/util/Properties;)V
      13: invokespecial #4                  // Method "<init>":(Lio/ebean/docker/commands/HanaConfig;)V
      16: areturn

  public io.ebean.docker.commands.HanaContainer(io.ebean.docker.commands.HanaConfig);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method io/ebean/docker/commands/DbContainer."<init>":(Lio/ebean/docker/commands/DbConfig;)V
       5: aload_0
       6: aload_1
       7: putfield      #6                  // Field hanaConfig:Lio/ebean/docker/commands/HanaConfig;
      10: ldc           #7                  // String os.name
      12: invokestatic  #8                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      15: invokevirtual #9                  // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      18: astore_2
      19: aload_2
      20: ldc           #10                 // String linux
      22: invokevirtual #11                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      25: ifne          38
      28: new           #12                 // class java/lang/IllegalStateException
      31: dup
      32: ldc           #13                 // String The HANA docker image requires a Linux operating system
      34: invokespecial #14                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: getfield      #6                  // Field hanaConfig:Lio/ebean/docker/commands/HanaConfig;
      42: invokevirtual #15                 // Method io/ebean/docker/commands/HanaConfig.isAgreeToSapLicense:()Z
      45: ifne          58
      48: new           #12                 // class java/lang/IllegalStateException
      51: dup
      52: ldc           #16                 // String You must agree to the SAP license (https://www.sap.com/docs/download/cmp/2016/06/sap-hana-express-dev-agmt-and-exhibit.pdf) by setting the property \'hana.agreeToSapLicense\' to \'true\'
      54: invokespecial #14                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: return

  protected boolean isDatabaseAdminReady();
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method isDatabaseReady:()Z
       4: ireturn

  protected boolean isDatabaseReady();
    Code:
       0: aload_0
       1: getfield      #18                 // Field commands:Lio/ebean/docker/commands/Commands;
       4: aload_0
       5: getfield      #19                 // Field config:Lio/ebean/docker/commands/BaseConfig;
       8: invokevirtual #20                 // Method io/ebean/docker/commands/BaseConfig.containerName:()Ljava/lang/String;
      11: ldc           #21                 // String Startup finished!
      13: invokevirtual #22                 // Method io/ebean/docker/commands/Commands.logsContain:(Ljava/lang/String;Ljava/lang/String;)Z
      16: ireturn

  public boolean startWithCreate();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method startIfNeeded:()Z
       4: pop
       5: aload_0
       6: invokevirtual #24                 // Method waitForDatabaseReady:()Z
       9: ifne          31
      12: getstatic     #25                 // Field log:Lorg/slf4j/Logger;
      15: ldc           #26                 // String Failed waitForDatabaseReady for container {}
      17: aload_0
      18: getfield      #19                 // Field config:Lio/ebean/docker/commands/BaseConfig;
      21: invokevirtual #20                 // Method io/ebean/docker/commands/BaseConfig.containerName:()Ljava/lang/String;
      24: invokeinterface #27,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      29: iconst_0
      30: ireturn
      31: aload_0
      32: invokespecial #28                 // Method createUserIfNotExists:()Z
      35: ifne          40
      38: iconst_0
      39: ireturn
      40: aload_0
      41: invokevirtual #29                 // Method waitForConnectivity:()Z
      44: ifne          59
      47: getstatic     #25                 // Field log:Lorg/slf4j/Logger;
      50: ldc           #30                 // String Failed waiting for connectivity
      52: invokeinterface #31,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      57: iconst_0
      58: ireturn
      59: iconst_1
      60: ireturn

  public boolean startWithDropCreate();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method startIfNeeded:()Z
       4: pop
       5: aload_0
       6: invokevirtual #24                 // Method waitForDatabaseReady:()Z
       9: ifne          31
      12: getstatic     #25                 // Field log:Lorg/slf4j/Logger;
      15: ldc           #26                 // String Failed waitForDatabaseReady for container {}
      17: aload_0
      18: getfield      #19                 // Field config:Lio/ebean/docker/commands/BaseConfig;
      21: invokevirtual #20                 // Method io/ebean/docker/commands/BaseConfig.containerName:()Ljava/lang/String;
      24: invokeinterface #27,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      29: iconst_0
      30: ireturn
      31: aload_0
      32: invokespecial #32                 // Method dropUserIfExists:()Z
      35: pop
      36: aload_0
      37: invokespecial #28                 // Method createUserIfNotExists:()Z
      40: ifne          45
      43: iconst_0
      44: ireturn
      45: aload_0
      46: invokevirtual #29                 // Method waitForConnectivity:()Z
      49: ifne          64
      52: getstatic     #25                 // Field log:Lorg/slf4j/Logger;
      55: ldc           #30                 // String Failed waiting for connectivity
      57: invokeinterface #31,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      62: iconst_0
      63: ireturn
      64: iconst_1
      65: ireturn

  protected java.lang.ProcessBuilder runProcess();
    Code:
       0: new           #33                 // class java/util/ArrayList
       3: dup
       4: invokespecial #34                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #19                 // Field config:Lio/ebean/docker/commands/BaseConfig;
      13: getfield      #35                 // Field io/ebean/docker/commands/BaseConfig.docker:Ljava/lang/String;
      16: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      21: pop
      22: aload_1
      23: ldc           #37                 // String run
      25: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      30: pop
      31: aload_1
      32: ldc           #38                 // String -d
      34: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      39: pop
      40: aload_1
      41: ldc           #39                 // String -p
      43: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      48: pop
      49: aload_1
      50: new           #40                 // class java/lang/StringBuilder
      53: dup
      54: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
      57: ldc           #42                 // String 3
      59: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_0
      63: getfield      #6                  // Field hanaConfig:Lio/ebean/docker/commands/HanaConfig;
      66: invokevirtual #44                 // Method io/ebean/docker/commands/HanaConfig.getInstanceNumber:()Ljava/lang/String;
      69: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: ldc           #45                 // String 13:39013
      74: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      85: pop
      86: aload_1
      87: ldc           #39                 // String -p
      89: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      94: pop
      95: aload_1
      96: new           #40                 // class java/lang/StringBuilder
      99: dup
     100: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
     103: aload_0
     104: getfield      #19                 // Field config:Lio/ebean/docker/commands/BaseConfig;
     107: invokevirtual #47                 // Method io/ebean/docker/commands/BaseConfig.getPort:()I
     110: invokevirtual #48                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     113: ldc           #49                 // String :
     115: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: aload_0
     119: getfield      #19                 // Field config:Lio/ebean/docker/commands/BaseConfig;
     122: invokevirtual #50                 // Method io/ebean/docker/commands/BaseConfig.getInternalPort:()I
     125: invokevirtual #48                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     128: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     131: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     136: pop
     137: aload_1
     138: ldc           #39                 // String -p
     140: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     145: pop
     146: aload_1
     147: new           #40                 // class java/lang/StringBuilder
     150: dup
     151: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
     154: ldc           #42                 // String 3
     156: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: aload_0
     160: getfield      #6                  // Field hanaConfig:Lio/ebean/docker/commands/HanaConfig;
     163: invokevirtual #44                 // Method io/ebean/docker/commands/HanaConfig.getInstanceNumber:()Ljava/lang/String;
     166: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     169: ldc           #51                 // String 41-3
     171: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: aload_0
     175: getfield      #6                  // Field hanaConfig:Lio/ebean/docker/commands/HanaConfig;
     178: invokevirtual #44                 // Method io/ebean/docker/commands/HanaConfig.getInstanceNumber:()Ljava/lang/String;
     181: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     184: ldc           #52                 // String 45:39041-39045
     186: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     189: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     192: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     197: pop
     198: aload_1
     199: ldc           #53                 // String -v
     201: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     206: pop
     207: aload_1
     208: new           #40                 // class java/lang/StringBuilder
     211: dup
     212: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
     215: aload_0
     216: getfield      #6                  // Field hanaConfig:Lio/ebean/docker/commands/HanaConfig;
     219: invokevirtual #54                 // Method io/ebean/docker/commands/HanaConfig.getMountsDirectory:()Ljava/lang/String;
     222: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     225: ldc           #55                 // String :/hana/mounts
     227: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     230: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     233: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     238: pop
     239: aload_1
     240: ldc           #56                 // String --ulimit
     242: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     247: pop
     248: aload_1
     249: ldc           #57                 // String nofile=1048576:1048576
     251: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     256: pop
     257: aload_1
     258: ldc           #58                 // String --sysctl
     260: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     265: pop
     266: aload_1
     267: ldc           #59                 // String kernel.shmmax=1073741824
     269: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     274: pop
     275: aload_1
     276: ldc           #58                 // String --sysctl
     278: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     283: pop
     284: aload_1
     285: ldc           #60                 // String kernel.shmmni=524288
     287: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     292: pop
     293: aload_1
     294: ldc           #58                 // String --sysctl
     296: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     301: pop
     302: aload_1
     303: ldc           #61                 // String kernel.shmall=8388608
     305: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     310: pop
     311: aload_1
     312: ldc           #62                 // String --name
     314: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     319: pop
     320: aload_1
     321: aload_0
     322: getfield      #19                 // Field config:Lio/ebean/docker/commands/BaseConfig;
     325: invokevirtual #20                 // Method io/ebean/docker/commands/BaseConfig.containerName:()Ljava/lang/String;
     328: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     333: pop
     334: aload_1
     335: aload_0
     336: getfield      #19                 // Field config:Lio/ebean/docker/commands/BaseConfig;
     339: invokevirtual #63                 // Method io/ebean/docker/commands/BaseConfig.getImage:()Ljava/lang/String;
     342: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     347: pop
     348: aload_1
     349: ldc           #64                 // String --passwords-url
     351: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     356: pop
     357: aload_1
     358: aload_0
     359: getfield      #6                  // Field hanaConfig:Lio/ebean/docker/commands/HanaConfig;
     362: invokevirtual #65                 // Method io/ebean/docker/commands/HanaConfig.getPasswordsUrl:()Ljava/net/URL;
     365: invokevirtual #66                 // Method java/net/URL.toString:()Ljava/lang/String;
     368: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     373: pop
     374: aload_0
     375: getfield      #6                  // Field hanaConfig:Lio/ebean/docker/commands/HanaConfig;
     378: invokevirtual #15                 // Method io/ebean/docker/commands/HanaConfig.isAgreeToSapLicense:()Z
     381: ifeq          393
     384: aload_1
     385: ldc           #67                 // String --agree-to-sap-license
     387: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     392: pop
     393: aload_0
     394: aload_1
     395: invokevirtual #68                 // Method createProcessBuilder:(Ljava/util/List;)Ljava/lang/ProcessBuilder;
     398: areturn

  private boolean dropUserIfExists();
    Code:
       0: getstatic     #25                 // Field log:Lorg/slf4j/Logger;
       3: ldc           #69                 // String Drop database user {} if exists
       5: aload_0
       6: getfield      #70                 // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
       9: invokevirtual #71                 // Method io/ebean/docker/commands/DbConfig.getUsername:()Ljava/lang/String;
      12: invokeinterface #72,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      17: aload_0
      18: aload_0
      19: invokedynamic #73,  0             // InvokeDynamic #0:accept:(Lio/ebean/docker/commands/HanaContainer;)Ljava/util/function/Consumer;
      24: invokevirtual #74                 // Method sqlProcess:(Ljava/util/function/Consumer;)V
      27: iconst_1
      28: ireturn

  private boolean createUserIfNotExists();
    Code:
       0: getstatic     #25                 // Field log:Lorg/slf4j/Logger;
       3: ldc           #75                 // String Create database user {} if not exists
       5: aload_0
       6: getfield      #70                 // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
       9: invokevirtual #71                 // Method io/ebean/docker/commands/DbConfig.getUsername:()Ljava/lang/String;
      12: invokeinterface #72,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      17: aload_0
      18: aload_0
      19: invokedynamic #76,  0             // InvokeDynamic #1:accept:(Lio/ebean/docker/commands/HanaContainer;)Ljava/util/function/Consumer;
      24: invokevirtual #74                 // Method sqlProcess:(Ljava/util/function/Consumer;)V
      27: iconst_1
      28: ireturn

  private boolean userExists(java.sql.Connection);
    Code:
       0: aload_1
       1: ldc           #77                 // String select count(*) from sys.users where user_name = upper(?)
       3: invokeinterface #78,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
       8: astore_2
       9: aload_2
      10: iconst_1
      11: aload_0
      12: getfield      #70                 // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      15: invokevirtual #71                 // Method io/ebean/docker/commands/DbConfig.getUsername:()Ljava/lang/String;
      18: invokeinterface #79,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      23: aload_2
      24: invokeinterface #80,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
      29: astore_3
      30: aload_3
      31: invokeinterface #81,  1           // InterfaceMethod java/sql/ResultSet.next:()Z
      36: ifeq          84
      39: aload_3
      40: iconst_1
      41: invokeinterface #82,  2           // InterfaceMethod java/sql/ResultSet.getInt:(I)I
      46: istore        4
      48: iload         4
      50: iconst_1
      51: if_icmpne     58
      54: iconst_1
      55: goto          59
      58: iconst_0
      59: istore        5
      61: aload_3
      62: ifnull        71
      65: aload_3
      66: invokeinterface #83,  1           // InterfaceMethod java/sql/ResultSet.close:()V
      71: aload_2
      72: ifnull        81
      75: aload_2
      76: invokeinterface #84,  1           // InterfaceMethod java/sql/PreparedStatement.close:()V
      81: iload         5
      83: ireturn
      84: iconst_0
      85: istore        4
      87: aload_3
      88: ifnull        97
      91: aload_3
      92: invokeinterface #83,  1           // InterfaceMethod java/sql/ResultSet.close:()V
      97: aload_2
      98: ifnull        107
     101: aload_2
     102: invokeinterface #84,  1           // InterfaceMethod java/sql/PreparedStatement.close:()V
     107: iload         4
     109: ireturn
     110: astore        4
     112: aload_3
     113: ifnull        134
     116: aload_3
     117: invokeinterface #83,  1           // InterfaceMethod java/sql/ResultSet.close:()V
     122: goto          134
     125: astore        5
     127: aload         4
     129: aload         5
     131: invokevirtual #86                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     134: aload         4
     136: athrow
     137: astore_3
     138: aload_2
     139: ifnull        159
     142: aload_2
     143: invokeinterface #84,  1           // InterfaceMethod java/sql/PreparedStatement.close:()V
     148: goto          159
     151: astore        4
     153: aload_3
     154: aload         4
     156: invokevirtual #86                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     159: aload_3
     160: athrow
     161: astore_2
     162: getstatic     #25                 // Field log:Lorg/slf4j/Logger;
     165: ldc           #88                 // String Failed to execute sql to check if user exists
     167: aload_2
     168: invokeinterface #89,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     173: iconst_0
     174: ireturn
    Exception table:
       from    to  target type
          30    61   110   Class java/lang/Throwable
          84    87   110   Class java/lang/Throwable
         116   122   125   Class java/lang/Throwable
           9    71   137   Class java/lang/Throwable
          84    97   137   Class java/lang/Throwable
         110   137   137   Class java/lang/Throwable
         142   148   151   Class java/lang/Throwable
           0    81   161   Class java/sql/SQLException
          84   107   161   Class java/sql/SQLException
         110   161   161   Class java/sql/SQLException

  private <E extends java.lang.Throwable> void sneakyThrow(java.lang.Throwable) throws E;
    Code:
       0: aload_1
       1: athrow

  public boolean waitForDatabaseReady();
    Code:
       0: aload_0
       1: invokespecial #90                 // Method io/ebean/docker/commands/DbContainer.waitForDatabaseReady:()Z
       4: ireturn

  public boolean startContainerOnly();
    Code:
       0: aload_0
       1: invokespecial #91                 // Method io/ebean/docker/commands/DbContainer.startContainerOnly:()Z
       4: ireturn

  public boolean start();
    Code:
       0: aload_0
       1: invokespecial #92                 // Method io/ebean/docker/commands/DbContainer.start:()Z
       4: ireturn

  public java.sql.Connection createConnection() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #93                 // Method io/ebean/docker/commands/DbContainer.createConnection:()Ljava/sql/Connection;
       4: areturn

  public java.lang.String jdbcUrl();
    Code:
       0: aload_0
       1: invokespecial #94                 // Method io/ebean/docker/commands/DbContainer.jdbcUrl:()Ljava/lang/String;
       4: areturn

  public void stopOnly();
    Code:
       0: aload_0
       1: invokespecial #95                 // Method io/ebean/docker/commands/DbContainer.stopOnly:()V
       4: return

  public void stopRemove();
    Code:
       0: aload_0
       1: invokespecial #96                 // Method io/ebean/docker/commands/DbContainer.stopRemove:()V
       4: return

  public void stop();
    Code:
       0: aload_0
       1: invokespecial #97                 // Method io/ebean/docker/commands/DbContainer.stop:()V
       4: return

  public void registerShutdownHook();
    Code:
       0: aload_0
       1: invokespecial #98                 // Method io/ebean/docker/commands/DbContainer.registerShutdownHook:()V
       4: return

  public boolean isRunning();
    Code:
       0: aload_0
       1: invokespecial #99                 // Method io/ebean/docker/commands/DbContainer.isRunning:()Z
       4: ireturn

  public io.ebean.docker.container.ContainerConfig config();
    Code:
       0: aload_0
       1: invokespecial #100                // Method io/ebean/docker/commands/DbContainer.config:()Lio/ebean/docker/container/ContainerConfig;
       4: areturn

  private void lambda$createUserIfNotExists$1(java.sql.Connection);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #101                // Method userExists:(Ljava/sql/Connection;)Z
       5: ifne          58
       8: aload_0
       9: aload_1
      10: new           #40                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #102                // String create user
      19: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #70                 // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      26: invokevirtual #71                 // Method io/ebean/docker/commands/DbConfig.getUsername:()Ljava/lang/String;
      29: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #103                // String  password
      34: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_0
      38: getfield      #70                 // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      41: invokevirtual #104                // Method io/ebean/docker/commands/DbConfig.getPassword:()Ljava/lang/String;
      44: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: ldc           #105                // String  no force_first_password_change
      49: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: invokevirtual #106                // Method sqlRun:(Ljava/sql/Connection;Ljava/lang/String;)V
      58: return

  private void lambda$dropUserIfExists$0(java.sql.Connection);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #101                // Method userExists:(Ljava/sql/Connection;)Z
       5: ifeq          43
       8: aload_0
       9: aload_1
      10: new           #40                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #107                // String drop user
      19: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #70                 // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      26: invokevirtual #71                 // Method io/ebean/docker/commands/DbConfig.getUsername:()Ljava/lang/String;
      29: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #108                // String  cascade
      34: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokevirtual #106                // Method sqlRun:(Ljava/sql/Connection;Ljava/lang/String;)V
      43: return

  static {};
    Code:
       0: ldc           #109                // class io/ebean/docker/commands/Commands
       2: invokestatic  #110                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #25                 // Field log:Lorg/slf4j/Logger;
       8: return
}
