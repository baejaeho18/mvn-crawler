Compiled from "BaseContainer.java"
abstract class io.ebean.docker.commands.BaseContainer implements io.ebean.docker.container.Container {
  static final org.slf4j.Logger log;

  protected final io.ebean.docker.commands.BaseConfig config;

  protected final io.ebean.docker.commands.Commands commands;

  io.ebean.docker.commands.BaseContainer(io.ebean.docker.commands.BaseConfig);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
       9: aload_0
      10: new           #3                  // class io/ebean/docker/commands/Commands
      13: dup
      14: aload_1
      15: getfield      #4                  // Field io/ebean/docker/commands/BaseConfig.docker:Ljava/lang/String;
      18: invokespecial #5                  // Method io/ebean/docker/commands/Commands."<init>":(Ljava/lang/String;)V
      21: putfield      #6                  // Field commands:Lio/ebean/docker/commands/Commands;
      24: return

  protected abstract java.lang.ProcessBuilder runProcess();

  public io.ebean.docker.container.ContainerConfig config();
    Code:
       0: aload_0
       1: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
       4: areturn

  public boolean start();
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: invokevirtual #7                  // Method startWithConnectivity:()Z
       6: invokevirtual #8                  // Method logStarted:(Z)Z
       9: invokevirtual #9                  // Method shutdownHook:(Z)Z
      12: ireturn

  public boolean isRunning();
    Code:
       0: aload_0
       1: getfield      #6                  // Field commands:Lio/ebean/docker/commands/Commands;
       4: aload_0
       5: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
       8: invokevirtual #10                 // Method io/ebean/docker/commands/BaseConfig.containerName:()Ljava/lang/String;
      11: invokevirtual #11                 // Method io/ebean/docker/commands/Commands.isRunning:(Ljava/lang/String;)Z
      14: ireturn

  public void registerShutdownHook();
    Code:
       0: invokestatic  #12                 // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
       3: new           #13                 // class io/ebean/docker/commands/BaseContainer$Hook
       6: dup
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
      12: invokevirtual #14                 // Method io/ebean/docker/commands/BaseConfig.shutdownMode:()Lio/ebean/docker/commands/StopMode;
      15: invokespecial #15                 // Method io/ebean/docker/commands/BaseContainer$Hook."<init>":(Lio/ebean/docker/commands/BaseContainer;Lio/ebean/docker/commands/StopMode;)V
      18: invokevirtual #16                 // Method java/lang/Runtime.addShutdownHook:(Ljava/lang/Thread;)V
      21: return

  protected boolean shutdownHook(boolean);
    Code:
       0: getstatic     #17                 // Field io/ebean/docker/commands/StopMode.None:Lio/ebean/docker/commands/StopMode;
       3: aload_0
       4: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
       7: invokevirtual #14                 // Method io/ebean/docker/commands/BaseConfig.shutdownMode:()Lio/ebean/docker/commands/StopMode;
      10: if_acmpeq     17
      13: aload_0
      14: invokevirtual #18                 // Method registerShutdownHook:()V
      17: iload_1
      18: ireturn

  protected boolean startWithConnectivity();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method startIfNeeded:()Z
       4: pop
       5: aload_0
       6: invokevirtual #20                 // Method waitForConnectivity:()Z
       9: ifne          31
      12: getstatic     #21                 // Field log:Lorg/slf4j/Logger;
      15: ldc           #22                 // String Container {} failed to start - waiting for connectivity
      17: aload_0
      18: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
      21: invokevirtual #10                 // Method io/ebean/docker/commands/BaseConfig.containerName:()Ljava/lang/String;
      24: invokeinterface #23,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      29: iconst_0
      30: ireturn
      31: iconst_1
      32: ireturn

  boolean startIfNeeded();
    Code:
       0: aload_0
       1: getfield      #6                  // Field commands:Lio/ebean/docker/commands/Commands;
       4: aload_0
       5: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
       8: invokevirtual #10                 // Method io/ebean/docker/commands/BaseConfig.containerName:()Ljava/lang/String;
      11: invokevirtual #11                 // Method io/ebean/docker/commands/Commands.isRunning:(Ljava/lang/String;)Z
      14: ifeq          28
      17: aload_0
      18: iconst_1
      19: invokespecial #24                 // Method checkPort:(Z)V
      22: aload_0
      23: invokevirtual #25                 // Method logRunning:()V
      26: iconst_1
      27: ireturn
      28: aload_0
      29: getfield      #6                  // Field commands:Lio/ebean/docker/commands/Commands;
      32: aload_0
      33: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
      36: invokevirtual #10                 // Method io/ebean/docker/commands/BaseConfig.containerName:()Ljava/lang/String;
      39: invokevirtual #26                 // Method io/ebean/docker/commands/Commands.isRegistered:(Ljava/lang/String;)Z
      42: ifeq          61
      45: aload_0
      46: iconst_0
      47: invokespecial #24                 // Method checkPort:(Z)V
      50: aload_0
      51: invokevirtual #27                 // Method logStart:()V
      54: aload_0
      55: invokevirtual #28                 // Method startContainer:()V
      58: goto          69
      61: aload_0
      62: invokevirtual #29                 // Method logRun:()V
      65: aload_0
      66: invokevirtual #30                 // Method runContainer:()V
      69: iconst_0
      70: ireturn

  void startContainer();
    Code:
       0: aload_0
       1: getfield      #6                  // Field commands:Lio/ebean/docker/commands/Commands;
       4: aload_0
       5: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
       8: invokevirtual #10                 // Method io/ebean/docker/commands/BaseConfig.containerName:()Ljava/lang/String;
      11: invokevirtual #31                 // Method io/ebean/docker/commands/Commands.start:(Ljava/lang/String;)V
      14: return

  private void checkPort(boolean);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commands:Lio/ebean/docker/commands/Commands;
       4: aload_0
       5: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
       8: invokevirtual #10                 // Method io/ebean/docker/commands/BaseConfig.containerName:()Ljava/lang/String;
      11: aload_0
      12: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
      15: invokevirtual #32                 // Method io/ebean/docker/commands/BaseConfig.getPort:()I
      18: invokevirtual #33                 // Method io/ebean/docker/commands/Commands.registeredPortMatch:(Ljava/lang/String;I)Ljava/lang/String;
      21: astore_2
      22: aload_2
      23: ifnull        154
      26: new           #34                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #36                 // String The existing port bindings [
      35: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_2
      39: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #38                 // String ] for this docker container [
      44: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_0
      48: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
      51: invokevirtual #10                 // Method io/ebean/docker/commands/BaseConfig.containerName:()Ljava/lang/String;
      54: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: ldc           #39                 // String ] don\'t match the configured port [
      59: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_0
      63: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
      66: invokevirtual #32                 // Method io/ebean/docker/commands/BaseConfig.getPort:()I
      69: invokevirtual #40                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      72: ldc           #41                 // String ] so it seems the port has changed? Maybe look to remove the container first if you want to use the new port via:
      74: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: astore_3
      81: iload_1
      82: ifeq          115
      85: new           #34                 // class java/lang/StringBuilder
      88: dup
      89: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      92: aload_3
      93: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: ldc           #43                 // String     docker stop
      98: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: aload_0
     102: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
     105: invokevirtual #10                 // Method io/ebean/docker/commands/BaseConfig.containerName:()Ljava/lang/String;
     108: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     114: astore_3
     115: new           #34                 // class java/lang/StringBuilder
     118: dup
     119: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
     122: aload_3
     123: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: ldc           #44                 // String     docker rm
     128: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: aload_0
     132: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
     135: invokevirtual #10                 // Method io/ebean/docker/commands/BaseConfig.containerName:()Ljava/lang/String;
     138: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     144: astore_3
     145: new           #45                 // class java/lang/IllegalStateException
     148: dup
     149: aload_3
     150: invokespecial #46                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     153: athrow
     154: return

  void runContainer();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method runProcess:()Ljava/lang/ProcessBuilder;
       4: invokestatic  #48                 // Method io/ebean/docker/commands/process/ProcessHandler.process:(Ljava/lang/ProcessBuilder;)Lio/ebean/docker/commands/process/ProcessResult;
       7: pop
       8: return

  boolean logsContain(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
       5: invokevirtual #10                 // Method io/ebean/docker/commands/BaseConfig.containerName:()Ljava/lang/String;
       8: aload_1
       9: aload_2
      10: invokevirtual #49                 // Method logsContain:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
      13: ireturn

  boolean logsContain(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commands:Lio/ebean/docker/commands/Commands;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #50                 // Method io/ebean/docker/commands/Commands.logsContain:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
      10: ireturn

  java.util.List<java.lang.String> logs();
    Code:
       0: aload_0
       1: getfield      #6                  // Field commands:Lio/ebean/docker/commands/Commands;
       4: aload_0
       5: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
       8: invokevirtual #10                 // Method io/ebean/docker/commands/BaseConfig.containerName:()Ljava/lang/String;
      11: invokevirtual #51                 // Method io/ebean/docker/commands/Commands.logs:(Ljava/lang/String;)Ljava/util/List;
      14: areturn

  abstract boolean checkConnectivity();

  boolean waitForConnectivity();
    Code:
       0: getstatic     #21                 // Field log:Lorg/slf4j/Logger;
       3: ldc           #52                 // String waitForConnectivity {} ...
       5: aload_0
       6: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
       9: invokevirtual #10                 // Method io/ebean/docker/commands/BaseConfig.containerName:()Ljava/lang/String;
      12: invokeinterface #53,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      17: iconst_0
      18: istore_1
      19: iload_1
      20: sipush        200
      23: if_icmpge     84
      26: aload_0
      27: invokevirtual #54                 // Method checkConnectivity:()Z
      30: ifeq          35
      33: iconst_1
      34: ireturn
      35: iload_1
      36: bipush        10
      38: if_icmpge     46
      41: bipush        10
      43: goto          60
      46: iload_1
      47: bipush        20
      49: if_icmpge     57
      52: bipush        20
      54: goto          60
      57: sipush        200
      60: istore_2
      61: iload_2
      62: i2l
      63: invokestatic  #55                 // Method java/lang/Thread.sleep:(J)V
      66: goto          78
      69: astore_2
      70: invokestatic  #57                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      73: invokevirtual #58                 // Method java/lang/Thread.interrupt:()V
      76: iconst_0
      77: ireturn
      78: iinc          1, 1
      81: goto          19
      84: iconst_0
      85: ireturn
    Exception table:
       from    to  target type
          35    66    69   Class java/lang/InterruptedException

  public void stop();
    Code:
       0: getstatic     #59                 // Field io/ebean/docker/commands/BaseContainer$1.$SwitchMap$io$ebean$docker$commands$StopMode:[I
       3: aload_0
       4: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
       7: invokevirtual #60                 // Method io/ebean/docker/commands/BaseConfig.getStopMode:()Lio/ebean/docker/commands/StopMode;
      10: invokevirtual #61                 // Method io/ebean/docker/commands/StopMode.ordinal:()I
      13: iaload
      14: lookupswitch  { // 2
                     1: 40
                     2: 47
               default: 51
          }
      40: aload_0
      41: invokevirtual #62                 // Method stopRemove:()V
      44: goto          51
      47: aload_0
      48: invokevirtual #63                 // Method stopOnly:()V
      51: return

  public void stopRemove();
    Code:
       0: aload_0
       1: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
       4: invokevirtual #64                 // Method io/ebean/docker/commands/BaseConfig.isStopModeNone:()Z
       7: ifne          24
      10: aload_0
      11: getfield      #6                  // Field commands:Lio/ebean/docker/commands/Commands;
      14: aload_0
      15: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
      18: invokevirtual #10                 // Method io/ebean/docker/commands/BaseConfig.containerName:()Ljava/lang/String;
      21: invokevirtual #65                 // Method io/ebean/docker/commands/Commands.stopRemove:(Ljava/lang/String;)V
      24: return

  public void stopOnly();
    Code:
       0: aload_0
       1: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
       4: invokevirtual #64                 // Method io/ebean/docker/commands/BaseConfig.isStopModeNone:()Z
       7: ifne          24
      10: aload_0
      11: getfield      #6                  // Field commands:Lio/ebean/docker/commands/Commands;
      14: aload_0
      15: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
      18: invokevirtual #10                 // Method io/ebean/docker/commands/BaseConfig.containerName:()Ljava/lang/String;
      21: invokevirtual #66                 // Method io/ebean/docker/commands/Commands.stopIfRunning:(Ljava/lang/String;)V
      24: return

  protected java.lang.ProcessBuilder createProcessBuilder(java.util.List<java.lang.String>);
    Code:
       0: new           #67                 // class java/lang/ProcessBuilder
       3: dup
       4: iconst_0
       5: anewarray     #68                 // class java/lang/String
       8: invokespecial #69                 // Method java/lang/ProcessBuilder."<init>":([Ljava/lang/String;)V
      11: astore_2
      12: aload_2
      13: aload_1
      14: invokevirtual #70                 // Method java/lang/ProcessBuilder.command:(Ljava/util/List;)Ljava/lang/ProcessBuilder;
      17: pop
      18: getstatic     #21                 // Field log:Lorg/slf4j/Logger;
      21: invokeinterface #71,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      26: ifeq          43
      29: getstatic     #21                 // Field log:Lorg/slf4j/Logger;
      32: ldc           #72                 // String
      34: aload_1
      35: invokestatic  #73                 // Method java/lang/String.join:(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;
      38: invokeinterface #74,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      43: aload_2
      44: areturn

  protected java.util.List<java.lang.String> dockerRun();
    Code:
       0: new           #75                 // class java/util/ArrayList
       3: dup
       4: invokespecial #76                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
      13: getfield      #4                  // Field io/ebean/docker/commands/BaseConfig.docker:Ljava/lang/String;
      16: invokeinterface #77,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      21: pop
      22: aload_1
      23: ldc           #78                 // String run
      25: invokeinterface #77,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      30: pop
      31: aload_1
      32: ldc           #79                 // String -d
      34: invokeinterface #77,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      39: pop
      40: aload_1
      41: ldc           #80                 // String --name
      43: invokeinterface #77,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      48: pop
      49: aload_1
      50: aload_0
      51: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
      54: invokevirtual #10                 // Method io/ebean/docker/commands/BaseConfig.containerName:()Ljava/lang/String;
      57: invokeinterface #77,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      62: pop
      63: aload_1
      64: ldc           #81                 // String -p
      66: invokeinterface #77,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      71: pop
      72: aload_1
      73: new           #34                 // class java/lang/StringBuilder
      76: dup
      77: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      80: aload_0
      81: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
      84: invokevirtual #32                 // Method io/ebean/docker/commands/BaseConfig.getPort:()I
      87: invokevirtual #40                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      90: ldc           #82                 // String :
      92: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: aload_0
      96: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
      99: invokevirtual #83                 // Method io/ebean/docker/commands/BaseConfig.getInternalPort:()I
     102: invokevirtual #40                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     105: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     108: invokeinterface #77,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     113: pop
     114: aload_1
     115: areturn

  void logRunning();
    Code:
       0: getstatic     #21                 // Field log:Lorg/slf4j/Logger;
       3: ldc           #84                 // String Container {} already running with port:{}
       5: aload_0
       6: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
       9: invokevirtual #10                 // Method io/ebean/docker/commands/BaseConfig.containerName:()Ljava/lang/String;
      12: aload_0
      13: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
      16: invokevirtual #32                 // Method io/ebean/docker/commands/BaseConfig.getPort:()I
      19: invokestatic  #85                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      22: invokeinterface #86,  4           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      27: return

  void logRun();
    Code:
       0: getstatic     #21                 // Field log:Lorg/slf4j/Logger;
       3: ldc           #87                 // String Run container {} with port:{}
       5: aload_0
       6: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
       9: invokevirtual #10                 // Method io/ebean/docker/commands/BaseConfig.containerName:()Ljava/lang/String;
      12: aload_0
      13: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
      16: invokevirtual #32                 // Method io/ebean/docker/commands/BaseConfig.getPort:()I
      19: invokestatic  #85                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      22: invokeinterface #86,  4           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      27: return

  void logStart();
    Code:
       0: getstatic     #21                 // Field log:Lorg/slf4j/Logger;
       3: ldc           #88                 // String Start container {} with port:{}
       5: aload_0
       6: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
       9: invokevirtual #10                 // Method io/ebean/docker/commands/BaseConfig.containerName:()Ljava/lang/String;
      12: aload_0
      13: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
      16: invokevirtual #32                 // Method io/ebean/docker/commands/BaseConfig.getPort:()I
      19: invokestatic  #85                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      22: invokeinterface #86,  4           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      27: return

  void logNotStarted();
    Code:
       0: getstatic     #21                 // Field log:Lorg/slf4j/Logger;
       3: ldc           #89                 // String Failed to start container {} with port {}
       5: aload_0
       6: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
       9: invokevirtual #10                 // Method io/ebean/docker/commands/BaseConfig.containerName:()Ljava/lang/String;
      12: aload_0
      13: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
      16: invokevirtual #32                 // Method io/ebean/docker/commands/BaseConfig.getPort:()I
      19: invokestatic  #85                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      22: invokeinterface #90,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      27: return

  void logStarted();
    Code:
       0: getstatic     #21                 // Field log:Lorg/slf4j/Logger;
       3: ldc           #91                 // String Container {} ready with port {}
       5: aload_0
       6: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
       9: invokevirtual #10                 // Method io/ebean/docker/commands/BaseConfig.containerName:()Ljava/lang/String;
      12: aload_0
      13: getfield      #2                  // Field config:Lio/ebean/docker/commands/BaseConfig;
      16: invokevirtual #32                 // Method io/ebean/docker/commands/BaseConfig.getPort:()I
      19: invokestatic  #85                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      22: invokeinterface #92,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      27: return

  boolean logStarted(boolean);
    Code:
       0: iload_1
       1: ifne          11
       4: aload_0
       5: invokevirtual #93                 // Method logNotStarted:()V
       8: goto          15
      11: aload_0
      12: invokevirtual #94                 // Method logStarted:()V
      15: iload_1
      16: ireturn

  static {};
    Code:
       0: ldc           #3                  // class io/ebean/docker/commands/Commands
       2: invokestatic  #95                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #21                 // Field log:Lorg/slf4j/Logger;
       8: return
}
