Compiled from "PostgresContainer.java"
public class io.ebean.docker.commands.PostgresContainer extends io.ebean.docker.commands.JdbcBaseDbContainer implements io.ebean.docker.container.Container {
  public static io.ebean.docker.commands.PostgresContainer create(java.lang.String, java.util.Properties);
    Code:
       0: new           #1                  // class io/ebean/docker/commands/PostgresContainer
       3: dup
       4: new           #2                  // class io/ebean/docker/commands/PostgresConfig
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #3                  // Method io/ebean/docker/commands/PostgresConfig."<init>":(Ljava/lang/String;Ljava/util/Properties;)V
      13: invokespecial #4                  // Method "<init>":(Lio/ebean/docker/commands/PostgresConfig;)V
      16: areturn

  public io.ebean.docker.commands.PostgresContainer(io.ebean.docker.commands.PostgresConfig);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method io/ebean/docker/commands/JdbcBaseDbContainer."<init>":(Lio/ebean/docker/commands/DbConfig;)V
       5: return

  void createDatabase();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #6                  // Method createRoleAndDatabase:(Z)V
       5: return

  void dropCreateDatabase();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #6                  // Method createRoleAndDatabase:(Z)V
       5: return

  private void createRoleAndDatabase(boolean);
    Code:
       0: aload_0
       1: getfield      #7                  // Field config:Lio/ebean/docker/commands/BaseConfig;
       4: invokevirtual #8                  // Method io/ebean/docker/commands/BaseConfig.createAdminConnection:()Ljava/sql/Connection;
       7: astore_2
       8: iload_1
       9: ifeq          36
      12: aload_0
      13: aload_2
      14: aload_0
      15: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      18: invokevirtual #10                 // Method io/ebean/docker/commands/DbConfig.getDbName:()Ljava/lang/String;
      21: invokespecial #11                 // Method dropDatabaseIfExists:(Ljava/sql/Connection;Ljava/lang/String;)V
      24: aload_0
      25: aload_2
      26: aload_0
      27: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      30: invokevirtual #12                 // Method io/ebean/docker/commands/DbConfig.getUsername:()Ljava/lang/String;
      33: invokespecial #13                 // Method dropRoleIfExists:(Ljava/sql/Connection;Ljava/lang/String;)V
      36: aload_0
      37: aload_2
      38: aload_0
      39: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      42: invokevirtual #10                 // Method io/ebean/docker/commands/DbConfig.getDbName:()Ljava/lang/String;
      45: invokespecial #14                 // Method databaseNotExists:(Ljava/sql/Connection;Ljava/lang/String;)Z
      48: ifeq          67
      51: aload_0
      52: aload_2
      53: iload_1
      54: invokespecial #15                 // Method createExtraDb:(Ljava/sql/Connection;Z)V
      57: aload_0
      58: aload_2
      59: invokespecial #16                 // Method createRole:(Ljava/sql/Connection;)V
      62: aload_0
      63: aload_2
      64: invokespecial #17                 // Method createDatabase:(Ljava/sql/Connection;)V
      67: aload_2
      68: ifnull        104
      71: aload_2
      72: invokeinterface #18,  1           // InterfaceMethod java/sql/Connection.close:()V
      77: goto          104
      80: astore_3
      81: aload_2
      82: ifnull        102
      85: aload_2
      86: invokeinterface #18,  1           // InterfaceMethod java/sql/Connection.close:()V
      91: goto          102
      94: astore        4
      96: aload_3
      97: aload         4
      99: invokevirtual #20                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     102: aload_3
     103: athrow
     104: goto          119
     107: astore_2
     108: new           #22                 // class java/lang/RuntimeException
     111: dup
     112: ldc           #23                 // String Error when creating database and role
     114: aload_2
     115: invokespecial #24                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     118: athrow
     119: return
    Exception table:
       from    to  target type
           8    67    80   Class java/lang/Throwable
          85    91    94   Class java/lang/Throwable
           0   104   107   Class java/sql/SQLException

  private void dropRoleIfExists(java.sql.Connection, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #25                 // class java/lang/StringBuilder
       5: dup
       6: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
       9: ldc           #27                 // String drop role if exists
      11: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_2
      15: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      21: invokevirtual #30                 // Method sqlRun:(Ljava/sql/Connection;Ljava/lang/String;)V
      24: return

  private void dropDatabaseIfExists(java.sql.Connection, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #25                 // class java/lang/StringBuilder
       5: dup
       6: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
       9: ldc           #31                 // String drop database if exists
      11: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_2
      15: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      21: invokevirtual #30                 // Method sqlRun:(Ljava/sql/Connection;Ljava/lang/String;)V
      24: return

  private void createExtraDb(java.sql.Connection, boolean);
    Code:
       0: aload_0
       1: invokespecial #32                 // Method getExtraDbUser:()Ljava/lang/String;
       4: astore_3
       5: aload_0
       6: aload_3
       7: invokevirtual #33                 // Method defined:(Ljava/lang/String;)Z
      10: ifeq          96
      13: aload_0
      14: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      17: invokevirtual #34                 // Method io/ebean/docker/commands/DbConfig.getExtraDb:()Ljava/lang/String;
      20: astore        4
      22: iload_2
      23: ifeq          39
      26: aload_0
      27: aload_1
      28: aload         4
      30: invokespecial #11                 // Method dropDatabaseIfExists:(Ljava/sql/Connection;Ljava/lang/String;)V
      33: aload_0
      34: aload_1
      35: aload_3
      36: invokespecial #13                 // Method dropRoleIfExists:(Ljava/sql/Connection;Ljava/lang/String;)V
      39: aload_0
      40: aload_1
      41: aload_3
      42: aload_0
      43: aload_0
      44: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      47: invokevirtual #35                 // Method io/ebean/docker/commands/DbConfig.getExtraDbPassword:()Ljava/lang/String;
      50: aload_0
      51: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      54: invokevirtual #36                 // Method io/ebean/docker/commands/DbConfig.getPassword:()Ljava/lang/String;
      57: invokespecial #37                 // Method getWithDefault:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      60: invokespecial #38                 // Method createRole:(Ljava/sql/Connection;Ljava/lang/String;Ljava/lang/String;)V
      63: aload_0
      64: aload_1
      65: aload         4
      67: invokespecial #14                 // Method databaseNotExists:(Ljava/sql/Connection;Ljava/lang/String;)Z
      70: ifeq          96
      73: aload_0
      74: aload_1
      75: iconst_0
      76: aload         4
      78: aload_3
      79: aload_0
      80: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      83: invokevirtual #39                 // Method io/ebean/docker/commands/DbConfig.getExtraDbInitSqlFile:()Ljava/lang/String;
      86: aload_0
      87: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      90: invokevirtual #40                 // Method io/ebean/docker/commands/DbConfig.getExtraDbSeedSqlFile:()Ljava/lang/String;
      93: invokespecial #41                 // Method createDatabase:(Ljava/sql/Connection;ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      96: return

  private void createDatabase(java.sql.Connection);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: aload_0
       4: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
       7: invokevirtual #10                 // Method io/ebean/docker/commands/DbConfig.getDbName:()Ljava/lang/String;
      10: aload_0
      11: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      14: invokevirtual #12                 // Method io/ebean/docker/commands/DbConfig.getUsername:()Ljava/lang/String;
      17: aload_0
      18: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      21: invokevirtual #42                 // Method io/ebean/docker/commands/DbConfig.getInitSqlFile:()Ljava/lang/String;
      24: aload_0
      25: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      28: invokevirtual #43                 // Method io/ebean/docker/commands/DbConfig.getSeedSqlFile:()Ljava/lang/String;
      31: invokespecial #41                 // Method createDatabase:(Ljava/sql/Connection;ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      34: return

  private void createRole(java.sql.Connection);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
       6: invokevirtual #12                 // Method io/ebean/docker/commands/DbConfig.getUsername:()Ljava/lang/String;
       9: aload_0
      10: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      13: invokevirtual #36                 // Method io/ebean/docker/commands/DbConfig.getPassword:()Ljava/lang/String;
      16: invokespecial #38                 // Method createRole:(Ljava/sql/Connection;Ljava/lang/String;Ljava/lang/String;)V
      19: return

  private void createRole(java.sql.Connection, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #25                 // class java/lang/StringBuilder
       5: dup
       6: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
       9: ldc           #44                 // String select rolname from pg_roles where rolname = \'
      11: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_2
      15: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: ldc           #45                 // String \'
      20: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: invokevirtual #46                 // Method sqlHasRow:(Ljava/sql/Connection;Ljava/lang/String;)Z
      29: ifne          70
      32: aload_0
      33: aload_1
      34: new           #25                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #47                 // String create role
      43: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_2
      47: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: ldc           #48                 // String  password \'
      52: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_3
      56: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: ldc           #49                 // String \' login createrole
      61: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokevirtual #30                 // Method sqlRun:(Ljava/sql/Connection;Ljava/lang/String;)V
      70: return

  private boolean databaseNotExists(java.sql.Connection, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #25                 // class java/lang/StringBuilder
       5: dup
       6: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
       9: ldc           #50                 // String select 1 from pg_database where datname = \'
      11: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_2
      15: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: ldc           #45                 // String \'
      20: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: invokevirtual #46                 // Method sqlHasRow:(Ljava/sql/Connection;Ljava/lang/String;)Z
      29: ifne          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn

  private void createDatabase(java.sql.Connection, boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #25                 // class java/lang/StringBuilder
       5: dup
       6: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
       9: ldc           #51                 // String create database
      11: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_3
      15: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: ldc           #52                 // String  with owner
      20: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload         4
      25: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokevirtual #30                 // Method sqlRun:(Ljava/sql/Connection;Ljava/lang/String;)V
      34: iload_2
      35: ifeq          42
      38: aload_0
      39: invokespecial #53                 // Method addExtensions:()V
      42: aload_0
      43: aload         5
      45: invokevirtual #33                 // Method defined:(Ljava/lang/String;)Z
      48: ifeq          60
      51: aload_0
      52: aload_3
      53: aload         4
      55: aload         5
      57: invokevirtual #54                 // Method runDbSqlFile:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      60: aload_0
      61: aload         6
      63: invokevirtual #33                 // Method defined:(Ljava/lang/String;)Z
      66: ifeq          78
      69: aload_0
      70: aload_3
      71: aload         4
      73: aload         6
      75: invokevirtual #54                 // Method runDbSqlFile:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      78: return

  private void addExtensions();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
       5: invokevirtual #55                 // Method io/ebean/docker/commands/DbConfig.getExtensions:()Ljava/lang/String;
       8: invokevirtual #33                 // Method defined:(Ljava/lang/String;)Z
      11: ifne          15
      14: return
      15: aload_0
      16: aload_0
      17: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      20: invokevirtual #55                 // Method io/ebean/docker/commands/DbConfig.getExtensions:()Ljava/lang/String;
      23: invokespecial #56                 // Method parseExtensions:(Ljava/lang/String;)Ljava/util/List;
      26: astore_1
      27: aload_1
      28: invokeinterface #57,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      33: ifne          156
      36: aload_0
      37: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      40: aload_0
      41: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      44: invokevirtual #58                 // Method io/ebean/docker/commands/DbConfig.jdbcUrl:()Ljava/lang/String;
      47: invokevirtual #59                 // Method io/ebean/docker/commands/DbConfig.createAdminConnection:(Ljava/lang/String;)Ljava/sql/Connection;
      50: astore_2
      51: aload_1
      52: invokeinterface #60,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      57: astore_3
      58: aload_3
      59: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      64: ifeq          106
      67: aload_3
      68: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      73: checkcast     #63                 // class java/lang/String
      76: astore        4
      78: aload_0
      79: aload_2
      80: new           #25                 // class java/lang/StringBuilder
      83: dup
      84: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      87: ldc           #64                 // String create extension if not exists
      89: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: aload         4
      94: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: invokevirtual #30                 // Method sqlRun:(Ljava/sql/Connection;Ljava/lang/String;)V
     103: goto          58
     106: aload_2
     107: ifnull        143
     110: aload_2
     111: invokeinterface #18,  1           // InterfaceMethod java/sql/Connection.close:()V
     116: goto          143
     119: astore_3
     120: aload_2
     121: ifnull        141
     124: aload_2
     125: invokeinterface #18,  1           // InterfaceMethod java/sql/Connection.close:()V
     130: goto          141
     133: astore        4
     135: aload_3
     136: aload         4
     138: invokevirtual #20                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     141: aload_3
     142: athrow
     143: goto          156
     146: astore_2
     147: new           #22                 // class java/lang/RuntimeException
     150: dup
     151: aload_2
     152: invokespecial #65                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     155: athrow
     156: return
    Exception table:
       from    to  target type
          51   106   119   Class java/lang/Throwable
         124   130   133   Class java/lang/Throwable
          36   143   146   Class java/sql/SQLException

  private java.lang.String getExtraDbUser();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
       5: invokevirtual #66                 // Method io/ebean/docker/commands/DbConfig.getExtraDbUser:()Ljava/lang/String;
       8: aload_0
       9: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      12: invokevirtual #34                 // Method io/ebean/docker/commands/DbConfig.getExtraDb:()Ljava/lang/String;
      15: invokespecial #37                 // Method getWithDefault:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      18: astore_1
      19: aload_1
      20: ifnull        41
      23: aload_1
      24: aload_0
      25: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      28: invokevirtual #12                 // Method io/ebean/docker/commands/DbConfig.getUsername:()Ljava/lang/String;
      31: invokevirtual #67                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      34: ifne          41
      37: aload_1
      38: goto          42
      41: aconst_null
      42: areturn

  protected void executeSqlFile(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #68                 // Method sqlFileProcess:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/ProcessBuilder;
       7: astore        4
       9: aload_0
      10: ldc           #69                 // String ERROR
      12: aload         4
      14: new           #25                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #70                 // String Error executing init sql file:
      23: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_3
      27: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokevirtual #71                 // Method executeWithout:(Ljava/lang/String;Ljava/lang/ProcessBuilder;Ljava/lang/String;)Z
      36: pop
      37: return

  private java.lang.ProcessBuilder sqlFileProcess(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #72                 // Method execPsql:()Ljava/util/List;
       4: astore        4
       6: aload         4
       8: aload_1
       9: invokeinterface #73,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      14: pop
      15: aload         4
      17: ldc           #74                 // String -d
      19: invokeinterface #73,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      24: pop
      25: aload         4
      27: aload_2
      28: invokeinterface #73,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      33: pop
      34: aload         4
      36: ldc           #75                 // String -f
      38: invokeinterface #73,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      43: pop
      44: aload         4
      46: aload_3
      47: invokeinterface #73,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      52: pop
      53: aload_0
      54: aload         4
      56: invokevirtual #76                 // Method createProcessBuilder:(Ljava/util/List;)Ljava/lang/ProcessBuilder;
      59: areturn

  private java.lang.String getWithDefault(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: aload_2
       5: goto          9
       8: aload_1
       9: areturn

  private java.util.List<java.lang.String> parseExtensions(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: invokestatic  #77                 // Method java/util/Collections.emptyList:()Ljava/util/List;
       7: areturn
       8: new           #78                 // class java/util/ArrayList
      11: dup
      12: invokespecial #79                 // Method java/util/ArrayList."<init>":()V
      15: astore_2
      16: aload_1
      17: ldc           #80                 // String ,
      19: invokevirtual #81                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      22: astore_3
      23: aload_3
      24: arraylength
      25: istore        4
      27: iconst_0
      28: istore        5
      30: iload         5
      32: iload         4
      34: if_icmpge     73
      37: aload_3
      38: iload         5
      40: aaload
      41: astore        6
      43: aload         6
      45: invokevirtual #82                 // Method java/lang/String.trim:()Ljava/lang/String;
      48: astore        6
      50: aload         6
      52: invokevirtual #83                 // Method java/lang/String.isEmpty:()Z
      55: ifne          67
      58: aload_2
      59: aload         6
      61: invokeinterface #73,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      66: pop
      67: iinc          5, 1
      70: goto          30
      73: aload_2
      74: areturn

  private java.util.List<java.lang.String> execPsql();
    Code:
       0: new           #78                 // class java/util/ArrayList
       3: dup
       4: invokespecial #79                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #7                  // Field config:Lio/ebean/docker/commands/BaseConfig;
      13: getfield      #84                 // Field io/ebean/docker/commands/BaseConfig.docker:Ljava/lang/String;
      16: invokeinterface #73,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      21: pop
      22: aload_1
      23: ldc           #85                 // String exec
      25: invokeinterface #73,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      30: pop
      31: aload_1
      32: ldc           #86                 // String -i
      34: invokeinterface #73,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      39: pop
      40: aload_1
      41: aload_0
      42: getfield      #7                  // Field config:Lio/ebean/docker/commands/BaseConfig;
      45: invokevirtual #87                 // Method io/ebean/docker/commands/BaseConfig.containerName:()Ljava/lang/String;
      48: invokeinterface #73,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      53: pop
      54: aload_1
      55: ldc           #88                 // String psql
      57: invokeinterface #73,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      62: pop
      63: aload_1
      64: ldc           #89                 // String -U
      66: invokeinterface #73,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      71: pop
      72: aload_1
      73: areturn

  protected java.lang.ProcessBuilder runProcess();
    Code:
       0: aload_0
       1: invokevirtual #90                 // Method dockerRun:()Ljava/util/List;
       4: astore_1
       5: aload_0
       6: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
       9: invokevirtual #91                 // Method io/ebean/docker/commands/DbConfig.isInMemory:()Z
      12: ifeq          48
      15: aload_0
      16: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      19: invokevirtual #92                 // Method io/ebean/docker/commands/DbConfig.getTmpfs:()Ljava/lang/String;
      22: ifnull        48
      25: aload_1
      26: ldc           #93                 // String --tmpfs
      28: invokeinterface #73,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      33: pop
      34: aload_1
      35: aload_0
      36: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      39: invokevirtual #92                 // Method io/ebean/docker/commands/DbConfig.getTmpfs:()Ljava/lang/String;
      42: invokeinterface #73,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      47: pop
      48: aload_0
      49: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      52: getfield      #94                 // Field io/ebean/docker/commands/DbConfig.adminPassword:Ljava/lang/String;
      55: invokevirtual #83                 // Method java/lang/String.isEmpty:()Z
      58: ifne          84
      61: aload_1
      62: ldc           #95                 // String -e
      64: invokeinterface #73,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      69: pop
      70: aload_1
      71: aload_0
      72: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      75: invokevirtual #96                 // Method io/ebean/docker/commands/DbConfig.getAdminPassword:()Ljava/lang/String;
      78: invokeinterface #73,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      83: pop
      84: aload_1
      85: aload_0
      86: getfield      #7                  // Field config:Lio/ebean/docker/commands/BaseConfig;
      89: invokevirtual #97                 // Method io/ebean/docker/commands/BaseConfig.getImage:()Ljava/lang/String;
      92: invokeinterface #73,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      97: pop
      98: aload_0
      99: aload_1
     100: invokevirtual #76                 // Method createProcessBuilder:(Ljava/util/List;)Ljava/lang/ProcessBuilder;
     103: areturn
}
