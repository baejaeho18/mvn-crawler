Compiled from "JdbcBaseDbContainer.java"
public abstract class io.ebean.docker.commands.JdbcBaseDbContainer extends io.ebean.docker.commands.DbContainer {
  io.ebean.docker.commands.JdbcBaseDbContainer(io.ebean.docker.commands.DbConfig);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/ebean/docker/commands/DbContainer."<init>":(Lio/ebean/docker/commands/DbConfig;)V
       5: aload_0
       6: iconst_1
       7: putfield      #2                  // Field checkConnectivityUsingAdmin:Z
      10: return

  abstract void createDatabase();

  abstract void dropCreateDatabase();

  public boolean startWithCreate();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method startContainerWithWait:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: invokevirtual #4                  // Method createDatabase:()V
      13: iconst_1
      14: ireturn

  public boolean startWithDropCreate();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method startContainerWithWait:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: invokevirtual #5                  // Method dropCreateDatabase:()V
      13: iconst_1
      14: ireturn

  private boolean startContainerWithWait();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method checkAlreadyRunning:()Z
       4: ifeq          16
       7: aload_0
       8: getfield      #7                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      11: invokevirtual #8                  // Method io/ebean/docker/commands/DbConfig.clearStopMode:()V
      14: iconst_1
      15: ireturn
      16: aload_0
      17: invokevirtual #9                  // Method startIfNeeded:()Z
      20: pop
      21: aload_0
      22: invokevirtual #10                 // Method waitForConnectivity:()Z
      25: ifne          40
      28: getstatic     #11                 // Field log:Lorg/slf4j/Logger;
      31: ldc           #12                 // String Failed waiting for connectivity
      33: invokeinterface #13,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      38: iconst_0
      39: ireturn
      40: iconst_1
      41: ireturn

  protected boolean checkAlreadyRunning();
    Code:
       0: aload_0
       1: getfield      #7                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
       4: invokevirtual #14                 // Method io/ebean/docker/commands/DbConfig.createAdminConnection:()Ljava/sql/Connection;
       7: astore_1
       8: iconst_1
       9: istore_2
      10: aload_1
      11: ifnull        20
      14: aload_1
      15: invokeinterface #15,  1           // InterfaceMethod java/sql/Connection.close:()V
      20: iload_2
      21: ireturn
      22: astore_2
      23: aload_1
      24: ifnull        42
      27: aload_1
      28: invokeinterface #15,  1           // InterfaceMethod java/sql/Connection.close:()V
      33: goto          42
      36: astore_3
      37: aload_2
      38: aload_3
      39: invokevirtual #17                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      42: aload_2
      43: athrow
      44: astore_1
      45: iconst_0
      46: ireturn
    Exception table:
       from    to  target type
           8    10    22   Class java/lang/Throwable
          27    33    36   Class java/lang/Throwable
           0    20    44   Class java/lang/Throwable
          22    44    44   Class java/lang/Throwable

  public boolean waitForDatabaseReady();
    Code:
       0: iconst_1
       1: ireturn

  protected boolean isDatabaseReady();
    Code:
       0: iconst_1
       1: ireturn

  protected boolean isDatabaseAdminReady();
    Code:
       0: iconst_1
       1: ireturn

  public boolean startContainerOnly();
    Code:
       0: aload_0
       1: invokespecial #18                 // Method io/ebean/docker/commands/DbContainer.startContainerOnly:()Z
       4: ireturn

  public boolean start();
    Code:
       0: aload_0
       1: invokespecial #19                 // Method io/ebean/docker/commands/DbContainer.start:()Z
       4: ireturn

  public java.sql.Connection createConnection() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #20                 // Method io/ebean/docker/commands/DbContainer.createConnection:()Ljava/sql/Connection;
       4: areturn

  public java.lang.String jdbcUrl();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method io/ebean/docker/commands/DbContainer.jdbcUrl:()Ljava/lang/String;
       4: areturn

  public void stopOnly();
    Code:
       0: aload_0
       1: invokespecial #22                 // Method io/ebean/docker/commands/DbContainer.stopOnly:()V
       4: return

  public void stopRemove();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method io/ebean/docker/commands/DbContainer.stopRemove:()V
       4: return

  public void stop();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method io/ebean/docker/commands/DbContainer.stop:()V
       4: return

  public void registerShutdownHook();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method io/ebean/docker/commands/DbContainer.registerShutdownHook:()V
       4: return

  public boolean isRunning();
    Code:
       0: aload_0
       1: invokespecial #26                 // Method io/ebean/docker/commands/DbContainer.isRunning:()Z
       4: ireturn

  public io.ebean.docker.container.ContainerConfig config();
    Code:
       0: aload_0
       1: invokespecial #27                 // Method io/ebean/docker/commands/DbContainer.config:()Lio/ebean/docker/container/ContainerConfig;
       4: areturn
}
