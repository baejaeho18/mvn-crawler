Compiled from "MySqlContainer.java"
public class io.ebean.docker.commands.MySqlContainer extends io.ebean.docker.commands.JdbcBaseDbContainer implements io.ebean.docker.container.Container {
  public static io.ebean.docker.commands.MySqlContainer create(java.lang.String, java.util.Properties);
    Code:
       0: new           #1                  // class io/ebean/docker/commands/MySqlContainer
       3: dup
       4: new           #2                  // class io/ebean/docker/commands/MySqlConfig
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #3                  // Method io/ebean/docker/commands/MySqlConfig."<init>":(Ljava/lang/String;Ljava/util/Properties;)V
      13: invokespecial #4                  // Method "<init>":(Lio/ebean/docker/commands/MySqlConfig;)V
      16: areturn

  public io.ebean.docker.commands.MySqlContainer(io.ebean.docker.commands.MySqlConfig);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method io/ebean/docker/commands/JdbcBaseDbContainer."<init>":(Lio/ebean/docker/commands/DbConfig;)V
       5: return

  void createDatabase();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #6                  // Method createRoleAndDatabase:(Z)V
       5: return

  void dropCreateDatabase();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #6                  // Method createRoleAndDatabase:(Z)V
       5: return

  private void createRoleAndDatabase(boolean);
    Code:
       0: aload_0
       1: getfield      #7                  // Field config:Lio/ebean/docker/commands/BaseConfig;
       4: invokevirtual #8                  // Method io/ebean/docker/commands/BaseConfig.createAdminConnection:()Ljava/sql/Connection;
       7: astore_2
       8: iload_1
       9: ifeq          36
      12: aload_0
      13: aload_2
      14: aload_0
      15: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      18: invokevirtual #10                 // Method io/ebean/docker/commands/DbConfig.getUsername:()Ljava/lang/String;
      21: invokespecial #11                 // Method dropUserIfExists:(Ljava/sql/Connection;Ljava/lang/String;)V
      24: aload_0
      25: aload_2
      26: aload_0
      27: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      30: invokevirtual #12                 // Method io/ebean/docker/commands/DbConfig.getDbName:()Ljava/lang/String;
      33: invokespecial #13                 // Method dropDatabaseIfExists:(Ljava/sql/Connection;Ljava/lang/String;)V
      36: aload_0
      37: aload_2
      38: invokespecial #14                 // Method createDatabase:(Ljava/sql/Connection;)V
      41: aload_0
      42: aload_2
      43: invokespecial #15                 // Method createUser:(Ljava/sql/Connection;)V
      46: aload_2
      47: ifnull        83
      50: aload_2
      51: invokeinterface #16,  1           // InterfaceMethod java/sql/Connection.close:()V
      56: goto          83
      59: astore_3
      60: aload_2
      61: ifnull        81
      64: aload_2
      65: invokeinterface #16,  1           // InterfaceMethod java/sql/Connection.close:()V
      70: goto          81
      73: astore        4
      75: aload_3
      76: aload         4
      78: invokevirtual #18                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      81: aload_3
      82: athrow
      83: goto          98
      86: astore_2
      87: new           #20                 // class java/lang/RuntimeException
      90: dup
      91: ldc           #21                 // String Error when creating database and role
      93: aload_2
      94: invokespecial #22                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      97: athrow
      98: return
    Exception table:
       from    to  target type
           8    46    59   Class java/lang/Throwable
          64    70    73   Class java/lang/Throwable
           0    83    86   Class java/sql/SQLException

  private void createUser(java.sql.Connection);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
       6: invokevirtual #10                 // Method io/ebean/docker/commands/DbConfig.getUsername:()Ljava/lang/String;
       9: aload_0
      10: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      13: invokevirtual #23                 // Method io/ebean/docker/commands/DbConfig.getPassword:()Ljava/lang/String;
      16: aload_0
      17: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      20: invokevirtual #12                 // Method io/ebean/docker/commands/DbConfig.getDbName:()Ljava/lang/String;
      23: invokespecial #24                 // Method createUser:(Ljava/sql/Connection;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      26: return

  private void dropDatabaseIfExists(java.sql.Connection, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #25                 // Method databaseExists:(Ljava/sql/Connection;Ljava/lang/String;)Z
       6: ifeq          33
       9: aload_0
      10: aload_1
      11: new           #26                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #28                 // String drop database
      20: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_2
      24: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokevirtual #31                 // Method sqlRun:(Ljava/sql/Connection;Ljava/lang/String;)V
      33: return

  private void dropUserIfExists(java.sql.Connection, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #32                 // Method userExists:(Ljava/sql/Connection;Ljava/lang/String;)Z
       6: ifeq          38
       9: aload_0
      10: aload_1
      11: new           #26                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #33                 // String drop user \'
      20: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_2
      24: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: ldc           #34                 // String \'@\'%\'
      29: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokevirtual #31                 // Method sqlRun:(Ljava/sql/Connection;Ljava/lang/String;)V
      38: return

  private void createUser(java.sql.Connection, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #32                 // Method userExists:(Ljava/sql/Connection;Ljava/lang/String;)Z
       6: ifne          86
       9: aload_0
      10: aload_1
      11: new           #26                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #35                 // String create user \'
      20: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_2
      24: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: ldc           #36                 // String \'@\'%\' identified by \'
      29: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_3
      33: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: ldc           #37                 // String \'
      38: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokevirtual #31                 // Method sqlRun:(Ljava/sql/Connection;Ljava/lang/String;)V
      47: aload_0
      48: aload_1
      49: new           #26                 // class java/lang/StringBuilder
      52: dup
      53: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      56: ldc           #38                 // String grant all on
      58: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload         4
      63: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: ldc           #39                 // String .* to \'
      68: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: aload_2
      72: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: ldc           #34                 // String \'@\'%\'
      77: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      83: invokevirtual #31                 // Method sqlRun:(Ljava/sql/Connection;Ljava/lang/String;)V
      86: return

  private void createDatabase(java.sql.Connection);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
       6: invokevirtual #12                 // Method io/ebean/docker/commands/DbConfig.getDbName:()Ljava/lang/String;
       9: invokespecial #25                 // Method databaseExists:(Ljava/sql/Connection;Ljava/lang/String;)Z
      12: ifne          47
      15: aload_0
      16: aload_1
      17: aload_0
      18: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      21: invokevirtual #12                 // Method io/ebean/docker/commands/DbConfig.getDbName:()Ljava/lang/String;
      24: invokespecial #40                 // Method createDatabase:(Ljava/sql/Connection;Ljava/lang/String;)V
      27: aload_0
      28: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      31: getfield      #41                 // Field io/ebean/docker/commands/DbConfig.version:Ljava/lang/String;
      34: ldc           #42                 // String 5
      36: invokevirtual #43                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      39: ifne          47
      42: aload_0
      43: aload_1
      44: invokespecial #44                 // Method setLogBinTrustFunction:(Ljava/sql/Connection;)V
      47: return

  private void setLogBinTrustFunction(java.sql.Connection);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #45                 // String set global log_bin_trust_function_creators=1
       4: invokevirtual #31                 // Method sqlRun:(Ljava/sql/Connection;Ljava/lang/String;)V
       7: return

  private void createDatabase(java.sql.Connection, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #26                 // class java/lang/StringBuilder
       5: dup
       6: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
       9: ldc           #46                 // String create database
      11: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_2
      15: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      21: invokevirtual #31                 // Method sqlRun:(Ljava/sql/Connection;Ljava/lang/String;)V
      24: return

  private boolean databaseExists(java.sql.Connection, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #26                 // class java/lang/StringBuilder
       5: dup
       6: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
       9: ldc           #47                 // String show databases like \'
      11: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_2
      15: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: ldc           #37                 // String \'
      20: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: invokevirtual #48                 // Method sqlHasRow:(Ljava/sql/Connection;Ljava/lang/String;)Z
      29: ireturn

  private boolean userExists(java.sql.Connection, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #26                 // class java/lang/StringBuilder
       5: dup
       6: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
       9: ldc           #49                 // String select User from user where User = \'
      11: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_2
      15: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: ldc           #37                 // String \'
      20: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: invokevirtual #48                 // Method sqlHasRow:(Ljava/sql/Connection;Ljava/lang/String;)Z
      29: ireturn

  protected java.lang.ProcessBuilder runProcess();
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method dockerRun:()Ljava/util/List;
       4: astore_1
       5: aload_0
       6: aload_0
       7: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      10: invokevirtual #51                 // Method io/ebean/docker/commands/DbConfig.getAdminPassword:()Ljava/lang/String;
      13: invokevirtual #52                 // Method defined:(Ljava/lang/String;)Z
      16: ifeq          60
      19: aload_1
      20: ldc           #53                 // String -e
      22: invokeinterface #54,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      27: pop
      28: aload_1
      29: new           #26                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #55                 // String MYSQL_ROOT_PASSWORD=
      38: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_0
      42: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      45: invokevirtual #51                 // Method io/ebean/docker/commands/DbConfig.getAdminPassword:()Ljava/lang/String;
      48: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokeinterface #54,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      59: pop
      60: aload_1
      61: aload_0
      62: getfield      #7                  // Field config:Lio/ebean/docker/commands/BaseConfig;
      65: invokevirtual #56                 // Method io/ebean/docker/commands/BaseConfig.getImage:()Ljava/lang/String;
      68: invokeinterface #54,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      73: pop
      74: aload_0
      75: getfield      #7                  // Field config:Lio/ebean/docker/commands/BaseConfig;
      78: invokevirtual #57                 // Method io/ebean/docker/commands/BaseConfig.isDefaultCollation:()Z
      81: ifeq          87
      84: goto          194
      87: aload_0
      88: getfield      #7                  // Field config:Lio/ebean/docker/commands/BaseConfig;
      91: invokevirtual #58                 // Method io/ebean/docker/commands/BaseConfig.isExplicitCollation:()Z
      94: ifeq          176
      97: aload_0
      98: getfield      #7                  // Field config:Lio/ebean/docker/commands/BaseConfig;
     101: invokevirtual #59                 // Method io/ebean/docker/commands/BaseConfig.getCharacterSet:()Ljava/lang/String;
     104: astore_2
     105: aload_2
     106: ifnull        135
     109: aload_1
     110: new           #26                 // class java/lang/StringBuilder
     113: dup
     114: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     117: ldc           #60                 // String --character-set-server=
     119: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: aload_2
     123: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     129: invokeinterface #54,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     134: pop
     135: aload_0
     136: getfield      #7                  // Field config:Lio/ebean/docker/commands/BaseConfig;
     139: invokevirtual #61                 // Method io/ebean/docker/commands/BaseConfig.getCollation:()Ljava/lang/String;
     142: astore_3
     143: aload_3
     144: ifnull        173
     147: aload_1
     148: new           #26                 // class java/lang/StringBuilder
     151: dup
     152: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     155: ldc           #62                 // String --collation-server=
     157: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     160: aload_3
     161: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: invokeinterface #54,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     172: pop
     173: goto          194
     176: aload_1
     177: ldc           #63                 // String --character-set-server=utf8mb4
     179: invokeinterface #54,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     184: pop
     185: aload_1
     186: ldc           #64                 // String --collation-server=utf8mb4_bin
     188: invokeinterface #54,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     193: pop
     194: aload_0
     195: getfield      #9                  // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
     198: getfield      #41                 // Field io/ebean/docker/commands/DbConfig.version:Ljava/lang/String;
     201: ldc           #42                 // String 5
     203: invokevirtual #43                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     206: ifne          218
     209: aload_1
     210: ldc           #65                 // String --default-authentication-plugin=mysql_native_password
     212: invokeinterface #54,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     217: pop
     218: aload_0
     219: aload_1
     220: invokevirtual #66                 // Method createProcessBuilder:(Ljava/util/List;)Ljava/lang/ProcessBuilder;
     223: areturn
}
