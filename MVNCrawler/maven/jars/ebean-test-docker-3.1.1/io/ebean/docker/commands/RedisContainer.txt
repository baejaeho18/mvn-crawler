Compiled from "RedisContainer.java"
public class io.ebean.docker.commands.RedisContainer extends io.ebean.docker.commands.BaseContainer {
  public static io.ebean.docker.commands.RedisContainer create(java.lang.String, java.util.Properties);
    Code:
       0: new           #1                  // class io/ebean/docker/commands/RedisContainer
       3: dup
       4: new           #2                  // class io/ebean/docker/commands/RedisConfig
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #3                  // Method io/ebean/docker/commands/RedisConfig."<init>":(Ljava/lang/String;Ljava/util/Properties;)V
      13: invokespecial #4                  // Method "<init>":(Lio/ebean/docker/commands/RedisConfig;)V
      16: areturn

  public io.ebean.docker.commands.RedisContainer(io.ebean.docker.commands.RedisConfig);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method io/ebean/docker/commands/BaseContainer."<init>":(Lio/ebean/docker/commands/BaseConfig;)V
       5: return

  boolean checkConnectivity();
    Code:
       0: ldc           #6                  // String os.name
       2: ldc           #7                  // String generic
       4: invokestatic  #8                  // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: getstatic     #9                  // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      10: invokevirtual #10                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      13: astore_1
      14: aload_1
      15: ldc           #11                 // String win
      17: invokevirtual #12                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      20: iconst_m1
      21: if_icmple     29
      24: aload_0
      25: invokespecial #13                 // Method doWindowsCheck:()Z
      28: ireturn
      29: new           #14                 // class java/lang/ProcessBuilder
      32: dup
      33: iconst_3
      34: anewarray     #15                 // class java/lang/String
      37: dup
      38: iconst_0
      39: ldc           #16                 // String nc
      41: aastore
      42: dup
      43: iconst_1
      44: ldc           #17                 // String localhost
      46: aastore
      47: dup
      48: iconst_2
      49: aload_0
      50: getfield      #18                 // Field config:Lio/ebean/docker/commands/BaseConfig;
      53: invokevirtual #19                 // Method io/ebean/docker/commands/BaseConfig.getPort:()I
      56: invokestatic  #20                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      59: aastore
      60: invokespecial #21                 // Method java/lang/ProcessBuilder."<init>":([Ljava/lang/String;)V
      63: astore_2
      64: aload_2
      65: iconst_1
      66: invokevirtual #22                 // Method java/lang/ProcessBuilder.redirectErrorStream:(Z)Ljava/lang/ProcessBuilder;
      69: pop
      70: aload_2
      71: invokevirtual #23                 // Method java/lang/ProcessBuilder.start:()Ljava/lang/Process;
      74: astore_3
      75: new           #24                 // class java/io/OutputStreamWriter
      78: dup
      79: aload_3
      80: invokevirtual #25                 // Method java/lang/Process.getOutputStream:()Ljava/io/OutputStream;
      83: invokespecial #26                 // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;)V
      86: astore        4
      88: aload         4
      90: ldc           #27                 // String PING
      92: invokevirtual #28                 // Method java/io/OutputStreamWriter.write:(Ljava/lang/String;)V
      95: aload         4
      97: invokevirtual #29                 // Method java/io/OutputStreamWriter.flush:()V
     100: aload         4
     102: invokevirtual #30                 // Method java/io/OutputStreamWriter.close:()V
     105: aload_3
     106: invokevirtual #31                 // Method java/lang/Process.waitFor:()I
     109: ifne          116
     112: iconst_1
     113: goto          117
     116: iconst_0
     117: ireturn
     118: astore_2
     119: aload_2
     120: invokevirtual #33                 // Method java/lang/Exception.printStackTrace:()V
     123: iconst_0
     124: ireturn
    Exception table:
       from    to  target type
          29   117   118   Class java/lang/Exception

  private boolean doWindowsCheck();
    Code:
       0: ldc2_w        #34                 // long 20l
       3: invokestatic  #36                 // Method java/lang/Thread.sleep:(J)V
       6: iconst_1
       7: ireturn
       8: astore_1
       9: iconst_1
      10: ireturn
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/Exception

  protected java.lang.ProcessBuilder runProcess();
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method dockerRun:()Ljava/util/List;
       4: astore_1
       5: aload_1
       6: aload_0
       7: getfield      #18                 // Field config:Lio/ebean/docker/commands/BaseConfig;
      10: getfield      #38                 // Field io/ebean/docker/commands/BaseConfig.image:Ljava/lang/String;
      13: invokeinterface #39,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      18: pop
      19: aload_0
      20: aload_1
      21: invokevirtual #40                 // Method createProcessBuilder:(Ljava/util/List;)Ljava/lang/ProcessBuilder;
      24: areturn

  public void stopOnly();
    Code:
       0: aload_0
       1: invokespecial #41                 // Method io/ebean/docker/commands/BaseContainer.stopOnly:()V
       4: return

  public void stopRemove();
    Code:
       0: aload_0
       1: invokespecial #42                 // Method io/ebean/docker/commands/BaseContainer.stopRemove:()V
       4: return

  public void stop();
    Code:
       0: aload_0
       1: invokespecial #43                 // Method io/ebean/docker/commands/BaseContainer.stop:()V
       4: return

  public void registerShutdownHook();
    Code:
       0: aload_0
       1: invokespecial #44                 // Method io/ebean/docker/commands/BaseContainer.registerShutdownHook:()V
       4: return

  public boolean isRunning();
    Code:
       0: aload_0
       1: invokespecial #45                 // Method io/ebean/docker/commands/BaseContainer.isRunning:()Z
       4: ireturn

  public boolean start();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method io/ebean/docker/commands/BaseContainer.start:()Z
       4: ireturn

  public io.ebean.docker.container.ContainerConfig config();
    Code:
       0: aload_0
       1: invokespecial #47                 // Method io/ebean/docker/commands/BaseContainer.config:()Lio/ebean/docker/container/ContainerConfig;
       4: areturn
}
