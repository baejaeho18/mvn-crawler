Compiled from "SqlServerContainer.java"
public class io.ebean.docker.commands.SqlServerContainer extends io.ebean.docker.commands.JdbcBaseDbContainer implements io.ebean.docker.container.Container {
  public static io.ebean.docker.commands.SqlServerContainer create(java.lang.String, java.util.Properties);
    Code:
       0: new           #1                  // class io/ebean/docker/commands/SqlServerContainer
       3: dup
       4: new           #2                  // class io/ebean/docker/commands/SqlServerConfig
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #3                  // Method io/ebean/docker/commands/SqlServerConfig."<init>":(Ljava/lang/String;Ljava/util/Properties;)V
      13: invokespecial #4                  // Method "<init>":(Lio/ebean/docker/commands/SqlServerConfig;)V
      16: areturn

  public io.ebean.docker.commands.SqlServerContainer(io.ebean.docker.commands.SqlServerConfig);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method io/ebean/docker/commands/JdbcBaseDbContainer."<init>":(Lio/ebean/docker/commands/DbConfig;)V
       5: return

  void createDatabase();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #6                  // Method createRoleAndDatabase:(Z)V
       5: return

  void dropCreateDatabase();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #6                  // Method createRoleAndDatabase:(Z)V
       5: return

  private void createRoleAndDatabase(boolean);
    Code:
       0: aload_0
       1: getfield      #7                  // Field config:Lio/ebean/docker/commands/BaseConfig;
       4: invokevirtual #8                  // Method io/ebean/docker/commands/BaseConfig.createAdminConnection:()Ljava/sql/Connection;
       7: astore_2
       8: iload_1
       9: ifeq          22
      12: aload_0
      13: aload_2
      14: invokespecial #9                  // Method dropLogin:(Ljava/sql/Connection;)V
      17: aload_0
      18: aload_2
      19: invokespecial #10                 // Method dropDatabaseIfExists:(Ljava/sql/Connection;)V
      22: aload_0
      23: aload_2
      24: invokespecial #11                 // Method createDatabase:(Ljava/sql/Connection;)V
      27: aload_0
      28: aload_2
      29: invokespecial #12                 // Method createLogin:(Ljava/sql/Connection;)V
      32: aload_0
      33: invokespecial #13                 // Method createUser:()V
      36: aload_2
      37: ifnull        73
      40: aload_2
      41: invokeinterface #14,  1           // InterfaceMethod java/sql/Connection.close:()V
      46: goto          73
      49: astore_3
      50: aload_2
      51: ifnull        71
      54: aload_2
      55: invokeinterface #14,  1           // InterfaceMethod java/sql/Connection.close:()V
      60: goto          71
      63: astore        4
      65: aload_3
      66: aload         4
      68: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      71: aload_3
      72: athrow
      73: goto          88
      76: astore_2
      77: new           #18                 // class java/lang/RuntimeException
      80: dup
      81: ldc           #19                 // String Error when creating database and role
      83: aload_2
      84: invokespecial #20                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      87: athrow
      88: return
    Exception table:
       from    to  target type
           8    36    49   Class java/lang/Throwable
          54    60    63   Class java/lang/Throwable
           0    73    76   Class java/sql/SQLException

  private void createUser();
    Code:
       0: aload_0
       1: getfield      #21                 // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
       4: aload_0
       5: getfield      #21                 // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
       8: invokevirtual #22                 // Method io/ebean/docker/commands/DbConfig.jdbcUrl:()Ljava/lang/String;
      11: invokevirtual #23                 // Method io/ebean/docker/commands/DbConfig.createAdminConnection:(Ljava/lang/String;)Ljava/sql/Connection;
      14: astore_1
      15: aload_0
      16: aload_1
      17: invokespecial #24                 // Method createUser:(Ljava/sql/Connection;)V
      20: aload_1
      21: ifnull        55
      24: aload_1
      25: invokeinterface #14,  1           // InterfaceMethod java/sql/Connection.close:()V
      30: goto          55
      33: astore_2
      34: aload_1
      35: ifnull        53
      38: aload_1
      39: invokeinterface #14,  1           // InterfaceMethod java/sql/Connection.close:()V
      44: goto          53
      47: astore_3
      48: aload_2
      49: aload_3
      50: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      53: aload_2
      54: athrow
      55: goto          68
      58: astore_1
      59: new           #18                 // class java/lang/RuntimeException
      62: dup
      63: aload_1
      64: invokespecial #25                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      67: athrow
      68: return
    Exception table:
       from    to  target type
          15    20    33   Class java/lang/Throwable
          38    44    47   Class java/lang/Throwable
           0    55    58   Class java/sql/SQLException

  private void createLogin(java.sql.Connection);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #21                 // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
       6: invokevirtual #26                 // Method io/ebean/docker/commands/DbConfig.getUsername:()Ljava/lang/String;
       9: invokespecial #27                 // Method loginExists:(Ljava/sql/Connection;Ljava/lang/String;)Z
      12: ifne          34
      15: aload_0
      16: aload_1
      17: aload_0
      18: getfield      #21                 // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      21: invokevirtual #26                 // Method io/ebean/docker/commands/DbConfig.getUsername:()Ljava/lang/String;
      24: aload_0
      25: getfield      #21                 // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      28: invokevirtual #28                 // Method io/ebean/docker/commands/DbConfig.getPassword:()Ljava/lang/String;
      31: invokespecial #29                 // Method createLogin:(Ljava/sql/Connection;Ljava/lang/String;Ljava/lang/String;)V
      34: return

  private void createUser(java.sql.Connection);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #21                 // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
       6: invokevirtual #26                 // Method io/ebean/docker/commands/DbConfig.getUsername:()Ljava/lang/String;
       9: invokespecial #30                 // Method userExists:(Ljava/sql/Connection;Ljava/lang/String;)Z
      12: ifne          46
      15: aload_0
      16: aload_1
      17: aload_0
      18: getfield      #21                 // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      21: invokevirtual #26                 // Method io/ebean/docker/commands/DbConfig.getUsername:()Ljava/lang/String;
      24: aload_0
      25: getfield      #21                 // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      28: invokevirtual #26                 // Method io/ebean/docker/commands/DbConfig.getUsername:()Ljava/lang/String;
      31: invokespecial #31                 // Method createUser:(Ljava/sql/Connection;Ljava/lang/String;Ljava/lang/String;)V
      34: aload_0
      35: aload_1
      36: aload_0
      37: getfield      #21                 // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      40: invokevirtual #26                 // Method io/ebean/docker/commands/DbConfig.getUsername:()Ljava/lang/String;
      43: invokespecial #32                 // Method grantOwner:(Ljava/sql/Connection;Ljava/lang/String;)V
      46: return

  private void createDatabase(java.sql.Connection);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #21                 // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
       6: invokevirtual #33                 // Method io/ebean/docker/commands/DbConfig.getDbName:()Ljava/lang/String;
       9: invokespecial #34                 // Method databaseExists:(Ljava/sql/Connection;Ljava/lang/String;)Z
      12: ifne          27
      15: aload_0
      16: aload_1
      17: aload_0
      18: getfield      #21                 // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      21: invokevirtual #33                 // Method io/ebean/docker/commands/DbConfig.getDbName:()Ljava/lang/String;
      24: invokespecial #35                 // Method createDatabase:(Ljava/sql/Connection;Ljava/lang/String;)V
      27: return

  private void dropDatabaseIfExists(java.sql.Connection);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #21                 // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
       6: invokevirtual #33                 // Method io/ebean/docker/commands/DbConfig.getDbName:()Ljava/lang/String;
       9: invokespecial #34                 // Method databaseExists:(Ljava/sql/Connection;Ljava/lang/String;)Z
      12: ifeq          27
      15: aload_0
      16: aload_1
      17: aload_0
      18: getfield      #21                 // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      21: invokevirtual #33                 // Method io/ebean/docker/commands/DbConfig.getDbName:()Ljava/lang/String;
      24: invokespecial #36                 // Method dropDatabase:(Ljava/sql/Connection;Ljava/lang/String;)V
      27: return

  private void dropDatabase(java.sql.Connection, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #37                 // class java/lang/StringBuilder
       5: dup
       6: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
       9: ldc           #39                 // String drop database
      11: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_2
      15: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      21: invokevirtual #42                 // Method sqlRun:(Ljava/sql/Connection;Ljava/lang/String;)V
      24: return

  private void dropLogin(java.sql.Connection);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #21                 // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
       6: getfield      #43                 // Field io/ebean/docker/commands/DbConfig.username:Ljava/lang/String;
       9: invokespecial #27                 // Method loginExists:(Ljava/sql/Connection;Ljava/lang/String;)Z
      12: ifeq          45
      15: aload_0
      16: aload_1
      17: new           #37                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #44                 // String drop login
      26: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: getfield      #21                 // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      33: getfield      #43                 // Field io/ebean/docker/commands/DbConfig.username:Ljava/lang/String;
      36: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokevirtual #42                 // Method sqlRun:(Ljava/sql/Connection;Ljava/lang/String;)V
      45: return

  private void createDatabase(java.sql.Connection, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #37                 // class java/lang/StringBuilder
       5: dup
       6: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
       9: ldc           #45                 // String create database
      11: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_2
      15: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      21: invokevirtual #42                 // Method sqlRun:(Ljava/sql/Connection;Ljava/lang/String;)V
      24: return

  private void createLogin(java.sql.Connection, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #37                 // class java/lang/StringBuilder
       5: dup
       6: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
       9: ldc           #46                 // String create login
      11: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_2
      15: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: ldc           #47                 // String  with password = \'
      20: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_3
      24: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: ldc           #48                 // String \'
      29: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokevirtual #42                 // Method sqlRun:(Ljava/sql/Connection;Ljava/lang/String;)V
      38: return

  private void createUser(java.sql.Connection, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #37                 // class java/lang/StringBuilder
       5: dup
       6: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
       9: ldc           #49                 // String create user
      11: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_2
      15: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: ldc           #50                 // String  for login
      20: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_3
      24: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokevirtual #42                 // Method sqlRun:(Ljava/sql/Connection;Ljava/lang/String;)V
      33: return

  private void grantOwner(java.sql.Connection, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #37                 // class java/lang/StringBuilder
       5: dup
       6: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
       9: ldc           #51                 // String exec sp_addrolemember \'db_owner\',
      11: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_2
      15: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      21: invokevirtual #42                 // Method sqlRun:(Ljava/sql/Connection;Ljava/lang/String;)V
      24: return

  private boolean userExists(java.sql.Connection, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #37                 // class java/lang/StringBuilder
       5: dup
       6: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
       9: ldc           #52                 // String select 1 from sys.database_principals where name = \'
      11: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_2
      15: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: ldc           #48                 // String \'
      20: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: invokevirtual #53                 // Method sqlHasRow:(Ljava/sql/Connection;Ljava/lang/String;)Z
      29: ireturn

  private boolean loginExists(java.sql.Connection, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #37                 // class java/lang/StringBuilder
       5: dup
       6: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
       9: ldc           #54                 // String select 1 from master.dbo.syslogins where loginname = \'
      11: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_2
      15: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: ldc           #48                 // String \'
      20: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: invokevirtual #53                 // Method sqlHasRow:(Ljava/sql/Connection;Ljava/lang/String;)Z
      29: ireturn

  private boolean databaseExists(java.sql.Connection, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #37                 // class java/lang/StringBuilder
       5: dup
       6: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
       9: ldc           #55                 // String select 1 from sys.databases where name=\'
      11: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_2
      15: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: ldc           #48                 // String \'
      20: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: invokevirtual #53                 // Method sqlHasRow:(Ljava/sql/Connection;Ljava/lang/String;)Z
      29: ireturn

  protected java.lang.ProcessBuilder runProcess();
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method dockerRun:()Ljava/util/List;
       4: astore_1
       5: aload_1
       6: ldc           #57                 // String -e
       8: invokeinterface #58,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      13: pop
      14: aload_1
      15: ldc           #59                 // String ACCEPT_EULA=Y
      17: invokeinterface #58,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      22: pop
      23: aload_1
      24: ldc           #57                 // String -e
      26: invokeinterface #58,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      31: pop
      32: aload_1
      33: new           #37                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #60                 // String SA_PASSWORD=
      42: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_0
      46: getfield      #21                 // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
      49: invokevirtual #61                 // Method io/ebean/docker/commands/DbConfig.getAdminPassword:()Ljava/lang/String;
      52: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: invokeinterface #58,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      63: pop
      64: aload_0
      65: getfield      #7                  // Field config:Lio/ebean/docker/commands/BaseConfig;
      68: invokevirtual #62                 // Method io/ebean/docker/commands/BaseConfig.isDefaultCollation:()Z
      71: ifeq          77
      74: goto          149
      77: aload_0
      78: getfield      #7                  // Field config:Lio/ebean/docker/commands/BaseConfig;
      81: invokevirtual #63                 // Method io/ebean/docker/commands/BaseConfig.isExplicitCollation:()Z
      84: ifeq          131
      87: aload_1
      88: ldc           #57                 // String -e
      90: invokeinterface #58,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      95: pop
      96: aload_1
      97: new           #37                 // class java/lang/StringBuilder
     100: dup
     101: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
     104: ldc           #64                 // String MSSQL_COLLATION=
     106: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: aload_0
     110: getfield      #21                 // Field dbConfig:Lio/ebean/docker/commands/DbConfig;
     113: invokevirtual #65                 // Method io/ebean/docker/commands/DbConfig.getCollation:()Ljava/lang/String;
     116: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     122: invokeinterface #58,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     127: pop
     128: goto          149
     131: aload_1
     132: ldc           #57                 // String -e
     134: invokeinterface #58,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     139: pop
     140: aload_1
     141: ldc           #66                 // String MSSQL_COLLATION=Latin1_General_100_BIN2
     143: invokeinterface #58,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     148: pop
     149: aload_1
     150: aload_0
     151: getfield      #7                  // Field config:Lio/ebean/docker/commands/BaseConfig;
     154: invokevirtual #67                 // Method io/ebean/docker/commands/BaseConfig.getImage:()Ljava/lang/String;
     157: invokeinterface #58,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     162: pop
     163: aload_0
     164: aload_1
     165: invokevirtual #68                 // Method createProcessBuilder:(Ljava/util/List;)Ljava/lang/ProcessBuilder;
     168: areturn
}
