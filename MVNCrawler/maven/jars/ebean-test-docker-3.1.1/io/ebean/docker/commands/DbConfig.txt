Compiled from "DbConfig.java"
public abstract class io.ebean.docker.commands.DbConfig extends io.ebean.docker.commands.BaseConfig {
  private java.lang.String tmpfs;

  java.lang.String adminUsername;

  java.lang.String adminPassword;

  private java.lang.String extraDb;

  private java.lang.String extraDbUser;

  private java.lang.String extraDbPassword;

  private java.lang.String extraDbInitSqlFile;

  private java.lang.String extraDbSeedSqlFile;

  java.lang.String dbName;

  java.lang.String username;

  java.lang.String password;

  java.lang.String schema;

  private java.lang.String extensions;

  private java.lang.String initSqlFile;

  private java.lang.String seedSqlFile;

  private boolean inMemory;

  boolean fastStartMode;

  io.ebean.docker.commands.DbConfig(java.lang.String, int, int, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload         4
       6: invokespecial #1                  // Method io/ebean/docker/commands/BaseConfig."<init>":(Ljava/lang/String;IILjava/lang/String;)V
       9: aload_0
      10: ldc           #2                  // String admin
      12: putfield      #3                  // Field adminUsername:Ljava/lang/String;
      15: aload_0
      16: ldc           #2                  // String admin
      18: putfield      #4                  // Field adminPassword:Ljava/lang/String;
      21: aload_0
      22: ldc           #5                  // String test_db
      24: putfield      #6                  // Field dbName:Ljava/lang/String;
      27: aload_0
      28: ldc           #7                  // String test_user
      30: putfield      #8                  // Field username:Ljava/lang/String;
      33: aload_0
      34: ldc           #9                  // String test
      36: putfield      #10                 // Field password:Ljava/lang/String;
      39: aload_0
      40: iconst_1
      41: putfield      #11                 // Field fastStartMode:Z
      44: return

  public java.lang.String startDescription();
    Code:
       0: new           #12                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #14                 // String starting
       9: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #16                 // Field platform:Ljava/lang/String;
      16: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #17                 // String  container:
      21: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #18                 // Field containerName:Ljava/lang/String;
      28: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #19                 // String  port:
      33: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #20                 // Field port:I
      40: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: ldc           #22                 // String  db:
      45: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #6                  // Field dbName:Ljava/lang/String;
      52: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #23                 // String  user:
      57: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #8                  // Field username:Ljava/lang/String;
      64: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: ldc           #24                 // String  extensions:
      69: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: getfield      #25                 // Field extensions:Ljava/lang/String;
      76: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: ldc           #26                 // String  startMode:
      81: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: getfield      #27                 // Field startMode:Lio/ebean/docker/commands/StartMode;
      88: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      91: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: areturn

  public java.lang.String summary();
    Code:
       0: new           #12                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #30                 // String port:
       9: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #20                 // Field port:I
      16: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #22                 // String  db:
      21: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #6                  // Field dbName:Ljava/lang/String;
      28: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #23                 // String  user:
      33: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #8                  // Field username:Ljava/lang/String;
      40: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: ldc           #31                 // String /
      45: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #10                 // Field password:Ljava/lang/String;
      52: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: areturn

  public void initDefaultSchema();
    Code:
       0: aload_0
       1: getfield      #32                 // Field schema:Ljava/lang/String;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: getfield      #8                  // Field username:Ljava/lang/String;
      12: putfield      #32                 // Field schema:Ljava/lang/String;
      15: return

  public java.sql.Connection createConnection() throws java.sql.SQLException;
    Code:
       0: new           #33                 // class java/util/Properties
       3: dup
       4: invokespecial #34                 // Method java/util/Properties."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #35                 // String user
      11: aload_0
      12: getfield      #8                  // Field username:Ljava/lang/String;
      15: invokevirtual #36                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload_1
      20: ldc           #37                 // String password
      22: aload_0
      23: getfield      #10                 // Field password:Ljava/lang/String;
      26: invokevirtual #36                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: aload_0
      31: getfield      #32                 // Field schema:Ljava/lang/String;
      34: ifnull        48
      37: aload_1
      38: ldc           #38                 // String schema
      40: aload_0
      41: getfield      #32                 // Field schema:Ljava/lang/String;
      44: invokevirtual #36                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: aload_0
      49: invokevirtual #39                 // Method jdbcUrl:()Ljava/lang/String;
      52: aload_1
      53: invokestatic  #40                 // Method java/sql/DriverManager.getConnection:(Ljava/lang/String;Ljava/util/Properties;)Ljava/sql/Connection;
      56: areturn

  public java.sql.Connection createConnectionNoSchema() throws java.sql.SQLException;
    Code:
       0: new           #33                 // class java/util/Properties
       3: dup
       4: invokespecial #34                 // Method java/util/Properties."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #35                 // String user
      11: aload_0
      12: getfield      #8                  // Field username:Ljava/lang/String;
      15: invokevirtual #36                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload_1
      20: ldc           #37                 // String password
      22: aload_0
      23: getfield      #10                 // Field password:Ljava/lang/String;
      26: invokevirtual #36                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: aload_0
      31: invokevirtual #39                 // Method jdbcUrl:()Ljava/lang/String;
      34: aload_1
      35: invokestatic  #40                 // Method java/sql/DriverManager.getConnection:(Ljava/lang/String;Ljava/util/Properties;)Ljava/sql/Connection;
      38: areturn

  public java.sql.Connection createAdminConnection(java.lang.String) throws java.sql.SQLException;
    Code:
       0: new           #33                 // class java/util/Properties
       3: dup
       4: invokespecial #34                 // Method java/util/Properties."<init>":()V
       7: astore_2
       8: aload_2
       9: ldc           #35                 // String user
      11: aload_0
      12: getfield      #3                  // Field adminUsername:Ljava/lang/String;
      15: invokevirtual #36                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload_2
      20: ldc           #37                 // String password
      22: aload_0
      23: getfield      #4                  // Field adminPassword:Ljava/lang/String;
      26: invokevirtual #36                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: aload_1
      31: aload_2
      32: invokestatic  #40                 // Method java/sql/DriverManager.getConnection:(Ljava/lang/String;Ljava/util/Properties;)Ljava/sql/Connection;
      35: areturn

  public java.sql.Connection createAdminConnection() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #41                 // Method jdbcAdminUrl:()Ljava/lang/String;
       5: invokevirtual #42                 // Method createAdminConnection:(Ljava/lang/String;)Ljava/sql/Connection;
       8: areturn

  public io.ebean.docker.commands.DbConfig setProperties(java.util.Properties);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aload_0
       5: areturn
       6: aload_0
       7: aload_1
       8: invokespecial #43                 // Method io/ebean/docker/commands/BaseConfig.setProperties:(Ljava/util/Properties;)Lio/ebean/docker/commands/BaseConfig;
      11: pop
      12: aload_0
      13: aload_0
      14: aload_1
      15: ldc           #44                 // String inMemory
      17: aload_0
      18: getfield      #45                 // Field inMemory:Z
      21: invokestatic  #46                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
      24: invokevirtual #47                 // Method prop:(Ljava/util/Properties;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      27: invokestatic  #48                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      30: putfield      #45                 // Field inMemory:Z
      33: aload_0
      34: aload_0
      35: aload_1
      36: ldc           #49                 // String fastStartMode
      38: aload_0
      39: getfield      #11                 // Field fastStartMode:Z
      42: invokestatic  #46                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
      45: invokevirtual #47                 // Method prop:(Ljava/util/Properties;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      48: invokestatic  #48                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      51: putfield      #11                 // Field fastStartMode:Z
      54: aload_0
      55: aload_0
      56: aload_1
      57: ldc           #50                 // String tmpfs
      59: aload_0
      60: getfield      #51                 // Field tmpfs:Ljava/lang/String;
      63: invokevirtual #47                 // Method prop:(Ljava/util/Properties;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      66: putfield      #51                 // Field tmpfs:Ljava/lang/String;
      69: aload_0
      70: aload_0
      71: aload_1
      72: ldc           #52                 // String dbName
      74: aload_0
      75: getfield      #6                  // Field dbName:Ljava/lang/String;
      78: invokevirtual #47                 // Method prop:(Ljava/util/Properties;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      81: putfield      #6                  // Field dbName:Ljava/lang/String;
      84: aload_0
      85: aload_0
      86: aload_1
      87: ldc           #53                 // String username
      89: aload_0
      90: getfield      #8                  // Field username:Ljava/lang/String;
      93: invokevirtual #47                 // Method prop:(Ljava/util/Properties;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      96: putfield      #8                  // Field username:Ljava/lang/String;
      99: aload_0
     100: aload_0
     101: aload_1
     102: ldc           #37                 // String password
     104: aload_0
     105: getfield      #10                 // Field password:Ljava/lang/String;
     108: invokevirtual #47                 // Method prop:(Ljava/util/Properties;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     111: putfield      #10                 // Field password:Ljava/lang/String;
     114: aload_0
     115: aload_0
     116: aload_1
     117: ldc           #38                 // String schema
     119: aload_0
     120: getfield      #32                 // Field schema:Ljava/lang/String;
     123: invokevirtual #47                 // Method prop:(Ljava/util/Properties;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     126: putfield      #32                 // Field schema:Ljava/lang/String;
     129: aload_0
     130: aload_0
     131: aload_1
     132: ldc           #54                 // String extensions
     134: aload_0
     135: getfield      #25                 // Field extensions:Ljava/lang/String;
     138: invokevirtual #47                 // Method prop:(Ljava/util/Properties;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     141: putfield      #25                 // Field extensions:Ljava/lang/String;
     144: aload_0
     145: aload_0
     146: aload_1
     147: ldc           #55                 // String adminUsername
     149: aload_0
     150: getfield      #3                  // Field adminUsername:Ljava/lang/String;
     153: invokevirtual #47                 // Method prop:(Ljava/util/Properties;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     156: putfield      #3                  // Field adminUsername:Ljava/lang/String;
     159: aload_0
     160: aload_0
     161: aload_1
     162: ldc           #56                 // String adminPassword
     164: aload_0
     165: getfield      #4                  // Field adminPassword:Ljava/lang/String;
     168: invokevirtual #47                 // Method prop:(Ljava/util/Properties;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     171: putfield      #4                  // Field adminPassword:Ljava/lang/String;
     174: aload_0
     175: aload_0
     176: aload_1
     177: ldc           #57                 // String initSqlFile
     179: aload_0
     180: getfield      #58                 // Field initSqlFile:Ljava/lang/String;
     183: invokevirtual #47                 // Method prop:(Ljava/util/Properties;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     186: putfield      #58                 // Field initSqlFile:Ljava/lang/String;
     189: aload_0
     190: aload_0
     191: aload_1
     192: ldc           #59                 // String seedSqlFile
     194: aload_0
     195: getfield      #60                 // Field seedSqlFile:Ljava/lang/String;
     198: invokevirtual #47                 // Method prop:(Ljava/util/Properties;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     201: putfield      #60                 // Field seedSqlFile:Ljava/lang/String;
     204: aload_0
     205: aload_0
     206: aload_1
     207: ldc           #61                 // String extraDb.dbName
     209: aload_0
     210: aload_1
     211: ldc           #62                 // String extraDb
     213: aload_0
     214: getfield      #63                 // Field extraDb:Ljava/lang/String;
     217: invokevirtual #47                 // Method prop:(Ljava/util/Properties;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     220: invokevirtual #47                 // Method prop:(Ljava/util/Properties;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     223: putfield      #63                 // Field extraDb:Ljava/lang/String;
     226: aload_0
     227: aload_0
     228: aload_1
     229: ldc           #64                 // String extraDb.username
     231: aload_0
     232: getfield      #65                 // Field extraDbUser:Ljava/lang/String;
     235: invokevirtual #47                 // Method prop:(Ljava/util/Properties;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     238: putfield      #65                 // Field extraDbUser:Ljava/lang/String;
     241: aload_0
     242: aload_0
     243: aload_1
     244: ldc           #66                 // String extraDb.password
     246: aload_0
     247: getfield      #67                 // Field extraDbPassword:Ljava/lang/String;
     250: invokevirtual #47                 // Method prop:(Ljava/util/Properties;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     253: putfield      #67                 // Field extraDbPassword:Ljava/lang/String;
     256: aload_0
     257: aload_0
     258: aload_1
     259: ldc           #68                 // String extraDb.initSqlFile
     261: aload_0
     262: getfield      #69                 // Field extraDbInitSqlFile:Ljava/lang/String;
     265: invokevirtual #47                 // Method prop:(Ljava/util/Properties;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     268: putfield      #69                 // Field extraDbInitSqlFile:Ljava/lang/String;
     271: aload_0
     272: aload_0
     273: aload_1
     274: ldc           #70                 // String extraDb.seedSqlFile
     276: aload_0
     277: getfield      #71                 // Field extraDbSeedSqlFile:Ljava/lang/String;
     280: invokevirtual #47                 // Method prop:(Ljava/util/Properties;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     283: putfield      #71                 // Field extraDbSeedSqlFile:Ljava/lang/String;
     286: aload_0
     287: areturn

  public io.ebean.docker.commands.DbConfig setAdminUser(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field adminUsername:Ljava/lang/String;
       5: aload_0
       6: areturn

  public io.ebean.docker.commands.DbConfig setAdminPassword(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field adminPassword:Ljava/lang/String;
       5: aload_0
       6: areturn

  public io.ebean.docker.commands.DbConfig setTmpfs(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field tmpfs:Ljava/lang/String;
       5: aload_0
       6: areturn

  public io.ebean.docker.commands.DbConfig setFastStartMode(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field fastStartMode:Z
       5: aload_0
       6: areturn

  public io.ebean.docker.commands.DbConfig setDbName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field dbName:Ljava/lang/String;
       5: aload_0
       6: areturn

  public io.ebean.docker.commands.DbConfig setUser(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field username:Ljava/lang/String;
       5: aload_0
       6: areturn

  public io.ebean.docker.commands.DbConfig setPassword(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field password:Ljava/lang/String;
       5: aload_0
       6: areturn

  public io.ebean.docker.commands.DbConfig setSchema(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field schema:Ljava/lang/String;
       5: aload_0
       6: areturn

  public io.ebean.docker.commands.DbConfig setExtensions(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field extensions:Ljava/lang/String;
       5: aload_0
       6: areturn

  public io.ebean.docker.commands.DbConfig setInitSqlFile(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #58                 // Field initSqlFile:Ljava/lang/String;
       5: aload_0
       6: areturn

  public io.ebean.docker.commands.DbConfig setSeedSqlFile(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #60                 // Field seedSqlFile:Ljava/lang/String;
       5: aload_0
       6: areturn

  public io.ebean.docker.commands.DbConfig setExtraDb(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #63                 // Field extraDb:Ljava/lang/String;
       5: aload_0
       6: areturn

  public io.ebean.docker.commands.DbConfig setExtraDbUser(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #65                 // Field extraDbUser:Ljava/lang/String;
       5: aload_0
       6: areturn

  public io.ebean.docker.commands.DbConfig setExtraDbPassword(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #67                 // Field extraDbPassword:Ljava/lang/String;
       5: aload_0
       6: areturn

  public io.ebean.docker.commands.DbConfig setExtraDbInitSqlFile(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #69                 // Field extraDbInitSqlFile:Ljava/lang/String;
       5: aload_0
       6: areturn

  public io.ebean.docker.commands.DbConfig setExtraDbSeedSqlFile(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #71                 // Field extraDbSeedSqlFile:Ljava/lang/String;
       5: aload_0
       6: areturn

  public io.ebean.docker.commands.DbConfig setInMemory(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #45                 // Field inMemory:Z
       5: aload_0
       6: areturn

  public boolean isInMemory();
    Code:
       0: aload_0
       1: getfield      #45                 // Field inMemory:Z
       4: ireturn

  public java.lang.String getTmpfs();
    Code:
       0: aload_0
       1: getfield      #51                 // Field tmpfs:Ljava/lang/String;
       4: areturn

  public java.lang.String getAdminUsername();
    Code:
       0: aload_0
       1: getfield      #3                  // Field adminUsername:Ljava/lang/String;
       4: areturn

  public java.lang.String getAdminPassword();
    Code:
       0: aload_0
       1: getfield      #4                  // Field adminPassword:Ljava/lang/String;
       4: areturn

  public java.lang.String getDbName();
    Code:
       0: aload_0
       1: getfield      #6                  // Field dbName:Ljava/lang/String;
       4: areturn

  public java.lang.String getUsername();
    Code:
       0: aload_0
       1: getfield      #8                  // Field username:Ljava/lang/String;
       4: areturn

  public java.lang.String getPassword();
    Code:
       0: aload_0
       1: getfield      #10                 // Field password:Ljava/lang/String;
       4: areturn

  public java.lang.String getSchema();
    Code:
       0: aload_0
       1: getfield      #32                 // Field schema:Ljava/lang/String;
       4: areturn

  public java.lang.String getExtensions();
    Code:
       0: aload_0
       1: getfield      #25                 // Field extensions:Ljava/lang/String;
       4: areturn

  public java.lang.String getInitSqlFile();
    Code:
       0: aload_0
       1: getfield      #58                 // Field initSqlFile:Ljava/lang/String;
       4: areturn

  public java.lang.String getSeedSqlFile();
    Code:
       0: aload_0
       1: getfield      #60                 // Field seedSqlFile:Ljava/lang/String;
       4: areturn

  public java.lang.String getExtraDb();
    Code:
       0: aload_0
       1: getfield      #63                 // Field extraDb:Ljava/lang/String;
       4: areturn

  public java.lang.String getExtraDbUser();
    Code:
       0: aload_0
       1: getfield      #65                 // Field extraDbUser:Ljava/lang/String;
       4: areturn

  public java.lang.String getExtraDbPassword();
    Code:
       0: aload_0
       1: getfield      #67                 // Field extraDbPassword:Ljava/lang/String;
       4: areturn

  public java.lang.String getExtraDbInitSqlFile();
    Code:
       0: aload_0
       1: getfield      #69                 // Field extraDbInitSqlFile:Ljava/lang/String;
       4: areturn

  public java.lang.String getExtraDbSeedSqlFile();
    Code:
       0: aload_0
       1: getfield      #71                 // Field extraDbSeedSqlFile:Ljava/lang/String;
       4: areturn

  public boolean isFastStartMode();
    Code:
       0: aload_0
       1: getfield      #11                 // Field fastStartMode:Z
       4: ireturn

  public io.ebean.docker.commands.BaseConfig setProperties(java.util.Properties);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #72                 // Method setProperties:(Ljava/util/Properties;)Lio/ebean/docker/commands/DbConfig;
       5: areturn
}
