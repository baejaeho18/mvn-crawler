Compiled from "DynamicBindableService.java"
public final class ru.tinkoff.kora.grpc.DynamicBindableService implements io.grpc.BindableService,ru.tinkoff.kora.application.graph.RefreshListener {
  final ru.tinkoff.kora.application.graph.ValueOf<io.grpc.BindableService> service;

  final java.util.HashMap<java.lang.String, ru.tinkoff.kora.grpc.DynamicServerCall<?, ?>> methods;

  public ru.tinkoff.kora.grpc.DynamicBindableService(ru.tinkoff.kora.application.graph.ValueOf<io.grpc.BindableService>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/HashMap
       8: dup
       9: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      12: putfield      #10                 // Field methods:Ljava/util/HashMap;
      15: aload_0
      16: aload_1
      17: putfield      #16                 // Field service:Lru/tinkoff/kora/application/graph/ValueOf;
      20: return

  public io.grpc.ServerServiceDefinition bindService();
    Code:
       0: aload_0
       1: getfield      #16                 // Field service:Lru/tinkoff/kora/application/graph/ValueOf;
       4: invokeinterface #20,  1           // InterfaceMethod ru/tinkoff/kora/application/graph/ValueOf.get:()Ljava/lang/Object;
       9: checkcast     #26                 // class io/grpc/BindableService
      12: invokeinterface #28,  1           // InterfaceMethod io/grpc/BindableService.bindService:()Lio/grpc/ServerServiceDefinition;
      17: astore_1
      18: aload_1
      19: invokevirtual #32                 // Method io/grpc/ServerServiceDefinition.getServiceDescriptor:()Lio/grpc/ServiceDescriptor;
      22: invokestatic  #38                 // Method io/grpc/ServerServiceDefinition.builder:(Lio/grpc/ServiceDescriptor;)Lio/grpc/ServerServiceDefinition$Builder;
      25: astore_2
      26: aload_1
      27: invokevirtual #42                 // Method io/grpc/ServerServiceDefinition.getMethods:()Ljava/util/Collection;
      30: aload_0
      31: aload_2
      32: invokedynamic #46,  0             // InvokeDynamic #0:accept:(Lru/tinkoff/kora/grpc/DynamicBindableService;Lio/grpc/ServerServiceDefinition$Builder;)Ljava/util/function/Consumer;
      37: invokeinterface #50,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      42: aload_2
      43: invokevirtual #56                 // Method io/grpc/ServerServiceDefinition$Builder.build:()Lio/grpc/ServerServiceDefinition;
      46: areturn

  public void graphRefreshed();
    Code:
       0: aload_0
       1: getfield      #16                 // Field service:Lru/tinkoff/kora/application/graph/ValueOf;
       4: invokeinterface #20,  1           // InterfaceMethod ru/tinkoff/kora/application/graph/ValueOf.get:()Ljava/lang/Object;
       9: checkcast     #26                 // class io/grpc/BindableService
      12: invokeinterface #28,  1           // InterfaceMethod io/grpc/BindableService.bindService:()Lio/grpc/ServerServiceDefinition;
      17: invokevirtual #42                 // Method io/grpc/ServerServiceDefinition.getMethods:()Ljava/util/Collection;
      20: aload_0
      21: invokedynamic #61,  0             // InvokeDynamic #1:accept:(Lru/tinkoff/kora/grpc/DynamicBindableService;)Ljava/util/function/Consumer;
      26: invokeinterface #50,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      31: return

  private <Req, Res> io.grpc.ServerMethodDefinition<Req, Res> initMethod(io.grpc.ServerMethodDefinition<Req, Res>);
    Code:
       0: new           #64                 // class ru/tinkoff/kora/grpc/DynamicServerCall
       3: dup
       4: aload_1
       5: invokevirtual #66                 // Method io/grpc/ServerMethodDefinition.getServerCallHandler:()Lio/grpc/ServerCallHandler;
       8: invokespecial #72                 // Method ru/tinkoff/kora/grpc/DynamicServerCall."<init>":(Lio/grpc/ServerCallHandler;)V
      11: astore_2
      12: aload_0
      13: getfield      #10                 // Field methods:Ljava/util/HashMap;
      16: aload_1
      17: invokevirtual #75                 // Method io/grpc/ServerMethodDefinition.getMethodDescriptor:()Lio/grpc/MethodDescriptor;
      20: invokevirtual #79                 // Method io/grpc/MethodDescriptor.getFullMethodName:()Ljava/lang/String;
      23: aload_2
      24: invokevirtual #85                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      27: pop
      28: aload_1
      29: aload_2
      30: invokevirtual #89                 // Method io/grpc/ServerMethodDefinition.withServerCallHandler:(Lio/grpc/ServerCallHandler;)Lio/grpc/ServerMethodDefinition;
      33: areturn

  private <Req, Res> void replaceMethod(io.grpc.ServerMethodDefinition<Req, Res>);
    Code:
       0: aload_1
       1: invokevirtual #75                 // Method io/grpc/ServerMethodDefinition.getMethodDescriptor:()Lio/grpc/MethodDescriptor;
       4: invokevirtual #79                 // Method io/grpc/MethodDescriptor.getFullMethodName:()Ljava/lang/String;
       7: astore_2
       8: aload_0
       9: getfield      #10                 // Field methods:Ljava/util/HashMap;
      12: aload_2
      13: invokevirtual #93                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #64                 // class ru/tinkoff/kora/grpc/DynamicServerCall
      19: astore_3
      20: aload_3
      21: aload_1
      22: invokevirtual #66                 // Method io/grpc/ServerMethodDefinition.getServerCallHandler:()Lio/grpc/ServerCallHandler;
      25: invokevirtual #96                 // Method ru/tinkoff/kora/grpc/DynamicServerCall.setCurrentCall:(Lio/grpc/ServerCallHandler;)V
      28: return

  private void lambda$bindService$0(io.grpc.ServerServiceDefinition$Builder, io.grpc.ServerMethodDefinition);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokevirtual #99                 // Method initMethod:(Lio/grpc/ServerMethodDefinition;)Lio/grpc/ServerMethodDefinition;
       6: invokevirtual #103                // Method io/grpc/ServerServiceDefinition$Builder.addMethod:(Lio/grpc/ServerMethodDefinition;)Lio/grpc/ServerServiceDefinition$Builder;
       9: pop
      10: return
}
