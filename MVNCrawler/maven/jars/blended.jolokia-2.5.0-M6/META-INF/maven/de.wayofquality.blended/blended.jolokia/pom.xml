<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>de.wayofquality.blended</groupId>
  <artifactId>blended.jolokia</artifactId>
  <version>2.5.0-M6</version>
  <packaging>bundle</packaging>
  <name>${project.artifactId}</name>
  <description>Provide an Actor based Jolokia Client to access JMX resources of a container via REST.</description>
  <url>https://github.com/woq-blended/blended</url>
  <organization>
    <name>https://github.com/woq-blended</name>
    <url>https://github.com/woq-blended/blended</url>
  </organization>
  <licenses>
    <license>
      <name>The Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>
  <developers>
    <developer>
      <name>Andreas Gies</name>
      <email>andreas@wayofquality.de</email>
      <organization>WoQ - Way of Quality GmbH</organization>
      <organizationUrl>http://www.wayofquality.de</organizationUrl>
    </developer>
    <developer>
      <name>Tobias Roeser</name>
      <email>tobias.roeser@tototec.de</email>
      <organization>ToToTec</organization>
    </developer>
  </developers>
  <scm>
    <connection>scm:git:ssh://git@github.com/woq-blended/blended</connection>
    <developerConnection>scm:git:ssh://git@github.com/woq-blended/blended.git</developerConnection>
    <url>https://github.com/woq-blended/blended</url>
  </scm>
  <distributionManagement>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
    </snapshotRepository>
  </distributionManagement>
  <properties>
    <bundle.symbolicName>${project.artifactId}</bundle.symbolicName>
    <java.version>1.8</java.version>
    <scala.version>2.12.6</scala.version>
    <blended.version>2.5.0-M6</blended.version>
    <scalaImportVersion>[${scala.binary.version},${scala.binary.version}.50)</scalaImportVersion>
    <scala.binary.version>2.12</scala.binary.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <bundle.namespace>${project.artifactId}</bundle.namespace>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>de.wayofquality.blended</groupId>
        <artifactId>blended.akka</artifactId>
        <version>2.5.0-M6</version>
        <optional>false</optional>
      </dependency>
      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-library</artifactId>
        <version>2.12.6</version>
        <optional>false</optional>
      </dependency>
      <dependency>
        <groupId>io.spray</groupId>
        <artifactId>spray-json_2.12</artifactId>
        <version>1.3.4</version>
        <optional>false</optional>
      </dependency>
      <dependency>
        <groupId>net.virtual-void</groupId>
        <artifactId>json-lenses_2.12</artifactId>
        <version>0.6.2</version>
        <optional>false</optional>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.7.25</version>
        <optional>false</optional>
      </dependency>
      <dependency>
        <groupId>com.typesafe.akka</groupId>
        <artifactId>akka-http_2.12</artifactId>
        <version>10.1.1</version>
        <optional>false</optional>
      </dependency>
      <dependency>
        <groupId>com.typesafe.akka</groupId>
        <artifactId>akka-stream_2.12</artifactId>
        <version>2.5.9</version>
        <optional>false</optional>
      </dependency>
      <dependency>
        <groupId>com.typesafe.akka</groupId>
        <artifactId>akka-slf4j_2.12</artifactId>
        <version>2.5.9</version>
        <scope>test</scope>
        <optional>false</optional>
      </dependency>
      <dependency>
        <groupId>org.jolokia</groupId>
        <artifactId>jolokia-jvm</artifactId>
        <version>1.5.0</version>
        <classifier>agent</classifier>
        <scope>runtime</scope>
        <optional>false</optional>
      </dependency>
      <dependency>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest_2.12</artifactId>
        <version>3.0.5</version>
        <scope>test</scope>
        <optional>false</optional>
      </dependency>
      <dependency>
        <groupId>de.wayofquality.blended</groupId>
        <artifactId>blended.testsupport</artifactId>
        <version>2.5.0-M6</version>
        <scope>test</scope>
        <optional>false</optional>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-all</artifactId>
        <version>1.9.5</version>
        <scope>test</scope>
        <optional>false</optional>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-log4j12</artifactId>
        <version>1.7.25</version>
        <scope>test</scope>
        <optional>false</optional>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>de.wayofquality.blended</groupId>
      <artifactId>blended.akka</artifactId>
      <version>2.5.0-M6</version>
      <optional>false</optional>
    </dependency>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>2.12.6</version>
      <optional>false</optional>
    </dependency>
    <dependency>
      <groupId>io.spray</groupId>
      <artifactId>spray-json_2.12</artifactId>
      <version>1.3.4</version>
      <optional>false</optional>
    </dependency>
    <dependency>
      <groupId>net.virtual-void</groupId>
      <artifactId>json-lenses_2.12</artifactId>
      <version>0.6.2</version>
      <optional>false</optional>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.25</version>
      <optional>false</optional>
    </dependency>
    <dependency>
      <groupId>com.typesafe.akka</groupId>
      <artifactId>akka-http_2.12</artifactId>
      <version>10.1.1</version>
      <optional>false</optional>
    </dependency>
    <dependency>
      <groupId>com.typesafe.akka</groupId>
      <artifactId>akka-stream_2.12</artifactId>
      <version>2.5.9</version>
      <optional>false</optional>
    </dependency>
    <dependency>
      <groupId>com.typesafe.akka</groupId>
      <artifactId>akka-slf4j_2.12</artifactId>
      <version>2.5.9</version>
      <scope>test</scope>
      <optional>false</optional>
    </dependency>
    <dependency>
      <groupId>org.jolokia</groupId>
      <artifactId>jolokia-jvm</artifactId>
      <version>1.5.0</version>
      <classifier>agent</classifier>
      <scope>runtime</scope>
      <optional>false</optional>
    </dependency>
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_2.12</artifactId>
      <version>3.0.5</version>
      <scope>test</scope>
      <optional>false</optional>
    </dependency>
    <dependency>
      <groupId>de.wayofquality.blended</groupId>
      <artifactId>blended.testsupport</artifactId>
      <version>2.5.0-M6</version>
      <scope>test</scope>
      <optional>false</optional>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>1.9.5</version>
      <scope>test</scope>
      <optional>false</optional>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.7.25</version>
      <scope>test</scope>
      <optional>false</optional>
    </dependency>
  </dependencies>
  <repositories>
    <repository>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
        <checksumPolicy>warn</checksumPolicy>
      </releases>
      <snapshots>
        <enabled>false</enabled>
        <updatePolicy>daily</updatePolicy>
        <checksumPolicy>warn</checksumPolicy>
      </snapshots>
      <id>SpringBundles</id>
      <url>http://repository.springsource.com/maven/bundles/release</url>
    </repository>
    <repository>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
        <checksumPolicy>warn</checksumPolicy>
      </releases>
      <snapshots>
        <enabled>false</enabled>
        <updatePolicy>daily</updatePolicy>
        <checksumPolicy>warn</checksumPolicy>
      </snapshots>
      <id>SpringExternalBundles</id>
      <url>http://repository.springsource.com/maven/bundles/external</url>
    </repository>
  </repositories>
  <build>
    <resources>
      <resource>
        <filtering>true</filtering>
        <directory>src/main/resources</directory>
      </resource>
      <resource>
        <filtering>false</filtering>
        <directory>src/main/binaryResources</directory>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <filtering>true</filtering>
        <directory>src/test/resources</directory>
      </testResource>
      <testResource>
        <filtering>false</filtering>
        <directory>src/test/binaryResources</directory>
      </testResource>
    </testResources>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.1.1</version>
          <extensions>false</extensions>
          <executions>
            <execution>
              <id>extract-blended-container</id>
              <phase>process-resources</phase>
              <goals>
                <goal>copy-dependencies</goal>
              </goals>
              <inherited>true</inherited>
              <configuration>
                <includeClassifiers>agent</includeClassifiers>
                <outputDirectory>${project.build.directory}/jolokia</outputDirectory>
              </configuration>
            </execution>
          </executions>
          <inherited>true</inherited>
        </plugin>
        <plugin>
          <groupId>org.apache.felix</groupId>
          <artifactId>maven-bundle-plugin</artifactId>
          <version>3.2.0</version>
          <extensions>true</extensions>
          <executions>
            <execution>
              <id>manifest</id>
              <phase>process-classes</phase>
              <goals>
                <goal>manifest</goal>
              </goals>
              <inherited>true</inherited>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>biz.aQute.bnd</groupId>
              <artifactId>biz.aQute.bndlib</artifactId>
              <version>3.2.0</version>
              <optional>false</optional>
            </dependency>
          </dependencies>
          <inherited>true</inherited>
          <configuration>
            <supportedProjectTypes>
              <supportedProjectType>jar</supportedProjectType>
              <supportedProjectType>bundle</supportedProjectType>
              <supportedProjectType>war</supportedProjectType>
            </supportedProjectTypes>
            <instructions>
              <_include>osgi.bnd</_include>
            </instructions>
          </configuration>
        </plugin>
        <plugin>
          <groupId>net.alchim31.maven</groupId>
          <artifactId>scala-maven-plugin</artifactId>
          <version>3.3.2</version>
          <extensions>false</extensions>
          <executions>
            <execution>
              <id>scala-addSource</id>
              <phase>initialize</phase>
              <goals>
                <goal>add-source</goal>
              </goals>
              <inherited>true</inherited>
              <configuration>
                <scalaVersion>2.12.6</scalaVersion>
                <fork>true</fork>
                <recompileMode>incremental</recompileMode>
                <useZincServer>true</useZincServer>
                <addJavacArgs>-target|${java.version}|-source|${java.version}</addJavacArgs>
                <addZincArgs>-C-target|-C${java.version}|-C-source|-C${java.version}</addZincArgs>
                <args>
                  <arg>-deprecation</arg>
                  <arg>-feature</arg>
                  <arg>-Xlint</arg>
                  <arg>-Ywarn-nullary-override</arg>
                </args>
                <jvmArgs>
                  <jvmArg>-Xms256m</jvmArg>
                  <jvmArg>-Xmx512m</jvmArg>
                  <jvmArg>-XX:MaxPermSize=128m</jvmArg>
                </jvmArgs>
              </configuration>
            </execution>
            <execution>
              <id>scala-compile</id>
              <goals>
                <goal>compile</goal>
              </goals>
              <inherited>true</inherited>
              <configuration>
                <scalaVersion>2.12.6</scalaVersion>
                <fork>true</fork>
                <recompileMode>incremental</recompileMode>
                <useZincServer>true</useZincServer>
                <addJavacArgs>-target|${java.version}|-source|${java.version}</addJavacArgs>
                <addZincArgs>-C-target|-C${java.version}|-C-source|-C${java.version}</addZincArgs>
                <args>
                  <arg>-deprecation</arg>
                  <arg>-feature</arg>
                  <arg>-Xlint</arg>
                  <arg>-Ywarn-nullary-override</arg>
                </args>
                <jvmArgs>
                  <jvmArg>-Xms256m</jvmArg>
                  <jvmArg>-Xmx512m</jvmArg>
                  <jvmArg>-XX:MaxPermSize=128m</jvmArg>
                </jvmArgs>
              </configuration>
            </execution>
            <execution>
              <id>scala-testCompile</id>
              <goals>
                <goal>testCompile</goal>
              </goals>
              <inherited>true</inherited>
              <configuration>
                <scalaVersion>2.12.6</scalaVersion>
                <fork>true</fork>
                <recompileMode>incremental</recompileMode>
                <useZincServer>true</useZincServer>
                <addJavacArgs>-target|${java.version}|-source|${java.version}</addJavacArgs>
                <addZincArgs>-C-target|-C${java.version}|-C-source|-C${java.version}</addZincArgs>
                <args>
                  <arg>-deprecation</arg>
                  <arg>-feature</arg>
                  <arg>-Xlint</arg>
                  <arg>-Ywarn-nullary-override</arg>
                </args>
                <jvmArgs>
                  <jvmArg>-Xms256m</jvmArg>
                  <jvmArg>-Xmx512m</jvmArg>
                  <jvmArg>-XX:MaxPermSize=128m</jvmArg>
                </jvmArgs>
              </configuration>
            </execution>
          </executions>
          <inherited>true</inherited>
          <configuration>
            <scalaVersion>2.12.6</scalaVersion>
            <fork>true</fork>
            <recompileMode>incremental</recompileMode>
            <useZincServer>true</useZincServer>
            <addJavacArgs>-target|${java.version}|-source|${java.version}</addJavacArgs>
            <addZincArgs>-C-target|-C${java.version}|-C-source|-C${java.version}</addZincArgs>
            <args>
              <arg>-deprecation</arg>
              <arg>-feature</arg>
              <arg>-Xlint</arg>
              <arg>-Ywarn-nullary-override</arg>
            </args>
            <jvmArgs>
              <jvmArg>-Xms256m</jvmArg>
              <jvmArg>-Xmx512m</jvmArg>
              <jvmArg>-XX:MaxPermSize=128m</jvmArg>
            </jvmArgs>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.scalatest</groupId>
          <artifactId>scalatest-maven-plugin</artifactId>
          <version>2.0.0</version>
          <extensions>false</extensions>
          <inherited>true</inherited>
          <configuration>
            <argLine>-javaagent:${project.build.directory}/jolokia/jolokia-jvm-${jolokia.version}-agent.jar=port=7777,host=localhost</argLine>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>1.4.1</version>
          <extensions>false</extensions>
          <executions>
            <execution>
              <id>enforce-maven</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <inherited>true</inherited>
              <configuration>
                <rules>
                  <requireMavenVersion>
                    <version>3.3.1</version>
                  </requireMavenVersion>
                </rules>
              </configuration>
            </execution>
          </executions>
          <inherited>true</inherited>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.7.0</version>
          <extensions>false</extensions>
          <inherited>true</inherited>
          <configuration>
            <skipMain>true</skipMain>
            <skip>true</skip>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.scoverage</groupId>
          <artifactId>scoverage-maven-plugin</artifactId>
          <version>1.3.1-SNAPSHOT</version>
          <extensions>false</extensions>
          <inherited>true</inherited>
          <configuration>
            <aggregate>true</aggregate>
            <highlighting>true</highlighting>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.8</version>
          <extensions>false</extensions>
          <executions>
            <execution>
              <id>antrun-generate-test-logback-config</id>
              <phase>generate-test-resources</phase>
              <goals>
                <goal>run</goal>
              </goals>
              <inherited>true</inherited>
              <configuration>
                <target>
                  <echo file="${basedir}/target/test-classes/logback-test.xml" message="" append="false" />
                  <echo file="${basedir}/target/test-classes/logback-test.xml" message="&lt;configuration scan=&quot;true&quot; scanPeriod=&quot;30 seconds&quot;>${line.separator}" append="true" />
                  <echo file="${basedir}/target/test-classes/logback-test.xml" message="${line.separator}" append="true" />
                  <echo file="${basedir}/target/test-classes/logback-test.xml" message="  &lt;appender name=&quot;FILE&quot; class=&quot;ch.qos.logback.core.FileAppender&quot;>${line.separator}" append="true" />
                  <echo file="${basedir}/target/test-classes/logback-test.xml" message="    &lt;file>target/test.log&lt;/file>${line.separator}" append="true" />
                  <echo file="${basedir}/target/test-classes/logback-test.xml" message="    &lt;encoder>${line.separator}" append="true" />
                  <echo file="${basedir}/target/test-classes/logback-test.xml" message="      &lt;pattern>%d{yyyy-MM-dd-HH:mm.ss.SSS} | %8.8r | %-5level [%thread] %logger{36} : %msg%n&lt;/pattern>${line.separator}" append="true" />
                  <echo file="${basedir}/target/test-classes/logback-test.xml" message="    &lt;/encoder>${line.separator}" append="true" />
                  <echo file="${basedir}/target/test-classes/logback-test.xml" message="  &lt;/appender>${line.separator}" append="true" />
                  <echo file="${basedir}/target/test-classes/logback-test.xml" message="${line.separator}" append="true" />
                  <echo file="${basedir}/target/test-classes/logback-test.xml" message="  &lt;appender name=&quot;ASYNC_FILE&quot; class=&quot;ch.qos.logback.classic.AsyncAppender&quot;>${line.separator}" append="true" />
                  <echo file="${basedir}/target/test-classes/logback-test.xml" message="    &lt;appender-ref ref=&quot;FILE&quot; />${line.separator}" append="true" />
                  <echo file="${basedir}/target/test-classes/logback-test.xml" message="  &lt;/appender>${line.separator}" append="true" />
                  <echo file="${basedir}/target/test-classes/logback-test.xml" message="${line.separator}" append="true" />
                  <echo file="${basedir}/target/test-classes/logback-test.xml" message="  &lt;logger name=&quot;blended&quot; level=&quot;DEBUG&quot; />${line.separator}" append="true" />
                  <echo file="${basedir}/target/test-classes/logback-test.xml" message="${line.separator}" append="true" />
                  <echo file="${basedir}/target/test-classes/logback-test.xml" message="  &lt;root level=&quot;DEBUG&quot;>${line.separator}" append="true" />
                  <echo file="${basedir}/target/test-classes/logback-test.xml" message="    &lt;appender-ref ref=&quot;FILE&quot; />${line.separator}" append="true" />
                  <echo file="${basedir}/target/test-classes/logback-test.xml" message="  &lt;/root>${line.separator}" append="true" />
                  <echo file="${basedir}/target/test-classes/logback-test.xml" message="&lt;/configuration>${line.separator}" append="true" />
                  <echo file="${basedir}/target/test-classes/logback-test.xml" message="${line.separator}" append="true" />
                </target>
              </configuration>
            </execution>
          </executions>
          <inherited>true</inherited>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.1.1</version>
        <extensions>false</extensions>
        <executions>
          <execution>
            <id>extract-blended-container</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <inherited>true</inherited>
            <configuration>
              <includeClassifiers>agent</includeClassifiers>
              <outputDirectory>${project.build.directory}/jolokia</outputDirectory>
            </configuration>
          </execution>
        </executions>
        <inherited>true</inherited>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>3.2.0</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <id>manifest</id>
            <phase>process-classes</phase>
            <goals>
              <goal>manifest</goal>
            </goals>
            <inherited>true</inherited>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>biz.aQute.bnd</groupId>
            <artifactId>biz.aQute.bndlib</artifactId>
            <version>3.2.0</version>
            <optional>false</optional>
          </dependency>
        </dependencies>
        <inherited>true</inherited>
        <configuration>
          <supportedProjectTypes>
            <supportedProjectType>jar</supportedProjectType>
            <supportedProjectType>bundle</supportedProjectType>
            <supportedProjectType>war</supportedProjectType>
          </supportedProjectTypes>
          <instructions>
            <_include>osgi.bnd</_include>
          </instructions>
        </configuration>
      </plugin>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>3.3.2</version>
        <extensions>false</extensions>
        <executions>
          <execution>
            <id>scala-addSource</id>
            <phase>initialize</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <inherited>true</inherited>
            <configuration>
              <scalaVersion>2.12.6</scalaVersion>
              <fork>true</fork>
              <recompileMode>incremental</recompileMode>
              <useZincServer>true</useZincServer>
              <addJavacArgs>-target|${java.version}|-source|${java.version}</addJavacArgs>
              <addZincArgs>-C-target|-C${java.version}|-C-source|-C${java.version}</addZincArgs>
              <args>
                <arg>-deprecation</arg>
                <arg>-feature</arg>
                <arg>-Xlint</arg>
                <arg>-Ywarn-nullary-override</arg>
              </args>
              <jvmArgs>
                <jvmArg>-Xms256m</jvmArg>
                <jvmArg>-Xmx512m</jvmArg>
                <jvmArg>-XX:MaxPermSize=128m</jvmArg>
              </jvmArgs>
            </configuration>
          </execution>
          <execution>
            <id>scala-compile</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <inherited>true</inherited>
            <configuration>
              <scalaVersion>2.12.6</scalaVersion>
              <fork>true</fork>
              <recompileMode>incremental</recompileMode>
              <useZincServer>true</useZincServer>
              <addJavacArgs>-target|${java.version}|-source|${java.version}</addJavacArgs>
              <addZincArgs>-C-target|-C${java.version}|-C-source|-C${java.version}</addZincArgs>
              <args>
                <arg>-deprecation</arg>
                <arg>-feature</arg>
                <arg>-Xlint</arg>
                <arg>-Ywarn-nullary-override</arg>
              </args>
              <jvmArgs>
                <jvmArg>-Xms256m</jvmArg>
                <jvmArg>-Xmx512m</jvmArg>
                <jvmArg>-XX:MaxPermSize=128m</jvmArg>
              </jvmArgs>
            </configuration>
          </execution>
          <execution>
            <id>scala-testCompile</id>
            <goals>
              <goal>testCompile</goal>
            </goals>
            <inherited>true</inherited>
            <configuration>
              <scalaVersion>2.12.6</scalaVersion>
              <fork>true</fork>
              <recompileMode>incremental</recompileMode>
              <useZincServer>true</useZincServer>
              <addJavacArgs>-target|${java.version}|-source|${java.version}</addJavacArgs>
              <addZincArgs>-C-target|-C${java.version}|-C-source|-C${java.version}</addZincArgs>
              <args>
                <arg>-deprecation</arg>
                <arg>-feature</arg>
                <arg>-Xlint</arg>
                <arg>-Ywarn-nullary-override</arg>
              </args>
              <jvmArgs>
                <jvmArg>-Xms256m</jvmArg>
                <jvmArg>-Xmx512m</jvmArg>
                <jvmArg>-XX:MaxPermSize=128m</jvmArg>
              </jvmArgs>
            </configuration>
          </execution>
        </executions>
        <inherited>true</inherited>
        <configuration>
          <scalaVersion>2.12.6</scalaVersion>
          <fork>true</fork>
          <recompileMode>incremental</recompileMode>
          <useZincServer>true</useZincServer>
          <addJavacArgs>-target|${java.version}|-source|${java.version}</addJavacArgs>
          <addZincArgs>-C-target|-C${java.version}|-C-source|-C${java.version}</addZincArgs>
          <args>
            <arg>-deprecation</arg>
            <arg>-feature</arg>
            <arg>-Xlint</arg>
            <arg>-Ywarn-nullary-override</arg>
          </args>
          <jvmArgs>
            <jvmArg>-Xms256m</jvmArg>
            <jvmArg>-Xmx512m</jvmArg>
            <jvmArg>-XX:MaxPermSize=128m</jvmArg>
          </jvmArgs>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest-maven-plugin</artifactId>
        <version>2.0.0</version>
        <extensions>false</extensions>
        <inherited>true</inherited>
        <configuration>
          <argLine>-javaagent:${project.build.directory}/jolokia/jolokia-jvm-${jolokia.version}-agent.jar=port=7777,host=localhost</argLine>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>1.4.1</version>
        <extensions>false</extensions>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <inherited>true</inherited>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>3.3.1</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
        <inherited>true</inherited>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.7.0</version>
        <extensions>false</extensions>
        <inherited>true</inherited>
        <configuration>
          <skipMain>true</skipMain>
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.scoverage</groupId>
        <artifactId>scoverage-maven-plugin</artifactId>
        <version>1.3.1-SNAPSHOT</version>
        <extensions>false</extensions>
        <inherited>true</inherited>
        <configuration>
          <aggregate>true</aggregate>
          <highlighting>true</highlighting>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.8</version>
        <extensions>false</extensions>
        <executions>
          <execution>
            <id>antrun-generate-test-logback-config</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <inherited>true</inherited>
            <configuration>
              <target>
                <echo file="${basedir}/target/test-classes/logback-test.xml" message="" append="false" />
                <echo file="${basedir}/target/test-classes/logback-test.xml" message="&lt;configuration scan=&quot;true&quot; scanPeriod=&quot;30 seconds&quot;>${line.separator}" append="true" />
                <echo file="${basedir}/target/test-classes/logback-test.xml" message="${line.separator}" append="true" />
                <echo file="${basedir}/target/test-classes/logback-test.xml" message="  &lt;appender name=&quot;FILE&quot; class=&quot;ch.qos.logback.core.FileAppender&quot;>${line.separator}" append="true" />
                <echo file="${basedir}/target/test-classes/logback-test.xml" message="    &lt;file>target/test.log&lt;/file>${line.separator}" append="true" />
                <echo file="${basedir}/target/test-classes/logback-test.xml" message="    &lt;encoder>${line.separator}" append="true" />
                <echo file="${basedir}/target/test-classes/logback-test.xml" message="      &lt;pattern>%d{yyyy-MM-dd-HH:mm.ss.SSS} | %8.8r | %-5level [%thread] %logger{36} : %msg%n&lt;/pattern>${line.separator}" append="true" />
                <echo file="${basedir}/target/test-classes/logback-test.xml" message="    &lt;/encoder>${line.separator}" append="true" />
                <echo file="${basedir}/target/test-classes/logback-test.xml" message="  &lt;/appender>${line.separator}" append="true" />
                <echo file="${basedir}/target/test-classes/logback-test.xml" message="${line.separator}" append="true" />
                <echo file="${basedir}/target/test-classes/logback-test.xml" message="  &lt;appender name=&quot;ASYNC_FILE&quot; class=&quot;ch.qos.logback.classic.AsyncAppender&quot;>${line.separator}" append="true" />
                <echo file="${basedir}/target/test-classes/logback-test.xml" message="    &lt;appender-ref ref=&quot;FILE&quot; />${line.separator}" append="true" />
                <echo file="${basedir}/target/test-classes/logback-test.xml" message="  &lt;/appender>${line.separator}" append="true" />
                <echo file="${basedir}/target/test-classes/logback-test.xml" message="${line.separator}" append="true" />
                <echo file="${basedir}/target/test-classes/logback-test.xml" message="  &lt;logger name=&quot;blended&quot; level=&quot;DEBUG&quot; />${line.separator}" append="true" />
                <echo file="${basedir}/target/test-classes/logback-test.xml" message="${line.separator}" append="true" />
                <echo file="${basedir}/target/test-classes/logback-test.xml" message="  &lt;root level=&quot;DEBUG&quot;>${line.separator}" append="true" />
                <echo file="${basedir}/target/test-classes/logback-test.xml" message="    &lt;appender-ref ref=&quot;FILE&quot; />${line.separator}" append="true" />
                <echo file="${basedir}/target/test-classes/logback-test.xml" message="  &lt;/root>${line.separator}" append="true" />
                <echo file="${basedir}/target/test-classes/logback-test.xml" message="&lt;/configuration>${line.separator}" append="true" />
                <echo file="${basedir}/target/test-classes/logback-test.xml" message="${line.separator}" append="true" />
              </target>
            </configuration>
          </execution>
        </executions>
        <inherited>true</inherited>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>release</id>
      <activation />
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-source-plugin</artifactId>
            <version>3.0.1</version>
            <extensions>false</extensions>
            <executions>
              <execution>
                <id>attach-sources-no-fork</id>
                <phase>package</phase>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
                <inherited>true</inherited>
              </execution>
              <execution>
                <id>attach-sources</id>
                <phase>DISABLE_FORKED_LIFECYCLE_MSOURCES-13</phase>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
                <inherited>true</inherited>
              </execution>
            </executions>
            <inherited>true</inherited>
            <configuration>
              <includes>
                <include>**/*.java</include>
                <include>**/*.scala</include>
              </includes>
              <forceCreation>true</forceCreation>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.6</version>
            <extensions>false</extensions>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
                <inherited>true</inherited>
              </execution>
            </executions>
            <inherited>true</inherited>
          </plugin>
          <plugin>
            <groupId>net.alchim31.maven</groupId>
            <artifactId>scala-maven-plugin</artifactId>
            <version>3.3.2</version>
            <extensions>false</extensions>
            <executions>
              <execution>
                <id>attach-doc</id>
                <phase>package</phase>
                <goals>
                  <goal>doc-jar</goal>
                </goals>
                <inherited>true</inherited>
              </execution>
            </executions>
            <inherited>true</inherited>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>gen-pom-xml</id>
      <activation />
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-clean-plugin</artifactId>
            <version>3.1.0</version>
            <extensions>false</extensions>
            <inherited>true</inherited>
            <configuration>
              <filesets>
                <fileset>
                  <directory>${basedir}</directory>
                  <includes>
                    <include>pom.xml</include>
                  </includes>
                </fileset>
              </filesets>
            </configuration>
          </plugin>
          <plugin>
            <groupId>io.takari.polyglot</groupId>
            <artifactId>polyglot-translate-plugin</artifactId>
            <version>0.3.1</version>
            <extensions>false</extensions>
            <executions>
              <execution>
                <id>pom-scala-to-pom-xml</id>
                <phase>initialize</phase>
                <goals>
                  <goal>translate-project</goal>
                </goals>
                <inherited>true</inherited>
                <configuration>
                  <input>pom.scala</input>
                  <output>pom.xml</output>
                </configuration>
              </execution>
            </executions>
            <inherited>true</inherited>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>check-deps</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.owasp</groupId>
            <artifactId>dependency-check-maven</artifactId>
            <version>3.2.1</version>
            <extensions>false</extensions>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
                <inherited>true</inherited>
                <configuration>
                  <failBuildOnCVSS>11</failBuildOnCVSS>
                </configuration>
              </execution>
            </executions>
            <inherited>true</inherited>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>eclipse</id>
      <build>
        <plugins>
          <plugin>
            <groupId>de.tototec</groupId>
            <artifactId>de.tobiasroeser.eclipse-maven-plugin</artifactId>
            <version>0.1.0</version>
            <extensions>false</extensions>
            <inherited>true</inherited>
            <configuration>
              <outputDirectory>${basedir}/target-ide/classes</outputDirectory>
              <testOutputDirectory>${basedir}/target-ide/test-classes</testOutputDirectory>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
