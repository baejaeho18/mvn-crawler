Compiled from "JolokiaVersion.scala"
public final class blended.jolokia.model.JolokiaVersion$ implements scala.Serializable {
  public static blended.jolokia.model.JolokiaVersion$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class blended/jolokia/model/JolokiaVersion$
       3: invokespecial #32                 // Method "<init>":()V
       6: return

  public blended.jolokia.model.JolokiaVersion apply(spray.json.JsValue);
    Code:
       0: getstatic     #40                 // Field spray/json/lenses/JsonLenses$.MODULE$:Lspray/json/lenses/JsonLenses$;
       3: aload_1
       4: invokevirtual #44                 // Method spray/json/lenses/JsonLenses$.richValue:(Lspray/json/JsValue;)Lspray/json/lenses/ExtraImplicits$RichJsValue;
       7: getstatic     #40                 // Field spray/json/lenses/JsonLenses$.MODULE$:Lspray/json/lenses/JsonLenses$;
      10: ldc           #45                 // String value
      12: invokevirtual #49                 // Method spray/json/lenses/JsonLenses$.strToField:(Ljava/lang/String;)Lspray/json/lenses/Lens;
      15: getstatic     #40                 // Field spray/json/lenses/JsonLenses$.MODULE$:Lspray/json/lenses/JsonLenses$;
      18: ldc           #51                 // String agent
      20: invokevirtual #49                 // Method spray/json/lenses/JsonLenses$.strToField:(Ljava/lang/String;)Lspray/json/lenses/Lens;
      23: getstatic     #56                 // Field spray/json/lenses/Join$.MODULE$:Lspray/json/lenses/Join$;
      26: invokevirtual #60                 // Method spray/json/lenses/Join$.joinWithScalar:()Lspray/json/lenses/Join;
      29: invokeinterface #66,  3           // InterfaceMethod spray/json/lenses/Lens.$div:(Lspray/json/lenses/Lens;Lspray/json/lenses/Join;)Lspray/json/lenses/Lens;
      34: getstatic     #69                 // Field spray/json/lenses/package$Reader$.MODULE$:Lspray/json/lenses/package$Reader$;
      37: getstatic     #74                 // Field spray/json/DefaultJsonProtocol$.MODULE$:Lspray/json/DefaultJsonProtocol$;
      40: invokevirtual #78                 // Method spray/json/DefaultJsonProtocol$.StringJsonFormat:()Lspray/json/BasicFormats$StringJsonFormat$;
      43: invokevirtual #82                 // Method spray/json/lenses/package$Reader$.safeMonadicReader:(Lspray/json/JsonReader;)Lspray/json/lenses/package$Reader;
      46: invokeinterface #86,  3           // InterfaceMethod spray/json/lenses/ExtraImplicits$RichJsValue.extract:(Lspray/json/lenses/Lens;Lspray/json/lenses/package$Reader;)Ljava/lang/Object;
      51: checkcast     #88                 // class java/lang/String
      54: astore_2
      55: getstatic     #40                 // Field spray/json/lenses/JsonLenses$.MODULE$:Lspray/json/lenses/JsonLenses$;
      58: aload_1
      59: invokevirtual #44                 // Method spray/json/lenses/JsonLenses$.richValue:(Lspray/json/JsValue;)Lspray/json/lenses/ExtraImplicits$RichJsValue;
      62: getstatic     #40                 // Field spray/json/lenses/JsonLenses$.MODULE$:Lspray/json/lenses/JsonLenses$;
      65: ldc           #45                 // String value
      67: invokevirtual #49                 // Method spray/json/lenses/JsonLenses$.strToField:(Ljava/lang/String;)Lspray/json/lenses/Lens;
      70: getstatic     #40                 // Field spray/json/lenses/JsonLenses$.MODULE$:Lspray/json/lenses/JsonLenses$;
      73: ldc           #90                 // String protocol
      75: invokevirtual #49                 // Method spray/json/lenses/JsonLenses$.strToField:(Ljava/lang/String;)Lspray/json/lenses/Lens;
      78: getstatic     #56                 // Field spray/json/lenses/Join$.MODULE$:Lspray/json/lenses/Join$;
      81: invokevirtual #60                 // Method spray/json/lenses/Join$.joinWithScalar:()Lspray/json/lenses/Join;
      84: invokeinterface #66,  3           // InterfaceMethod spray/json/lenses/Lens.$div:(Lspray/json/lenses/Lens;Lspray/json/lenses/Join;)Lspray/json/lenses/Lens;
      89: getstatic     #69                 // Field spray/json/lenses/package$Reader$.MODULE$:Lspray/json/lenses/package$Reader$;
      92: getstatic     #74                 // Field spray/json/DefaultJsonProtocol$.MODULE$:Lspray/json/DefaultJsonProtocol$;
      95: invokevirtual #78                 // Method spray/json/DefaultJsonProtocol$.StringJsonFormat:()Lspray/json/BasicFormats$StringJsonFormat$;
      98: invokevirtual #82                 // Method spray/json/lenses/package$Reader$.safeMonadicReader:(Lspray/json/JsonReader;)Lspray/json/lenses/package$Reader;
     101: invokeinterface #86,  3           // InterfaceMethod spray/json/lenses/ExtraImplicits$RichJsValue.extract:(Lspray/json/lenses/Lens;Lspray/json/lenses/package$Reader;)Ljava/lang/Object;
     106: checkcast     #88                 // class java/lang/String
     109: astore_3
     110: getstatic     #40                 // Field spray/json/lenses/JsonLenses$.MODULE$:Lspray/json/lenses/JsonLenses$;
     113: aload_1
     114: invokevirtual #44                 // Method spray/json/lenses/JsonLenses$.richValue:(Lspray/json/JsValue;)Lspray/json/lenses/ExtraImplicits$RichJsValue;
     117: getstatic     #40                 // Field spray/json/lenses/JsonLenses$.MODULE$:Lspray/json/lenses/JsonLenses$;
     120: ldc           #45                 // String value
     122: invokevirtual #49                 // Method spray/json/lenses/JsonLenses$.strToField:(Ljava/lang/String;)Lspray/json/lenses/Lens;
     125: getstatic     #40                 // Field spray/json/lenses/JsonLenses$.MODULE$:Lspray/json/lenses/JsonLenses$;
     128: ldc           #92                 // String config
     130: invokevirtual #49                 // Method spray/json/lenses/JsonLenses$.strToField:(Ljava/lang/String;)Lspray/json/lenses/Lens;
     133: getstatic     #56                 // Field spray/json/lenses/Join$.MODULE$:Lspray/json/lenses/Join$;
     136: invokevirtual #60                 // Method spray/json/lenses/Join$.joinWithScalar:()Lspray/json/lenses/Join;
     139: invokeinterface #66,  3           // InterfaceMethod spray/json/lenses/Lens.$div:(Lspray/json/lenses/Lens;Lspray/json/lenses/Join;)Lspray/json/lenses/Lens;
     144: getstatic     #69                 // Field spray/json/lenses/package$Reader$.MODULE$:Lspray/json/lenses/package$Reader$;
     147: getstatic     #74                 // Field spray/json/DefaultJsonProtocol$.MODULE$:Lspray/json/DefaultJsonProtocol$;
     150: getstatic     #74                 // Field spray/json/DefaultJsonProtocol$.MODULE$:Lspray/json/DefaultJsonProtocol$;
     153: invokevirtual #78                 // Method spray/json/DefaultJsonProtocol$.StringJsonFormat:()Lspray/json/BasicFormats$StringJsonFormat$;
     156: getstatic     #74                 // Field spray/json/DefaultJsonProtocol$.MODULE$:Lspray/json/DefaultJsonProtocol$;
     159: invokevirtual #78                 // Method spray/json/DefaultJsonProtocol$.StringJsonFormat:()Lspray/json/BasicFormats$StringJsonFormat$;
     162: invokevirtual #96                 // Method spray/json/DefaultJsonProtocol$.mapFormat:(Lspray/json/JsonFormat;Lspray/json/JsonFormat;)Lspray/json/RootJsonFormat;
     165: invokevirtual #82                 // Method spray/json/lenses/package$Reader$.safeMonadicReader:(Lspray/json/JsonReader;)Lspray/json/lenses/package$Reader;
     168: invokeinterface #86,  3           // InterfaceMethod spray/json/lenses/ExtraImplicits$RichJsValue.extract:(Lspray/json/lenses/Lens;Lspray/json/lenses/package$Reader;)Ljava/lang/Object;
     173: checkcast     #98                 // class scala/collection/immutable/Map
     176: astore        4
     178: new           #100                // class blended/jolokia/model/JolokiaVersion
     181: dup
     182: aload_2
     183: aload_3
     184: aload         4
     186: invokespecial #103                // Method blended/jolokia/model/JolokiaVersion."<init>":(Ljava/lang/String;Ljava/lang/String;Lscala/collection/immutable/Map;)V
     189: areturn

  public blended.jolokia.model.JolokiaVersion apply(java.lang.String, java.lang.String, scala.collection.immutable.Map<java.lang.String, java.lang.String>);
    Code:
       0: new           #100                // class blended/jolokia/model/JolokiaVersion
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokespecial #103                // Method blended/jolokia/model/JolokiaVersion."<init>":(Ljava/lang/String;Ljava/lang/String;Lscala/collection/immutable/Map;)V
      10: areturn

  public scala.Option<scala.Tuple3<java.lang.String, java.lang.String, scala.collection.immutable.Map<java.lang.String, java.lang.String>>> unapply(blended.jolokia.model.JolokiaVersion);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: getstatic     #116                // Field scala/None$.MODULE$:Lscala/None$;
       7: goto          36
      10: new           #118                // class scala/Some
      13: dup
      14: new           #120                // class scala/Tuple3
      17: dup
      18: aload_1
      19: invokevirtual #123                // Method blended/jolokia/model/JolokiaVersion.agent:()Ljava/lang/String;
      22: aload_1
      23: invokevirtual #125                // Method blended/jolokia/model/JolokiaVersion.protocol:()Ljava/lang/String;
      26: aload_1
      27: invokevirtual #128                // Method blended/jolokia/model/JolokiaVersion.config:()Lscala/collection/immutable/Map;
      30: invokespecial #131                // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      33: invokespecial #134                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      36: areturn

  private java.lang.Object readResolve();
    Code:
       0: getstatic     #141                // Field MODULE$:Lblended/jolokia/model/JolokiaVersion$;
       3: areturn

  private blended.jolokia.model.JolokiaVersion$();
    Code:
       0: aload_0
       1: invokespecial #142                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #141                // Field MODULE$:Lblended/jolokia/model/JolokiaVersion$;
       8: return
}
