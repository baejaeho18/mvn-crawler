Compiled from "AbstractLanguageVersionTest.java"
public class net.sourceforge.pmd.AbstractLanguageVersionTest {
  private java.lang.String name;

  private java.lang.String version;

  private java.lang.String terseName;

  private net.sourceforge.pmd.lang.LanguageVersion expected;

  public net.sourceforge.pmd.AbstractLanguageVersionTest(java.lang.String, java.lang.String, java.lang.String, net.sourceforge.pmd.lang.LanguageVersion);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field name:Ljava/lang/String;
       9: aload_0
      10: aload_3
      11: putfield      #3                  // Field version:Ljava/lang/String;
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field terseName:Ljava/lang/String;
      19: aload_3
      20: ifnull        60
      23: aload_3
      24: invokevirtual #5                  // Method java/lang/String.isEmpty:()Z
      27: ifne          60
      30: new           #6                  // class java/lang/StringBuilder
      33: dup
      34: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      37: aload_0
      38: dup_x1
      39: getfield      #4                  // Field terseName:Ljava/lang/String;
      42: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: ldc           #9                  // String
      47: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_3
      51: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: putfield      #4                  // Field terseName:Ljava/lang/String;
      60: aload_0
      61: aload         4
      63: putfield      #11                 // Field expected:Lnet/sourceforge/pmd/lang/LanguageVersion;
      66: return

  public void testGetLanguageVersionForTerseName();
    Code:
       0: aload_0
       1: getfield      #11                 // Field expected:Lnet/sourceforge/pmd/lang/LanguageVersion;
       4: aload_0
       5: getfield      #4                  // Field terseName:Ljava/lang/String;
       8: invokestatic  #12                 // Method net/sourceforge/pmd/lang/LanguageRegistry.findLanguageVersionByTerseName:(Ljava/lang/String;)Lnet/sourceforge/pmd/lang/LanguageVersion;
      11: invokestatic  #13                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      14: return

  public void testFindVersionsForLanguageNameAndVersion();
    Code:
       0: new           #14                 // class net/sourceforge/pmd/ant/SourceLanguage
       3: dup
       4: invokespecial #15                 // Method net/sourceforge/pmd/ant/SourceLanguage."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #2                  // Field name:Ljava/lang/String;
      13: invokevirtual #16                 // Method net/sourceforge/pmd/ant/SourceLanguage.setName:(Ljava/lang/String;)V
      16: aload_1
      17: aload_0
      18: getfield      #3                  // Field version:Ljava/lang/String;
      21: invokevirtual #17                 // Method net/sourceforge/pmd/ant/SourceLanguage.setVersion:(Ljava/lang/String;)V
      24: aload_1
      25: invokevirtual #18                 // Method net/sourceforge/pmd/ant/SourceLanguage.getName:()Ljava/lang/String;
      28: invokestatic  #19                 // Method net/sourceforge/pmd/lang/LanguageRegistry.getLanguage:(Ljava/lang/String;)Lnet/sourceforge/pmd/lang/Language;
      31: astore_2
      32: aconst_null
      33: astore_3
      34: aload_2
      35: ifnull        49
      38: aload_2
      39: aload_1
      40: invokevirtual #20                 // Method net/sourceforge/pmd/ant/SourceLanguage.getVersion:()Ljava/lang/String;
      43: invokeinterface #21,  2           // InterfaceMethod net/sourceforge/pmd/lang/Language.getVersion:(Ljava/lang/String;)Lnet/sourceforge/pmd/lang/LanguageVersion;
      48: astore_3
      49: aload_0
      50: getfield      #11                 // Field expected:Lnet/sourceforge/pmd/lang/LanguageVersion;
      53: aload_3
      54: invokestatic  #13                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      57: return
}
