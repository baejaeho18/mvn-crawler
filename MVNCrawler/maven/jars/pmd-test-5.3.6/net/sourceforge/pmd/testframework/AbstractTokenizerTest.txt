Compiled from "AbstractTokenizerTest.java"
public abstract class net.sourceforge.pmd.testframework.AbstractTokenizerTest {
  protected int expectedTokenCount;

  protected net.sourceforge.pmd.cpd.Tokenizer tokenizer;

  protected net.sourceforge.pmd.cpd.SourceCode sourceCode;

  public net.sourceforge.pmd.testframework.AbstractTokenizerTest();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public abstract void buildTokenizer() throws java.io.IOException;

  public abstract java.lang.String getSampleCode() throws java.io.IOException;

  protected void tokenizeTest() throws java.io.IOException;
    Code:
       0: new           #2                  // class net/sourceforge/pmd/cpd/Tokens
       3: dup
       4: invokespecial #3                  // Method net/sourceforge/pmd/cpd/Tokens."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #4                  // Field tokenizer:Lnet/sourceforge/pmd/cpd/Tokenizer;
      12: aload_0
      13: getfield      #5                  // Field sourceCode:Lnet/sourceforge/pmd/cpd/SourceCode;
      16: aload_1
      17: invokeinterface #6,  3            // InterfaceMethod net/sourceforge/pmd/cpd/Tokenizer.tokenize:(Lnet/sourceforge/pmd/cpd/SourceCode;Lnet/sourceforge/pmd/cpd/Tokens;)V
      22: aload_1
      23: invokevirtual #7                  // Method net/sourceforge/pmd/cpd/Tokens.getTokens:()Ljava/util/List;
      26: astore_2
      27: aload_0
      28: getfield      #8                  // Field expectedTokenCount:I
      31: i2l
      32: aload_2
      33: invokeinterface #9,  1            // InterfaceMethod java/util/List.size:()I
      38: i2l
      39: invokestatic  #10                 // Method org/junit/Assert.assertEquals:(JJ)V
      42: return
}
