Compiled from "TrinityRequest.scala"
public final class org.sisioh.trinity.domain.http.AcceptOrdering$ implements scala.math.Ordering<java.lang.String> {
  public static final org.sisioh.trinity.domain.http.AcceptOrdering$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class org/sisioh/trinity/domain/http/AcceptOrdering$
       3: invokespecial #15                 // Method "<init>":()V
       6: return

  public scala.Some<java.lang.Object> tryCompare(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #22                 // Method scala/math/Ordering$class.tryCompare:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
       6: areturn

  public boolean lteq(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #31                 // Method scala/math/Ordering$class.lteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean gteq(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #34                 // Method scala/math/Ordering$class.gteq:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean lt(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #37                 // Method scala/math/Ordering$class.lt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean gt(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #40                 // Method scala/math/Ordering$class.gt:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public boolean equiv(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #43                 // Method scala/math/Ordering$class.equiv:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  public java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #48                 // Method scala/math/Ordering$class.max:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #51                 // Method scala/math/Ordering$class.min:(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public scala.math.Ordering<java.lang.String> reverse();
    Code:
       0: aload_0
       1: invokestatic  #56                 // Method scala/math/Ordering$class.reverse:(Lscala/math/Ordering;)Lscala/math/Ordering;
       4: areturn

  public <U> scala.math.Ordering<U> on(scala.Function1<U, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #61                 // Method scala/math/Ordering$class.on:(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;
       5: areturn

  public scala.math.Ordering<java.lang.String>.Ops mkOrderingOps(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #68                 // Method scala/math/Ordering$class.mkOrderingOps:(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$Ops;
       5: areturn

  public double getWeight(java.lang.String);
    Code:
       0: getstatic     #78                 // Field scala/collection/JavaConversions$.MODULE$:Lscala/collection/JavaConversions$;
       3: bipush        59
       5: invokestatic  #83                 // Method com/google/common/base/Splitter.on:(C)Lcom/google/common/base/Splitter;
       8: aload_1
       9: invokevirtual #87                 // Method com/google/common/base/Splitter.split:(Ljava/lang/CharSequence;)Ljava/lang/Iterable;
      12: invokevirtual #91                 // Method scala/collection/JavaConversions$.iterableAsScalaIterable:(Ljava/lang/Iterable;)Lscala/collection/Iterable;
      15: getstatic     #96                 // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      18: ldc           #98                 // class java/lang/String
      20: invokevirtual #102                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      23: invokeinterface #108,  2          // InterfaceMethod scala/collection/Iterable.toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
      28: checkcast     #110                // class "[Ljava/lang/String;"
      31: astore_2
      32: aload_2
      33: arraylength
      34: iconst_2
      35: if_icmpge     42
      38: dconst_1
      39: goto          111
      42: new           #112                // class scala/collection/immutable/StringOps
      45: dup
      46: getstatic     #117                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      49: getstatic     #117                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      52: getstatic     #78                 // Field scala/collection/JavaConversions$.MODULE$:Lscala/collection/JavaConversions$;
      55: ldc           #119                // String q=
      57: invokestatic  #122                // Method com/google/common/base/Splitter.on:(Ljava/lang/String;)Lcom/google/common/base/Splitter;
      60: aload_2
      61: iconst_1
      62: aaload
      63: invokevirtual #87                 // Method com/google/common/base/Splitter.split:(Ljava/lang/CharSequence;)Ljava/lang/Iterable;
      66: invokevirtual #91                 // Method scala/collection/JavaConversions$.iterableAsScalaIterable:(Ljava/lang/Iterable;)Lscala/collection/Iterable;
      69: getstatic     #96                 // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      72: ldc           #98                 // class java/lang/String
      74: invokevirtual #102                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      77: invokeinterface #108,  2          // InterfaceMethod scala/collection/Iterable.toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
      82: checkcast     #124                // class "[Ljava/lang/Object;"
      85: invokevirtual #128                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;
      88: invokeinterface #134,  1          // InterfaceMethod scala/collection/mutable/ArrayOps.last:()Ljava/lang/Object;
      93: checkcast     #98                 // class java/lang/String
      96: invokevirtual #138                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
      99: invokespecial #141                // Method scala/collection/immutable/StringOps."<init>":(Ljava/lang/String;)V
     102: invokevirtual #145                // Method scala/collection/immutable/StringOps.toFloat:()F
     105: f2d
     106: goto          111
     109: astore_3
     110: dconst_1
     111: dreturn
    Exception table:
       from    to  target type
          42   109   109   Class java/lang/NumberFormatException

  public int compare(java.lang.String, java.lang.String);
    Code:
       0: new           #152                // class scala/runtime/RichDouble
       3: dup
       4: getstatic     #117                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: aload_0
       8: aload_2
       9: invokevirtual #154                // Method getWeight:(Ljava/lang/String;)D
      12: invokevirtual #158                // Method scala/Predef$.doubleWrapper:(D)D
      15: invokespecial #161                // Method scala/runtime/RichDouble."<init>":(D)V
      18: aload_0
      19: aload_1
      20: invokevirtual #154                // Method getWeight:(Ljava/lang/String;)D
      23: invokestatic  #167                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
      26: invokevirtual #170                // Method scala/runtime/RichDouble.compare:(Ljava/lang/Object;)I
      29: ireturn

  private java.lang.Object readResolve();
    Code:
       0: getstatic     #175                // Field MODULE$:Lorg/sisioh/trinity/domain/http/AcceptOrdering$;
       3: areturn

  public scala.math.PartialOrdering reverse();
    Code:
       0: aload_0
       1: invokevirtual #178                // Method reverse:()Lscala/math/Ordering;
       4: areturn

  public scala.Option tryCompare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #181                // Method tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
       6: areturn

  public int compare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #98                 // class java/lang/String
       5: aload_2
       6: checkcast     #98                 // class java/lang/String
       9: invokevirtual #184                // Method compare:(Ljava/lang/String;Ljava/lang/String;)I
      12: ireturn

  private org.sisioh.trinity.domain.http.AcceptOrdering$();
    Code:
       0: aload_0
       1: invokespecial #185                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #175                // Field MODULE$:Lorg/sisioh/trinity/domain/http/AcceptOrdering$;
       8: aload_0
       9: invokestatic  #191                // Method scala/math/PartialOrdering$class.$init$:(Lscala/math/PartialOrdering;)V
      12: aload_0
      13: invokestatic  #194                // Method scala/math/Ordering$class.$init$:(Lscala/math/Ordering;)V
      16: return
}
