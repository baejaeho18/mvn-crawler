Compiled from "Task.scala"
public final class monix.eval.Task$$anon$30$$anon$3 implements monix.execution.rstreams.Subscription {
  private boolean isActive;

  private final monix.execution.cancelables.StackedCancelable conn;

  private final monix.eval.Task$$anon$30 $outer;

  public final org.reactivestreams.Subscriber out$1;

  public void request(long);
    Code:
       0: getstatic     #28                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: lload_1
       4: lconst_0
       5: lcmp
       6: ifle          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: new           #30                 // class monix/eval/Task$$anon$30$$anon$3$$anonfun$request$1
      17: dup
      18: aload_0
      19: invokespecial #34                 // Method monix/eval/Task$$anon$30$$anon$3$$anonfun$request$1."<init>":(Lmonix/eval/Task$$anon$30$$anon$3;)V
      22: invokevirtual #38                 // Method scala/Predef$.require:(ZLscala/Function0;)V
      25: aload_0
      26: getfield      #40                 // Field isActive:Z
      29: ifeq          77
      32: getstatic     #45                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
      35: aload_0
      36: getfield      #47                 // Field $outer:Lmonix/eval/Task$$anon$30;
      39: invokevirtual #51                 // Method monix/eval/Task$$anon$30.monix$eval$Task$$anon$$$outer:()Lmonix/eval/Task;
      42: aload_0
      43: getfield      #47                 // Field $outer:Lmonix/eval/Task$$anon$30;
      46: getfield      #55                 // Field monix/eval/Task$$anon$30.s$6:Lmonix/execution/Scheduler;
      49: aload_0
      50: getfield      #57                 // Field conn:Lmonix/execution/cancelables/StackedCancelable;
      53: getstatic     #62                 // Field monix/eval/Callback$.MODULE$:Lmonix/eval/Callback$;
      56: new           #64                 // class monix/eval/Task$$anon$30$$anon$3$$anon$12
      59: dup
      60: aload_0
      61: invokespecial #65                 // Method monix/eval/Task$$anon$30$$anon$3$$anon$12."<init>":(Lmonix/eval/Task$$anon$30$$anon$3;)V
      64: aload_0
      65: getfield      #47                 // Field $outer:Lmonix/eval/Task$$anon$30;
      68: getfield      #55                 // Field monix/eval/Task$$anon$30.s$6:Lmonix/execution/Scheduler;
      71: invokevirtual #69                 // Method monix/eval/Callback$.safe:(Lmonix/eval/Callback;Lmonix/execution/UncaughtExceptionReporter;)Lmonix/eval/Callback;
      74: invokevirtual #73                 // Method monix/eval/Task$.unsafeStartAsync:(Lmonix/eval/Task;Lmonix/execution/Scheduler;Lmonix/execution/cancelables/StackedCancelable;Lmonix/eval/Callback;)V
      77: return

  public void cancel();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #40                 // Field isActive:Z
       5: aload_0
       6: getfield      #57                 // Field conn:Lmonix/execution/cancelables/StackedCancelable;
       9: invokevirtual #83                 // Method monix/execution/cancelables/StackedCancelable.cancel:()V
      12: return

  public monix.eval.Task$$anon$30$$anon$3(monix.eval.Task<A>.$anon$30);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #47                 // Field $outer:Lmonix/eval/Task$$anon$30;
      11: aload_0
      12: aload_2
      13: putfield      #86                 // Field out$1:Lorg/reactivestreams/Subscriber;
      16: aload_0
      17: invokespecial #88                 // Method java/lang/Object."<init>":()V
      20: aload_0
      21: iconst_1
      22: putfield      #40                 // Field isActive:Z
      25: aload_0
      26: getstatic     #93                 // Field monix/execution/cancelables/StackedCancelable$.MODULE$:Lmonix/execution/cancelables/StackedCancelable$;
      29: invokevirtual #97                 // Method monix/execution/cancelables/StackedCancelable$.apply:()Lmonix/execution/cancelables/StackedCancelable;
      32: putfield      #57                 // Field conn:Lmonix/execution/cancelables/StackedCancelable;
      35: return
}
