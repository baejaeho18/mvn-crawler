Compiled from "Task.scala"
public final class monix.eval.Task$$anonfun$chooseFirstOf$1$$anon$13 implements monix.eval.Callback<A> {
  private final monix.execution.Scheduler s$7;

  private final scala.concurrent.Promise pa$1;

  private final scala.concurrent.Promise pb$1;

  private final monix.execution.atomic.AtomicBoolean isActive$1;

  private final monix.execution.cancelables.StackedCancelable connB$1;

  private final monix.execution.cancelables.StackedCancelable conn$12;

  private final monix.eval.Callback cb$13;

  public void apply(scala.util.Try<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #29                 // Method monix/eval/Callback$class.apply:(Lmonix/eval/Callback;Lscala/util/Try;)V
       5: return

  public void apply(monix.eval.Coeval<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #37                 // Method monix/eval/Callback$class.apply:(Lmonix/eval/Callback;Lmonix/eval/Coeval;)V
       5: return

  public boolean apply$mcZD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #45                 // Method scala/Function1$class.apply$mcZD$sp:(Lscala/Function1;D)Z
       5: ireturn

  public double apply$mcDD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #52                 // Method scala/Function1$class.apply$mcDD$sp:(Lscala/Function1;D)D
       5: dreturn

  public float apply$mcFD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #57                 // Method scala/Function1$class.apply$mcFD$sp:(Lscala/Function1;D)F
       5: freturn

  public int apply$mcID$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #62                 // Method scala/Function1$class.apply$mcID$sp:(Lscala/Function1;D)I
       5: ireturn

  public long apply$mcJD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #67                 // Method scala/Function1$class.apply$mcJD$sp:(Lscala/Function1;D)J
       5: lreturn

  public void apply$mcVD$sp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #72                 // Method scala/Function1$class.apply$mcVD$sp:(Lscala/Function1;D)V
       5: return

  public boolean apply$mcZF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #77                 // Method scala/Function1$class.apply$mcZF$sp:(Lscala/Function1;F)Z
       5: ireturn

  public double apply$mcDF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #83                 // Method scala/Function1$class.apply$mcDF$sp:(Lscala/Function1;F)D
       5: dreturn

  public float apply$mcFF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #88                 // Method scala/Function1$class.apply$mcFF$sp:(Lscala/Function1;F)F
       5: freturn

  public int apply$mcIF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #93                 // Method scala/Function1$class.apply$mcIF$sp:(Lscala/Function1;F)I
       5: ireturn

  public long apply$mcJF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #98                 // Method scala/Function1$class.apply$mcJF$sp:(Lscala/Function1;F)J
       5: lreturn

  public void apply$mcVF$sp(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #103                // Method scala/Function1$class.apply$mcVF$sp:(Lscala/Function1;F)V
       5: return

  public boolean apply$mcZI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #108                // Method scala/Function1$class.apply$mcZI$sp:(Lscala/Function1;I)Z
       5: ireturn

  public double apply$mcDI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #114                // Method scala/Function1$class.apply$mcDI$sp:(Lscala/Function1;I)D
       5: dreturn

  public float apply$mcFI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #119                // Method scala/Function1$class.apply$mcFI$sp:(Lscala/Function1;I)F
       5: freturn

  public int apply$mcII$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #124                // Method scala/Function1$class.apply$mcII$sp:(Lscala/Function1;I)I
       5: ireturn

  public long apply$mcJI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #129                // Method scala/Function1$class.apply$mcJI$sp:(Lscala/Function1;I)J
       5: lreturn

  public void apply$mcVI$sp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #134                // Method scala/Function1$class.apply$mcVI$sp:(Lscala/Function1;I)V
       5: return

  public boolean apply$mcZJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #139                // Method scala/Function1$class.apply$mcZJ$sp:(Lscala/Function1;J)Z
       5: ireturn

  public double apply$mcDJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #145                // Method scala/Function1$class.apply$mcDJ$sp:(Lscala/Function1;J)D
       5: dreturn

  public float apply$mcFJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #150                // Method scala/Function1$class.apply$mcFJ$sp:(Lscala/Function1;J)F
       5: freturn

  public int apply$mcIJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #155                // Method scala/Function1$class.apply$mcIJ$sp:(Lscala/Function1;J)I
       5: ireturn

  public long apply$mcJJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #160                // Method scala/Function1$class.apply$mcJJ$sp:(Lscala/Function1;J)J
       5: lreturn

  public void apply$mcVJ$sp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #165                // Method scala/Function1$class.apply$mcVJ$sp:(Lscala/Function1;J)V
       5: return

  public <A> scala.Function1<A, scala.runtime.BoxedUnit> compose(scala.Function1<A, scala.util.Try<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #170                // Method scala/Function1$class.compose:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public <A> scala.Function1<scala.util.Try<A>, A> andThen(scala.Function1<scala.runtime.BoxedUnit, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #175                // Method scala/Function1$class.andThen:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
       5: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #180                // Method scala/Function1$class.toString:(Lscala/Function1;)Ljava/lang/String;
       4: areturn

  public void onSuccess(A);
    Code:
       0: aload_0
       1: getfield      #184                // Field isActive$1:Lmonix/execution/atomic/AtomicBoolean;
       4: iconst_0
       5: invokevirtual #190                // Method monix/execution/atomic/AtomicBoolean.getAndSet:(Z)Z
       8: ifeq          80
      11: getstatic     #196                // Field monix/execution/CancelableFuture$.MODULE$:Lmonix/execution/CancelableFuture$;
      14: aload_0
      15: getfield      #198                // Field pb$1:Lscala/concurrent/Promise;
      18: invokeinterface #204,  1          // InterfaceMethod scala/concurrent/Promise.future:()Lscala/concurrent/Future;
      23: aload_0
      24: getfield      #206                // Field connB$1:Lmonix/execution/cancelables/StackedCancelable;
      27: invokevirtual #209                // Method monix/execution/CancelableFuture$.apply:(Lscala/concurrent/Future;Lmonix/execution/Cancelable;)Lmonix/execution/CancelableFuture;
      30: astore_2
      31: aload_0
      32: getfield      #211                // Field conn$12:Lmonix/execution/cancelables/StackedCancelable;
      35: invokevirtual #217                // Method monix/execution/cancelables/StackedCancelable.pop:()Lmonix/execution/Cancelable;
      38: pop
      39: getstatic     #222                // Field monix/eval/Callback$Extensions$.MODULE$:Lmonix/eval/Callback$Extensions$;
      42: getstatic     #227                // Field monix/eval/Callback$.MODULE$:Lmonix/eval/Callback$;
      45: aload_0
      46: getfield      #229                // Field cb$13:Lmonix/eval/Callback;
      49: invokevirtual #233                // Method monix/eval/Callback$.Extensions:(Lmonix/eval/Callback;)Lmonix/eval/Callback;
      52: getstatic     #238                // Field scala/package$.MODULE$:Lscala/package$;
      55: invokevirtual #242                // Method scala/package$.Left:()Lscala/util/Left$;
      58: new           #244                // class scala/Tuple2
      61: dup
      62: aload_1
      63: aload_2
      64: invokespecial #248                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      67: invokevirtual #253                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
      70: aload_0
      71: getfield      #255                // Field s$7:Lmonix/execution/Scheduler;
      74: invokevirtual #259                // Method monix/eval/Callback$Extensions$.asyncOnSuccess$extension:(Lmonix/eval/Callback;Ljava/lang/Object;Lmonix/execution/Scheduler;)V
      77: goto          91
      80: aload_0
      81: getfield      #261                // Field pa$1:Lscala/concurrent/Promise;
      84: aload_1
      85: invokeinterface #265,  2          // InterfaceMethod scala/concurrent/Promise.success:(Ljava/lang/Object;)Lscala/concurrent/Promise;
      90: pop
      91: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #184                // Field isActive$1:Lmonix/execution/atomic/AtomicBoolean;
       4: iconst_0
       5: invokevirtual #190                // Method monix/execution/atomic/AtomicBoolean.getAndSet:(Z)Z
       8: ifeq          50
      11: aload_0
      12: getfield      #211                // Field conn$12:Lmonix/execution/cancelables/StackedCancelable;
      15: invokevirtual #217                // Method monix/execution/cancelables/StackedCancelable.pop:()Lmonix/execution/Cancelable;
      18: pop
      19: aload_0
      20: getfield      #206                // Field connB$1:Lmonix/execution/cancelables/StackedCancelable;
      23: invokevirtual #275                // Method monix/execution/cancelables/StackedCancelable.cancel:()V
      26: getstatic     #222                // Field monix/eval/Callback$Extensions$.MODULE$:Lmonix/eval/Callback$Extensions$;
      29: getstatic     #227                // Field monix/eval/Callback$.MODULE$:Lmonix/eval/Callback$;
      32: aload_0
      33: getfield      #229                // Field cb$13:Lmonix/eval/Callback;
      36: invokevirtual #233                // Method monix/eval/Callback$.Extensions:(Lmonix/eval/Callback;)Lmonix/eval/Callback;
      39: aload_1
      40: aload_0
      41: getfield      #255                // Field s$7:Lmonix/execution/Scheduler;
      44: invokevirtual #279                // Method monix/eval/Callback$Extensions$.asyncOnError$extension:(Lmonix/eval/Callback;Ljava/lang/Throwable;Lmonix/execution/Scheduler;)V
      47: goto          61
      50: aload_0
      51: getfield      #261                // Field pa$1:Lscala/concurrent/Promise;
      54: aload_1
      55: invokeinterface #283,  2          // InterfaceMethod scala/concurrent/Promise.failure:(Ljava/lang/Throwable;)Lscala/concurrent/Promise;
      60: pop
      61: return

  public java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #288                // class scala/util/Try
       5: invokevirtual #290                // Method apply:(Lscala/util/Try;)V
       8: getstatic     #296                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      11: areturn

  public monix.eval.Task$$anonfun$chooseFirstOf$1$$anon$13(monix.eval.Task$$anonfun$chooseFirstOf$1, monix.execution.Scheduler, scala.concurrent.Promise, scala.concurrent.Promise, monix.execution.atomic.AtomicBoolean, monix.execution.cancelables.StackedCancelable, monix.execution.cancelables.StackedCancelable, monix.eval.Callback);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #255                // Field s$7:Lmonix/execution/Scheduler;
       5: aload_0
       6: aload_3
       7: putfield      #261                // Field pa$1:Lscala/concurrent/Promise;
      10: aload_0
      11: aload         4
      13: putfield      #198                // Field pb$1:Lscala/concurrent/Promise;
      16: aload_0
      17: aload         5
      19: putfield      #184                // Field isActive$1:Lmonix/execution/atomic/AtomicBoolean;
      22: aload_0
      23: aload         6
      25: putfield      #206                // Field connB$1:Lmonix/execution/cancelables/StackedCancelable;
      28: aload_0
      29: aload         7
      31: putfield      #211                // Field conn$12:Lmonix/execution/cancelables/StackedCancelable;
      34: aload_0
      35: aload         8
      37: putfield      #229                // Field cb$13:Lmonix/eval/Callback;
      40: aload_0
      41: invokespecial #299                // Method java/lang/Object."<init>":()V
      44: aload_0
      45: invokestatic  #303                // Method scala/Function1$class.$init$:(Lscala/Function1;)V
      48: aload_0
      49: invokestatic  #306                // Method monix/eval/Callback$class.$init$:(Lmonix/eval/Callback;)V
      52: return
}
