Compiled from "Task.scala"
public abstract class monix.eval.Task<A> implements scala.Serializable {
  public static void monix$eval$TaskInstances$_setter_$nondeterminism_$eq(monix.eval.TaskInstances$TypeClassInstances);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: invokevirtual #21                 // Method monix/eval/Task$.monix$eval$TaskInstances$_setter_$nondeterminism_$eq:(Lmonix/eval/TaskInstances$TypeClassInstances;)V
       7: return

  public static monix.eval.TaskInstances$TypeClassInstances nondeterminism();
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: invokevirtual #25                 // Method monix/eval/Task$.nondeterminism:()Lmonix/eval/TaskInstances$TypeClassInstances;
       6: areturn

  public static monix.eval.TaskInstances$TypeClassInstances typeClassInstances();
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: invokevirtual #28                 // Method monix/eval/Task$.typeClassInstances:()Lmonix/eval/TaskInstances$TypeClassInstances;
       6: areturn

  public static void runLoop(monix.execution.Scheduler, monix.execution.schedulers.ExecutionModel, monix.execution.cancelables.StackedCancelable, monix.eval.Task<java.lang.Object>, monix.eval.Callback<java.lang.Object>, scala.collection.immutable.List<scala.Function1<java.lang.Object, monix.eval.Task<java.lang.Object>>>, int);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: iload         6
      13: invokevirtual #32                 // Method monix/eval/Task$.runLoop:(Lmonix/execution/Scheduler;Lmonix/execution/schedulers/ExecutionModel;Lmonix/execution/cancelables/StackedCancelable;Lmonix/eval/Task;Lmonix/eval/Callback;Lscala/collection/immutable/List;I)V
      16: return

  public static <A> void unsafeStartNow(monix.eval.Task<A>, monix.execution.Scheduler, monix.execution.cancelables.StackedCancelable, monix.eval.Callback<A>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #36                 // Method monix/eval/Task$.unsafeStartNow:(Lmonix/eval/Task;Lmonix/execution/Scheduler;Lmonix/execution/cancelables/StackedCancelable;Lmonix/eval/Callback;)V
      10: return

  public static <A> void unsafeStartAsync(monix.eval.Task<A>, monix.execution.Scheduler, monix.execution.cancelables.StackedCancelable, monix.eval.Callback<A>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #39                 // Method monix/eval/Task$.unsafeStartAsync:(Lmonix/eval/Task;Lmonix/execution/Scheduler;Lmonix/execution/cancelables/StackedCancelable;Lmonix/eval/Callback;)V
      10: return

  public static <A1, A2, A3, A4, A5, A6, R> monix.eval.Task<R> zipWith6(monix.eval.Task<A1>, monix.eval.Task<A2>, monix.eval.Task<A3>, monix.eval.Task<A4>, monix.eval.Task<A5>, monix.eval.Task<A6>, scala.Function6<A1, A2, A3, A4, A5, A6, R>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: invokevirtual #43                 // Method monix/eval/Task$.zipWith6:(Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lscala/Function6;)Lmonix/eval/Task;
      16: areturn

  public static <A1, A2, A3, A4, A5, R> monix.eval.Task<R> zipWith5(monix.eval.Task<A1>, monix.eval.Task<A2>, monix.eval.Task<A3>, monix.eval.Task<A4>, monix.eval.Task<A5>, scala.Function5<A1, A2, A3, A4, A5, R>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: invokevirtual #47                 // Method monix/eval/Task$.zipWith5:(Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lscala/Function5;)Lmonix/eval/Task;
      14: areturn

  public static <A1, A2, A3, A4, R> monix.eval.Task<R> zipWith4(monix.eval.Task<A1>, monix.eval.Task<A2>, monix.eval.Task<A3>, monix.eval.Task<A4>, scala.Function4<A1, A2, A3, A4, R>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #51                 // Method monix/eval/Task$.zipWith4:(Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lscala/Function4;)Lmonix/eval/Task;
      12: areturn

  public static <A1, A2, A3, R> monix.eval.Task<R> zipWith3(monix.eval.Task<A1>, monix.eval.Task<A2>, monix.eval.Task<A3>, scala.Function3<A1, A2, A3, R>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #55                 // Method monix/eval/Task$.zipWith3:(Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lscala/Function3;)Lmonix/eval/Task;
      10: areturn

  public static <A1, A2, R> monix.eval.Task<R> zipWith2(monix.eval.Task<A1>, monix.eval.Task<A2>, scala.Function2<A1, A2, R>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #59                 // Method monix/eval/Task$.zipWith2:(Lmonix/eval/Task;Lmonix/eval/Task;Lscala/Function2;)Lmonix/eval/Task;
       9: areturn

  public static <A1, A2, A3, A4, A5, A6, R> monix.eval.Task<R> zipMap6(monix.eval.Task<A1>, monix.eval.Task<A2>, monix.eval.Task<A3>, monix.eval.Task<A4>, monix.eval.Task<A5>, monix.eval.Task<A6>, scala.Function6<A1, A2, A3, A4, A5, A6, R>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: invokevirtual #62                 // Method monix/eval/Task$.zipMap6:(Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lscala/Function6;)Lmonix/eval/Task;
      16: areturn

  public static <A1, A2, A3, A4, A5, R> monix.eval.Task<R> zipMap5(monix.eval.Task<A1>, monix.eval.Task<A2>, monix.eval.Task<A3>, monix.eval.Task<A4>, monix.eval.Task<A5>, scala.Function5<A1, A2, A3, A4, A5, R>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: invokevirtual #65                 // Method monix/eval/Task$.zipMap5:(Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lscala/Function5;)Lmonix/eval/Task;
      14: areturn

  public static <A1, A2, A3, A4, R> monix.eval.Task<R> zipMap4(monix.eval.Task<A1>, monix.eval.Task<A2>, monix.eval.Task<A3>, monix.eval.Task<A4>, scala.Function4<A1, A2, A3, A4, R>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #68                 // Method monix/eval/Task$.zipMap4:(Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lscala/Function4;)Lmonix/eval/Task;
      12: areturn

  public static <A1, A2, A3, R> monix.eval.Task<R> zipMap3(monix.eval.Task<A1>, monix.eval.Task<A2>, monix.eval.Task<A3>, scala.Function3<A1, A2, A3, R>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #71                 // Method monix/eval/Task$.zipMap3:(Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lscala/Function3;)Lmonix/eval/Task;
      10: areturn

  public static <A1, A2, A3, A4, A5, A6> monix.eval.Task<scala.Tuple6<A1, A2, A3, A4, A5, A6>> zip6(monix.eval.Task<A1>, monix.eval.Task<A2>, monix.eval.Task<A3>, monix.eval.Task<A4>, monix.eval.Task<A5>, monix.eval.Task<A6>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: invokevirtual #75                 // Method monix/eval/Task$.zip6:(Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;)Lmonix/eval/Task;
      14: areturn

  public static <A1, A2, A3, A4, A5> monix.eval.Task<scala.Tuple5<A1, A2, A3, A4, A5>> zip5(monix.eval.Task<A1>, monix.eval.Task<A2>, monix.eval.Task<A3>, monix.eval.Task<A4>, monix.eval.Task<A5>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #79                 // Method monix/eval/Task$.zip5:(Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;)Lmonix/eval/Task;
      12: areturn

  public static <A1, A2, A3, A4> monix.eval.Task<scala.Tuple4<A1, A2, A3, A4>> zip4(monix.eval.Task<A1>, monix.eval.Task<A2>, monix.eval.Task<A3>, monix.eval.Task<A4>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #83                 // Method monix/eval/Task$.zip4:(Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;)Lmonix/eval/Task;
      10: areturn

  public static <A1, A2, A3> monix.eval.Task<scala.Tuple3<A1, A2, A3>> zip3(monix.eval.Task<A1>, monix.eval.Task<A2>, monix.eval.Task<A3>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #87                 // Method monix/eval/Task$.zip3:(Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;)Lmonix/eval/Task;
       9: areturn

  public static <A1, A2, R> monix.eval.Task<R> zipMap2(monix.eval.Task<A1>, monix.eval.Task<A2>, scala.Function2<A1, A2, R>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #90                 // Method monix/eval/Task$.zipMap2:(Lmonix/eval/Task;Lmonix/eval/Task;Lscala/Function2;)Lmonix/eval/Task;
       9: areturn

  public static <A1, A2, R> monix.eval.Task<scala.Tuple2<A1, A2>> zip2(monix.eval.Task<A1>, monix.eval.Task<A2>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: aload_1
       5: invokevirtual #94                 // Method monix/eval/Task$.zip2:(Lmonix/eval/Task;Lmonix/eval/Task;)Lmonix/eval/Task;
       8: areturn

  public static <A> monix.eval.Task<scala.collection.immutable.List<A>> zipList(scala.collection.Seq<monix.eval.Task<A>>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: invokevirtual #98                 // Method monix/eval/Task$.zipList:(Lscala/collection/Seq;)Lmonix/eval/Task;
       7: areturn

  public static <A1, A2, R> monix.eval.Task<R> mapBoth(monix.eval.Task<A1>, monix.eval.Task<A2>, scala.Function2<A1, A2, R>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #101                // Method monix/eval/Task$.mapBoth:(Lmonix/eval/Task;Lmonix/eval/Task;Lscala/Function2;)Lmonix/eval/Task;
       9: areturn

  public static <A, M extends scala.collection.TraversableOnce<java.lang.Object>> monix.eval.Task<M> gatherUnordered(M, scala.collection.generic.CanBuildFrom<M, A, M>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: aload_1
       5: invokevirtual #105                // Method monix/eval/Task$.gatherUnordered:(Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)Lmonix/eval/Task;
       8: areturn

  public static <A, M extends scala.collection.TraversableOnce<java.lang.Object>> monix.eval.Task<M> gather(M, scala.collection.generic.CanBuildFrom<M, A, M>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: aload_1
       5: invokevirtual #108                // Method monix/eval/Task$.gather:(Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)Lmonix/eval/Task;
       8: areturn

  public static <A, B, M extends scala.collection.TraversableOnce<java.lang.Object>> monix.eval.Task<M> traverse(M, scala.Function1<A, monix.eval.Task<B>>, scala.collection.generic.CanBuildFrom<M, B, M>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #112                // Method monix/eval/Task$.traverse:(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Lmonix/eval/Task;
       9: areturn

  public static <A, M extends scala.collection.TraversableOnce<java.lang.Object>> monix.eval.Task<M> sequence(M, scala.collection.generic.CanBuildFrom<M, A, M>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: aload_1
       5: invokevirtual #115                // Method monix/eval/Task$.sequence:(Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)Lmonix/eval/Task;
       8: areturn

  public static <A> monix.eval.Task<A> chooseFirstOfList(scala.collection.TraversableOnce<monix.eval.Task<A>>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: invokevirtual #119                // Method monix/eval/Task$.chooseFirstOfList:(Lscala/collection/TraversableOnce;)Lmonix/eval/Task;
       7: areturn

  public static <A, B> monix.eval.Task<scala.util.Either<scala.Tuple2<A, monix.execution.CancelableFuture<B>>, scala.Tuple2<monix.execution.CancelableFuture<A>, B>>> chooseFirstOf(monix.eval.Task<A>, monix.eval.Task<B>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: aload_1
       5: invokevirtual #122                // Method monix/eval/Task$.chooseFirstOf:(Lmonix/eval/Task;Lmonix/eval/Task;)Lmonix/eval/Task;
       8: areturn

  public static <A> monix.eval.Task<A> fromFuture(scala.concurrent.Future<A>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: invokevirtual #126                // Method monix/eval/Task$.fromFuture:(Lscala/concurrent/Future;)Lmonix/eval/Task;
       7: areturn

  public static <A> monix.eval.Task<A> unsafeCreate(scala.Function3<monix.execution.Scheduler, monix.execution.cancelables.StackedCancelable, monix.eval.Callback<A>, scala.runtime.BoxedUnit>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: invokevirtual #130                // Method monix/eval/Task$.unsafeCreate:(Lscala/Function3;)Lmonix/eval/Task;
       7: areturn

  public static <A> monix.eval.Task<A> create(scala.Function2<monix.execution.Scheduler, monix.eval.Callback<A>, monix.execution.Cancelable>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: invokevirtual #134                // Method monix/eval/Task$.create:(Lscala/Function2;)Lmonix/eval/Task;
       7: areturn

  public static <A> monix.eval.Task<A> async(scala.Function2<monix.execution.Scheduler, monix.eval.Callback<A>, monix.execution.Cancelable>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: invokevirtual #137                // Method monix/eval/Task$.async:(Lscala/Function2;)Lmonix/eval/Task;
       7: areturn

  public static <A> monix.eval.Task<A> fork(monix.eval.Task<A>, monix.execution.Scheduler);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: aload_1
       5: invokevirtual #141                // Method monix/eval/Task$.fork:(Lmonix/eval/Task;Lmonix/execution/Scheduler;)Lmonix/eval/Task;
       8: areturn

  public static <A> monix.eval.Task<A> fork(monix.eval.Task<A>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: invokevirtual #144                // Method monix/eval/Task$.fork:(Lmonix/eval/Task;)Lmonix/eval/Task;
       7: areturn

  public static monix.eval.Task<scala.runtime.BoxedUnit> unit();
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: invokevirtual #148                // Method monix/eval/Task$.unit:()Lmonix/eval/Task;
       6: areturn

  public static <A> monix.eval.Task<A> fromTry(scala.util.Try<A>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: invokevirtual #152                // Method monix/eval/Task$.fromTry:(Lscala/util/Try;)Lmonix/eval/Task;
       7: areturn

  public static <A> monix.eval.Task<A> never();
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: invokevirtual #155                // Method monix/eval/Task$.never:()Lmonix/eval/Task;
       6: areturn

  public static <A> monix.eval.Task<A> evalAlways(scala.Function0<A>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: invokevirtual #159                // Method monix/eval/Task$.evalAlways:(Lscala/Function0;)Lmonix/eval/Task;
       7: areturn

  public static <A> monix.eval.Task<A> delay(scala.Function0<A>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: invokevirtual #162                // Method monix/eval/Task$.delay:(Lscala/Function0;)Lmonix/eval/Task;
       7: areturn

  public static <A> monix.eval.Task<A> eval(scala.Function0<A>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: invokevirtual #165                // Method monix/eval/Task$.eval:(Lscala/Function0;)Lmonix/eval/Task;
       7: areturn

  public static <A> monix.eval.Task<A> evalOnce(scala.Function0<A>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: invokevirtual #168                // Method monix/eval/Task$.evalOnce:(Lscala/Function0;)Lmonix/eval/Task;
       7: areturn

  public static <A> monix.eval.Task<A> suspend(scala.Function0<monix.eval.Task<A>>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: invokevirtual #171                // Method monix/eval/Task$.suspend:(Lscala/Function0;)Lmonix/eval/Task;
       7: areturn

  public static <A> monix.eval.Task<A> defer(scala.Function0<monix.eval.Task<A>>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: invokevirtual #174                // Method monix/eval/Task$.defer:(Lscala/Function0;)Lmonix/eval/Task;
       7: areturn

  public static <A> monix.eval.Task<A> raiseError(java.lang.Throwable);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: invokevirtual #178                // Method monix/eval/Task$.raiseError:(Ljava/lang/Throwable;)Lmonix/eval/Task;
       7: areturn

  public static <A> monix.eval.Task<A> pure(A);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: invokevirtual #182                // Method monix/eval/Task$.pure:(Ljava/lang/Object;)Lmonix/eval/Task;
       7: areturn

  public static <A> monix.eval.Task<A> now(A);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: invokevirtual #185                // Method monix/eval/Task$.now:(Ljava/lang/Object;)Lmonix/eval/Task;
       7: areturn

  public static <A> monix.eval.Task<A> apply(scala.Function0<A>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: invokevirtual #188                // Method monix/eval/Task$.apply:(Lscala/Function0;)Lmonix/eval/Task;
       7: areturn

  public monix.execution.Cancelable runAsync(monix.eval.Callback<A>, monix.execution.Scheduler);
    Code:
       0: getstatic     #195                // Field monix/execution/cancelables/StackedCancelable$.MODULE$:Lmonix/execution/cancelables/StackedCancelable$;
       3: invokevirtual #198                // Method monix/execution/cancelables/StackedCancelable$.apply:()Lmonix/execution/cancelables/StackedCancelable;
       6: astore_3
       7: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
      10: aload_0
      11: aload_2
      12: aload_3
      13: getstatic     #203                // Field monix/eval/Callback$.MODULE$:Lmonix/eval/Callback$;
      16: aload_1
      17: aload_2
      18: invokevirtual #207                // Method monix/eval/Callback$.safe:(Lmonix/eval/Callback;Lmonix/execution/UncaughtExceptionReporter;)Lmonix/eval/Callback;
      21: invokevirtual #36                 // Method monix/eval/Task$.unsafeStartNow:(Lmonix/eval/Task;Lmonix/execution/Scheduler;Lmonix/execution/cancelables/StackedCancelable;Lmonix/eval/Callback;)V
      24: aload_3
      25: areturn

  public monix.execution.Cancelable runAsync(scala.Function1<scala.util.Try<A>, scala.runtime.BoxedUnit>, monix.execution.Scheduler);
    Code:
       0: aload_0
       1: new           #218                // class monix/eval/Task$$anon$4
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #222                // Method monix/eval/Task$$anon$4."<init>":(Lmonix/eval/Task;Lscala/Function1;)V
      10: aload_2
      11: invokevirtual #224                // Method runAsync:(Lmonix/eval/Callback;Lmonix/execution/Scheduler;)Lmonix/execution/Cancelable;
      14: areturn

  public monix.execution.CancelableFuture<A> runAsync(monix.execution.Scheduler);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_1
       4: aload_0
       5: getstatic     #232                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       8: invokevirtual #236                // Method monix/eval/Task$.monix$eval$Task$$startTrampolineForFuture:(Lmonix/execution/Scheduler;Lmonix/eval/Task;Lscala/collection/immutable/List;)Lmonix/execution/CancelableFuture;
      11: areturn

  public monix.eval.Coeval<scala.util.Either<monix.execution.CancelableFuture<A>, A>> coeval(monix.execution.Scheduler);
    Code:
       0: getstatic     #243                // Field monix/eval/Coeval$.MODULE$:Lmonix/eval/Coeval$;
       3: new           #245                // class monix/eval/Task$$anonfun$coeval$1
       6: dup
       7: aload_0
       8: aload_1
       9: invokespecial #248                // Method monix/eval/Task$$anonfun$coeval$1."<init>":(Lmonix/eval/Task;Lmonix/execution/Scheduler;)V
      12: invokevirtual #251                // Method monix/eval/Coeval$.eval:(Lscala/Function0;)Lmonix/eval/Coeval;
      15: areturn

  public <B> monix.eval.Task<B> flatMap(scala.Function1<A, monix.eval.Task<B>>);
    Code:
       0: aload_0
       1: astore_2
       2: aload_2
       3: instanceof    #255                // class monix/eval/Task$Delay
       6: ifeq          43
       9: aload_2
      10: checkcast     #255                // class monix/eval/Task$Delay
      13: astore_3
      14: aload_3
      15: invokevirtual #258                // Method monix/eval/Task$Delay.coeval:()Lmonix/eval/Coeval;
      18: astore        4
      20: new           #260                // class monix/eval/Task$Suspend
      23: dup
      24: new           #262                // class monix/eval/Task$$anonfun$flatMap$1
      27: dup
      28: aload_0
      29: aload_1
      30: aload         4
      32: invokespecial #265                // Method monix/eval/Task$$anonfun$flatMap$1."<init>":(Lmonix/eval/Task;Lscala/Function1;Lmonix/eval/Coeval;)V
      35: invokespecial #268                // Method monix/eval/Task$Suspend."<init>":(Lscala/Function0;)V
      38: astore        5
      40: goto          254
      43: aload_2
      44: instanceof    #260                // class monix/eval/Task$Suspend
      47: ifeq          78
      50: aload_2
      51: checkcast     #260                // class monix/eval/Task$Suspend
      54: astore        6
      56: aload         6
      58: invokevirtual #272                // Method monix/eval/Task$Suspend.thunk:()Lscala/Function0;
      61: astore        7
      63: new           #274                // class monix/eval/Task$BindSuspend
      66: dup
      67: aload         7
      69: aload_1
      70: invokespecial #277                // Method monix/eval/Task$BindSuspend."<init>":(Lscala/Function0;Lscala/Function1;)V
      73: astore        5
      75: goto          254
      78: aload_2
      79: instanceof    #279                // class monix/eval/Task$MemoizeSuspend
      82: ifeq          118
      85: aload_2
      86: checkcast     #279                // class monix/eval/Task$MemoizeSuspend
      89: astore        8
      91: aload         8
      93: astore        9
      95: new           #274                // class monix/eval/Task$BindSuspend
      98: dup
      99: new           #281                // class monix/eval/Task$$anonfun$flatMap$2
     102: dup
     103: aload_0
     104: aload         9
     106: invokespecial #284                // Method monix/eval/Task$$anonfun$flatMap$2."<init>":(Lmonix/eval/Task;Lmonix/eval/Task$MemoizeSuspend;)V
     109: aload_1
     110: invokespecial #277                // Method monix/eval/Task$BindSuspend."<init>":(Lscala/Function0;Lscala/Function1;)V
     113: astore        5
     115: goto          254
     118: aload_2
     119: instanceof    #274                // class monix/eval/Task$BindSuspend
     122: ifeq          170
     125: aload_2
     126: checkcast     #274                // class monix/eval/Task$BindSuspend
     129: astore        10
     131: aload         10
     133: invokevirtual #285                // Method monix/eval/Task$BindSuspend.thunk:()Lscala/Function0;
     136: astore        11
     138: aload         10
     140: invokevirtual #288                // Method monix/eval/Task$BindSuspend.f:()Lscala/Function1;
     143: astore        12
     145: new           #260                // class monix/eval/Task$Suspend
     148: dup
     149: new           #290                // class monix/eval/Task$$anonfun$flatMap$3
     152: dup
     153: aload_0
     154: aload_1
     155: aload         11
     157: aload         12
     159: invokespecial #293                // Method monix/eval/Task$$anonfun$flatMap$3."<init>":(Lmonix/eval/Task;Lscala/Function1;Lscala/Function0;Lscala/Function1;)V
     162: invokespecial #268                // Method monix/eval/Task$Suspend."<init>":(Lscala/Function0;)V
     165: astore        5
     167: goto          254
     170: aload_2
     171: instanceof    #295                // class monix/eval/Task$Async
     174: ifeq          205
     177: aload_2
     178: checkcast     #295                // class monix/eval/Task$Async
     181: astore        13
     183: aload         13
     185: invokevirtual #299                // Method monix/eval/Task$Async.onFinish:()Lscala/Function3;
     188: astore        14
     190: new           #301                // class monix/eval/Task$BindAsync
     193: dup
     194: aload         14
     196: aload_1
     197: invokespecial #304                // Method monix/eval/Task$BindAsync."<init>":(Lscala/Function3;Lscala/Function1;)V
     200: astore        5
     202: goto          254
     205: aload_2
     206: instanceof    #301                // class monix/eval/Task$BindAsync
     209: ifeq          257
     212: aload_2
     213: checkcast     #301                // class monix/eval/Task$BindAsync
     216: astore        15
     218: aload         15
     220: invokevirtual #305                // Method monix/eval/Task$BindAsync.onFinish:()Lscala/Function3;
     223: astore        16
     225: aload         15
     227: invokevirtual #306                // Method monix/eval/Task$BindAsync.f:()Lscala/Function1;
     230: astore        17
     232: new           #260                // class monix/eval/Task$Suspend
     235: dup
     236: new           #308                // class monix/eval/Task$$anonfun$flatMap$4
     239: dup
     240: aload_0
     241: aload_1
     242: aload         16
     244: aload         17
     246: invokespecial #311                // Method monix/eval/Task$$anonfun$flatMap$4."<init>":(Lmonix/eval/Task;Lscala/Function1;Lscala/Function3;Lscala/Function1;)V
     249: invokespecial #268                // Method monix/eval/Task$Suspend."<init>":(Lscala/Function0;)V
     252: astore        5
     254: aload         5
     256: areturn
     257: new           #313                // class scala/MatchError
     260: dup
     261: aload_2
     262: invokespecial #316                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     265: athrow

  public <B> monix.eval.Task<B> flatten(scala.Predef$$less$colon$less<A, monix.eval.Task<B>>);
    Code:
       0: aload_0
       1: new           #327                // class monix/eval/Task$$anonfun$flatten$1
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #330                // Method monix/eval/Task$$anonfun$flatten$1."<init>":(Lmonix/eval/Task;Lscala/Predef$$less$colon$less;)V
      10: invokevirtual #332                // Method flatMap:(Lscala/Function1;)Lmonix/eval/Task;
      13: areturn

  public monix.eval.Task<A> delayExecution(scala.concurrent.duration.FiniteDuration);
    Code:
       0: new           #295                // class monix/eval/Task$Async
       3: dup
       4: new           #338                // class monix/eval/Task$$anonfun$delayExecution$1
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #341                // Method monix/eval/Task$$anonfun$delayExecution$1."<init>":(Lmonix/eval/Task;Lscala/concurrent/duration/FiniteDuration;)V
      13: invokespecial #344                // Method monix/eval/Task$Async."<init>":(Lscala/Function3;)V
      16: areturn

  public monix.eval.Task<A> delayExecutionWith(monix.eval.Task<java.lang.Object>);
    Code:
       0: new           #295                // class monix/eval/Task$Async
       3: dup
       4: new           #349                // class monix/eval/Task$$anonfun$delayExecutionWith$1
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #352                // Method monix/eval/Task$$anonfun$delayExecutionWith$1."<init>":(Lmonix/eval/Task;Lmonix/eval/Task;)V
      13: invokespecial #344                // Method monix/eval/Task$Async."<init>":(Lscala/Function3;)V
      16: areturn

  public monix.eval.Task<A> delayResult(scala.concurrent.duration.FiniteDuration);
    Code:
       0: new           #295                // class monix/eval/Task$Async
       3: dup
       4: new           #356                // class monix/eval/Task$$anonfun$delayResult$1
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #357                // Method monix/eval/Task$$anonfun$delayResult$1."<init>":(Lmonix/eval/Task;Lscala/concurrent/duration/FiniteDuration;)V
      13: invokespecial #344                // Method monix/eval/Task$Async."<init>":(Lscala/Function3;)V
      16: areturn

  public <B> monix.eval.Task<A> delayResultBySelector(scala.Function1<A, monix.eval.Task<B>>);
    Code:
       0: new           #295                // class monix/eval/Task$Async
       3: dup
       4: new           #360                // class monix/eval/Task$$anonfun$delayResultBySelector$1
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #361                // Method monix/eval/Task$$anonfun$delayResultBySelector$1."<init>":(Lmonix/eval/Task;Lscala/Function1;)V
      13: invokespecial #344                // Method monix/eval/Task$Async."<init>":(Lscala/Function3;)V
      16: areturn

  public monix.eval.Task<A> executeOn(monix.execution.Scheduler);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: aload_1
       5: invokevirtual #141                // Method monix/eval/Task$.fork:(Lmonix/eval/Task;Lmonix/execution/Scheduler;)Lmonix/eval/Task;
       8: areturn

  public monix.eval.Task<java.lang.Throwable> failed();
    Code:
       0: aload_0
       1: invokevirtual #368                // Method materializeAttempt:()Lmonix/eval/Task;
       4: new           #370                // class monix/eval/Task$$anonfun$failed$1
       7: dup
       8: aload_0
       9: invokespecial #373                // Method monix/eval/Task$$anonfun$failed$1."<init>":(Lmonix/eval/Task;)V
      12: invokevirtual #332                // Method flatMap:(Lscala/Function1;)Lmonix/eval/Task;
      15: areturn

  public <B> monix.eval.Task<B> map(scala.Function1<A, B>);
    Code:
       0: aload_0
       1: new           #376                // class monix/eval/Task$$anonfun$map$1
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #377                // Method monix/eval/Task$$anonfun$map$1."<init>":(Lmonix/eval/Task;Lscala/Function1;)V
      10: invokevirtual #332                // Method flatMap:(Lscala/Function1;)Lmonix/eval/Task;
      13: areturn

  public monix.eval.Task<A> doOnFinish(scala.Function1<scala.Option<java.lang.Throwable>, monix.eval.Task<scala.runtime.BoxedUnit>>);
    Code:
       0: aload_0
       1: invokevirtual #368                // Method materializeAttempt:()Lmonix/eval/Task;
       4: new           #380                // class monix/eval/Task$$anonfun$doOnFinish$1
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #381                // Method monix/eval/Task$$anonfun$doOnFinish$1."<init>":(Lmonix/eval/Task;Lscala/Function1;)V
      13: invokevirtual #332                // Method flatMap:(Lscala/Function1;)Lmonix/eval/Task;
      16: areturn

  public monix.eval.Task<scala.util.Try<A>> materialize();
    Code:
       0: aload_0
       1: invokevirtual #368                // Method materializeAttempt:()Lmonix/eval/Task;
       4: new           #384                // class monix/eval/Task$$anonfun$materialize$1
       7: dup
       8: aload_0
       9: invokespecial #385                // Method monix/eval/Task$$anonfun$materialize$1."<init>":(Lmonix/eval/Task;)V
      12: invokevirtual #387                // Method map:(Lscala/Function1;)Lmonix/eval/Task;
      15: areturn

  public monix.eval.Task<monix.eval.Coeval$Attempt<A>> materializeAttempt();
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: instanceof    #255                // class monix/eval/Task$Delay
       6: ifeq          40
       9: aload_1
      10: checkcast     #255                // class monix/eval/Task$Delay
      13: astore_2
      14: aload_2
      15: invokevirtual #258                // Method monix/eval/Task$Delay.coeval:()Lmonix/eval/Coeval;
      18: astore_3
      19: new           #260                // class monix/eval/Task$Suspend
      22: dup
      23: new           #389                // class monix/eval/Task$$anonfun$materializeAttempt$1
      26: dup
      27: aload_0
      28: aload_3
      29: invokespecial #392                // Method monix/eval/Task$$anonfun$materializeAttempt$1."<init>":(Lmonix/eval/Task;Lmonix/eval/Coeval;)V
      32: invokespecial #268                // Method monix/eval/Task$Suspend."<init>":(Lscala/Function0;)V
      35: astore        4
      37: goto          278
      40: aload_1
      41: instanceof    #260                // class monix/eval/Task$Suspend
      44: ifeq          82
      47: aload_1
      48: checkcast     #260                // class monix/eval/Task$Suspend
      51: astore        5
      53: aload         5
      55: invokevirtual #272                // Method monix/eval/Task$Suspend.thunk:()Lscala/Function0;
      58: astore        6
      60: new           #260                // class monix/eval/Task$Suspend
      63: dup
      64: new           #394                // class monix/eval/Task$$anonfun$materializeAttempt$2
      67: dup
      68: aload_0
      69: aload         6
      71: invokespecial #397                // Method monix/eval/Task$$anonfun$materializeAttempt$2."<init>":(Lmonix/eval/Task;Lscala/Function0;)V
      74: invokespecial #268                // Method monix/eval/Task$Suspend."<init>":(Lscala/Function0;)V
      77: astore        4
      79: goto          278
      82: aload_1
      83: instanceof    #279                // class monix/eval/Task$MemoizeSuspend
      86: ifeq          121
      89: aload_1
      90: checkcast     #279                // class monix/eval/Task$MemoizeSuspend
      93: astore        7
      95: aload         7
      97: astore        8
      99: new           #295                // class monix/eval/Task$Async
     102: dup
     103: new           #399                // class monix/eval/Task$$anonfun$materializeAttempt$3
     106: dup
     107: aload_0
     108: aload         8
     110: invokespecial #400                // Method monix/eval/Task$$anonfun$materializeAttempt$3."<init>":(Lmonix/eval/Task;Lmonix/eval/Task$MemoizeSuspend;)V
     113: invokespecial #344                // Method monix/eval/Task$Async."<init>":(Lscala/Function3;)V
     116: astore        4
     118: goto          278
     121: aload_1
     122: instanceof    #274                // class monix/eval/Task$BindSuspend
     125: ifeq          180
     128: aload_1
     129: checkcast     #274                // class monix/eval/Task$BindSuspend
     132: astore        9
     134: aload         9
     136: invokevirtual #285                // Method monix/eval/Task$BindSuspend.thunk:()Lscala/Function0;
     139: astore        10
     141: aload         9
     143: invokevirtual #288                // Method monix/eval/Task$BindSuspend.f:()Lscala/Function1;
     146: astore        11
     148: new           #274                // class monix/eval/Task$BindSuspend
     151: dup
     152: new           #402                // class monix/eval/Task$$anonfun$materializeAttempt$4
     155: dup
     156: aload_0
     157: aload         10
     159: invokespecial #403                // Method monix/eval/Task$$anonfun$materializeAttempt$4."<init>":(Lmonix/eval/Task;Lscala/Function0;)V
     162: new           #405                // class monix/eval/Task$$anonfun$materializeAttempt$5
     165: dup
     166: aload_0
     167: aload         11
     169: invokespecial #406                // Method monix/eval/Task$$anonfun$materializeAttempt$5."<init>":(Lmonix/eval/Task;Lscala/Function1;)V
     172: invokespecial #277                // Method monix/eval/Task$BindSuspend."<init>":(Lscala/Function0;Lscala/Function1;)V
     175: astore        4
     177: goto          278
     180: aload_1
     181: instanceof    #295                // class monix/eval/Task$Async
     184: ifeq          222
     187: aload_1
     188: checkcast     #295                // class monix/eval/Task$Async
     191: astore        12
     193: aload         12
     195: invokevirtual #299                // Method monix/eval/Task$Async.onFinish:()Lscala/Function3;
     198: astore        13
     200: new           #295                // class monix/eval/Task$Async
     203: dup
     204: new           #408                // class monix/eval/Task$$anonfun$materializeAttempt$6
     207: dup
     208: aload_0
     209: aload         13
     211: invokespecial #411                // Method monix/eval/Task$$anonfun$materializeAttempt$6."<init>":(Lmonix/eval/Task;Lscala/Function3;)V
     214: invokespecial #344                // Method monix/eval/Task$Async."<init>":(Lscala/Function3;)V
     217: astore        4
     219: goto          278
     222: aload_1
     223: instanceof    #301                // class monix/eval/Task$BindAsync
     226: ifeq          281
     229: aload_1
     230: checkcast     #301                // class monix/eval/Task$BindAsync
     233: astore        14
     235: aload         14
     237: invokevirtual #305                // Method monix/eval/Task$BindAsync.onFinish:()Lscala/Function3;
     240: astore        15
     242: aload         14
     244: invokevirtual #306                // Method monix/eval/Task$BindAsync.f:()Lscala/Function1;
     247: astore        16
     249: new           #301                // class monix/eval/Task$BindAsync
     252: dup
     253: new           #413                // class monix/eval/Task$$anonfun$materializeAttempt$7
     256: dup
     257: aload_0
     258: aload         15
     260: invokespecial #414                // Method monix/eval/Task$$anonfun$materializeAttempt$7."<init>":(Lmonix/eval/Task;Lscala/Function3;)V
     263: new           #416                // class monix/eval/Task$$anonfun$materializeAttempt$8
     266: dup
     267: aload_0
     268: aload         16
     270: invokespecial #417                // Method monix/eval/Task$$anonfun$materializeAttempt$8."<init>":(Lmonix/eval/Task;Lscala/Function1;)V
     273: invokespecial #304                // Method monix/eval/Task$BindAsync."<init>":(Lscala/Function3;Lscala/Function1;)V
     276: astore        4
     278: aload         4
     280: areturn
     281: new           #313                // class scala/MatchError
     284: dup
     285: aload_1
     286: invokespecial #316                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     289: athrow

  public <B> monix.eval.Task<B> dematerialize(scala.Predef$$less$colon$less<A, scala.util.Try<B>>);
    Code:
       0: aload_0
       1: new           #420                // class monix/eval/Task$$anonfun$dematerialize$1
       4: dup
       5: aload_0
       6: invokespecial #421                // Method monix/eval/Task$$anonfun$dematerialize$1."<init>":(Lmonix/eval/Task;)V
       9: invokevirtual #332                // Method flatMap:(Lscala/Function1;)Lmonix/eval/Task;
      12: areturn

  public <B> monix.eval.Task<B> dematerializeAttempt(scala.Predef$$less$colon$less<A, monix.eval.Coeval$Attempt<B>>);
    Code:
       0: aload_0
       1: new           #424                // class monix/eval/Task$$anonfun$dematerializeAttempt$1
       4: dup
       5: aload_0
       6: invokespecial #425                // Method monix/eval/Task$$anonfun$dematerializeAttempt$1."<init>":(Lmonix/eval/Task;)V
       9: invokevirtual #332                // Method flatMap:(Lscala/Function1;)Lmonix/eval/Task;
      12: areturn

  public <B> monix.eval.Task<B> onErrorRecoverWith(scala.PartialFunction<java.lang.Throwable, monix.eval.Task<B>>);
    Code:
       0: aload_0
       1: new           #429                // class monix/eval/Task$$anonfun$onErrorRecoverWith$1
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #432                // Method monix/eval/Task$$anonfun$onErrorRecoverWith$1."<init>":(Lmonix/eval/Task;Lscala/PartialFunction;)V
      10: invokevirtual #435                // Method onErrorHandleWith:(Lscala/Function1;)Lmonix/eval/Task;
      13: areturn

  public <B> monix.eval.Task<B> onErrorHandleWith(scala.Function1<java.lang.Throwable, monix.eval.Task<B>>);
    Code:
       0: aload_0
       1: invokevirtual #368                // Method materializeAttempt:()Lmonix/eval/Task;
       4: new           #439                // class monix/eval/Task$$anonfun$onErrorHandleWith$1
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #440                // Method monix/eval/Task$$anonfun$onErrorHandleWith$1."<init>":(Lmonix/eval/Task;Lscala/Function1;)V
      13: invokevirtual #332                // Method flatMap:(Lscala/Function1;)Lmonix/eval/Task;
      16: areturn

  public <B> monix.eval.Task<B> onErrorFallbackTo(monix.eval.Task<B>);
    Code:
       0: aload_0
       1: new           #443                // class monix/eval/Task$$anonfun$onErrorFallbackTo$1
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #444                // Method monix/eval/Task$$anonfun$onErrorFallbackTo$1."<init>":(Lmonix/eval/Task;Lmonix/eval/Task;)V
      10: invokevirtual #435                // Method onErrorHandleWith:(Lscala/Function1;)Lmonix/eval/Task;
      13: areturn

  public monix.eval.Task<A> restartUntil(scala.Function1<A, java.lang.Object>);
    Code:
       0: aload_0
       1: new           #448                // class monix/eval/Task$$anonfun$restartUntil$1
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #449                // Method monix/eval/Task$$anonfun$restartUntil$1."<init>":(Lmonix/eval/Task;Lscala/Function1;)V
      10: invokevirtual #332                // Method flatMap:(Lscala/Function1;)Lmonix/eval/Task;
      13: areturn

  public monix.eval.Task<A> onErrorRestart(long);
    Code:
       0: aload_0
       1: new           #454                // class monix/eval/Task$$anonfun$onErrorRestart$1
       4: dup
       5: aload_0
       6: lload_1
       7: invokespecial #457                // Method monix/eval/Task$$anonfun$onErrorRestart$1."<init>":(Lmonix/eval/Task;J)V
      10: invokevirtual #435                // Method onErrorHandleWith:(Lscala/Function1;)Lmonix/eval/Task;
      13: areturn

  public monix.eval.Task<A> onErrorRestartIf(scala.Function1<java.lang.Throwable, java.lang.Object>);
    Code:
       0: aload_0
       1: new           #462                // class monix/eval/Task$$anonfun$onErrorRestartIf$1
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #463                // Method monix/eval/Task$$anonfun$onErrorRestartIf$1."<init>":(Lmonix/eval/Task;Lscala/Function1;)V
      10: invokevirtual #435                // Method onErrorHandleWith:(Lscala/Function1;)Lmonix/eval/Task;
      13: areturn

  public <U> monix.eval.Task<U> onErrorHandle(scala.Function1<java.lang.Throwable, U>);
    Code:
       0: aload_0
       1: new           #466                // class monix/eval/Task$$anonfun$onErrorHandle$1
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #467                // Method monix/eval/Task$$anonfun$onErrorHandle$1."<init>":(Lmonix/eval/Task;Lscala/Function1;)V
      10: invokevirtual #435                // Method onErrorHandleWith:(Lscala/Function1;)Lmonix/eval/Task;
      13: areturn

  public <U> monix.eval.Task<U> onErrorRecover(scala.PartialFunction<java.lang.Throwable, U>);
    Code:
       0: aload_0
       1: aload_1
       2: new           #470                // class monix/eval/Task$$anonfun$onErrorRecover$1
       5: dup
       6: aload_0
       7: invokespecial #471                // Method monix/eval/Task$$anonfun$onErrorRecover$1."<init>":(Lmonix/eval/Task;)V
      10: invokeinterface #477,  2          // InterfaceMethod scala/PartialFunction.andThen:(Lscala/Function1;)Lscala/PartialFunction;
      15: invokevirtual #479                // Method onErrorRecoverWith:(Lscala/PartialFunction;)Lmonix/eval/Task;
      18: areturn

  public monix.eval.Task<A> memoize();
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: instanceof    #255                // class monix/eval/Task$Delay
       6: ifeq          35
       9: aload_1
      10: checkcast     #255                // class monix/eval/Task$Delay
      13: astore_2
      14: aload_2
      15: invokevirtual #258                // Method monix/eval/Task$Delay.coeval:()Lmonix/eval/Coeval;
      18: astore_3
      19: new           #255                // class monix/eval/Task$Delay
      22: dup
      23: aload_3
      24: invokevirtual #484                // Method monix/eval/Coeval.memoize:()Lmonix/eval/Coeval;
      27: invokespecial #487                // Method monix/eval/Task$Delay."<init>":(Lmonix/eval/Coeval;)V
      30: astore        4
      32: goto          66
      35: aload_1
      36: instanceof    #279                // class monix/eval/Task$MemoizeSuspend
      39: ifeq          48
      42: aload_0
      43: astore        4
      45: goto          66
      48: new           #279                // class monix/eval/Task$MemoizeSuspend
      51: dup
      52: new           #489                // class monix/eval/Task$$anonfun$memoize$1
      55: dup
      56: aload_0
      57: aload_1
      58: invokespecial #490                // Method monix/eval/Task$$anonfun$memoize$1."<init>":(Lmonix/eval/Task;Lmonix/eval/Task;)V
      61: invokespecial #491                // Method monix/eval/Task$MemoizeSuspend."<init>":(Lscala/Function0;)V
      64: astore        4
      66: aload         4
      68: areturn

  public <B> org.reactivestreams.Publisher<B> toReactivePublisher(monix.execution.Scheduler);
    Code:
       0: new           #496                // class monix/eval/Task$$anon$30
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #497                // Method monix/eval/Task$$anon$30."<init>":(Lmonix/eval/Task;Lmonix/execution/Scheduler;)V
       9: areturn

  public monix.eval.Task<A> timeout(scala.concurrent.duration.FiniteDuration);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       5: new           #500                // class java/util/concurrent/TimeoutException
       8: dup
       9: new           #502                // class scala/StringContext
      12: dup
      13: getstatic     #507                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      16: iconst_2
      17: anewarray     #509                // class java/lang/String
      20: dup
      21: iconst_0
      22: ldc_w         #511                // String Task timed-out after
      25: aastore
      26: dup
      27: iconst_1
      28: ldc_w         #513                // String  of inactivity
      31: aastore
      32: checkcast     #515                // class "[Ljava/lang/Object;"
      35: invokevirtual #519                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      38: invokespecial #522                // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      41: getstatic     #507                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      44: iconst_1
      45: anewarray     #5                  // class java/lang/Object
      48: dup
      49: iconst_0
      50: aload_1
      51: aastore
      52: invokevirtual #526                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      55: invokevirtual #529                // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
      58: invokespecial #532                // Method java/util/concurrent/TimeoutException."<init>":(Ljava/lang/String;)V
      61: invokevirtual #178                // Method monix/eval/Task$.raiseError:(Ljava/lang/Throwable;)Lmonix/eval/Task;
      64: invokevirtual #536                // Method timeoutTo:(Lscala/concurrent/duration/FiniteDuration;Lmonix/eval/Task;)Lmonix/eval/Task;
      67: areturn

  public <B> monix.eval.Task<B> timeoutTo(scala.concurrent.duration.FiniteDuration, monix.eval.Task<B>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: aload_2
       5: aload_1
       6: invokevirtual #539                // Method delayExecution:(Lscala/concurrent/duration/FiniteDuration;)Lmonix/eval/Task;
       9: invokevirtual #122                // Method monix/eval/Task$.chooseFirstOf:(Lmonix/eval/Task;Lmonix/eval/Task;)Lmonix/eval/Task;
      12: new           #541                // class monix/eval/Task$$anonfun$timeoutTo$1
      15: dup
      16: aload_0
      17: invokespecial #542                // Method monix/eval/Task$$anonfun$timeoutTo$1."<init>":(Lmonix/eval/Task;)V
      20: invokevirtual #387                // Method map:(Lscala/Function1;)Lmonix/eval/Task;
      23: areturn

  public <B> monix.eval.Task<scala.Tuple2<A, B>> zip(monix.eval.Task<B>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: aload_1
       5: new           #546                // class monix/eval/Task$$anonfun$zip$1
       8: dup
       9: aload_0
      10: invokespecial #547                // Method monix/eval/Task$$anonfun$zip$1."<init>":(Lmonix/eval/Task;)V
      13: invokevirtual #101                // Method monix/eval/Task$.mapBoth:(Lmonix/eval/Task;Lmonix/eval/Task;Lscala/Function2;)Lmonix/eval/Task;
      16: areturn

  public <B, C> monix.eval.Task<C> zipMap(monix.eval.Task<B>, scala.Function2<A, B, C>);
    Code:
       0: getstatic     #19                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #101                // Method monix/eval/Task$.mapBoth:(Lmonix/eval/Task;Lmonix/eval/Task;Lscala/Function2;)Lmonix/eval/Task;
       9: areturn

  public monix.eval.Task();
    Code:
       0: aload_0
       1: invokespecial #553                // Method java/lang/Object."<init>":()V
       4: return
}
