Compiled from "Task.scala"
public final class monix.eval.Task$$anonfun$mapBoth$1$$anon$34$$anon$25 extends monix.execution.schedulers.LocalRunnable {
  private final monix.eval.Task$$anonfun$mapBoth$1$$anon$34 $outer;

  public final monix.execution.atomic.AtomicAny state$1;

  private final monix.execution.cancelables.StackedCancelable task1$1;

  public void run();
    Code:
       0: getstatic     #22                 // Field monix/eval/Task$.MODULE$:Lmonix/eval/Task$;
       3: aload_0
       4: getfield      #24                 // Field $outer:Lmonix/eval/Task$$anonfun$mapBoth$1$$anon$34;
       7: invokevirtual #28                 // Method monix/eval/Task$$anonfun$mapBoth$1$$anon$34.monix$eval$Task$$anonfun$$anon$$$outer:()Lmonix/eval/Task$$anonfun$mapBoth$1;
      10: getfield      #34                 // Field monix/eval/Task$$anonfun$mapBoth$1.fa1$1:Lmonix/eval/Task;
      13: aload_0
      14: getfield      #24                 // Field $outer:Lmonix/eval/Task$$anonfun$mapBoth$1$$anon$34;
      17: getfield      #38                 // Field monix/eval/Task$$anonfun$mapBoth$1$$anon$34.scheduler$11:Lmonix/execution/Scheduler;
      20: aload_0
      21: getfield      #40                 // Field task1$1:Lmonix/execution/cancelables/StackedCancelable;
      24: new           #42                 // class monix/eval/Task$$anonfun$mapBoth$1$$anon$34$$anon$25$$anon$17
      27: dup
      28: aload_0
      29: invokespecial #46                 // Method monix/eval/Task$$anonfun$mapBoth$1$$anon$34$$anon$25$$anon$17."<init>":(Lmonix/eval/Task$$anonfun$mapBoth$1$$anon$34$$anon$25;)V
      32: invokevirtual #50                 // Method monix/eval/Task$.unsafeStartNow:(Lmonix/eval/Task;Lmonix/execution/Scheduler;Lmonix/execution/cancelables/StackedCancelable;Lmonix/eval/Callback;)V
      35: return

  public monix.eval.Task$$anonfun$mapBoth$1$$anon$34 monix$eval$Task$$anonfun$$anon$$anon$$$outer();
    Code:
       0: aload_0
       1: getfield      #24                 // Field $outer:Lmonix/eval/Task$$anonfun$mapBoth$1$$anon$34;
       4: areturn

  public monix.eval.Task$$anonfun$mapBoth$1$$anon$34$$anon$25(monix.eval.Task$$anonfun$mapBoth$1$$anon$34, monix.execution.atomic.AtomicAny, monix.execution.cancelables.StackedCancelable);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #24                 // Field $outer:Lmonix/eval/Task$$anonfun$mapBoth$1$$anon$34;
      11: aload_0
      12: aload_2
      13: putfield      #57                 // Field state$1:Lmonix/execution/atomic/AtomicAny;
      16: aload_0
      17: aload_3
      18: putfield      #40                 // Field task1$1:Lmonix/execution/cancelables/StackedCancelable;
      21: aload_0
      22: invokespecial #59                 // Method monix/execution/schedulers/LocalRunnable."<init>":()V
      25: return
}
