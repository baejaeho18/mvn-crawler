Compiled from "Task.scala"
public final class monix.eval.Task$ implements monix.eval.TaskInstances,scala.Serializable {
  public static final monix.eval.Task$ MODULE$;

  private final monix.eval.Task$Async<scala.runtime.Nothing$> neverRef;

  private final monix.eval.Task<scala.runtime.BoxedUnit> unit;

  private final monix.eval.TaskInstances$TypeClassInstances typeClassInstances;

  private final monix.eval.TaskInstances$TypeClassInstances nondeterminism;

  public static {};
    Code:
       0: new           #2                  // class monix/eval/Task$
       3: invokespecial #16                 // Method "<init>":()V
       6: return

  public monix.eval.TaskInstances$TypeClassInstances nondeterminism();
    Code:
       0: aload_0
       1: getfield      #28                 // Field nondeterminism:Lmonix/eval/TaskInstances$TypeClassInstances;
       4: areturn

  public void monix$eval$TaskInstances$_setter_$nondeterminism_$eq(monix.eval.TaskInstances$TypeClassInstances);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field nondeterminism:Lmonix/eval/TaskInstances$TypeClassInstances;
       5: return

  public <A> monix.eval.Task<A> apply(scala.Function0<A>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #37                 // Method eval:(Lscala/Function0;)Lmonix/eval/Task;
       6: invokevirtual #41                 // Method fork:(Lmonix/eval/Task;)Lmonix/eval/Task;
       9: areturn

  public <A> monix.eval.Task<A> now(A);
    Code:
       0: new           #47                 // class monix/eval/Task$Delay
       3: dup
       4: new           #49                 // class monix/eval/Coeval$Now
       7: dup
       8: aload_1
       9: invokespecial #52                 // Method monix/eval/Coeval$Now."<init>":(Ljava/lang/Object;)V
      12: invokespecial #55                 // Method monix/eval/Task$Delay."<init>":(Lmonix/eval/Coeval;)V
      15: areturn

  public <A> monix.eval.Task<A> pure(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #60                 // Method now:(Ljava/lang/Object;)Lmonix/eval/Task;
       5: areturn

  public <A> monix.eval.Task<A> raiseError(java.lang.Throwable);
    Code:
       0: new           #47                 // class monix/eval/Task$Delay
       3: dup
       4: new           #64                 // class monix/eval/Coeval$Error
       7: dup
       8: aload_1
       9: invokespecial #67                 // Method monix/eval/Coeval$Error."<init>":(Ljava/lang/Throwable;)V
      12: invokespecial #55                 // Method monix/eval/Task$Delay."<init>":(Lmonix/eval/Coeval;)V
      15: areturn

  public <A> monix.eval.Task<A> defer(scala.Function0<monix.eval.Task<A>>);
    Code:
       0: new           #72                 // class monix/eval/Task$Suspend
       3: dup
       4: aload_1
       5: invokespecial #75                 // Method monix/eval/Task$Suspend."<init>":(Lscala/Function0;)V
       8: areturn

  public <A> monix.eval.Task<A> suspend(scala.Function0<monix.eval.Task<A>>);
    Code:
       0: new           #72                 // class monix/eval/Task$Suspend
       3: dup
       4: aload_1
       5: invokespecial #75                 // Method monix/eval/Task$Suspend."<init>":(Lscala/Function0;)V
       8: areturn

  public <A> monix.eval.Task<A> evalOnce(scala.Function0<A>);
    Code:
       0: new           #47                 // class monix/eval/Task$Delay
       3: dup
       4: getstatic     #83                 // Field monix/eval/Coeval$Once$.MODULE$:Lmonix/eval/Coeval$Once$;
       7: aload_1
       8: invokevirtual #86                 // Method monix/eval/Coeval$Once$.apply:(Lscala/Function0;)Lmonix/eval/Coeval$Once;
      11: invokespecial #55                 // Method monix/eval/Task$Delay."<init>":(Lmonix/eval/Coeval;)V
      14: areturn

  public <A> monix.eval.Task<A> eval(scala.Function0<A>);
    Code:
       0: new           #47                 // class monix/eval/Task$Delay
       3: dup
       4: new           #88                 // class monix/eval/Coeval$Always
       7: dup
       8: aload_1
       9: invokespecial #89                 // Method monix/eval/Coeval$Always."<init>":(Lscala/Function0;)V
      12: invokespecial #55                 // Method monix/eval/Task$Delay."<init>":(Lmonix/eval/Coeval;)V
      15: areturn

  public <A> monix.eval.Task<A> delay(scala.Function0<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #37                 // Method eval:(Lscala/Function0;)Lmonix/eval/Task;
       5: areturn

  public <A> monix.eval.Task<A> evalAlways(scala.Function0<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #37                 // Method eval:(Lscala/Function0;)Lmonix/eval/Task;
       5: areturn

  public <A> monix.eval.Task<A> never();
    Code:
       0: aload_0
       1: getfield      #95                 // Field neverRef:Lmonix/eval/Task$Async;
       4: areturn

  public <A> monix.eval.Task<A> fromTry(scala.util.Try<A>);
    Code:
       0: new           #47                 // class monix/eval/Task$Delay
       3: dup
       4: getstatic     #102                // Field monix/eval/Coeval$.MODULE$:Lmonix/eval/Coeval$;
       7: aload_1
       8: invokevirtual #105                // Method monix/eval/Coeval$.fromTry:(Lscala/util/Try;)Lmonix/eval/Coeval;
      11: invokespecial #55                 // Method monix/eval/Task$Delay."<init>":(Lmonix/eval/Coeval;)V
      14: areturn

  public final monix.eval.Task<scala.runtime.BoxedUnit> unit();
    Code:
       0: aload_0
       1: getfield      #108                // Field unit:Lmonix/eval/Task;
       4: areturn

  public <A> monix.eval.Task<A> coeval(monix.eval.Coeval<A>);
    Code:
       0: new           #47                 // class monix/eval/Task$Delay
       3: dup
       4: aload_1
       5: invokespecial #55                 // Method monix/eval/Task$Delay."<init>":(Lmonix/eval/Coeval;)V
       8: areturn

  public <A> monix.eval.Task<A> fork(monix.eval.Task<A>);
    Code:
       0: new           #113                // class monix/eval/Task$Async
       3: dup
       4: new           #115                // class monix/eval/Task$$anonfun$fork$1
       7: dup
       8: aload_1
       9: invokespecial #118                // Method monix/eval/Task$$anonfun$fork$1."<init>":(Lmonix/eval/Task;)V
      12: invokespecial #121                // Method monix/eval/Task$Async."<init>":(Lscala/Function3;)V
      15: areturn

  public <A> monix.eval.Task<A> fork(monix.eval.Task<A>, monix.execution.Scheduler);
    Code:
       0: new           #113                // class monix/eval/Task$Async
       3: dup
       4: new           #124                // class monix/eval/Task$$anonfun$fork$2
       7: dup
       8: aload_1
       9: aload_2
      10: invokespecial #127                // Method monix/eval/Task$$anonfun$fork$2."<init>":(Lmonix/eval/Task;Lmonix/execution/Scheduler;)V
      13: invokespecial #121                // Method monix/eval/Task$Async."<init>":(Lscala/Function3;)V
      16: areturn

  public <A> monix.eval.Task<A> async(scala.Function2<monix.execution.Scheduler, monix.eval.Callback<A>, monix.execution.Cancelable>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #134                // Method create:(Lscala/Function2;)Lmonix/eval/Task;
       5: areturn

  public <A> monix.eval.Task<A> create(scala.Function2<monix.execution.Scheduler, monix.eval.Callback<A>, monix.execution.Cancelable>);
    Code:
       0: new           #113                // class monix/eval/Task$Async
       3: dup
       4: new           #138                // class monix/eval/Task$$anonfun$create$1
       7: dup
       8: aload_1
       9: invokespecial #141                // Method monix/eval/Task$$anonfun$create$1."<init>":(Lscala/Function2;)V
      12: invokespecial #121                // Method monix/eval/Task$Async."<init>":(Lscala/Function3;)V
      15: areturn

  public <A> monix.eval.Task<A> unsafeCreate(scala.Function3<monix.execution.Scheduler, monix.execution.cancelables.StackedCancelable, monix.eval.Callback<A>, scala.runtime.BoxedUnit>);
    Code:
       0: new           #113                // class monix/eval/Task$Async
       3: dup
       4: aload_1
       5: invokespecial #121                // Method monix/eval/Task$Async."<init>":(Lscala/Function3;)V
       8: areturn

  public <A> monix.eval.Task<A> fromFuture(scala.concurrent.Future<A>);
    Code:
       0: aload_1
       1: invokeinterface #153,  1          // InterfaceMethod scala/concurrent/Future.isCompleted:()Z
       6: ifeq          28
       9: aload_0
      10: aload_1
      11: invokeinterface #157,  1          // InterfaceMethod scala/concurrent/Future.value:()Lscala/Option;
      16: invokevirtual #163                // Method scala/Option.get:()Ljava/lang/Object;
      19: checkcast     #165                // class scala/util/Try
      22: invokevirtual #167                // Method fromTry:(Lscala/util/Try;)Lmonix/eval/Task;
      25: goto          82
      28: aload_1
      29: astore_2
      30: aload_2
      31: instanceof    #169                // class monix/execution/Cancelable
      34: ifeq          63
      37: aload_2
      38: checkcast     #169                // class monix/execution/Cancelable
      41: astore_3
      42: new           #113                // class monix/eval/Task$Async
      45: dup
      46: new           #171                // class monix/eval/Task$$anonfun$fromFuture$1
      49: dup
      50: aload_1
      51: aload_3
      52: invokespecial #174                // Method monix/eval/Task$$anonfun$fromFuture$1."<init>":(Lscala/concurrent/Future;Lmonix/execution/Cancelable;)V
      55: invokespecial #121                // Method monix/eval/Task$Async."<init>":(Lscala/Function3;)V
      58: astore        4
      60: goto          80
      63: new           #113                // class monix/eval/Task$Async
      66: dup
      67: new           #176                // class monix/eval/Task$$anonfun$fromFuture$2
      70: dup
      71: aload_1
      72: invokespecial #179                // Method monix/eval/Task$$anonfun$fromFuture$2."<init>":(Lscala/concurrent/Future;)V
      75: invokespecial #121                // Method monix/eval/Task$Async."<init>":(Lscala/Function3;)V
      78: astore        4
      80: aload         4
      82: areturn

  public <A, B> monix.eval.Task<scala.util.Either<scala.Tuple2<A, monix.execution.CancelableFuture<B>>, scala.Tuple2<monix.execution.CancelableFuture<A>, B>>> chooseFirstOf(monix.eval.Task<A>, monix.eval.Task<B>);
    Code:
       0: new           #113                // class monix/eval/Task$Async
       3: dup
       4: new           #186                // class monix/eval/Task$$anonfun$chooseFirstOf$1
       7: dup
       8: aload_1
       9: aload_2
      10: invokespecial #189                // Method monix/eval/Task$$anonfun$chooseFirstOf$1."<init>":(Lmonix/eval/Task;Lmonix/eval/Task;)V
      13: invokespecial #121                // Method monix/eval/Task$Async."<init>":(Lscala/Function3;)V
      16: areturn

  public <A> monix.eval.Task<A> chooseFirstOfList(scala.collection.TraversableOnce<monix.eval.Task<A>>);
    Code:
       0: new           #113                // class monix/eval/Task$Async
       3: dup
       4: new           #194                // class monix/eval/Task$$anonfun$chooseFirstOfList$1
       7: dup
       8: aload_1
       9: invokespecial #197                // Method monix/eval/Task$$anonfun$chooseFirstOfList$1."<init>":(Lscala/collection/TraversableOnce;)V
      12: invokespecial #121                // Method monix/eval/Task$Async."<init>":(Lscala/Function3;)V
      15: areturn

  public <A, M extends scala.collection.TraversableOnce<java.lang.Object>> monix.eval.Task<M> sequence(M, scala.collection.generic.CanBuildFrom<M, A, M>);
    Code:
       0: aload_0
       1: new           #203                // class monix/eval/Task$$anonfun$2
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #206                // Method monix/eval/Task$$anonfun$2."<init>":(Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)V
      10: invokevirtual #37                 // Method eval:(Lscala/Function0;)Lmonix/eval/Task;
      13: astore_3
      14: aload_1
      15: aload_3
      16: new           #208                // class monix/eval/Task$$anonfun$3
      19: dup
      20: invokespecial #209                // Method monix/eval/Task$$anonfun$3."<init>":()V
      23: invokeinterface #215,  3          // InterfaceMethod scala/collection/TraversableOnce.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      28: checkcast     #182                // class monix/eval/Task
      31: astore        4
      33: aload         4
      35: new           #217                // class monix/eval/Task$$anonfun$sequence$1
      38: dup
      39: invokespecial #218                // Method monix/eval/Task$$anonfun$sequence$1."<init>":()V
      42: invokevirtual #222                // Method monix/eval/Task.map:(Lscala/Function1;)Lmonix/eval/Task;
      45: areturn

  public <A, B, M extends scala.collection.TraversableOnce<java.lang.Object>> monix.eval.Task<M> traverse(M, scala.Function1<A, monix.eval.Task<B>>, scala.collection.generic.CanBuildFrom<M, B, M>);
    Code:
       0: aload_0
       1: new           #231                // class monix/eval/Task$$anonfun$4
       4: dup
       5: aload_1
       6: aload_3
       7: invokespecial #232                // Method monix/eval/Task$$anonfun$4."<init>":(Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)V
      10: invokevirtual #37                 // Method eval:(Lscala/Function0;)Lmonix/eval/Task;
      13: astore        4
      15: aload_1
      16: aload         4
      18: new           #234                // class monix/eval/Task$$anonfun$5
      21: dup
      22: aload_2
      23: invokespecial #237                // Method monix/eval/Task$$anonfun$5."<init>":(Lscala/Function1;)V
      26: invokeinterface #215,  3          // InterfaceMethod scala/collection/TraversableOnce.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      31: checkcast     #182                // class monix/eval/Task
      34: astore        5
      36: aload         5
      38: new           #239                // class monix/eval/Task$$anonfun$traverse$1
      41: dup
      42: invokespecial #240                // Method monix/eval/Task$$anonfun$traverse$1."<init>":()V
      45: invokevirtual #222                // Method monix/eval/Task.map:(Lscala/Function1;)Lmonix/eval/Task;
      48: areturn

  public <A, M extends scala.collection.TraversableOnce<java.lang.Object>> monix.eval.Task<M> gather(M, scala.collection.generic.CanBuildFrom<M, A, M>);
    Code:
       0: new           #244                // class monix/eval/Task$$anon$2
       3: dup
       4: invokespecial #245                // Method monix/eval/Task$$anon$2."<init>":()V
       7: astore_3
       8: aload_1
       9: invokeinterface #249,  1          // InterfaceMethod scala/collection/TraversableOnce.toIterator:()Lscala/collection/Iterator;
      14: invokeinterface #254,  1          // InterfaceMethod scala/collection/Iterator.zipWithIndex:()Lscala/collection/Iterator;
      19: new           #256                // class monix/eval/Task$$anonfun$6
      22: dup
      23: invokespecial #257                // Method monix/eval/Task$$anonfun$6."<init>":()V
      26: invokeinterface #260,  2          // InterfaceMethod scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
      31: astore        4
      33: aload_0
      34: aload         4
      36: getstatic     #265                // Field scala/collection/Iterator$.MODULE$:Lscala/collection/Iterator$;
      39: invokevirtual #269                // Method scala/collection/Iterator$.IteratorCanBuildFrom:()Lscala/collection/TraversableOnce$BufferedCanBuildFrom;
      42: invokevirtual #272                // Method gatherUnordered:(Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)Lmonix/eval/Task;
      45: new           #274                // class monix/eval/Task$$anonfun$gather$1
      48: dup
      49: aload_1
      50: aload_2
      51: aload_3
      52: invokespecial #277                // Method monix/eval/Task$$anonfun$gather$1."<init>":(Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;Lscala/math/Ordering;)V
      55: invokevirtual #222                // Method monix/eval/Task.map:(Lscala/Function1;)Lmonix/eval/Task;
      58: areturn

  public <A, M extends scala.collection.TraversableOnce<java.lang.Object>> monix.eval.Task<M> gatherUnordered(M, scala.collection.generic.CanBuildFrom<M, A, M>);
    Code:
       0: new           #113                // class monix/eval/Task$Async
       3: dup
       4: new           #282                // class monix/eval/Task$$anon$32
       7: dup
       8: aload_1
       9: aload_2
      10: invokespecial #283                // Method monix/eval/Task$$anon$32."<init>":(Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)V
      13: invokespecial #121                // Method monix/eval/Task$Async."<init>":(Lscala/Function3;)V
      16: areturn

  public <A1, A2, R> monix.eval.Task<R> mapBoth(monix.eval.Task<A1>, monix.eval.Task<A2>, scala.Function2<A1, A2, R>);
    Code:
       0: new           #113                // class monix/eval/Task$Async
       3: dup
       4: new           #287                // class monix/eval/Task$$anonfun$mapBoth$1
       7: dup
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokespecial #290                // Method monix/eval/Task$$anonfun$mapBoth$1."<init>":(Lmonix/eval/Task;Lmonix/eval/Task;Lscala/Function2;)V
      14: invokespecial #121                // Method monix/eval/Task$Async."<init>":(Lscala/Function3;)V
      17: areturn

  public <A> monix.eval.Task<scala.collection.immutable.List<A>> zipList(scala.collection.Seq<monix.eval.Task<A>>);
    Code:
       0: aload_0
       1: new           #296                // class monix/eval/Task$$anonfun$7
       4: dup
       5: invokespecial #297                // Method monix/eval/Task$$anonfun$7."<init>":()V
       8: invokevirtual #37                 // Method eval:(Lscala/Function0;)Lmonix/eval/Task;
      11: astore_2
      12: aload_1
      13: aload_2
      14: new           #299                // class monix/eval/Task$$anonfun$8
      17: dup
      18: invokespecial #300                // Method monix/eval/Task$$anonfun$8."<init>":()V
      21: invokeinterface #303,  3          // InterfaceMethod scala/collection/Seq.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      26: checkcast     #182                // class monix/eval/Task
      29: astore_3
      30: aload_3
      31: new           #305                // class monix/eval/Task$$anonfun$zipList$1
      34: dup
      35: invokespecial #306                // Method monix/eval/Task$$anonfun$zipList$1."<init>":()V
      38: invokevirtual #222                // Method monix/eval/Task.map:(Lscala/Function1;)Lmonix/eval/Task;
      41: areturn

  public <A1, A2, R> monix.eval.Task<scala.Tuple2<A1, A2>> zip2(monix.eval.Task<A1>, monix.eval.Task<A2>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: new           #311                // class monix/eval/Task$$anonfun$zip2$1
       6: dup
       7: invokespecial #312                // Method monix/eval/Task$$anonfun$zip2$1."<init>":()V
      10: invokevirtual #314                // Method mapBoth:(Lmonix/eval/Task;Lmonix/eval/Task;Lscala/Function2;)Lmonix/eval/Task;
      13: areturn

  public <A1, A2, R> monix.eval.Task<R> zipMap2(monix.eval.Task<A1>, monix.eval.Task<A2>, scala.Function2<A1, A2, R>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #314                // Method mapBoth:(Lmonix/eval/Task;Lmonix/eval/Task;Lscala/Function2;)Lmonix/eval/Task;
       7: areturn

  public <A1, A2, A3> monix.eval.Task<scala.Tuple3<A1, A2, A3>> zip3(monix.eval.Task<A1>, monix.eval.Task<A2>, monix.eval.Task<A3>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: new           #319                // class monix/eval/Task$$anonfun$zip3$1
       7: dup
       8: invokespecial #320                // Method monix/eval/Task$$anonfun$zip3$1."<init>":()V
      11: invokevirtual #324                // Method zipMap3:(Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lscala/Function3;)Lmonix/eval/Task;
      14: areturn

  public <A1, A2, A3, A4> monix.eval.Task<scala.Tuple4<A1, A2, A3, A4>> zip4(monix.eval.Task<A1>, monix.eval.Task<A2>, monix.eval.Task<A3>, monix.eval.Task<A4>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: new           #329                // class monix/eval/Task$$anonfun$zip4$1
       9: dup
      10: invokespecial #330                // Method monix/eval/Task$$anonfun$zip4$1."<init>":()V
      13: invokevirtual #334                // Method zipMap4:(Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lscala/Function4;)Lmonix/eval/Task;
      16: areturn

  public <A1, A2, A3, A4, A5> monix.eval.Task<scala.Tuple5<A1, A2, A3, A4, A5>> zip5(monix.eval.Task<A1>, monix.eval.Task<A2>, monix.eval.Task<A3>, monix.eval.Task<A4>, monix.eval.Task<A5>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: new           #339                // class monix/eval/Task$$anonfun$zip5$1
      11: dup
      12: invokespecial #340                // Method monix/eval/Task$$anonfun$zip5$1."<init>":()V
      15: invokevirtual #344                // Method zipMap5:(Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lscala/Function5;)Lmonix/eval/Task;
      18: areturn

  public <A1, A2, A3, A4, A5, A6> monix.eval.Task<scala.Tuple6<A1, A2, A3, A4, A5, A6>> zip6(monix.eval.Task<A1>, monix.eval.Task<A2>, monix.eval.Task<A3>, monix.eval.Task<A4>, monix.eval.Task<A5>, monix.eval.Task<A6>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: new           #349                // class monix/eval/Task$$anonfun$zip6$1
      13: dup
      14: invokespecial #350                // Method monix/eval/Task$$anonfun$zip6$1."<init>":()V
      17: invokevirtual #354                // Method zipMap6:(Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lscala/Function6;)Lmonix/eval/Task;
      20: areturn

  public <A1, A2, A3, R> monix.eval.Task<R> zipMap3(monix.eval.Task<A1>, monix.eval.Task<A2>, monix.eval.Task<A3>, scala.Function3<A1, A2, A3, R>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #357                // Method zip2:(Lmonix/eval/Task;Lmonix/eval/Task;)Lmonix/eval/Task;
       6: astore        5
       8: aload_0
       9: aload         5
      11: aload_3
      12: new           #359                // class monix/eval/Task$$anonfun$zipMap3$1
      15: dup
      16: aload         4
      18: invokespecial #360                // Method monix/eval/Task$$anonfun$zipMap3$1."<init>":(Lscala/Function3;)V
      21: invokevirtual #362                // Method zipMap2:(Lmonix/eval/Task;Lmonix/eval/Task;Lscala/Function2;)Lmonix/eval/Task;
      24: areturn

  public <A1, A2, A3, A4, R> monix.eval.Task<R> zipMap4(monix.eval.Task<A1>, monix.eval.Task<A2>, monix.eval.Task<A3>, monix.eval.Task<A4>, scala.Function4<A1, A2, A3, A4, R>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #365                // Method zip3:(Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;)Lmonix/eval/Task;
       7: astore        6
       9: aload_0
      10: aload         6
      12: aload         4
      14: new           #367                // class monix/eval/Task$$anonfun$zipMap4$1
      17: dup
      18: aload         5
      20: invokespecial #370                // Method monix/eval/Task$$anonfun$zipMap4$1."<init>":(Lscala/Function4;)V
      23: invokevirtual #362                // Method zipMap2:(Lmonix/eval/Task;Lmonix/eval/Task;Lscala/Function2;)Lmonix/eval/Task;
      26: areturn

  public <A1, A2, A3, A4, A5, R> monix.eval.Task<R> zipMap5(monix.eval.Task<A1>, monix.eval.Task<A2>, monix.eval.Task<A3>, monix.eval.Task<A4>, monix.eval.Task<A5>, scala.Function5<A1, A2, A3, A4, A5, R>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokevirtual #374                // Method zip4:(Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;)Lmonix/eval/Task;
       9: astore        7
      11: aload_0
      12: aload         7
      14: aload         5
      16: new           #376                // class monix/eval/Task$$anonfun$zipMap5$1
      19: dup
      20: aload         6
      22: invokespecial #379                // Method monix/eval/Task$$anonfun$zipMap5$1."<init>":(Lscala/Function5;)V
      25: invokevirtual #362                // Method zipMap2:(Lmonix/eval/Task;Lmonix/eval/Task;Lscala/Function2;)Lmonix/eval/Task;
      28: areturn

  public <A1, A2, A3, A4, A5, A6, R> monix.eval.Task<R> zipMap6(monix.eval.Task<A1>, monix.eval.Task<A2>, monix.eval.Task<A3>, monix.eval.Task<A4>, monix.eval.Task<A5>, monix.eval.Task<A6>, scala.Function6<A1, A2, A3, A4, A5, A6, R>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokevirtual #383                // Method zip5:(Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;)Lmonix/eval/Task;
      11: astore        8
      13: aload_0
      14: aload         8
      16: aload         6
      18: new           #385                // class monix/eval/Task$$anonfun$zipMap6$1
      21: dup
      22: aload         7
      24: invokespecial #388                // Method monix/eval/Task$$anonfun$zipMap6$1."<init>":(Lscala/Function6;)V
      27: invokevirtual #362                // Method zipMap2:(Lmonix/eval/Task;Lmonix/eval/Task;Lscala/Function2;)Lmonix/eval/Task;
      30: areturn

  public <A1, A2, R> monix.eval.Task<R> zipWith2(monix.eval.Task<A1>, monix.eval.Task<A2>, scala.Function2<A1, A2, R>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #362                // Method zipMap2:(Lmonix/eval/Task;Lmonix/eval/Task;Lscala/Function2;)Lmonix/eval/Task;
       7: areturn

  public <A1, A2, A3, R> monix.eval.Task<R> zipWith3(monix.eval.Task<A1>, monix.eval.Task<A2>, monix.eval.Task<A3>, scala.Function3<A1, A2, A3, R>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokevirtual #324                // Method zipMap3:(Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lscala/Function3;)Lmonix/eval/Task;
       9: areturn

  public <A1, A2, A3, A4, R> monix.eval.Task<R> zipWith4(monix.eval.Task<A1>, monix.eval.Task<A2>, monix.eval.Task<A3>, monix.eval.Task<A4>, scala.Function4<A1, A2, A3, A4, R>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokevirtual #334                // Method zipMap4:(Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lscala/Function4;)Lmonix/eval/Task;
      11: areturn

  public <A1, A2, A3, A4, A5, R> monix.eval.Task<R> zipWith5(monix.eval.Task<A1>, monix.eval.Task<A2>, monix.eval.Task<A3>, monix.eval.Task<A4>, monix.eval.Task<A5>, scala.Function5<A1, A2, A3, A4, A5, R>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokevirtual #344                // Method zipMap5:(Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lscala/Function5;)Lmonix/eval/Task;
      13: areturn

  public <A1, A2, A3, A4, A5, A6, R> monix.eval.Task<R> zipWith6(monix.eval.Task<A1>, monix.eval.Task<A2>, monix.eval.Task<A3>, monix.eval.Task<A4>, monix.eval.Task<A5>, monix.eval.Task<A6>, scala.Function6<A1, A2, A3, A4, A5, A6, R>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokevirtual #354                // Method zipMap6:(Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lmonix/eval/Task;Lscala/Function6;)Lmonix/eval/Task;
      15: areturn

  public <A> void unsafeStartAsync(monix.eval.Task<A>, monix.execution.Scheduler, monix.execution.cancelables.StackedCancelable, monix.eval.Callback<A>);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: aload_1
       4: aload         4
       6: getstatic     #402                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       9: invokevirtual #406                // Method monix$eval$Task$$startTrampolineAsync:(Lmonix/execution/Scheduler;Lmonix/execution/cancelables/StackedCancelable;Lmonix/eval/Task;Lmonix/eval/Callback;Lscala/collection/immutable/List;)V
      12: return

  public <A> void unsafeStartNow(monix.eval.Task<A>, monix.execution.Scheduler, monix.execution.cancelables.StackedCancelable, monix.eval.Callback<A>);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: aload_1
       4: aload         4
       6: getstatic     #402                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       9: invokevirtual #415                // Method monix$eval$Task$$startTrampolineRunLoop:(Lmonix/execution/Scheduler;Lmonix/execution/cancelables/StackedCancelable;Lmonix/eval/Task;Lmonix/eval/Callback;Lscala/collection/immutable/List;)V
      12: return

  private <A> boolean isNextAsync(monix.eval.Task<A>);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: instanceof    #113                // class monix/eval/Task$Async
       6: ifeq          14
       9: iconst_1
      10: istore_3
      11: goto          28
      14: aload_2
      15: instanceof    #419                // class monix/eval/Task$BindAsync
      18: ifeq          26
      21: iconst_1
      22: istore_3
      23: goto          28
      26: iconst_0
      27: istore_3
      28: iload_3
      29: ifeq          38
      32: iconst_1
      33: istore        4
      35: goto          41
      38: iconst_0
      39: istore        4
      41: iload         4
      43: ireturn

  public <A> void monix$eval$Task$$startTrampolineAsync(monix.execution.Scheduler, monix.execution.cancelables.StackedCancelable, monix.eval.Task<A>, monix.eval.Callback<A>, scala.collection.immutable.List<scala.Function1<java.lang.Object, monix.eval.Task<java.lang.Object>>>);
    Code:
       0: aload_2
       1: invokevirtual #424                // Method monix/execution/cancelables/StackedCancelable.isCanceled:()Z
       4: ifne          25
       7: aload_1
       8: new           #426                // class monix/eval/Task$$anon$35
      11: dup
      12: aload_1
      13: aload_2
      14: aload_3
      15: aload         4
      17: aload         5
      19: invokespecial #428                // Method monix/eval/Task$$anon$35."<init>":(Lmonix/execution/Scheduler;Lmonix/execution/cancelables/StackedCancelable;Lmonix/eval/Task;Lmonix/eval/Callback;Lscala/collection/immutable/List;)V
      22: invokevirtual #434                // Method monix/execution/Scheduler.execute:(Ljava/lang/Runnable;)V
      25: return

  public void runLoop(monix.execution.Scheduler, monix.execution.schedulers.ExecutionModel, monix.execution.cancelables.StackedCancelable, monix.eval.Task<java.lang.Object>, monix.eval.Callback<java.lang.Object>, scala.collection.immutable.List<scala.Function1<java.lang.Object, monix.eval.Task<java.lang.Object>>>, int);
    Code:
       0: iload         7
       2: iconst_0
       3: if_icmpeq     96
       6: goto          123
       9: astore        49
      11: aload         49
      13: astore        50
      15: getstatic     #443                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
      18: aload         50
      20: invokevirtual #447                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
      23: astore        51
      25: aload         51
      27: invokevirtual #450                // Method scala/Option.isEmpty:()Z
      30: ifeq          36
      33: aload         49
      35: athrow
      36: aload         51
      38: invokevirtual #163                // Method scala/Option.get:()Ljava/lang/Object;
      41: checkcast     #452                // class java/lang/Throwable
      44: astore        52
      46: aload_0
      47: aload         52
      49: invokevirtual #454                // Method raiseError:(Ljava/lang/Throwable;)Lmonix/eval/Task;
      52: astore        53
      54: aload         53
      56: astore        48
      58: aload_1
      59: aload_2
      60: aload_3
      61: aload         48
      63: aload         5
      65: aload         47
      67: astore        54
      69: aload         6
      71: aload         54
      73: invokevirtual #460                // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
      76: aload_2
      77: iload         7
      79: invokevirtual #466                // Method monix/execution/schedulers/ExecutionModel.nextFrameIndex:(I)I
      82: istore        7
      84: astore        6
      86: astore        5
      88: astore        4
      90: astore_3
      91: astore_2
      92: astore_1
      93: goto          0
      96: aload_0
      97: aload         4
      99: invokespecial #468                // Method isNextAsync:(Lmonix/eval/Task;)Z
     102: ifne          123
     105: aload_0
     106: aload_1
     107: aload_3
     108: aload         4
     110: aload         5
     112: aload         6
     114: invokevirtual #406                // Method monix$eval$Task$$startTrampolineAsync:(Lmonix/execution/Scheduler;Lmonix/execution/cancelables/StackedCancelable;Lmonix/eval/Task;Lmonix/eval/Callback;Lscala/collection/immutable/List;)V
     117: getstatic     #474                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     120: goto          825
     123: aload         4
     125: astore        9
     127: aload         9
     129: instanceof    #47                 // class monix/eval/Task$Delay
     132: ifeq          404
     135: aload         9
     137: checkcast     #47                 // class monix/eval/Task$Delay
     140: astore        10
     142: aload         10
     144: invokevirtual #477                // Method monix/eval/Task$Delay.coeval:()Lmonix/eval/Coeval;
     147: astore        11
     149: aload         6
     151: astore        13
     153: getstatic     #402                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
     156: aload         13
     158: invokevirtual #481                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     161: ifeq          181
     164: aload         5
     166: aload         11
     168: invokeinterface #485,  2          // InterfaceMethod monix/eval/Callback.apply:(Lmonix/eval/Coeval;)V
     173: getstatic     #474                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     176: astore        14
     178: goto          376
     181: aload         13
     183: instanceof    #487                // class scala/collection/immutable/$colon$colon
     186: ifeq          394
     189: aload         13
     191: checkcast     #487                // class scala/collection/immutable/$colon$colon
     194: astore        15
     196: aload         15
     198: invokevirtual #490                // Method scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
     201: checkcast     #492                // class scala/Function1
     204: astore        16
     206: aload         15
     208: invokevirtual #496                // Method scala/collection/immutable/$colon$colon.tl$1:()Lscala/collection/immutable/List;
     211: astore        17
     213: aload         11
     215: invokevirtual #502                // Method monix/eval/Coeval.runAttempt:()Lmonix/eval/Coeval$Attempt;
     218: astore        18
     220: aload         18
     222: instanceof    #49                 // class monix/eval/Coeval$Now
     225: ifeq          335
     228: aload         18
     230: checkcast     #49                 // class monix/eval/Coeval$Now
     233: astore        19
     235: aload         19
     237: invokevirtual #504                // Method monix/eval/Coeval$Now.value:()Ljava/lang/Object;
     240: astore        20
     242: aload         16
     244: aload         20
     246: invokeinterface #507,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     251: checkcast     #182                // class monix/eval/Task
     254: goto          304
     257: astore        23
     259: aload         23
     261: astore        24
     263: getstatic     #443                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
     266: aload         24
     268: invokevirtual #447                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
     271: astore        25
     273: aload         25
     275: invokevirtual #450                // Method scala/Option.isEmpty:()Z
     278: ifeq          284
     281: aload         23
     283: athrow
     284: aload         25
     286: invokevirtual #163                // Method scala/Option.get:()Ljava/lang/Object;
     289: checkcast     #452                // class java/lang/Throwable
     292: astore        26
     294: aload_0
     295: aload         26
     297: invokevirtual #454                // Method raiseError:(Ljava/lang/Throwable;)Lmonix/eval/Task;
     300: astore        27
     302: aload         27
     304: astore        22
     306: aload_1
     307: aload_2
     308: aload_3
     309: aload         22
     311: aload         5
     313: aload         17
     315: aload_2
     316: iload         7
     318: invokevirtual #466                // Method monix/execution/schedulers/ExecutionModel.nextFrameIndex:(I)I
     321: istore        7
     323: astore        6
     325: astore        5
     327: astore        4
     329: astore_3
     330: astore_2
     331: astore_1
     332: goto          0
     335: aload         18
     337: instanceof    #64                 // class monix/eval/Coeval$Error
     340: ifeq          384
     343: aload         18
     345: checkcast     #64                 // class monix/eval/Coeval$Error
     348: astore        28
     350: aload         28
     352: invokevirtual #510                // Method monix/eval/Coeval$Error.ex:()Ljava/lang/Throwable;
     355: astore        29
     357: aload         5
     359: aload         29
     361: invokeinterface #513,  2          // InterfaceMethod monix/eval/Callback.onError:(Ljava/lang/Throwable;)V
     366: getstatic     #474                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     369: astore        21
     371: getstatic     #474                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     374: astore        14
     376: getstatic     #474                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     379: astore        12
     381: goto          822
     384: new           #515                // class scala/MatchError
     387: dup
     388: aload         18
     390: invokespecial #516                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     393: athrow
     394: new           #515                // class scala/MatchError
     397: dup
     398: aload         13
     400: invokespecial #516                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     403: athrow
     404: aload         9
     406: instanceof    #72                 // class monix/eval/Task$Suspend
     409: ifeq          517
     412: aload         9
     414: checkcast     #72                 // class monix/eval/Task$Suspend
     417: astore        30
     419: aload         30
     421: invokevirtual #520                // Method monix/eval/Task$Suspend.thunk:()Lscala/Function0;
     424: astore        31
     426: aload         31
     428: invokeinterface #524,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
     433: checkcast     #182                // class monix/eval/Task
     436: goto          486
     439: astore        33
     441: aload         33
     443: astore        34
     445: getstatic     #443                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
     448: aload         34
     450: invokevirtual #447                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
     453: astore        35
     455: aload         35
     457: invokevirtual #450                // Method scala/Option.isEmpty:()Z
     460: ifeq          466
     463: aload         33
     465: athrow
     466: aload         35
     468: invokevirtual #163                // Method scala/Option.get:()Ljava/lang/Object;
     471: checkcast     #452                // class java/lang/Throwable
     474: astore        36
     476: aload_0
     477: aload         36
     479: invokevirtual #454                // Method raiseError:(Ljava/lang/Throwable;)Lmonix/eval/Task;
     482: astore        37
     484: aload         37
     486: astore        32
     488: aload_1
     489: aload_2
     490: aload_3
     491: aload         32
     493: aload         5
     495: aload         6
     497: aload_2
     498: iload         7
     500: invokevirtual #466                // Method monix/execution/schedulers/ExecutionModel.nextFrameIndex:(I)I
     503: istore        7
     505: astore        6
     507: astore        5
     509: astore        4
     511: astore_3
     512: astore_2
     513: astore_1
     514: goto          0
     517: aload         9
     519: instanceof    #526                // class monix/eval/Task$MemoizeSuspend
     522: ifeq          683
     525: aload         9
     527: checkcast     #526                // class monix/eval/Task$MemoizeSuspend
     530: astore        38
     532: aload_2
     533: iload         7
     535: invokevirtual #466                // Method monix/execution/schedulers/ExecutionModel.nextFrameIndex:(I)I
     538: istore        39
     540: aload         38
     542: invokevirtual #527                // Method monix/eval/Task$MemoizeSuspend.value:()Lscala/Option;
     545: astore        40
     547: aload         40
     549: instanceof    #529                // class scala/Some
     552: ifeq          601
     555: aload         40
     557: checkcast     #529                // class scala/Some
     560: astore        41
     562: aload         41
     564: invokevirtual #532                // Method scala/Some.x:()Ljava/lang/Object;
     567: checkcast     #534                // class monix/eval/Coeval$Attempt
     570: astore        42
     572: aload_1
     573: aload_2
     574: aload_3
     575: aload_0
     576: aload         42
     578: invokevirtual #536                // Method coeval:(Lmonix/eval/Coeval;)Lmonix/eval/Task;
     581: aload         5
     583: aload         6
     585: iload         39
     587: istore        7
     589: astore        6
     591: astore        5
     593: astore        4
     595: astore_3
     596: astore_2
     597: astore_1
     598: goto          0
     601: getstatic     #541                // Field scala/None$.MODULE$:Lscala/None$;
     604: aload         40
     606: invokevirtual #481                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     609: ifeq          673
     612: aload         4
     614: checkcast     #526                // class monix/eval/Task$MemoizeSuspend
     617: aload_3
     618: aload         5
     620: aload         6
     622: iload         39
     624: aload_1
     625: invokevirtual #544                // Method monix/eval/Task$MemoizeSuspend.execute:(Lmonix/execution/cancelables/StackedCancelable;Lmonix/eval/Callback;Lscala/collection/immutable/List;ILmonix/execution/Scheduler;)Z
     628: istore        44
     630: iload         44
     632: ifeq          648
     635: getstatic     #474                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     638: astore        43
     640: getstatic     #474                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     643: astore        12
     645: goto          822
     648: aload_1
     649: aload_2
     650: aload_3
     651: aload         4
     653: aload         5
     655: aload         6
     657: iload         39
     659: istore        7
     661: astore        6
     663: astore        5
     665: astore        4
     667: astore_3
     668: astore_2
     669: astore_1
     670: goto          0
     673: new           #515                // class scala/MatchError
     676: dup
     677: aload         40
     679: invokespecial #516                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     682: athrow
     683: aload         9
     685: instanceof    #546                // class monix/eval/Task$BindSuspend
     688: ifeq          725
     691: aload         9
     693: checkcast     #546                // class monix/eval/Task$BindSuspend
     696: astore        45
     698: aload         45
     700: invokevirtual #547                // Method monix/eval/Task$BindSuspend.thunk:()Lscala/Function0;
     703: astore        46
     705: aload         45
     707: invokevirtual #550                // Method monix/eval/Task$BindSuspend.f:()Lscala/Function1;
     710: astore        47
     712: aload         46
     714: invokeinterface #524,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
     719: checkcast     #182                // class monix/eval/Task
     722: goto          56
     725: aload         9
     727: instanceof    #419                // class monix/eval/Task$BindAsync
     730: ifeq          783
     733: aload         9
     735: checkcast     #419                // class monix/eval/Task$BindAsync
     738: astore        55
     740: aload         55
     742: invokevirtual #553                // Method monix/eval/Task$BindAsync.onFinish:()Lscala/Function3;
     745: astore        56
     747: aload         55
     749: invokevirtual #554                // Method monix/eval/Task$BindAsync.f:()Lscala/Function1;
     752: astore        57
     754: aload_0
     755: aload_1
     756: aload_3
     757: aload         5
     759: aload         57
     761: astore        58
     763: aload         6
     765: aload         58
     767: invokevirtual #460                // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
     770: aload         56
     772: invokespecial #558                // Method executeOnFinish$1:(Lmonix/execution/Scheduler;Lmonix/execution/cancelables/StackedCancelable;Lmonix/eval/Callback;Lscala/collection/immutable/List;Lscala/Function3;)V
     775: getstatic     #474                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     778: astore        12
     780: goto          822
     783: aload         9
     785: instanceof    #113                // class monix/eval/Task$Async
     788: ifeq          827
     791: aload         9
     793: checkcast     #113                // class monix/eval/Task$Async
     796: astore        59
     798: aload         59
     800: invokevirtual #559                // Method monix/eval/Task$Async.onFinish:()Lscala/Function3;
     803: astore        60
     805: aload_0
     806: aload_1
     807: aload_3
     808: aload         5
     810: aload         6
     812: aload         60
     814: invokespecial #558                // Method executeOnFinish$1:(Lmonix/execution/Scheduler;Lmonix/execution/cancelables/StackedCancelable;Lmonix/eval/Callback;Lscala/collection/immutable/List;Lscala/Function3;)V
     817: getstatic     #474                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     820: astore        12
     822: getstatic     #474                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     825: pop
     826: return
     827: new           #515                // class scala/MatchError
     830: dup
     831: aload         9
     833: invokespecial #516                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     836: athrow
    Exception table:
       from    to  target type
         712   725     9   any
         426   439   439   any
         242   257   257   any

  public <A> void monix$eval$Task$$startTrampolineRunLoop(monix.execution.Scheduler, monix.execution.cancelables.StackedCancelable, monix.eval.Task<A>, monix.eval.Callback<A>, scala.collection.immutable.List<scala.Function1<java.lang.Object, monix.eval.Task<java.lang.Object>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokevirtual #573                // Method monix/execution/Scheduler.executionModel:()Lmonix/execution/schedulers/ExecutionModel;
       6: aload_2
       7: aload_3
       8: aload         4
      10: aload         5
      12: iconst_1
      13: invokevirtual #575                // Method runLoop:(Lmonix/execution/Scheduler;Lmonix/execution/schedulers/ExecutionModel;Lmonix/execution/cancelables/StackedCancelable;Lmonix/eval/Task;Lmonix/eval/Callback;Lscala/collection/immutable/List;I)V
      16: return

  public <A> monix.execution.CancelableFuture<A> monix$eval$Task$$startTrampolineForFuture(monix.execution.Scheduler, monix.eval.Task<A>, scala.collection.immutable.List<scala.Function1<java.lang.Object, monix.eval.Task<java.lang.Object>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokevirtual #573                // Method monix/execution/Scheduler.executionModel:()Lmonix/execution/schedulers/ExecutionModel;
       6: aload_2
       7: aload_3
       8: iconst_1
       9: invokespecial #581                // Method loop$1:(Lmonix/execution/Scheduler;Lmonix/execution/schedulers/ExecutionModel;Lmonix/eval/Task;Lscala/collection/immutable/List;I)Lmonix/execution/CancelableFuture;
      12: areturn

  public monix.eval.TaskInstances$TypeClassInstances typeClassInstances();
    Code:
       0: aload_0
       1: getfield      #583                // Field typeClassInstances:Lmonix/eval/TaskInstances$TypeClassInstances;
       4: areturn

  private java.lang.Object readResolve();
    Code:
       0: getstatic     #586                // Field MODULE$:Lmonix/eval/Task$;
       3: areturn

  public final void monix$eval$Task$$sendSignal$1(monix.execution.cancelables.StackedCancelable, monix.eval.Callback, java.lang.Object, java.lang.Object, monix.execution.Scheduler, scala.Function2);
    Code:
       0: iconst_1
       1: istore        7
       3: aload         6
       5: aload_3
       6: aload         4
       8: invokeinterface #593,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: astore        13
      15: iconst_0
      16: istore        7
      18: aload_1
      19: invokevirtual #597                // Method monix/execution/cancelables/StackedCancelable.pop:()Lmonix/execution/Cancelable;
      22: pop
      23: getstatic     #602                // Field monix/eval/Callback$Extensions$.MODULE$:Lmonix/eval/Callback$Extensions$;
      26: getstatic     #607                // Field monix/eval/Callback$.MODULE$:Lmonix/eval/Callback$;
      29: aload_2
      30: invokevirtual #611                // Method monix/eval/Callback$.Extensions:(Lmonix/eval/Callback;)Lmonix/eval/Callback;
      33: aload         13
      35: aload         5
      37: invokevirtual #615                // Method monix/eval/Callback$Extensions$.asyncOnSuccess$extension:(Lmonix/eval/Callback;Ljava/lang/Object;Lmonix/execution/Scheduler;)V
      40: goto          109
      43: astore        8
      45: aload         8
      47: astore        9
      49: getstatic     #443                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
      52: aload         9
      54: invokevirtual #447                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
      57: astore        10
      59: aload         10
      61: invokevirtual #450                // Method scala/Option.isEmpty:()Z
      64: ifne          110
      67: aload         10
      69: invokevirtual #163                // Method scala/Option.get:()Ljava/lang/Object;
      72: checkcast     #452                // class java/lang/Throwable
      75: astore        11
      77: iload         7
      79: ifeq          110
      82: aload_1
      83: invokevirtual #597                // Method monix/execution/cancelables/StackedCancelable.pop:()Lmonix/execution/Cancelable;
      86: pop
      87: getstatic     #602                // Field monix/eval/Callback$Extensions$.MODULE$:Lmonix/eval/Callback$Extensions$;
      90: getstatic     #607                // Field monix/eval/Callback$.MODULE$:Lmonix/eval/Callback$;
      93: aload_2
      94: invokevirtual #611                // Method monix/eval/Callback$.Extensions:(Lmonix/eval/Callback;)Lmonix/eval/Callback;
      97: aload         11
      99: aload         5
     101: invokevirtual #619                // Method monix/eval/Callback$Extensions$.asyncOnError$extension:(Lmonix/eval/Callback;Ljava/lang/Throwable;Lmonix/execution/Scheduler;)V
     104: getstatic     #474                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     107: astore        12
     109: return
     110: aload         8
     112: athrow
    Exception table:
       from    to  target type
           3    43    43   any

  public final void monix$eval$Task$$sendError$1(monix.execution.cancelables.StackedCancelable, monix.execution.atomic.AtomicAny, monix.eval.Callback, java.lang.Throwable, monix.execution.Scheduler);
    Code:
       0: aload_2
       1: invokevirtual #629                // Method monix/execution/atomic/AtomicAny.get:()Ljava/lang/Object;
       4: astore        7
       6: getstatic     #634                // Field monix/execution/Ack$Stop$.MODULE$:Lmonix/execution/Ack$Stop$;
       9: aload         7
      11: invokevirtual #481                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      14: ifeq          32
      17: aload         5
      19: aload         4
      21: invokevirtual #637                // Method monix/execution/Scheduler.reportFailure:(Ljava/lang/Throwable;)V
      24: getstatic     #474                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      27: astore        8
      29: goto          75
      32: aload_2
      33: aload         7
      35: getstatic     #634                // Field monix/execution/Ack$Stop$.MODULE$:Lmonix/execution/Ack$Stop$;
      38: invokevirtual #641                // Method monix/execution/atomic/AtomicAny.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      41: ifeq          80
      44: aload_1
      45: invokevirtual #597                // Method monix/execution/cancelables/StackedCancelable.pop:()Lmonix/execution/Cancelable;
      48: invokeinterface #644,  1          // InterfaceMethod monix/execution/Cancelable.cancel:()V
      53: getstatic     #602                // Field monix/eval/Callback$Extensions$.MODULE$:Lmonix/eval/Callback$Extensions$;
      56: getstatic     #607                // Field monix/eval/Callback$.MODULE$:Lmonix/eval/Callback$;
      59: aload_3
      60: invokevirtual #611                // Method monix/eval/Callback$.Extensions:(Lmonix/eval/Callback;)Lmonix/eval/Callback;
      63: aload         4
      65: aload         5
      67: invokevirtual #619                // Method monix/eval/Callback$Extensions$.asyncOnError$extension:(Lmonix/eval/Callback;Ljava/lang/Throwable;Lmonix/execution/Scheduler;)V
      70: getstatic     #474                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      73: astore        8
      75: getstatic     #474                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      78: pop
      79: return
      80: aload_1
      81: aload_2
      82: aload_3
      83: aload         4
      85: aload         5
      87: astore        5
      89: astore        4
      91: astore_3
      92: astore_2
      93: astore_1
      94: goto          0

  private final void executeOnFinish$1(monix.execution.Scheduler, monix.execution.cancelables.StackedCancelable, monix.eval.Callback, scala.collection.immutable.List, scala.Function3);
    Code:
       0: aload_2
       1: invokevirtual #424                // Method monix/execution/cancelables/StackedCancelable.isCanceled:()Z
       4: ifne          29
       7: aload         5
       9: aload_1
      10: aload_2
      11: new           #648                // class monix/eval/Task$$anon$20
      14: dup
      15: aload_1
      16: aload_2
      17: aload_3
      18: aload         4
      20: invokespecial #651                // Method monix/eval/Task$$anon$20."<init>":(Lmonix/execution/Scheduler;Lmonix/execution/cancelables/StackedCancelable;Lmonix/eval/Callback;Lscala/collection/immutable/List;)V
      23: invokeinterface #656,  4          // InterfaceMethod scala/Function3.apply:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      28: pop
      29: return

  private final monix.execution.CancelableFuture goAsync$1(monix.execution.Scheduler, monix.eval.Task, scala.collection.immutable.List, boolean);
    Code:
       0: getstatic     #664                // Field scala/concurrent/Promise$.MODULE$:Lscala/concurrent/Promise$;
       3: invokevirtual #667                // Method scala/concurrent/Promise$.apply:()Lscala/concurrent/Promise;
       6: astore        5
       8: new           #669                // class monix/eval/Task$$anon$21
      11: dup
      12: aload         5
      14: invokespecial #672                // Method monix/eval/Task$$anon$21."<init>":(Lscala/concurrent/Promise;)V
      17: astore        6
      19: getstatic     #677                // Field monix/execution/cancelables/StackedCancelable$.MODULE$:Lmonix/execution/cancelables/StackedCancelable$;
      22: invokevirtual #680                // Method monix/execution/cancelables/StackedCancelable$.apply:()Lmonix/execution/cancelables/StackedCancelable;
      25: astore        7
      27: iload         4
      29: ifeq          46
      32: aload_0
      33: aload_1
      34: aload         7
      36: aload_2
      37: aload         6
      39: aload_3
      40: invokevirtual #415                // Method monix$eval$Task$$startTrampolineRunLoop:(Lmonix/execution/Scheduler;Lmonix/execution/cancelables/StackedCancelable;Lmonix/eval/Task;Lmonix/eval/Callback;Lscala/collection/immutable/List;)V
      43: goto          57
      46: aload_0
      47: aload_1
      48: aload         7
      50: aload_2
      51: aload         6
      53: aload_3
      54: invokevirtual #406                // Method monix$eval$Task$$startTrampolineAsync:(Lmonix/execution/Scheduler;Lmonix/execution/cancelables/StackedCancelable;Lmonix/eval/Task;Lmonix/eval/Callback;Lscala/collection/immutable/List;)V
      57: getstatic     #685                // Field monix/execution/CancelableFuture$.MODULE$:Lmonix/execution/CancelableFuture$;
      60: aload         5
      62: invokeinterface #691,  1          // InterfaceMethod scala/concurrent/Promise.future:()Lscala/concurrent/Future;
      67: aload         7
      69: invokevirtual #694                // Method monix/execution/CancelableFuture$.apply:(Lscala/concurrent/Future;Lmonix/execution/Cancelable;)Lmonix/execution/CancelableFuture;
      72: areturn

  private final monix.execution.CancelableFuture loop$1(monix.execution.Scheduler, monix.execution.schedulers.ExecutionModel, monix.eval.Task, scala.collection.immutable.List, int);
    Code:
       0: iload         5
       2: iconst_0
       3: if_icmpeq     89
       6: goto          109
       9: astore        40
      11: aload         40
      13: astore        41
      15: getstatic     #443                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
      18: aload         41
      20: invokevirtual #447                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
      23: astore        42
      25: aload         42
      27: invokevirtual #450                // Method scala/Option.isEmpty:()Z
      30: ifeq          36
      33: aload         40
      35: athrow
      36: aload         42
      38: invokevirtual #163                // Method scala/Option.get:()Ljava/lang/Object;
      41: checkcast     #452                // class java/lang/Throwable
      44: astore        43
      46: aload_0
      47: aload         43
      49: invokevirtual #454                // Method raiseError:(Ljava/lang/Throwable;)Lmonix/eval/Task;
      52: astore        44
      54: aload         44
      56: astore        39
      58: aload_1
      59: aload_2
      60: aload         39
      62: aload         38
      64: astore        45
      66: aload         4
      68: aload         45
      70: invokevirtual #460                // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
      73: aload_2
      74: iload         5
      76: invokevirtual #466                // Method monix/execution/schedulers/ExecutionModel.nextFrameIndex:(I)I
      79: istore        5
      81: astore        4
      83: astore_3
      84: astore_2
      85: astore_1
      86: goto          0
      89: aload_0
      90: aload_3
      91: invokespecial #468                // Method isNextAsync:(Lmonix/eval/Task;)Z
      94: ifne          109
      97: aload_0
      98: aload_1
      99: aload_3
     100: aload         4
     102: iconst_0
     103: invokespecial #698                // Method goAsync$1:(Lmonix/execution/Scheduler;Lmonix/eval/Task;Lscala/collection/immutable/List;Z)Lmonix/execution/CancelableFuture;
     106: goto          650
     109: aload_3
     110: astore        7
     112: aload         7
     114: instanceof    #47                 // class monix/eval/Task$Delay
     117: ifeq          372
     120: aload         7
     122: checkcast     #47                 // class monix/eval/Task$Delay
     125: astore        8
     127: aload         8
     129: invokevirtual #477                // Method monix/eval/Task$Delay.coeval:()Lmonix/eval/Coeval;
     132: astore        9
     134: aload         9
     136: invokevirtual #502                // Method monix/eval/Coeval.runAttempt:()Lmonix/eval/Coeval$Attempt;
     139: astore        11
     141: aload         11
     143: instanceof    #64                 // class monix/eval/Coeval$Error
     146: ifeq          176
     149: aload         11
     151: checkcast     #64                 // class monix/eval/Coeval$Error
     154: astore        12
     156: aload         12
     158: invokevirtual #510                // Method monix/eval/Coeval$Error.ex:()Ljava/lang/Throwable;
     161: astore        13
     163: getstatic     #685                // Field monix/execution/CancelableFuture$.MODULE$:Lmonix/execution/CancelableFuture$;
     166: aload         13
     168: invokevirtual #702                // Method monix/execution/CancelableFuture$.failed:(Ljava/lang/Throwable;)Lmonix/execution/CancelableFuture;
     171: astore        14
     173: goto          227
     176: aload         11
     178: instanceof    #49                 // class monix/eval/Coeval$Now
     181: ifeq          362
     184: aload         11
     186: checkcast     #49                 // class monix/eval/Coeval$Now
     189: astore        15
     191: aload         15
     193: invokevirtual #504                // Method monix/eval/Coeval$Now.value:()Ljava/lang/Object;
     196: astore        16
     198: aload         4
     200: astore        17
     202: getstatic     #402                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
     205: aload         17
     207: invokevirtual #481                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     210: ifeq          234
     213: getstatic     #685                // Field monix/execution/CancelableFuture$.MODULE$:Lmonix/execution/CancelableFuture$;
     216: aload         16
     218: invokevirtual #706                // Method monix/execution/CancelableFuture$.successful:(Ljava/lang/Object;)Lmonix/execution/CancelableFuture;
     221: astore        18
     223: aload         18
     225: astore        14
     227: aload         14
     229: astore        10
     231: goto          648
     234: aload         17
     236: instanceof    #487                // class scala/collection/immutable/$colon$colon
     239: ifeq          352
     242: aload         17
     244: checkcast     #487                // class scala/collection/immutable/$colon$colon
     247: astore        19
     249: aload         19
     251: invokevirtual #490                // Method scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
     254: checkcast     #492                // class scala/Function1
     257: astore        20
     259: aload         19
     261: invokevirtual #496                // Method scala/collection/immutable/$colon$colon.tl$1:()Lscala/collection/immutable/List;
     264: astore        21
     266: aload         20
     268: aload         16
     270: invokeinterface #507,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     275: checkcast     #182                // class monix/eval/Task
     278: goto          328
     281: astore        23
     283: aload         23
     285: astore        24
     287: getstatic     #443                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
     290: aload         24
     292: invokevirtual #447                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
     295: astore        25
     297: aload         25
     299: invokevirtual #450                // Method scala/Option.isEmpty:()Z
     302: ifeq          308
     305: aload         23
     307: athrow
     308: aload         25
     310: invokevirtual #163                // Method scala/Option.get:()Ljava/lang/Object;
     313: checkcast     #452                // class java/lang/Throwable
     316: astore        26
     318: aload_0
     319: aload         26
     321: invokevirtual #454                // Method raiseError:(Ljava/lang/Throwable;)Lmonix/eval/Task;
     324: astore        27
     326: aload         27
     328: astore        22
     330: aload_1
     331: aload_2
     332: aload         22
     334: aload         21
     336: aload_2
     337: iload         5
     339: invokevirtual #466                // Method monix/execution/schedulers/ExecutionModel.nextFrameIndex:(I)I
     342: istore        5
     344: astore        4
     346: astore_3
     347: astore_2
     348: astore_1
     349: goto          0
     352: new           #515                // class scala/MatchError
     355: dup
     356: aload         17
     358: invokespecial #516                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     361: athrow
     362: new           #515                // class scala/MatchError
     365: dup
     366: aload         11
     368: invokespecial #516                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     371: athrow
     372: aload         7
     374: instanceof    #72                 // class monix/eval/Task$Suspend
     377: ifeq          478
     380: aload         7
     382: checkcast     #72                 // class monix/eval/Task$Suspend
     385: astore        28
     387: aload         28
     389: invokevirtual #520                // Method monix/eval/Task$Suspend.thunk:()Lscala/Function0;
     392: astore        29
     394: aload         29
     396: invokeinterface #524,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
     401: checkcast     #182                // class monix/eval/Task
     404: goto          454
     407: astore        31
     409: aload         31
     411: astore        32
     413: getstatic     #443                // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
     416: aload         32
     418: invokevirtual #447                // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
     421: astore        33
     423: aload         33
     425: invokevirtual #450                // Method scala/Option.isEmpty:()Z
     428: ifeq          434
     431: aload         31
     433: athrow
     434: aload         33
     436: invokevirtual #163                // Method scala/Option.get:()Ljava/lang/Object;
     439: checkcast     #452                // class java/lang/Throwable
     442: astore        34
     444: aload_0
     445: aload         34
     447: invokevirtual #454                // Method raiseError:(Ljava/lang/Throwable;)Lmonix/eval/Task;
     450: astore        35
     452: aload         35
     454: astore        30
     456: aload_1
     457: aload_2
     458: aload         30
     460: aload         4
     462: aload_2
     463: iload         5
     465: invokevirtual #466                // Method monix/execution/schedulers/ExecutionModel.nextFrameIndex:(I)I
     468: istore        5
     470: astore        4
     472: astore_3
     473: astore_2
     474: astore_1
     475: goto          0
     478: aload         7
     480: instanceof    #546                // class monix/eval/Task$BindSuspend
     483: ifeq          520
     486: aload         7
     488: checkcast     #546                // class monix/eval/Task$BindSuspend
     491: astore        36
     493: aload         36
     495: invokevirtual #547                // Method monix/eval/Task$BindSuspend.thunk:()Lscala/Function0;
     498: astore        37
     500: aload         36
     502: invokevirtual #550                // Method monix/eval/Task$BindSuspend.f:()Lscala/Function1;
     505: astore        38
     507: aload         37
     509: invokeinterface #524,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
     514: checkcast     #182                // class monix/eval/Task
     517: goto          56
     520: aload         7
     522: instanceof    #526                // class monix/eval/Task$MemoizeSuspend
     525: ifeq          636
     528: aload         7
     530: checkcast     #526                // class monix/eval/Task$MemoizeSuspend
     533: astore        46
     535: aload         46
     537: astore        47
     539: aload         47
     541: invokevirtual #527                // Method monix/eval/Task$MemoizeSuspend.value:()Lscala/Option;
     544: astore        48
     546: aload         48
     548: instanceof    #529                // class scala/Some
     551: ifeq          597
     554: aload         48
     556: checkcast     #529                // class scala/Some
     559: astore        49
     561: aload         49
     563: invokevirtual #532                // Method scala/Some.x:()Ljava/lang/Object;
     566: checkcast     #534                // class monix/eval/Coeval$Attempt
     569: astore        50
     571: aload_1
     572: aload_2
     573: aload_0
     574: aload         50
     576: invokevirtual #536                // Method coeval:(Lmonix/eval/Coeval;)Lmonix/eval/Task;
     579: aload         4
     581: aload_2
     582: iload         5
     584: invokevirtual #466                // Method monix/execution/schedulers/ExecutionModel.nextFrameIndex:(I)I
     587: istore        5
     589: astore        4
     591: astore_3
     592: astore_2
     593: astore_1
     594: goto          0
     597: getstatic     #541                // Field scala/None$.MODULE$:Lscala/None$;
     600: aload         48
     602: invokevirtual #481                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     605: ifeq          626
     608: aload_0
     609: aload_1
     610: aload_3
     611: aload         4
     613: iconst_1
     614: invokespecial #698                // Method goAsync$1:(Lmonix/execution/Scheduler;Lmonix/eval/Task;Lscala/collection/immutable/List;Z)Lmonix/execution/CancelableFuture;
     617: astore        51
     619: aload         51
     621: astore        10
     623: goto          648
     626: new           #515                // class scala/MatchError
     629: dup
     630: aload         48
     632: invokespecial #516                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     635: athrow
     636: aload_0
     637: aload_1
     638: aload         7
     640: aload         4
     642: iconst_1
     643: invokespecial #698                // Method goAsync$1:(Lmonix/execution/Scheduler;Lmonix/eval/Task;Lscala/collection/immutable/List;Z)Lmonix/execution/CancelableFuture;
     646: astore        10
     648: aload         10
     650: areturn
    Exception table:
       from    to  target type
         507   520     9   any
         394   407   407   any
         266   281   281   any

  private monix.eval.Task$();
    Code:
       0: aload_0
       1: invokespecial #711                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #586                // Field MODULE$:Lmonix/eval/Task$;
       8: aload_0
       9: invokestatic  #717                // Method monix/eval/TaskInstances$class.$init$:(Lmonix/eval/TaskInstances;)V
      12: aload_0
      13: new           #113                // class monix/eval/Task$Async
      16: dup
      17: new           #719                // class monix/eval/Task$$anonfun$1
      20: dup
      21: invokespecial #720                // Method monix/eval/Task$$anonfun$1."<init>":()V
      24: invokespecial #121                // Method monix/eval/Task$Async."<init>":(Lscala/Function3;)V
      27: putfield      #95                 // Field neverRef:Lmonix/eval/Task$Async;
      30: aload_0
      31: new           #47                 // class monix/eval/Task$Delay
      34: dup
      35: getstatic     #102                // Field monix/eval/Coeval$.MODULE$:Lmonix/eval/Coeval$;
      38: invokevirtual #722                // Method monix/eval/Coeval$.unit:()Lmonix/eval/Coeval;
      41: invokespecial #55                 // Method monix/eval/Task$Delay."<init>":(Lmonix/eval/Coeval;)V
      44: putfield      #108                // Field unit:Lmonix/eval/Task;
      47: aload_0
      48: new           #724                // class monix/eval/TaskInstances$TypeClassInstances
      51: dup
      52: aload_0
      53: invokespecial #726                // Method monix/eval/TaskInstances$TypeClassInstances."<init>":(Lmonix/eval/TaskInstances;)V
      56: putfield      #583                // Field typeClassInstances:Lmonix/eval/TaskInstances$TypeClassInstances;
      59: return
}
