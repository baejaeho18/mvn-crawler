Compiled from "TokenFileAuthentication.java"
public class io.kubernetes.client.util.credentials.TokenFileAuthentication implements io.kubernetes.client.util.credentials.Authentication,okhttp3.Interceptor {
  private java.lang.String file;

  private java.lang.String token;

  private java.time.Instant expiry;

  public io.kubernetes.client.util.credentials.TokenFileAuthentication(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field java/time/Instant.MIN:Ljava/time/Instant;
       8: putfield      #3                  // Field expiry:Ljava/time/Instant;
      11: aload_0
      12: aload_1
      13: putfield      #4                  // Field file:Ljava/lang/String;
      16: return

  private java.lang.String getToken();
    Code:
       0: invokestatic  #5                  // Method java/time/Instant.now:()Ljava/time/Instant;
       3: aload_0
       4: getfield      #3                  // Field expiry:Ljava/time/Instant;
       7: invokevirtual #6                  // Method java/time/Instant.isAfter:(Ljava/time/Instant;)Z
      10: ifeq          91
      13: aload_0
      14: new           #7                  // class java/lang/String
      17: dup
      18: aload_0
      19: getfield      #4                  // Field file:Ljava/lang/String;
      22: iconst_0
      23: anewarray     #7                  // class java/lang/String
      26: invokestatic  #8                  // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
      29: invokestatic  #9                  // Method java/nio/file/Files.readAllBytes:(Ljava/nio/file/Path;)[B
      32: invokestatic  #10                 // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
      35: invokespecial #11                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      38: invokevirtual #12                 // Method java/lang/String.trim:()Ljava/lang/String;
      41: putfield      #13                 // Field token:Ljava/lang/String;
      44: aload_0
      45: invokestatic  #5                  // Method java/time/Instant.now:()Ljava/time/Instant;
      48: ldc2_w        #14                 // long 60l
      51: invokevirtual #16                 // Method java/time/Instant.plusSeconds:(J)Ljava/time/Instant;
      54: putfield      #3                  // Field expiry:Ljava/time/Instant;
      57: goto          91
      60: astore_1
      61: new           #18                 // class java/lang/RuntimeException
      64: dup
      65: new           #19                 // class java/lang/StringBuilder
      68: dup
      69: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      72: ldc           #21                 // String Cannot read file:
      74: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_0
      78: getfield      #4                  // Field file:Ljava/lang/String;
      81: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: invokespecial #24                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      90: athrow
      91: aload_0
      92: getfield      #13                 // Field token:Ljava/lang/String;
      95: areturn
    Exception table:
       from    to  target type
          13    57    60   Class java/io/IOException

  public void setExpiry(java.time.Instant);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field expiry:Ljava/time/Instant;
       5: return

  public void setFile(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field file:Ljava/lang/String;
       5: return

  public void provide(io.kubernetes.client.openapi.ApiClient);
    Code:
       0: aload_1
       1: invokevirtual #25                 // Method io/kubernetes/client/openapi/ApiClient.getHttpClient:()Lokhttp3/OkHttpClient;
       4: invokevirtual #26                 // Method okhttp3/OkHttpClient.newBuilder:()Lokhttp3/OkHttpClient$Builder;
       7: aload_0
       8: invokevirtual #27                 // Method okhttp3/OkHttpClient$Builder.addInterceptor:(Lokhttp3/Interceptor;)Lokhttp3/OkHttpClient$Builder;
      11: invokevirtual #28                 // Method okhttp3/OkHttpClient$Builder.build:()Lokhttp3/OkHttpClient;
      14: astore_2
      15: aload_1
      16: aload_2
      17: invokevirtual #29                 // Method io/kubernetes/client/openapi/ApiClient.setHttpClient:(Lokhttp3/OkHttpClient;)Lio/kubernetes/client/openapi/ApiClient;
      20: pop
      21: return

  public okhttp3.Response intercept(okhttp3.Interceptor$Chain) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #30,  1           // InterfaceMethod okhttp3/Interceptor$Chain.request:()Lokhttp3/Request;
       6: astore_2
       7: aload_2
       8: invokevirtual #31                 // Method okhttp3/Request.newBuilder:()Lokhttp3/Request$Builder;
      11: ldc           #32                 // String Authorization
      13: new           #19                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #33                 // String Bearer
      22: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_0
      26: invokespecial #34                 // Method getToken:()Ljava/lang/String;
      29: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokevirtual #35                 // Method okhttp3/Request$Builder.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;
      38: invokevirtual #36                 // Method okhttp3/Request$Builder.build:()Lokhttp3/Request;
      41: astore_3
      42: aload_1
      43: aload_3
      44: invokeinterface #37,  2           // InterfaceMethod okhttp3/Interceptor$Chain.proceed:(Lokhttp3/Request;)Lokhttp3/Response;
      49: areturn
}
