Compiled from "BKStateStoreImpl.java"
public class org.apache.pulsar.functions.instance.state.BKStateStoreImpl implements org.apache.pulsar.functions.instance.state.DefaultStateStore {
  private final java.lang.String tenant;

  private final java.lang.String namespace;

  private final java.lang.String name;

  private final java.lang.String fqsn;

  private final org.apache.bookkeeper.api.kv.Table<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf> table;

  public org.apache.pulsar.functions.instance.state.BKStateStoreImpl(java.lang.String, java.lang.String, java.lang.String, org.apache.bookkeeper.api.kv.Table<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field tenant:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field namespace:Ljava/lang/String;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field name:Ljava/lang/String;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field table:Lorg/apache/bookkeeper/api/kv/Table;
      25: aload_0
      26: aload_1
      27: aload_2
      28: aload_3
      29: invokestatic  #6                  // Method org/apache/pulsar/functions/utils/FunctionCommon.getFullyQualifiedName:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      32: putfield      #7                  // Field fqsn:Ljava/lang/String;
      35: return

  public java.lang.String tenant();
    Code:
       0: aload_0
       1: getfield      #2                  // Field tenant:Ljava/lang/String;
       4: areturn

  public java.lang.String namespace();
    Code:
       0: aload_0
       1: getfield      #3                  // Field namespace:Ljava/lang/String;
       4: areturn

  public java.lang.String name();
    Code:
       0: aload_0
       1: getfield      #4                  // Field name:Ljava/lang/String;
       4: areturn

  public java.lang.String fqsn();
    Code:
       0: aload_0
       1: getfield      #7                  // Field fqsn:Ljava/lang/String;
       4: areturn

  public void init(org.apache.pulsar.functions.api.StateStoreContext);
    Code:
       0: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #5                  // Field table:Lorg/apache/bookkeeper/api/kv/Table;
       4: invokeinterface #8,  1            // InterfaceMethod org/apache/bookkeeper/api/kv/Table.close:()V
       9: return

  public java.util.concurrent.CompletableFuture<java.lang.Void> incrCounterAsync(java.lang.String, long);
    Code:
       0: aload_0
       1: getfield      #5                  // Field table:Lorg/apache/bookkeeper/api/kv/Table;
       4: aload_1
       5: getstatic     #9                  // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       8: invokevirtual #10                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      11: invokestatic  #11                 // Method io/netty/buffer/Unpooled.wrappedBuffer:([B)Lio/netty/buffer/ByteBuf;
      14: lload_2
      15: invokeinterface #12,  4           // InterfaceMethod org/apache/bookkeeper/api/kv/Table.increment:(Ljava/lang/Object;J)Ljava/util/concurrent/CompletableFuture;
      20: areturn

  public void incrCounter(java.lang.String, long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: invokevirtual #13                 // Method incrCounterAsync:(Ljava/lang/String;J)Ljava/util/concurrent/CompletableFuture;
       6: invokestatic  #14                 // Method org/apache/bookkeeper/common/concurrent/FutureUtils.result:(Ljava/util/concurrent/CompletableFuture;)Ljava/lang/Object;
       9: pop
      10: goto          58
      13: astore        4
      15: new           #16                 // class java/lang/RuntimeException
      18: dup
      19: new           #17                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #19                 // String Failed to increment key \'
      28: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_1
      32: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #21                 // String \' by amount \'
      37: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: lload_2
      41: invokevirtual #22                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      44: ldc           #23                 // String \'
      46: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: aload         4
      54: invokespecial #25                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      57: athrow
      58: return
    Exception table:
       from    to  target type
           0    10    13   Class java/lang/Exception

  public java.util.concurrent.CompletableFuture<java.lang.Long> getCounterAsync(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field table:Lorg/apache/bookkeeper/api/kv/Table;
       4: aload_1
       5: getstatic     #9                  // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       8: invokevirtual #10                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      11: invokestatic  #11                 // Method io/netty/buffer/Unpooled.wrappedBuffer:([B)Lio/netty/buffer/ByteBuf;
      14: invokeinterface #26,  2           // InterfaceMethod org/apache/bookkeeper/api/kv/Table.getNumber:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      19: areturn

  public long getCounter(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #27                 // Method getCounterAsync:(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
       5: invokestatic  #14                 // Method org/apache/bookkeeper/common/concurrent/FutureUtils.result:(Ljava/util/concurrent/CompletableFuture;)Ljava/lang/Object;
       8: checkcast     #28                 // class java/lang/Long
      11: invokevirtual #29                 // Method java/lang/Long.longValue:()J
      14: lreturn
      15: astore_2
      16: new           #16                 // class java/lang/RuntimeException
      19: dup
      20: new           #17                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #30                 // String Failed to retrieve counter from key \'
      29: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_1
      33: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: ldc           #23                 // String \'
      38: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #31                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      47: athrow
    Exception table:
       from    to  target type
           0    14    15   Class java/lang/Exception

  public java.util.concurrent.CompletableFuture<java.lang.Void> putAsync(java.lang.String, java.nio.ByteBuffer);
    Code:
       0: aload_2
       1: ifnull        34
       4: aload_2
       5: iconst_0
       6: invokevirtual #32                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
       9: pop
      10: aload_0
      11: getfield      #5                  // Field table:Lorg/apache/bookkeeper/api/kv/Table;
      14: aload_1
      15: getstatic     #9                  // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      18: invokevirtual #10                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      21: invokestatic  #11                 // Method io/netty/buffer/Unpooled.wrappedBuffer:([B)Lio/netty/buffer/ByteBuf;
      24: aload_2
      25: invokestatic  #33                 // Method io/netty/buffer/Unpooled.wrappedBuffer:(Ljava/nio/ByteBuffer;)Lio/netty/buffer/ByteBuf;
      28: invokeinterface #34,  3           // InterfaceMethod org/apache/bookkeeper/api/kv/Table.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      33: areturn
      34: aload_0
      35: getfield      #5                  // Field table:Lorg/apache/bookkeeper/api/kv/Table;
      38: aload_1
      39: getstatic     #9                  // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      42: invokevirtual #10                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      45: invokestatic  #11                 // Method io/netty/buffer/Unpooled.wrappedBuffer:([B)Lio/netty/buffer/ByteBuf;
      48: aconst_null
      49: invokeinterface #34,  3           // InterfaceMethod org/apache/bookkeeper/api/kv/Table.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      54: areturn

  public void put(java.lang.String, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #35                 // Method putAsync:(Ljava/lang/String;Ljava/nio/ByteBuffer;)Ljava/util/concurrent/CompletableFuture;
       6: invokestatic  #14                 // Method org/apache/bookkeeper/common/concurrent/FutureUtils.result:(Ljava/util/concurrent/CompletableFuture;)Ljava/lang/Object;
       9: pop
      10: goto          46
      13: astore_3
      14: new           #16                 // class java/lang/RuntimeException
      17: dup
      18: new           #17                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #36                 // String Failed to update the state value for key \'
      27: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_1
      31: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: ldc           #23                 // String \'
      36: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokespecial #31                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: return
    Exception table:
       from    to  target type
           0    10    13   Class java/lang/Exception

  public java.util.concurrent.CompletableFuture<java.lang.Void> deleteAsync(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field table:Lorg/apache/bookkeeper/api/kv/Table;
       4: aload_1
       5: getstatic     #9                  // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       8: invokevirtual #10                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      11: invokestatic  #11                 // Method io/netty/buffer/Unpooled.wrappedBuffer:([B)Lio/netty/buffer/ByteBuf;
      14: invokestatic  #37                 // Method org/apache/bookkeeper/api/kv/options/Options.delete:()Lorg/apache/bookkeeper/api/kv/options/DeleteOption;
      17: invokeinterface #38,  3           // InterfaceMethod org/apache/bookkeeper/api/kv/Table.delete:(Ljava/lang/Object;Lorg/apache/bookkeeper/api/kv/options/DeleteOption;)Ljava/util/concurrent/CompletableFuture;
      22: invokedynamic #39,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      27: invokevirtual #40                 // Method java/util/concurrent/CompletableFuture.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      30: areturn

  public void delete(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #41                 // Method deleteAsync:(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
       5: invokestatic  #14                 // Method org/apache/bookkeeper/common/concurrent/FutureUtils.result:(Ljava/util/concurrent/CompletableFuture;)Ljava/lang/Object;
       8: pop
       9: goto          45
      12: astore_2
      13: new           #16                 // class java/lang/RuntimeException
      16: dup
      17: new           #17                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #42                 // String Failed to delete the state value for key \'
      26: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_1
      30: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: ldc           #23                 // String \'
      35: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #31                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: return
    Exception table:
       from    to  target type
           0     9    12   Class java/lang/Exception

  public java.util.concurrent.CompletableFuture<java.nio.ByteBuffer> getAsync(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field table:Lorg/apache/bookkeeper/api/kv/Table;
       4: aload_1
       5: getstatic     #9                  // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       8: invokevirtual #10                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      11: invokestatic  #11                 // Method io/netty/buffer/Unpooled.wrappedBuffer:([B)Lio/netty/buffer/ByteBuf;
      14: invokeinterface #43,  2           // InterfaceMethod org/apache/bookkeeper/api/kv/Table.get:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      19: invokedynamic #44,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      24: invokevirtual #40                 // Method java/util/concurrent/CompletableFuture.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      27: areturn

  public java.nio.ByteBuffer get(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #45                 // Method getAsync:(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
       5: invokestatic  #14                 // Method org/apache/bookkeeper/common/concurrent/FutureUtils.result:(Ljava/util/concurrent/CompletableFuture;)Ljava/lang/Object;
       8: checkcast     #46                 // class java/nio/ByteBuffer
      11: areturn
      12: astore_2
      13: new           #16                 // class java/lang/RuntimeException
      16: dup
      17: new           #17                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #47                 // String Failed to retrieve the state value for key \'
      26: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_1
      30: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: ldc           #23                 // String \'
      35: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: aload_2
      42: invokespecial #25                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      45: athrow
    Exception table:
       from    to  target type
           0    11    12   Class java/lang/Exception

  private static java.nio.ByteBuffer lambda$getAsync$1(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: ifnull        36
       4: aload_0
       5: invokevirtual #48                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
       8: invokestatic  #49                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      11: astore_1
      12: aload_0
      13: aload_1
      14: invokevirtual #50                 // Method io/netty/buffer/ByteBuf.readBytes:(Ljava/nio/ByteBuffer;)Lio/netty/buffer/ByteBuf;
      17: pop
      18: aload_1
      19: iconst_0
      20: invokevirtual #32                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      23: pop
      24: aload_1
      25: astore_2
      26: aload_0
      27: ifnull        34
      30: aload_0
      31: invokestatic  #51                 // Method io/netty/util/ReferenceCountUtil.safeRelease:(Ljava/lang/Object;)V
      34: aload_2
      35: areturn
      36: aconst_null
      37: astore_1
      38: aload_0
      39: ifnull        46
      42: aload_0
      43: invokestatic  #51                 // Method io/netty/util/ReferenceCountUtil.safeRelease:(Ljava/lang/Object;)V
      46: aload_1
      47: areturn
      48: astore_3
      49: aload_0
      50: ifnull        57
      53: aload_0
      54: invokestatic  #51                 // Method io/netty/util/ReferenceCountUtil.safeRelease:(Ljava/lang/Object;)V
      57: aload_3
      58: athrow
    Exception table:
       from    to  target type
           0    26    48   any
          36    38    48   any

  private static java.lang.Void lambda$deleteAsync$0(org.apache.bookkeeper.api.kv.result.DeleteResult);
    Code:
       0: aconst_null
       1: areturn
}
