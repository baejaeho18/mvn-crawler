Compiled from "PulsarSink.java"
class org.apache.pulsar.functions.sink.PulsarSink$Crypto {
  private org.apache.pulsar.client.api.CryptoKeyReader keyReader;

  private org.apache.pulsar.client.api.ProducerCryptoFailureAction failureAction;

  private java.lang.String[] encryptionKeys;

  org.apache.pulsar.functions.sink.PulsarSink$Crypto(org.apache.pulsar.client.api.CryptoKeyReader, org.apache.pulsar.client.api.ProducerCryptoFailureAction, java.lang.String[]);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field keyReader:Lorg/apache/pulsar/client/api/CryptoKeyReader;
       9: aload_0
      10: aload_2
      11: putfield      #1                  // Field failureAction:Lorg/apache/pulsar/client/api/ProducerCryptoFailureAction;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field encryptionKeys:[Ljava/lang/String;
      19: return

  public static org.apache.pulsar.functions.sink.PulsarSink$Crypto$CryptoBuilder builder();
    Code:
       0: new           #5                  // class org/apache/pulsar/functions/sink/PulsarSink$Crypto$CryptoBuilder
       3: dup
       4: invokespecial #6                  // Method org/apache/pulsar/functions/sink/PulsarSink$Crypto$CryptoBuilder."<init>":()V
       7: areturn

  public org.apache.pulsar.client.api.CryptoKeyReader getKeyReader();
    Code:
       0: aload_0
       1: getfield      #2                  // Field keyReader:Lorg/apache/pulsar/client/api/CryptoKeyReader;
       4: areturn

  public org.apache.pulsar.client.api.ProducerCryptoFailureAction getFailureAction();
    Code:
       0: aload_0
       1: getfield      #1                  // Field failureAction:Lorg/apache/pulsar/client/api/ProducerCryptoFailureAction;
       4: areturn

  public java.lang.String[] getEncryptionKeys();
    Code:
       0: aload_0
       1: getfield      #4                  // Field encryptionKeys:[Ljava/lang/String;
       4: areturn

  public void setKeyReader(org.apache.pulsar.client.api.CryptoKeyReader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field keyReader:Lorg/apache/pulsar/client/api/CryptoKeyReader;
       5: return

  public void setFailureAction(org.apache.pulsar.client.api.ProducerCryptoFailureAction);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field failureAction:Lorg/apache/pulsar/client/api/ProducerCryptoFailureAction;
       5: return

  public void setEncryptionKeys(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field encryptionKeys:[Ljava/lang/String;
       5: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #7                  // class org/apache/pulsar/functions/sink/PulsarSink$Crypto
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #7                  // class org/apache/pulsar/functions/sink/PulsarSink$Crypto
      20: astore_2
      21: aload_2
      22: aload_0
      23: invokevirtual #8                  // Method canEqual:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: invokevirtual #9                  // Method getKeyReader:()Lorg/apache/pulsar/client/api/CryptoKeyReader;
      35: astore_3
      36: aload_2
      37: invokevirtual #9                  // Method getKeyReader:()Lorg/apache/pulsar/client/api/CryptoKeyReader;
      40: astore        4
      42: aload_3
      43: ifnonnull     54
      46: aload         4
      48: ifnull        65
      51: goto          63
      54: aload_3
      55: aload         4
      57: invokevirtual #10                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifne          65
      63: iconst_0
      64: ireturn
      65: aload_0
      66: invokevirtual #11                 // Method getFailureAction:()Lorg/apache/pulsar/client/api/ProducerCryptoFailureAction;
      69: astore        5
      71: aload_2
      72: invokevirtual #11                 // Method getFailureAction:()Lorg/apache/pulsar/client/api/ProducerCryptoFailureAction;
      75: astore        6
      77: aload         5
      79: ifnonnull     90
      82: aload         6
      84: ifnull        102
      87: goto          100
      90: aload         5
      92: aload         6
      94: invokevirtual #10                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      97: ifne          102
     100: iconst_0
     101: ireturn
     102: aload_0
     103: invokevirtual #12                 // Method getEncryptionKeys:()[Ljava/lang/String;
     106: aload_2
     107: invokevirtual #12                 // Method getEncryptionKeys:()[Ljava/lang/String;
     110: invokestatic  #13                 // Method java/util/Arrays.deepEquals:([Ljava/lang/Object;[Ljava/lang/Object;)Z
     113: ifne          118
     116: iconst_0
     117: ireturn
     118: iconst_1
     119: ireturn

  protected boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #7                  // class org/apache/pulsar/functions/sink/PulsarSink$Crypto
       4: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: aload_0
       6: invokevirtual #9                  // Method getKeyReader:()Lorg/apache/pulsar/client/api/CryptoKeyReader;
       9: astore_3
      10: iload_2
      11: bipush        59
      13: imul
      14: aload_3
      15: ifnonnull     23
      18: bipush        43
      20: goto          27
      23: aload_3
      24: invokevirtual #14                 // Method java/lang/Object.hashCode:()I
      27: iadd
      28: istore_2
      29: aload_0
      30: invokevirtual #11                 // Method getFailureAction:()Lorg/apache/pulsar/client/api/ProducerCryptoFailureAction;
      33: astore        4
      35: iload_2
      36: bipush        59
      38: imul
      39: aload         4
      41: ifnonnull     49
      44: bipush        43
      46: goto          54
      49: aload         4
      51: invokevirtual #14                 // Method java/lang/Object.hashCode:()I
      54: iadd
      55: istore_2
      56: iload_2
      57: bipush        59
      59: imul
      60: aload_0
      61: invokevirtual #12                 // Method getEncryptionKeys:()[Ljava/lang/String;
      64: invokestatic  #15                 // Method java/util/Arrays.deepHashCode:([Ljava/lang/Object;)I
      67: iadd
      68: istore_2
      69: iload_2
      70: ireturn

  public java.lang.String toString();
    Code:
       0: new           #16                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #18                 // String PulsarSink.Crypto(keyReader=
       9: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #9                  // Method getKeyReader:()Lorg/apache/pulsar/client/api/CryptoKeyReader;
      16: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #21                 // String , failureAction=
      21: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #11                 // Method getFailureAction:()Lorg/apache/pulsar/client/api/ProducerCryptoFailureAction;
      28: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #22                 // String , encryptionKeys=
      33: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #12                 // Method getEncryptionKeys:()[Ljava/lang/String;
      40: invokestatic  #23                 // Method java/util/Arrays.deepToString:([Ljava/lang/Object;)Ljava/lang/String;
      43: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: ldc           #24                 // String )
      48: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: areturn

  static org.apache.pulsar.client.api.CryptoKeyReader access$100(org.apache.pulsar.functions.sink.PulsarSink$Crypto);
    Code:
       0: aload_0
       1: getfield      #2                  // Field keyReader:Lorg/apache/pulsar/client/api/CryptoKeyReader;
       4: areturn

  static org.apache.pulsar.client.api.ProducerCryptoFailureAction access$200(org.apache.pulsar.functions.sink.PulsarSink$Crypto);
    Code:
       0: aload_0
       1: getfield      #1                  // Field failureAction:Lorg/apache/pulsar/client/api/ProducerCryptoFailureAction;
       4: areturn
}
