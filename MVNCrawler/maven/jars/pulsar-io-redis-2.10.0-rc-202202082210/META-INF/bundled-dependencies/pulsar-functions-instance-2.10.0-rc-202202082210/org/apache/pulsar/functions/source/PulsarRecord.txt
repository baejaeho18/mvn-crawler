Compiled from "PulsarRecord.java"
public class org.apache.pulsar.functions.source.PulsarRecord<T> implements org.apache.pulsar.functions.source.RecordWithEncryptionContext<T> {
  private final java.lang.String topicName;

  private final int partition;

  private final org.apache.pulsar.client.api.Message<T> message;

  private final org.apache.pulsar.client.api.Schema<T> schema;

  private final java.lang.Runnable failFunction;

  private final java.lang.Runnable ackFunction;

  public java.util.Optional<java.lang.String> getKey();
    Code:
       0: aload_0
       1: getfield      #1                  // Field message:Lorg/apache/pulsar/client/api/Message;
       4: invokeinterface #2,  1            // InterfaceMethod org/apache/pulsar/client/api/Message.hasKey:()Z
       9: ifeq          25
      12: aload_0
      13: getfield      #1                  // Field message:Lorg/apache/pulsar/client/api/Message;
      16: invokeinterface #3,  1            // InterfaceMethod org/apache/pulsar/client/api/Message.getKey:()Ljava/lang/String;
      21: invokestatic  #4                  // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      24: areturn
      25: invokestatic  #5                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      28: areturn

  public java.util.Optional<java.lang.String> getTopicName();
    Code:
       0: aload_0
       1: getfield      #6                  // Field topicName:Ljava/lang/String;
       4: invokestatic  #4                  // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
       7: areturn

  public java.util.Optional<java.lang.Integer> getPartitionIndex();
    Code:
       0: aload_0
       1: getfield      #7                  // Field partition:I
       4: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokestatic  #4                  // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      10: areturn

  public java.util.Optional<java.lang.String> getPartitionId();
    Code:
       0: ldc           #9                  // String %s-%s
       2: iconst_2
       3: anewarray     #10                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: getfield      #6                  // Field topicName:Ljava/lang/String;
      12: aastore
      13: dup
      14: iconst_1
      15: aload_0
      16: getfield      #7                  // Field partition:I
      19: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      22: aastore
      23: invokestatic  #11                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      26: invokestatic  #4                  // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      29: areturn

  public java.util.Optional<java.lang.Long> getRecordSequence();
    Code:
       0: aload_0
       1: getfield      #1                  // Field message:Lorg/apache/pulsar/client/api/Message;
       4: invokeinterface #12,  1           // InterfaceMethod org/apache/pulsar/client/api/Message.getMessageId:()Lorg/apache/pulsar/client/api/MessageId;
       9: invokestatic  #13                 // Method org/apache/pulsar/functions/utils/FunctionCommon.getSequenceId:(Lorg/apache/pulsar/client/api/MessageId;)J
      12: invokestatic  #14                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      15: invokestatic  #4                  // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      18: areturn

  public T getValue();
    Code:
       0: aload_0
       1: getfield      #1                  // Field message:Lorg/apache/pulsar/client/api/Message;
       4: invokeinterface #15,  1           // InterfaceMethod org/apache/pulsar/client/api/Message.getValue:()Ljava/lang/Object;
       9: areturn

  public org.apache.pulsar.client.api.Schema<T> getSchema();
    Code:
       0: aload_0
       1: getfield      #16                 // Field schema:Lorg/apache/pulsar/client/api/Schema;
       4: areturn

  public java.util.Optional<java.lang.Long> getEventTime();
    Code:
       0: aload_0
       1: getfield      #1                  // Field message:Lorg/apache/pulsar/client/api/Message;
       4: invokeinterface #17,  1           // InterfaceMethod org/apache/pulsar/client/api/Message.getEventTime:()J
       9: lconst_0
      10: lcmp
      11: ifeq          30
      14: aload_0
      15: getfield      #1                  // Field message:Lorg/apache/pulsar/client/api/Message;
      18: invokeinterface #17,  1           // InterfaceMethod org/apache/pulsar/client/api/Message.getEventTime:()J
      23: invokestatic  #14                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      26: invokestatic  #4                  // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      29: areturn
      30: invokestatic  #5                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      33: areturn

  public java.util.Optional<org.apache.pulsar.common.api.EncryptionContext> getEncryptionCtx();
    Code:
       0: aload_0
       1: getfield      #1                  // Field message:Lorg/apache/pulsar/client/api/Message;
       4: invokeinterface #18,  1           // InterfaceMethod org/apache/pulsar/client/api/Message.getEncryptionCtx:()Ljava/util/Optional;
       9: areturn

  public java.util.Map<java.lang.String, java.lang.String> getProperties();
    Code:
       0: aload_0
       1: getfield      #1                  // Field message:Lorg/apache/pulsar/client/api/Message;
       4: invokeinterface #19,  1           // InterfaceMethod org/apache/pulsar/client/api/Message.getProperties:()Ljava/util/Map;
       9: areturn

  public org.apache.pulsar.client.api.MessageId getMessageId();
    Code:
       0: aload_0
       1: getfield      #1                  // Field message:Lorg/apache/pulsar/client/api/Message;
       4: invokeinterface #12,  1           // InterfaceMethod org/apache/pulsar/client/api/Message.getMessageId:()Lorg/apache/pulsar/client/api/MessageId;
       9: areturn

  public void ack();
    Code:
       0: aload_0
       1: getfield      #20                 // Field ackFunction:Ljava/lang/Runnable;
       4: invokeinterface #21,  1           // InterfaceMethod java/lang/Runnable.run:()V
       9: return

  public void fail();
    Code:
       0: aload_0
       1: getfield      #22                 // Field failFunction:Ljava/lang/Runnable;
       4: invokeinterface #21,  1           // InterfaceMethod java/lang/Runnable.run:()V
       9: return

  public java.util.Optional<org.apache.pulsar.client.api.Message<T>> getMessage();
    Code:
       0: aload_0
       1: getfield      #1                  // Field message:Lorg/apache/pulsar/client/api/Message;
       4: invokestatic  #4                  // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
       7: areturn

  org.apache.pulsar.functions.source.PulsarRecord(java.lang.String, int, org.apache.pulsar.client.api.Message<T>, org.apache.pulsar.client.api.Schema<T>, java.lang.Runnable, java.lang.Runnable);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #6                  // Field topicName:Ljava/lang/String;
       9: aload_0
      10: iload_2
      11: putfield      #7                  // Field partition:I
      14: aload_0
      15: aload_3
      16: putfield      #1                  // Field message:Lorg/apache/pulsar/client/api/Message;
      19: aload_0
      20: aload         4
      22: putfield      #16                 // Field schema:Lorg/apache/pulsar/client/api/Schema;
      25: aload_0
      26: aload         5
      28: putfield      #22                 // Field failFunction:Ljava/lang/Runnable;
      31: aload_0
      32: aload         6
      34: putfield      #20                 // Field ackFunction:Ljava/lang/Runnable;
      37: return

  public static <T> org.apache.pulsar.functions.source.PulsarRecord$PulsarRecordBuilder<T> builder();
    Code:
       0: new           #24                 // class org/apache/pulsar/functions/source/PulsarRecord$PulsarRecordBuilder
       3: dup
       4: invokespecial #25                 // Method org/apache/pulsar/functions/source/PulsarRecord$PulsarRecordBuilder."<init>":()V
       7: areturn

  public int getPartition();
    Code:
       0: aload_0
       1: getfield      #7                  // Field partition:I
       4: ireturn

  public java.lang.Runnable getFailFunction();
    Code:
       0: aload_0
       1: getfield      #22                 // Field failFunction:Ljava/lang/Runnable;
       4: areturn

  public java.lang.Runnable getAckFunction();
    Code:
       0: aload_0
       1: getfield      #20                 // Field ackFunction:Ljava/lang/Runnable;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #26                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #28                 // String PulsarRecord(topicName=
       9: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #30                 // Method getTopicName:()Ljava/util/Optional;
      16: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #32                 // String , partition=
      21: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #33                 // Method getPartition:()I
      28: invokevirtual #34                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: ldc           #35                 // String , message=
      33: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #36                 // Method getMessage:()Ljava/util/Optional;
      40: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #37                 // String , schema=
      45: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: invokevirtual #38                 // Method getSchema:()Lorg/apache/pulsar/client/api/Schema;
      52: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: ldc           #39                 // String , failFunction=
      57: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: invokevirtual #40                 // Method getFailFunction:()Ljava/lang/Runnable;
      64: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: ldc           #41                 // String , ackFunction=
      69: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: invokevirtual #42                 // Method getAckFunction:()Ljava/lang/Runnable;
      76: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      79: ldc           #43                 // String )
      81: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #45                 // class org/apache/pulsar/functions/source/PulsarRecord
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #45                 // class org/apache/pulsar/functions/source/PulsarRecord
      20: astore_2
      21: aload_2
      22: aload_0
      23: invokevirtual #46                 // Method canEqual:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: invokevirtual #33                 // Method getPartition:()I
      35: aload_2
      36: invokevirtual #33                 // Method getPartition:()I
      39: if_icmpeq     44
      42: iconst_0
      43: ireturn
      44: aload_0
      45: invokevirtual #30                 // Method getTopicName:()Ljava/util/Optional;
      48: astore_3
      49: aload_2
      50: invokevirtual #30                 // Method getTopicName:()Ljava/util/Optional;
      53: astore        4
      55: aload_3
      56: ifnonnull     67
      59: aload         4
      61: ifnull        78
      64: goto          76
      67: aload_3
      68: aload         4
      70: invokevirtual #47                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      73: ifne          78
      76: iconst_0
      77: ireturn
      78: aload_0
      79: invokevirtual #36                 // Method getMessage:()Ljava/util/Optional;
      82: astore        5
      84: aload_2
      85: invokevirtual #36                 // Method getMessage:()Ljava/util/Optional;
      88: astore        6
      90: aload         5
      92: ifnonnull     103
      95: aload         6
      97: ifnull        115
     100: goto          113
     103: aload         5
     105: aload         6
     107: invokevirtual #47                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     110: ifne          115
     113: iconst_0
     114: ireturn
     115: aload_0
     116: invokevirtual #38                 // Method getSchema:()Lorg/apache/pulsar/client/api/Schema;
     119: astore        7
     121: aload_2
     122: invokevirtual #38                 // Method getSchema:()Lorg/apache/pulsar/client/api/Schema;
     125: astore        8
     127: aload         7
     129: ifnonnull     140
     132: aload         8
     134: ifnull        152
     137: goto          150
     140: aload         7
     142: aload         8
     144: invokevirtual #47                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     147: ifne          152
     150: iconst_0
     151: ireturn
     152: aload_0
     153: invokevirtual #40                 // Method getFailFunction:()Ljava/lang/Runnable;
     156: astore        9
     158: aload_2
     159: invokevirtual #40                 // Method getFailFunction:()Ljava/lang/Runnable;
     162: astore        10
     164: aload         9
     166: ifnonnull     177
     169: aload         10
     171: ifnull        189
     174: goto          187
     177: aload         9
     179: aload         10
     181: invokevirtual #47                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     184: ifne          189
     187: iconst_0
     188: ireturn
     189: aload_0
     190: invokevirtual #42                 // Method getAckFunction:()Ljava/lang/Runnable;
     193: astore        11
     195: aload_2
     196: invokevirtual #42                 // Method getAckFunction:()Ljava/lang/Runnable;
     199: astore        12
     201: aload         11
     203: ifnonnull     214
     206: aload         12
     208: ifnull        226
     211: goto          224
     214: aload         11
     216: aload         12
     218: invokevirtual #47                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     221: ifne          226
     224: iconst_0
     225: ireturn
     226: iconst_1
     227: ireturn

  protected boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #45                 // class org/apache/pulsar/functions/source/PulsarRecord
       4: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: iload_2
       6: bipush        59
       8: imul
       9: aload_0
      10: invokevirtual #33                 // Method getPartition:()I
      13: iadd
      14: istore_2
      15: aload_0
      16: invokevirtual #30                 // Method getTopicName:()Ljava/util/Optional;
      19: astore_3
      20: iload_2
      21: bipush        59
      23: imul
      24: aload_3
      25: ifnonnull     33
      28: bipush        43
      30: goto          37
      33: aload_3
      34: invokevirtual #48                 // Method java/lang/Object.hashCode:()I
      37: iadd
      38: istore_2
      39: aload_0
      40: invokevirtual #36                 // Method getMessage:()Ljava/util/Optional;
      43: astore        4
      45: iload_2
      46: bipush        59
      48: imul
      49: aload         4
      51: ifnonnull     59
      54: bipush        43
      56: goto          64
      59: aload         4
      61: invokevirtual #48                 // Method java/lang/Object.hashCode:()I
      64: iadd
      65: istore_2
      66: aload_0
      67: invokevirtual #38                 // Method getSchema:()Lorg/apache/pulsar/client/api/Schema;
      70: astore        5
      72: iload_2
      73: bipush        59
      75: imul
      76: aload         5
      78: ifnonnull     86
      81: bipush        43
      83: goto          91
      86: aload         5
      88: invokevirtual #48                 // Method java/lang/Object.hashCode:()I
      91: iadd
      92: istore_2
      93: aload_0
      94: invokevirtual #40                 // Method getFailFunction:()Ljava/lang/Runnable;
      97: astore        6
      99: iload_2
     100: bipush        59
     102: imul
     103: aload         6
     105: ifnonnull     113
     108: bipush        43
     110: goto          118
     113: aload         6
     115: invokevirtual #48                 // Method java/lang/Object.hashCode:()I
     118: iadd
     119: istore_2
     120: aload_0
     121: invokevirtual #42                 // Method getAckFunction:()Ljava/lang/Runnable;
     124: astore        7
     126: iload_2
     127: bipush        59
     129: imul
     130: aload         7
     132: ifnonnull     140
     135: bipush        43
     137: goto          145
     140: aload         7
     142: invokevirtual #48                 // Method java/lang/Object.hashCode:()I
     145: iadd
     146: istore_2
     147: iload_2
     148: ireturn
}
