Compiled from "PulsarSink.java"
class org.apache.pulsar.functions.sink.PulsarSink$PulsarSinkEffectivelyOnceProcessor extends org.apache.pulsar.functions.sink.PulsarSink<T>.PulsarSinkProcessorBase {
  final org.apache.pulsar.functions.sink.PulsarSink this$0;

  public org.apache.pulsar.functions.sink.PulsarSink$PulsarSinkEffectivelyOnceProcessor(org.apache.pulsar.functions.sink.PulsarSink, org.apache.pulsar.client.api.Schema, org.apache.pulsar.functions.sink.PulsarSink$Crypto);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/pulsar/functions/sink/PulsarSink;
       5: aload_0
       6: aload_1
       7: aload_2
       8: aload_3
       9: invokespecial #2                  // Method org/apache/pulsar/functions/sink/PulsarSink$PulsarSinkProcessorBase."<init>":(Lorg/apache/pulsar/functions/sink/PulsarSink;Lorg/apache/pulsar/client/api/Schema;Lorg/apache/pulsar/functions/sink/PulsarSink$Crypto;)V
      12: return

  public org.apache.pulsar.client.api.TypedMessageBuilder<T> newMessage(org.apache.pulsar.functions.instance.SinkRecord<T>);
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method org/apache/pulsar/functions/instance/SinkRecord.getPartitionId:()Ljava/util/Optional;
       4: invokevirtual #4                  // Method java/util/Optional.isPresent:()Z
       7: ifne          20
      10: new           #5                  // class java/lang/RuntimeException
      13: dup
      14: ldc           #6                  // String PartitionId needs to be specified for every record while in Effectively-once mode
      16: invokespecial #7                  // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_1
      21: invokevirtual #8                  // Method org/apache/pulsar/functions/instance/SinkRecord.getSchema:()Lorg/apache/pulsar/client/api/Schema;
      24: astore_2
      25: aload_1
      26: invokevirtual #9                  // Method org/apache/pulsar/functions/instance/SinkRecord.getSourceRecord:()Lorg/apache/pulsar/functions/api/Record;
      29: instanceof    #10                 // class org/apache/pulsar/functions/source/PulsarRecord
      32: ifeq          40
      35: aload_0
      36: getfield      #11                 // Field schema:Lorg/apache/pulsar/client/api/Schema;
      39: astore_2
      40: aload_0
      41: ldc           #12                 // String %s-%s
      43: iconst_2
      44: anewarray     #13                 // class java/lang/Object
      47: dup
      48: iconst_0
      49: aload_1
      50: invokevirtual #14                 // Method org/apache/pulsar/functions/instance/SinkRecord.getDestinationTopic:()Ljava/util/Optional;
      53: aload_0
      54: getfield      #1                  // Field this$0:Lorg/apache/pulsar/functions/sink/PulsarSink;
      57: invokestatic  #15                 // Method org/apache/pulsar/functions/sink/PulsarSink.access$000:(Lorg/apache/pulsar/functions/sink/PulsarSink;)Lorg/apache/pulsar/functions/sink/PulsarSinkConfig;
      60: invokevirtual #16                 // Method org/apache/pulsar/functions/sink/PulsarSinkConfig.getTopic:()Ljava/lang/String;
      63: invokevirtual #17                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      66: aastore
      67: dup
      68: iconst_1
      69: aload_1
      70: invokevirtual #3                  // Method org/apache/pulsar/functions/instance/SinkRecord.getPartitionId:()Ljava/util/Optional;
      73: invokevirtual #18                 // Method java/util/Optional.get:()Ljava/lang/Object;
      76: aastore
      77: invokestatic  #19                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      80: aload_1
      81: invokevirtual #3                  // Method org/apache/pulsar/functions/instance/SinkRecord.getPartitionId:()Ljava/util/Optional;
      84: invokevirtual #18                 // Method java/util/Optional.get:()Ljava/lang/Object;
      87: checkcast     #20                 // class java/lang/String
      90: aload_1
      91: invokevirtual #14                 // Method org/apache/pulsar/functions/instance/SinkRecord.getDestinationTopic:()Ljava/util/Optional;
      94: aload_0
      95: getfield      #1                  // Field this$0:Lorg/apache/pulsar/functions/sink/PulsarSink;
      98: invokestatic  #15                 // Method org/apache/pulsar/functions/sink/PulsarSink.access$000:(Lorg/apache/pulsar/functions/sink/PulsarSink;)Lorg/apache/pulsar/functions/sink/PulsarSinkConfig;
     101: invokevirtual #16                 // Method org/apache/pulsar/functions/sink/PulsarSinkConfig.getTopic:()Ljava/lang/String;
     104: invokevirtual #17                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
     107: checkcast     #20                 // class java/lang/String
     110: aload_2
     111: invokevirtual #21                 // Method getProducer:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/pulsar/client/api/Schema;)Lorg/apache/pulsar/client/api/Producer;
     114: astore_3
     115: aload_2
     116: ifnull        127
     119: aload_3
     120: aload_2
     121: invokeinterface #22,  2           // InterfaceMethod org/apache/pulsar/client/api/Producer.newMessage:(Lorg/apache/pulsar/client/api/Schema;)Lorg/apache/pulsar/client/api/TypedMessageBuilder;
     126: areturn
     127: aload_3
     128: invokeinterface #23,  1           // InterfaceMethod org/apache/pulsar/client/api/Producer.newMessage:()Lorg/apache/pulsar/client/api/TypedMessageBuilder;
     133: areturn

  public void sendOutputMessage(org.apache.pulsar.client.api.TypedMessageBuilder<T>, org.apache.pulsar.functions.instance.SinkRecord<T>);
    Code:
       0: aload_2
       1: invokevirtual #24                 // Method org/apache/pulsar/functions/instance/SinkRecord.getRecordSequence:()Ljava/util/Optional;
       4: invokevirtual #4                  // Method java/util/Optional.isPresent:()Z
       7: ifne          20
      10: new           #5                  // class java/lang/RuntimeException
      13: dup
      14: ldc           #25                 // String RecordSequence needs to be specified for every record while in Effectively-once mode
      16: invokespecial #7                  // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_1
      21: aload_2
      22: invokevirtual #24                 // Method org/apache/pulsar/functions/instance/SinkRecord.getRecordSequence:()Ljava/util/Optional;
      25: invokevirtual #18                 // Method java/util/Optional.get:()Ljava/lang/Object;
      28: checkcast     #26                 // class java/lang/Long
      31: invokevirtual #27                 // Method java/lang/Long.longValue:()J
      34: invokeinterface #28,  3           // InterfaceMethod org/apache/pulsar/client/api/TypedMessageBuilder.sequenceId:(J)Lorg/apache/pulsar/client/api/TypedMessageBuilder;
      39: pop
      40: aload_1
      41: invokeinterface #29,  1           // InterfaceMethod org/apache/pulsar/client/api/TypedMessageBuilder.sendAsync:()Ljava/util/concurrent/CompletableFuture;
      46: astore_3
      47: aload_3
      48: aload_2
      49: invokedynamic #30,  0             // InvokeDynamic #0:accept:(Lorg/apache/pulsar/functions/instance/SinkRecord;)Ljava/util/function/Consumer;
      54: invokevirtual #31                 // Method java/util/concurrent/CompletableFuture.thenAccept:(Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;
      57: aload_0
      58: aload_2
      59: iconst_1
      60: invokevirtual #32                 // Method getPublishErrorHandler:(Lorg/apache/pulsar/functions/instance/SinkRecord;Z)Ljava/util/function/Function;
      63: invokevirtual #33                 // Method java/util/concurrent/CompletableFuture.exceptionally:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      66: pop
      67: return

  private static void lambda$sendOutputMessage$0(org.apache.pulsar.functions.instance.SinkRecord, org.apache.pulsar.client.api.MessageId);
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method org/apache/pulsar/functions/instance/SinkRecord.ack:()V
       4: return
}
