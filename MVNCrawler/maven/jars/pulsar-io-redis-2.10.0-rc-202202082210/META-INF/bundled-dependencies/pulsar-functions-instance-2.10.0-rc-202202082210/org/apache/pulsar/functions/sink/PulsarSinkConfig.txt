Compiled from "PulsarSinkConfig.java"
public class org.apache.pulsar.functions.sink.PulsarSinkConfig {
  private org.apache.pulsar.common.functions.FunctionConfig$ProcessingGuarantees processingGuarantees;

  private java.lang.String topic;

  private java.lang.String serdeClassName;

  private java.lang.String schemaType;

  private java.util.Map<java.lang.String, java.lang.String> schemaProperties;

  private java.lang.String typeClassName;

  private boolean forwardSourceMessageProperty;

  private org.apache.pulsar.common.functions.ProducerConfig producerConfig;

  public org.apache.pulsar.functions.sink.PulsarSinkConfig();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.apache.pulsar.common.functions.FunctionConfig$ProcessingGuarantees getProcessingGuarantees();
    Code:
       0: aload_0
       1: getfield      #2                  // Field processingGuarantees:Lorg/apache/pulsar/common/functions/FunctionConfig$ProcessingGuarantees;
       4: areturn

  public java.lang.String getTopic();
    Code:
       0: aload_0
       1: getfield      #3                  // Field topic:Ljava/lang/String;
       4: areturn

  public java.lang.String getSerdeClassName();
    Code:
       0: aload_0
       1: getfield      #4                  // Field serdeClassName:Ljava/lang/String;
       4: areturn

  public java.lang.String getSchemaType();
    Code:
       0: aload_0
       1: getfield      #5                  // Field schemaType:Ljava/lang/String;
       4: areturn

  public java.util.Map<java.lang.String, java.lang.String> getSchemaProperties();
    Code:
       0: aload_0
       1: getfield      #6                  // Field schemaProperties:Ljava/util/Map;
       4: areturn

  public java.lang.String getTypeClassName();
    Code:
       0: aload_0
       1: getfield      #7                  // Field typeClassName:Ljava/lang/String;
       4: areturn

  public boolean isForwardSourceMessageProperty();
    Code:
       0: aload_0
       1: getfield      #8                  // Field forwardSourceMessageProperty:Z
       4: ireturn

  public org.apache.pulsar.common.functions.ProducerConfig getProducerConfig();
    Code:
       0: aload_0
       1: getfield      #9                  // Field producerConfig:Lorg/apache/pulsar/common/functions/ProducerConfig;
       4: areturn

  public void setProcessingGuarantees(org.apache.pulsar.common.functions.FunctionConfig$ProcessingGuarantees);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field processingGuarantees:Lorg/apache/pulsar/common/functions/FunctionConfig$ProcessingGuarantees;
       5: return

  public void setTopic(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field topic:Ljava/lang/String;
       5: return

  public void setSerdeClassName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field serdeClassName:Ljava/lang/String;
       5: return

  public void setSchemaType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field schemaType:Ljava/lang/String;
       5: return

  public void setSchemaProperties(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field schemaProperties:Ljava/util/Map;
       5: return

  public void setTypeClassName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field typeClassName:Ljava/lang/String;
       5: return

  public void setForwardSourceMessageProperty(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field forwardSourceMessageProperty:Z
       5: return

  public void setProducerConfig(org.apache.pulsar.common.functions.ProducerConfig);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field producerConfig:Lorg/apache/pulsar/common/functions/ProducerConfig;
       5: return

  public java.lang.String toString();
    Code:
       0: new           #10                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #12                 // String PulsarSinkConfig(processingGuarantees=
       9: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #14                 // Method getProcessingGuarantees:()Lorg/apache/pulsar/common/functions/FunctionConfig$ProcessingGuarantees;
      16: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #16                 // String , topic=
      21: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #17                 // Method getTopic:()Ljava/lang/String;
      28: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #18                 // String , serdeClassName=
      33: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #19                 // Method getSerdeClassName:()Ljava/lang/String;
      40: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: ldc           #20                 // String , schemaType=
      45: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: invokevirtual #21                 // Method getSchemaType:()Ljava/lang/String;
      52: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #22                 // String , schemaProperties=
      57: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: invokevirtual #23                 // Method getSchemaProperties:()Ljava/util/Map;
      64: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: ldc           #24                 // String , typeClassName=
      69: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: invokevirtual #25                 // Method getTypeClassName:()Ljava/lang/String;
      76: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: ldc           #26                 // String , forwardSourceMessageProperty=
      81: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: invokevirtual #27                 // Method isForwardSourceMessageProperty:()Z
      88: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      91: ldc           #29                 // String , producerConfig=
      93: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_0
      97: invokevirtual #30                 // Method getProducerConfig:()Lorg/apache/pulsar/common/functions/ProducerConfig;
     100: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     103: ldc           #31                 // String )
     105: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     111: areturn
}
