Compiled from "PulsarSink.java"
public class org.apache.pulsar.functions.sink.PulsarSink<T> implements org.apache.pulsar.io.core.Sink<T> {
  private static final org.slf4j.Logger log;

  private final org.apache.pulsar.client.api.PulsarClient client;

  private final org.apache.pulsar.functions.sink.PulsarSinkConfig pulsarSinkConfig;

  private final java.util.Map<java.lang.String, java.lang.String> properties;

  private final java.lang.ClassLoader functionClassLoader;

  private org.apache.pulsar.functions.instance.stats.ComponentStatsManager stats;

  org.apache.pulsar.functions.sink.PulsarSink$PulsarSinkProcessor<T> pulsarSinkProcessor;

  private final org.apache.pulsar.functions.source.TopicSchema topicSchema;

  public org.apache.pulsar.functions.sink.PulsarSink(org.apache.pulsar.client.api.PulsarClient, org.apache.pulsar.functions.sink.PulsarSinkConfig, java.util.Map<java.lang.String, java.lang.String>, org.apache.pulsar.functions.instance.stats.ComponentStatsManager, java.lang.ClassLoader);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #1                  // Field client:Lorg/apache/pulsar/client/api/PulsarClient;
       9: aload_0
      10: aload_2
      11: putfield      #5                  // Field pulsarSinkConfig:Lorg/apache/pulsar/functions/sink/PulsarSinkConfig;
      14: aload_0
      15: new           #7                  // class org/apache/pulsar/functions/source/TopicSchema
      18: dup
      19: aload_1
      20: invokespecial #8                  // Method org/apache/pulsar/functions/source/TopicSchema."<init>":(Lorg/apache/pulsar/client/api/PulsarClient;)V
      23: putfield      #9                  // Field topicSchema:Lorg/apache/pulsar/functions/source/TopicSchema;
      26: aload_0
      27: aload_3
      28: putfield      #4                  // Field properties:Ljava/util/Map;
      31: aload_0
      32: aload         4
      34: putfield      #2                  // Field stats:Lorg/apache/pulsar/functions/instance/stats/ComponentStatsManager;
      37: aload_0
      38: aload         5
      40: putfield      #10                 // Field functionClassLoader:Ljava/lang/ClassLoader;
      43: return

  public void open(java.util.Map<java.lang.String, java.lang.Object>, org.apache.pulsar.io.core.SinkContext) throws java.lang.Exception;
    Code:
       0: getstatic     #3                  // Field log:Lorg/slf4j/Logger;
       3: ldc           #11                 // String Opening pulsar sink with config: {}
       5: aload_0
       6: getfield      #5                  // Field pulsarSinkConfig:Lorg/apache/pulsar/functions/sink/PulsarSinkConfig;
       9: invokeinterface #12,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      14: aload_0
      15: invokevirtual #13                 // Method initializeSchema:()Lorg/apache/pulsar/client/api/Schema;
      18: astore_3
      19: aload_3
      20: ifnonnull     34
      23: getstatic     #3                  // Field log:Lorg/slf4j/Logger;
      26: ldc           #14                 // String Since output type is null, not creating any real sink
      28: invokeinterface #15,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      33: return
      34: aload_0
      35: invokevirtual #16                 // Method initializeCrypto:()Lorg/apache/pulsar/functions/sink/PulsarSink$Crypto;
      38: astore        4
      40: aload         4
      42: ifnonnull     55
      45: getstatic     #3                  // Field log:Lorg/slf4j/Logger;
      48: ldc           #17                 // String crypto key reader is not provided, not enabling end to end encryption
      50: invokeinterface #15,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      55: aload_0
      56: getfield      #5                  // Field pulsarSinkConfig:Lorg/apache/pulsar/functions/sink/PulsarSinkConfig;
      59: invokevirtual #18                 // Method org/apache/pulsar/functions/sink/PulsarSinkConfig.getProcessingGuarantees:()Lorg/apache/pulsar/common/functions/FunctionConfig$ProcessingGuarantees;
      62: astore        5
      64: getstatic     #19                 // Field org/apache/pulsar/functions/sink/PulsarSink$1.$SwitchMap$org$apache$pulsar$common$functions$FunctionConfig$ProcessingGuarantees:[I
      67: aload         5
      69: invokevirtual #20                 // Method org/apache/pulsar/common/functions/FunctionConfig$ProcessingGuarantees.ordinal:()I
      72: iaload
      73: tableswitch   { // 1 to 3
                     1: 100
                     2: 118
                     3: 136
               default: 151
          }
     100: aload_0
     101: new           #21                 // class org/apache/pulsar/functions/sink/PulsarSink$PulsarSinkAtMostOnceProcessor
     104: dup
     105: aload_0
     106: aload_3
     107: aload         4
     109: invokespecial #22                 // Method org/apache/pulsar/functions/sink/PulsarSink$PulsarSinkAtMostOnceProcessor."<init>":(Lorg/apache/pulsar/functions/sink/PulsarSink;Lorg/apache/pulsar/client/api/Schema;Lorg/apache/pulsar/functions/sink/PulsarSink$Crypto;)V
     112: putfield      #23                 // Field pulsarSinkProcessor:Lorg/apache/pulsar/functions/sink/PulsarSink$PulsarSinkProcessor;
     115: goto          151
     118: aload_0
     119: new           #24                 // class org/apache/pulsar/functions/sink/PulsarSink$PulsarSinkAtLeastOnceProcessor
     122: dup
     123: aload_0
     124: aload_3
     125: aload         4
     127: invokespecial #25                 // Method org/apache/pulsar/functions/sink/PulsarSink$PulsarSinkAtLeastOnceProcessor."<init>":(Lorg/apache/pulsar/functions/sink/PulsarSink;Lorg/apache/pulsar/client/api/Schema;Lorg/apache/pulsar/functions/sink/PulsarSink$Crypto;)V
     130: putfield      #23                 // Field pulsarSinkProcessor:Lorg/apache/pulsar/functions/sink/PulsarSink$PulsarSinkProcessor;
     133: goto          151
     136: aload_0
     137: new           #26                 // class org/apache/pulsar/functions/sink/PulsarSink$PulsarSinkEffectivelyOnceProcessor
     140: dup
     141: aload_0
     142: aload_3
     143: aload         4
     145: invokespecial #27                 // Method org/apache/pulsar/functions/sink/PulsarSink$PulsarSinkEffectivelyOnceProcessor."<init>":(Lorg/apache/pulsar/functions/sink/PulsarSink;Lorg/apache/pulsar/client/api/Schema;Lorg/apache/pulsar/functions/sink/PulsarSink$Crypto;)V
     148: putfield      #23                 // Field pulsarSinkProcessor:Lorg/apache/pulsar/functions/sink/PulsarSink$PulsarSinkProcessor;
     151: return

  public void write(org.apache.pulsar.functions.api.Record<T>);
    Code:
       0: aload_1
       1: checkcast     #28                 // class org/apache/pulsar/functions/instance/SinkRecord
       4: astore_2
       5: aload_0
       6: getfield      #23                 // Field pulsarSinkProcessor:Lorg/apache/pulsar/functions/sink/PulsarSink$PulsarSinkProcessor;
       9: aload_2
      10: invokeinterface #29,  2           // InterfaceMethod org/apache/pulsar/functions/sink/PulsarSink$PulsarSinkProcessor.newMessage:(Lorg/apache/pulsar/functions/instance/SinkRecord;)Lorg/apache/pulsar/client/api/TypedMessageBuilder;
      15: astore_3
      16: aload_1
      17: invokeinterface #30,  1           // InterfaceMethod org/apache/pulsar/functions/api/Record.getKey:()Ljava/util/Optional;
      22: invokevirtual #31                 // Method java/util/Optional.isPresent:()Z
      25: ifeq          79
      28: aload_1
      29: invokeinterface #32,  1           // InterfaceMethod org/apache/pulsar/functions/api/Record.getSchema:()Lorg/apache/pulsar/client/api/Schema;
      34: instanceof    #33                 // class org/apache/pulsar/client/api/schema/KeyValueSchema
      37: ifeq          60
      40: aload_1
      41: invokeinterface #32,  1           // InterfaceMethod org/apache/pulsar/functions/api/Record.getSchema:()Lorg/apache/pulsar/client/api/Schema;
      46: checkcast     #33                 // class org/apache/pulsar/client/api/schema/KeyValueSchema
      49: invokeinterface #34,  1           // InterfaceMethod org/apache/pulsar/client/api/schema/KeyValueSchema.getKeyValueEncodingType:()Lorg/apache/pulsar/common/schema/KeyValueEncodingType;
      54: getstatic     #35                 // Field org/apache/pulsar/common/schema/KeyValueEncodingType.SEPARATED:Lorg/apache/pulsar/common/schema/KeyValueEncodingType;
      57: if_acmpeq     79
      60: aload_3
      61: aload_1
      62: invokeinterface #30,  1           // InterfaceMethod org/apache/pulsar/functions/api/Record.getKey:()Ljava/util/Optional;
      67: invokevirtual #36                 // Method java/util/Optional.get:()Ljava/lang/Object;
      70: checkcast     #37                 // class java/lang/String
      73: invokeinterface #38,  2           // InterfaceMethod org/apache/pulsar/client/api/TypedMessageBuilder.key:(Ljava/lang/String;)Lorg/apache/pulsar/client/api/TypedMessageBuilder;
      78: pop
      79: aload_3
      80: aload_1
      81: invokeinterface #39,  1           // InterfaceMethod org/apache/pulsar/functions/api/Record.getValue:()Ljava/lang/Object;
      86: invokeinterface #40,  2           // InterfaceMethod org/apache/pulsar/client/api/TypedMessageBuilder.value:(Ljava/lang/Object;)Lorg/apache/pulsar/client/api/TypedMessageBuilder;
      91: pop
      92: aload_1
      93: invokeinterface #41,  1           // InterfaceMethod org/apache/pulsar/functions/api/Record.getProperties:()Ljava/util/Map;
      98: invokeinterface #42,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
     103: ifne          129
     106: aload_0
     107: getfield      #5                  // Field pulsarSinkConfig:Lorg/apache/pulsar/functions/sink/PulsarSinkConfig;
     110: invokevirtual #43                 // Method org/apache/pulsar/functions/sink/PulsarSinkConfig.isForwardSourceMessageProperty:()Z
     113: ifeq          129
     116: aload_3
     117: aload_1
     118: invokeinterface #41,  1           // InterfaceMethod org/apache/pulsar/functions/api/Record.getProperties:()Ljava/util/Map;
     123: invokeinterface #44,  2           // InterfaceMethod org/apache/pulsar/client/api/TypedMessageBuilder.properties:(Ljava/util/Map;)Lorg/apache/pulsar/client/api/TypedMessageBuilder;
     128: pop
     129: aload_2
     130: invokevirtual #45                 // Method org/apache/pulsar/functions/instance/SinkRecord.getSourceRecord:()Lorg/apache/pulsar/functions/api/Record;
     133: instanceof    #46                 // class org/apache/pulsar/functions/source/PulsarRecord
     136: ifeq          204
     139: aload_2
     140: invokevirtual #45                 // Method org/apache/pulsar/functions/instance/SinkRecord.getSourceRecord:()Lorg/apache/pulsar/functions/api/Record;
     143: checkcast     #46                 // class org/apache/pulsar/functions/source/PulsarRecord
     146: astore        4
     148: aload_3
     149: ldc           #47                 // String __pfn_input_topic__
     151: aload         4
     153: invokevirtual #48                 // Method org/apache/pulsar/functions/source/PulsarRecord.getTopicName:()Ljava/util/Optional;
     156: invokevirtual #36                 // Method java/util/Optional.get:()Ljava/lang/Object;
     159: checkcast     #37                 // class java/lang/String
     162: invokeinterface #49,  3           // InterfaceMethod org/apache/pulsar/client/api/TypedMessageBuilder.property:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/pulsar/client/api/TypedMessageBuilder;
     167: ldc           #50                 // String __pfn_input_msg_id__
     169: new           #37                 // class java/lang/String
     172: dup
     173: invokestatic  #51                 // Method java/util/Base64.getEncoder:()Ljava/util/Base64$Encoder;
     176: aload         4
     178: invokevirtual #52                 // Method org/apache/pulsar/functions/source/PulsarRecord.getMessageId:()Lorg/apache/pulsar/client/api/MessageId;
     181: invokeinterface #53,  1           // InterfaceMethod org/apache/pulsar/client/api/MessageId.toByteArray:()[B
     186: invokevirtual #54                 // Method java/util/Base64$Encoder.encode:([B)[B
     189: getstatic     #55                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
     192: invokespecial #56                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
     195: invokeinterface #49,  3           // InterfaceMethod org/apache/pulsar/client/api/TypedMessageBuilder.property:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/pulsar/client/api/TypedMessageBuilder;
     200: pop
     201: goto          231
     204: aload_2
     205: invokevirtual #45                 // Method org/apache/pulsar/functions/instance/SinkRecord.getSourceRecord:()Lorg/apache/pulsar/functions/api/Record;
     208: invokeinterface #57,  1           // InterfaceMethod org/apache/pulsar/functions/api/Record.getEventTime:()Ljava/util/Optional;
     213: astore        4
     215: aload         4
     217: aload_3
     218: dup
     219: invokevirtual #58                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     222: pop
     223: invokedynamic #59,  0             // InvokeDynamic #0:accept:(Lorg/apache/pulsar/client/api/TypedMessageBuilder;)Ljava/util/function/Consumer;
     228: invokevirtual #60                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
     231: aload_0
     232: getfield      #23                 // Field pulsarSinkProcessor:Lorg/apache/pulsar/functions/sink/PulsarSink$PulsarSinkProcessor;
     235: aload_3
     236: aload_2
     237: invokeinterface #61,  3           // InterfaceMethod org/apache/pulsar/functions/sink/PulsarSink$PulsarSinkProcessor.sendOutputMessage:(Lorg/apache/pulsar/client/api/TypedMessageBuilder;Lorg/apache/pulsar/functions/instance/SinkRecord;)V
     242: return

  public void close() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #23                 // Field pulsarSinkProcessor:Lorg/apache/pulsar/functions/sink/PulsarSink$PulsarSinkProcessor;
       4: ifnull        16
       7: aload_0
       8: getfield      #23                 // Field pulsarSinkProcessor:Lorg/apache/pulsar/functions/sink/PulsarSink$PulsarSinkProcessor;
      11: invokeinterface #62,  1           // InterfaceMethod org/apache/pulsar/functions/sink/PulsarSink$PulsarSinkProcessor.close:()V
      16: return

  org.apache.pulsar.client.api.Schema<T> initializeSchema() throws java.lang.ClassNotFoundException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field pulsarSinkConfig:Lorg/apache/pulsar/functions/sink/PulsarSinkConfig;
       4: invokevirtual #63                 // Method org/apache/pulsar/functions/sink/PulsarSinkConfig.getTypeClassName:()Ljava/lang/String;
       7: invokestatic  #64                 // Method org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z
      10: ifeq          17
      13: getstatic     #65                 // Field org/apache/pulsar/client/api/Schema.BYTES:Lorg/apache/pulsar/client/api/Schema;
      16: areturn
      17: aload_0
      18: getfield      #5                  // Field pulsarSinkConfig:Lorg/apache/pulsar/functions/sink/PulsarSinkConfig;
      21: invokevirtual #63                 // Method org/apache/pulsar/functions/sink/PulsarSinkConfig.getTypeClassName:()Ljava/lang/String;
      24: aload_0
      25: getfield      #10                 // Field functionClassLoader:Ljava/lang/ClassLoader;
      28: invokestatic  #66                 // Method org/apache/pulsar/common/util/Reflections.loadClass:(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;
      31: astore_1
      32: ldc           #67                 // class java/lang/Void
      34: aload_1
      35: invokevirtual #68                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      38: ifeq          43
      41: aconst_null
      42: areturn
      43: new           #69                 // class org/apache/pulsar/common/functions/ConsumerConfig
      46: dup
      47: invokespecial #70                 // Method org/apache/pulsar/common/functions/ConsumerConfig."<init>":()V
      50: astore_2
      51: aload_2
      52: aload_0
      53: getfield      #5                  // Field pulsarSinkConfig:Lorg/apache/pulsar/functions/sink/PulsarSinkConfig;
      56: invokevirtual #71                 // Method org/apache/pulsar/functions/sink/PulsarSinkConfig.getSchemaProperties:()Ljava/util/Map;
      59: invokevirtual #72                 // Method org/apache/pulsar/common/functions/ConsumerConfig.setSchemaProperties:(Ljava/util/Map;)V
      62: aload_0
      63: getfield      #5                  // Field pulsarSinkConfig:Lorg/apache/pulsar/functions/sink/PulsarSinkConfig;
      66: invokevirtual #73                 // Method org/apache/pulsar/functions/sink/PulsarSinkConfig.getSchemaType:()Ljava/lang/String;
      69: invokestatic  #64                 // Method org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z
      72: ifne          158
      75: ldc           #74                 // class org/apache/pulsar/client/api/schema/GenericRecord
      77: aload_1
      78: invokevirtual #75                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      81: ifeq          129
      84: aload_2
      85: getstatic     #76                 // Field org/apache/pulsar/common/schema/SchemaType.AUTO_CONSUME:Lorg/apache/pulsar/common/schema/SchemaType;
      88: invokevirtual #77                 // Method org/apache/pulsar/common/schema/SchemaType.toString:()Ljava/lang/String;
      91: invokevirtual #78                 // Method org/apache/pulsar/common/functions/ConsumerConfig.setSchemaType:(Ljava/lang/String;)V
      94: aload_0
      95: getfield      #5                  // Field pulsarSinkConfig:Lorg/apache/pulsar/functions/sink/PulsarSinkConfig;
      98: invokevirtual #73                 // Method org/apache/pulsar/functions/sink/PulsarSinkConfig.getSchemaType:()Ljava/lang/String;
     101: invokestatic  #79                 // Method org/apache/pulsar/common/schema/SchemaType.valueOf:(Ljava/lang/String;)Lorg/apache/pulsar/common/schema/SchemaType;
     104: astore_3
     105: getstatic     #76                 // Field org/apache/pulsar/common/schema/SchemaType.AUTO_CONSUME:Lorg/apache/pulsar/common/schema/SchemaType;
     108: aload_3
     109: if_acmpeq     126
     112: getstatic     #3                  // Field log:Lorg/slf4j/Logger;
     115: ldc           #80                 // String The configured schema type {} is not able to write GenericRecords. So overwrite the schema type to be {}
     117: aload_3
     118: getstatic     #76                 // Field org/apache/pulsar/common/schema/SchemaType.AUTO_CONSUME:Lorg/apache/pulsar/common/schema/SchemaType;
     121: invokeinterface #81,  4           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     126: goto          140
     129: aload_2
     130: aload_0
     131: getfield      #5                  // Field pulsarSinkConfig:Lorg/apache/pulsar/functions/sink/PulsarSinkConfig;
     134: invokevirtual #73                 // Method org/apache/pulsar/functions/sink/PulsarSinkConfig.getSchemaType:()Ljava/lang/String;
     137: invokevirtual #78                 // Method org/apache/pulsar/common/functions/ConsumerConfig.setSchemaType:(Ljava/lang/String;)V
     140: aload_0
     141: getfield      #9                  // Field topicSchema:Lorg/apache/pulsar/functions/source/TopicSchema;
     144: aload_0
     145: getfield      #5                  // Field pulsarSinkConfig:Lorg/apache/pulsar/functions/sink/PulsarSinkConfig;
     148: invokevirtual #82                 // Method org/apache/pulsar/functions/sink/PulsarSinkConfig.getTopic:()Ljava/lang/String;
     151: aload_1
     152: aload_2
     153: iconst_0
     154: invokevirtual #83                 // Method org/apache/pulsar/functions/source/TopicSchema.getSchema:(Ljava/lang/String;Ljava/lang/Class;Lorg/apache/pulsar/common/functions/ConsumerConfig;Z)Lorg/apache/pulsar/client/api/Schema;
     157: areturn
     158: aload_2
     159: aload_0
     160: getfield      #5                  // Field pulsarSinkConfig:Lorg/apache/pulsar/functions/sink/PulsarSinkConfig;
     163: invokevirtual #84                 // Method org/apache/pulsar/functions/sink/PulsarSinkConfig.getSerdeClassName:()Ljava/lang/String;
     166: invokevirtual #78                 // Method org/apache/pulsar/common/functions/ConsumerConfig.setSchemaType:(Ljava/lang/String;)V
     169: aload_0
     170: getfield      #9                  // Field topicSchema:Lorg/apache/pulsar/functions/source/TopicSchema;
     173: aload_0
     174: getfield      #5                  // Field pulsarSinkConfig:Lorg/apache/pulsar/functions/sink/PulsarSinkConfig;
     177: invokevirtual #82                 // Method org/apache/pulsar/functions/sink/PulsarSinkConfig.getTopic:()Ljava/lang/String;
     180: aload_1
     181: aload_2
     182: iconst_0
     183: aload_0
     184: getfield      #10                 // Field functionClassLoader:Ljava/lang/ClassLoader;
     187: invokevirtual #85                 // Method org/apache/pulsar/functions/source/TopicSchema.getSchema:(Ljava/lang/String;Ljava/lang/Class;Lorg/apache/pulsar/common/functions/ConsumerConfig;ZLjava/lang/ClassLoader;)Lorg/apache/pulsar/client/api/Schema;
     190: areturn

  org.apache.pulsar.functions.sink.PulsarSink$Crypto initializeCrypto() throws java.lang.ClassNotFoundException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field pulsarSinkConfig:Lorg/apache/pulsar/functions/sink/PulsarSinkConfig;
       4: invokevirtual #86                 // Method org/apache/pulsar/functions/sink/PulsarSinkConfig.getProducerConfig:()Lorg/apache/pulsar/common/functions/ProducerConfig;
       7: ifnull        42
      10: aload_0
      11: getfield      #5                  // Field pulsarSinkConfig:Lorg/apache/pulsar/functions/sink/PulsarSinkConfig;
      14: invokevirtual #86                 // Method org/apache/pulsar/functions/sink/PulsarSinkConfig.getProducerConfig:()Lorg/apache/pulsar/common/functions/ProducerConfig;
      17: invokevirtual #87                 // Method org/apache/pulsar/common/functions/ProducerConfig.getCryptoConfig:()Lorg/apache/pulsar/common/functions/CryptoConfig;
      20: ifnull        42
      23: aload_0
      24: getfield      #5                  // Field pulsarSinkConfig:Lorg/apache/pulsar/functions/sink/PulsarSinkConfig;
      27: invokevirtual #86                 // Method org/apache/pulsar/functions/sink/PulsarSinkConfig.getProducerConfig:()Lorg/apache/pulsar/common/functions/ProducerConfig;
      30: invokevirtual #87                 // Method org/apache/pulsar/common/functions/ProducerConfig.getCryptoConfig:()Lorg/apache/pulsar/common/functions/CryptoConfig;
      33: invokevirtual #88                 // Method org/apache/pulsar/common/functions/CryptoConfig.getCryptoKeyReaderClassName:()Ljava/lang/String;
      36: invokestatic  #89                 // Method org/apache/commons/lang/StringUtils.isEmpty:(Ljava/lang/String;)Z
      39: ifeq          44
      42: aconst_null
      43: areturn
      44: aload_0
      45: getfield      #5                  // Field pulsarSinkConfig:Lorg/apache/pulsar/functions/sink/PulsarSinkConfig;
      48: invokevirtual #86                 // Method org/apache/pulsar/functions/sink/PulsarSinkConfig.getProducerConfig:()Lorg/apache/pulsar/common/functions/ProducerConfig;
      51: invokevirtual #87                 // Method org/apache/pulsar/common/functions/ProducerConfig.getCryptoConfig:()Lorg/apache/pulsar/common/functions/CryptoConfig;
      54: astore_1
      55: ldc           #91                 // String BC
      57: invokestatic  #92                 // Method java/security/Security.getProvider:(Ljava/lang/String;)Ljava/security/Provider;
      60: ifnonnull     74
      63: new           #90                 // class org/bouncycastle/jce/provider/BouncyCastleProvider
      66: dup
      67: invokespecial #93                 // Method org/bouncycastle/jce/provider/BouncyCastleProvider."<init>":()V
      70: invokestatic  #94                 // Method java/security/Security.addProvider:(Ljava/security/Provider;)I
      73: pop
      74: aload_1
      75: invokevirtual #95                 // Method org/apache/pulsar/common/functions/CryptoConfig.getEncryptionKeys:()[Ljava/lang/String;
      78: astore_2
      79: invokestatic  #96                 // Method org/apache/pulsar/functions/sink/PulsarSink$Crypto.builder:()Lorg/apache/pulsar/functions/sink/PulsarSink$Crypto$CryptoBuilder;
      82: aload_1
      83: invokevirtual #97                 // Method org/apache/pulsar/common/functions/CryptoConfig.getProducerCryptoFailureAction:()Lorg/apache/pulsar/client/api/ProducerCryptoFailureAction;
      86: invokevirtual #98                 // Method org/apache/pulsar/functions/sink/PulsarSink$Crypto$CryptoBuilder.failureAction:(Lorg/apache/pulsar/client/api/ProducerCryptoFailureAction;)Lorg/apache/pulsar/functions/sink/PulsarSink$Crypto$CryptoBuilder;
      89: aload_2
      90: invokevirtual #99                 // Method org/apache/pulsar/functions/sink/PulsarSink$Crypto$CryptoBuilder.encryptionKeys:([Ljava/lang/String;)Lorg/apache/pulsar/functions/sink/PulsarSink$Crypto$CryptoBuilder;
      93: astore_3
      94: aload_3
      95: aload_1
      96: invokevirtual #88                 // Method org/apache/pulsar/common/functions/CryptoConfig.getCryptoKeyReaderClassName:()Ljava/lang/String;
      99: aload_1
     100: invokevirtual #100                // Method org/apache/pulsar/common/functions/CryptoConfig.getCryptoKeyReaderConfig:()Ljava/util/Map;
     103: aload_0
     104: getfield      #10                 // Field functionClassLoader:Ljava/lang/ClassLoader;
     107: invokestatic  #101                // Method org/apache/pulsar/functions/utils/CryptoUtils.getCryptoKeyReaderInstance:(Ljava/lang/String;Ljava/util/Map;Ljava/lang/ClassLoader;)Lorg/apache/pulsar/client/api/CryptoKeyReader;
     110: invokevirtual #102                // Method org/apache/pulsar/functions/sink/PulsarSink$Crypto$CryptoBuilder.keyReader:(Lorg/apache/pulsar/client/api/CryptoKeyReader;)Lorg/apache/pulsar/functions/sink/PulsarSink$Crypto$CryptoBuilder;
     113: pop
     114: aload_3
     115: invokevirtual #103                // Method org/apache/pulsar/functions/sink/PulsarSink$Crypto$CryptoBuilder.build:()Lorg/apache/pulsar/functions/sink/PulsarSink$Crypto;
     118: areturn

  static org.apache.pulsar.functions.sink.PulsarSinkConfig access$000(org.apache.pulsar.functions.sink.PulsarSink);
    Code:
       0: aload_0
       1: getfield      #5                  // Field pulsarSinkConfig:Lorg/apache/pulsar/functions/sink/PulsarSinkConfig;
       4: areturn

  static java.util.Map access$300(org.apache.pulsar.functions.sink.PulsarSink);
    Code:
       0: aload_0
       1: getfield      #4                  // Field properties:Ljava/util/Map;
       4: areturn

  static org.slf4j.Logger access$400();
    Code:
       0: getstatic     #3                  // Field log:Lorg/slf4j/Logger;
       3: areturn

  static org.apache.pulsar.functions.instance.stats.ComponentStatsManager access$500(org.apache.pulsar.functions.sink.PulsarSink);
    Code:
       0: aload_0
       1: getfield      #2                  // Field stats:Lorg/apache/pulsar/functions/instance/stats/ComponentStatsManager;
       4: areturn

  static org.apache.pulsar.client.api.PulsarClient access$600(org.apache.pulsar.functions.sink.PulsarSink);
    Code:
       0: aload_0
       1: getfield      #1                  // Field client:Lorg/apache/pulsar/client/api/PulsarClient;
       4: areturn

  static {};
    Code:
       0: ldc           #104                // class org/apache/pulsar/functions/sink/PulsarSink
       2: invokestatic  #105                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #3                  // Field log:Lorg/slf4j/Logger;
       8: return
}
