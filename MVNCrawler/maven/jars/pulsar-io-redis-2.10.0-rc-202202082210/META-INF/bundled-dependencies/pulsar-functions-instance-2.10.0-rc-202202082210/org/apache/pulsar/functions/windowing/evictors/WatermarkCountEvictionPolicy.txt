Compiled from "WatermarkCountEvictionPolicy.java"
public class org.apache.pulsar.functions.windowing.evictors.WatermarkCountEvictionPolicy<T> implements org.apache.pulsar.functions.windowing.EvictionPolicy<T, org.apache.commons.lang3.tuple.Pair<java.lang.Long, java.lang.Long>> {
  protected final int threshold;

  protected final java.util.concurrent.atomic.AtomicLong currentCount;

  private org.apache.pulsar.functions.windowing.EvictionContext context;

  private static final java.util.concurrent.atomic.AtomicLongFieldUpdater<org.apache.pulsar.functions.windowing.evictors.WatermarkCountEvictionPolicy> PROCESSED_UPDATER;

  private volatile long processed;

  public org.apache.pulsar.functions.windowing.evictors.WatermarkCountEvictionPolicy(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field threshold:I
       9: aload_0
      10: new           #3                  // class java/util/concurrent/atomic/AtomicLong
      13: dup
      14: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      17: putfield      #5                  // Field currentCount:Ljava/util/concurrent/atomic/AtomicLong;
      20: return

  public org.apache.pulsar.functions.windowing.EvictionPolicy$Action evict(org.apache.pulsar.functions.windowing.Event<T>);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getContext:()Lorg/apache/pulsar/functions/windowing/EvictionContext;
       4: ifnonnull     11
       7: getstatic     #7                  // Field org/apache/pulsar/functions/windowing/EvictionPolicy$Action.STOP:Lorg/apache/pulsar/functions/windowing/EvictionPolicy$Action;
      10: areturn
      11: aload_1
      12: invokeinterface #8,  1            // InterfaceMethod org/apache/pulsar/functions/windowing/Event.getTimestamp:()J
      17: aload_0
      18: invokevirtual #6                  // Method getContext:()Lorg/apache/pulsar/functions/windowing/EvictionContext;
      21: invokeinterface #9,  1            // InterfaceMethod org/apache/pulsar/functions/windowing/EvictionContext.getReferenceTime:()Ljava/lang/Long;
      26: invokevirtual #10                 // Method java/lang/Long.longValue:()J
      29: lcmp
      30: ifgt          72
      33: aload_0
      34: getfield      #11                 // Field processed:J
      37: aload_0
      38: getfield      #5                  // Field currentCount:Ljava/util/concurrent/atomic/AtomicLong;
      41: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      44: lcmp
      45: ifge          72
      48: aload_0
      49: aload_1
      50: invokespecial #13                 // Method doEvict:(Lorg/apache/pulsar/functions/windowing/Event;)Lorg/apache/pulsar/functions/windowing/EvictionPolicy$Action;
      53: astore_2
      54: aload_2
      55: getstatic     #14                 // Field org/apache/pulsar/functions/windowing/EvictionPolicy$Action.PROCESS:Lorg/apache/pulsar/functions/windowing/EvictionPolicy$Action;
      58: if_acmpne     76
      61: getstatic     #15                 // Field PROCESSED_UPDATER:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      64: aload_0
      65: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.incrementAndGet:(Ljava/lang/Object;)J
      68: pop2
      69: goto          76
      72: getstatic     #17                 // Field org/apache/pulsar/functions/windowing/EvictionPolicy$Action.KEEP:Lorg/apache/pulsar/functions/windowing/EvictionPolicy$Action;
      75: astore_2
      76: aload_2
      77: areturn

  private org.apache.pulsar.functions.windowing.EvictionPolicy$Action doEvict(org.apache.pulsar.functions.windowing.Event<T>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field currentCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lstore_2
       8: lload_2
       9: aload_0
      10: getfield      #2                  // Field threshold:I
      13: i2l
      14: lcmp
      15: ifle          39
      18: aload_0
      19: getfield      #5                  // Field currentCount:Ljava/util/concurrent/atomic/AtomicLong;
      22: lload_2
      23: lload_2
      24: lconst_1
      25: lsub
      26: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicLong.compareAndSet:(JJ)Z
      29: ifeq          36
      32: getstatic     #19                 // Field org/apache/pulsar/functions/windowing/EvictionPolicy$Action.EXPIRE:Lorg/apache/pulsar/functions/windowing/EvictionPolicy$Action;
      35: areturn
      36: goto          0
      39: getstatic     #14                 // Field org/apache/pulsar/functions/windowing/EvictionPolicy$Action.PROCESS:Lorg/apache/pulsar/functions/windowing/EvictionPolicy$Action;
      42: areturn

  public void track(org.apache.pulsar.functions.windowing.Event<T>);
    Code:
       0: return

  public org.apache.pulsar.functions.windowing.EvictionContext getContext();
    Code:
       0: aload_0
       1: getfield      #20                 // Field context:Lorg/apache/pulsar/functions/windowing/EvictionContext;
       4: areturn

  public void setContext(org.apache.pulsar.functions.windowing.EvictionContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field context:Lorg/apache/pulsar/functions/windowing/EvictionContext;
       5: aload_1
       6: invokeinterface #21,  1           // InterfaceMethod org/apache/pulsar/functions/windowing/EvictionContext.getCurrentCount:()Ljava/lang/Long;
      11: ifnull        33
      14: aload_0
      15: getfield      #5                  // Field currentCount:Ljava/util/concurrent/atomic/AtomicLong;
      18: aload_1
      19: invokeinterface #21,  1           // InterfaceMethod org/apache/pulsar/functions/windowing/EvictionContext.getCurrentCount:()Ljava/lang/Long;
      24: invokevirtual #10                 // Method java/lang/Long.longValue:()J
      27: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      30: goto          54
      33: aload_0
      34: getfield      #5                  // Field currentCount:Ljava/util/concurrent/atomic/AtomicLong;
      37: aload_0
      38: getfield      #11                 // Field processed:J
      41: aload_1
      42: invokeinterface #23,  1           // InterfaceMethod org/apache/pulsar/functions/windowing/EvictionContext.getSlidingCount:()Ljava/lang/Long;
      47: invokevirtual #10                 // Method java/lang/Long.longValue:()J
      50: ladd
      51: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      54: aload_0
      55: lconst_0
      56: putfield      #11                 // Field processed:J
      59: return

  public void reset();
    Code:
       0: aload_0
       1: lconst_0
       2: putfield      #11                 // Field processed:J
       5: return

  public org.apache.commons.lang3.tuple.Pair<java.lang.Long, java.lang.Long> getState();
    Code:
       0: aload_0
       1: getfield      #5                  // Field currentCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: invokestatic  #24                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      10: aload_0
      11: getfield      #11                 // Field processed:J
      14: invokestatic  #24                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      17: invokestatic  #25                 // Method org/apache/commons/lang3/tuple/Pair.of:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/tuple/Pair;
      20: areturn

  public void restoreState(org.apache.commons.lang3.tuple.Pair<java.lang.Long, java.lang.Long>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field currentCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: aload_1
       5: invokevirtual #26                 // Method org/apache/commons/lang3/tuple/Pair.getLeft:()Ljava/lang/Object;
       8: checkcast     #27                 // class java/lang/Long
      11: invokevirtual #10                 // Method java/lang/Long.longValue:()J
      14: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      17: aload_0
      18: aload_1
      19: invokevirtual #28                 // Method org/apache/commons/lang3/tuple/Pair.getRight:()Ljava/lang/Object;
      22: checkcast     #27                 // class java/lang/Long
      25: invokevirtual #10                 // Method java/lang/Long.longValue:()J
      28: putfield      #11                 // Field processed:J
      31: return

  public java.lang.String toString();
    Code:
       0: new           #29                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #31                 // String WatermarkCountEvictionPolicy{}
       9: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokespecial #33                 // Method java/lang/Object.toString:()Ljava/lang/String;
      16: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  public void restoreState(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #35                 // class org/apache/commons/lang3/tuple/Pair
       5: invokevirtual #36                 // Method restoreState:(Lorg/apache/commons/lang3/tuple/Pair;)V
       8: return

  public java.lang.Object getState();
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method getState:()Lorg/apache/commons/lang3/tuple/Pair;
       4: areturn

  static {};
    Code:
       0: ldc           #38                 // class org/apache/pulsar/functions/windowing/evictors/WatermarkCountEvictionPolicy
       2: ldc           #39                 // String processed
       4: invokestatic  #40                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
       7: putstatic     #15                 // Field PROCESSED_UPDATER:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: return
}
