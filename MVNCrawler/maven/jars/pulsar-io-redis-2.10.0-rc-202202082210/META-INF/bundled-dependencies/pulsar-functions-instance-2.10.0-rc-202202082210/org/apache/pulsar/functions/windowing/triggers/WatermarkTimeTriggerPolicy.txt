Compiled from "WatermarkTimeTriggerPolicy.java"
public class org.apache.pulsar.functions.windowing.triggers.WatermarkTimeTriggerPolicy<T> implements org.apache.pulsar.functions.windowing.TriggerPolicy<T, java.lang.Long> {
  private static final org.slf4j.Logger log;

  private final long slidingIntervalMs;

  private final org.apache.pulsar.functions.windowing.TriggerHandler handler;

  private final org.apache.pulsar.functions.windowing.EvictionPolicy<T, ?> evictionPolicy;

  private final org.apache.pulsar.functions.windowing.WindowManager<T> windowManager;

  private volatile long nextWindowEndTs;

  private boolean started;

  public org.apache.pulsar.functions.windowing.triggers.WatermarkTimeTriggerPolicy(long, org.apache.pulsar.functions.windowing.TriggerHandler, org.apache.pulsar.functions.windowing.EvictionPolicy<T, ?>, org.apache.pulsar.functions.windowing.WindowManager<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lload_1
       6: putfield      #2                  // Field slidingIntervalMs:J
       9: aload_0
      10: aload_3
      11: putfield      #3                  // Field handler:Lorg/apache/pulsar/functions/windowing/TriggerHandler;
      14: aload_0
      15: aload         4
      17: putfield      #4                  // Field evictionPolicy:Lorg/apache/pulsar/functions/windowing/EvictionPolicy;
      20: aload_0
      21: aload         5
      23: putfield      #5                  // Field windowManager:Lorg/apache/pulsar/functions/windowing/WindowManager;
      26: aload_0
      27: iconst_0
      28: putfield      #6                  // Field started:Z
      31: return

  public void track(org.apache.pulsar.functions.windowing.Event<T>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field started:Z
       4: ifeq          21
       7: aload_1
       8: invokeinterface #7,  1            // InterfaceMethod org/apache/pulsar/functions/windowing/Event.isWatermark:()Z
      13: ifeq          21
      16: aload_0
      17: aload_1
      18: invokespecial #8                  // Method handleWaterMarkEvent:(Lorg/apache/pulsar/functions/windowing/Event;)V
      21: return

  public void reset();
    Code:
       0: return

  public void start();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #6                  // Field started:Z
       5: return

  public void shutdown();
    Code:
       0: return

  private void handleWaterMarkEvent(org.apache.pulsar.functions.windowing.Event<T>);
    Code:
       0: aload_1
       1: invokeinterface #9,  1            // InterfaceMethod org/apache/pulsar/functions/windowing/Event.getTimestamp:()J
       6: lstore_2
       7: aload_0
       8: getfield      #10                 // Field nextWindowEndTs:J
      11: lstore        4
      13: getstatic     #11                 // Field log:Lorg/slf4j/Logger;
      16: invokeinterface #12,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      21: ifeq          43
      24: getstatic     #11                 // Field log:Lorg/slf4j/Logger;
      27: ldc           #13                 // String Window end ts {} Watermark ts {}
      29: lload         4
      31: invokestatic  #14                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      34: lload_2
      35: invokestatic  #14                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      38: invokeinterface #15,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      43: lload         4
      45: lload_2
      46: lcmp
      47: ifgt          196
      50: aload_0
      51: getfield      #5                  // Field windowManager:Lorg/apache/pulsar/functions/windowing/WindowManager;
      54: lload         4
      56: invokevirtual #16                 // Method org/apache/pulsar/functions/windowing/WindowManager.getEventCount:(J)I
      59: i2l
      60: lstore        6
      62: aload_0
      63: getfield      #4                  // Field evictionPolicy:Lorg/apache/pulsar/functions/windowing/EvictionPolicy;
      66: new           #17                 // class org/apache/pulsar/functions/windowing/DefaultEvictionContext
      69: dup
      70: lload         4
      72: invokestatic  #14                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      75: lload         6
      77: invokestatic  #14                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      80: invokespecial #18                 // Method org/apache/pulsar/functions/windowing/DefaultEvictionContext."<init>":(Ljava/lang/Long;Ljava/lang/Long;)V
      83: invokeinterface #19,  2           // InterfaceMethod org/apache/pulsar/functions/windowing/EvictionPolicy.setContext:(Lorg/apache/pulsar/functions/windowing/EvictionContext;)V
      88: aload_0
      89: getfield      #3                  // Field handler:Lorg/apache/pulsar/functions/windowing/TriggerHandler;
      92: invokeinterface #20,  1           // InterfaceMethod org/apache/pulsar/functions/windowing/TriggerHandler.onTrigger:()Z
      97: ifeq          112
     100: lload         4
     102: aload_0
     103: getfield      #2                  // Field slidingIntervalMs:J
     106: ladd
     107: lstore        4
     109: goto          193
     112: aload_0
     113: lload         4
     115: lload_2
     116: invokespecial #21                 // Method getNextAlignedWindowTs:(JJ)J
     119: lstore        8
     121: getstatic     #11                 // Field log:Lorg/slf4j/Logger;
     124: invokeinterface #12,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     129: ifeq          147
     132: getstatic     #11                 // Field log:Lorg/slf4j/Logger;
     135: ldc           #22                 // String Next aligned window end ts {}
     137: lload         8
     139: invokestatic  #14                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     142: invokeinterface #23,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     147: lload         8
     149: ldc2_w        #25                 // long 9223372036854775807l
     152: lcmp
     153: ifne          189
     156: getstatic     #11                 // Field log:Lorg/slf4j/Logger;
     159: invokeinterface #12,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     164: ifeq          196
     167: getstatic     #11                 // Field log:Lorg/slf4j/Logger;
     170: ldc           #27                 // String No events to process between {} and watermark ts {}
     172: lload         4
     174: invokestatic  #14                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     177: lload_2
     178: invokestatic  #14                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     181: invokeinterface #15,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     186: goto          196
     189: lload         8
     191: lstore        4
     193: goto          43
     196: aload_0
     197: lload         4
     199: putfield      #10                 // Field nextWindowEndTs:J
     202: return

  private long getNextAlignedWindowTs(long, long);
    Code:
       0: aload_0
       1: getfield      #5                  // Field windowManager:Lorg/apache/pulsar/functions/windowing/WindowManager;
       4: lload_1
       5: lload_3
       6: invokevirtual #28                 // Method org/apache/pulsar/functions/windowing/WindowManager.getEarliestEventTs:(JJ)J
       9: lstore        5
      11: lload         5
      13: ldc2_w        #25                 // long 9223372036854775807l
      16: lcmp
      17: ifeq          32
      20: lload         5
      22: aload_0
      23: getfield      #2                  // Field slidingIntervalMs:J
      26: lrem
      27: lconst_0
      28: lcmp
      29: ifne          35
      32: lload         5
      34: lreturn
      35: lload         5
      37: aload_0
      38: getfield      #2                  // Field slidingIntervalMs:J
      41: lload         5
      43: aload_0
      44: getfield      #2                  // Field slidingIntervalMs:J
      47: lrem
      48: lsub
      49: ladd
      50: lreturn

  public java.lang.Long getState();
    Code:
       0: aload_0
       1: getfield      #10                 // Field nextWindowEndTs:J
       4: invokestatic  #14                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       7: areturn

  public void restoreState(java.lang.Long);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #29                 // Method java/lang/Long.longValue:()J
       5: putfield      #10                 // Field nextWindowEndTs:J
       8: return

  public java.lang.String toString();
    Code:
       0: new           #30                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #32                 // String WatermarkTimeTriggerPolicy{slidingIntervalMs=
       9: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field slidingIntervalMs:J
      16: invokevirtual #34                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      19: ldc           #35                 // String , nextWindowEndTs=
      21: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #10                 // Field nextWindowEndTs:J
      28: invokevirtual #34                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      31: ldc           #36                 // String , started=
      33: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #6                  // Field started:Z
      40: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      43: bipush        125
      45: invokevirtual #38                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      48: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: areturn

  public void restoreState(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #24                 // class java/lang/Long
       5: invokevirtual #40                 // Method restoreState:(Ljava/lang/Long;)V
       8: return

  public java.lang.Object getState();
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method getState:()Ljava/lang/Long;
       4: areturn

  static {};
    Code:
       0: ldc           #42                 // class org/apache/pulsar/functions/windowing/triggers/WatermarkTimeTriggerPolicy
       2: invokestatic  #43                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #11                 // Field log:Lorg/slf4j/Logger;
       8: return
}
