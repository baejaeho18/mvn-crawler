Compiled from "ConcurrentOpenHashMap.java"
public class org.apache.bookkeeper.util.collections.ConcurrentOpenHashMap<K, V> {
  private static final java.lang.Object EmptyKey;

  private static final java.lang.Object DeletedKey;

  private static final float MapFillFactor;

  private static final int DefaultExpectedItems;

  private static final int DefaultConcurrencyLevel;

  private final org.apache.bookkeeper.util.collections.ConcurrentOpenHashMap$Section<K, V>[] sections;

  private static final long HashMixer;

  private static final int R;

  public org.apache.bookkeeper.util.collections.ConcurrentOpenHashMap();
    Code:
       0: aload_0
       1: sipush        256
       4: invokespecial #5                  // Method "<init>":(I)V
       7: return

  public org.apache.bookkeeper.util.collections.ConcurrentOpenHashMap(int);
    Code:
       0: aload_0
       1: iload_1
       2: bipush        16
       4: invokespecial #6                  // Method "<init>":(II)V
       7: return

  public org.apache.bookkeeper.util.collections.ConcurrentOpenHashMap(int, int);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: iload_1
       5: ifle          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      16: iload_2
      17: ifle          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      28: iload_1
      29: iload_2
      30: if_icmplt     37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      41: iload_2
      42: istore_3
      43: iload_1
      44: iload_3
      45: idiv
      46: istore        4
      48: iload         4
      50: i2f
      51: ldc           #9                  // float 0.66f
      53: fdiv
      54: f2i
      55: istore        5
      57: aload_0
      58: iload_3
      59: anewarray     #10                 // class org/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section
      62: checkcast     #11                 // class "[Lorg/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section;"
      65: putfield      #12                 // Field sections:[Lorg/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section;
      68: iconst_0
      69: istore        6
      71: iload         6
      73: iload_3
      74: if_icmpge     99
      77: aload_0
      78: getfield      #12                 // Field sections:[Lorg/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section;
      81: iload         6
      83: new           #10                 // class org/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section
      86: dup
      87: iload         5
      89: invokespecial #13                 // Method org/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section."<init>":(I)V
      92: aastore
      93: iinc          6, 1
      96: goto          71
      99: return

  public long size();
    Code:
       0: lconst_0
       1: lstore_1
       2: aload_0
       3: getfield      #12                 // Field sections:[Lorg/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section;
       6: astore_3
       7: aload_3
       8: arraylength
       9: istore        4
      11: iconst_0
      12: istore        5
      14: iload         5
      16: iload         4
      18: if_icmpge     42
      21: aload_3
      22: iload         5
      24: aaload
      25: astore        6
      27: lload_1
      28: aload         6
      30: invokestatic  #14                 // Method org/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section.access$000:(Lorg/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section;)I
      33: i2l
      34: ladd
      35: lstore_1
      36: iinc          5, 1
      39: goto          14
      42: lload_1
      43: lreturn

  public long capacity();
    Code:
       0: lconst_0
       1: lstore_1
       2: aload_0
       3: getfield      #12                 // Field sections:[Lorg/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section;
       6: astore_3
       7: aload_3
       8: arraylength
       9: istore        4
      11: iconst_0
      12: istore        5
      14: iload         5
      16: iload         4
      18: if_icmpge     42
      21: aload_3
      22: iload         5
      24: aaload
      25: astore        6
      27: lload_1
      28: aload         6
      30: invokestatic  #15                 // Method org/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section.access$100:(Lorg/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section;)I
      33: i2l
      34: ladd
      35: lstore_1
      36: iinc          5, 1
      39: goto          14
      42: lload_1
      43: lreturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #12                 // Field sections:[Lorg/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section;
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     36
      15: aload_1
      16: iload_3
      17: aaload
      18: astore        4
      20: aload         4
      22: invokestatic  #14                 // Method org/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section.access$000:(Lorg/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section;)I
      25: ifeq          30
      28: iconst_0
      29: ireturn
      30: iinc          3, 1
      33: goto          10
      36: iconst_1
      37: ireturn

  public V get(K);
    Code:
       0: aload_1
       1: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #17                 // Method hash:(Ljava/lang/Object;)J
       9: lstore_2
      10: aload_0
      11: lload_2
      12: invokespecial #18                 // Method getSection:(J)Lorg/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section;
      15: aload_1
      16: lload_2
      17: l2i
      18: invokevirtual #19                 // Method org/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section.get:(Ljava/lang/Object;I)Ljava/lang/Object;
      21: areturn

  public boolean containsKey(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method get:(Ljava/lang/Object;)Ljava/lang/Object;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public V put(K, V);
    Code:
       0: aload_1
       1: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_1
      11: invokestatic  #17                 // Method hash:(Ljava/lang/Object;)J
      14: lstore_3
      15: aload_0
      16: lload_3
      17: invokespecial #18                 // Method getSection:(J)Lorg/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section;
      20: aload_1
      21: aload_2
      22: lload_3
      23: l2i
      24: iconst_0
      25: aconst_null
      26: invokevirtual #21                 // Method org/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section.put:(Ljava/lang/Object;Ljava/lang/Object;IZLjava/util/function/Function;)Ljava/lang/Object;
      29: areturn

  public V putIfAbsent(K, V);
    Code:
       0: aload_1
       1: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_1
      11: invokestatic  #17                 // Method hash:(Ljava/lang/Object;)J
      14: lstore_3
      15: aload_0
      16: lload_3
      17: invokespecial #18                 // Method getSection:(J)Lorg/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section;
      20: aload_1
      21: aload_2
      22: lload_3
      23: l2i
      24: iconst_1
      25: aconst_null
      26: invokevirtual #21                 // Method org/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section.put:(Ljava/lang/Object;Ljava/lang/Object;IZLjava/util/function/Function;)Ljava/lang/Object;
      29: areturn

  public V computeIfAbsent(K, java.util.function.Function<K, V>);
    Code:
       0: aload_1
       1: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_1
      11: invokestatic  #17                 // Method hash:(Ljava/lang/Object;)J
      14: lstore_3
      15: aload_0
      16: lload_3
      17: invokespecial #18                 // Method getSection:(J)Lorg/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section;
      20: aload_1
      21: aconst_null
      22: lload_3
      23: l2i
      24: iconst_1
      25: aload_2
      26: invokevirtual #21                 // Method org/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section.put:(Ljava/lang/Object;Ljava/lang/Object;IZLjava/util/function/Function;)Ljava/lang/Object;
      29: areturn

  public V remove(K);
    Code:
       0: aload_1
       1: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #17                 // Method hash:(Ljava/lang/Object;)J
       9: lstore_2
      10: aload_0
      11: lload_2
      12: invokespecial #18                 // Method getSection:(J)Lorg/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section;
      15: aload_1
      16: aconst_null
      17: lload_2
      18: l2i
      19: invokestatic  #22                 // Method org/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section.access$200:(Lorg/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section;Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;
      22: areturn

  public boolean remove(K, java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_1
      11: invokestatic  #17                 // Method hash:(Ljava/lang/Object;)J
      14: lstore_3
      15: aload_0
      16: lload_3
      17: invokespecial #18                 // Method getSection:(J)Lorg/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section;
      20: aload_1
      21: aload_2
      22: lload_3
      23: l2i
      24: invokestatic  #22                 // Method org/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section.access$200:(Lorg/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section;Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;
      27: ifnull        34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn

  private org.apache.bookkeeper.util.collections.ConcurrentOpenHashMap$Section<K, V> getSection(long);
    Code:
       0: lload_1
       1: bipush        32
       3: lushr
       4: l2i
       5: aload_0
       6: getfield      #12                 // Field sections:[Lorg/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section;
       9: arraylength
      10: iconst_1
      11: isub
      12: iand
      13: istore_3
      14: aload_0
      15: getfield      #12                 // Field sections:[Lorg/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section;
      18: iload_3
      19: aaload
      20: areturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #12                 // Field sections:[Lorg/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section;
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     31
      15: aload_1
      16: iload_3
      17: aaload
      18: astore        4
      20: aload         4
      22: invokevirtual #23                 // Method org/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section.clear:()V
      25: iinc          3, 1
      28: goto          10
      31: return

  public void forEach(java.util.function.BiConsumer<? super K, ? super V>);
    Code:
       0: aload_0
       1: getfield      #12                 // Field sections:[Lorg/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section;
       4: astore_2
       5: aload_2
       6: arraylength
       7: istore_3
       8: iconst_0
       9: istore        4
      11: iload         4
      13: iload_3
      14: if_icmpge     35
      17: aload_2
      18: iload         4
      20: aaload
      21: astore        5
      23: aload         5
      25: aload_1
      26: invokevirtual #24                 // Method org/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section.forEach:(Ljava/util/function/BiConsumer;)V
      29: iinc          4, 1
      32: goto          11
      35: return

  public int removeIf(java.util.function.BiPredicate<K, V>);
    Code:
       0: aload_1
       1: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iconst_0
       6: istore_2
       7: aload_0
       8: getfield      #12                 // Field sections:[Lorg/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section;
      11: astore_3
      12: aload_3
      13: arraylength
      14: istore        4
      16: iconst_0
      17: istore        5
      19: iload         5
      21: iload         4
      23: if_icmpge     47
      26: aload_3
      27: iload         5
      29: aaload
      30: astore        6
      32: iload_2
      33: aload         6
      35: aload_1
      36: invokevirtual #25                 // Method org/apache/bookkeeper/util/collections/ConcurrentOpenHashMap$Section.removeIf:(Ljava/util/function/BiPredicate;)I
      39: iadd
      40: istore_2
      41: iinc          5, 1
      44: goto          19
      47: iload_2
      48: ireturn

  public java.util.List<K> keys();
    Code:
       0: invokestatic  #26                 // Method com/google/common/collect/Lists.newArrayList:()Ljava/util/ArrayList;
       3: astore_1
       4: aload_0
       5: aload_1
       6: invokedynamic #27,  0             // InvokeDynamic #0:accept:(Ljava/util/List;)Ljava/util/function/BiConsumer;
      11: invokevirtual #28                 // Method forEach:(Ljava/util/function/BiConsumer;)V
      14: aload_1
      15: areturn

  public java.util.List<V> values();
    Code:
       0: invokestatic  #26                 // Method com/google/common/collect/Lists.newArrayList:()Ljava/util/ArrayList;
       3: astore_1
       4: aload_0
       5: aload_1
       6: invokedynamic #29,  0             // InvokeDynamic #1:accept:(Ljava/util/List;)Ljava/util/function/BiConsumer;
      11: invokevirtual #28                 // Method forEach:(Ljava/util/function/BiConsumer;)V
      14: aload_1
      15: areturn

  static final <K> long hash(K);
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method java/lang/Object.hashCode:()I
       4: i2l
       5: ldc2_w        #31                 // long -4132994306676758123l
       8: lmul
       9: lstore_1
      10: lload_1
      11: lload_1
      12: bipush        47
      14: lushr
      15: lxor
      16: lstore_1
      17: lload_1
      18: ldc2_w        #31                 // long -4132994306676758123l
      21: lmul
      22: lstore_1
      23: lload_1
      24: lreturn

  static final int signSafeMod(long, int);
    Code:
       0: lload_0
       1: iload_2
       2: iconst_1
       3: isub
       4: i2l
       5: land
       6: l2i
       7: iconst_1
       8: ishl
       9: ireturn

  private static int alignToPowerOfTwo(int);
    Code:
       0: ldc2_w        #33                 // double 2.0d
       3: bipush        32
       5: iload_0
       6: iconst_1
       7: isub
       8: invokestatic  #35                 // Method java/lang/Integer.numberOfLeadingZeros:(I)I
      11: isub
      12: i2d
      13: invokestatic  #36                 // Method java/lang/Math.pow:(DD)D
      16: d2i
      17: ireturn

  private static void lambda$values$1(java.util.List, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #37,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
       7: pop
       8: return

  private static void lambda$keys$0(java.util.List, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #37,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
       7: pop
       8: return

  static int access$300(int);
    Code:
       0: iload_0
       1: invokestatic  #3                  // Method alignToPowerOfTwo:(I)I
       4: ireturn

  static java.lang.Object access$400();
    Code:
       0: getstatic     #2                  // Field EmptyKey:Ljava/lang/Object;
       3: areturn

  static java.lang.Object access$500();
    Code:
       0: getstatic     #1                  // Field DeletedKey:Ljava/lang/Object;
       3: areturn

  static {};
    Code:
       0: aconst_null
       1: putstatic     #2                  // Field EmptyKey:Ljava/lang/Object;
       4: new           #38                 // class java/lang/Object
       7: dup
       8: invokespecial #7                  // Method java/lang/Object."<init>":()V
      11: putstatic     #1                  // Field DeletedKey:Ljava/lang/Object;
      14: return
}
