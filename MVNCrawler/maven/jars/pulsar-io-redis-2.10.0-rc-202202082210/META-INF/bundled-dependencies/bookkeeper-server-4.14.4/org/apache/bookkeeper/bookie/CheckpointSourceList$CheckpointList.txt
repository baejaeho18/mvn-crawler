Compiled from "CheckpointSourceList.java"
class org.apache.bookkeeper.bookie.CheckpointSourceList$CheckpointList implements org.apache.bookkeeper.bookie.CheckpointSource$Checkpoint {
  private final org.apache.bookkeeper.bookie.CheckpointSourceList source;

  private final java.util.List<org.apache.bookkeeper.bookie.CheckpointSource$Checkpoint> checkpoints;

  public org.apache.bookkeeper.bookie.CheckpointSourceList$CheckpointList(org.apache.bookkeeper.bookie.CheckpointSourceList);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field source:Lorg/apache/bookkeeper/bookie/CheckpointSourceList;
       9: aload_0
      10: aload_1
      11: invokestatic  #4                  // Method org/apache/bookkeeper/bookie/CheckpointSourceList.access$200:(Lorg/apache/bookkeeper/bookie/CheckpointSourceList;)Ljava/util/List;
      14: invokeinterface #5,  1            // InterfaceMethod java/util/List.size:()I
      19: invokestatic  #6                  // Method com/google/common/collect/Lists.newArrayListWithCapacity:(I)Ljava/util/ArrayList;
      22: putfield      #7                  // Field checkpoints:Ljava/util/List;
      25: aload_1
      26: invokestatic  #4                  // Method org/apache/bookkeeper/bookie/CheckpointSourceList.access$200:(Lorg/apache/bookkeeper/bookie/CheckpointSourceList;)Ljava/util/List;
      29: invokeinterface #8,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      34: astore_2
      35: aload_2
      36: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      41: ifeq          73
      44: aload_2
      45: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #11                 // class org/apache/bookkeeper/bookie/CheckpointSource
      53: astore_3
      54: aload_0
      55: getfield      #7                  // Field checkpoints:Ljava/util/List;
      58: aload_3
      59: invokeinterface #12,  1           // InterfaceMethod org/apache/bookkeeper/bookie/CheckpointSource.newCheckpoint:()Lorg/apache/bookkeeper/bookie/CheckpointSource$Checkpoint;
      64: invokeinterface #13,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      69: pop
      70: goto          35
      73: return

  private void checkpointComplete(boolean) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: getfield      #2                  // Field source:Lorg/apache/bookkeeper/bookie/CheckpointSourceList;
       7: invokestatic  #4                  // Method org/apache/bookkeeper/bookie/CheckpointSourceList.access$200:(Lorg/apache/bookkeeper/bookie/CheckpointSourceList;)Ljava/util/List;
      10: invokeinterface #5,  1            // InterfaceMethod java/util/List.size:()I
      15: if_icmpge     59
      18: aload_0
      19: getfield      #2                  // Field source:Lorg/apache/bookkeeper/bookie/CheckpointSourceList;
      22: invokestatic  #4                  // Method org/apache/bookkeeper/bookie/CheckpointSourceList.access$200:(Lorg/apache/bookkeeper/bookie/CheckpointSourceList;)Ljava/util/List;
      25: iload_2
      26: invokeinterface #14,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      31: checkcast     #11                 // class org/apache/bookkeeper/bookie/CheckpointSource
      34: aload_0
      35: getfield      #7                  // Field checkpoints:Ljava/util/List;
      38: iload_2
      39: invokeinterface #14,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      44: checkcast     #15                 // class org/apache/bookkeeper/bookie/CheckpointSource$Checkpoint
      47: iload_1
      48: invokeinterface #16,  3           // InterfaceMethod org/apache/bookkeeper/bookie/CheckpointSource.checkpointComplete:(Lorg/apache/bookkeeper/bookie/CheckpointSource$Checkpoint;Z)V
      53: iinc          2, 1
      56: goto          2
      59: return

  public int hashCode();
    Code:
       0: iconst_2
       1: anewarray     #17                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #2                  // Field source:Lorg/apache/bookkeeper/bookie/CheckpointSourceList;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #7                  // Field checkpoints:Ljava/util/List;
      17: aastore
      18: invokestatic  #18                 // Method com/google/common/base/Objects.hashCode:([Ljava/lang/Object;)I
      21: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #19                 // class org/apache/bookkeeper/bookie/CheckpointSourceList$CheckpointList
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #15                 // class org/apache/bookkeeper/bookie/CheckpointSource$Checkpoint
      13: astore_2
      14: iconst_0
      15: aload_0
      16: aload_2
      17: invokevirtual #20                 // Method compareTo:(Lorg/apache/bookkeeper/bookie/CheckpointSource$Checkpoint;)I
      20: if_icmpne     27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public int compareTo(org.apache.bookkeeper.bookie.CheckpointSource$Checkpoint);
    Code:
       0: aload_1
       1: getstatic     #21                 // Field org/apache/bookkeeper/bookie/CheckpointSource$Checkpoint.MAX:Lorg/apache/bookkeeper/bookie/CheckpointSource$Checkpoint;
       4: if_acmpne     9
       7: iconst_m1
       8: ireturn
       9: aload_1
      10: getstatic     #22                 // Field org/apache/bookkeeper/bookie/CheckpointSource$Checkpoint.MIN:Lorg/apache/bookkeeper/bookie/CheckpointSource$Checkpoint;
      13: if_acmpne     18
      16: iconst_1
      17: ireturn
      18: aload_1
      19: instanceof    #19                 // class org/apache/bookkeeper/bookie/CheckpointSourceList$CheckpointList
      22: invokestatic  #23                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      25: aload_1
      26: checkcast     #19                 // class org/apache/bookkeeper/bookie/CheckpointSourceList$CheckpointList
      29: astore_2
      30: aload_0
      31: getfield      #7                  // Field checkpoints:Ljava/util/List;
      34: invokeinterface #5,  1            // InterfaceMethod java/util/List.size:()I
      39: aload_2
      40: getfield      #7                  // Field checkpoints:Ljava/util/List;
      43: invokeinterface #5,  1            // InterfaceMethod java/util/List.size:()I
      48: if_icmpeq     73
      51: aload_0
      52: getfield      #7                  // Field checkpoints:Ljava/util/List;
      55: invokeinterface #5,  1            // InterfaceMethod java/util/List.size:()I
      60: aload_2
      61: getfield      #7                  // Field checkpoints:Ljava/util/List;
      64: invokeinterface #5,  1            // InterfaceMethod java/util/List.size:()I
      69: invokestatic  #24                 // Method java/lang/Integer.compare:(II)I
      72: ireturn
      73: iconst_0
      74: istore_3
      75: iload_3
      76: aload_0
      77: getfield      #7                  // Field checkpoints:Ljava/util/List;
      80: invokeinterface #5,  1            // InterfaceMethod java/util/List.size:()I
      85: if_icmpge     132
      88: aload_0
      89: getfield      #7                  // Field checkpoints:Ljava/util/List;
      92: iload_3
      93: invokeinterface #14,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      98: checkcast     #15                 // class org/apache/bookkeeper/bookie/CheckpointSource$Checkpoint
     101: aload_2
     102: getfield      #7                  // Field checkpoints:Ljava/util/List;
     105: iload_3
     106: invokeinterface #14,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     111: invokeinterface #25,  2           // InterfaceMethod org/apache/bookkeeper/bookie/CheckpointSource$Checkpoint.compareTo:(Ljava/lang/Object;)I
     116: istore        4
     118: iload         4
     120: ifeq          126
     123: iload         4
     125: ireturn
     126: iinc          3, 1
     129: goto          75
     132: iconst_0
     133: ireturn

  public java.lang.String toString();
    Code:
       0: ldc           #19                 // class org/apache/bookkeeper/bookie/CheckpointSourceList$CheckpointList
       2: invokestatic  #26                 // Method com/google/common/base/MoreObjects.toStringHelper:(Ljava/lang/Class;)Lcom/google/common/base/MoreObjects$ToStringHelper;
       5: ldc           #27                 // String checkpoints
       7: aload_0
       8: getfield      #7                  // Field checkpoints:Ljava/util/List;
      11: invokevirtual #28                 // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
      14: invokevirtual #29                 // Method com/google/common/base/MoreObjects$ToStringHelper.toString:()Ljava/lang/String;
      17: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #15                 // class org/apache/bookkeeper/bookie/CheckpointSource$Checkpoint
       5: invokevirtual #20                 // Method compareTo:(Lorg/apache/bookkeeper/bookie/CheckpointSource$Checkpoint;)I
       8: ireturn

  static org.apache.bookkeeper.bookie.CheckpointSourceList access$000(org.apache.bookkeeper.bookie.CheckpointSourceList$CheckpointList);
    Code:
       0: aload_0
       1: getfield      #2                  // Field source:Lorg/apache/bookkeeper/bookie/CheckpointSourceList;
       4: areturn

  static void access$100(org.apache.bookkeeper.bookie.CheckpointSourceList$CheckpointList, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method checkpointComplete:(Z)V
       5: return
}
