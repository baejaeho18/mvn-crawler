Compiled from "LedgerDeleteOp.java"
class org.apache.bookkeeper.client.LedgerDeleteOp$DeleteBuilderImpl implements org.apache.bookkeeper.client.api.DeleteBuilder {
  private java.lang.Long builderLedgerId;

  private final org.apache.bookkeeper.client.BookKeeper bk;

  org.apache.bookkeeper.client.LedgerDeleteOp$DeleteBuilderImpl(org.apache.bookkeeper.client.BookKeeper);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field bk:Lorg/apache/bookkeeper/client/BookKeeper;
       9: return

  public org.apache.bookkeeper.client.api.DeleteBuilder withLedgerId(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #3                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       5: putfield      #4                  // Field builderLedgerId:Ljava/lang/Long;
       8: aload_0
       9: areturn

  public java.util.concurrent.CompletableFuture<java.lang.Void> execute();
    Code:
       0: new           #5                  // class java/util/concurrent/CompletableFuture
       3: dup
       4: invokespecial #6                  // Method java/util/concurrent/CompletableFuture."<init>":()V
       7: astore_1
       8: new           #7                  // class org/apache/bookkeeper/client/SyncCallbackUtils$SyncDeleteCallback
      11: dup
      12: aload_1
      13: invokespecial #8                  // Method org/apache/bookkeeper/client/SyncCallbackUtils$SyncDeleteCallback."<init>":(Ljava/util/concurrent/CompletableFuture;)V
      16: astore_2
      17: aload_0
      18: aload_0
      19: getfield      #4                  // Field builderLedgerId:Ljava/lang/Long;
      22: aload_2
      23: invokespecial #9                  // Method delete:(Ljava/lang/Long;Lorg/apache/bookkeeper/client/AsyncCallback$DeleteCallback;)V
      26: aload_1
      27: areturn

  private boolean validate();
    Code:
       0: aload_0
       1: getfield      #4                  // Field builderLedgerId:Ljava/lang/Long;
       4: ifnull        19
       7: aload_0
       8: getfield      #4                  // Field builderLedgerId:Ljava/lang/Long;
      11: invokevirtual #10                 // Method java/lang/Long.longValue:()J
      14: lconst_0
      15: lcmp
      16: ifge          35
      19: getstatic     #11                 // Field org/apache/bookkeeper/client/LedgerDeleteOp.LOG:Lorg/slf4j/Logger;
      22: ldc           #12                 // String invalid ledgerId {} < 0
      24: aload_0
      25: getfield      #4                  // Field builderLedgerId:Ljava/lang/Long;
      28: invokeinterface #13,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
      33: iconst_0
      34: ireturn
      35: iconst_1
      36: ireturn

  private void delete(java.lang.Long, org.apache.bookkeeper.client.AsyncCallback$DeleteCallback);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method validate:()Z
       4: ifne          17
       7: aload_2
       8: bipush        -14
      10: aconst_null
      11: invokeinterface #16,  3           // InterfaceMethod org/apache/bookkeeper/client/AsyncCallback$DeleteCallback.deleteComplete:(ILjava/lang/Object;)V
      16: return
      17: new           #17                 // class org/apache/bookkeeper/client/LedgerDeleteOp
      20: dup
      21: aload_0
      22: getfield      #2                  // Field bk:Lorg/apache/bookkeeper/client/BookKeeper;
      25: aload_0
      26: getfield      #2                  // Field bk:Lorg/apache/bookkeeper/client/BookKeeper;
      29: invokevirtual #18                 // Method org/apache/bookkeeper/client/BookKeeper.getClientCtx:()Lorg/apache/bookkeeper/client/ClientContext;
      32: invokeinterface #19,  1           // InterfaceMethod org/apache/bookkeeper/client/ClientContext.getClientStats:()Lorg/apache/bookkeeper/client/BookKeeperClientStats;
      37: aload_1
      38: invokevirtual #10                 // Method java/lang/Long.longValue:()J
      41: aload_2
      42: aconst_null
      43: invokespecial #20                 // Method org/apache/bookkeeper/client/LedgerDeleteOp."<init>":(Lorg/apache/bookkeeper/client/BookKeeper;Lorg/apache/bookkeeper/client/BookKeeperClientStats;JLorg/apache/bookkeeper/client/AsyncCallback$DeleteCallback;Ljava/lang/Object;)V
      46: astore_3
      47: aload_0
      48: getfield      #2                  // Field bk:Lorg/apache/bookkeeper/client/BookKeeper;
      51: invokevirtual #21                 // Method org/apache/bookkeeper/client/BookKeeper.getCloseLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      54: astore        4
      56: aload         4
      58: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      61: invokevirtual #23                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      64: aload_0
      65: getfield      #2                  // Field bk:Lorg/apache/bookkeeper/client/BookKeeper;
      68: invokevirtual #24                 // Method org/apache/bookkeeper/client/BookKeeper.isClosed:()Z
      71: ifeq          92
      74: aload_2
      75: bipush        -19
      77: aconst_null
      78: invokeinterface #16,  3           // InterfaceMethod org/apache/bookkeeper/client/AsyncCallback$DeleteCallback.deleteComplete:(ILjava/lang/Object;)V
      83: aload         4
      85: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      88: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      91: return
      92: aload_3
      93: invokevirtual #26                 // Method org/apache/bookkeeper/client/LedgerDeleteOp.initiate:()V
      96: aload         4
      98: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
     101: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
     104: goto          120
     107: astore        5
     109: aload         4
     111: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
     114: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
     117: aload         5
     119: athrow
     120: return
    Exception table:
       from    to  target type
          64    83   107   any
          92    96   107   any
         107   109   107   any
}
