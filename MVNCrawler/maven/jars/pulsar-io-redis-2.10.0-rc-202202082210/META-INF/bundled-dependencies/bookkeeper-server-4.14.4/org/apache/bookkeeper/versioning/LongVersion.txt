Compiled from "LongVersion.java"
public class org.apache.bookkeeper.versioning.LongVersion implements org.apache.bookkeeper.versioning.Version {
  protected long version;

  public org.apache.bookkeeper.versioning.LongVersion(long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lload_1
       6: putfield      #2                  // Field version:J
       9: return

  public org.apache.bookkeeper.versioning.Version$Occurred compare(org.apache.bookkeeper.versioning.Version);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     15
       5: new           #3                  // class java/lang/NullPointerException
       8: dup
       9: ldc           #4                  // String Version is not allowed to be null.
      11: invokespecial #5                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: aload_1
      16: getstatic     #6                  // Field org/apache/bookkeeper/versioning/Version.NEW:Lorg/apache/bookkeeper/versioning/Version;
      19: if_acmpne     26
      22: getstatic     #7                  // Field org/apache/bookkeeper/versioning/Version$Occurred.AFTER:Lorg/apache/bookkeeper/versioning/Version$Occurred;
      25: areturn
      26: aload_1
      27: getstatic     #8                  // Field org/apache/bookkeeper/versioning/Version.ANY:Lorg/apache/bookkeeper/versioning/Version;
      30: if_acmpne     37
      33: getstatic     #9                  // Field org/apache/bookkeeper/versioning/Version$Occurred.CONCURRENTLY:Lorg/apache/bookkeeper/versioning/Version$Occurred;
      36: areturn
      37: aload_1
      38: instanceof    #10                 // class org/apache/bookkeeper/versioning/LongVersion
      41: ifne          54
      44: new           #11                 // class java/lang/IllegalArgumentException
      47: dup
      48: ldc           #12                 // String Invalid version type
      50: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      53: athrow
      54: aload_1
      55: checkcast     #10                 // class org/apache/bookkeeper/versioning/LongVersion
      58: astore_2
      59: aload_0
      60: getfield      #2                  // Field version:J
      63: aload_2
      64: getfield      #2                  // Field version:J
      67: invokestatic  #14                 // Method java/lang/Long.compare:(JJ)I
      70: istore_3
      71: iload_3
      72: ifne          79
      75: getstatic     #9                  // Field org/apache/bookkeeper/versioning/Version$Occurred.CONCURRENTLY:Lorg/apache/bookkeeper/versioning/Version$Occurred;
      78: areturn
      79: iload_3
      80: ifge          87
      83: getstatic     #15                 // Field org/apache/bookkeeper/versioning/Version$Occurred.BEFORE:Lorg/apache/bookkeeper/versioning/Version$Occurred;
      86: areturn
      87: getstatic     #7                  // Field org/apache/bookkeeper/versioning/Version$Occurred.AFTER:Lorg/apache/bookkeeper/versioning/Version$Occurred;
      90: areturn

  public long getLongVersion();
    Code:
       0: aload_0
       1: getfield      #2                  // Field version:J
       4: lreturn

  public org.apache.bookkeeper.versioning.LongVersion setLongVersion(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #2                  // Field version:J
       5: aload_0
       6: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field version:J
       4: bipush        10
       6: invokestatic  #16                 // Method java/lang/Long.toString:(JI)Ljava/lang/String;
       9: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #10                 // class org/apache/bookkeeper/versioning/LongVersion
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #10                 // class org/apache/bookkeeper/versioning/LongVersion
      20: astore_2
      21: aload_2
      22: aload_0
      23: invokevirtual #17                 // Method canEqual:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: getfield      #2                  // Field version:J
      35: aload_2
      36: getfield      #2                  // Field version:J
      39: lcmp
      40: ifeq          45
      43: iconst_0
      44: ireturn
      45: iconst_1
      46: ireturn

  protected boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #10                 // class org/apache/bookkeeper/versioning/LongVersion
       4: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: aload_0
       6: getfield      #2                  // Field version:J
       9: lstore_3
      10: iload_2
      11: bipush        59
      13: imul
      14: lload_3
      15: bipush        32
      17: lushr
      18: lload_3
      19: lxor
      20: l2i
      21: iadd
      22: istore_2
      23: iload_2
      24: ireturn
}
