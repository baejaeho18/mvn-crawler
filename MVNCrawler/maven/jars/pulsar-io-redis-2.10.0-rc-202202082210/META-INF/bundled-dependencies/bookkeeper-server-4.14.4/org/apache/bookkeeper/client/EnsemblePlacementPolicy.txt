Compiled from "EnsemblePlacementPolicy.java"
public interface org.apache.bookkeeper.client.EnsemblePlacementPolicy {
  public abstract org.apache.bookkeeper.client.EnsemblePlacementPolicy initialize(org.apache.bookkeeper.conf.ClientConfiguration, java.util.Optional<org.apache.bookkeeper.net.DNSToSwitchMapping>, io.netty.util.HashedWheelTimer, org.apache.bookkeeper.feature.FeatureProvider, org.apache.bookkeeper.stats.StatsLogger, org.apache.bookkeeper.proto.BookieAddressResolver);

  public abstract void uninitalize();

  public abstract java.util.Set<org.apache.bookkeeper.net.BookieId> onClusterChanged(java.util.Set<org.apache.bookkeeper.net.BookieId>, java.util.Set<org.apache.bookkeeper.net.BookieId>);

  public abstract org.apache.bookkeeper.client.EnsemblePlacementPolicy$PlacementResult<java.util.List<org.apache.bookkeeper.net.BookieId>> newEnsemble(int, int, int, java.util.Map<java.lang.String, byte[]>, java.util.Set<org.apache.bookkeeper.net.BookieId>) throws org.apache.bookkeeper.client.BKException$BKNotEnoughBookiesException;

  public abstract org.apache.bookkeeper.client.EnsemblePlacementPolicy$PlacementResult<org.apache.bookkeeper.net.BookieId> replaceBookie(int, int, int, java.util.Map<java.lang.String, byte[]>, java.util.List<org.apache.bookkeeper.net.BookieId>, org.apache.bookkeeper.net.BookieId, java.util.Set<org.apache.bookkeeper.net.BookieId>) throws org.apache.bookkeeper.client.BKException$BKNotEnoughBookiesException;

  public abstract void registerSlowBookie(org.apache.bookkeeper.net.BookieId, long);

  public abstract org.apache.bookkeeper.client.DistributionSchedule$WriteSet reorderReadSequence(java.util.List<org.apache.bookkeeper.net.BookieId>, org.apache.bookkeeper.client.BookiesHealthInfo, org.apache.bookkeeper.client.DistributionSchedule$WriteSet);

  public abstract org.apache.bookkeeper.client.DistributionSchedule$WriteSet reorderReadLACSequence(java.util.List<org.apache.bookkeeper.net.BookieId>, org.apache.bookkeeper.client.BookiesHealthInfo, org.apache.bookkeeper.client.DistributionSchedule$WriteSet);

  public default void updateBookieInfo(java.util.Map<org.apache.bookkeeper.net.BookieId, org.apache.bookkeeper.client.BookieInfoReader$BookieInfo>);
    Code:
       0: return

  public default int getStickyReadBookieIndex(org.apache.bookkeeper.client.api.LedgerMetadata, java.util.Optional<java.lang.Integer>);
    Code:
       0: aload_2
       1: invokevirtual #1                  // Method java/util/Optional.isPresent:()Z
       4: ifne          20
       7: invokestatic  #2                  // Method java/util/concurrent/ThreadLocalRandom.current:()Ljava/util/concurrent/ThreadLocalRandom;
      10: aload_1
      11: invokeinterface #3,  1            // InterfaceMethod org/apache/bookkeeper/client/api/LedgerMetadata.getEnsembleSize:()I
      16: invokevirtual #4                  // Method java/util/concurrent/ThreadLocalRandom.nextInt:(I)I
      19: ireturn
      20: aload_2
      21: invokevirtual #5                  // Method java/util/Optional.get:()Ljava/lang/Object;
      24: checkcast     #6                  // class java/lang/Integer
      27: invokevirtual #7                  // Method java/lang/Integer.intValue:()I
      30: iconst_1
      31: iadd
      32: i2l
      33: aload_1
      34: invokeinterface #3,  1            // InterfaceMethod org/apache/bookkeeper/client/api/LedgerMetadata.getEnsembleSize:()I
      39: invokestatic  #8                  // Method org/apache/bookkeeper/common/util/MathUtils.signSafeMod:(JI)I
      42: ireturn

  public default org.apache.bookkeeper.client.EnsemblePlacementPolicy$PlacementPolicyAdherence isEnsembleAdheringToPlacementPolicy(java.util.List<org.apache.bookkeeper.net.BookieId>, int, int);
    Code:
       0: getstatic     #9                  // Field org/apache/bookkeeper/client/EnsemblePlacementPolicy$PlacementPolicyAdherence.FAIL:Lorg/apache/bookkeeper/client/EnsemblePlacementPolicy$PlacementPolicyAdherence;
       3: areturn

  public default boolean areAckedBookiesAdheringToPlacementPolicy(java.util.Set<org.apache.bookkeeper.net.BookieId>, int, int);
    Code:
       0: iconst_1
       1: ireturn
}
