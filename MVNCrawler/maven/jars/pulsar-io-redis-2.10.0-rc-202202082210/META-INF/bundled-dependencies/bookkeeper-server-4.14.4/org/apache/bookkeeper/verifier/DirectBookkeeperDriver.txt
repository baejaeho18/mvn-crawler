Compiled from "DirectBookkeeperDriver.java"
class org.apache.bookkeeper.verifier.DirectBookkeeperDriver implements org.apache.bookkeeper.verifier.BookkeeperVerifier$BookkeeperDriver {
  private final java.util.concurrent.ConcurrentHashMap<java.lang.Long, org.apache.bookkeeper.client.LedgerHandle> openHandles;

  private org.apache.bookkeeper.client.BookKeeper client;

  org.apache.bookkeeper.verifier.DirectBookkeeperDriver(org.apache.bookkeeper.client.BookKeeper);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field openHandles:Ljava/util/concurrent/ConcurrentHashMap;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field client:Lorg/apache/bookkeeper/client/BookKeeper;
      20: return

  public void createLedger(long, int, int, int, java.util.function.Consumer<java.lang.Integer>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field client:Lorg/apache/bookkeeper/client/BookKeeper;
       4: lload_1
       5: iload_3
       6: iload         4
       8: iload         5
      10: getstatic     #6                  // Field org/apache/bookkeeper/client/BookKeeper$DigestType.CRC32:Lorg/apache/bookkeeper/client/BookKeeper$DigestType;
      13: iconst_0
      14: newarray       byte
      16: aload_0
      17: lload_1
      18: aload         6
      20: invokedynamic #7,  0              // InvokeDynamic #0:createComplete:(Lorg/apache/bookkeeper/verifier/DirectBookkeeperDriver;JLjava/util/function/Consumer;)Lorg/apache/bookkeeper/client/AsyncCallback$CreateCallback;
      25: aconst_null
      26: aconst_null
      27: invokevirtual #8                  // Method org/apache/bookkeeper/client/BookKeeper.asyncCreateLedgerAdv:(JIIILorg/apache/bookkeeper/client/BookKeeper$DigestType;[BLorg/apache/bookkeeper/client/AsyncCallback$CreateCallback;Ljava/lang/Object;Ljava/util/Map;)V
      30: return

  public void closeLedger(long, java.util.function.Consumer<java.lang.Integer>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field openHandles:Ljava/util/concurrent/ConcurrentHashMap;
       4: lload_1
       5: invokestatic  #9                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       8: invokevirtual #10                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #11                 // class org/apache/bookkeeper/client/LedgerHandle
      14: astore        4
      16: aload         4
      18: aload_3
      19: invokedynamic #12,  0             // InvokeDynamic #1:closeComplete:(Ljava/util/function/Consumer;)Lorg/apache/bookkeeper/client/AsyncCallback$CloseCallback;
      24: aconst_null
      25: invokevirtual #13                 // Method org/apache/bookkeeper/client/LedgerHandle.asyncClose:(Lorg/apache/bookkeeper/client/AsyncCallback$CloseCallback;Ljava/lang/Object;)V
      28: return

  public void deleteLedger(long, java.util.function.Consumer<java.lang.Integer>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field client:Lorg/apache/bookkeeper/client/BookKeeper;
       4: lload_1
       5: aload_3
       6: invokedynamic #14,  0             // InvokeDynamic #2:deleteComplete:(Ljava/util/function/Consumer;)Lorg/apache/bookkeeper/client/AsyncCallback$DeleteCallback;
      11: aconst_null
      12: invokevirtual #15                 // Method org/apache/bookkeeper/client/BookKeeper.asyncDeleteLedger:(JLorg/apache/bookkeeper/client/AsyncCallback$DeleteCallback;Ljava/lang/Object;)V
      15: return

  public void writeEntry(long, long, byte[], java.util.function.Consumer<java.lang.Integer>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field openHandles:Ljava/util/concurrent/ConcurrentHashMap;
       4: lload_1
       5: invokestatic  #9                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       8: invokevirtual #16                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #11                 // class org/apache/bookkeeper/client/LedgerHandle
      14: astore        7
      16: aload         7
      18: ifnonnull     34
      21: aload         6
      23: bipush        -12
      25: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      28: invokeinterface #19,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      33: return
      34: aload         7
      36: lload_3
      37: aload         5
      39: aload         6
      41: invokedynamic #20,  0             // InvokeDynamic #3:addComplete:(Ljava/util/function/Consumer;)Lorg/apache/bookkeeper/client/AsyncCallback$AddCallback;
      46: aconst_null
      47: invokevirtual #21                 // Method org/apache/bookkeeper/client/LedgerHandle.asyncAddEntry:(J[BLorg/apache/bookkeeper/client/AsyncCallback$AddCallback;Ljava/lang/Object;)V
      50: return

  public void readEntries(long, long, long, java.util.function.BiConsumer<java.lang.Integer, java.util.ArrayList<byte[]>>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field client:Lorg/apache/bookkeeper/client/BookKeeper;
       4: lload_1
       5: getstatic     #6                  // Field org/apache/bookkeeper/client/BookKeeper$DigestType.CRC32:Lorg/apache/bookkeeper/client/BookKeeper$DigestType;
       8: iconst_0
       9: newarray       byte
      11: aload         7
      13: lload_3
      14: lload         5
      16: lload_1
      17: invokedynamic #22,  0             // InvokeDynamic #4:openComplete:(Ljava/util/function/BiConsumer;JJJ)Lorg/apache/bookkeeper/client/AsyncCallback$OpenCallback;
      22: aconst_null
      23: invokevirtual #23                 // Method org/apache/bookkeeper/client/BookKeeper.asyncOpenLedgerNoRecovery:(JLorg/apache/bookkeeper/client/BookKeeper$DigestType;[BLorg/apache/bookkeeper/client/AsyncCallback$OpenCallback;Ljava/lang/Object;)V
      26: return

  private static void lambda$readEntries$6(java.util.function.BiConsumer, long, long, long, int, org.apache.bookkeeper.client.LedgerHandle, java.lang.Object);
    Code:
       0: iload         7
       2: ifeq          18
       5: aload_0
       6: iload         7
       8: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      11: aconst_null
      12: invokeinterface #24,  3           // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      17: return
      18: getstatic     #25                 // Field java/lang/System.out:Ljava/io/PrintStream;
      21: ldc           #26                 // String Got handle for read %d -> %d on ledger %d%n
      23: iconst_3
      24: anewarray     #27                 // class java/lang/Object
      27: dup
      28: iconst_0
      29: lload_1
      30: invokestatic  #9                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      33: aastore
      34: dup
      35: iconst_1
      36: lload_3
      37: invokestatic  #9                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      40: aastore
      41: dup
      42: iconst_2
      43: lload         5
      45: invokestatic  #9                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      48: aastore
      49: invokevirtual #28                 // Method java/io/PrintStream.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
      52: pop
      53: aload         8
      55: lload_1
      56: lload_3
      57: lload_1
      58: lload_3
      59: lload         5
      61: aload         8
      63: aload_0
      64: invokedynamic #29,  0             // InvokeDynamic #5:readComplete:(JJJLorg/apache/bookkeeper/client/LedgerHandle;Ljava/util/function/BiConsumer;)Lorg/apache/bookkeeper/client/AsyncCallback$ReadCallback;
      69: aconst_null
      70: invokevirtual #30                 // Method org/apache/bookkeeper/client/LedgerHandle.asyncReadEntries:(JJLorg/apache/bookkeeper/client/AsyncCallback$ReadCallback;Ljava/lang/Object;)V
      73: return

  private static void lambda$null$5(long, long, long, org.apache.bookkeeper.client.LedgerHandle, java.util.function.BiConsumer, int, org.apache.bookkeeper.client.LedgerHandle, java.util.Enumeration, java.lang.Object);
    Code:
       0: getstatic     #25                 // Field java/lang/System.out:Ljava/io/PrintStream;
       3: ldc           #31                 // String Read cb %d -> %d on ledger %d%n
       5: iconst_3
       6: anewarray     #27                 // class java/lang/Object
       9: dup
      10: iconst_0
      11: lload_0
      12: invokestatic  #9                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      15: aastore
      16: dup
      17: iconst_1
      18: lload_2
      19: invokestatic  #9                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      22: aastore
      23: dup
      24: iconst_2
      25: lload         4
      27: invokestatic  #9                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      30: aastore
      31: invokevirtual #28                 // Method java/io/PrintStream.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
      34: pop
      35: new           #32                 // class java/util/ArrayList
      38: dup
      39: invokespecial #33                 // Method java/util/ArrayList."<init>":()V
      42: astore        12
      44: iload         8
      46: ifne          116
      49: aload         10
      51: invokeinterface #34,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      56: ifeq          81
      59: aload         12
      61: aload         10
      63: invokeinterface #35,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      68: checkcast     #36                 // class org/apache/bookkeeper/client/LedgerEntry
      71: invokevirtual #37                 // Method org/apache/bookkeeper/client/LedgerEntry.getEntry:()[B
      74: invokevirtual #38                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      77: pop
      78: goto          49
      81: getstatic     #25                 // Field java/lang/System.out:Ljava/io/PrintStream;
      84: ldc           #39                 // String About to close handle for read %d -> %d on ledger %d%n
      86: iconst_3
      87: anewarray     #27                 // class java/lang/Object
      90: dup
      91: iconst_0
      92: lload_0
      93: invokestatic  #9                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      96: aastore
      97: dup
      98: iconst_1
      99: lload_2
     100: invokestatic  #9                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     103: aastore
     104: dup
     105: iconst_2
     106: lload         4
     108: invokestatic  #9                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     111: aastore
     112: invokevirtual #28                 // Method java/io/PrintStream.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
     115: pop
     116: aload         6
     118: lload_0
     119: lload_2
     120: lload         4
     122: aload         7
     124: iload         8
     126: aload         12
     128: invokedynamic #40,  0             // InvokeDynamic #6:closeComplete:(JJJLjava/util/function/BiConsumer;ILjava/util/ArrayList;)Lorg/apache/bookkeeper/client/AsyncCallback$CloseCallback;
     133: aconst_null
     134: invokevirtual #13                 // Method org/apache/bookkeeper/client/LedgerHandle.asyncClose:(Lorg/apache/bookkeeper/client/AsyncCallback$CloseCallback;Ljava/lang/Object;)V
     137: return

  private static void lambda$null$4(long, long, long, java.util.function.BiConsumer, int, java.util.ArrayList, int, org.apache.bookkeeper.client.LedgerHandle, java.lang.Object);
    Code:
       0: getstatic     #25                 // Field java/lang/System.out:Ljava/io/PrintStream;
       3: ldc           #41                 // String Closed handle for read %d -> %d on ledger %d result %d%n
       5: iconst_4
       6: anewarray     #27                 // class java/lang/Object
       9: dup
      10: iconst_0
      11: lload_0
      12: invokestatic  #9                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      15: aastore
      16: dup
      17: iconst_1
      18: lload_2
      19: invokestatic  #9                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      22: aastore
      23: dup
      24: iconst_2
      25: lload         4
      27: invokestatic  #9                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      30: aastore
      31: dup
      32: iconst_3
      33: iload         9
      35: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      38: aastore
      39: invokevirtual #28                 // Method java/io/PrintStream.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
      42: pop
      43: aload         6
      45: iload         7
      47: ifne          55
      50: iload         9
      52: goto          57
      55: iload         7
      57: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      60: aload         8
      62: invokeinterface #24,  3           // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      67: return

  private static void lambda$writeEntry$3(java.util.function.Consumer, int, org.apache.bookkeeper.client.LedgerHandle, long, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: invokeinterface #19,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      10: return

  private static void lambda$deleteLedger$2(java.util.function.Consumer, int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: invokeinterface #19,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      10: return

  private static void lambda$closeLedger$1(java.util.function.Consumer, int, org.apache.bookkeeper.client.LedgerHandle, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: invokeinterface #19,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      10: return

  private void lambda$createLedger$0(long, java.util.function.Consumer, int, org.apache.bookkeeper.client.LedgerHandle, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field openHandles:Ljava/util/concurrent/ConcurrentHashMap;
       4: lload_1
       5: invokestatic  #9                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       8: aload         5
      10: invokevirtual #42                 // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_3
      15: iload         4
      17: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      20: invokeinterface #19,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      25: return
}
