Compiled from "TopologyAwareEnsemblePlacementPolicy.java"
abstract class org.apache.bookkeeper.client.TopologyAwareEnsemblePlacementPolicy implements org.apache.bookkeeper.client.ITopologyAwareEnsemblePlacementPolicy<org.apache.bookkeeper.net.BookieNode> {
  static final org.slf4j.Logger LOG;

  public static final java.lang.String REPP_DNS_RESOLVER_CLASS;

  protected final java.util.Map<org.apache.bookkeeper.net.BookieId, org.apache.bookkeeper.net.BookieNode> knownBookies;

  protected final java.util.concurrent.locks.ReentrantReadWriteLock rwLock;

  protected java.util.Map<org.apache.bookkeeper.net.BookieNode, org.apache.bookkeeper.client.WeightedRandomSelection$WeightedObject> bookieInfoMap;

  protected com.google.common.collect.ImmutableSet<org.apache.bookkeeper.net.BookieId> readOnlyBookies;

  boolean isWeighted;

  protected org.apache.bookkeeper.client.WeightedRandomSelection<org.apache.bookkeeper.net.BookieNode> weightedSelection;

  protected org.apache.bookkeeper.net.NetworkTopology topology;

  protected org.apache.bookkeeper.net.DNSToSwitchMapping dnsResolver;

  protected org.apache.bookkeeper.proto.BookieAddressResolver bookieAddressResolver;

  protected org.apache.bookkeeper.stats.OpStatsLogger bookiesJoinedCounter;

  protected org.apache.bookkeeper.stats.OpStatsLogger bookiesLeftCounter;

  org.apache.bookkeeper.client.TopologyAwareEnsemblePlacementPolicy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field knownBookies:Ljava/util/Map;
      15: aload_0
      16: new           #5                  // class java/util/concurrent/locks/ReentrantReadWriteLock
      19: dup
      20: invokespecial #6                  // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
      23: putfield      #7                  // Field rwLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      26: aload_0
      27: new           #2                  // class java/util/HashMap
      30: dup
      31: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      34: putfield      #8                  // Field bookieInfoMap:Ljava/util/Map;
      37: aload_0
      38: invokestatic  #9                  // Method com/google/common/collect/ImmutableSet.of:()Lcom/google/common/collect/ImmutableSet;
      41: putfield      #10                 // Field readOnlyBookies:Lcom/google/common/collect/ImmutableSet;
      44: aload_0
      45: aconst_null
      46: putfield      #11                 // Field bookiesJoinedCounter:Lorg/apache/bookkeeper/stats/OpStatsLogger;
      49: aload_0
      50: aconst_null
      51: putfield      #12                 // Field bookiesLeftCounter:Lorg/apache/bookkeeper/stats/OpStatsLogger;
      54: return

  static java.util.Set<java.lang.String> getNetworkLocations(java.util.Set<org.apache.bookkeeper.net.Node>);
    Code:
       0: new           #13                 // class java/util/HashSet
       3: dup
       4: invokespecial #14                 // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: invokeinterface #15,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          50
      24: aload_2
      25: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #18                 // class org/apache/bookkeeper/net/Node
      33: astore_3
      34: aload_1
      35: aload_3
      36: invokeinterface #19,  1           // InterfaceMethod org/apache/bookkeeper/net/Node.getNetworkLocation:()Ljava/lang/String;
      41: invokeinterface #20,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      46: pop
      47: goto          15
      50: aload_1
      51: areturn

  static void shuffleWithMask(org.apache.bookkeeper.client.DistributionSchedule$WriteSet, int, int);
    Code:
       0: iconst_m1
       1: istore_3
       2: iconst_m1
       3: istore        4
       5: iconst_0
       6: istore        5
       8: iload         5
      10: aload_0
      11: invokeinterface #21,  1           // InterfaceMethod org/apache/bookkeeper/client/DistributionSchedule$WriteSet.size:()I
      16: if_icmpge     51
      19: aload_0
      20: iload         5
      22: invokeinterface #22,  2           // InterfaceMethod org/apache/bookkeeper/client/DistributionSchedule$WriteSet.get:(I)I
      27: iload_2
      28: iand
      29: iload_1
      30: if_icmpne     45
      33: iload_3
      34: iconst_m1
      35: if_icmpne     41
      38: iload         5
      40: istore_3
      41: iload         5
      43: istore        4
      45: iinc          5, 1
      48: goto          8
      51: iload_3
      52: iconst_m1
      53: if_icmpeq     109
      56: iload         4
      58: iconst_1
      59: iadd
      60: istore        5
      62: iload         5
      64: iload_3
      65: if_icmple     109
      68: invokestatic  #23                 // Method java/util/concurrent/ThreadLocalRandom.current:()Ljava/util/concurrent/ThreadLocalRandom;
      71: iload         5
      73: invokevirtual #24                 // Method java/util/concurrent/ThreadLocalRandom.nextInt:(I)I
      76: istore        6
      78: aload_0
      79: iload         6
      81: aload_0
      82: iload         5
      84: aload_0
      85: iload         6
      87: invokeinterface #22,  2           // InterfaceMethod org/apache/bookkeeper/client/DistributionSchedule$WriteSet.get:(I)I
      92: invokeinterface #25,  3           // InterfaceMethod org/apache/bookkeeper/client/DistributionSchedule$WriteSet.set:(II)I
      97: invokeinterface #25,  3           // InterfaceMethod org/apache/bookkeeper/client/DistributionSchedule$WriteSet.set:(II)I
     102: pop
     103: iinc          5, -1
     106: goto          62
     109: return

  public org.apache.bookkeeper.client.DistributionSchedule$WriteSet reorderReadSequence(java.util.List<org.apache.bookkeeper.net.BookieId>, org.apache.bookkeeper.client.BookiesHealthInfo, org.apache.bookkeeper.client.DistributionSchedule$WriteSet);
    Code:
       0: aload_3
       1: areturn

  public org.apache.bookkeeper.client.DistributionSchedule$WriteSet reorderReadLACSequence(java.util.List<org.apache.bookkeeper.net.BookieId>, org.apache.bookkeeper.client.BookiesHealthInfo, org.apache.bookkeeper.client.DistributionSchedule$WriteSet);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #26                 // Method reorderReadSequence:(Ljava/util/List;Lorg/apache/bookkeeper/client/BookiesHealthInfo;Lorg/apache/bookkeeper/client/DistributionSchedule$WriteSet;)Lorg/apache/bookkeeper/client/DistributionSchedule$WriteSet;
       7: astore        4
       9: aload         4
      11: aload_1
      12: invokeinterface #27,  1           // InterfaceMethod java/util/List.size:()I
      17: invokeinterface #28,  2           // InterfaceMethod org/apache/bookkeeper/client/DistributionSchedule$WriteSet.addMissingIndices:(I)V
      22: aload         4
      24: areturn

  public java.util.Set<org.apache.bookkeeper.net.BookieId> onClusterChanged(java.util.Set<org.apache.bookkeeper.net.BookieId>, java.util.Set<org.apache.bookkeeper.net.BookieId>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field rwLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #29                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
       7: invokevirtual #30                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
      10: aload_0
      11: getfield      #4                  // Field knownBookies:Ljava/util/Map;
      14: invokeinterface #31,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      19: astore        6
      21: aload         6
      23: aload_1
      24: invokestatic  #32                 // Method com/google/common/collect/Sets.difference:(Ljava/util/Set;Ljava/util/Set;)Lcom/google/common/collect/Sets$SetView;
      27: invokevirtual #33                 // Method com/google/common/collect/Sets$SetView.immutableCopy:()Lcom/google/common/collect/ImmutableSet;
      30: astore        4
      32: aload_1
      33: aload         6
      35: invokestatic  #32                 // Method com/google/common/collect/Sets.difference:(Ljava/util/Set;Ljava/util/Set;)Lcom/google/common/collect/Sets$SetView;
      38: invokevirtual #33                 // Method com/google/common/collect/Sets$SetView.immutableCopy:()Lcom/google/common/collect/ImmutableSet;
      41: astore_3
      42: aload         4
      44: aload_2
      45: invokestatic  #32                 // Method com/google/common/collect/Sets.difference:(Ljava/util/Set;Ljava/util/Set;)Lcom/google/common/collect/Sets$SetView;
      48: invokevirtual #33                 // Method com/google/common/collect/Sets$SetView.immutableCopy:()Lcom/google/common/collect/ImmutableSet;
      51: astore        5
      53: getstatic     #34                 // Field LOG:Lorg/slf4j/Logger;
      56: ldc           #35                 // String Cluster changed : left bookies are {}, joined bookies are {}, while dead bookies are {}.
      58: iconst_3
      59: anewarray     #36                 // class java/lang/Object
      62: dup
      63: iconst_0
      64: aload         4
      66: aastore
      67: dup
      68: iconst_1
      69: aload_3
      70: aastore
      71: dup
      72: iconst_2
      73: aload         5
      75: aastore
      76: invokeinterface #37,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      81: aload_0
      82: aload         4
      84: invokevirtual #38                 // Method handleBookiesThatLeft:(Ljava/util/Set;)V
      87: aload_0
      88: aload_3
      89: invokevirtual #39                 // Method handleBookiesThatJoined:(Ljava/util/Set;)V
      92: aload_0
      93: getfield      #40                 // Field isWeighted:Z
      96: ifeq          127
      99: aload         4
     101: invokevirtual #41                 // Method com/google/common/collect/ImmutableSet.size:()I
     104: ifgt          114
     107: aload_3
     108: invokevirtual #41                 // Method com/google/common/collect/ImmutableSet.size:()I
     111: ifle          127
     114: aload_0
     115: getfield      #42                 // Field weightedSelection:Lorg/apache/bookkeeper/client/WeightedRandomSelection;
     118: aload_0
     119: getfield      #8                  // Field bookieInfoMap:Ljava/util/Map;
     122: invokeinterface #43,  2           // InterfaceMethod org/apache/bookkeeper/client/WeightedRandomSelection.updateMap:(Ljava/util/Map;)V
     127: aload_2
     128: invokeinterface #44,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
     133: ifne          144
     136: aload_0
     137: aload_2
     138: invokestatic  #45                 // Method com/google/common/collect/ImmutableSet.copyOf:(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableSet;
     141: putfield      #10                 // Field readOnlyBookies:Lcom/google/common/collect/ImmutableSet;
     144: aload         5
     146: astore        7
     148: aload_0
     149: getfield      #7                  // Field rwLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     152: invokevirtual #29                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
     155: invokevirtual #46                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
     158: aload         7
     160: areturn
     161: astore        8
     163: aload_0
     164: getfield      #7                  // Field rwLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     167: invokevirtual #29                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
     170: invokevirtual #46                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
     173: aload         8
     175: athrow
    Exception table:
       from    to  target type
          10   148   161   any
         161   163   161   any

  public void handleBookiesThatLeft(java.util.Set<org.apache.bookkeeper.net.BookieId>);
    Code:
       0: aload_1
       1: invokeinterface #15,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          147
      16: aload_2
      17: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #47                 // class org/apache/bookkeeper/net/BookieId
      25: astore_3
      26: aload_0
      27: getfield      #4                  // Field knownBookies:Ljava/util/Map;
      30: aload_3
      31: invokeinterface #48,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #49                 // class org/apache/bookkeeper/net/BookieNode
      39: astore        4
      41: aconst_null
      42: aload         4
      44: if_acmpeq     109
      47: aload_0
      48: getfield      #50                 // Field topology:Lorg/apache/bookkeeper/net/NetworkTopology;
      51: aload         4
      53: invokeinterface #51,  2           // InterfaceMethod org/apache/bookkeeper/net/NetworkTopology.remove:(Lorg/apache/bookkeeper/net/Node;)V
      58: aload_0
      59: getfield      #40                 // Field isWeighted:Z
      62: ifeq          77
      65: aload_0
      66: getfield      #8                  // Field bookieInfoMap:Ljava/util/Map;
      69: aload         4
      71: invokeinterface #48,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      76: pop
      77: aload_0
      78: getfield      #12                 // Field bookiesLeftCounter:Lorg/apache/bookkeeper/stats/OpStatsLogger;
      81: lconst_1
      82: invokeinterface #52,  3           // InterfaceMethod org/apache/bookkeeper/stats/OpStatsLogger.registerSuccessfulValue:(J)V
      87: getstatic     #34                 // Field LOG:Lorg/slf4j/Logger;
      90: invokeinterface #53,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      95: ifeq          109
      98: getstatic     #34                 // Field LOG:Lorg/slf4j/Logger;
     101: ldc           #54                 // String Cluster changed : bookie {} left from cluster.
     103: aload_3
     104: invokeinterface #55,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     109: goto          144
     112: astore        4
     114: getstatic     #34                 // Field LOG:Lorg/slf4j/Logger;
     117: ldc           #57                 // String Unexpected exception while handling leaving bookie {}
     119: aload_3
     120: aload         4
     122: invokeinterface #58,  4           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     127: aload_0
     128: getfield      #12                 // Field bookiesLeftCounter:Lorg/apache/bookkeeper/stats/OpStatsLogger;
     131: ifnull        144
     134: aload_0
     135: getfield      #12                 // Field bookiesLeftCounter:Lorg/apache/bookkeeper/stats/OpStatsLogger;
     138: lconst_1
     139: invokeinterface #59,  3           // InterfaceMethod org/apache/bookkeeper/stats/OpStatsLogger.registerFailedValue:(J)V
     144: goto          7
     147: return
    Exception table:
       from    to  target type
          26   109   112   Class java/lang/Throwable

  public void handleBookiesThatJoined(java.util.Set<org.apache.bookkeeper.net.BookieId>);
    Code:
       0: aload_1
       1: invokeinterface #15,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          146
      16: aload_2
      17: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #47                 // class org/apache/bookkeeper/net/BookieId
      25: astore_3
      26: aload_0
      27: aload_3
      28: invokevirtual #60                 // Method createBookieNode:(Lorg/apache/bookkeeper/net/BookieId;)Lorg/apache/bookkeeper/net/BookieNode;
      31: astore        4
      33: aload_0
      34: getfield      #50                 // Field topology:Lorg/apache/bookkeeper/net/NetworkTopology;
      37: aload         4
      39: invokeinterface #61,  2           // InterfaceMethod org/apache/bookkeeper/net/NetworkTopology.add:(Lorg/apache/bookkeeper/net/Node;)V
      44: aload_0
      45: getfield      #4                  // Field knownBookies:Ljava/util/Map;
      48: aload_3
      49: aload         4
      51: invokeinterface #62,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      56: pop
      57: aload_0
      58: getfield      #40                 // Field isWeighted:Z
      61: ifeq          83
      64: aload_0
      65: getfield      #8                  // Field bookieInfoMap:Ljava/util/Map;
      68: aload         4
      70: new           #63                 // class org/apache/bookkeeper/client/BookieInfoReader$BookieInfo
      73: dup
      74: invokespecial #64                 // Method org/apache/bookkeeper/client/BookieInfoReader$BookieInfo."<init>":()V
      77: invokeinterface #65,  3           // InterfaceMethod java/util/Map.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      82: pop
      83: aload_0
      84: getfield      #11                 // Field bookiesJoinedCounter:Lorg/apache/bookkeeper/stats/OpStatsLogger;
      87: lconst_1
      88: invokeinterface #52,  3           // InterfaceMethod org/apache/bookkeeper/stats/OpStatsLogger.registerSuccessfulValue:(J)V
      93: getstatic     #34                 // Field LOG:Lorg/slf4j/Logger;
      96: invokeinterface #53,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     101: ifeq          115
     104: getstatic     #34                 // Field LOG:Lorg/slf4j/Logger;
     107: ldc           #66                 // String Cluster changed : bookie {} joined the cluster.
     109: aload_3
     110: invokeinterface #55,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     115: goto          143
     118: astore        4
     120: getstatic     #34                 // Field LOG:Lorg/slf4j/Logger;
     123: ldc           #67                 // String Unexpected exception while handling joining bookie {}
     125: aload_3
     126: aload         4
     128: invokeinterface #58,  4           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     133: aload_0
     134: getfield      #11                 // Field bookiesJoinedCounter:Lorg/apache/bookkeeper/stats/OpStatsLogger;
     137: lconst_1
     138: invokeinterface #59,  3           // InterfaceMethod org/apache/bookkeeper/stats/OpStatsLogger.registerFailedValue:(J)V
     143: goto          7
     146: return
    Exception table:
       from    to  target type
          26   115   118   Class java/lang/Throwable

  public void onBookieRackChange(java.util.List<org.apache.bookkeeper.net.BookieId>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field rwLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #29                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
       7: invokevirtual #30                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
      10: aload_1
      11: invokeinterface #68,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          101
      26: aload_2
      27: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #47                 // class org/apache/bookkeeper/net/BookieId
      35: astore_3
      36: aload_0
      37: getfield      #4                  // Field knownBookies:Ljava/util/Map;
      40: aload_3
      41: invokeinterface #69,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      46: checkcast     #49                 // class org/apache/bookkeeper/net/BookieNode
      49: astore        4
      51: aload         4
      53: ifnull        98
      56: aload_0
      57: aload_3
      58: invokevirtual #60                 // Method createBookieNode:(Lorg/apache/bookkeeper/net/BookieId;)Lorg/apache/bookkeeper/net/BookieNode;
      61: astore        5
      63: aload_0
      64: getfield      #50                 // Field topology:Lorg/apache/bookkeeper/net/NetworkTopology;
      67: aload         4
      69: invokeinterface #51,  2           // InterfaceMethod org/apache/bookkeeper/net/NetworkTopology.remove:(Lorg/apache/bookkeeper/net/Node;)V
      74: aload_0
      75: getfield      #50                 // Field topology:Lorg/apache/bookkeeper/net/NetworkTopology;
      78: aload         5
      80: invokeinterface #61,  2           // InterfaceMethod org/apache/bookkeeper/net/NetworkTopology.add:(Lorg/apache/bookkeeper/net/Node;)V
      85: aload_0
      86: getfield      #4                  // Field knownBookies:Ljava/util/Map;
      89: aload_3
      90: aload         5
      92: invokeinterface #62,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      97: pop
      98: goto          17
     101: aload_0
     102: getfield      #7                  // Field rwLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     105: invokevirtual #29                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
     108: invokevirtual #46                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
     111: goto          129
     114: astore        6
     116: aload_0
     117: getfield      #7                  // Field rwLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     120: invokevirtual #29                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
     123: invokevirtual #46                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
     126: aload         6
     128: athrow
     129: return
    Exception table:
       from    to  target type
          10   101   114   any
         114   116   114   any

  public void updateBookieInfo(java.util.Map<org.apache.bookkeeper.net.BookieId, org.apache.bookkeeper.client.BookieInfoReader$BookieInfo>);
    Code:
       0: aload_0
       1: getfield      #40                 // Field isWeighted:Z
       4: ifne          18
       7: getstatic     #34                 // Field LOG:Lorg/slf4j/Logger;
      10: ldc           #70                 // String bookieFreeDiskInfo callback called even without weighted placement policy being used.
      12: invokeinterface #71,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      17: return
      18: aload_0
      19: getfield      #7                  // Field rwLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      22: invokevirtual #29                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      25: invokevirtual #30                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
      28: new           #72                 // class java/util/ArrayList
      31: dup
      32: aload_0
      33: getfield      #4                  // Field knownBookies:Ljava/util/Map;
      36: invokeinterface #73,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      41: invokespecial #74                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      44: astore_2
      45: new           #2                  // class java/util/HashMap
      48: dup
      49: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      52: astore_3
      53: aload_2
      54: invokeinterface #68,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      59: astore        4
      61: aload         4
      63: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      68: ifeq          139
      71: aload         4
      73: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      78: checkcast     #49                 // class org/apache/bookkeeper/net/BookieNode
      81: astore        5
      83: aload_1
      84: aload         5
      86: invokevirtual #75                 // Method org/apache/bookkeeper/net/BookieNode.getAddr:()Lorg/apache/bookkeeper/net/BookieId;
      89: invokeinterface #76,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      94: ifeq          120
      97: aload_3
      98: aload         5
     100: aload_1
     101: aload         5
     103: invokevirtual #75                 // Method org/apache/bookkeeper/net/BookieNode.getAddr:()Lorg/apache/bookkeeper/net/BookieId;
     106: invokeinterface #69,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     111: invokeinterface #62,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     116: pop
     117: goto          136
     120: aload_3
     121: aload         5
     123: new           #63                 // class org/apache/bookkeeper/client/BookieInfoReader$BookieInfo
     126: dup
     127: invokespecial #64                 // Method org/apache/bookkeeper/client/BookieInfoReader$BookieInfo."<init>":()V
     130: invokeinterface #62,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     135: pop
     136: goto          61
     139: aload_0
     140: aload_3
     141: putfield      #8                  // Field bookieInfoMap:Ljava/util/Map;
     144: aload_0
     145: getfield      #42                 // Field weightedSelection:Lorg/apache/bookkeeper/client/WeightedRandomSelection;
     148: aload_0
     149: getfield      #8                  // Field bookieInfoMap:Ljava/util/Map;
     152: invokeinterface #43,  2           // InterfaceMethod org/apache/bookkeeper/client/WeightedRandomSelection.updateMap:(Ljava/util/Map;)V
     157: aload_0
     158: getfield      #7                  // Field rwLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     161: invokevirtual #29                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
     164: invokevirtual #46                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
     167: goto          185
     170: astore        6
     172: aload_0
     173: getfield      #7                  // Field rwLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     176: invokevirtual #29                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
     179: invokevirtual #46                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
     182: aload         6
     184: athrow
     185: return
    Exception table:
       from    to  target type
          28   157   170   any
         170   172   170   any

  protected org.apache.bookkeeper.net.BookieNode createBookieNode(org.apache.bookkeeper.net.BookieId);
    Code:
       0: new           #49                 // class org/apache/bookkeeper/net/BookieNode
       3: dup
       4: aload_1
       5: aload_0
       6: aload_1
       7: invokevirtual #77                 // Method resolveNetworkLocation:(Lorg/apache/bookkeeper/net/BookieId;)Ljava/lang/String;
      10: invokespecial #78                 // Method org/apache/bookkeeper/net/BookieNode."<init>":(Lorg/apache/bookkeeper/net/BookieId;Ljava/lang/String;)V
      13: areturn

  protected org.apache.bookkeeper.net.BookieNode createDummyLocalBookieNode(java.lang.String);
    Code:
       0: new           #49                 // class org/apache/bookkeeper/net/BookieNode
       3: dup
       4: aload_1
       5: invokestatic  #79                 // Method org/apache/bookkeeper/net/BookieSocketAddress.createDummyBookieIdForHostname:(Ljava/lang/String;)Lorg/apache/bookkeeper/net/BookieId;
       8: aload_0
       9: getfield      #80                 // Field dnsResolver:Lorg/apache/bookkeeper/net/DNSToSwitchMapping;
      12: new           #81                 // class org/apache/bookkeeper/net/BookieSocketAddress
      15: dup
      16: aload_1
      17: iconst_0
      18: invokespecial #82                 // Method org/apache/bookkeeper/net/BookieSocketAddress."<init>":(Ljava/lang/String;I)V
      21: invokestatic  #83                 // Method org/apache/bookkeeper/net/NetUtils.resolveNetworkLocation:(Lorg/apache/bookkeeper/net/DNSToSwitchMapping;Lorg/apache/bookkeeper/net/BookieSocketAddress;)Ljava/lang/String;
      24: invokespecial #78                 // Method org/apache/bookkeeper/net/BookieNode."<init>":(Lorg/apache/bookkeeper/net/BookieId;Ljava/lang/String;)V
      27: areturn

  protected java.lang.String resolveNetworkLocation(org.apache.bookkeeper.net.BookieId);
    Code:
       0: aload_0
       1: getfield      #80                 // Field dnsResolver:Lorg/apache/bookkeeper/net/DNSToSwitchMapping;
       4: aload_0
       5: getfield      #84                 // Field bookieAddressResolver:Lorg/apache/bookkeeper/proto/BookieAddressResolver;
       8: aload_1
       9: invokeinterface #85,  2           // InterfaceMethod org/apache/bookkeeper/proto/BookieAddressResolver.resolve:(Lorg/apache/bookkeeper/net/BookieId;)Lorg/apache/bookkeeper/net/BookieSocketAddress;
      14: invokestatic  #83                 // Method org/apache/bookkeeper/net/NetUtils.resolveNetworkLocation:(Lorg/apache/bookkeeper/net/DNSToSwitchMapping;Lorg/apache/bookkeeper/net/BookieSocketAddress;)Ljava/lang/String;
      17: areturn
      18: astore_2
      19: getstatic     #34                 // Field LOG:Lorg/slf4j/Logger;
      22: ldc           #87                 // String Cannot resolve bookieId {} to a network address, resolving as {}
      24: iconst_3
      25: anewarray     #36                 // class java/lang/Object
      28: dup
      29: iconst_0
      30: aload_1
      31: aastore
      32: dup
      33: iconst_1
      34: ldc           #89                 // String /default-region/default-rack
      36: aastore
      37: dup
      38: iconst_2
      39: aload_2
      40: aastore
      41: invokeinterface #90,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;[Ljava/lang/Object;)V
      46: ldc           #89                 // String /default-region/default-rack
      48: areturn
    Exception table:
       from    to  target type
           0    17    18   Class org/apache/bookkeeper/proto/BookieAddressResolver$BookieIdNotResolvedException

  protected java.util.Set<org.apache.bookkeeper.net.Node> convertBookiesToNodes(java.util.Collection<org.apache.bookkeeper.net.BookieId>);
    Code:
       0: new           #13                 // class java/util/HashSet
       3: dup
       4: invokespecial #14                 // Method java/util/HashSet."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #91,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          77
      24: aload_3
      25: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #47                 // class org/apache/bookkeeper/net/BookieId
      33: astore        4
      35: aload_0
      36: getfield      #4                  // Field knownBookies:Ljava/util/Map;
      39: aload         4
      41: invokeinterface #69,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      46: checkcast     #49                 // class org/apache/bookkeeper/net/BookieNode
      49: astore        5
      51: aconst_null
      52: aload         5
      54: if_acmpne     65
      57: aload_0
      58: aload         4
      60: invokevirtual #60                 // Method createBookieNode:(Lorg/apache/bookkeeper/net/BookieId;)Lorg/apache/bookkeeper/net/BookieNode;
      63: astore        5
      65: aload_2
      66: aload         5
      68: invokeinterface #20,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      73: pop
      74: goto          15
      77: aload_2
      78: areturn

  static {};
    Code:
       0: ldc           #92                 // class org/apache/bookkeeper/client/TopologyAwareEnsemblePlacementPolicy
       2: invokestatic  #93                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #34                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
