Compiled from "ZKMetadataClientDriver.java"
public class org.apache.bookkeeper.meta.zk.ZKMetadataClientDriver extends org.apache.bookkeeper.meta.zk.ZKMetadataDriverBase implements org.apache.bookkeeper.meta.MetadataClientDriver {
  private static final org.slf4j.Logger log;

  org.apache.bookkeeper.conf.ClientConfiguration clientConf;

  java.util.concurrent.ScheduledExecutorService scheduler;

  org.apache.bookkeeper.discover.RegistrationClient regClient;

  boolean bookieAddressTracking;

  public org.apache.bookkeeper.meta.zk.ZKMetadataClientDriver();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/bookkeeper/meta/zk/ZKMetadataDriverBase."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field bookieAddressTracking:Z
       9: return

  public synchronized org.apache.bookkeeper.meta.MetadataClientDriver initialize(org.apache.bookkeeper.conf.ClientConfiguration, java.util.concurrent.ScheduledExecutorService, org.apache.bookkeeper.stats.StatsLogger, java.util.Optional<java.lang.Object>) throws org.apache.bookkeeper.meta.exceptions.MetadataException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: new           #3                  // class org/apache/bookkeeper/zookeeper/BoundExponentialBackoffRetryPolicy
       6: dup
       7: aload_1
       8: invokevirtual #4                  // Method org/apache/bookkeeper/conf/ClientConfiguration.getZkTimeout:()I
      11: i2l
      12: aload_1
      13: invokevirtual #4                  // Method org/apache/bookkeeper/conf/ClientConfiguration.getZkTimeout:()I
      16: i2l
      17: iconst_0
      18: invokespecial #5                  // Method org/apache/bookkeeper/zookeeper/BoundExponentialBackoffRetryPolicy."<init>":(JJI)V
      21: aload         4
      23: invokespecial #6                  // Method org/apache/bookkeeper/meta/zk/ZKMetadataDriverBase.initialize:(Lorg/apache/bookkeeper/conf/AbstractConfiguration;Lorg/apache/bookkeeper/stats/StatsLogger;Lorg/apache/bookkeeper/zookeeper/RetryPolicy;Ljava/util/Optional;)V
      26: aload_0
      27: aload_3
      28: putfield      #7                  // Field statsLogger:Lorg/apache/bookkeeper/stats/StatsLogger;
      31: aload_0
      32: aload_1
      33: putfield      #8                  // Field clientConf:Lorg/apache/bookkeeper/conf/ClientConfiguration;
      36: aload_0
      37: aload_2
      38: putfield      #9                  // Field scheduler:Ljava/util/concurrent/ScheduledExecutorService;
      41: aload_0
      42: aload_1
      43: invokevirtual #10                 // Method org/apache/bookkeeper/conf/ClientConfiguration.getEnableBookieAddressTracking:()Z
      46: putfield      #2                  // Field bookieAddressTracking:Z
      49: aload_0
      50: areturn

  public synchronized org.apache.bookkeeper.discover.RegistrationClient getRegistrationClient();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #11                 // Field regClient:Lorg/apache/bookkeeper/discover/RegistrationClient;
       5: if_acmpne     35
       8: aload_0
       9: new           #12                 // class org/apache/bookkeeper/discover/ZKRegistrationClient
      12: dup
      13: aload_0
      14: getfield      #13                 // Field zk:Lorg/apache/zookeeper/ZooKeeper;
      17: aload_0
      18: getfield      #14                 // Field ledgersRootPath:Ljava/lang/String;
      21: aload_0
      22: getfield      #9                  // Field scheduler:Ljava/util/concurrent/ScheduledExecutorService;
      25: aload_0
      26: getfield      #2                  // Field bookieAddressTracking:Z
      29: invokespecial #15                 // Method org/apache/bookkeeper/discover/ZKRegistrationClient."<init>":(Lorg/apache/zookeeper/ZooKeeper;Ljava/lang/String;Ljava/util/concurrent/ScheduledExecutorService;Z)V
      32: putfield      #11                 // Field regClient:Lorg/apache/bookkeeper/discover/RegistrationClient;
      35: aload_0
      36: getfield      #11                 // Field regClient:Lorg/apache/bookkeeper/discover/RegistrationClient;
      39: areturn

  public synchronized void close();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #11                 // Field regClient:Lorg/apache/bookkeeper/discover/RegistrationClient;
       5: if_acmpeq     22
       8: aload_0
       9: getfield      #11                 // Field regClient:Lorg/apache/bookkeeper/discover/RegistrationClient;
      12: invokeinterface #16,  1           // InterfaceMethod org/apache/bookkeeper/discover/RegistrationClient.close:()V
      17: aload_0
      18: aconst_null
      19: putfield      #11                 // Field regClient:Lorg/apache/bookkeeper/discover/RegistrationClient;
      22: aload_0
      23: invokespecial #17                 // Method org/apache/bookkeeper/meta/zk/ZKMetadataDriverBase.close:()V
      26: return

  public void setSessionStateListener(org.apache.bookkeeper.meta.MetadataClientDriver$SessionStateListener);
    Code:
       0: aload_0
       1: getfield      #13                 // Field zk:Lorg/apache/zookeeper/ZooKeeper;
       4: aload_1
       5: invokedynamic #18,  0             // InvokeDynamic #0:process:(Lorg/apache/bookkeeper/meta/MetadataClientDriver$SessionStateListener;)Lorg/apache/zookeeper/Watcher;
      10: invokevirtual #19                 // Method org/apache/zookeeper/ZooKeeper.register:(Lorg/apache/zookeeper/Watcher;)V
      13: return

  private static void lambda$setSessionStateListener$0(org.apache.bookkeeper.meta.MetadataClientDriver$SessionStateListener, org.apache.zookeeper.WatchedEvent);
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method org/apache/zookeeper/WatchedEvent.getType:()Lorg/apache/zookeeper/Watcher$Event$EventType;
       4: getstatic     #21                 // Field org/apache/zookeeper/Watcher$Event$EventType.None:Lorg/apache/zookeeper/Watcher$Event$EventType;
       7: invokevirtual #22                 // Method org/apache/zookeeper/Watcher$Event$EventType.equals:(Ljava/lang/Object;)Z
      10: ifeq          32
      13: aload_1
      14: invokevirtual #23                 // Method org/apache/zookeeper/WatchedEvent.getState:()Lorg/apache/zookeeper/Watcher$Event$KeeperState;
      17: getstatic     #24                 // Field org/apache/zookeeper/Watcher$Event$KeeperState.Expired:Lorg/apache/zookeeper/Watcher$Event$KeeperState;
      20: invokevirtual #25                 // Method org/apache/zookeeper/Watcher$Event$KeeperState.equals:(Ljava/lang/Object;)Z
      23: ifeq          32
      26: aload_0
      27: invokeinterface #26,  1           // InterfaceMethod org/apache/bookkeeper/meta/MetadataClientDriver$SessionStateListener.onSessionExpired:()V
      32: return

  static {};
    Code:
       0: ldc           #27                 // class org/apache/bookkeeper/meta/zk/ZKMetadataClientDriver
       2: invokestatic  #28                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #29                 // Field log:Lorg/slf4j/Logger;
       8: ldc           #31                 // String zk
      10: ldc           #27                 // class org/apache/bookkeeper/meta/zk/ZKMetadataClientDriver
      12: invokestatic  #32                 // Method org/apache/bookkeeper/meta/MetadataDrivers.registerClientDriver:(Ljava/lang/String;Ljava/lang/Class;)V
      15: return
}
