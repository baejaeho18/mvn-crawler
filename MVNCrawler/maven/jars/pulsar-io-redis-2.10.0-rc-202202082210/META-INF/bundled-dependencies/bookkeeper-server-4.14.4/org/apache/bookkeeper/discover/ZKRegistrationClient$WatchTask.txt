Compiled from "ZKRegistrationClient.java"
class org.apache.bookkeeper.discover.ZKRegistrationClient$WatchTask implements org.apache.bookkeeper.common.util.SafeRunnable, org.apache.zookeeper.Watcher, java.util.function.BiConsumer<org.apache.bookkeeper.versioning.Versioned<java.util.Set<org.apache.bookkeeper.net.BookieId>>, java.lang.Throwable>, java.lang.AutoCloseable {
  private final java.lang.String regPath;

  private final java.util.Set<org.apache.bookkeeper.discover.RegistrationClient$RegistrationListener> listeners;

  private volatile boolean closed;

  private java.util.Set<org.apache.bookkeeper.net.BookieId> bookies;

  private org.apache.bookkeeper.versioning.Version version;

  private final java.util.concurrent.CompletableFuture<java.lang.Void> firstRunFuture;

  final org.apache.bookkeeper.discover.ZKRegistrationClient this$0;

  org.apache.bookkeeper.discover.ZKRegistrationClient$WatchTask(java.lang.String, java.util.concurrent.CompletableFuture<java.lang.Void>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field this$0:Lorg/apache/bookkeeper/discover/ZKRegistrationClient;
       5: aload_0
       6: invokespecial #4                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: iconst_0
      11: putfield      #5                  // Field closed:Z
      14: aload_0
      15: aconst_null
      16: putfield      #6                  // Field bookies:Ljava/util/Set;
      19: aload_0
      20: getstatic     #7                  // Field org/apache/bookkeeper/versioning/Version.NEW:Lorg/apache/bookkeeper/versioning/Version;
      23: putfield      #8                  // Field version:Lorg/apache/bookkeeper/versioning/Version;
      26: aload_0
      27: aload_2
      28: putfield      #9                  // Field regPath:Ljava/lang/String;
      31: aload_0
      32: new           #10                 // class java/util/concurrent/CopyOnWriteArraySet
      35: dup
      36: invokespecial #11                 // Method java/util/concurrent/CopyOnWriteArraySet."<init>":()V
      39: putfield      #12                 // Field listeners:Ljava/util/Set;
      42: aload_0
      43: aload_3
      44: putfield      #2                  // Field firstRunFuture:Ljava/util/concurrent/CompletableFuture;
      47: return

  public int getNumListeners();
    Code:
       0: aload_0
       1: getfield      #12                 // Field listeners:Ljava/util/Set;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/Set.size:()I
       9: ireturn

  public boolean addListener(org.apache.bookkeeper.discover.RegistrationClient$RegistrationListener);
    Code:
       0: aload_0
       1: getfield      #12                 // Field listeners:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: ifeq          40
      13: aconst_null
      14: aload_0
      15: getfield      #6                  // Field bookies:Ljava/util/Set;
      18: if_acmpeq     40
      21: aload_0
      22: getfield      #3                  // Field this$0:Lorg/apache/bookkeeper/discover/ZKRegistrationClient;
      25: invokestatic  #15                 // Method org/apache/bookkeeper/discover/ZKRegistrationClient.access$000:(Lorg/apache/bookkeeper/discover/ZKRegistrationClient;)Ljava/util/concurrent/ScheduledExecutorService;
      28: aload_0
      29: aload_1
      30: invokedynamic #16,  0             // InvokeDynamic #0:run:(Lorg/apache/bookkeeper/discover/ZKRegistrationClient$WatchTask;Lorg/apache/bookkeeper/discover/RegistrationClient$RegistrationListener;)Ljava/lang/Runnable;
      35: invokeinterface #17,  2           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.execute:(Ljava/lang/Runnable;)V
      40: iconst_1
      41: ireturn

  public boolean removeListener(org.apache.bookkeeper.discover.RegistrationClient$RegistrationListener);
    Code:
       0: aload_0
       1: getfield      #12                 // Field listeners:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      10: ireturn

  void watch();
    Code:
       0: aload_0
       1: lconst_0
       2: invokespecial #19                 // Method scheduleWatchTask:(J)V
       5: return

  private void scheduleWatchTask(long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field this$0:Lorg/apache/bookkeeper/discover/ZKRegistrationClient;
       4: invokestatic  #15                 // Method org/apache/bookkeeper/discover/ZKRegistrationClient.access$000:(Lorg/apache/bookkeeper/discover/ZKRegistrationClient;)Ljava/util/concurrent/ScheduledExecutorService;
       7: aload_0
       8: lload_1
       9: getstatic     #20                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      12: invokeinterface #21,  5           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      17: pop
      18: goto          33
      21: astore_3
      22: invokestatic  #23                 // Method org/apache/bookkeeper/discover/ZKRegistrationClient.access$100:()Lorg/slf4j/Logger;
      25: ldc           #24                 // String Failed to schedule watch bookies task
      27: aload_3
      28: invokeinterface #25,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      33: return
    Exception table:
       from    to  target type
           0    18    21   Class java/util/concurrent/RejectedExecutionException

  public void safeRun();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method isClosed:()Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #3                  // Field this$0:Lorg/apache/bookkeeper/discover/ZKRegistrationClient;
      12: aload_0
      13: getfield      #9                  // Field regPath:Ljava/lang/String;
      16: aload_0
      17: invokestatic  #27                 // Method org/apache/bookkeeper/discover/ZKRegistrationClient.access$200:(Lorg/apache/bookkeeper/discover/ZKRegistrationClient;Ljava/lang/String;Lorg/apache/zookeeper/Watcher;)Ljava/util/concurrent/CompletableFuture;
      20: aload_0
      21: aload_0
      22: getfield      #3                  // Field this$0:Lorg/apache/bookkeeper/discover/ZKRegistrationClient;
      25: invokestatic  #15                 // Method org/apache/bookkeeper/discover/ZKRegistrationClient.access$000:(Lorg/apache/bookkeeper/discover/ZKRegistrationClient;)Ljava/util/concurrent/ScheduledExecutorService;
      28: invokevirtual #28                 // Method java/util/concurrent/CompletableFuture.whenCompleteAsync:(Ljava/util/function/BiConsumer;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
      31: pop
      32: return

  public void accept(org.apache.bookkeeper.versioning.Versioned<java.util.Set<org.apache.bookkeeper.net.BookieId>>, java.lang.Throwable);
    Code:
       0: aload_2
       1: ifnull        34
       4: aload_0
       5: getfield      #2                  // Field firstRunFuture:Ljava/util/concurrent/CompletableFuture;
       8: invokevirtual #29                 // Method java/util/concurrent/CompletableFuture.isDone:()Z
      11: ifeq          24
      14: aload_0
      15: ldc2_w        #30                 // long 200l
      18: invokespecial #19                 // Method scheduleWatchTask:(J)V
      21: goto          33
      24: aload_0
      25: getfield      #2                  // Field firstRunFuture:Ljava/util/concurrent/CompletableFuture;
      28: aload_2
      29: invokevirtual #32                 // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
      32: pop
      33: return
      34: aload_0
      35: getfield      #8                  // Field version:Lorg/apache/bookkeeper/versioning/Version;
      38: aload_1
      39: invokevirtual #33                 // Method org/apache/bookkeeper/versioning/Versioned.getVersion:()Lorg/apache/bookkeeper/versioning/Version;
      42: invokeinterface #34,  2           // InterfaceMethod org/apache/bookkeeper/versioning/Version.compare:(Lorg/apache/bookkeeper/versioning/Version;)Lorg/apache/bookkeeper/versioning/Version$Occurred;
      47: getstatic     #35                 // Field org/apache/bookkeeper/versioning/Version$Occurred.BEFORE:Lorg/apache/bookkeeper/versioning/Version$Occurred;
      50: if_acmpne     125
      53: aload_0
      54: aload_1
      55: invokevirtual #33                 // Method org/apache/bookkeeper/versioning/Versioned.getVersion:()Lorg/apache/bookkeeper/versioning/Version;
      58: putfield      #8                  // Field version:Lorg/apache/bookkeeper/versioning/Version;
      61: aload_0
      62: aload_1
      63: invokevirtual #36                 // Method org/apache/bookkeeper/versioning/Versioned.getValue:()Ljava/lang/Object;
      66: checkcast     #37                 // class java/util/Set
      69: putfield      #6                  // Field bookies:Ljava/util/Set;
      72: aload_0
      73: getfield      #12                 // Field listeners:Ljava/util/Set;
      76: invokeinterface #38,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      81: ifne          125
      84: aload_0
      85: getfield      #12                 // Field listeners:Ljava/util/Set;
      88: invokeinterface #39,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      93: astore_3
      94: aload_3
      95: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     100: ifeq          125
     103: aload_3
     104: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     109: checkcast     #42                 // class org/apache/bookkeeper/discover/RegistrationClient$RegistrationListener
     112: astore        4
     114: aload         4
     116: aload_1
     117: invokeinterface #43,  2           // InterfaceMethod org/apache/bookkeeper/discover/RegistrationClient$RegistrationListener.onBookiesChanged:(Lorg/apache/bookkeeper/versioning/Versioned;)V
     122: goto          94
     125: aload_0
     126: getfield      #2                  // Field firstRunFuture:Ljava/util/concurrent/CompletableFuture;
     129: aconst_null
     130: invokestatic  #44                 // Method org/apache/bookkeeper/common/concurrent/FutureUtils.complete:(Ljava/util/concurrent/CompletableFuture;Ljava/lang/Object;)V
     133: return

  public void process(org.apache.zookeeper.WatchedEvent);
    Code:
       0: getstatic     #45                 // Field org/apache/zookeeper/Watcher$Event$EventType.None:Lorg/apache/zookeeper/Watcher$Event$EventType;
       3: aload_1
       4: invokevirtual #46                 // Method org/apache/zookeeper/WatchedEvent.getType:()Lorg/apache/zookeeper/Watcher$Event$EventType;
       7: if_acmpne     28
      10: getstatic     #47                 // Field org/apache/zookeeper/Watcher$Event$KeeperState.Expired:Lorg/apache/zookeeper/Watcher$Event$KeeperState;
      13: aload_1
      14: invokevirtual #48                 // Method org/apache/zookeeper/WatchedEvent.getState:()Lorg/apache/zookeeper/Watcher$Event$KeeperState;
      17: if_acmpne     27
      20: aload_0
      21: ldc2_w        #30                 // long 200l
      24: invokespecial #19                 // Method scheduleWatchTask:(J)V
      27: return
      28: aload_0
      29: lconst_0
      30: invokespecial #19                 // Method scheduleWatchTask:(J)V
      33: return

  boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #5                  // Field closed:Z
       4: ireturn

  public void close();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #5                  // Field closed:Z
       5: return

  public void accept(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #49                 // class org/apache/bookkeeper/versioning/Versioned
       5: aload_2
       6: checkcast     #50                 // class java/lang/Throwable
       9: invokevirtual #51                 // Method accept:(Lorg/apache/bookkeeper/versioning/Versioned;Ljava/lang/Throwable;)V
      12: return

  private void lambda$addListener$0(org.apache.bookkeeper.discover.RegistrationClient$RegistrationListener);
    Code:
       0: aload_1
       1: new           #49                 // class org/apache/bookkeeper/versioning/Versioned
       4: dup
       5: aload_0
       6: getfield      #6                  // Field bookies:Ljava/util/Set;
       9: aload_0
      10: getfield      #8                  // Field version:Lorg/apache/bookkeeper/versioning/Version;
      13: invokespecial #52                 // Method org/apache/bookkeeper/versioning/Versioned."<init>":(Ljava/lang/Object;Lorg/apache/bookkeeper/versioning/Version;)V
      16: invokeinterface #43,  2           // InterfaceMethod org/apache/bookkeeper/discover/RegistrationClient$RegistrationListener.onBookiesChanged:(Lorg/apache/bookkeeper/versioning/Versioned;)V
      21: return

  static java.util.concurrent.CompletableFuture access$400(org.apache.bookkeeper.discover.ZKRegistrationClient$WatchTask);
    Code:
       0: aload_0
       1: getfield      #2                  // Field firstRunFuture:Ljava/util/concurrent/CompletableFuture;
       4: areturn
}
