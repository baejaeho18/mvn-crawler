Compiled from "BKException.java"
public class org.apache.bookkeeper.client.api.BKException extends java.lang.Exception {
  static final java.util.function.Function<java.lang.Throwable, org.apache.bookkeeper.client.api.BKException> HANDLER;

  protected final int code;

  private static final org.apache.bookkeeper.client.api.BKException$LogMessagePool logMessagePool;

  public org.apache.bookkeeper.client.api.BKException(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #1                  // Method getMessage:(I)Ljava/lang/String;
       5: invokespecial #2                  // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
       8: aload_0
       9: iload_1
      10: putfield      #3                  // Field code:I
      13: return

  public org.apache.bookkeeper.client.api.BKException(int, java.lang.Throwable);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #1                  // Method getMessage:(I)Ljava/lang/String;
       5: aload_2
       6: invokespecial #4                  // Method java/lang/Exception."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
       9: aload_0
      10: iload_1
      11: putfield      #3                  // Field code:I
      14: return

  public final int getCode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field code:I
       4: ireturn

  public static java.lang.Object codeLogger(int);
    Code:
       0: getstatic     #5                  // Field logMessagePool:Lorg/apache/bookkeeper/client/api/BKException$LogMessagePool;
       3: iload_0
       4: invokestatic  #6                  // Method org/apache/bookkeeper/client/api/BKException$LogMessagePool.access$100:(Lorg/apache/bookkeeper/client/api/BKException$LogMessagePool;I)Ljava/lang/Object;
       7: areturn

  public static java.lang.String getMessage(int);
    Code:
       0: iload_0
       1: lookupswitch  { // 35
                  -200: 376
                  -107: 394
                  -106: 373
                  -105: 370
                  -104: 367
                  -103: 364
                  -102: 361
                  -101: 358
                  -100: 382
                   -25: 316
                   -24: 391
                   -23: 388
                   -22: 355
                   -21: 385
                   -20: 328
                   -19: 379
                   -18: 325
                   -17: 352
                   -16: 349
                   -15: 346
                   -14: 343
                   -13: 340
                   -12: 337
                   -11: 334
                   -10: 331
                    -9: 322
                    -8: 319
                    -7: 313
                    -6: 310
                    -5: 307
                    -4: 304
                    -3: 301
                    -2: 298
                    -1: 295
                     0: 292
               default: 397
          }
     292: ldc           #7                  // String No problem
     294: areturn
     295: ldc           #8                  // String Error while reading ledger
     297: areturn
     298: ldc           #9                  // String Invalid quorum size on ensemble size
     300: areturn
     301: ldc           #10                 // String No bookie available
     303: areturn
     304: ldc           #11                 // String Digest engine not initialized
     306: areturn
     307: ldc           #12                 // String Entry digest does not match
     309: areturn
     310: ldc           #13                 // String Not enough non-faulty bookies available
     312: areturn
     313: ldc           #14                 // String No such ledger exists on Bookies
     315: areturn
     316: ldc           #15                 // String No such ledger exists on Metadata Server
     318: areturn
     319: ldc           #16                 // String Bookie handle is not available
     321: areturn
     322: ldc           #17                 // String Error while using ZooKeeper
     324: areturn
     325: ldc           #18                 // String Error while using MetaStore
     327: areturn
     328: ldc           #19                 // String Ledger existed
     330: areturn
     331: ldc           #20                 // String Error while recovering ledger
     333: areturn
     334: ldc           #21                 // String Attempt to write to a closed ledger
     336: areturn
     337: ldc           #22                 // String Write failed on bookie
     339: areturn
     340: ldc           #23                 // String No such entry
     342: areturn
     343: ldc           #24                 // String Incorrect parameter input
     345: areturn
     346: ldc           #25                 // String Interrupted while waiting for permit
     348: areturn
     349: ldc           #26                 // String Bookie protocol version on server is incompatible with client
     351: areturn
     352: ldc           #27                 // String Bad ledger metadata version
     354: areturn
     355: ldc           #28                 // String Attempted to add Duplicate entryId
     357: areturn
     358: ldc           #29                 // String Ledger has been fenced off. Some other client must have opened it to read
     360: areturn
     361: ldc           #30                 // String Attempted to access ledger using the wrong password
     363: areturn
     364: ldc           #31                 // String Attempting to use an unclosed fragment; This is not safe
     366: areturn
     367: ldc           #32                 // String Attempting to write on ReadOnly bookie
     369: areturn
     370: ldc           #33                 // String Too many requests to the same Bookie
     372: areturn
     373: ldc           #34                 // String Next ledgerID is too large.
     375: areturn
     376: ldc           #35                 // String Errors in replication pipeline
     378: areturn
     379: ldc           #36                 // String BookKeeper client is closed
     381: areturn
     382: ldc           #37                 // String Invalid operation
     384: areturn
     385: ldc           #38                 // String Add entry quorum wait timed out
     387: areturn
     388: ldc           #39                 // String Bookie operation timeout
     390: areturn
     391: ldc           #40                 // String Failed to establish a secure connection
     393: areturn
     394: ldc           #41                 // String Failed to serialize metadata
     396: areturn
     397: ldc           #42                 // String Unexpected condition
     399: areturn

  private static org.apache.bookkeeper.client.api.BKException lambda$static$0(java.lang.Throwable);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: instanceof    #43                 // class org/apache/bookkeeper/client/api/BKException
      10: ifeq          18
      13: aload_0
      14: checkcast     #43                 // class org/apache/bookkeeper/client/api/BKException
      17: areturn
      18: new           #43                 // class org/apache/bookkeeper/client/api/BKException
      21: dup
      22: sipush        -999
      25: invokespecial #45                 // Method "<init>":(I)V
      28: astore_1
      29: aload_1
      30: aload_0
      31: invokevirtual #46                 // Method initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      34: pop
      35: aload_1
      36: areturn

  static {};
    Code:
       0: invokedynamic #47,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
       5: putstatic     #48                 // Field HANDLER:Ljava/util/function/Function;
       8: new           #49                 // class org/apache/bookkeeper/client/api/BKException$LogMessagePool
      11: dup
      12: aconst_null
      13: invokespecial #50                 // Method org/apache/bookkeeper/client/api/BKException$LogMessagePool."<init>":(Lorg/apache/bookkeeper/client/api/BKException$1;)V
      16: putstatic     #5                  // Field logMessagePool:Lorg/apache/bookkeeper/client/api/BKException$LogMessagePool;
      19: return
}
