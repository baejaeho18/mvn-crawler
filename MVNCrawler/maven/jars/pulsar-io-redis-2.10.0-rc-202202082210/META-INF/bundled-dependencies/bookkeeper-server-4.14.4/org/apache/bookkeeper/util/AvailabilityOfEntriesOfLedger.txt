Compiled from "AvailabilityOfEntriesOfLedger.java"
public class org.apache.bookkeeper.util.AvailabilityOfEntriesOfLedger {
  public static final long INVALID_ENTRYID;

  public static final org.apache.bookkeeper.util.AvailabilityOfEntriesOfLedger EMPTY_AVAILABILITYOFENTRIESOFLEDGER;

  public static final int HEADER_SIZE;

  public static final int V0;

  public static final int CURRENT_HEADER_VERSION;

  private final java.util.TreeMap<java.lang.Long, org.apache.bookkeeper.util.AvailabilityOfEntriesOfLedger$SequenceGroup> sortedSequenceGroups;

  private org.apache.commons.lang3.mutable.MutableObject<org.apache.bookkeeper.util.AvailabilityOfEntriesOfLedger$SequenceGroup> curSequenceGroup;

  private org.apache.commons.lang3.mutable.MutableLong curSequenceStartEntryId;

  private org.apache.commons.lang3.mutable.MutableInt curSequenceSize;

  private boolean availabilityOfEntriesOfLedgerClosed;

  private long totalNumOfAvailableEntries;

  public org.apache.bookkeeper.util.AvailabilityOfEntriesOfLedger(java.util.PrimitiveIterator$OfLong);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/TreeMap
       8: dup
       9: invokespecial #5                  // Method java/util/TreeMap."<init>":()V
      12: putfield      #6                  // Field sortedSequenceGroups:Ljava/util/TreeMap;
      15: aload_0
      16: new           #7                  // class org/apache/commons/lang3/mutable/MutableObject
      19: dup
      20: aconst_null
      21: invokespecial #8                  // Method org/apache/commons/lang3/mutable/MutableObject."<init>":(Ljava/lang/Object;)V
      24: putfield      #9                  // Field curSequenceGroup:Lorg/apache/commons/lang3/mutable/MutableObject;
      27: aload_0
      28: new           #10                 // class org/apache/commons/lang3/mutable/MutableLong
      31: dup
      32: ldc2_w        #11                 // long -1l
      35: invokespecial #13                 // Method org/apache/commons/lang3/mutable/MutableLong."<init>":(J)V
      38: putfield      #14                 // Field curSequenceStartEntryId:Lorg/apache/commons/lang3/mutable/MutableLong;
      41: aload_0
      42: new           #15                 // class org/apache/commons/lang3/mutable/MutableInt
      45: dup
      46: iconst_0
      47: invokespecial #16                 // Method org/apache/commons/lang3/mutable/MutableInt."<init>":(I)V
      50: putfield      #17                 // Field curSequenceSize:Lorg/apache/commons/lang3/mutable/MutableInt;
      53: aload_0
      54: iconst_0
      55: putfield      #18                 // Field availabilityOfEntriesOfLedgerClosed:Z
      58: aload_0
      59: lconst_0
      60: putfield      #19                 // Field totalNumOfAvailableEntries:J
      63: aload_1
      64: invokeinterface #20,  1           // InterfaceMethod java/util/PrimitiveIterator$OfLong.hasNext:()Z
      69: ifeq          85
      72: aload_0
      73: aload_1
      74: invokeinterface #21,  1           // InterfaceMethod java/util/PrimitiveIterator$OfLong.nextLong:()J
      79: invokespecial #22                 // Method addEntryToAvailabileEntriesOfLedger:(J)V
      82: goto          63
      85: aload_0
      86: invokespecial #23                 // Method closeStateOfEntriesOfALedger:()V
      89: return

  public org.apache.bookkeeper.util.AvailabilityOfEntriesOfLedger(long[]);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/TreeMap
       8: dup
       9: invokespecial #5                  // Method java/util/TreeMap."<init>":()V
      12: putfield      #6                  // Field sortedSequenceGroups:Ljava/util/TreeMap;
      15: aload_0
      16: new           #7                  // class org/apache/commons/lang3/mutable/MutableObject
      19: dup
      20: aconst_null
      21: invokespecial #8                  // Method org/apache/commons/lang3/mutable/MutableObject."<init>":(Ljava/lang/Object;)V
      24: putfield      #9                  // Field curSequenceGroup:Lorg/apache/commons/lang3/mutable/MutableObject;
      27: aload_0
      28: new           #10                 // class org/apache/commons/lang3/mutable/MutableLong
      31: dup
      32: ldc2_w        #11                 // long -1l
      35: invokespecial #13                 // Method org/apache/commons/lang3/mutable/MutableLong."<init>":(J)V
      38: putfield      #14                 // Field curSequenceStartEntryId:Lorg/apache/commons/lang3/mutable/MutableLong;
      41: aload_0
      42: new           #15                 // class org/apache/commons/lang3/mutable/MutableInt
      45: dup
      46: iconst_0
      47: invokespecial #16                 // Method org/apache/commons/lang3/mutable/MutableInt."<init>":(I)V
      50: putfield      #17                 // Field curSequenceSize:Lorg/apache/commons/lang3/mutable/MutableInt;
      53: aload_0
      54: iconst_0
      55: putfield      #18                 // Field availabilityOfEntriesOfLedgerClosed:Z
      58: aload_0
      59: lconst_0
      60: putfield      #19                 // Field totalNumOfAvailableEntries:J
      63: aload_1
      64: astore_2
      65: aload_2
      66: arraylength
      67: istore_3
      68: iconst_0
      69: istore        4
      71: iload         4
      73: iload_3
      74: if_icmpge     95
      77: aload_2
      78: iload         4
      80: laload
      81: lstore        5
      83: aload_0
      84: lload         5
      86: invokespecial #22                 // Method addEntryToAvailabileEntriesOfLedger:(J)V
      89: iinc          4, 1
      92: goto          71
      95: aload_0
      96: invokespecial #23                 // Method closeStateOfEntriesOfALedger:()V
      99: return

  public org.apache.bookkeeper.util.AvailabilityOfEntriesOfLedger(byte[]);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/TreeMap
       8: dup
       9: invokespecial #5                  // Method java/util/TreeMap."<init>":()V
      12: putfield      #6                  // Field sortedSequenceGroups:Ljava/util/TreeMap;
      15: aload_0
      16: new           #7                  // class org/apache/commons/lang3/mutable/MutableObject
      19: dup
      20: aconst_null
      21: invokespecial #8                  // Method org/apache/commons/lang3/mutable/MutableObject."<init>":(Ljava/lang/Object;)V
      24: putfield      #9                  // Field curSequenceGroup:Lorg/apache/commons/lang3/mutable/MutableObject;
      27: aload_0
      28: new           #10                 // class org/apache/commons/lang3/mutable/MutableLong
      31: dup
      32: ldc2_w        #11                 // long -1l
      35: invokespecial #13                 // Method org/apache/commons/lang3/mutable/MutableLong."<init>":(J)V
      38: putfield      #14                 // Field curSequenceStartEntryId:Lorg/apache/commons/lang3/mutable/MutableLong;
      41: aload_0
      42: new           #15                 // class org/apache/commons/lang3/mutable/MutableInt
      45: dup
      46: iconst_0
      47: invokespecial #16                 // Method org/apache/commons/lang3/mutable/MutableInt."<init>":(I)V
      50: putfield      #17                 // Field curSequenceSize:Lorg/apache/commons/lang3/mutable/MutableInt;
      53: aload_0
      54: iconst_0
      55: putfield      #18                 // Field availabilityOfEntriesOfLedgerClosed:Z
      58: aload_0
      59: lconst_0
      60: putfield      #19                 // Field totalNumOfAvailableEntries:J
      63: bipush        64
      65: newarray       byte
      67: astore_2
      68: bipush        24
      70: newarray       byte
      72: astore_3
      73: aload_1
      74: iconst_0
      75: aload_2
      76: iconst_0
      77: bipush        64
      79: invokestatic  #24                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      82: aload_2
      83: invokestatic  #25                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      86: astore        4
      88: aload         4
      90: invokevirtual #26                 // Method java/nio/ByteBuffer.getInt:()I
      93: istore        5
      95: iload         5
      97: ifle          128
     100: new           #27                 // class java/lang/IllegalArgumentException
     103: dup
     104: new           #28                 // class java/lang/StringBuilder
     107: dup
     108: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
     111: ldc           #30                 // String Unsupported Header Version:
     113: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: iload         5
     118: invokevirtual #32                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     121: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     124: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     127: athrow
     128: aload         4
     130: invokevirtual #26                 // Method java/nio/ByteBuffer.getInt:()I
     133: istore        6
     135: iconst_0
     136: istore        8
     138: iload         8
     140: iload         6
     142: if_icmpge     201
     145: aload_3
     146: iconst_0
     147: invokestatic  #35                 // Method java/util/Arrays.fill:([BB)V
     150: aload_1
     151: bipush        64
     153: iload         8
     155: bipush        24
     157: imul
     158: iadd
     159: aload_3
     160: iconst_0
     161: bipush        24
     163: invokestatic  #24                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     166: new           #2                  // class org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup
     169: dup
     170: aload_3
     171: aconst_null
     172: invokespecial #36                 // Method org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup."<init>":([BLorg/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$1;)V
     175: astore        7
     177: aload_0
     178: getfield      #6                  // Field sortedSequenceGroups:Ljava/util/TreeMap;
     181: aload         7
     183: invokestatic  #37                 // Method org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup.access$100:(Lorg/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup;)J
     186: invokestatic  #38                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     189: aload         7
     191: invokevirtual #39                 // Method java/util/TreeMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     194: pop
     195: iinc          8, 1
     198: goto          138
     201: aload_0
     202: invokespecial #40                 // Method setAvailabilityOfEntriesOfLedgerClosed:()V
     205: return

  public org.apache.bookkeeper.util.AvailabilityOfEntriesOfLedger(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/TreeMap
       8: dup
       9: invokespecial #5                  // Method java/util/TreeMap."<init>":()V
      12: putfield      #6                  // Field sortedSequenceGroups:Ljava/util/TreeMap;
      15: aload_0
      16: new           #7                  // class org/apache/commons/lang3/mutable/MutableObject
      19: dup
      20: aconst_null
      21: invokespecial #8                  // Method org/apache/commons/lang3/mutable/MutableObject."<init>":(Ljava/lang/Object;)V
      24: putfield      #9                  // Field curSequenceGroup:Lorg/apache/commons/lang3/mutable/MutableObject;
      27: aload_0
      28: new           #10                 // class org/apache/commons/lang3/mutable/MutableLong
      31: dup
      32: ldc2_w        #11                 // long -1l
      35: invokespecial #13                 // Method org/apache/commons/lang3/mutable/MutableLong."<init>":(J)V
      38: putfield      #14                 // Field curSequenceStartEntryId:Lorg/apache/commons/lang3/mutable/MutableLong;
      41: aload_0
      42: new           #15                 // class org/apache/commons/lang3/mutable/MutableInt
      45: dup
      46: iconst_0
      47: invokespecial #16                 // Method org/apache/commons/lang3/mutable/MutableInt."<init>":(I)V
      50: putfield      #17                 // Field curSequenceSize:Lorg/apache/commons/lang3/mutable/MutableInt;
      53: aload_0
      54: iconst_0
      55: putfield      #18                 // Field availabilityOfEntriesOfLedgerClosed:Z
      58: aload_0
      59: lconst_0
      60: putfield      #19                 // Field totalNumOfAvailableEntries:J
      63: bipush        64
      65: newarray       byte
      67: astore_2
      68: bipush        24
      70: newarray       byte
      72: astore_3
      73: aload_1
      74: invokevirtual #41                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
      77: istore        4
      79: aload_1
      80: iload         4
      82: aload_2
      83: iconst_0
      84: bipush        64
      86: invokevirtual #42                 // Method io/netty/buffer/ByteBuf.getBytes:(I[BII)Lio/netty/buffer/ByteBuf;
      89: pop
      90: aload_2
      91: invokestatic  #25                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      94: astore        5
      96: aload         5
      98: invokevirtual #26                 // Method java/nio/ByteBuffer.getInt:()I
     101: istore        6
     103: iload         6
     105: ifle          136
     108: new           #27                 // class java/lang/IllegalArgumentException
     111: dup
     112: new           #28                 // class java/lang/StringBuilder
     115: dup
     116: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
     119: ldc           #30                 // String Unsupported Header Version:
     121: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: iload         6
     126: invokevirtual #32                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     129: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     132: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     135: athrow
     136: aload         5
     138: invokevirtual #26                 // Method java/nio/ByteBuffer.getInt:()I
     141: istore        7
     143: iconst_0
     144: istore        9
     146: iload         9
     148: iload         7
     150: if_icmpge     213
     153: aload_3
     154: iconst_0
     155: invokestatic  #35                 // Method java/util/Arrays.fill:([BB)V
     158: aload_1
     159: iload         4
     161: bipush        64
     163: iadd
     164: iload         9
     166: bipush        24
     168: imul
     169: iadd
     170: aload_3
     171: iconst_0
     172: bipush        24
     174: invokevirtual #42                 // Method io/netty/buffer/ByteBuf.getBytes:(I[BII)Lio/netty/buffer/ByteBuf;
     177: pop
     178: new           #2                  // class org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup
     181: dup
     182: aload_3
     183: aconst_null
     184: invokespecial #36                 // Method org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup."<init>":([BLorg/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$1;)V
     187: astore        8
     189: aload_0
     190: getfield      #6                  // Field sortedSequenceGroups:Ljava/util/TreeMap;
     193: aload         8
     195: invokestatic  #37                 // Method org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup.access$100:(Lorg/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup;)J
     198: invokestatic  #38                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     201: aload         8
     203: invokevirtual #39                 // Method java/util/TreeMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     206: pop
     207: iinc          9, 1
     210: goto          146
     213: aload_0
     214: invokespecial #40                 // Method setAvailabilityOfEntriesOfLedgerClosed:()V
     217: return

  private void initializeCurSequence(long);
    Code:
       0: aload_0
       1: getfield      #14                 // Field curSequenceStartEntryId:Lorg/apache/commons/lang3/mutable/MutableLong;
       4: lload_1
       5: invokevirtual #43                 // Method org/apache/commons/lang3/mutable/MutableLong.setValue:(J)V
       8: aload_0
       9: getfield      #17                 // Field curSequenceSize:Lorg/apache/commons/lang3/mutable/MutableInt;
      12: iconst_1
      13: invokevirtual #44                 // Method org/apache/commons/lang3/mutable/MutableInt.setValue:(I)V
      16: return

  private void resetCurSequence();
    Code:
       0: aload_0
       1: getfield      #14                 // Field curSequenceStartEntryId:Lorg/apache/commons/lang3/mutable/MutableLong;
       4: ldc2_w        #11                 // long -1l
       7: invokevirtual #43                 // Method org/apache/commons/lang3/mutable/MutableLong.setValue:(J)V
      10: aload_0
      11: getfield      #17                 // Field curSequenceSize:Lorg/apache/commons/lang3/mutable/MutableInt;
      14: iconst_0
      15: invokevirtual #44                 // Method org/apache/commons/lang3/mutable/MutableInt.setValue:(I)V
      18: return

  private boolean isCurSequenceInitialized();
    Code:
       0: aload_0
       1: getfield      #14                 // Field curSequenceStartEntryId:Lorg/apache/commons/lang3/mutable/MutableLong;
       4: invokevirtual #45                 // Method org/apache/commons/lang3/mutable/MutableLong.longValue:()J
       7: ldc2_w        #11                 // long -1l
      10: lcmp
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  private boolean isEntryExistingInCurSequence(long);
    Code:
       0: aload_0
       1: getfield      #14                 // Field curSequenceStartEntryId:Lorg/apache/commons/lang3/mutable/MutableLong;
       4: invokevirtual #45                 // Method org/apache/commons/lang3/mutable/MutableLong.longValue:()J
       7: lload_1
       8: lcmp
       9: ifgt          37
      12: lload_1
      13: aload_0
      14: getfield      #14                 // Field curSequenceStartEntryId:Lorg/apache/commons/lang3/mutable/MutableLong;
      17: invokevirtual #45                 // Method org/apache/commons/lang3/mutable/MutableLong.longValue:()J
      20: aload_0
      21: getfield      #17                 // Field curSequenceSize:Lorg/apache/commons/lang3/mutable/MutableInt;
      24: invokevirtual #46                 // Method org/apache/commons/lang3/mutable/MutableInt.intValue:()I
      27: i2l
      28: ladd
      29: lcmp
      30: ifge          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  private boolean isEntryAppendableToCurSequence(long);
    Code:
       0: aload_0
       1: getfield      #14                 // Field curSequenceStartEntryId:Lorg/apache/commons/lang3/mutable/MutableLong;
       4: invokevirtual #45                 // Method org/apache/commons/lang3/mutable/MutableLong.longValue:()J
       7: aload_0
       8: getfield      #17                 // Field curSequenceSize:Lorg/apache/commons/lang3/mutable/MutableInt;
      11: invokevirtual #46                 // Method org/apache/commons/lang3/mutable/MutableInt.intValue:()I
      14: i2l
      15: ladd
      16: lload_1
      17: lcmp
      18: ifne          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  private void incrementCurSequenceSize();
    Code:
       0: aload_0
       1: getfield      #17                 // Field curSequenceSize:Lorg/apache/commons/lang3/mutable/MutableInt;
       4: invokevirtual #47                 // Method org/apache/commons/lang3/mutable/MutableInt.increment:()V
       7: return

  private void createNewSequenceGroupWithCurSequence();
    Code:
       0: aload_0
       1: getfield      #9                  // Field curSequenceGroup:Lorg/apache/commons/lang3/mutable/MutableObject;
       4: invokevirtual #48                 // Method org/apache/commons/lang3/mutable/MutableObject.getValue:()Ljava/lang/Object;
       7: checkcast     #2                  // class org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup
      10: astore_1
      11: aload_1
      12: invokestatic  #49                 // Method org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup.access$200:(Lorg/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup;)V
      15: aload_0
      16: getfield      #6                  // Field sortedSequenceGroups:Ljava/util/TreeMap;
      19: aload_1
      20: invokestatic  #37                 // Method org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup.access$100:(Lorg/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup;)J
      23: invokestatic  #38                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      26: aload_1
      27: invokevirtual #39                 // Method java/util/TreeMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      30: pop
      31: aload_0
      32: getfield      #9                  // Field curSequenceGroup:Lorg/apache/commons/lang3/mutable/MutableObject;
      35: new           #2                  // class org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup
      38: dup
      39: aload_0
      40: getfield      #14                 // Field curSequenceStartEntryId:Lorg/apache/commons/lang3/mutable/MutableLong;
      43: invokevirtual #45                 // Method org/apache/commons/lang3/mutable/MutableLong.longValue:()J
      46: aload_0
      47: getfield      #17                 // Field curSequenceSize:Lorg/apache/commons/lang3/mutable/MutableInt;
      50: invokevirtual #46                 // Method org/apache/commons/lang3/mutable/MutableInt.intValue:()I
      53: aconst_null
      54: invokespecial #50                 // Method org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup."<init>":(JILorg/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$1;)V
      57: invokevirtual #51                 // Method org/apache/commons/lang3/mutable/MutableObject.setValue:(Ljava/lang/Object;)V
      60: return

  private boolean isCurSequenceGroupInitialized();
    Code:
       0: aload_0
       1: getfield      #9                  // Field curSequenceGroup:Lorg/apache/commons/lang3/mutable/MutableObject;
       4: invokevirtual #48                 // Method org/apache/commons/lang3/mutable/MutableObject.getValue:()Ljava/lang/Object;
       7: ifnull        14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  private void initializeCurSequenceGroupWithCurSequence();
    Code:
       0: aload_0
       1: getfield      #9                  // Field curSequenceGroup:Lorg/apache/commons/lang3/mutable/MutableObject;
       4: new           #2                  // class org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup
       7: dup
       8: aload_0
       9: getfield      #14                 // Field curSequenceStartEntryId:Lorg/apache/commons/lang3/mutable/MutableLong;
      12: invokevirtual #45                 // Method org/apache/commons/lang3/mutable/MutableLong.longValue:()J
      15: aload_0
      16: getfield      #17                 // Field curSequenceSize:Lorg/apache/commons/lang3/mutable/MutableInt;
      19: invokevirtual #46                 // Method org/apache/commons/lang3/mutable/MutableInt.intValue:()I
      22: aconst_null
      23: invokespecial #50                 // Method org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup."<init>":(JILorg/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$1;)V
      26: invokevirtual #51                 // Method org/apache/commons/lang3/mutable/MutableObject.setValue:(Ljava/lang/Object;)V
      29: return

  private boolean doesCurSequenceBelongToCurSequenceGroup();
    Code:
       0: aload_0
       1: getfield      #14                 // Field curSequenceStartEntryId:Lorg/apache/commons/lang3/mutable/MutableLong;
       4: invokevirtual #45                 // Method org/apache/commons/lang3/mutable/MutableLong.longValue:()J
       7: lstore_1
       8: aload_0
       9: getfield      #17                 // Field curSequenceSize:Lorg/apache/commons/lang3/mutable/MutableInt;
      12: invokevirtual #46                 // Method org/apache/commons/lang3/mutable/MutableInt.intValue:()I
      15: istore_3
      16: iconst_0
      17: istore        4
      19: aload_0
      20: getfield      #9                  // Field curSequenceGroup:Lorg/apache/commons/lang3/mutable/MutableObject;
      23: invokevirtual #48                 // Method org/apache/commons/lang3/mutable/MutableObject.getValue:()Ljava/lang/Object;
      26: checkcast     #2                  // class org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup
      29: astore        5
      31: aload         5
      33: invokestatic  #52                 // Method org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup.access$400:(Lorg/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup;)I
      36: iload_3
      37: if_icmpne     72
      40: aload         5
      42: invokestatic  #53                 // Method org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup.access$500:(Lorg/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup;)J
      45: ldc2_w        #11                 // long -1l
      48: lcmp
      49: ifeq          69
      52: lload_1
      53: aload         5
      55: invokestatic  #53                 // Method org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup.access$500:(Lorg/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup;)J
      58: lsub
      59: aload         5
      61: invokestatic  #54                 // Method org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup.access$600:(Lorg/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup;)I
      64: i2l
      65: lcmp
      66: ifne          72
      69: iconst_1
      70: istore        4
      72: iload         4
      74: ireturn

  private void appendCurSequenceToCurSequenceGroup();
    Code:
       0: aload_0
       1: getfield      #9                  // Field curSequenceGroup:Lorg/apache/commons/lang3/mutable/MutableObject;
       4: invokevirtual #48                 // Method org/apache/commons/lang3/mutable/MutableObject.getValue:()Ljava/lang/Object;
       7: checkcast     #2                  // class org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup
      10: astore_1
      11: aload_1
      12: aload_0
      13: getfield      #14                 // Field curSequenceStartEntryId:Lorg/apache/commons/lang3/mutable/MutableLong;
      16: invokevirtual #45                 // Method org/apache/commons/lang3/mutable/MutableLong.longValue:()J
      19: invokestatic  #55                 // Method org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup.access$700:(Lorg/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup;J)V
      22: aload_1
      23: invokestatic  #54                 // Method org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup.access$600:(Lorg/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup;)I
      26: ifne          43
      29: aload_1
      30: aload_1
      31: invokestatic  #53                 // Method org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup.access$500:(Lorg/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup;)J
      34: aload_1
      35: invokestatic  #56                 // Method org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup.access$800:(Lorg/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup;)J
      38: lsub
      39: l2i
      40: invokestatic  #57                 // Method org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup.access$900:(Lorg/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup;I)V
      43: return

  private void addCurSequenceToSequenceGroup();
    Code:
       0: aload_0
       1: invokespecial #58                 // Method isCurSequenceGroupInitialized:()Z
       4: ifne          14
       7: aload_0
       8: invokespecial #59                 // Method initializeCurSequenceGroupWithCurSequence:()V
      11: goto          32
      14: aload_0
      15: invokespecial #60                 // Method doesCurSequenceBelongToCurSequenceGroup:()Z
      18: ifeq          28
      21: aload_0
      22: invokespecial #61                 // Method appendCurSequenceToCurSequenceGroup:()V
      25: goto          32
      28: aload_0
      29: invokespecial #62                 // Method createNewSequenceGroupWithCurSequence:()V
      32: return

  private void addEntryToAvailabileEntriesOfLedger(long);
    Code:
       0: aload_0
       1: invokespecial #63                 // Method isCurSequenceInitialized:()Z
       4: ifne          15
       7: aload_0
       8: lload_1
       9: invokespecial #64                 // Method initializeCurSequence:(J)V
      12: goto          50
      15: aload_0
      16: lload_1
      17: invokespecial #65                 // Method isEntryExistingInCurSequence:(J)Z
      20: ifeq          26
      23: goto          50
      26: aload_0
      27: lload_1
      28: invokespecial #66                 // Method isEntryAppendableToCurSequence:(J)Z
      31: ifeq          41
      34: aload_0
      35: invokespecial #67                 // Method incrementCurSequenceSize:()V
      38: goto          50
      41: aload_0
      42: invokespecial #68                 // Method addCurSequenceToSequenceGroup:()V
      45: aload_0
      46: lload_1
      47: invokespecial #64                 // Method initializeCurSequence:(J)V
      50: return

  private void closeStateOfEntriesOfALedger();
    Code:
       0: aload_0
       1: invokespecial #63                 // Method isCurSequenceInitialized:()Z
       4: ifeq          15
       7: aload_0
       8: invokespecial #68                 // Method addCurSequenceToSequenceGroup:()V
      11: aload_0
      12: invokespecial #69                 // Method resetCurSequence:()V
      15: aload_0
      16: getfield      #9                  // Field curSequenceGroup:Lorg/apache/commons/lang3/mutable/MutableObject;
      19: invokevirtual #48                 // Method org/apache/commons/lang3/mutable/MutableObject.getValue:()Ljava/lang/Object;
      22: checkcast     #2                  // class org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup
      25: astore_1
      26: aload_1
      27: ifnull        50
      30: aload_1
      31: invokestatic  #49                 // Method org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup.access$200:(Lorg/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup;)V
      34: aload_0
      35: getfield      #6                  // Field sortedSequenceGroups:Ljava/util/TreeMap;
      38: aload_1
      39: invokestatic  #37                 // Method org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup.access$100:(Lorg/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup;)J
      42: invokestatic  #38                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      45: aload_1
      46: invokevirtual #39                 // Method java/util/TreeMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: aload_0
      51: invokespecial #40                 // Method setAvailabilityOfEntriesOfLedgerClosed:()V
      54: return

  private boolean isAvailabilityOfEntriesOfLedgerClosed();
    Code:
       0: aload_0
       1: getfield      #18                 // Field availabilityOfEntriesOfLedgerClosed:Z
       4: ireturn

  private void setAvailabilityOfEntriesOfLedgerClosed();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #18                 // Field availabilityOfEntriesOfLedgerClosed:Z
       5: aload_0
       6: getfield      #6                  // Field sortedSequenceGroups:Ljava/util/TreeMap;
       9: invokevirtual #70                 // Method java/util/TreeMap.entrySet:()Ljava/util/Set;
      12: invokeinterface #71,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      17: astore_1
      18: aload_1
      19: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          61
      27: aload_1
      28: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #74                 // class java/util/Map$Entry
      36: astore_2
      37: aload_0
      38: dup
      39: getfield      #19                 // Field totalNumOfAvailableEntries:J
      42: aload_2
      43: invokeinterface #75,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      48: checkcast     #2                  // class org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup
      51: invokestatic  #76                 // Method org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup.access$1000:(Lorg/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup;)J
      54: ladd
      55: putfield      #19                 // Field totalNumOfAvailableEntries:J
      58: goto          18
      61: return

  public byte[] serializeStateOfEntriesOfLedger();
    Code:
       0: aload_0
       1: invokespecial #77                 // Method isAvailabilityOfEntriesOfLedgerClosed:()Z
       4: ifne          17
       7: new           #78                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #79                 // String AvailabilityOfEntriesOfLedger is not yet closed,it is illegal to call serializeStateOfEntriesOfLedger
      13: invokespecial #80                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: bipush        64
      19: newarray       byte
      21: astore_1
      22: aload_1
      23: invokestatic  #25                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      26: astore_2
      27: bipush        24
      29: newarray       byte
      31: astore_3
      32: bipush        64
      34: aload_0
      35: getfield      #6                  // Field sortedSequenceGroups:Ljava/util/TreeMap;
      38: invokevirtual #81                 // Method java/util/TreeMap.size:()I
      41: bipush        24
      43: imul
      44: iadd
      45: newarray       byte
      47: astore        4
      49: aload_0
      50: getfield      #6                  // Field sortedSequenceGroups:Ljava/util/TreeMap;
      53: invokevirtual #81                 // Method java/util/TreeMap.size:()I
      56: istore        5
      58: aload_2
      59: iconst_0
      60: invokevirtual #82                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      63: pop
      64: aload_2
      65: iload         5
      67: invokevirtual #82                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      70: pop
      71: aload_1
      72: iconst_0
      73: aload         4
      75: iconst_0
      76: bipush        64
      78: invokestatic  #24                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      81: iconst_0
      82: istore        6
      84: aload_0
      85: getfield      #6                  // Field sortedSequenceGroups:Ljava/util/TreeMap;
      88: invokevirtual #70                 // Method java/util/TreeMap.entrySet:()Ljava/util/Set;
      91: invokeinterface #71,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      96: astore        7
      98: aload         7
     100: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     105: ifeq          166
     108: aload         7
     110: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     115: checkcast     #74                 // class java/util/Map$Entry
     118: astore        8
     120: aload         8
     122: invokeinterface #75,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     127: checkcast     #2                  // class org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup
     130: astore        9
     132: aload_3
     133: iconst_0
     134: invokestatic  #35                 // Method java/util/Arrays.fill:([BB)V
     137: aload         9
     139: aload_3
     140: invokestatic  #83                 // Method org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup.access$1100:(Lorg/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup;[B)V
     143: aload_3
     144: iconst_0
     145: aload         4
     147: bipush        64
     149: iload         6
     151: iinc          6, 1
     154: bipush        24
     156: imul
     157: iadd
     158: bipush        24
     160: invokestatic  #24                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     163: goto          98
     166: aload         4
     168: areturn

  public boolean isEntryAvailable(long);
    Code:
       0: aload_0
       1: invokespecial #77                 // Method isAvailabilityOfEntriesOfLedgerClosed:()Z
       4: ifne          17
       7: new           #78                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #84                 // String AvailabilityOfEntriesOfLedger is not yet closed, it is illegal to call isEntryAvailable
      13: invokespecial #80                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #6                  // Field sortedSequenceGroups:Ljava/util/TreeMap;
      21: lload_1
      22: invokestatic  #38                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      25: invokevirtual #85                 // Method java/util/TreeMap.floorEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;
      28: astore_3
      29: aload_3
      30: ifnonnull     35
      33: iconst_0
      34: ireturn
      35: aload_3
      36: invokeinterface #75,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      41: checkcast     #2                  // class org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup
      44: lload_1
      45: invokestatic  #86                 // Method org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup.access$1200:(Lorg/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup;J)Z
      48: ireturn

  public java.util.List<java.lang.Long> getUnavailableEntries(long, long, java.util.BitSet);
    Code:
       0: aload_0
       1: invokespecial #77                 // Method isAvailabilityOfEntriesOfLedgerClosed:()Z
       4: ifne          17
       7: new           #78                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #87                 // String AvailabilityOfEntriesOfLedger is not yet closed, it is illegal to call getUnavailableEntries
      13: invokespecial #80                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: new           #88                 // class java/util/ArrayList
      20: dup
      21: invokespecial #89                 // Method java/util/ArrayList."<init>":()V
      24: astore        6
      26: aconst_null
      27: astore        7
      29: iconst_0
      30: istore        8
      32: iconst_0
      33: istore        9
      35: lload_1
      36: lstore        10
      38: lload         10
      40: lload_3
      41: lcmp
      42: ifgt          252
      45: iload         8
      47: ifeq          76
      50: aload         5
      52: iload         9
      54: invokevirtual #90                 // Method java/util/BitSet.get:(I)Z
      57: ifeq          240
      60: aload         6
      62: lload         10
      64: invokestatic  #38                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      67: invokeinterface #91,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      72: pop
      73: goto          240
      76: aload         7
      78: ifnull        92
      81: lload         10
      83: aload         7
      85: invokestatic  #92                 // Method org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup.access$1300:(Lorg/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup;)J
      88: lcmp
      89: ifle          207
      92: aload_0
      93: getfield      #6                  // Field sortedSequenceGroups:Ljava/util/TreeMap;
      96: lload         10
      98: invokestatic  #38                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     101: invokevirtual #85                 // Method java/util/TreeMap.floorEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;
     104: astore        12
     106: aload         12
     108: ifnonnull     155
     111: aload         5
     113: iload         9
     115: invokevirtual #90                 // Method java/util/BitSet.get:(I)Z
     118: ifeq          134
     121: aload         6
     123: lload         10
     125: invokestatic  #38                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     128: invokeinterface #91,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     133: pop
     134: aload_0
     135: getfield      #6                  // Field sortedSequenceGroups:Ljava/util/TreeMap;
     138: lload         10
     140: invokestatic  #38                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     143: invokevirtual #93                 // Method java/util/TreeMap.ceilingEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;
     146: ifnonnull     240
     149: iconst_1
     150: istore        8
     152: goto          240
     155: aload         12
     157: invokeinterface #75,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     162: checkcast     #2                  // class org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup
     165: astore        7
     167: lload         10
     169: aload         7
     171: invokestatic  #92                 // Method org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup.access$1300:(Lorg/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup;)J
     174: lcmp
     175: ifle          207
     178: aload         5
     180: iload         9
     182: invokevirtual #90                 // Method java/util/BitSet.get:(I)Z
     185: ifeq          201
     188: aload         6
     190: lload         10
     192: invokestatic  #38                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     195: invokeinterface #91,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     200: pop
     201: iconst_1
     202: istore        8
     204: goto          240
     207: aload         5
     209: iload         9
     211: invokevirtual #90                 // Method java/util/BitSet.get:(I)Z
     214: ifeq          240
     217: aload         7
     219: lload         10
     221: invokestatic  #86                 // Method org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup.access$1200:(Lorg/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger$SequenceGroup;J)Z
     224: ifne          240
     227: aload         6
     229: lload         10
     231: invokestatic  #38                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     234: invokeinterface #91,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     239: pop
     240: lload         10
     242: lconst_1
     243: ladd
     244: lstore        10
     246: iinc          9, 1
     249: goto          38
     252: aload         6
     254: areturn

  public long getTotalNumOfAvailableEntries();
    Code:
       0: aload_0
       1: invokespecial #77                 // Method isAvailabilityOfEntriesOfLedgerClosed:()Z
       4: ifne          17
       7: new           #78                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #94                 // String AvailabilityOfEntriesOfLedger is not yet closed, it is illegal to call getTotalNumOfAvailableEntries
      13: invokespecial #80                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #19                 // Field totalNumOfAvailableEntries:J
      21: lreturn

  static {};
    Code:
       0: iconst_0
       1: newarray       long
       3: astore_0
       4: new           #1                  // class org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger
       7: dup
       8: aload_0
       9: invokestatic  #95                 // Method java/util/Arrays.stream:([J)Ljava/util/stream/LongStream;
      12: invokeinterface #96,  1           // InterfaceMethod java/util/stream/LongStream.iterator:()Ljava/util/PrimitiveIterator$OfLong;
      17: invokespecial #97                 // Method "<init>":(Ljava/util/PrimitiveIterator$OfLong;)V
      20: putstatic     #98                 // Field EMPTY_AVAILABILITYOFENTRIESOFLEDGER:Lorg/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger;
      23: return
}
