Compiled from "ConcurrentLongLongPairHashMap.java"
final class org.apache.bookkeeper.util.collections.ConcurrentLongLongPairHashMap$Section extends java.util.concurrent.locks.StampedLock {
  private volatile long[] table;

  private volatile int capacity;

  private volatile int size;

  private int usedBuckets;

  private int resizeThreshold;

  org.apache.bookkeeper.util.collections.ConcurrentLongLongPairHashMap$Section(int);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/util/concurrent/locks/StampedLock."<init>":()V
       4: aload_0
       5: iload_1
       6: invokestatic  #7                  // Method org/apache/bookkeeper/util/collections/ConcurrentLongLongPairHashMap.access$400:(I)I
       9: putfield      #4                  // Field capacity:I
      12: aload_0
      13: iconst_4
      14: aload_0
      15: getfield      #4                  // Field capacity:I
      18: imul
      19: newarray       long
      21: putfield      #8                  // Field table:[J
      24: aload_0
      25: iconst_0
      26: putfield      #5                  // Field size:I
      29: aload_0
      30: iconst_0
      31: putfield      #3                  // Field usedBuckets:I
      34: aload_0
      35: aload_0
      36: getfield      #4                  // Field capacity:I
      39: i2f
      40: ldc           #9                  // float 0.66f
      42: fmul
      43: f2i
      44: putfield      #10                 // Field resizeThreshold:I
      47: aload_0
      48: getfield      #8                  // Field table:[J
      51: ldc2_w        #11                 // long -1l
      54: invokestatic  #13                 // Method java/util/Arrays.fill:([JJ)V
      57: return

  org.apache.bookkeeper.util.collections.ConcurrentLongLongPairHashMap$LongPair get(long, long, int);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method tryOptimisticRead:()J
       4: lstore        6
       6: iconst_0
       7: istore        8
       9: iload         5
      11: i2l
      12: aload_0
      13: getfield      #4                  // Field capacity:I
      16: invokestatic  #15                 // Method org/apache/bookkeeper/util/collections/ConcurrentLongLongPairHashMap.signSafeMod:(JI)I
      19: istore        9
      21: aload_0
      22: getfield      #8                  // Field table:[J
      25: iload         9
      27: laload
      28: lstore        10
      30: aload_0
      31: getfield      #8                  // Field table:[J
      34: iload         9
      36: iconst_1
      37: iadd
      38: laload
      39: lstore        12
      41: aload_0
      42: getfield      #8                  // Field table:[J
      45: iload         9
      47: iconst_2
      48: iadd
      49: laload
      50: lstore        14
      52: aload_0
      53: getfield      #8                  // Field table:[J
      56: iload         9
      58: iconst_3
      59: iadd
      60: laload
      61: lstore        16
      63: iload         8
      65: ifne          144
      68: aload_0
      69: lload         6
      71: invokevirtual #16                 // Method validate:(J)Z
      74: ifeq          144
      77: lload_1
      78: lload         10
      80: lcmp
      81: ifne          118
      84: lload_3
      85: lload         12
      87: lcmp
      88: ifne          118
      91: new           #17                 // class org/apache/bookkeeper/util/collections/ConcurrentLongLongPairHashMap$LongPair
      94: dup
      95: lload         14
      97: lload         16
      99: invokespecial #18                 // Method org/apache/bookkeeper/util/collections/ConcurrentLongLongPairHashMap$LongPair."<init>":(JJ)V
     102: astore        18
     104: iload         8
     106: ifeq          115
     109: aload_0
     110: lload         6
     112: invokevirtual #19                 // Method unlockRead:(J)V
     115: aload         18
     117: areturn
     118: lload         10
     120: ldc2_w        #11                 // long -1l
     123: lcmp
     124: ifne          279
     127: aconst_null
     128: astore        18
     130: iload         8
     132: ifeq          141
     135: aload_0
     136: lload         6
     138: invokevirtual #19                 // Method unlockRead:(J)V
     141: aload         18
     143: areturn
     144: iload         8
     146: ifne          212
     149: aload_0
     150: invokevirtual #20                 // Method readLock:()J
     153: lstore        6
     155: iconst_1
     156: istore        8
     158: iload         5
     160: i2l
     161: aload_0
     162: getfield      #4                  // Field capacity:I
     165: invokestatic  #15                 // Method org/apache/bookkeeper/util/collections/ConcurrentLongLongPairHashMap.signSafeMod:(JI)I
     168: istore        9
     170: aload_0
     171: getfield      #8                  // Field table:[J
     174: iload         9
     176: laload
     177: lstore        10
     179: aload_0
     180: getfield      #8                  // Field table:[J
     183: iload         9
     185: iconst_1
     186: iadd
     187: laload
     188: lstore        12
     190: aload_0
     191: getfield      #8                  // Field table:[J
     194: iload         9
     196: iconst_2
     197: iadd
     198: laload
     199: lstore        14
     201: aload_0
     202: getfield      #8                  // Field table:[J
     205: iload         9
     207: iconst_3
     208: iadd
     209: laload
     210: lstore        16
     212: lload_1
     213: lload         10
     215: lcmp
     216: ifne          253
     219: lload_3
     220: lload         12
     222: lcmp
     223: ifne          253
     226: new           #17                 // class org/apache/bookkeeper/util/collections/ConcurrentLongLongPairHashMap$LongPair
     229: dup
     230: lload         14
     232: lload         16
     234: invokespecial #18                 // Method org/apache/bookkeeper/util/collections/ConcurrentLongLongPairHashMap$LongPair."<init>":(JJ)V
     237: astore        18
     239: iload         8
     241: ifeq          250
     244: aload_0
     245: lload         6
     247: invokevirtual #19                 // Method unlockRead:(J)V
     250: aload         18
     252: areturn
     253: lload         10
     255: ldc2_w        #11                 // long -1l
     258: lcmp
     259: ifne          279
     262: aconst_null
     263: astore        18
     265: iload         8
     267: ifeq          276
     270: aload_0
     271: lload         6
     273: invokevirtual #19                 // Method unlockRead:(J)V
     276: aload         18
     278: areturn
     279: iload         9
     281: iconst_4
     282: iadd
     283: aload_0
     284: getfield      #8                  // Field table:[J
     287: arraylength
     288: iconst_1
     289: isub
     290: iand
     291: istore        9
     293: goto          21
     296: astore        19
     298: iload         8
     300: ifeq          309
     303: aload_0
     304: lload         6
     306: invokevirtual #19                 // Method unlockRead:(J)V
     309: aload         19
     311: athrow
    Exception table:
       from    to  target type
          21   104   296   any
         118   130   296   any
         144   239   296   any
         253   265   296   any
         279   298   296   any

  boolean put(long, long, long, long, int, boolean);
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method writeLock:()J
       4: lstore        11
       6: iload         9
       8: i2l
       9: aload_0
      10: getfield      #4                  // Field capacity:I
      13: invokestatic  #15                 // Method org/apache/bookkeeper/util/collections/ConcurrentLongLongPairHashMap.signSafeMod:(JI)I
      16: istore        13
      18: iconst_m1
      19: istore        14
      21: aload_0
      22: getfield      #8                  // Field table:[J
      25: iload         13
      27: laload
      28: lstore        15
      30: aload_0
      31: getfield      #8                  // Field table:[J
      34: iload         13
      36: iconst_1
      37: iadd
      38: laload
      39: lstore        17
      41: lload_1
      42: lload         15
      44: lcmp
      45: ifne          182
      48: lload_3
      49: lload         17
      51: lcmp
      52: ifne          182
      55: iload         10
      57: ifne          132
      60: aload_0
      61: getfield      #8                  // Field table:[J
      64: iload         13
      66: iconst_2
      67: iadd
      68: lload         5
      70: lastore
      71: aload_0
      72: getfield      #8                  // Field table:[J
      75: iload         13
      77: iconst_3
      78: iadd
      79: lload         7
      81: lastore
      82: iconst_1
      83: istore        19
      85: aload_0
      86: getfield      #3                  // Field usedBuckets:I
      89: aload_0
      90: getfield      #10                 // Field resizeThreshold:I
      93: if_icmple     123
      96: aload_0
      97: invokespecial #22                 // Method rehash:()V
     100: aload_0
     101: lload         11
     103: invokevirtual #23                 // Method unlockWrite:(J)V
     106: goto          120
     109: astore        20
     111: aload_0
     112: lload         11
     114: invokevirtual #23                 // Method unlockWrite:(J)V
     117: aload         20
     119: athrow
     120: goto          129
     123: aload_0
     124: lload         11
     126: invokevirtual #23                 // Method unlockWrite:(J)V
     129: iload         19
     131: ireturn
     132: iconst_0
     133: istore        19
     135: aload_0
     136: getfield      #3                  // Field usedBuckets:I
     139: aload_0
     140: getfield      #10                 // Field resizeThreshold:I
     143: if_icmple     173
     146: aload_0
     147: invokespecial #22                 // Method rehash:()V
     150: aload_0
     151: lload         11
     153: invokevirtual #23                 // Method unlockWrite:(J)V
     156: goto          170
     159: astore        21
     161: aload_0
     162: lload         11
     164: invokevirtual #23                 // Method unlockWrite:(J)V
     167: aload         21
     169: athrow
     170: goto          179
     173: aload_0
     174: lload         11
     176: invokevirtual #23                 // Method unlockWrite:(J)V
     179: iload         19
     181: ireturn
     182: lload         15
     184: ldc2_w        #11                 // long -1l
     187: lcmp
     188: ifne          314
     191: iload         14
     193: iconst_m1
     194: if_icmpeq     204
     197: iload         14
     199: istore        13
     201: goto          214
     204: aload_0
     205: dup
     206: getfield      #3                  // Field usedBuckets:I
     209: iconst_1
     210: iadd
     211: putfield      #3                  // Field usedBuckets:I
     214: aload_0
     215: getfield      #8                  // Field table:[J
     218: iload         13
     220: lload_1
     221: lastore
     222: aload_0
     223: getfield      #8                  // Field table:[J
     226: iload         13
     228: iconst_1
     229: iadd
     230: lload_3
     231: lastore
     232: aload_0
     233: getfield      #8                  // Field table:[J
     236: iload         13
     238: iconst_2
     239: iadd
     240: lload         5
     242: lastore
     243: aload_0
     244: getfield      #8                  // Field table:[J
     247: iload         13
     249: iconst_3
     250: iadd
     251: lload         7
     253: lastore
     254: aload_0
     255: dup
     256: getfield      #5                  // Field size:I
     259: iconst_1
     260: iadd
     261: putfield      #5                  // Field size:I
     264: iconst_1
     265: istore        19
     267: aload_0
     268: getfield      #3                  // Field usedBuckets:I
     271: aload_0
     272: getfield      #10                 // Field resizeThreshold:I
     275: if_icmple     305
     278: aload_0
     279: invokespecial #22                 // Method rehash:()V
     282: aload_0
     283: lload         11
     285: invokevirtual #23                 // Method unlockWrite:(J)V
     288: goto          302
     291: astore        22
     293: aload_0
     294: lload         11
     296: invokevirtual #23                 // Method unlockWrite:(J)V
     299: aload         22
     301: athrow
     302: goto          311
     305: aload_0
     306: lload         11
     308: invokevirtual #23                 // Method unlockWrite:(J)V
     311: iload         19
     313: ireturn
     314: lload         15
     316: ldc2_w        #24                 // long -2l
     319: lcmp
     320: ifne          333
     323: iload         14
     325: iconst_m1
     326: if_icmpne     333
     329: iload         13
     331: istore        14
     333: iload         13
     335: iconst_4
     336: iadd
     337: aload_0
     338: getfield      #8                  // Field table:[J
     341: arraylength
     342: iconst_1
     343: isub
     344: iand
     345: istore        13
     347: goto          21
     350: astore        23
     352: aload_0
     353: getfield      #3                  // Field usedBuckets:I
     356: aload_0
     357: getfield      #10                 // Field resizeThreshold:I
     360: if_icmple     390
     363: aload_0
     364: invokespecial #22                 // Method rehash:()V
     367: aload_0
     368: lload         11
     370: invokevirtual #23                 // Method unlockWrite:(J)V
     373: goto          387
     376: astore        24
     378: aload_0
     379: lload         11
     381: invokevirtual #23                 // Method unlockWrite:(J)V
     384: aload         24
     386: athrow
     387: goto          396
     390: aload_0
     391: lload         11
     393: invokevirtual #23                 // Method unlockWrite:(J)V
     396: aload         23
     398: athrow
    Exception table:
       from    to  target type
          96   100   109   any
         109   111   109   any
         146   150   159   any
         159   161   159   any
         278   282   291   any
         291   293   291   any
          21    85   350   any
         132   135   350   any
         182   267   350   any
         363   367   376   any
         376   378   376   any
         314   352   350   any

  private boolean remove(long, long, long, long, int);
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method writeLock:()J
       4: lstore        10
       6: iload         9
       8: i2l
       9: aload_0
      10: getfield      #4                  // Field capacity:I
      13: invokestatic  #15                 // Method org/apache/bookkeeper/util/collections/ConcurrentLongLongPairHashMap.signSafeMod:(JI)I
      16: istore        12
      18: aload_0
      19: getfield      #8                  // Field table:[J
      22: iload         12
      24: laload
      25: lstore        13
      27: aload_0
      28: getfield      #8                  // Field table:[J
      31: iload         12
      33: iconst_1
      34: iadd
      35: laload
      36: lstore        15
      38: aload_0
      39: getfield      #8                  // Field table:[J
      42: iload         12
      44: iconst_2
      45: iadd
      46: laload
      47: lstore        17
      49: aload_0
      50: getfield      #8                  // Field table:[J
      53: iload         12
      55: iconst_3
      56: iadd
      57: laload
      58: lstore        19
      60: lload_1
      61: lload         13
      63: lcmp
      64: ifne          139
      67: lload_3
      68: lload         15
      70: lcmp
      71: ifne          139
      74: lload         5
      76: ldc2_w        #11                 // long -1l
      79: lcmp
      80: ifeq          99
      83: lload         5
      85: lload         17
      87: lcmp
      88: ifne          127
      91: lload         7
      93: lload         19
      95: lcmp
      96: ifne          127
      99: aload_0
     100: dup
     101: getfield      #5                  // Field size:I
     104: iconst_1
     105: isub
     106: putfield      #5                  // Field size:I
     109: aload_0
     110: iload         12
     112: invokespecial #26                 // Method cleanBucket:(I)V
     115: iconst_1
     116: istore        21
     118: aload_0
     119: lload         10
     121: invokevirtual #23                 // Method unlockWrite:(J)V
     124: iload         21
     126: ireturn
     127: iconst_0
     128: istore        21
     130: aload_0
     131: lload         10
     133: invokevirtual #23                 // Method unlockWrite:(J)V
     136: iload         21
     138: ireturn
     139: lload         13
     141: ldc2_w        #11                 // long -1l
     144: lcmp
     145: ifne          160
     148: iconst_0
     149: istore        21
     151: aload_0
     152: lload         10
     154: invokevirtual #23                 // Method unlockWrite:(J)V
     157: iload         21
     159: ireturn
     160: iload         12
     162: iconst_4
     163: iadd
     164: aload_0
     165: getfield      #8                  // Field table:[J
     168: arraylength
     169: iconst_1
     170: isub
     171: iand
     172: istore        12
     174: goto          18
     177: astore        22
     179: aload_0
     180: lload         10
     182: invokevirtual #23                 // Method unlockWrite:(J)V
     185: aload         22
     187: athrow
    Exception table:
       from    to  target type
          18   118   177   any
         127   130   177   any
         139   151   177   any
         160   179   177   any

  private void cleanBucket(int);
    Code:
       0: iload_1
       1: iconst_4
       2: iadd
       3: aload_0
       4: getfield      #8                  // Field table:[J
       7: arraylength
       8: iconst_1
       9: isub
      10: iand
      11: istore_2
      12: aload_0
      13: getfield      #8                  // Field table:[J
      16: iload_2
      17: laload
      18: ldc2_w        #11                 // long -1l
      21: lcmp
      22: ifne          80
      25: aload_0
      26: getfield      #8                  // Field table:[J
      29: iload_1
      30: ldc2_w        #11                 // long -1l
      33: lastore
      34: aload_0
      35: getfield      #8                  // Field table:[J
      38: iload_1
      39: iconst_1
      40: iadd
      41: ldc2_w        #11                 // long -1l
      44: lastore
      45: aload_0
      46: getfield      #8                  // Field table:[J
      49: iload_1
      50: iconst_2
      51: iadd
      52: ldc2_w        #11                 // long -1l
      55: lastore
      56: aload_0
      57: getfield      #8                  // Field table:[J
      60: iload_1
      61: iconst_3
      62: iadd
      63: ldc2_w        #11                 // long -1l
      66: lastore
      67: aload_0
      68: dup
      69: getfield      #3                  // Field usedBuckets:I
      72: iconst_1
      73: isub
      74: putfield      #3                  // Field usedBuckets:I
      77: goto          122
      80: aload_0
      81: getfield      #8                  // Field table:[J
      84: iload_1
      85: ldc2_w        #24                 // long -2l
      88: lastore
      89: aload_0
      90: getfield      #8                  // Field table:[J
      93: iload_1
      94: iconst_1
      95: iadd
      96: ldc2_w        #24                 // long -2l
      99: lastore
     100: aload_0
     101: getfield      #8                  // Field table:[J
     104: iload_1
     105: iconst_2
     106: iadd
     107: ldc2_w        #11                 // long -1l
     110: lastore
     111: aload_0
     112: getfield      #8                  // Field table:[J
     115: iload_1
     116: iconst_3
     117: iadd
     118: ldc2_w        #11                 // long -1l
     121: lastore
     122: return

  void clear();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method writeLock:()J
       4: lstore_1
       5: aload_0
       6: getfield      #8                  // Field table:[J
       9: ldc2_w        #11                 // long -1l
      12: invokestatic  #13                 // Method java/util/Arrays.fill:([JJ)V
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field size:I
      20: aload_0
      21: iconst_0
      22: putfield      #3                  // Field usedBuckets:I
      25: aload_0
      26: lload_1
      27: invokevirtual #23                 // Method unlockWrite:(J)V
      30: goto          41
      33: astore_3
      34: aload_0
      35: lload_1
      36: invokevirtual #23                 // Method unlockWrite:(J)V
      39: aload_3
      40: athrow
      41: return
    Exception table:
       from    to  target type
           5    25    33   any

  public void forEach(org.apache.bookkeeper.util.collections.ConcurrentLongLongPairHashMap$BiConsumerLongPair);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method tryOptimisticRead:()J
       4: lstore_2
       5: aload_0
       6: getfield      #8                  // Field table:[J
       9: astore        4
      11: iconst_0
      12: istore        5
      14: aload_0
      15: lload_2
      16: invokevirtual #16                 // Method validate:(J)Z
      19: ifne          36
      22: aload_0
      23: invokevirtual #20                 // Method readLock:()J
      26: lstore_2
      27: iconst_1
      28: istore        5
      30: aload_0
      31: getfield      #8                  // Field table:[J
      34: astore        4
      36: iconst_0
      37: istore        6
      39: iload         6
      41: aload         4
      43: arraylength
      44: if_icmpge     174
      47: aload         4
      49: iload         6
      51: laload
      52: lstore        7
      54: aload         4
      56: iload         6
      58: iconst_1
      59: iadd
      60: laload
      61: lstore        9
      63: aload         4
      65: iload         6
      67: iconst_2
      68: iadd
      69: laload
      70: lstore        11
      72: aload         4
      74: iload         6
      76: iconst_3
      77: iadd
      78: laload
      79: lstore        13
      81: iload         5
      83: ifne          136
      86: aload_0
      87: lload_2
      88: invokevirtual #16                 // Method validate:(J)Z
      91: ifne          136
      94: aload_0
      95: invokevirtual #20                 // Method readLock:()J
      98: lstore_2
      99: iconst_1
     100: istore        5
     102: aload         4
     104: iload         6
     106: laload
     107: lstore        7
     109: aload         4
     111: iload         6
     113: iconst_1
     114: iadd
     115: laload
     116: lstore        9
     118: aload         4
     120: iload         6
     122: iconst_2
     123: iadd
     124: laload
     125: lstore        11
     127: aload         4
     129: iload         6
     131: iconst_3
     132: iadd
     133: laload
     134: lstore        13
     136: lload         7
     138: ldc2_w        #24                 // long -2l
     141: lcmp
     142: ifeq          168
     145: lload         7
     147: ldc2_w        #11                 // long -1l
     150: lcmp
     151: ifeq          168
     154: aload_1
     155: lload         7
     157: lload         9
     159: lload         11
     161: lload         13
     163: invokeinterface #27,  9           // InterfaceMethod org/apache/bookkeeper/util/collections/ConcurrentLongLongPairHashMap$BiConsumerLongPair.accept:(JJJJ)V
     168: iinc          6, 4
     171: goto          39
     174: iload         5
     176: ifeq          202
     179: aload_0
     180: lload_2
     181: invokevirtual #19                 // Method unlockRead:(J)V
     184: goto          202
     187: astore        15
     189: iload         5
     191: ifeq          199
     194: aload_0
     195: lload_2
     196: invokevirtual #19                 // Method unlockRead:(J)V
     199: aload         15
     201: athrow
     202: return
    Exception table:
       from    to  target type
          14   174   187   any
         187   189   187   any

  private void rehash();
    Code:
       0: aload_0
       1: getfield      #4                  // Field capacity:I
       4: iconst_2
       5: imul
       6: istore_1
       7: iconst_4
       8: iload_1
       9: imul
      10: newarray       long
      12: astore_2
      13: aload_2
      14: ldc2_w        #11                 // long -1l
      17: invokestatic  #13                 // Method java/util/Arrays.fill:([JJ)V
      20: iconst_0
      21: istore_3
      22: iload_3
      23: aload_0
      24: getfield      #8                  // Field table:[J
      27: arraylength
      28: if_icmpge     106
      31: aload_0
      32: getfield      #8                  // Field table:[J
      35: iload_3
      36: laload
      37: lstore        4
      39: aload_0
      40: getfield      #8                  // Field table:[J
      43: iload_3
      44: iconst_1
      45: iadd
      46: laload
      47: lstore        6
      49: aload_0
      50: getfield      #8                  // Field table:[J
      53: iload_3
      54: iconst_2
      55: iadd
      56: laload
      57: lstore        8
      59: aload_0
      60: getfield      #8                  // Field table:[J
      63: iload_3
      64: iconst_3
      65: iadd
      66: laload
      67: lstore        10
      69: lload         4
      71: ldc2_w        #11                 // long -1l
      74: lcmp
      75: ifeq          100
      78: lload         4
      80: ldc2_w        #24                 // long -2l
      83: lcmp
      84: ifeq          100
      87: aload_2
      88: iload_1
      89: lload         4
      91: lload         6
      93: lload         8
      95: lload         10
      97: invokestatic  #28                 // Method insertKeyValueNoLock:([JIJJJJ)V
     100: iinc          3, 4
     103: goto          22
     106: aload_0
     107: aload_2
     108: putfield      #8                  // Field table:[J
     111: aload_0
     112: aload_0
     113: getfield      #5                  // Field size:I
     116: putfield      #3                  // Field usedBuckets:I
     119: aload_0
     120: iload_1
     121: putfield      #4                  // Field capacity:I
     124: aload_0
     125: aload_0
     126: getfield      #4                  // Field capacity:I
     129: i2f
     130: ldc           #9                  // float 0.66f
     132: fmul
     133: f2i
     134: putfield      #10                 // Field resizeThreshold:I
     137: return

  private static void insertKeyValueNoLock(long[], int, long, long, long, long);
    Code:
       0: lload_2
       1: lload         4
       3: invokestatic  #29                 // Method org/apache/bookkeeper/util/collections/ConcurrentLongLongPairHashMap.hash:(JJ)J
       6: iload_1
       7: invokestatic  #15                 // Method org/apache/bookkeeper/util/collections/ConcurrentLongLongPairHashMap.signSafeMod:(JI)I
      10: istore        10
      12: aload_0
      13: iload         10
      15: laload
      16: lstore        11
      18: lload         11
      20: ldc2_w        #11                 // long -1l
      23: lcmp
      24: ifne          57
      27: aload_0
      28: iload         10
      30: lload_2
      31: lastore
      32: aload_0
      33: iload         10
      35: iconst_1
      36: iadd
      37: lload         4
      39: lastore
      40: aload_0
      41: iload         10
      43: iconst_2
      44: iadd
      45: lload         6
      47: lastore
      48: aload_0
      49: iload         10
      51: iconst_3
      52: iadd
      53: lload         8
      55: lastore
      56: return
      57: iload         10
      59: iconst_4
      60: iadd
      61: aload_0
      62: arraylength
      63: iconst_1
      64: isub
      65: iand
      66: istore        10
      68: goto          12

  static int access$000(org.apache.bookkeeper.util.collections.ConcurrentLongLongPairHashMap$Section);
    Code:
       0: aload_0
       1: getfield      #5                  // Field size:I
       4: ireturn

  static int access$100(org.apache.bookkeeper.util.collections.ConcurrentLongLongPairHashMap$Section);
    Code:
       0: aload_0
       1: getfield      #4                  // Field capacity:I
       4: ireturn

  static int access$200(org.apache.bookkeeper.util.collections.ConcurrentLongLongPairHashMap$Section);
    Code:
       0: aload_0
       1: getfield      #3                  // Field usedBuckets:I
       4: ireturn

  static boolean access$300(org.apache.bookkeeper.util.collections.ConcurrentLongLongPairHashMap$Section, long, long, long, long, int);
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: lload         5
       5: lload         7
       7: iload         9
       9: invokespecial #2                  // Method remove:(JJJJI)Z
      12: ireturn
}
