Compiled from "TopologyAwareEnsemblePlacementPolicy.java"
public class org.apache.bookkeeper.client.TopologyAwareEnsemblePlacementPolicy$RRTopologyAwareCoverageEnsemble$RackOrRegionDurabilityCoverageSet implements org.apache.bookkeeper.client.TopologyAwareEnsemblePlacementPolicy$RRTopologyAwareCoverageEnsemble$CoverageSet {
  java.util.HashMap<java.lang.String, java.lang.Integer> allocationToRacksOrRegions;

  final org.apache.bookkeeper.client.TopologyAwareEnsemblePlacementPolicy$RRTopologyAwareCoverageEnsemble this$0;

  org.apache.bookkeeper.client.TopologyAwareEnsemblePlacementPolicy$RRTopologyAwareCoverageEnsemble$RackOrRegionDurabilityCoverageSet(org.apache.bookkeeper.client.TopologyAwareEnsemblePlacementPolicy$RRTopologyAwareCoverageEnsemble);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/bookkeeper/client/TopologyAwareEnsemblePlacementPolicy$RRTopologyAwareCoverageEnsemble;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #3                  // class java/util/HashMap
      13: dup
      14: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      17: putfield      #5                  // Field allocationToRacksOrRegions:Ljava/util/HashMap;
      20: aload_1
      21: getfield      #6                  // Field org/apache/bookkeeper/client/TopologyAwareEnsemblePlacementPolicy$RRTopologyAwareCoverageEnsemble.racksOrRegions:Ljava/util/Set;
      24: invokeinterface #7,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      29: astore_2
      30: aload_2
      31: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          65
      39: aload_2
      40: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #10                 // class java/lang/String
      48: astore_3
      49: aload_0
      50: getfield      #5                  // Field allocationToRacksOrRegions:Ljava/util/HashMap;
      53: aload_3
      54: iconst_0
      55: invokestatic  #11                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      58: invokevirtual #12                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      61: pop
      62: goto          30
      65: return

  public org.apache.bookkeeper.client.TopologyAwareEnsemblePlacementPolicy$RRTopologyAwareCoverageEnsemble$RackOrRegionDurabilityCoverageSet duplicate();
    Code:
       0: new           #13                 // class org/apache/bookkeeper/client/TopologyAwareEnsemblePlacementPolicy$RRTopologyAwareCoverageEnsemble$RackOrRegionDurabilityCoverageSet
       3: dup
       4: aload_0
       5: getfield      #1                  // Field this$0:Lorg/apache/bookkeeper/client/TopologyAwareEnsemblePlacementPolicy$RRTopologyAwareCoverageEnsemble;
       8: invokespecial #14                 // Method "<init>":(Lorg/apache/bookkeeper/client/TopologyAwareEnsemblePlacementPolicy$RRTopologyAwareCoverageEnsemble;)V
      11: astore_1
      12: aload_1
      13: aload_0
      14: getfield      #5                  // Field allocationToRacksOrRegions:Ljava/util/HashMap;
      17: invokestatic  #15                 // Method com/google/common/collect/Maps.newHashMap:(Ljava/util/Map;)Ljava/util/HashMap;
      20: putfield      #5                  // Field allocationToRacksOrRegions:Ljava/util/HashMap;
      23: aload_1
      24: areturn

  private boolean checkSumOfSubsetWithinLimit(java.util.Set<java.lang.String>, java.util.Set<java.lang.String>, int, int);
    Code:
       0: aload_2
       1: invokeinterface #16,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
       6: ifne          13
       9: iload_3
      10: ifgt          77
      13: iload         4
      15: ifge          66
      18: getstatic     #17                 // Field org/apache/bookkeeper/client/TopologyAwareEnsemblePlacementPolicy.LOG:Lorg/slf4j/Logger;
      21: invokeinterface #18,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
      26: ifeq          66
      29: getstatic     #17                 // Field org/apache/bookkeeper/client/TopologyAwareEnsemblePlacementPolicy.LOG:Lorg/slf4j/Logger;
      32: ldc           #19                 // String CHECK FAILED: RacksOrRegions Included {} Remaining {}, subsetSize {}, maxAllowedSum {}
      34: iconst_4
      35: anewarray     #20                 // class java/lang/Object
      38: dup
      39: iconst_0
      40: aload_1
      41: aastore
      42: dup
      43: iconst_1
      44: aload_2
      45: aastore
      46: dup
      47: iconst_2
      48: iload_3
      49: invokestatic  #11                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      52: aastore
      53: dup
      54: iconst_3
      55: iload         4
      57: invokestatic  #11                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      60: aastore
      61: invokeinterface #21,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;[Ljava/lang/Object;)V
      66: iload         4
      68: iflt          75
      71: iconst_1
      72: goto          76
      75: iconst_0
      76: ireturn
      77: aload_2
      78: invokeinterface #7,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      83: astore        5
      85: aload         5
      87: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      92: ifeq          274
      95: aload         5
      97: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     102: checkcast     #10                 // class java/lang/String
     105: astore        6
     107: aload_0
     108: getfield      #5                  // Field allocationToRacksOrRegions:Ljava/util/HashMap;
     111: aload         6
     113: invokevirtual #22                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     116: checkcast     #23                 // class java/lang/Integer
     119: astore        7
     121: aload         7
     123: ifnonnull     146
     126: aload_0
     127: getfield      #5                  // Field allocationToRacksOrRegions:Ljava/util/HashMap;
     130: aload         6
     132: iconst_0
     133: invokestatic  #11                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     136: invokevirtual #12                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     139: pop
     140: iconst_0
     141: invokestatic  #11                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     144: astore        7
     146: aload         7
     148: invokevirtual #24                 // Method java/lang/Integer.intValue:()I
     151: iload         4
     153: if_icmple     207
     156: getstatic     #17                 // Field org/apache/bookkeeper/client/TopologyAwareEnsemblePlacementPolicy.LOG:Lorg/slf4j/Logger;
     159: invokeinterface #18,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
     164: ifeq          205
     167: getstatic     #17                 // Field org/apache/bookkeeper/client/TopologyAwareEnsemblePlacementPolicy.LOG:Lorg/slf4j/Logger;
     170: ldc           #25                 // String CHECK FAILED: RacksOrRegions Included {} Candidate {}, subsetSize {}, maxAllowedSum {}
     172: iconst_4
     173: anewarray     #20                 // class java/lang/Object
     176: dup
     177: iconst_0
     178: aload_1
     179: aastore
     180: dup
     181: iconst_1
     182: aload         6
     184: aastore
     185: dup
     186: iconst_2
     187: iload_3
     188: invokestatic  #11                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     191: aastore
     192: dup
     193: iconst_3
     194: iload         4
     196: invokestatic  #11                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     199: aastore
     200: invokeinterface #21,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;[Ljava/lang/Object;)V
     205: iconst_0
     206: ireturn
     207: new           #26                 // class java/util/HashSet
     210: dup
     211: aload_2
     212: invokespecial #27                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
     215: astore        8
     217: new           #26                 // class java/util/HashSet
     220: dup
     221: aload_1
     222: invokespecial #27                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
     225: astore        9
     227: aload         9
     229: aload         6
     231: invokeinterface #28,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     236: pop
     237: aload         8
     239: aload         6
     241: invokeinterface #29,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     246: pop
     247: aload_0
     248: aload         9
     250: aload         8
     252: iload_3
     253: iconst_1
     254: isub
     255: iload         4
     257: aload         7
     259: invokevirtual #24                 // Method java/lang/Integer.intValue:()I
     262: isub
     263: invokespecial #30                 // Method checkSumOfSubsetWithinLimit:(Ljava/util/Set;Ljava/util/Set;II)Z
     266: ifne          271
     269: iconst_0
     270: ireturn
     271: goto          85
     274: iconst_1
     275: ireturn

  public boolean apply(org.apache.bookkeeper.net.BookieNode);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/bookkeeper/client/TopologyAwareEnsemblePlacementPolicy$RRTopologyAwareCoverageEnsemble;
       4: getfield      #31                 // Field org/apache/bookkeeper/client/TopologyAwareEnsemblePlacementPolicy$RRTopologyAwareCoverageEnsemble.minRacksOrRegionsForDurability:I
       7: iconst_1
       8: if_icmpgt     13
      11: iconst_1
      12: ireturn
      13: aload_1
      14: aload_0
      15: getfield      #1                  // Field this$0:Lorg/apache/bookkeeper/client/TopologyAwareEnsemblePlacementPolicy$RRTopologyAwareCoverageEnsemble;
      18: getfield      #32                 // Field org/apache/bookkeeper/client/TopologyAwareEnsemblePlacementPolicy$RRTopologyAwareCoverageEnsemble.distanceFromLeaves:I
      21: invokevirtual #33                 // Method org/apache/bookkeeper/net/BookieNode.getNetworkLocation:(I)Ljava/lang/String;
      24: astore_2
      25: aload_2
      26: ldc           #35                 // String /
      28: invokevirtual #36                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      31: ifeq          42
      34: aload_2
      35: iconst_1
      36: invokevirtual #37                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      39: goto          43
      42: aload_2
      43: astore_2
      44: new           #26                 // class java/util/HashSet
      47: dup
      48: aload_0
      49: getfield      #1                  // Field this$0:Lorg/apache/bookkeeper/client/TopologyAwareEnsemblePlacementPolicy$RRTopologyAwareCoverageEnsemble;
      52: getfield      #6                  // Field org/apache/bookkeeper/client/TopologyAwareEnsemblePlacementPolicy$RRTopologyAwareCoverageEnsemble.racksOrRegions:Ljava/util/Set;
      55: invokespecial #27                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      58: astore_3
      59: aload_3
      60: aload_2
      61: invokeinterface #29,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      66: pop
      67: new           #26                 // class java/util/HashSet
      70: dup
      71: invokespecial #38                 // Method java/util/HashSet."<init>":()V
      74: astore        4
      76: aload         4
      78: aload_2
      79: invokeinterface #28,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      84: pop
      85: aload_0
      86: getfield      #5                  // Field allocationToRacksOrRegions:Ljava/util/HashMap;
      89: aload_2
      90: invokevirtual #22                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      93: checkcast     #23                 // class java/lang/Integer
      96: astore        5
      98: aload         5
     100: ifnonnull     183
     103: getstatic     #17                 // Field org/apache/bookkeeper/client/TopologyAwareEnsemblePlacementPolicy.LOG:Lorg/slf4j/Logger;
     106: ldc           #39                 // String Detected a region that was not initialized {}
     108: aload_2
     109: invokeinterface #40,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
     114: aload_2
     115: ldc           #42                 // String /default-region
     117: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     120: ifeq          137
     123: getstatic     #17                 // Field org/apache/bookkeeper/client/TopologyAwareEnsemblePlacementPolicy.LOG:Lorg/slf4j/Logger;
     126: ldc           #44                 // String Failed to resolve network location {}
     128: aload_1
     129: invokeinterface #45,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
     134: goto          164
     137: aload_0
     138: getfield      #1                  // Field this$0:Lorg/apache/bookkeeper/client/TopologyAwareEnsemblePlacementPolicy$RRTopologyAwareCoverageEnsemble;
     141: getfield      #6                  // Field org/apache/bookkeeper/client/TopologyAwareEnsemblePlacementPolicy$RRTopologyAwareCoverageEnsemble.racksOrRegions:Ljava/util/Set;
     144: aload_2
     145: invokeinterface #46,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     150: ifne          164
     153: getstatic     #17                 // Field org/apache/bookkeeper/client/TopologyAwareEnsemblePlacementPolicy.LOG:Lorg/slf4j/Logger;
     156: ldc           #47                 // String Unknown region detected {}
     158: aload_2
     159: invokeinterface #45,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
     164: aload_0
     165: getfield      #5                  // Field allocationToRacksOrRegions:Ljava/util/HashMap;
     168: aload_2
     169: iconst_0
     170: invokestatic  #11                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     173: invokevirtual #12                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     176: pop
     177: iconst_0
     178: invokestatic  #11                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     181: astore        5
     183: aload_0
     184: getfield      #1                  // Field this$0:Lorg/apache/bookkeeper/client/TopologyAwareEnsemblePlacementPolicy$RRTopologyAwareCoverageEnsemble;
     187: getfield      #48                 // Field org/apache/bookkeeper/client/TopologyAwareEnsemblePlacementPolicy$RRTopologyAwareCoverageEnsemble.ackQuorumSize:I
     190: iconst_1
     191: isub
     192: aload         5
     194: invokevirtual #24                 // Method java/lang/Integer.intValue:()I
     197: iconst_1
     198: iadd
     199: isub
     200: istore        6
     202: aload_0
     203: aload         4
     205: aload_3
     206: aload_0
     207: getfield      #1                  // Field this$0:Lorg/apache/bookkeeper/client/TopologyAwareEnsemblePlacementPolicy$RRTopologyAwareCoverageEnsemble;
     210: getfield      #31                 // Field org/apache/bookkeeper/client/TopologyAwareEnsemblePlacementPolicy$RRTopologyAwareCoverageEnsemble.minRacksOrRegionsForDurability:I
     213: iconst_2
     214: isub
     215: iload         6
     217: invokespecial #30                 // Method checkSumOfSubsetWithinLimit:(Ljava/util/Set;Ljava/util/Set;II)Z
     220: ireturn

  public void addBookie(org.apache.bookkeeper.net.BookieNode);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #1                  // Field this$0:Lorg/apache/bookkeeper/client/TopologyAwareEnsemblePlacementPolicy$RRTopologyAwareCoverageEnsemble;
       5: getfield      #32                 // Field org/apache/bookkeeper/client/TopologyAwareEnsemblePlacementPolicy$RRTopologyAwareCoverageEnsemble.distanceFromLeaves:I
       8: invokevirtual #33                 // Method org/apache/bookkeeper/net/BookieNode.getNetworkLocation:(I)Ljava/lang/String;
      11: astore_2
      12: aload_2
      13: ldc           #35                 // String /
      15: invokevirtual #36                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      18: ifeq          29
      21: aload_2
      22: iconst_1
      23: invokevirtual #37                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      26: goto          30
      29: aload_2
      30: astore_2
      31: iconst_0
      32: istore_3
      33: aconst_null
      34: aload_0
      35: getfield      #5                  // Field allocationToRacksOrRegions:Ljava/util/HashMap;
      38: aload_2
      39: invokevirtual #22                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      42: if_acmpeq     60
      45: aload_0
      46: getfield      #5                  // Field allocationToRacksOrRegions:Ljava/util/HashMap;
      49: aload_2
      50: invokevirtual #22                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      53: checkcast     #23                 // class java/lang/Integer
      56: invokevirtual #24                 // Method java/lang/Integer.intValue:()I
      59: istore_3
      60: aload_0
      61: getfield      #5                  // Field allocationToRacksOrRegions:Ljava/util/HashMap;
      64: aload_2
      65: iload_3
      66: iconst_1
      67: iadd
      68: invokestatic  #11                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      71: invokevirtual #12                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      74: pop
      75: return

  public org.apache.bookkeeper.client.TopologyAwareEnsemblePlacementPolicy$RRTopologyAwareCoverageEnsemble$CoverageSet duplicate();
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method duplicate:()Lorg/apache/bookkeeper/client/TopologyAwareEnsemblePlacementPolicy$RRTopologyAwareCoverageEnsemble$RackOrRegionDurabilityCoverageSet;
       4: areturn
}
