Compiled from "ConcurrentLongHashSet.java"
final class org.apache.bookkeeper.util.collections.ConcurrentLongHashSet$Section extends java.util.concurrent.locks.StampedLock {
  private volatile long[] table;

  private volatile int capacity;

  private volatile int size;

  private int usedBuckets;

  private int resizeThreshold;

  org.apache.bookkeeper.util.collections.ConcurrentLongHashSet$Section(int);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/util/concurrent/locks/StampedLock."<init>":()V
       4: aload_0
       5: iload_1
       6: invokestatic  #7                  // Method org/apache/bookkeeper/util/collections/ConcurrentLongHashSet.access$400:(I)I
       9: putfield      #4                  // Field capacity:I
      12: aload_0
      13: aload_0
      14: getfield      #4                  // Field capacity:I
      17: newarray       long
      19: putfield      #8                  // Field table:[J
      22: aload_0
      23: iconst_0
      24: putfield      #5                  // Field size:I
      27: aload_0
      28: iconst_0
      29: putfield      #3                  // Field usedBuckets:I
      32: aload_0
      33: aload_0
      34: getfield      #4                  // Field capacity:I
      37: i2f
      38: ldc           #9                  // float 0.66f
      40: fmul
      41: f2i
      42: putfield      #10                 // Field resizeThreshold:I
      45: aload_0
      46: getfield      #8                  // Field table:[J
      49: ldc2_w        #11                 // long -1l
      52: invokestatic  #13                 // Method java/util/Arrays.fill:([JJ)V
      55: return

  boolean contains(long, int);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method tryOptimisticRead:()J
       4: lstore        4
       6: iconst_0
       7: istore        6
       9: iload_3
      10: i2l
      11: aload_0
      12: getfield      #4                  // Field capacity:I
      15: invokestatic  #15                 // Method org/apache/bookkeeper/util/collections/ConcurrentLongHashSet.signSafeMod:(JI)I
      18: istore        7
      20: aload_0
      21: getfield      #8                  // Field table:[J
      24: iload         7
      26: laload
      27: lstore        8
      29: iload         6
      31: ifne          93
      34: aload_0
      35: lload         4
      37: invokevirtual #16                 // Method validate:(J)Z
      40: ifeq          93
      43: lload_1
      44: lload         8
      46: lcmp
      47: ifne          67
      50: iconst_1
      51: istore        10
      53: iload         6
      55: ifeq          64
      58: aload_0
      59: lload         4
      61: invokevirtual #17                 // Method unlockRead:(J)V
      64: iload         10
      66: ireturn
      67: lload         8
      69: ldc2_w        #11                 // long -1l
      72: lcmp
      73: ifne          177
      76: iconst_0
      77: istore        10
      79: iload         6
      81: ifeq          90
      84: aload_0
      85: lload         4
      87: invokevirtual #17                 // Method unlockRead:(J)V
      90: iload         10
      92: ireturn
      93: iload         6
      95: ifne          127
      98: aload_0
      99: invokevirtual #18                 // Method readLock:()J
     102: lstore        4
     104: iconst_1
     105: istore        6
     107: iload_3
     108: i2l
     109: aload_0
     110: getfield      #4                  // Field capacity:I
     113: invokestatic  #15                 // Method org/apache/bookkeeper/util/collections/ConcurrentLongHashSet.signSafeMod:(JI)I
     116: istore        7
     118: aload_0
     119: getfield      #8                  // Field table:[J
     122: iload         7
     124: laload
     125: lstore        8
     127: lload_1
     128: lload         8
     130: lcmp
     131: ifne          151
     134: iconst_1
     135: istore        10
     137: iload         6
     139: ifeq          148
     142: aload_0
     143: lload         4
     145: invokevirtual #17                 // Method unlockRead:(J)V
     148: iload         10
     150: ireturn
     151: lload         8
     153: ldc2_w        #11                 // long -1l
     156: lcmp
     157: ifne          177
     160: iconst_0
     161: istore        10
     163: iload         6
     165: ifeq          174
     168: aload_0
     169: lload         4
     171: invokevirtual #17                 // Method unlockRead:(J)V
     174: iload         10
     176: ireturn
     177: iload         7
     179: iconst_1
     180: iadd
     181: aload_0
     182: getfield      #8                  // Field table:[J
     185: arraylength
     186: iconst_1
     187: isub
     188: iand
     189: istore        7
     191: goto          20
     194: astore        11
     196: iload         6
     198: ifeq          207
     201: aload_0
     202: lload         4
     204: invokevirtual #17                 // Method unlockRead:(J)V
     207: aload         11
     209: athrow
    Exception table:
       from    to  target type
          20    53   194   any
          67    79   194   any
          93   137   194   any
         151   163   194   any
         177   196   194   any

  boolean add(long, long);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method writeLock:()J
       4: lstore        5
       6: lload_3
       7: aload_0
       8: getfield      #4                  // Field capacity:I
      11: invokestatic  #15                 // Method org/apache/bookkeeper/util/collections/ConcurrentLongHashSet.signSafeMod:(JI)I
      14: istore        7
      16: iconst_m1
      17: istore        8
      19: aload_0
      20: getfield      #8                  // Field table:[J
      23: iload         7
      25: laload
      26: lstore        9
      28: lload_1
      29: lload         9
      31: lcmp
      32: ifne          85
      35: iconst_0
      36: istore        11
      38: aload_0
      39: getfield      #3                  // Field usedBuckets:I
      42: aload_0
      43: getfield      #10                 // Field resizeThreshold:I
      46: if_icmple     76
      49: aload_0
      50: invokespecial #20                 // Method rehash:()V
      53: aload_0
      54: lload         5
      56: invokevirtual #21                 // Method unlockWrite:(J)V
      59: goto          73
      62: astore        12
      64: aload_0
      65: lload         5
      67: invokevirtual #21                 // Method unlockWrite:(J)V
      70: aload         12
      72: athrow
      73: goto          82
      76: aload_0
      77: lload         5
      79: invokevirtual #21                 // Method unlockWrite:(J)V
      82: iload         11
      84: ireturn
      85: lload         9
      87: ldc2_w        #11                 // long -1l
      90: lcmp
      91: ifne          185
      94: iload         8
      96: iconst_m1
      97: if_icmpeq     107
     100: iload         8
     102: istore        7
     104: goto          117
     107: aload_0
     108: dup
     109: getfield      #3                  // Field usedBuckets:I
     112: iconst_1
     113: iadd
     114: putfield      #3                  // Field usedBuckets:I
     117: aload_0
     118: getfield      #8                  // Field table:[J
     121: iload         7
     123: lload_1
     124: lastore
     125: aload_0
     126: dup
     127: getfield      #5                  // Field size:I
     130: iconst_1
     131: iadd
     132: putfield      #5                  // Field size:I
     135: iconst_1
     136: istore        11
     138: aload_0
     139: getfield      #3                  // Field usedBuckets:I
     142: aload_0
     143: getfield      #10                 // Field resizeThreshold:I
     146: if_icmple     176
     149: aload_0
     150: invokespecial #20                 // Method rehash:()V
     153: aload_0
     154: lload         5
     156: invokevirtual #21                 // Method unlockWrite:(J)V
     159: goto          173
     162: astore        13
     164: aload_0
     165: lload         5
     167: invokevirtual #21                 // Method unlockWrite:(J)V
     170: aload         13
     172: athrow
     173: goto          182
     176: aload_0
     177: lload         5
     179: invokevirtual #21                 // Method unlockWrite:(J)V
     182: iload         11
     184: ireturn
     185: lload         9
     187: ldc2_w        #22                 // long -2l
     190: lcmp
     191: ifne          204
     194: iload         8
     196: iconst_m1
     197: if_icmpne     204
     200: iload         7
     202: istore        8
     204: iload         7
     206: iconst_1
     207: iadd
     208: aload_0
     209: getfield      #8                  // Field table:[J
     212: arraylength
     213: iconst_1
     214: isub
     215: iand
     216: istore        7
     218: goto          19
     221: astore        14
     223: aload_0
     224: getfield      #3                  // Field usedBuckets:I
     227: aload_0
     228: getfield      #10                 // Field resizeThreshold:I
     231: if_icmple     261
     234: aload_0
     235: invokespecial #20                 // Method rehash:()V
     238: aload_0
     239: lload         5
     241: invokevirtual #21                 // Method unlockWrite:(J)V
     244: goto          258
     247: astore        15
     249: aload_0
     250: lload         5
     252: invokevirtual #21                 // Method unlockWrite:(J)V
     255: aload         15
     257: athrow
     258: goto          267
     261: aload_0
     262: lload         5
     264: invokevirtual #21                 // Method unlockWrite:(J)V
     267: aload         14
     269: athrow
    Exception table:
       from    to  target type
          49    53    62   any
          62    64    62   any
         149   153   162   any
         162   164   162   any
          19    38   221   any
          85   138   221   any
         234   238   247   any
         247   249   247   any
         185   223   221   any

  private boolean remove(long, int);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method writeLock:()J
       4: lstore        4
       6: iload_3
       7: i2l
       8: aload_0
       9: getfield      #4                  // Field capacity:I
      12: invokestatic  #15                 // Method org/apache/bookkeeper/util/collections/ConcurrentLongHashSet.signSafeMod:(JI)I
      15: istore        6
      17: aload_0
      18: getfield      #8                  // Field table:[J
      21: iload         6
      23: laload
      24: lstore        7
      26: lload_1
      27: lload         7
      29: lcmp
      30: ifne          61
      33: aload_0
      34: dup
      35: getfield      #5                  // Field size:I
      38: iconst_1
      39: isub
      40: putfield      #5                  // Field size:I
      43: aload_0
      44: iload         6
      46: invokespecial #24                 // Method cleanBucket:(I)V
      49: iconst_1
      50: istore        9
      52: aload_0
      53: lload         4
      55: invokevirtual #21                 // Method unlockWrite:(J)V
      58: iload         9
      60: ireturn
      61: lload         7
      63: ldc2_w        #11                 // long -1l
      66: lcmp
      67: ifne          82
      70: iconst_0
      71: istore        9
      73: aload_0
      74: lload         4
      76: invokevirtual #21                 // Method unlockWrite:(J)V
      79: iload         9
      81: ireturn
      82: iload         6
      84: iconst_1
      85: iadd
      86: aload_0
      87: getfield      #8                  // Field table:[J
      90: arraylength
      91: iconst_1
      92: isub
      93: iand
      94: istore        6
      96: goto          17
      99: astore        10
     101: aload_0
     102: lload         4
     104: invokevirtual #21                 // Method unlockWrite:(J)V
     107: aload         10
     109: athrow
    Exception table:
       from    to  target type
          17    52    99   any
          61    73    99   any
          82   101    99   any

  private void cleanBucket(int);
    Code:
       0: iload_1
       1: iconst_1
       2: iadd
       3: aload_0
       4: getfield      #8                  // Field table:[J
       7: arraylength
       8: iconst_1
       9: isub
      10: iand
      11: istore_2
      12: aload_0
      13: getfield      #8                  // Field table:[J
      16: iload_2
      17: laload
      18: ldc2_w        #11                 // long -1l
      21: lcmp
      22: ifne          47
      25: aload_0
      26: getfield      #8                  // Field table:[J
      29: iload_1
      30: ldc2_w        #11                 // long -1l
      33: lastore
      34: aload_0
      35: dup
      36: getfield      #3                  // Field usedBuckets:I
      39: iconst_1
      40: isub
      41: putfield      #3                  // Field usedBuckets:I
      44: goto          56
      47: aload_0
      48: getfield      #8                  // Field table:[J
      51: iload_1
      52: ldc2_w        #22                 // long -2l
      55: lastore
      56: return

  void clear();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method writeLock:()J
       4: lstore_1
       5: aload_0
       6: getfield      #8                  // Field table:[J
       9: ldc2_w        #11                 // long -1l
      12: invokestatic  #13                 // Method java/util/Arrays.fill:([JJ)V
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field size:I
      20: aload_0
      21: iconst_0
      22: putfield      #3                  // Field usedBuckets:I
      25: aload_0
      26: lload_1
      27: invokevirtual #21                 // Method unlockWrite:(J)V
      30: goto          41
      33: astore_3
      34: aload_0
      35: lload_1
      36: invokevirtual #21                 // Method unlockWrite:(J)V
      39: aload_3
      40: athrow
      41: return
    Exception table:
       from    to  target type
           5    25    33   any

  public void forEach(org.apache.bookkeeper.util.collections.ConcurrentLongHashSet$ConsumerLong);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method tryOptimisticRead:()J
       4: lstore_2
       5: aload_0
       6: getfield      #8                  // Field table:[J
       9: astore        4
      11: iconst_0
      12: istore        5
      14: aload_0
      15: lload_2
      16: invokevirtual #16                 // Method validate:(J)Z
      19: ifne          36
      22: aload_0
      23: invokevirtual #18                 // Method readLock:()J
      26: lstore_2
      27: iconst_1
      28: istore        5
      30: aload_0
      31: getfield      #8                  // Field table:[J
      34: astore        4
      36: iconst_0
      37: istore        6
      39: iload         6
      41: aload         4
      43: arraylength
      44: if_icmpge     114
      47: aload         4
      49: iload         6
      51: laload
      52: lstore        7
      54: iload         5
      56: ifne          82
      59: aload_0
      60: lload_2
      61: invokevirtual #16                 // Method validate:(J)Z
      64: ifne          82
      67: aload_0
      68: invokevirtual #18                 // Method readLock:()J
      71: lstore_2
      72: iconst_1
      73: istore        5
      75: aload         4
      77: iload         6
      79: laload
      80: lstore        7
      82: lload         7
      84: ldc2_w        #22                 // long -2l
      87: lcmp
      88: ifeq          108
      91: lload         7
      93: ldc2_w        #11                 // long -1l
      96: lcmp
      97: ifeq          108
     100: aload_1
     101: lload         7
     103: invokeinterface #25,  3           // InterfaceMethod org/apache/bookkeeper/util/collections/ConcurrentLongHashSet$ConsumerLong.accept:(J)V
     108: iinc          6, 1
     111: goto          39
     114: iload         5
     116: ifeq          142
     119: aload_0
     120: lload_2
     121: invokevirtual #17                 // Method unlockRead:(J)V
     124: goto          142
     127: astore        9
     129: iload         5
     131: ifeq          139
     134: aload_0
     135: lload_2
     136: invokevirtual #17                 // Method unlockRead:(J)V
     139: aload         9
     141: athrow
     142: return
    Exception table:
       from    to  target type
          14   114   127   any
         127   129   127   any

  private void rehash();
    Code:
       0: aload_0
       1: getfield      #4                  // Field capacity:I
       4: iconst_2
       5: imul
       6: istore_1
       7: iload_1
       8: newarray       long
      10: astore_2
      11: aload_2
      12: ldc2_w        #11                 // long -1l
      15: invokestatic  #13                 // Method java/util/Arrays.fill:([JJ)V
      18: iconst_0
      19: istore_3
      20: iload_3
      21: aload_0
      22: getfield      #8                  // Field table:[J
      25: arraylength
      26: if_icmpge     68
      29: aload_0
      30: getfield      #8                  // Field table:[J
      33: iload_3
      34: laload
      35: lstore        4
      37: lload         4
      39: ldc2_w        #11                 // long -1l
      42: lcmp
      43: ifeq          62
      46: lload         4
      48: ldc2_w        #22                 // long -2l
      51: lcmp
      52: ifeq          62
      55: aload_2
      56: iload_1
      57: lload         4
      59: invokestatic  #26                 // Method insertKeyValueNoLock:([JIJ)V
      62: iinc          3, 1
      65: goto          20
      68: aload_0
      69: aload_2
      70: putfield      #8                  // Field table:[J
      73: aload_0
      74: aload_0
      75: getfield      #5                  // Field size:I
      78: putfield      #3                  // Field usedBuckets:I
      81: aload_0
      82: iload_1
      83: putfield      #4                  // Field capacity:I
      86: aload_0
      87: aload_0
      88: getfield      #4                  // Field capacity:I
      91: i2f
      92: ldc           #9                  // float 0.66f
      94: fmul
      95: f2i
      96: putfield      #10                 // Field resizeThreshold:I
      99: return

  private static void insertKeyValueNoLock(long[], int, long);
    Code:
       0: lload_2
       1: invokestatic  #27                 // Method org/apache/bookkeeper/util/collections/ConcurrentLongHashSet.hash:(J)J
       4: iload_1
       5: invokestatic  #15                 // Method org/apache/bookkeeper/util/collections/ConcurrentLongHashSet.signSafeMod:(JI)I
       8: istore        4
      10: aload_0
      11: iload         4
      13: laload
      14: lstore        5
      16: lload         5
      18: ldc2_w        #11                 // long -1l
      21: lcmp
      22: ifne          31
      25: aload_0
      26: iload         4
      28: lload_2
      29: lastore
      30: return
      31: iload         4
      33: iconst_1
      34: iadd
      35: aload_0
      36: arraylength
      37: iconst_1
      38: isub
      39: iand
      40: istore        4
      42: goto          10

  static int access$000(org.apache.bookkeeper.util.collections.ConcurrentLongHashSet$Section);
    Code:
       0: aload_0
       1: getfield      #5                  // Field size:I
       4: ireturn

  static int access$100(org.apache.bookkeeper.util.collections.ConcurrentLongHashSet$Section);
    Code:
       0: aload_0
       1: getfield      #4                  // Field capacity:I
       4: ireturn

  static int access$200(org.apache.bookkeeper.util.collections.ConcurrentLongHashSet$Section);
    Code:
       0: aload_0
       1: getfield      #3                  // Field usedBuckets:I
       4: ireturn

  static boolean access$300(org.apache.bookkeeper.util.collections.ConcurrentLongHashSet$Section, long, int);
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokespecial #2                  // Method remove:(JI)Z
       6: ireturn
}
