Compiled from "AbstractDNSToSwitchMapping.java"
public abstract class org.apache.bookkeeper.net.AbstractDNSToSwitchMapping implements org.apache.bookkeeper.net.DNSToSwitchMapping,org.apache.bookkeeper.conf.Configurable {
  private org.apache.commons.configuration.Configuration conf;

  private org.apache.bookkeeper.proto.BookieAddressResolver bookieAddressResolver;

  protected org.apache.bookkeeper.net.AbstractDNSToSwitchMapping();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  protected org.apache.bookkeeper.net.AbstractDNSToSwitchMapping(org.apache.commons.configuration.Configuration);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field conf:Lorg/apache/commons/configuration/Configuration;
       9: return

  public org.apache.bookkeeper.proto.BookieAddressResolver getBookieAddressResolver();
    Code:
       0: aload_0
       1: getfield      #3                  // Field bookieAddressResolver:Lorg/apache/bookkeeper/proto/BookieAddressResolver;
       4: areturn

  public void setBookieAddressResolver(org.apache.bookkeeper.proto.BookieAddressResolver);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field bookieAddressResolver:Lorg/apache/bookkeeper/proto/BookieAddressResolver;
       5: return

  public org.apache.commons.configuration.Configuration getConf();
    Code:
       0: aload_0
       1: getfield      #2                  // Field conf:Lorg/apache/commons/configuration/Configuration;
       4: areturn

  public void setConf(org.apache.commons.configuration.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field conf:Lorg/apache/commons/configuration/Configuration;
       5: aload_0
       6: invokevirtual #4                  // Method validateConf:()V
       9: return

  public boolean isSingleSwitch();
    Code:
       0: iconst_0
       1: ireturn

  public java.util.Map<java.lang.String, java.lang.String> getSwitchMap();
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String dumpTopology();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getSwitchMap:()Ljava/util/Map;
       4: astore_1
       5: new           #6                  // class java/lang/StringBuilder
       8: dup
       9: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      12: astore_2
      13: aload_2
      14: ldc           #8                  // String Mapping:
      16: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: invokevirtual #10                 // Method java/lang/Object.toString:()Ljava/lang/String;
      23: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #11                 // String \n
      28: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: pop
      32: aload_1
      33: ifnull        191
      36: aload_2
      37: ldc           #12                 // String Map:\n
      39: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: pop
      43: new           #13                 // class java/util/HashSet
      46: dup
      47: invokespecial #14                 // Method java/util/HashSet."<init>":()V
      50: astore_3
      51: aload_1
      52: invokeinterface #15,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      57: invokeinterface #16,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      62: astore        4
      64: aload         4
      66: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      71: ifeq          146
      74: aload         4
      76: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      81: checkcast     #19                 // class java/util/Map$Entry
      84: astore        5
      86: aload_2
      87: ldc           #20                 // String
      89: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: aload         5
      94: invokeinterface #21,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      99: checkcast     #22                 // class java/lang/String
     102: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: ldc           #23                 // String  ->
     107: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: aload         5
     112: invokeinterface #24,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     117: checkcast     #22                 // class java/lang/String
     120: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: ldc           #11                 // String \n
     125: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: pop
     129: aload_3
     130: aload         5
     132: invokeinterface #24,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     137: invokeinterface #25,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     142: pop
     143: goto          64
     146: aload_2
     147: ldc           #26                 // String Nodes:
     149: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: aload_1
     153: invokeinterface #27,  1           // InterfaceMethod java/util/Map.size:()I
     158: invokevirtual #28                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     161: ldc           #11                 // String \n
     163: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     166: pop
     167: aload_2
     168: ldc           #29                 // String Switches:
     170: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     173: aload_3
     174: invokeinterface #30,  1           // InterfaceMethod java/util/Set.size:()I
     179: invokevirtual #28                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     182: ldc           #11                 // String \n
     184: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     187: pop
     188: goto          198
     191: aload_2
     192: ldc           #31                 // String No topology information
     194: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     197: pop
     198: aload_2
     199: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     202: areturn

  protected boolean isSingleSwitchByScriptPolicy();
    Code:
       0: aload_0
       1: getfield      #2                  // Field conf:Lorg/apache/commons/configuration/Configuration;
       4: ifnull        28
       7: aload_0
       8: getfield      #2                  // Field conf:Lorg/apache/commons/configuration/Configuration;
      11: ldc           #34                 // String networkTopologyScriptFileName
      13: invokeinterface #35,  2           // InterfaceMethod org/apache/commons/configuration/Configuration.getString:(Ljava/lang/String;)Ljava/lang/String;
      18: invokestatic  #36                 // Method org/apache/commons/lang/StringUtils.isNotBlank:(Ljava/lang/String;)Z
      21: ifne          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public static boolean isMappingSingleSwitch(org.apache.bookkeeper.net.DNSToSwitchMapping);
    Code:
       0: aload_0
       1: ifnull        25
       4: aload_0
       5: instanceof    #37                 // class org/apache/bookkeeper/net/AbstractDNSToSwitchMapping
       8: ifeq          25
      11: aload_0
      12: checkcast     #37                 // class org/apache/bookkeeper/net/AbstractDNSToSwitchMapping
      15: invokevirtual #38                 // Method isSingleSwitch:()Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  protected void validateConf();
    Code:
       0: return
}
