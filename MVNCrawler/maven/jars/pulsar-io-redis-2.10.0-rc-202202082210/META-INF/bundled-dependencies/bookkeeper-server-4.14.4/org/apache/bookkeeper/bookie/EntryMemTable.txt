Compiled from "EntryMemTable.java"
public class org.apache.bookkeeper.bookie.EntryMemTable implements java.lang.AutoCloseable {
  private static org.slf4j.Logger logger;

  volatile org.apache.bookkeeper.bookie.EntryMemTable$EntrySkipList kvmap;

  volatile org.apache.bookkeeper.bookie.EntryMemTable$EntrySkipList snapshot;

  final org.apache.bookkeeper.conf.ServerConfiguration conf;

  final org.apache.bookkeeper.bookie.CheckpointSource checkpointSource;

  final java.util.concurrent.locks.ReentrantReadWriteLock lock;

  final java.util.concurrent.atomic.AtomicLong size;

  final long skipListSizeLimit;

  final java.util.concurrent.Semaphore skipListSemaphore;

  org.apache.bookkeeper.bookie.SkipListArena allocator;

  private final java.util.concurrent.atomic.AtomicBoolean previousFlushSucceeded;

  protected final org.apache.bookkeeper.bookie.stats.EntryMemTableStats memTableStats;

  static final boolean $assertionsDisabled;

  private org.apache.bookkeeper.bookie.EntryMemTable$EntrySkipList newSkipList();
    Code:
       0: new           #1                  // class org/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList
       3: dup
       4: aload_0
       5: getfield      #2                  // Field checkpointSource:Lorg/apache/bookkeeper/bookie/CheckpointSource;
       8: invokeinterface #3,  1            // InterfaceMethod org/apache/bookkeeper/bookie/CheckpointSource.newCheckpoint:()Lorg/apache/bookkeeper/bookie/CheckpointSource$Checkpoint;
      13: invokespecial #4                  // Method org/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList."<init>":(Lorg/apache/bookkeeper/bookie/CheckpointSource$Checkpoint;)V
      16: areturn

  public org.apache.bookkeeper.bookie.EntryMemTable(org.apache.bookkeeper.conf.ServerConfiguration, org.apache.bookkeeper.bookie.CheckpointSource, org.apache.bookkeeper.stats.StatsLogger);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class java/util/concurrent/locks/ReentrantReadWriteLock
       8: dup
       9: invokespecial #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
      12: putfield      #8                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      15: aload_0
      16: aload_2
      17: putfield      #2                  // Field checkpointSource:Lorg/apache/bookkeeper/bookie/CheckpointSource;
      20: aload_0
      21: aload_0
      22: invokespecial #9                  // Method newSkipList:()Lorg/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList;
      25: putfield      #10                 // Field kvmap:Lorg/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList;
      28: aload_0
      29: getstatic     #11                 // Field org/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList.EMPTY_VALUE:Lorg/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList;
      32: putfield      #12                 // Field snapshot:Lorg/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList;
      35: aload_0
      36: aload_1
      37: putfield      #13                 // Field conf:Lorg/apache/bookkeeper/conf/ServerConfiguration;
      40: aload_0
      41: new           #14                 // class java/util/concurrent/atomic/AtomicLong
      44: dup
      45: lconst_0
      46: invokespecial #15                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      49: putfield      #16                 // Field size:Ljava/util/concurrent/atomic/AtomicLong;
      52: aload_0
      53: new           #17                 // class org/apache/bookkeeper/bookie/SkipListArena
      56: dup
      57: aload_1
      58: invokespecial #18                 // Method org/apache/bookkeeper/bookie/SkipListArena."<init>":(Lorg/apache/bookkeeper/conf/ServerConfiguration;)V
      61: putfield      #19                 // Field allocator:Lorg/apache/bookkeeper/bookie/SkipListArena;
      64: aload_0
      65: new           #20                 // class java/util/concurrent/atomic/AtomicBoolean
      68: dup
      69: iconst_1
      70: invokespecial #21                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      73: putfield      #22                 // Field previousFlushSucceeded:Ljava/util/concurrent/atomic/AtomicBoolean;
      76: aload_0
      77: aload_1
      78: invokevirtual #23                 // Method org/apache/bookkeeper/conf/ServerConfiguration.getSkipListSizeLimit:()J
      81: putfield      #24                 // Field skipListSizeLimit:J
      84: aload_0
      85: getfield      #24                 // Field skipListSizeLimit:J
      88: ldc2_w        #26                 // long 1073741823l
      91: lcmp
      92: ifle          105
      95: new           #28                 // class java/lang/IllegalArgumentException
      98: dup
      99: ldc           #29                 // String skiplist size over 1073741823
     101: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     104: athrow
     105: aload_0
     106: new           #31                 // class java/util/concurrent/Semaphore
     109: dup
     110: aload_0
     111: getfield      #24                 // Field skipListSizeLimit:J
     114: l2i
     115: iconst_2
     116: imul
     117: invokespecial #32                 // Method java/util/concurrent/Semaphore."<init>":(I)V
     120: putfield      #33                 // Field skipListSemaphore:Ljava/util/concurrent/Semaphore;
     123: aload_0
     124: new           #34                 // class org/apache/bookkeeper/bookie/stats/EntryMemTableStats
     127: dup
     128: aload_3
     129: invokespecial #35                 // Method org/apache/bookkeeper/bookie/stats/EntryMemTableStats."<init>":(Lorg/apache/bookkeeper/stats/StatsLogger;)V
     132: putfield      #36                 // Field memTableStats:Lorg/apache/bookkeeper/bookie/stats/EntryMemTableStats;
     135: return

  void dump();
    Code:
       0: aload_0
       1: getfield      #10                 // Field kvmap:Lorg/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList;
       4: invokevirtual #37                 // Method org/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList.keySet:()Ljava/util/NavigableSet;
       7: invokeinterface #38,  1           // InterfaceMethod java/util/NavigableSet.iterator:()Ljava/util/Iterator;
      12: astore_1
      13: aload_1
      14: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          47
      22: aload_1
      23: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #41                 // class org/apache/bookkeeper/bookie/EntryKey
      31: astore_2
      32: getstatic     #42                 // Field logger:Lorg/slf4j/Logger;
      35: aload_2
      36: invokevirtual #43                 // Method java/lang/Object.toString:()Ljava/lang/String;
      39: invokeinterface #44,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      44: goto          13
      47: aload_0
      48: getfield      #12                 // Field snapshot:Lorg/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList;
      51: invokevirtual #37                 // Method org/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList.keySet:()Ljava/util/NavigableSet;
      54: invokeinterface #38,  1           // InterfaceMethod java/util/NavigableSet.iterator:()Ljava/util/Iterator;
      59: astore_1
      60: aload_1
      61: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      66: ifeq          94
      69: aload_1
      70: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      75: checkcast     #41                 // class org/apache/bookkeeper/bookie/EntryKey
      78: astore_2
      79: getstatic     #42                 // Field logger:Lorg/slf4j/Logger;
      82: aload_2
      83: invokevirtual #43                 // Method java/lang/Object.toString:()Ljava/lang/String;
      86: invokeinterface #44,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      91: goto          60
      94: return

  org.apache.bookkeeper.bookie.CheckpointSource$Checkpoint snapshot() throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #45                 // Field org/apache/bookkeeper/bookie/CheckpointSource$Checkpoint.MAX:Lorg/apache/bookkeeper/bookie/CheckpointSource$Checkpoint;
       4: invokevirtual #46                 // Method snapshot:(Lorg/apache/bookkeeper/bookie/CheckpointSource$Checkpoint;)Lorg/apache/bookkeeper/bookie/CheckpointSource$Checkpoint;
       7: areturn

  org.apache.bookkeeper.bookie.CheckpointSource$Checkpoint snapshot(org.apache.bookkeeper.bookie.CheckpointSource$Checkpoint) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #12                 // Field snapshot:Lorg/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList;
       6: invokevirtual #47                 // Method org/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList.isEmpty:()Z
       9: ifeq          189
      12: aload_0
      13: getfield      #10                 // Field kvmap:Lorg/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList;
      16: aload_1
      17: invokevirtual #48                 // Method org/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList.compareTo:(Lorg/apache/bookkeeper/bookie/CheckpointSource$Checkpoint;)I
      20: ifge          189
      23: invokestatic  #49                 // Method org/apache/bookkeeper/util/MathUtils.nowInNano:()J
      26: lstore_3
      27: aload_0
      28: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      31: invokevirtual #50                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      34: invokevirtual #51                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
      37: aload_0
      38: getfield      #12                 // Field snapshot:Lorg/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList;
      41: invokevirtual #47                 // Method org/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList.isEmpty:()Z
      44: ifeq          115
      47: aload_0
      48: getfield      #10                 // Field kvmap:Lorg/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList;
      51: invokevirtual #47                 // Method org/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList.isEmpty:()Z
      54: ifne          115
      57: aload_0
      58: getfield      #10                 // Field kvmap:Lorg/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList;
      61: aload_1
      62: invokevirtual #48                 // Method org/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList.compareTo:(Lorg/apache/bookkeeper/bookie/CheckpointSource$Checkpoint;)I
      65: ifge          115
      68: aload_0
      69: aload_0
      70: getfield      #10                 // Field kvmap:Lorg/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList;
      73: putfield      #12                 // Field snapshot:Lorg/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList;
      76: aload_0
      77: aload_0
      78: invokespecial #9                  // Method newSkipList:()Lorg/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList;
      81: putfield      #10                 // Field kvmap:Lorg/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList;
      84: aload_0
      85: getfield      #10                 // Field kvmap:Lorg/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList;
      88: getfield      #52                 // Field org/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList.cp:Lorg/apache/bookkeeper/bookie/CheckpointSource$Checkpoint;
      91: astore_2
      92: aload_0
      93: getfield      #16                 // Field size:Ljava/util/concurrent/atomic/AtomicLong;
      96: lconst_0
      97: invokevirtual #53                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
     100: aload_0
     101: new           #17                 // class org/apache/bookkeeper/bookie/SkipListArena
     104: dup
     105: aload_0
     106: getfield      #13                 // Field conf:Lorg/apache/bookkeeper/conf/ServerConfiguration;
     109: invokespecial #18                 // Method org/apache/bookkeeper/bookie/SkipListArena."<init>":(Lorg/apache/bookkeeper/conf/ServerConfiguration;)V
     112: putfield      #19                 // Field allocator:Lorg/apache/bookkeeper/bookie/SkipListArena;
     115: aload_0
     116: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     119: invokevirtual #50                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
     122: invokevirtual #54                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
     125: goto          143
     128: astore        5
     130: aload_0
     131: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     134: invokevirtual #50                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
     137: invokevirtual #54                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
     140: aload         5
     142: athrow
     143: aconst_null
     144: aload_2
     145: if_acmpeq     170
     148: aload_0
     149: getfield      #36                 // Field memTableStats:Lorg/apache/bookkeeper/bookie/stats/EntryMemTableStats;
     152: invokevirtual #55                 // Method org/apache/bookkeeper/bookie/stats/EntryMemTableStats.getSnapshotStats:()Lorg/apache/bookkeeper/stats/OpStatsLogger;
     155: lload_3
     156: invokestatic  #56                 // Method org/apache/bookkeeper/util/MathUtils.elapsedNanos:(J)J
     159: getstatic     #57                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     162: invokeinterface #58,  4           // InterfaceMethod org/apache/bookkeeper/stats/OpStatsLogger.registerSuccessfulEvent:(JLjava/util/concurrent/TimeUnit;)V
     167: goto          189
     170: aload_0
     171: getfield      #36                 // Field memTableStats:Lorg/apache/bookkeeper/bookie/stats/EntryMemTableStats;
     174: invokevirtual #55                 // Method org/apache/bookkeeper/bookie/stats/EntryMemTableStats.getSnapshotStats:()Lorg/apache/bookkeeper/stats/OpStatsLogger;
     177: lload_3
     178: invokestatic  #56                 // Method org/apache/bookkeeper/util/MathUtils.elapsedNanos:(J)J
     181: getstatic     #57                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     184: invokeinterface #59,  4           // InterfaceMethod org/apache/bookkeeper/stats/OpStatsLogger.registerFailedEvent:(JLjava/util/concurrent/TimeUnit;)V
     189: aload_2
     190: areturn
    Exception table:
       from    to  target type
          37   115   128   any
         128   130   128   any

  long flush(org.apache.bookkeeper.bookie.SkipListFlusher) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #45                 // Field org/apache/bookkeeper/bookie/CheckpointSource$Checkpoint.MAX:Lorg/apache/bookkeeper/bookie/CheckpointSource$Checkpoint;
       5: invokevirtual #60                 // Method flushSnapshot:(Lorg/apache/bookkeeper/bookie/SkipListFlusher;Lorg/apache/bookkeeper/bookie/CheckpointSource$Checkpoint;)J
       8: lstore_2
       9: aload_0
      10: getfield      #22                 // Field previousFlushSucceeded:Ljava/util/concurrent/atomic/AtomicBoolean;
      13: iconst_1
      14: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      17: lload_2
      18: lreturn
      19: astore_2
      20: aload_0
      21: getfield      #22                 // Field previousFlushSucceeded:Ljava/util/concurrent/atomic/AtomicBoolean;
      24: iconst_0
      25: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      28: aload_2
      29: athrow
    Exception table:
       from    to  target type
           0    18    19   Class java/io/IOException

  public long flush(org.apache.bookkeeper.bookie.SkipListFlusher, org.apache.bookkeeper.bookie.CheckpointSource$Checkpoint) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #60                 // Method flushSnapshot:(Lorg/apache/bookkeeper/bookie/SkipListFlusher;Lorg/apache/bookkeeper/bookie/CheckpointSource$Checkpoint;)J
       6: lstore_3
       7: aconst_null
       8: aload_0
       9: aload_2
      10: invokevirtual #46                 // Method snapshot:(Lorg/apache/bookkeeper/bookie/CheckpointSource$Checkpoint;)Lorg/apache/bookkeeper/bookie/CheckpointSource$Checkpoint;
      13: if_acmpeq     25
      16: lload_3
      17: aload_0
      18: aload_1
      19: aload_2
      20: invokevirtual #60                 // Method flushSnapshot:(Lorg/apache/bookkeeper/bookie/SkipListFlusher;Lorg/apache/bookkeeper/bookie/CheckpointSource$Checkpoint;)J
      23: ladd
      24: lstore_3
      25: aload_0
      26: getfield      #22                 // Field previousFlushSucceeded:Ljava/util/concurrent/atomic/AtomicBoolean;
      29: iconst_1
      30: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      33: lload_3
      34: lreturn
      35: astore_3
      36: aload_0
      37: getfield      #22                 // Field previousFlushSucceeded:Ljava/util/concurrent/atomic/AtomicBoolean;
      40: iconst_0
      41: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      44: aload_3
      45: athrow
    Exception table:
       from    to  target type
           0    34    35   Class java/io/IOException

  long flushSnapshot(org.apache.bookkeeper.bookie.SkipListFlusher, org.apache.bookkeeper.bookie.CheckpointSource$Checkpoint) throws java.io.IOException;
    Code:
       0: lconst_0
       1: lstore_3
       2: aload_0
       3: getfield      #12                 // Field snapshot:Lorg/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList;
       6: aload_2
       7: invokevirtual #48                 // Method org/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList.compareTo:(Lorg/apache/bookkeeper/bookie/CheckpointSource$Checkpoint;)I
      10: ifge          166
      13: ldc2_w        #63                 // long -1l
      16: lstore        7
      18: aload_0
      19: dup
      20: astore        9
      22: monitorenter
      23: aload_0
      24: getfield      #12                 // Field snapshot:Lorg/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList;
      27: astore        10
      29: aload         10
      31: aload_2
      32: invokevirtual #48                 // Method org/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList.compareTo:(Lorg/apache/bookkeeper/bookie/CheckpointSource$Checkpoint;)I
      35: ifge          152
      38: aload         10
      40: invokevirtual #37                 // Method org/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList.keySet:()Ljava/util/NavigableSet;
      43: invokeinterface #38,  1           // InterfaceMethod java/util/NavigableSet.iterator:()Ljava/util/Iterator;
      48: astore        11
      50: aload         11
      52: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      57: ifeq          133
      60: aload         11
      62: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #41                 // class org/apache/bookkeeper/bookie/EntryKey
      70: astore        12
      72: aload         12
      74: checkcast     #65                 // class org/apache/bookkeeper/bookie/EntryKeyValue
      77: astore        13
      79: lload_3
      80: aload         13
      82: invokevirtual #66                 // Method org/apache/bookkeeper/bookie/EntryKeyValue.getLength:()I
      85: i2l
      86: ladd
      87: lstore_3
      88: aload         13
      90: invokevirtual #67                 // Method org/apache/bookkeeper/bookie/EntryKeyValue.getLedgerId:()J
      93: lstore        5
      95: lload         7
      97: lload         5
      99: lcmp
     100: ifeq          130
     103: aload_1
     104: lload         5
     106: aload         13
     108: invokevirtual #68                 // Method org/apache/bookkeeper/bookie/EntryKeyValue.getEntryId:()J
     111: aload         13
     113: invokevirtual #69                 // Method org/apache/bookkeeper/bookie/EntryKeyValue.getValueAsByteBuffer:()Lio/netty/buffer/ByteBuf;
     116: invokeinterface #70,  6           // InterfaceMethod org/apache/bookkeeper/bookie/SkipListFlusher.process:(JJLio/netty/buffer/ByteBuf;)V
     121: goto          130
     124: astore        14
     126: lload         5
     128: lstore        7
     130: goto          50
     133: aload_0
     134: getfield      #36                 // Field memTableStats:Lorg/apache/bookkeeper/bookie/stats/EntryMemTableStats;
     137: invokevirtual #72                 // Method org/apache/bookkeeper/bookie/stats/EntryMemTableStats.getFlushBytesCounter:()Lorg/apache/bookkeeper/stats/Counter;
     140: lload_3
     141: invokeinterface #73,  3           // InterfaceMethod org/apache/bookkeeper/stats/Counter.add:(J)V
     146: aload_0
     147: aload         10
     149: invokevirtual #74                 // Method clearSnapshot:(Lorg/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList;)V
     152: aload         9
     154: monitorexit
     155: goto          166
     158: astore        15
     160: aload         9
     162: monitorexit
     163: aload         15
     165: athrow
     166: aload_0
     167: getfield      #33                 // Field skipListSemaphore:Ljava/util/concurrent/Semaphore;
     170: lload_3
     171: l2i
     172: invokevirtual #75                 // Method java/util/concurrent/Semaphore.release:(I)V
     175: lload_3
     176: lreturn
    Exception table:
       from    to  target type
         103   121   124   Class org/apache/bookkeeper/bookie/Bookie$NoLedgerException
          23   155   158   any
         158   163   158   any

  void clearSnapshot(org.apache.bookkeeper.bookie.EntryMemTable$EntrySkipList);
    Code:
       0: getstatic     #76                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_1
       7: invokevirtual #47                 // Method org/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList.isEmpty:()Z
      10: ifeq          21
      13: new           #77                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #78                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      25: invokevirtual #50                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      28: invokevirtual #51                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
      31: getstatic     #76                 // Field $assertionsDisabled:Z
      34: ifne          53
      37: aload_0
      38: getfield      #12                 // Field snapshot:Lorg/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList;
      41: aload_1
      42: if_acmpeq     53
      45: new           #77                 // class java/lang/AssertionError
      48: dup
      49: invokespecial #78                 // Method java/lang/AssertionError."<init>":()V
      52: athrow
      53: aload_0
      54: getstatic     #11                 // Field org/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList.EMPTY_VALUE:Lorg/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList;
      57: putfield      #12                 // Field snapshot:Lorg/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList;
      60: aload_0
      61: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      64: invokevirtual #50                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      67: invokevirtual #54                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      70: goto          86
      73: astore_2
      74: aload_0
      75: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      78: invokevirtual #50                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      81: invokevirtual #54                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      84: aload_2
      85: athrow
      86: return
    Exception table:
       from    to  target type
          31    60    73   any

  public long addEntry(long, long, java.nio.ByteBuffer, org.apache.bookkeeper.bookie.CacheCallback) throws java.io.IOException;
    Code:
       0: lconst_0
       1: lstore        7
       3: invokestatic  #49                 // Method org/apache/bookkeeper/util/MathUtils.nowInNano:()J
       6: lstore        9
       8: iconst_0
       9: istore        11
      11: aload_0
      12: invokevirtual #79                 // Method isSizeLimitReached:()Z
      15: ifne          28
      18: aload_0
      19: getfield      #22                 // Field previousFlushSucceeded:Ljava/util/concurrent/atomic/AtomicBoolean;
      22: invokevirtual #80                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      25: ifne          59
      28: aload_0
      29: invokevirtual #81                 // Method snapshot:()Lorg/apache/bookkeeper/bookie/CheckpointSource$Checkpoint;
      32: astore        12
      34: aconst_null
      35: aload         12
      37: if_acmpne     50
      40: aload_0
      41: getfield      #22                 // Field previousFlushSucceeded:Ljava/util/concurrent/atomic/AtomicBoolean;
      44: invokevirtual #80                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      47: ifne          59
      50: aload         6
      52: aload         12
      54: invokeinterface #82,  2           // InterfaceMethod org/apache/bookkeeper/bookie/CacheCallback.onSizeLimitReached:(Lorg/apache/bookkeeper/bookie/CheckpointSource$Checkpoint;)V
      59: aload         5
      61: invokevirtual #83                 // Method java/nio/ByteBuffer.remaining:()I
      64: istore        12
      66: aload_0
      67: getfield      #33                 // Field skipListSemaphore:Ljava/util/concurrent/Semaphore;
      70: iload         12
      72: invokevirtual #84                 // Method java/util/concurrent/Semaphore.tryAcquire:(I)Z
      75: ifne          124
      78: aload_0
      79: getfield      #36                 // Field memTableStats:Lorg/apache/bookkeeper/bookie/stats/EntryMemTableStats;
      82: invokevirtual #85                 // Method org/apache/bookkeeper/bookie/stats/EntryMemTableStats.getThrottlingCounter:()Lorg/apache/bookkeeper/stats/Counter;
      85: invokeinterface #86,  1           // InterfaceMethod org/apache/bookkeeper/stats/Counter.inc:()V
      90: invokestatic  #49                 // Method org/apache/bookkeeper/util/MathUtils.nowInNano:()J
      93: lstore        13
      95: aload_0
      96: getfield      #33                 // Field skipListSemaphore:Ljava/util/concurrent/Semaphore;
      99: iload         12
     101: invokevirtual #87                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:(I)V
     104: aload_0
     105: getfield      #36                 // Field memTableStats:Lorg/apache/bookkeeper/bookie/stats/EntryMemTableStats;
     108: invokevirtual #88                 // Method org/apache/bookkeeper/bookie/stats/EntryMemTableStats.getThrottlingStats:()Lorg/apache/bookkeeper/stats/OpStatsLogger;
     111: lload         13
     113: invokestatic  #56                 // Method org/apache/bookkeeper/util/MathUtils.elapsedNanos:(J)J
     116: getstatic     #57                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     119: invokeinterface #58,  4           // InterfaceMethod org/apache/bookkeeper/stats/OpStatsLogger.registerSuccessfulEvent:(JLjava/util/concurrent/TimeUnit;)V
     124: aload_0
     125: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     128: invokevirtual #89                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
     131: invokevirtual #90                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
     134: aload_0
     135: lload_1
     136: lload_3
     137: aload         5
     139: invokespecial #91                 // Method cloneWithAllocator:(JJLjava/nio/ByteBuffer;)Lorg/apache/bookkeeper/bookie/EntryKeyValue;
     142: astore        13
     144: aload_0
     145: aload         13
     147: invokespecial #92                 // Method internalAdd:(Lorg/apache/bookkeeper/bookie/EntryKeyValue;)J
     150: lstore        7
     152: lload         7
     154: lconst_0
     155: lcmp
     156: ifne          168
     159: aload_0
     160: getfield      #33                 // Field skipListSemaphore:Ljava/util/concurrent/Semaphore;
     163: iload         12
     165: invokevirtual #75                 // Method java/util/concurrent/Semaphore.release:(I)V
     168: aload_0
     169: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     172: invokevirtual #89                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
     175: invokevirtual #93                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
     178: goto          196
     181: astore        15
     183: aload_0
     184: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     187: invokevirtual #89                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
     190: invokevirtual #93                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
     193: aload         15
     195: athrow
     196: iconst_1
     197: istore        11
     199: lload         7
     201: lstore        13
     203: iload         11
     205: ifeq          231
     208: aload_0
     209: getfield      #36                 // Field memTableStats:Lorg/apache/bookkeeper/bookie/stats/EntryMemTableStats;
     212: invokevirtual #94                 // Method org/apache/bookkeeper/bookie/stats/EntryMemTableStats.getPutEntryStats:()Lorg/apache/bookkeeper/stats/OpStatsLogger;
     215: lload         9
     217: invokestatic  #56                 // Method org/apache/bookkeeper/util/MathUtils.elapsedNanos:(J)J
     220: getstatic     #57                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     223: invokeinterface #58,  4           // InterfaceMethod org/apache/bookkeeper/stats/OpStatsLogger.registerSuccessfulEvent:(JLjava/util/concurrent/TimeUnit;)V
     228: goto          251
     231: aload_0
     232: getfield      #36                 // Field memTableStats:Lorg/apache/bookkeeper/bookie/stats/EntryMemTableStats;
     235: invokevirtual #94                 // Method org/apache/bookkeeper/bookie/stats/EntryMemTableStats.getPutEntryStats:()Lorg/apache/bookkeeper/stats/OpStatsLogger;
     238: lload         9
     240: invokestatic  #56                 // Method org/apache/bookkeeper/util/MathUtils.elapsedNanos:(J)J
     243: getstatic     #57                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     246: invokeinterface #59,  4           // InterfaceMethod org/apache/bookkeeper/stats/OpStatsLogger.registerFailedEvent:(JLjava/util/concurrent/TimeUnit;)V
     251: lload         13
     253: lreturn
     254: astore        16
     256: iload         11
     258: ifeq          284
     261: aload_0
     262: getfield      #36                 // Field memTableStats:Lorg/apache/bookkeeper/bookie/stats/EntryMemTableStats;
     265: invokevirtual #94                 // Method org/apache/bookkeeper/bookie/stats/EntryMemTableStats.getPutEntryStats:()Lorg/apache/bookkeeper/stats/OpStatsLogger;
     268: lload         9
     270: invokestatic  #56                 // Method org/apache/bookkeeper/util/MathUtils.elapsedNanos:(J)J
     273: getstatic     #57                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     276: invokeinterface #58,  4           // InterfaceMethod org/apache/bookkeeper/stats/OpStatsLogger.registerSuccessfulEvent:(JLjava/util/concurrent/TimeUnit;)V
     281: goto          304
     284: aload_0
     285: getfield      #36                 // Field memTableStats:Lorg/apache/bookkeeper/bookie/stats/EntryMemTableStats;
     288: invokevirtual #94                 // Method org/apache/bookkeeper/bookie/stats/EntryMemTableStats.getPutEntryStats:()Lorg/apache/bookkeeper/stats/OpStatsLogger;
     291: lload         9
     293: invokestatic  #56                 // Method org/apache/bookkeeper/util/MathUtils.elapsedNanos:(J)J
     296: getstatic     #57                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     299: invokeinterface #59,  4           // InterfaceMethod org/apache/bookkeeper/stats/OpStatsLogger.registerFailedEvent:(JLjava/util/concurrent/TimeUnit;)V
     304: aload         16
     306: athrow
    Exception table:
       from    to  target type
         134   168   181   any
         181   183   181   any
          11   203   254   any
         254   256   254   any

  private long internalAdd(org.apache.bookkeeper.bookie.EntryKeyValue) throws java.io.IOException;
    Code:
       0: lconst_0
       1: lstore_2
       2: aload_0
       3: getfield      #10                 // Field kvmap:Lorg/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList;
       6: aload_1
       7: aload_1
       8: invokevirtual #95                 // Method org/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList.putIfAbsent:(Lorg/apache/bookkeeper/bookie/EntryKey;Lorg/apache/bookkeeper/bookie/EntryKeyValue;)Lorg/apache/bookkeeper/bookie/EntryKeyValue;
      11: ifnonnull     29
      14: aload_1
      15: invokevirtual #66                 // Method org/apache/bookkeeper/bookie/EntryKeyValue.getLength:()I
      18: i2l
      19: lstore_2
      20: aload_0
      21: getfield      #16                 // Field size:Ljava/util/concurrent/atomic/AtomicLong;
      24: lload_2
      25: invokevirtual #96                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
      28: pop2
      29: lload_2
      30: lreturn

  private org.apache.bookkeeper.bookie.EntryKeyValue newEntry(long, long, java.nio.ByteBuffer);
    Code:
       0: iconst_0
       1: istore        7
       3: aload         5
       5: invokevirtual #83                 // Method java/nio/ByteBuffer.remaining:()I
       8: istore        8
      10: iload         8
      12: newarray       byte
      14: astore        6
      16: aload         5
      18: aload         6
      20: invokevirtual #97                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      23: pop
      24: new           #65                 // class org/apache/bookkeeper/bookie/EntryKeyValue
      27: dup
      28: lload_1
      29: lload_3
      30: aload         6
      32: iload         7
      34: iload         8
      36: invokespecial #98                 // Method org/apache/bookkeeper/bookie/EntryKeyValue."<init>":(JJ[BII)V
      39: areturn

  private org.apache.bookkeeper.bookie.EntryKeyValue cloneWithAllocator(long, long, java.nio.ByteBuffer);
    Code:
       0: aload         5
       2: invokevirtual #83                 // Method java/nio/ByteBuffer.remaining:()I
       5: istore        6
       7: aload_0
       8: getfield      #19                 // Field allocator:Lorg/apache/bookkeeper/bookie/SkipListArena;
      11: iload         6
      13: invokevirtual #99                 // Method org/apache/bookkeeper/bookie/SkipListArena.allocateBytes:(I)Lorg/apache/bookkeeper/bookie/SkipListArena$MemorySlice;
      16: astore        7
      18: aload         7
      20: ifnonnull     32
      23: aload_0
      24: lload_1
      25: lload_3
      26: aload         5
      28: invokespecial #100                // Method newEntry:(JJLjava/nio/ByteBuffer;)Lorg/apache/bookkeeper/bookie/EntryKeyValue;
      31: areturn
      32: getstatic     #76                 // Field $assertionsDisabled:Z
      35: ifne          54
      38: aload         7
      40: invokevirtual #101                // Method org/apache/bookkeeper/bookie/SkipListArena$MemorySlice.getData:()[B
      43: ifnonnull     54
      46: new           #77                 // class java/lang/AssertionError
      49: dup
      50: invokespecial #78                 // Method java/lang/AssertionError."<init>":()V
      53: athrow
      54: aload         5
      56: aload         7
      58: invokevirtual #101                // Method org/apache/bookkeeper/bookie/SkipListArena$MemorySlice.getData:()[B
      61: aload         7
      63: invokevirtual #102                // Method org/apache/bookkeeper/bookie/SkipListArena$MemorySlice.getOffset:()I
      66: iload         6
      68: invokevirtual #103                // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      71: pop
      72: new           #65                 // class org/apache/bookkeeper/bookie/EntryKeyValue
      75: dup
      76: lload_1
      77: lload_3
      78: aload         7
      80: invokevirtual #101                // Method org/apache/bookkeeper/bookie/SkipListArena$MemorySlice.getData:()[B
      83: aload         7
      85: invokevirtual #102                // Method org/apache/bookkeeper/bookie/SkipListArena$MemorySlice.getOffset:()I
      88: iload         6
      90: invokespecial #98                 // Method org/apache/bookkeeper/bookie/EntryKeyValue."<init>":(JJ[BII)V
      93: areturn

  public org.apache.bookkeeper.bookie.EntryKeyValue getEntry(long, long) throws java.io.IOException;
    Code:
       0: new           #41                 // class org/apache/bookkeeper/bookie/EntryKey
       3: dup
       4: lload_1
       5: lload_3
       6: invokespecial #104                // Method org/apache/bookkeeper/bookie/EntryKey."<init>":(JJ)V
       9: astore        5
      11: aconst_null
      12: astore        6
      14: invokestatic  #49                 // Method org/apache/bookkeeper/util/MathUtils.nowInNano:()J
      17: lstore        7
      19: iconst_0
      20: istore        9
      22: aload_0
      23: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      26: invokevirtual #89                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      29: invokevirtual #90                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      32: aload_0
      33: getfield      #10                 // Field kvmap:Lorg/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList;
      36: aload         5
      38: invokevirtual #105                // Method org/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList.get:(Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #65                 // class org/apache/bookkeeper/bookie/EntryKeyValue
      44: astore        6
      46: aload         6
      48: ifnonnull     65
      51: aload_0
      52: getfield      #12                 // Field snapshot:Lorg/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList;
      55: aload         5
      57: invokevirtual #105                // Method org/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList.get:(Ljava/lang/Object;)Ljava/lang/Object;
      60: checkcast     #65                 // class org/apache/bookkeeper/bookie/EntryKeyValue
      63: astore        6
      65: iconst_1
      66: istore        9
      68: aload_0
      69: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      72: invokevirtual #89                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      75: invokevirtual #93                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      78: iload         9
      80: ifeq          106
      83: aload_0
      84: getfield      #36                 // Field memTableStats:Lorg/apache/bookkeeper/bookie/stats/EntryMemTableStats;
      87: invokevirtual #106                // Method org/apache/bookkeeper/bookie/stats/EntryMemTableStats.getGetEntryStats:()Lorg/apache/bookkeeper/stats/OpStatsLogger;
      90: lload         7
      92: invokestatic  #56                 // Method org/apache/bookkeeper/util/MathUtils.elapsedNanos:(J)J
      95: getstatic     #57                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      98: invokeinterface #58,  4           // InterfaceMethod org/apache/bookkeeper/stats/OpStatsLogger.registerSuccessfulEvent:(JLjava/util/concurrent/TimeUnit;)V
     103: goto          192
     106: aload_0
     107: getfield      #36                 // Field memTableStats:Lorg/apache/bookkeeper/bookie/stats/EntryMemTableStats;
     110: invokevirtual #106                // Method org/apache/bookkeeper/bookie/stats/EntryMemTableStats.getGetEntryStats:()Lorg/apache/bookkeeper/stats/OpStatsLogger;
     113: lload         7
     115: invokestatic  #56                 // Method org/apache/bookkeeper/util/MathUtils.elapsedNanos:(J)J
     118: getstatic     #57                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     121: invokeinterface #59,  4           // InterfaceMethod org/apache/bookkeeper/stats/OpStatsLogger.registerFailedEvent:(JLjava/util/concurrent/TimeUnit;)V
     126: goto          192
     129: astore        10
     131: aload_0
     132: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     135: invokevirtual #89                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
     138: invokevirtual #93                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
     141: iload         9
     143: ifeq          169
     146: aload_0
     147: getfield      #36                 // Field memTableStats:Lorg/apache/bookkeeper/bookie/stats/EntryMemTableStats;
     150: invokevirtual #106                // Method org/apache/bookkeeper/bookie/stats/EntryMemTableStats.getGetEntryStats:()Lorg/apache/bookkeeper/stats/OpStatsLogger;
     153: lload         7
     155: invokestatic  #56                 // Method org/apache/bookkeeper/util/MathUtils.elapsedNanos:(J)J
     158: getstatic     #57                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     161: invokeinterface #58,  4           // InterfaceMethod org/apache/bookkeeper/stats/OpStatsLogger.registerSuccessfulEvent:(JLjava/util/concurrent/TimeUnit;)V
     166: goto          189
     169: aload_0
     170: getfield      #36                 // Field memTableStats:Lorg/apache/bookkeeper/bookie/stats/EntryMemTableStats;
     173: invokevirtual #106                // Method org/apache/bookkeeper/bookie/stats/EntryMemTableStats.getGetEntryStats:()Lorg/apache/bookkeeper/stats/OpStatsLogger;
     176: lload         7
     178: invokestatic  #56                 // Method org/apache/bookkeeper/util/MathUtils.elapsedNanos:(J)J
     181: getstatic     #57                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     184: invokeinterface #59,  4           // InterfaceMethod org/apache/bookkeeper/stats/OpStatsLogger.registerFailedEvent:(JLjava/util/concurrent/TimeUnit;)V
     189: aload         10
     191: athrow
     192: aload         6
     194: areturn
    Exception table:
       from    to  target type
          32    68   129   any
         129   131   129   any

  public org.apache.bookkeeper.bookie.EntryKeyValue getLastEntry(long) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_3
       2: new           #41                 // class org/apache/bookkeeper/bookie/EntryKey
       5: dup
       6: lload_1
       7: ldc2_w        #108                // long 9223372036854775807l
      10: invokespecial #104                // Method org/apache/bookkeeper/bookie/EntryKey."<init>":(JJ)V
      13: astore        4
      15: invokestatic  #49                 // Method org/apache/bookkeeper/util/MathUtils.nowInNano:()J
      18: lstore        5
      20: iconst_0
      21: istore        7
      23: aload_0
      24: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      27: invokevirtual #89                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      30: invokevirtual #90                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      33: aload_0
      34: getfield      #10                 // Field kvmap:Lorg/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList;
      37: aload         4
      39: invokevirtual #110                // Method org/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList.floorKey:(Ljava/lang/Object;)Ljava/lang/Object;
      42: checkcast     #41                 // class org/apache/bookkeeper/bookie/EntryKey
      45: astore_3
      46: aload_3
      47: ifnull        59
      50: aload_3
      51: invokevirtual #111                // Method org/apache/bookkeeper/bookie/EntryKey.getLedgerId:()J
      54: lload_1
      55: lcmp
      56: ifeq          72
      59: aload_0
      60: getfield      #12                 // Field snapshot:Lorg/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList;
      63: aload         4
      65: invokevirtual #110                // Method org/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList.floorKey:(Ljava/lang/Object;)Ljava/lang/Object;
      68: checkcast     #41                 // class org/apache/bookkeeper/bookie/EntryKey
      71: astore_3
      72: iconst_1
      73: istore        7
      75: aload_0
      76: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      79: invokevirtual #89                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      82: invokevirtual #93                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      85: iload         7
      87: ifeq          113
      90: aload_0
      91: getfield      #36                 // Field memTableStats:Lorg/apache/bookkeeper/bookie/stats/EntryMemTableStats;
      94: invokevirtual #106                // Method org/apache/bookkeeper/bookie/stats/EntryMemTableStats.getGetEntryStats:()Lorg/apache/bookkeeper/stats/OpStatsLogger;
      97: lload         5
      99: invokestatic  #56                 // Method org/apache/bookkeeper/util/MathUtils.elapsedNanos:(J)J
     102: getstatic     #57                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     105: invokeinterface #58,  4           // InterfaceMethod org/apache/bookkeeper/stats/OpStatsLogger.registerSuccessfulEvent:(JLjava/util/concurrent/TimeUnit;)V
     110: goto          199
     113: aload_0
     114: getfield      #36                 // Field memTableStats:Lorg/apache/bookkeeper/bookie/stats/EntryMemTableStats;
     117: invokevirtual #106                // Method org/apache/bookkeeper/bookie/stats/EntryMemTableStats.getGetEntryStats:()Lorg/apache/bookkeeper/stats/OpStatsLogger;
     120: lload         5
     122: invokestatic  #56                 // Method org/apache/bookkeeper/util/MathUtils.elapsedNanos:(J)J
     125: getstatic     #57                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     128: invokeinterface #59,  4           // InterfaceMethod org/apache/bookkeeper/stats/OpStatsLogger.registerFailedEvent:(JLjava/util/concurrent/TimeUnit;)V
     133: goto          199
     136: astore        8
     138: aload_0
     139: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     142: invokevirtual #89                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
     145: invokevirtual #93                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
     148: iload         7
     150: ifeq          176
     153: aload_0
     154: getfield      #36                 // Field memTableStats:Lorg/apache/bookkeeper/bookie/stats/EntryMemTableStats;
     157: invokevirtual #106                // Method org/apache/bookkeeper/bookie/stats/EntryMemTableStats.getGetEntryStats:()Lorg/apache/bookkeeper/stats/OpStatsLogger;
     160: lload         5
     162: invokestatic  #56                 // Method org/apache/bookkeeper/util/MathUtils.elapsedNanos:(J)J
     165: getstatic     #57                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     168: invokeinterface #58,  4           // InterfaceMethod org/apache/bookkeeper/stats/OpStatsLogger.registerSuccessfulEvent:(JLjava/util/concurrent/TimeUnit;)V
     173: goto          196
     176: aload_0
     177: getfield      #36                 // Field memTableStats:Lorg/apache/bookkeeper/bookie/stats/EntryMemTableStats;
     180: invokevirtual #106                // Method org/apache/bookkeeper/bookie/stats/EntryMemTableStats.getGetEntryStats:()Lorg/apache/bookkeeper/stats/OpStatsLogger;
     183: lload         5
     185: invokestatic  #56                 // Method org/apache/bookkeeper/util/MathUtils.elapsedNanos:(J)J
     188: getstatic     #57                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     191: invokeinterface #59,  4           // InterfaceMethod org/apache/bookkeeper/stats/OpStatsLogger.registerFailedEvent:(JLjava/util/concurrent/TimeUnit;)V
     196: aload         8
     198: athrow
     199: aload_3
     200: ifnull        212
     203: aload_3
     204: invokevirtual #111                // Method org/apache/bookkeeper/bookie/EntryKey.getLedgerId:()J
     207: lload_1
     208: lcmp
     209: ifeq          214
     212: aconst_null
     213: areturn
     214: aload_3
     215: checkcast     #65                 // class org/apache/bookkeeper/bookie/EntryKeyValue
     218: areturn
    Exception table:
       from    to  target type
          33    75   136   any
         136   138   136   any

  boolean isSizeLimitReached();
    Code:
       0: aload_0
       1: getfield      #16                 // Field size:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #112                // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: aload_0
       8: getfield      #24                 // Field skipListSizeLimit:J
      11: lcmp
      12: iflt          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #16                 // Field size:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #112                // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lconst_0
       8: lcmp
       9: ifne          26
      12: aload_0
      13: getfield      #12                 // Field snapshot:Lorg/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList;
      16: invokevirtual #47                 // Method org/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList.isEmpty:()Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public void close() throws java.lang.Exception;
    Code:
       0: return

  java.util.PrimitiveIterator$OfLong getListOfEntriesOfLedger(long);
    Code:
       0: new           #41                 // class org/apache/bookkeeper/bookie/EntryKey
       3: dup
       4: lload_1
       5: lconst_0
       6: invokespecial #104                // Method org/apache/bookkeeper/bookie/EntryKey."<init>":(JJ)V
       9: astore_3
      10: new           #41                 // class org/apache/bookkeeper/bookie/EntryKey
      13: dup
      14: lload_1
      15: ldc2_w        #108                // long 9223372036854775807l
      18: invokespecial #104                // Method org/apache/bookkeeper/bookie/EntryKey."<init>":(JJ)V
      21: astore        4
      23: aload_0
      24: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      27: invokevirtual #89                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      30: invokevirtual #90                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      33: aload_0
      34: getfield      #10                 // Field kvmap:Lorg/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList;
      37: aload_3
      38: aload         4
      40: invokevirtual #113                // Method org/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList.subMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentNavigableMap;
      43: invokeinterface #114,  1          // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.keySet:()Ljava/util/NavigableSet;
      48: invokeinterface #38,  1           // InterfaceMethod java/util/NavigableSet.iterator:()Ljava/util/Iterator;
      53: astore        5
      55: aload_0
      56: getfield      #12                 // Field snapshot:Lorg/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList;
      59: aload_3
      60: aload         4
      62: invokevirtual #113                // Method org/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList.subMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentNavigableMap;
      65: invokeinterface #114,  1          // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.keySet:()Ljava/util/NavigableSet;
      70: invokeinterface #38,  1           // InterfaceMethod java/util/NavigableSet.iterator:()Ljava/util/Iterator;
      75: astore        6
      77: aload_0
      78: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      81: invokevirtual #89                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      84: invokevirtual #93                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      87: goto          105
      90: astore        7
      92: aload_0
      93: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      96: invokevirtual #89                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      99: invokevirtual #93                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
     102: aload         7
     104: athrow
     105: aload         5
     107: aload         6
     109: getstatic     #115                // Field org/apache/bookkeeper/bookie/EntryKey.COMPARATOR:Lorg/apache/bookkeeper/bookie/KeyComparator;
     112: invokedynamic #116,  0            // InvokeDynamic #0:applyAsLong:()Ljava/util/function/ToLongFunction;
     117: invokestatic  #117                // Method org/apache/bookkeeper/util/IteratorUtility.mergeIteratorsForPrimitiveLongIterator:(Ljava/util/Iterator;Ljava/util/Iterator;Ljava/util/Comparator;Ljava/util/function/ToLongFunction;)Ljava/util/PrimitiveIterator$OfLong;
     120: areturn
    Exception table:
       from    to  target type
          33    77    90   any
          90    92    90   any

  private static long lambda$getListOfEntriesOfLedger$0(org.apache.bookkeeper.bookie.EntryKey);
    Code:
       0: aload_0
       1: getfield      #118                // Field org/apache/bookkeeper/bookie/EntryKey.entryId:J
       4: lreturn

  static {};
    Code:
       0: ldc           #119                // class org/apache/bookkeeper/bookie/EntryMemTable
       2: invokevirtual #120                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #76                 // Field $assertionsDisabled:Z
      16: ldc           #119                // class org/apache/bookkeeper/bookie/EntryMemTable
      18: invokestatic  #121                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      21: putstatic     #42                 // Field logger:Lorg/slf4j/Logger;
      24: return
}
