Compiled from "Auditor.java"
class org.apache.bookkeeper.replication.Auditor$GetListOfEntriesOfLedgerCallbackForReplicasCheck implements java.util.function.BiConsumer<org.apache.bookkeeper.util.AvailabilityOfEntriesOfLedger, java.lang.Throwable> {
  private final long ledgerInRange;

  private final int ensembleSize;

  private final int writeQuorumSize;

  private final int ackQuorumSize;

  private final org.apache.bookkeeper.net.BookieId bookieInEnsemble;

  private final java.util.List<org.apache.bookkeeper.replication.Auditor$BookieExpectedToContainSegmentInfo> bookieExpectedToContainSegmentInfoList;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.Long, org.apache.bookkeeper.replication.Auditor$MissingEntriesInfoOfLedger> ledgersWithMissingEntries;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.Long, org.apache.bookkeeper.replication.Auditor$MissingEntriesInfoOfLedger> ledgersWithUnavailableBookies;

  private final org.apache.bookkeeper.proto.BookkeeperInternalCallbacks$MultiCallback mcbForThisLedger;

  private org.apache.bookkeeper.replication.Auditor$GetListOfEntriesOfLedgerCallbackForReplicasCheck(long, int, int, int, org.apache.bookkeeper.net.BookieId, java.util.List<org.apache.bookkeeper.replication.Auditor$BookieExpectedToContainSegmentInfo>, java.util.concurrent.ConcurrentHashMap<java.lang.Long, org.apache.bookkeeper.replication.Auditor$MissingEntriesInfoOfLedger>, java.util.concurrent.ConcurrentHashMap<java.lang.Long, org.apache.bookkeeper.replication.Auditor$MissingEntriesInfoOfLedger>, org.apache.bookkeeper.proto.BookkeeperInternalCallbacks$MultiCallback);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lload_1
       6: putfield      #3                  // Field ledgerInRange:J
       9: aload_0
      10: iload_3
      11: putfield      #4                  // Field ensembleSize:I
      14: aload_0
      15: iload         4
      17: putfield      #5                  // Field writeQuorumSize:I
      20: aload_0
      21: iload         5
      23: putfield      #6                  // Field ackQuorumSize:I
      26: aload_0
      27: aload         6
      29: putfield      #7                  // Field bookieInEnsemble:Lorg/apache/bookkeeper/net/BookieId;
      32: aload_0
      33: aload         7
      35: putfield      #8                  // Field bookieExpectedToContainSegmentInfoList:Ljava/util/List;
      38: aload_0
      39: aload         8
      41: putfield      #9                  // Field ledgersWithMissingEntries:Ljava/util/concurrent/ConcurrentHashMap;
      44: aload_0
      45: aload         9
      47: putfield      #10                 // Field ledgersWithUnavailableBookies:Ljava/util/concurrent/ConcurrentHashMap;
      50: aload_0
      51: aload         10
      53: putfield      #11                 // Field mcbForThisLedger:Lorg/apache/bookkeeper/proto/BookkeeperInternalCallbacks$MultiCallback;
      56: return

  public void accept(org.apache.bookkeeper.util.AvailabilityOfEntriesOfLedger, java.lang.Throwable);
    Code:
       0: aload_2
       1: ifnull        248
       4: aload_2
       5: invokestatic  #12                 // Method org/apache/bookkeeper/client/BKException.getExceptionCode:(Ljava/lang/Throwable;)I
       8: bipush        -7
      10: if_icmpne     41
      13: invokestatic  #14                 // Method org/apache/bookkeeper/replication/Auditor.access$600:()Lorg/slf4j/Logger;
      16: ldc           #15                 // String Got NoSuchLedgerExistsException for ledger: {} from bookie: {}
      18: aload_0
      19: getfield      #3                  // Field ledgerInRange:J
      22: invokestatic  #16                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      25: aload_0
      26: getfield      #7                  // Field bookieInEnsemble:Lorg/apache/bookkeeper/net/BookieId;
      29: invokeinterface #17,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      34: getstatic     #18                 // Field org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger.EMPTY_AVAILABILITYOFENTRIESOFLEDGER:Lorg/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger;
      37: astore_1
      38: goto          248
      41: invokestatic  #14                 // Method org/apache/bookkeeper/replication/Auditor.access$600:()Lorg/slf4j/Logger;
      44: ldc           #19                 // String Unable to GetListOfEntriesOfLedger for ledger: {} from: {}
      46: iconst_3
      47: anewarray     #20                 // class java/lang/Object
      50: dup
      51: iconst_0
      52: aload_0
      53: getfield      #3                  // Field ledgerInRange:J
      56: invokestatic  #16                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      59: aastore
      60: dup
      61: iconst_1
      62: aload_0
      63: getfield      #7                  // Field bookieInEnsemble:Lorg/apache/bookkeeper/net/BookieId;
      66: aastore
      67: dup
      68: iconst_2
      69: aload_2
      70: aastore
      71: invokeinterface #21,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
      76: aload_0
      77: getfield      #10                 // Field ledgersWithUnavailableBookies:Ljava/util/concurrent/ConcurrentHashMap;
      80: aload_0
      81: getfield      #3                  // Field ledgerInRange:J
      84: invokestatic  #16                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      87: invokevirtual #22                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      90: checkcast     #23                 // class org/apache/bookkeeper/replication/Auditor$MissingEntriesInfoOfLedger
      93: astore_3
      94: aload_3
      95: ifnonnull     165
      98: aload_0
      99: getfield      #10                 // Field ledgersWithUnavailableBookies:Ljava/util/concurrent/ConcurrentHashMap;
     102: aload_0
     103: getfield      #3                  // Field ledgerInRange:J
     106: invokestatic  #16                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     109: new           #23                 // class org/apache/bookkeeper/replication/Auditor$MissingEntriesInfoOfLedger
     112: dup
     113: aload_0
     114: getfield      #3                  // Field ledgerInRange:J
     117: aload_0
     118: getfield      #4                  // Field ensembleSize:I
     121: aload_0
     122: getfield      #5                  // Field writeQuorumSize:I
     125: aload_0
     126: getfield      #6                  // Field ackQuorumSize:I
     129: new           #24                 // class java/util/ArrayList
     132: dup
     133: invokespecial #25                 // Method java/util/ArrayList."<init>":()V
     136: invokestatic  #26                 // Method java/util/Collections.synchronizedList:(Ljava/util/List;)Ljava/util/List;
     139: aconst_null
     140: invokespecial #27                 // Method org/apache/bookkeeper/replication/Auditor$MissingEntriesInfoOfLedger."<init>":(JIIILjava/util/List;Lorg/apache/bookkeeper/replication/Auditor$1;)V
     143: invokevirtual #28                 // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     146: pop
     147: aload_0
     148: getfield      #10                 // Field ledgersWithUnavailableBookies:Ljava/util/concurrent/ConcurrentHashMap;
     151: aload_0
     152: getfield      #3                  // Field ledgerInRange:J
     155: invokestatic  #16                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     158: invokevirtual #22                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     161: checkcast     #23                 // class org/apache/bookkeeper/replication/Auditor$MissingEntriesInfoOfLedger
     164: astore_3
     165: aload_3
     166: invokestatic  #29                 // Method org/apache/bookkeeper/replication/Auditor$MissingEntriesInfoOfLedger.access$3600:(Lorg/apache/bookkeeper/replication/Auditor$MissingEntriesInfoOfLedger;)Ljava/util/List;
     169: astore        4
     171: aload_0
     172: getfield      #8                  // Field bookieExpectedToContainSegmentInfoList:Ljava/util/List;
     175: invokeinterface #30,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     180: astore        5
     182: aload         5
     184: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     189: ifeq          247
     192: aload         5
     194: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     199: checkcast     #33                 // class org/apache/bookkeeper/replication/Auditor$BookieExpectedToContainSegmentInfo
     202: astore        6
     204: aload         4
     206: new           #34                 // class org/apache/bookkeeper/replication/Auditor$MissingEntriesInfo
     209: dup
     210: aload_0
     211: getfield      #3                  // Field ledgerInRange:J
     214: aload         6
     216: invokevirtual #35                 // Method org/apache/bookkeeper/replication/Auditor$BookieExpectedToContainSegmentInfo.getSegmentEnsemble:()Ljava/util/Map$Entry;
     219: aload_0
     220: getfield      #7                  // Field bookieInEnsemble:Lorg/apache/bookkeeper/net/BookieId;
     223: aconst_null
     224: aconst_null
     225: invokespecial #36                 // Method org/apache/bookkeeper/replication/Auditor$MissingEntriesInfo."<init>":(JLjava/util/Map$Entry;Lorg/apache/bookkeeper/net/BookieId;Ljava/util/List;Lorg/apache/bookkeeper/replication/Auditor$1;)V
     228: invokeinterface #37,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     233: pop
     234: aload_0
     235: getfield      #11                 // Field mcbForThisLedger:Lorg/apache/bookkeeper/proto/BookkeeperInternalCallbacks$MultiCallback;
     238: iconst_0
     239: aconst_null
     240: aconst_null
     241: invokevirtual #38                 // Method org/apache/bookkeeper/proto/BookkeeperInternalCallbacks$MultiCallback.processResult:(ILjava/lang/String;Ljava/lang/Object;)V
     244: goto          182
     247: return
     248: aload_0
     249: getfield      #8                  // Field bookieExpectedToContainSegmentInfoList:Ljava/util/List;
     252: invokeinterface #30,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     257: astore_3
     258: aload_3
     259: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     264: ifeq          469
     267: aload_3
     268: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     273: checkcast     #33                 // class org/apache/bookkeeper/replication/Auditor$BookieExpectedToContainSegmentInfo
     276: astore        4
     278: aload         4
     280: invokevirtual #39                 // Method org/apache/bookkeeper/replication/Auditor$BookieExpectedToContainSegmentInfo.getStartEntryIdOfSegment:()J
     283: lstore        5
     285: aload         4
     287: invokevirtual #40                 // Method org/apache/bookkeeper/replication/Auditor$BookieExpectedToContainSegmentInfo.getLastEntryIdOfSegment:()J
     290: lstore        7
     292: aload         4
     294: invokevirtual #41                 // Method org/apache/bookkeeper/replication/Auditor$BookieExpectedToContainSegmentInfo.getEntriesOfSegmentStripedToThisBookie:()Ljava/util/BitSet;
     297: astore        9
     299: aload         4
     301: invokevirtual #35                 // Method org/apache/bookkeeper/replication/Auditor$BookieExpectedToContainSegmentInfo.getSegmentEnsemble:()Ljava/util/Map$Entry;
     304: astore        10
     306: aload_1
     307: lload         5
     309: lload         7
     311: aload         9
     313: invokevirtual #42                 // Method org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger.getUnavailableEntries:(JJLjava/util/BitSet;)Ljava/util/List;
     316: astore        11
     318: aload         11
     320: ifnull        456
     323: aload         11
     325: invokeinterface #43,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     330: ifne          456
     333: aload_0
     334: getfield      #9                  // Field ledgersWithMissingEntries:Ljava/util/concurrent/ConcurrentHashMap;
     337: aload_0
     338: getfield      #3                  // Field ledgerInRange:J
     341: invokestatic  #16                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     344: invokevirtual #22                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     347: checkcast     #23                 // class org/apache/bookkeeper/replication/Auditor$MissingEntriesInfoOfLedger
     350: astore        12
     352: aload         12
     354: ifnonnull     425
     357: aload_0
     358: getfield      #9                  // Field ledgersWithMissingEntries:Ljava/util/concurrent/ConcurrentHashMap;
     361: aload_0
     362: getfield      #3                  // Field ledgerInRange:J
     365: invokestatic  #16                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     368: new           #23                 // class org/apache/bookkeeper/replication/Auditor$MissingEntriesInfoOfLedger
     371: dup
     372: aload_0
     373: getfield      #3                  // Field ledgerInRange:J
     376: aload_0
     377: getfield      #4                  // Field ensembleSize:I
     380: aload_0
     381: getfield      #5                  // Field writeQuorumSize:I
     384: aload_0
     385: getfield      #6                  // Field ackQuorumSize:I
     388: new           #24                 // class java/util/ArrayList
     391: dup
     392: invokespecial #25                 // Method java/util/ArrayList."<init>":()V
     395: invokestatic  #26                 // Method java/util/Collections.synchronizedList:(Ljava/util/List;)Ljava/util/List;
     398: aconst_null
     399: invokespecial #27                 // Method org/apache/bookkeeper/replication/Auditor$MissingEntriesInfoOfLedger."<init>":(JIIILjava/util/List;Lorg/apache/bookkeeper/replication/Auditor$1;)V
     402: invokevirtual #28                 // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     405: pop
     406: aload_0
     407: getfield      #9                  // Field ledgersWithMissingEntries:Ljava/util/concurrent/ConcurrentHashMap;
     410: aload_0
     411: getfield      #3                  // Field ledgerInRange:J
     414: invokestatic  #16                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     417: invokevirtual #22                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     420: checkcast     #23                 // class org/apache/bookkeeper/replication/Auditor$MissingEntriesInfoOfLedger
     423: astore        12
     425: aload         12
     427: invokestatic  #29                 // Method org/apache/bookkeeper/replication/Auditor$MissingEntriesInfoOfLedger.access$3600:(Lorg/apache/bookkeeper/replication/Auditor$MissingEntriesInfoOfLedger;)Ljava/util/List;
     430: new           #34                 // class org/apache/bookkeeper/replication/Auditor$MissingEntriesInfo
     433: dup
     434: aload_0
     435: getfield      #3                  // Field ledgerInRange:J
     438: aload         10
     440: aload_0
     441: getfield      #7                  // Field bookieInEnsemble:Lorg/apache/bookkeeper/net/BookieId;
     444: aload         11
     446: aconst_null
     447: invokespecial #36                 // Method org/apache/bookkeeper/replication/Auditor$MissingEntriesInfo."<init>":(JLjava/util/Map$Entry;Lorg/apache/bookkeeper/net/BookieId;Ljava/util/List;Lorg/apache/bookkeeper/replication/Auditor$1;)V
     450: invokeinterface #37,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     455: pop
     456: aload_0
     457: getfield      #11                 // Field mcbForThisLedger:Lorg/apache/bookkeeper/proto/BookkeeperInternalCallbacks$MultiCallback;
     460: iconst_0
     461: aconst_null
     462: aconst_null
     463: invokevirtual #38                 // Method org/apache/bookkeeper/proto/BookkeeperInternalCallbacks$MultiCallback.processResult:(ILjava/lang/String;Ljava/lang/Object;)V
     466: goto          258
     469: return

  public void accept(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #44                 // class org/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger
       5: aload_2
       6: checkcast     #45                 // class java/lang/Throwable
       9: invokevirtual #46                 // Method accept:(Lorg/apache/bookkeeper/util/AvailabilityOfEntriesOfLedger;Ljava/lang/Throwable;)V
      12: return

  org.apache.bookkeeper.replication.Auditor$GetListOfEntriesOfLedgerCallbackForReplicasCheck(long, int, int, int, org.apache.bookkeeper.net.BookieId, java.util.List, java.util.concurrent.ConcurrentHashMap, java.util.concurrent.ConcurrentHashMap, org.apache.bookkeeper.proto.BookkeeperInternalCallbacks$MultiCallback, org.apache.bookkeeper.replication.Auditor$1);
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: iload         4
       5: iload         5
       7: aload         6
       9: aload         7
      11: aload         8
      13: aload         9
      15: aload         10
      17: invokespecial #1                  // Method "<init>":(JIIILorg/apache/bookkeeper/net/BookieId;Ljava/util/List;Ljava/util/concurrent/ConcurrentHashMap;Ljava/util/concurrent/ConcurrentHashMap;Lorg/apache/bookkeeper/proto/BookkeeperInternalCallbacks$MultiCallback;)V
      20: return
}
