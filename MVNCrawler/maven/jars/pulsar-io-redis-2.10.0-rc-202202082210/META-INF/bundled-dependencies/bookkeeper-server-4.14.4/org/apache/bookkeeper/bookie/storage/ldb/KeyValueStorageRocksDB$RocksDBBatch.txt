Compiled from "KeyValueStorageRocksDB.java"
class org.apache.bookkeeper.bookie.storage.ldb.KeyValueStorageRocksDB$RocksDBBatch implements org.apache.bookkeeper.bookie.storage.ldb.KeyValueStorage$Batch {
  private final org.rocksdb.WriteBatch writeBatch;

  final org.apache.bookkeeper.bookie.storage.ldb.KeyValueStorageRocksDB this$0;

  private org.apache.bookkeeper.bookie.storage.ldb.KeyValueStorageRocksDB$RocksDBBatch(org.apache.bookkeeper.bookie.storage.ldb.KeyValueStorageRocksDB);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/apache/bookkeeper/bookie/storage/ldb/KeyValueStorageRocksDB;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #4                  // class org/rocksdb/WriteBatch
      13: dup
      14: invokespecial #5                  // Method org/rocksdb/WriteBatch."<init>":()V
      17: putfield      #6                  // Field writeBatch:Lorg/rocksdb/WriteBatch;
      20: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #6                  // Field writeBatch:Lorg/rocksdb/WriteBatch;
       4: invokevirtual #7                  // Method org/rocksdb/WriteBatch.close:()V
       7: return

  public void put(byte[], byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field writeBatch:Lorg/rocksdb/WriteBatch;
       4: aload_1
       5: aload_2
       6: invokevirtual #8                  // Method org/rocksdb/WriteBatch.put:([B[B)V
       9: goto          24
      12: astore_3
      13: new           #10                 // class java/io/IOException
      16: dup
      17: ldc           #11                 // String Failed to flush RocksDB batch
      19: aload_3
      20: invokespecial #12                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      23: athrow
      24: return
    Exception table:
       from    to  target type
           0     9    12   Class org/rocksdb/RocksDBException

  public void remove(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field writeBatch:Lorg/rocksdb/WriteBatch;
       4: aload_1
       5: invokevirtual #13                 // Method org/rocksdb/WriteBatch.delete:([B)V
       8: goto          23
      11: astore_2
      12: new           #10                 // class java/io/IOException
      15: dup
      16: ldc           #11                 // String Failed to flush RocksDB batch
      18: aload_2
      19: invokespecial #12                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      22: athrow
      23: return
    Exception table:
       from    to  target type
           0     8    11   Class org/rocksdb/RocksDBException

  public void clear();
    Code:
       0: aload_0
       1: getfield      #6                  // Field writeBatch:Lorg/rocksdb/WriteBatch;
       4: invokevirtual #14                 // Method org/rocksdb/WriteBatch.clear:()V
       7: return

  public void deleteRange(byte[], byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field writeBatch:Lorg/rocksdb/WriteBatch;
       4: aload_1
       5: aload_2
       6: invokevirtual #15                 // Method org/rocksdb/WriteBatch.deleteRange:([B[B)V
       9: goto          24
      12: astore_3
      13: new           #10                 // class java/io/IOException
      16: dup
      17: ldc           #11                 // String Failed to flush RocksDB batch
      19: aload_3
      20: invokespecial #12                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      23: athrow
      24: return
    Exception table:
       from    to  target type
           0     9    12   Class org/rocksdb/RocksDBException

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/apache/bookkeeper/bookie/storage/ldb/KeyValueStorageRocksDB;
       4: invokestatic  #16                 // Method org/apache/bookkeeper/bookie/storage/ldb/KeyValueStorageRocksDB.access$400:(Lorg/apache/bookkeeper/bookie/storage/ldb/KeyValueStorageRocksDB;)Lorg/rocksdb/RocksDB;
       7: aload_0
       8: getfield      #2                  // Field this$0:Lorg/apache/bookkeeper/bookie/storage/ldb/KeyValueStorageRocksDB;
      11: invokestatic  #17                 // Method org/apache/bookkeeper/bookie/storage/ldb/KeyValueStorageRocksDB.access$300:(Lorg/apache/bookkeeper/bookie/storage/ldb/KeyValueStorageRocksDB;)Lorg/rocksdb/WriteOptions;
      14: aload_0
      15: getfield      #6                  // Field writeBatch:Lorg/rocksdb/WriteBatch;
      18: invokevirtual #18                 // Method org/rocksdb/RocksDB.write:(Lorg/rocksdb/WriteOptions;Lorg/rocksdb/WriteBatch;)V
      21: goto          36
      24: astore_1
      25: new           #10                 // class java/io/IOException
      28: dup
      29: ldc           #11                 // String Failed to flush RocksDB batch
      31: aload_1
      32: invokespecial #12                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      35: athrow
      36: return
    Exception table:
       from    to  target type
           0    21    24   Class org/rocksdb/RocksDBException

  org.apache.bookkeeper.bookie.storage.ldb.KeyValueStorageRocksDB$RocksDBBatch(org.apache.bookkeeper.bookie.storage.ldb.KeyValueStorageRocksDB, org.apache.bookkeeper.bookie.storage.ldb.KeyValueStorageRocksDB$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/apache/bookkeeper/bookie/storage/ldb/KeyValueStorageRocksDB;)V
       5: return
}
