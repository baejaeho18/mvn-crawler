Compiled from "ScrubberService.java"
public class org.apache.bookkeeper.server.service.ScrubberService extends org.apache.bookkeeper.server.component.ServerLifecycleComponent {
  private static final org.slf4j.Logger LOG;

  private static final java.lang.String NAME;

  private final java.util.concurrent.ScheduledExecutorService executor;

  private final java.util.Random rng;

  private final long scrubPeriod;

  private final java.util.Optional<com.google.common.util.concurrent.RateLimiter> scrubRateLimiter;

  private final java.util.concurrent.atomic.AtomicBoolean stop;

  private final org.apache.bookkeeper.bookie.LedgerStorage ledgerStorage;

  private final org.apache.bookkeeper.stats.OpStatsLogger scrubCounter;

  private final org.apache.bookkeeper.stats.Counter errorCounter;

  private final org.apache.bookkeeper.stats.Counter fatalErrorCounter;

  public org.apache.bookkeeper.server.service.ScrubberService(org.apache.bookkeeper.stats.StatsLogger, org.apache.bookkeeper.server.conf.BookieConfiguration, org.apache.bookkeeper.bookie.LedgerStorage);
    Code:
       0: aload_0
       1: ldc           #3                  // String scrubber
       3: aload_2
       4: aload_1
       5: invokespecial #4                  // Method org/apache/bookkeeper/server/component/ServerLifecycleComponent."<init>":(Ljava/lang/String;Lorg/apache/bookkeeper/server/conf/BookieConfiguration;Lorg/apache/bookkeeper/stats/StatsLogger;)V
       8: aload_0
       9: new           #5                  // class java/util/Random
      12: dup
      13: invokespecial #6                  // Method java/util/Random."<init>":()V
      16: putfield      #7                  // Field rng:Ljava/util/Random;
      19: aload_0
      20: new           #8                  // class java/util/concurrent/atomic/AtomicBoolean
      23: dup
      24: iconst_0
      25: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      28: putfield      #10                 // Field stop:Ljava/util/concurrent/atomic/AtomicBoolean;
      31: aload_0
      32: new           #11                 // class io/netty/util/concurrent/DefaultThreadFactory
      35: dup
      36: ldc           #12                 // String ScrubThread
      38: invokespecial #13                 // Method io/netty/util/concurrent/DefaultThreadFactory."<init>":(Ljava/lang/String;)V
      41: invokestatic  #14                 // Method java/util/concurrent/Executors.newSingleThreadScheduledExecutor:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;
      44: putfield      #15                 // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      47: aload_0
      48: aload_2
      49: invokevirtual #16                 // Method org/apache/bookkeeper/server/conf/BookieConfiguration.getServerConf:()Lorg/apache/bookkeeper/conf/ServerConfiguration;
      52: invokevirtual #17                 // Method org/apache/bookkeeper/conf/ServerConfiguration.getLocalScrubPeriod:()J
      55: putfield      #18                 // Field scrubPeriod:J
      58: aload_0
      59: getfield      #18                 // Field scrubPeriod:J
      62: lconst_0
      63: lcmp
      64: ifle          71
      67: iconst_1
      68: goto          72
      71: iconst_0
      72: ldc           #19                 // String localScrubInterval must be > 0 for ScrubberService to be used
      74: invokestatic  #20                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      77: aload_2
      78: invokevirtual #16                 // Method org/apache/bookkeeper/server/conf/BookieConfiguration.getServerConf:()Lorg/apache/bookkeeper/conf/ServerConfiguration;
      81: invokevirtual #21                 // Method org/apache/bookkeeper/conf/ServerConfiguration.getLocalScrubRateLimit:()D
      84: dstore        4
      86: aload_0
      87: dload         4
      89: dconst_0
      90: dcmpl
      91: ifne          100
      94: invokestatic  #22                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      97: goto          108
     100: dload         4
     102: invokestatic  #23                 // Method com/google/common/util/concurrent/RateLimiter.create:(D)Lcom/google/common/util/concurrent/RateLimiter;
     105: invokestatic  #24                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
     108: putfield      #25                 // Field scrubRateLimiter:Ljava/util/Optional;
     111: aload_0
     112: aload_3
     113: putfield      #26                 // Field ledgerStorage:Lorg/apache/bookkeeper/bookie/LedgerStorage;
     116: aload_0
     117: aload_1
     118: ldc           #27                 // String runTime
     120: invokeinterface #28,  2           // InterfaceMethod org/apache/bookkeeper/stats/StatsLogger.getOpStatsLogger:(Ljava/lang/String;)Lorg/apache/bookkeeper/stats/OpStatsLogger;
     125: putfield      #29                 // Field scrubCounter:Lorg/apache/bookkeeper/stats/OpStatsLogger;
     128: aload_0
     129: aload_1
     130: ldc           #30                 // String detectedScrubErrors
     132: invokeinterface #31,  2           // InterfaceMethod org/apache/bookkeeper/stats/StatsLogger.getCounter:(Ljava/lang/String;)Lorg/apache/bookkeeper/stats/Counter;
     137: putfield      #32                 // Field errorCounter:Lorg/apache/bookkeeper/stats/Counter;
     140: aload_0
     141: aload_1
     142: ldc           #33                 // String detectedFatalScrubErrors
     144: invokeinterface #31,  2           // InterfaceMethod org/apache/bookkeeper/stats/StatsLogger.getCounter:(Ljava/lang/String;)Lorg/apache/bookkeeper/stats/Counter;
     149: putfield      #34                 // Field fatalErrorCounter:Lorg/apache/bookkeeper/stats/Counter;
     152: return

  private long getNextPeriodMS();
    Code:
       0: aload_0
       1: getfield      #18                 // Field scrubPeriod:J
       4: l2d
       5: ldc2_w        #35                 // double 1.5d
       8: aload_0
       9: getfield      #7                  // Field rng:Ljava/util/Random;
      12: invokevirtual #37                 // Method java/util/Random.nextDouble:()D
      15: dsub
      16: dmul
      17: ldc2_w        #38                 // double 1000.0d
      20: dmul
      21: d2l
      22: lreturn

  private void doSchedule();
    Code:
       0: aload_0
       1: getfield      #15                 // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_0
       5: invokedynamic #40,  0             // InvokeDynamic #0:run:(Lorg/apache/bookkeeper/server/service/ScrubberService;)Ljava/lang/Runnable;
      10: aload_0
      11: invokespecial #41                 // Method getNextPeriodMS:()J
      14: getstatic     #42                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      17: invokeinterface #43,  5           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      22: pop
      23: return

  private void run();
    Code:
       0: iconst_0
       1: istore_1
       2: invokestatic  #44                 // Method org/apache/bookkeeper/util/MathUtils.nowInNano:()J
       5: lstore_2
       6: aload_0
       7: getfield      #26                 // Field ledgerStorage:Lorg/apache/bookkeeper/bookie/LedgerStorage;
      10: aload_0
      11: getfield      #25                 // Field scrubRateLimiter:Ljava/util/Optional;
      14: invokeinterface #45,  2           // InterfaceMethod org/apache/bookkeeper/bookie/LedgerStorage.localConsistencyCheck:(Ljava/util/Optional;)Ljava/util/List;
      19: astore        4
      21: aload         4
      23: invokeinterface #46,  1           // InterfaceMethod java/util/List.size:()I
      28: ifle          136
      31: aload_0
      32: getfield      #32                 // Field errorCounter:Lorg/apache/bookkeeper/stats/Counter;
      35: aload         4
      37: invokeinterface #46,  1           // InterfaceMethod java/util/List.size:()I
      42: i2l
      43: invokeinterface #47,  3           // InterfaceMethod org/apache/bookkeeper/stats/Counter.add:(J)V
      48: getstatic     #48                 // Field LOG:Lorg/slf4j/Logger;
      51: ldc           #49                 // String Found inconsistency during localConsistencyCheck:
      53: invokeinterface #50,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      58: aload         4
      60: invokeinterface #51,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      65: astore        5
      67: aload         5
      69: invokeinterface #52,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      74: ifeq          136
      77: aload         5
      79: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      84: checkcast     #54                 // class org/apache/bookkeeper/bookie/LedgerStorage$DetectedInconsistency
      87: astore        6
      89: getstatic     #48                 // Field LOG:Lorg/slf4j/Logger;
      92: ldc           #55                 // String Ledger {}, entry {}:
      94: iconst_3
      95: anewarray     #56                 // class java/lang/Object
      98: dup
      99: iconst_0
     100: aload         6
     102: invokevirtual #57                 // Method org/apache/bookkeeper/bookie/LedgerStorage$DetectedInconsistency.getLedgerId:()J
     105: invokestatic  #58                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     108: aastore
     109: dup
     110: iconst_1
     111: aload         6
     113: invokevirtual #59                 // Method org/apache/bookkeeper/bookie/LedgerStorage$DetectedInconsistency.getEntryId:()J
     116: invokestatic  #58                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     119: aastore
     120: dup
     121: iconst_2
     122: aload         6
     124: invokevirtual #60                 // Method org/apache/bookkeeper/bookie/LedgerStorage$DetectedInconsistency.getException:()Ljava/lang/Exception;
     127: aastore
     128: invokeinterface #61,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;[Ljava/lang/Object;)V
     133: goto          67
     136: iconst_1
     137: istore_1
     138: goto          167
     141: astore        4
     143: aload_0
     144: getfield      #34                 // Field fatalErrorCounter:Lorg/apache/bookkeeper/stats/Counter;
     147: invokeinterface #63,  1           // InterfaceMethod org/apache/bookkeeper/stats/Counter.inc:()V
     152: getstatic     #48                 // Field LOG:Lorg/slf4j/Logger;
     155: ldc           #64                 // String Got fatal exception {} running localConsistencyCheck
     157: aload         4
     159: invokevirtual #65                 // Method java/io/IOException.toString:()Ljava/lang/String;
     162: invokeinterface #66,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
     167: iload_1
     168: ifeq          190
     171: aload_0
     172: getfield      #29                 // Field scrubCounter:Lorg/apache/bookkeeper/stats/OpStatsLogger;
     175: lload_2
     176: invokestatic  #67                 // Method org/apache/bookkeeper/util/MathUtils.elapsedNanos:(J)J
     179: getstatic     #68                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     182: invokeinterface #69,  4           // InterfaceMethod org/apache/bookkeeper/stats/OpStatsLogger.registerSuccessfulEvent:(JLjava/util/concurrent/TimeUnit;)V
     187: goto          213
     190: aload_0
     191: getfield      #29                 // Field scrubCounter:Lorg/apache/bookkeeper/stats/OpStatsLogger;
     194: lload_2
     195: invokestatic  #67                 // Method org/apache/bookkeeper/util/MathUtils.elapsedNanos:(J)J
     198: getstatic     #68                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     201: invokeinterface #70,  4           // InterfaceMethod org/apache/bookkeeper/stats/OpStatsLogger.registerFailedEvent:(JLjava/util/concurrent/TimeUnit;)V
     206: invokestatic  #71                 // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
     209: iconst_5
     210: invokevirtual #73                 // Method java/lang/Runtime.exit:(I)V
     213: aload_0
     214: getfield      #10                 // Field stop:Ljava/util/concurrent/atomic/AtomicBoolean;
     217: invokevirtual #74                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     220: ifne          227
     223: aload_0
     224: invokespecial #75                 // Method doSchedule:()V
     227: return
    Exception table:
       from    to  target type
           6   138   141   Class java/io/IOException

  protected void doStart();
    Code:
       0: aload_0
       1: invokespecial #75                 // Method doSchedule:()V
       4: return

  protected void doStop();
    Code:
       0: aload_0
       1: getfield      #10                 // Field stop:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: invokevirtual #76                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: aload_0
       9: getfield      #15                 // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      12: invokeinterface #77,  1           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.shutdown:()V
      17: return

  protected void doClose() throws java.io.IOException;
    Code:
       0: return

  static {};
    Code:
       0: ldc           #2                  // class org/apache/bookkeeper/server/service/ScrubberService
       2: invokestatic  #78                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #48                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
