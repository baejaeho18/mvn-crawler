Compiled from "SkipListArena.java"
class org.apache.bookkeeper.bookie.SkipListArena$Chunk {
  private byte[] data;

  private static final int UNINITIALIZED;

  private static final int OOM;

  private java.util.concurrent.atomic.AtomicInteger nextFreeOffset;

  private java.util.concurrent.atomic.AtomicInteger allocCount;

  private final int size;

  static final boolean $assertionsDisabled;

  private org.apache.bookkeeper.bookie.SkipListArena$Chunk(int);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: iconst_m1
      10: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      13: putfield      #7                  // Field nextFreeOffset:Ljava/util/concurrent/atomic/AtomicInteger;
      16: aload_0
      17: new           #4                  // class java/util/concurrent/atomic/AtomicInteger
      20: dup
      21: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      24: putfield      #9                  // Field allocCount:Ljava/util/concurrent/atomic/AtomicInteger;
      27: aload_0
      28: iload_1
      29: putfield      #10                 // Field size:I
      32: return

  public void init();
    Code:
       0: getstatic     #11                 // Field $assertionsDisabled:Z
       3: ifne          25
       6: aload_0
       7: getfield      #7                  // Field nextFreeOffset:Ljava/util/concurrent/atomic/AtomicInteger;
      10: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      13: iconst_m1
      14: if_icmpeq     25
      17: new           #13                 // class java/lang/AssertionError
      20: dup
      21: invokespecial #14                 // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: aload_0
      26: aload_0
      27: getfield      #10                 // Field size:I
      30: newarray       byte
      32: putfield      #2                  // Field data:[B
      35: goto          70
      38: astore_1
      39: aload_0
      40: getfield      #7                  // Field nextFreeOffset:Ljava/util/concurrent/atomic/AtomicInteger;
      43: iconst_m1
      44: bipush        -2
      46: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
      49: istore_2
      50: getstatic     #11                 // Field $assertionsDisabled:Z
      53: ifne          68
      56: iload_2
      57: ifne          68
      60: new           #13                 // class java/lang/AssertionError
      63: dup
      64: invokespecial #14                 // Method java/lang/AssertionError."<init>":()V
      67: athrow
      68: aload_1
      69: athrow
      70: aload_0
      71: getfield      #7                  // Field nextFreeOffset:Ljava/util/concurrent/atomic/AtomicInteger;
      74: iconst_m1
      75: iconst_0
      76: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
      79: istore_1
      80: getstatic     #11                 // Field $assertionsDisabled:Z
      83: ifne          98
      86: iload_1
      87: ifne          98
      90: new           #13                 // class java/lang/AssertionError
      93: dup
      94: invokespecial #14                 // Method java/lang/AssertionError."<init>":()V
      97: athrow
      98: return
    Exception table:
       from    to  target type
          25    35    38   Class java/lang/OutOfMemoryError

  public int alloc(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field nextFreeOffset:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: istore_2
       8: iload_2
       9: iconst_m1
      10: if_icmpne     19
      13: invokestatic  #17                 // Method java/lang/Thread.yield:()V
      16: goto          0
      19: iload_2
      20: bipush        -2
      22: if_icmpne     27
      25: iconst_m1
      26: ireturn
      27: iload_2
      28: iload_1
      29: iadd
      30: aload_0
      31: getfield      #2                  // Field data:[B
      34: arraylength
      35: if_icmple     40
      38: iconst_m1
      39: ireturn
      40: aload_0
      41: getfield      #7                  // Field nextFreeOffset:Ljava/util/concurrent/atomic/AtomicInteger;
      44: iload_2
      45: iload_2
      46: iload_1
      47: iadd
      48: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
      51: ifeq          64
      54: aload_0
      55: getfield      #9                  // Field allocCount:Ljava/util/concurrent/atomic/AtomicInteger;
      58: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      61: pop
      62: iload_2
      63: ireturn
      64: goto          0

  public java.lang.String toString();
    Code:
       0: new           #19                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #21                 // String Chunk@
       9: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokestatic  #23                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      16: invokevirtual #24                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #25                 // String : used(
      21: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #9                  // Field allocCount:Ljava/util/concurrent/atomic/AtomicInteger;
      28: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      31: invokevirtual #24                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      34: ldc           #26                 // String ), free(
      36: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: getfield      #2                  // Field data:[B
      43: arraylength
      44: aload_0
      45: getfield      #7                  // Field nextFreeOffset:Ljava/util/concurrent/atomic/AtomicInteger;
      48: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      51: isub
      52: invokevirtual #24                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      55: ldc           #27                 // String )
      57: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: areturn

  static byte[] access$000(org.apache.bookkeeper.bookie.SkipListArena$Chunk);
    Code:
       0: aload_0
       1: getfield      #2                  // Field data:[B
       4: areturn

  org.apache.bookkeeper.bookie.SkipListArena$Chunk(int, org.apache.bookkeeper.bookie.SkipListArena$1);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method "<init>":(I)V
       5: return

  static {};
    Code:
       0: ldc           #29                 // class org/apache/bookkeeper/bookie/SkipListArena
       2: invokevirtual #30                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #11                 // Field $assertionsDisabled:Z
      16: return
}
