Compiled from "ZooKeeperClient.java"
class org.apache.bookkeeper.zookeeper.ZooKeeperClient$7 extends org.apache.bookkeeper.zookeeper.ZooKeeperClient$ZkRetryRunnable {
  final org.apache.zookeeper.AsyncCallback$StatCallback stCb;

  final org.apache.zookeeper.AsyncCallback$StatCallback val$cb;

  final java.lang.Object val$context;

  final java.lang.String val$path;

  final java.util.List val$acl;

  final int val$version;

  final org.apache.bookkeeper.zookeeper.ZooKeeperClient this$0;

  org.apache.bookkeeper.zookeeper.ZooKeeperClient$7(org.apache.bookkeeper.zookeeper.ZooKeeperClient, org.apache.bookkeeper.zookeeper.RetryPolicy, com.google.common.util.concurrent.RateLimiter, org.apache.bookkeeper.stats.OpStatsLogger, org.apache.zookeeper.AsyncCallback$StatCallback, java.lang.Object, java.lang.String, java.util.List, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/bookkeeper/zookeeper/ZooKeeperClient;
       5: aload_0
       6: aload         5
       8: putfield      #2                  // Field val$cb:Lorg/apache/zookeeper/AsyncCallback$StatCallback;
      11: aload_0
      12: aload         6
      14: putfield      #3                  // Field val$context:Ljava/lang/Object;
      17: aload_0
      18: aload         7
      20: putfield      #4                  // Field val$path:Ljava/lang/String;
      23: aload_0
      24: aload         8
      26: putfield      #5                  // Field val$acl:Ljava/util/List;
      29: aload_0
      30: iload         9
      32: putfield      #6                  // Field val$version:I
      35: aload_0
      36: aload_2
      37: aload_3
      38: aload         4
      40: invokespecial #7                  // Method org/apache/bookkeeper/zookeeper/ZooKeeperClient$ZkRetryRunnable."<init>":(Lorg/apache/bookkeeper/zookeeper/RetryPolicy;Lcom/google/common/util/concurrent/RateLimiter;Lorg/apache/bookkeeper/stats/OpStatsLogger;)V
      43: aload_0
      44: new           #8                  // class org/apache/bookkeeper/zookeeper/ZooKeeperClient$7$1
      47: dup
      48: aload_0
      49: invokespecial #9                  // Method org/apache/bookkeeper/zookeeper/ZooKeeperClient$7$1."<init>":(Lorg/apache/bookkeeper/zookeeper/ZooKeeperClient$7;)V
      52: putfield      #10                 // Field stCb:Lorg/apache/zookeeper/AsyncCallback$StatCallback;
      55: return

  public java.lang.String toString();
    Code:
       0: ldc           #11                 // String setACL (%s, acl = %s, version = %d)
       2: iconst_3
       3: anewarray     #12                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: getfield      #4                  // Field val$path:Ljava/lang/String;
      12: aastore
      13: dup
      14: iconst_1
      15: aload_0
      16: getfield      #5                  // Field val$acl:Ljava/util/List;
      19: aastore
      20: dup
      21: iconst_2
      22: aload_0
      23: getfield      #6                  // Field val$version:I
      26: invokestatic  #13                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      29: aastore
      30: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      33: areturn

  void zkRun();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/bookkeeper/zookeeper/ZooKeeperClient;
       4: invokestatic  #15                 // Method org/apache/bookkeeper/zookeeper/ZooKeeperClient.access$300:(Lorg/apache/bookkeeper/zookeeper/ZooKeeperClient;)Ljava/util/concurrent/atomic/AtomicReference;
       7: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      10: checkcast     #17                 // class org/apache/zookeeper/ZooKeeper
      13: astore_1
      14: aconst_null
      15: aload_1
      16: if_acmpne     49
      19: aload_0
      20: getfield      #1                  // Field this$0:Lorg/apache/bookkeeper/zookeeper/ZooKeeperClient;
      23: aload_0
      24: getfield      #4                  // Field val$path:Ljava/lang/String;
      27: aload_0
      28: getfield      #5                  // Field val$acl:Ljava/util/List;
      31: aload_0
      32: getfield      #6                  // Field val$version:I
      35: aload_0
      36: getfield      #10                 // Field stCb:Lorg/apache/zookeeper/AsyncCallback$StatCallback;
      39: aload_0
      40: getfield      #18                 // Field worker:Lorg/apache/bookkeeper/zookeeper/ZooWorker;
      43: invokestatic  #19                 // Method org/apache/bookkeeper/zookeeper/ZooKeeperClient.access$1501:(Lorg/apache/bookkeeper/zookeeper/ZooKeeperClient;Ljava/lang/String;Ljava/util/List;ILorg/apache/zookeeper/AsyncCallback$StatCallback;Ljava/lang/Object;)V
      46: goto          73
      49: aload_1
      50: aload_0
      51: getfield      #4                  // Field val$path:Ljava/lang/String;
      54: aload_0
      55: getfield      #5                  // Field val$acl:Ljava/util/List;
      58: aload_0
      59: getfield      #6                  // Field val$version:I
      62: aload_0
      63: getfield      #10                 // Field stCb:Lorg/apache/zookeeper/AsyncCallback$StatCallback;
      66: aload_0
      67: getfield      #18                 // Field worker:Lorg/apache/bookkeeper/zookeeper/ZooWorker;
      70: invokevirtual #20                 // Method org/apache/zookeeper/ZooKeeper.setACL:(Ljava/lang/String;Ljava/util/List;ILorg/apache/zookeeper/AsyncCallback$StatCallback;Ljava/lang/Object;)V
      73: return
}
