Compiled from "MSLedgerManagerFactory.java"
public class org.apache.bookkeeper.meta.MSLedgerManagerFactory$MsLedgerManager$ReadLedgerMetadataTask implements java.lang.Runnable {
  final long ledgerId;

  final org.apache.bookkeeper.meta.MSLedgerManagerFactory$MsLedgerManager this$0;

  org.apache.bookkeeper.meta.MSLedgerManagerFactory$MsLedgerManager$ReadLedgerMetadataTask(org.apache.bookkeeper.meta.MSLedgerManagerFactory$MsLedgerManager, long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/apache/bookkeeper/meta/MSLedgerManagerFactory$MsLedgerManager;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: lload_2
      11: putfield      #4                  // Field ledgerId:J
      14: return

  public void run();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #2                  // Field this$0:Lorg/apache/bookkeeper/meta/MSLedgerManagerFactory$MsLedgerManager;
       5: getfield      #5                  // Field org/apache/bookkeeper/meta/MSLedgerManagerFactory$MsLedgerManager.listeners:Ljava/util/concurrent/ConcurrentMap;
       8: aload_0
       9: getfield      #4                  // Field ledgerId:J
      12: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      15: invokeinterface #7,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: if_acmpeq     75
      23: invokestatic  #8                  // Method org/apache/bookkeeper/meta/MSLedgerManagerFactory.access$000:()Lorg/slf4j/Logger;
      26: invokeinterface #9,  1            // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      31: ifeq          51
      34: invokestatic  #8                  // Method org/apache/bookkeeper/meta/MSLedgerManagerFactory.access$000:()Lorg/slf4j/Logger;
      37: ldc           #10                 // String Re-read ledger metadata for {}.
      39: aload_0
      40: getfield      #4                  // Field ledgerId:J
      43: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      46: invokeinterface #11,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      51: aload_0
      52: getfield      #2                  // Field this$0:Lorg/apache/bookkeeper/meta/MSLedgerManagerFactory$MsLedgerManager;
      55: aload_0
      56: getfield      #4                  // Field ledgerId:J
      59: invokevirtual #12                 // Method org/apache/bookkeeper/meta/MSLedgerManagerFactory$MsLedgerManager.readLedgerMetadata:(J)Ljava/util/concurrent/CompletableFuture;
      62: aload_0
      63: invokedynamic #13,  0             // InvokeDynamic #0:accept:(Lorg/apache/bookkeeper/meta/MSLedgerManagerFactory$MsLedgerManager$ReadLedgerMetadataTask;)Ljava/util/function/BiConsumer;
      68: invokevirtual #14                 // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
      71: pop
      72: goto          103
      75: invokestatic  #8                  // Method org/apache/bookkeeper/meta/MSLedgerManagerFactory.access$000:()Lorg/slf4j/Logger;
      78: invokeinterface #9,  1            // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      83: ifeq          103
      86: invokestatic  #8                  // Method org/apache/bookkeeper/meta/MSLedgerManagerFactory.access$000:()Lorg/slf4j/Logger;
      89: ldc           #15                 // String Ledger metadata listener for ledger {} is already removed.
      91: aload_0
      92: getfield      #4                  // Field ledgerId:J
      95: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      98: invokeinterface #11,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     103: return

  private void handleMetadata(org.apache.bookkeeper.versioning.Versioned<org.apache.bookkeeper.client.api.LedgerMetadata>, java.lang.Throwable);
    Code:
       0: aload_2
       1: ifnonnull     88
       4: aload_0
       5: getfield      #2                  // Field this$0:Lorg/apache/bookkeeper/meta/MSLedgerManagerFactory$MsLedgerManager;
       8: getfield      #5                  // Field org/apache/bookkeeper/meta/MSLedgerManagerFactory$MsLedgerManager.listeners:Ljava/util/concurrent/ConcurrentMap;
      11: aload_0
      12: getfield      #4                  // Field ledgerId:J
      15: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      18: invokeinterface #7,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #16                 // class java/util/Set
      26: astore_3
      27: aconst_null
      28: aload_3
      29: if_acmpeq     85
      32: invokestatic  #8                  // Method org/apache/bookkeeper/meta/MSLedgerManagerFactory.access$000:()Lorg/slf4j/Logger;
      35: invokeinterface #9,  1            // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      40: ifeq          64
      43: invokestatic  #8                  // Method org/apache/bookkeeper/meta/MSLedgerManagerFactory.access$000:()Lorg/slf4j/Logger;
      46: ldc           #17                 // String Ledger metadata is changed for {} : {}.
      48: aload_0
      49: getfield      #4                  // Field ledgerId:J
      52: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      55: aload_1
      56: invokevirtual #18                 // Method org/apache/bookkeeper/versioning/Versioned.getValue:()Ljava/lang/Object;
      59: invokeinterface #19,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      64: aload_0
      65: getfield      #2                  // Field this$0:Lorg/apache/bookkeeper/meta/MSLedgerManagerFactory$MsLedgerManager;
      68: getfield      #20                 // Field org/apache/bookkeeper/meta/MSLedgerManagerFactory$MsLedgerManager.scheduler:Ljava/util/concurrent/ScheduledExecutorService;
      71: aload_0
      72: aload_3
      73: aload_1
      74: invokedynamic #21,  0             // InvokeDynamic #1:run:(Lorg/apache/bookkeeper/meta/MSLedgerManagerFactory$MsLedgerManager$ReadLedgerMetadataTask;Ljava/util/Set;Lorg/apache/bookkeeper/versioning/Versioned;)Ljava/lang/Runnable;
      79: invokeinterface #22,  2           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
      84: pop
      85: goto          209
      88: aload_2
      89: invokestatic  #23                 // Method org/apache/bookkeeper/client/BKException.getExceptionCode:(Ljava/lang/Throwable;)I
      92: bipush        -25
      94: if_icmpne     165
      97: aload_0
      98: getfield      #2                  // Field this$0:Lorg/apache/bookkeeper/meta/MSLedgerManagerFactory$MsLedgerManager;
     101: getfield      #5                  // Field org/apache/bookkeeper/meta/MSLedgerManagerFactory$MsLedgerManager.listeners:Ljava/util/concurrent/ConcurrentMap;
     104: aload_0
     105: getfield      #4                  // Field ledgerId:J
     108: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     111: invokeinterface #25,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     116: checkcast     #16                 // class java/util/Set
     119: astore_3
     120: aconst_null
     121: aload_3
     122: if_acmpeq     162
     125: invokestatic  #8                  // Method org/apache/bookkeeper/meta/MSLedgerManagerFactory.access$000:()Lorg/slf4j/Logger;
     128: invokeinterface #9,  1            // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     133: ifeq          162
     136: invokestatic  #8                  // Method org/apache/bookkeeper/meta/MSLedgerManagerFactory.access$000:()Lorg/slf4j/Logger;
     139: ldc           #26                 // String Removed ledger metadata listener set on ledger {} as its ledger is deleted : {}
     141: aload_0
     142: getfield      #4                  // Field ledgerId:J
     145: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     148: aload_3
     149: invokeinterface #27,  1           // InterfaceMethod java/util/Set.size:()I
     154: invokestatic  #28                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     157: invokeinterface #19,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     162: goto          209
     165: invokestatic  #8                  // Method org/apache/bookkeeper/meta/MSLedgerManagerFactory.access$000:()Lorg/slf4j/Logger;
     168: ldc           #29                 // String Failed on read ledger metadata of ledger {}: {}
     170: aload_0
     171: getfield      #4                  // Field ledgerId:J
     174: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     177: aload_2
     178: invokestatic  #23                 // Method org/apache/bookkeeper/client/BKException.getExceptionCode:(Ljava/lang/Throwable;)I
     181: invokestatic  #28                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     184: invokeinterface #30,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     189: aload_0
     190: getfield      #2                  // Field this$0:Lorg/apache/bookkeeper/meta/MSLedgerManagerFactory$MsLedgerManager;
     193: getfield      #20                 // Field org/apache/bookkeeper/meta/MSLedgerManagerFactory$MsLedgerManager.scheduler:Ljava/util/concurrent/ScheduledExecutorService;
     196: aload_0
     197: ldc2_w        #31                 // long 200l
     200: getstatic     #33                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     203: invokeinterface #34,  5           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
     208: pop
     209: return

  private void lambda$handleMetadata$1(java.util.Set, org.apache.bookkeeper.versioning.Versioned);
    Code:
       0: aload_1
       1: dup
       2: astore_3
       3: monitorenter
       4: aload_1
       5: invokeinterface #35,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      10: astore        4
      12: aload         4
      14: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          49
      22: aload         4
      24: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #38                 // class org/apache/bookkeeper/proto/BookkeeperInternalCallbacks$LedgerMetadataListener
      32: astore        5
      34: aload         5
      36: aload_0
      37: getfield      #4                  // Field ledgerId:J
      40: aload_2
      41: invokeinterface #39,  4           // InterfaceMethod org/apache/bookkeeper/proto/BookkeeperInternalCallbacks$LedgerMetadataListener.onChanged:(JLorg/apache/bookkeeper/versioning/Versioned;)V
      46: goto          12
      49: aload_3
      50: monitorexit
      51: goto          61
      54: astore        6
      56: aload_3
      57: monitorexit
      58: aload         6
      60: athrow
      61: return
    Exception table:
       from    to  target type
           4    51    54   any
          54    58    54   any

  private void lambda$run$0(org.apache.bookkeeper.versioning.Versioned, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #40                 // Method handleMetadata:(Lorg/apache/bookkeeper/versioning/Versioned;Ljava/lang/Throwable;)V
       6: return
}
