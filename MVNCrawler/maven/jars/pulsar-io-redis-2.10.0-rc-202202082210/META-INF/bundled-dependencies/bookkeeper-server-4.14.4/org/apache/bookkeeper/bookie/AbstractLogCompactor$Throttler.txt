Compiled from "AbstractLogCompactor.java"
class org.apache.bookkeeper.bookie.AbstractLogCompactor$Throttler {
  private final com.google.common.util.concurrent.RateLimiter rateLimiter;

  private final boolean isThrottleByBytes;

  org.apache.bookkeeper.bookie.AbstractLogCompactor$Throttler(org.apache.bookkeeper.conf.ServerConfiguration);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #2                  // Method org/apache/bookkeeper/conf/ServerConfiguration.getIsThrottleByBytes:()Z
       9: putfield      #3                  // Field isThrottleByBytes:Z
      12: aload_0
      13: aload_0
      14: getfield      #3                  // Field isThrottleByBytes:Z
      17: ifeq          28
      20: aload_1
      21: invokevirtual #4                  // Method org/apache/bookkeeper/conf/ServerConfiguration.getCompactionRateByBytes:()I
      24: i2d
      25: goto          33
      28: aload_1
      29: invokevirtual #5                  // Method org/apache/bookkeeper/conf/ServerConfiguration.getCompactionRateByEntries:()I
      32: i2d
      33: invokestatic  #6                  // Method com/google/common/util/concurrent/RateLimiter.create:(D)Lcom/google/common/util/concurrent/RateLimiter;
      36: putfield      #7                  // Field rateLimiter:Lcom/google/common/util/concurrent/RateLimiter;
      39: return

  void acquire(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field rateLimiter:Lcom/google/common/util/concurrent/RateLimiter;
       4: aload_0
       5: getfield      #3                  // Field isThrottleByBytes:Z
       8: ifeq          15
      11: iload_1
      12: goto          16
      15: iconst_1
      16: invokevirtual #8                  // Method com/google/common/util/concurrent/RateLimiter.acquire:(I)D
      19: pop2
      20: return
}
