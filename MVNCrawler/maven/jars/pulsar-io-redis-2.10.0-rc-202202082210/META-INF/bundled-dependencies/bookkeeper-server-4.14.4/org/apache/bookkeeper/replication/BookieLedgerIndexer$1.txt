Compiled from "BookieLedgerIndexer.java"
class org.apache.bookkeeper.replication.BookieLedgerIndexer$1 implements org.apache.bookkeeper.proto.BookkeeperInternalCallbacks$Processor<java.lang.Long> {
  final java.util.concurrent.ConcurrentHashMap val$bookie2ledgersMap;

  final org.apache.bookkeeper.replication.BookieLedgerIndexer this$0;

  org.apache.bookkeeper.replication.BookieLedgerIndexer$1(org.apache.bookkeeper.replication.BookieLedgerIndexer, java.util.concurrent.ConcurrentHashMap);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/bookkeeper/replication/BookieLedgerIndexer;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$bookie2ledgersMap:Ljava/util/concurrent/ConcurrentHashMap;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public void process(java.lang.Long, org.apache.zookeeper.AsyncCallback$VoidCallback);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/bookkeeper/replication/BookieLedgerIndexer;
       4: invokestatic  #4                  // Method org/apache/bookkeeper/replication/BookieLedgerIndexer.access$000:(Lorg/apache/bookkeeper/replication/BookieLedgerIndexer;)Lorg/apache/bookkeeper/meta/LedgerManager;
       7: aload_1
       8: invokevirtual #5                  // Method java/lang/Long.longValue:()J
      11: invokeinterface #6,  3            // InterfaceMethod org/apache/bookkeeper/meta/LedgerManager.readLedgerMetadata:(J)Ljava/util/concurrent/CompletableFuture;
      16: aload_0
      17: aload_0
      18: getfield      #2                  // Field val$bookie2ledgersMap:Ljava/util/concurrent/ConcurrentHashMap;
      21: aload_1
      22: aload_2
      23: invokedynamic #7,  0              // InvokeDynamic #0:accept:(Lorg/apache/bookkeeper/replication/BookieLedgerIndexer$1;Ljava/util/concurrent/ConcurrentHashMap;Ljava/lang/Long;Lorg/apache/zookeeper/AsyncCallback$VoidCallback;)Ljava/util/function/BiConsumer;
      28: invokevirtual #8                  // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
      31: pop
      32: return

  public void process(java.lang.Object, org.apache.zookeeper.AsyncCallback$VoidCallback);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #9                  // class java/lang/Long
       5: aload_2
       6: invokevirtual #10                 // Method process:(Ljava/lang/Long;Lorg/apache/zookeeper/AsyncCallback$VoidCallback;)V
       9: return

  private void lambda$process$0(java.util.concurrent.ConcurrentHashMap, java.lang.Long, org.apache.zookeeper.AsyncCallback$VoidCallback, org.apache.bookkeeper.versioning.Versioned, java.lang.Throwable);
    Code:
       0: aload         5
       2: ifnonnull     126
       5: aload         4
       7: invokevirtual #11                 // Method org/apache/bookkeeper/versioning/Versioned.getValue:()Ljava/lang/Object;
      10: checkcast     #12                 // class org/apache/bookkeeper/client/api/LedgerMetadata
      13: invokeinterface #13,  1           // InterfaceMethod org/apache/bookkeeper/client/api/LedgerMetadata.getAllEnsembles:()Ljava/util/NavigableMap;
      18: invokeinterface #14,  1           // InterfaceMethod java/util/NavigableMap.entrySet:()Ljava/util/Set;
      23: invokeinterface #15,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      28: astore        6
      30: aload         6
      32: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          114
      40: aload         6
      42: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #18                 // class java/util/Map$Entry
      50: astore        7
      52: aload         7
      54: invokeinterface #19,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      59: checkcast     #20                 // class java/util/List
      62: invokeinterface #21,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      67: astore        8
      69: aload         8
      71: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      76: ifeq          111
      79: aload         8
      81: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      86: checkcast     #22                 // class org/apache/bookkeeper/net/BookieId
      89: astore        9
      91: aload_0
      92: getfield      #1                  // Field this$0:Lorg/apache/bookkeeper/replication/BookieLedgerIndexer;
      95: aload_1
      96: aload         9
      98: invokevirtual #23                 // Method org/apache/bookkeeper/net/BookieId.toString:()Ljava/lang/String;
     101: aload_2
     102: invokevirtual #5                  // Method java/lang/Long.longValue:()J
     105: invokestatic  #24                 // Method org/apache/bookkeeper/replication/BookieLedgerIndexer.access$100:(Lorg/apache/bookkeeper/replication/BookieLedgerIndexer;Ljava/util/concurrent/ConcurrentHashMap;Ljava/lang/String;J)V
     108: goto          69
     111: goto          30
     114: aload_3
     115: iconst_0
     116: aconst_null
     117: aconst_null
     118: invokeinterface #26,  4           // InterfaceMethod org/apache/zookeeper/AsyncCallback$VoidCallback.processResult:(ILjava/lang/String;Ljava/lang/Object;)V
     123: goto          183
     126: aload         5
     128: invokestatic  #27                 // Method org/apache/bookkeeper/client/BKException.getExceptionCode:(Ljava/lang/Throwable;)I
     131: bipush        -25
     133: if_icmpne     159
     136: invokestatic  #28                 // Method org/apache/bookkeeper/replication/BookieLedgerIndexer.access$200:()Lorg/slf4j/Logger;
     139: ldc           #29                 // String Ignoring replication of already deleted ledger {}
     141: aload_2
     142: invokeinterface #30,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
     147: aload_3
     148: iconst_0
     149: aconst_null
     150: aconst_null
     151: invokeinterface #26,  4           // InterfaceMethod org/apache/zookeeper/AsyncCallback$VoidCallback.processResult:(ILjava/lang/String;Ljava/lang/Object;)V
     156: goto          183
     159: invokestatic  #28                 // Method org/apache/bookkeeper/replication/BookieLedgerIndexer.access$200:()Lorg/slf4j/Logger;
     162: ldc           #31                 // String Unable to read the ledger: {} information
     164: aload_2
     165: invokeinterface #32,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     170: aload_3
     171: aload         5
     173: invokestatic  #27                 // Method org/apache/bookkeeper/client/BKException.getExceptionCode:(Ljava/lang/Throwable;)I
     176: aconst_null
     177: aconst_null
     178: invokeinterface #26,  4           // InterfaceMethod org/apache/zookeeper/AsyncCallback$VoidCallback.processResult:(ILjava/lang/String;Ljava/lang/Object;)V
     183: return
}
