Compiled from "IndexPersistenceMgr.java"
public class org.apache.bookkeeper.bookie.IndexPersistenceMgr {
  private static final org.slf4j.Logger LOG;

  private static final java.lang.String IDX;

  static final java.lang.String RLOC;

  final com.google.common.cache.Cache<java.lang.Long, org.apache.bookkeeper.bookie.FileInfoBackingCache$CachedFileInfo> writeFileInfoCache;

  final com.google.common.cache.Cache<java.lang.Long, org.apache.bookkeeper.bookie.FileInfoBackingCache$CachedFileInfo> readFileInfoCache;

  final org.apache.bookkeeper.bookie.FileInfoBackingCache fileInfoBackingCache;

  final int openFileLimit;

  final int pageSize;

  final int entriesPerPage;

  final org.apache.bookkeeper.util.SnapshotMap<java.lang.Long, java.lang.Boolean> activeLedgers;

  final org.apache.bookkeeper.bookie.LedgerDirsManager ledgerDirsManager;

  private final org.apache.bookkeeper.bookie.stats.IndexPersistenceMgrStats persistenceMgrStats;

  public static final java.lang.String getLedgerName(long);
    Code:
       0: lload_0
       1: ldc2_w        #1                  // long 255l
       4: land
       5: l2i
       6: istore_2
       7: lload_0
       8: ldc2_w        #3                  // long 65280l
      11: land
      12: bipush        8
      14: lshr
      15: l2i
      16: istore_3
      17: new           #5                  // class java/lang/StringBuilder
      20: dup
      21: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      24: astore        4
      26: aload         4
      28: iload_3
      29: invokestatic  #7                  // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      32: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: pop
      36: aload         4
      38: bipush        47
      40: invokevirtual #9                  // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      43: pop
      44: aload         4
      46: iload_2
      47: invokestatic  #7                  // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      50: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload         4
      56: bipush        47
      58: invokevirtual #9                  // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      61: pop
      62: aload         4
      64: lload_0
      65: invokestatic  #10                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
      68: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: pop
      72: aload         4
      74: ldc           #12                 // String .idx
      76: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: pop
      80: aload         4
      82: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: areturn

  public org.apache.bookkeeper.bookie.IndexPersistenceMgr(int, int, org.apache.bookkeeper.conf.ServerConfiguration, org.apache.bookkeeper.util.SnapshotMap<java.lang.Long, java.lang.Boolean>, org.apache.bookkeeper.bookie.LedgerDirsManager, org.apache.bookkeeper.stats.StatsLogger) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #14                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_3
       6: invokevirtual #15                 // Method org/apache/bookkeeper/conf/ServerConfiguration.getOpenFileLimit:()I
       9: putfield      #16                 // Field openFileLimit:I
      12: aload_0
      13: aload         4
      15: putfield      #17                 // Field activeLedgers:Lorg/apache/bookkeeper/util/SnapshotMap;
      18: aload_0
      19: aload         5
      21: putfield      #18                 // Field ledgerDirsManager:Lorg/apache/bookkeeper/bookie/LedgerDirsManager;
      24: aload_0
      25: iload_1
      26: putfield      #19                 // Field pageSize:I
      29: aload_0
      30: iload_2
      31: putfield      #20                 // Field entriesPerPage:I
      34: getstatic     #21                 // Field LOG:Lorg/slf4j/Logger;
      37: ldc           #22                 // String openFileLimit = {}
      39: aload_0
      40: getfield      #16                 // Field openFileLimit:I
      43: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      46: invokeinterface #24,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      51: aload_0
      52: invokespecial #25                 // Method getActiveLedgers:()V
      55: iconst_1
      56: aload_3
      57: invokevirtual #26                 // Method org/apache/bookkeeper/conf/ServerConfiguration.getNumAddWorkerThreads:()I
      60: aload_3
      61: invokevirtual #27                 // Method org/apache/bookkeeper/conf/ServerConfiguration.getNumReadWorkerThreads:()I
      64: invokestatic  #28                 // Method java/lang/Math.max:(II)I
      67: invokestatic  #28                 // Method java/lang/Math.max:(II)I
      70: istore        7
      72: aload_0
      73: new           #29                 // class org/apache/bookkeeper/bookie/FileInfoBackingCache
      76: dup
      77: aload_0
      78: invokedynamic #30,  0             // InvokeDynamic #0:load:(Lorg/apache/bookkeeper/bookie/IndexPersistenceMgr;)Lorg/apache/bookkeeper/bookie/FileInfoBackingCache$FileLoader;
      83: aload_3
      84: invokevirtual #31                 // Method org/apache/bookkeeper/conf/ServerConfiguration.getFileInfoFormatVersionToWrite:()I
      87: invokespecial #32                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache."<init>":(Lorg/apache/bookkeeper/bookie/FileInfoBackingCache$FileLoader;I)V
      90: putfield      #33                 // Field fileInfoBackingCache:Lorg/apache/bookkeeper/bookie/FileInfoBackingCache;
      93: aload_0
      94: invokedynamic #34,  0             // InvokeDynamic #1:onRemoval:(Lorg/apache/bookkeeper/bookie/IndexPersistenceMgr;)Lcom/google/common/cache/RemovalListener;
      99: astore        8
     101: aload_0
     102: iload         7
     104: aload_3
     105: invokevirtual #35                 // Method org/apache/bookkeeper/conf/ServerConfiguration.getFileInfoCacheInitialCapacity:()I
     108: aload_0
     109: getfield      #16                 // Field openFileLimit:I
     112: aload_3
     113: invokevirtual #36                 // Method org/apache/bookkeeper/conf/ServerConfiguration.getFileInfoMaxIdleTime:()J
     116: aload         8
     118: invokestatic  #37                 // Method buildCache:(IIIJLcom/google/common/cache/RemovalListener;)Lcom/google/common/cache/Cache;
     121: putfield      #38                 // Field writeFileInfoCache:Lcom/google/common/cache/Cache;
     124: aload_0
     125: iload         7
     127: iconst_2
     128: aload_3
     129: invokevirtual #35                 // Method org/apache/bookkeeper/conf/ServerConfiguration.getFileInfoCacheInitialCapacity:()I
     132: imul
     133: iconst_2
     134: aload_0
     135: getfield      #16                 // Field openFileLimit:I
     138: imul
     139: aload_3
     140: invokevirtual #36                 // Method org/apache/bookkeeper/conf/ServerConfiguration.getFileInfoMaxIdleTime:()J
     143: aload         8
     145: invokestatic  #37                 // Method buildCache:(IIIJLcom/google/common/cache/RemovalListener;)Lcom/google/common/cache/Cache;
     148: putfield      #39                 // Field readFileInfoCache:Lcom/google/common/cache/Cache;
     151: aload_0
     152: new           #40                 // class org/apache/bookkeeper/bookie/stats/IndexPersistenceMgrStats
     155: dup
     156: aload         6
     158: aload_0
     159: invokedynamic #41,  0             // InvokeDynamic #2:get:(Lorg/apache/bookkeeper/bookie/IndexPersistenceMgr;)Ljava/util/function/Supplier;
     164: aload_0
     165: invokedynamic #42,  0             // InvokeDynamic #3:get:(Lorg/apache/bookkeeper/bookie/IndexPersistenceMgr;)Ljava/util/function/Supplier;
     170: invokespecial #43                 // Method org/apache/bookkeeper/bookie/stats/IndexPersistenceMgrStats."<init>":(Lorg/apache/bookkeeper/stats/StatsLogger;Ljava/util/function/Supplier;Ljava/util/function/Supplier;)V
     173: putfield      #44                 // Field persistenceMgrStats:Lorg/apache/bookkeeper/bookie/stats/IndexPersistenceMgrStats;
     176: return

  private static com.google.common.cache.Cache<java.lang.Long, org.apache.bookkeeper.bookie.FileInfoBackingCache$CachedFileInfo> buildCache(int, int, int, long, com.google.common.cache.RemovalListener<java.lang.Long, org.apache.bookkeeper.bookie.FileInfoBackingCache$CachedFileInfo>);
    Code:
       0: invokestatic  #45                 // Method com/google/common/cache/CacheBuilder.newBuilder:()Lcom/google/common/cache/CacheBuilder;
       3: iload_0
       4: invokevirtual #46                 // Method com/google/common/cache/CacheBuilder.concurrencyLevel:(I)Lcom/google/common/cache/CacheBuilder;
       7: iload_1
       8: invokevirtual #47                 // Method com/google/common/cache/CacheBuilder.initialCapacity:(I)Lcom/google/common/cache/CacheBuilder;
      11: iload_2
      12: i2l
      13: invokevirtual #48                 // Method com/google/common/cache/CacheBuilder.maximumSize:(J)Lcom/google/common/cache/CacheBuilder;
      16: aload         5
      18: invokevirtual #49                 // Method com/google/common/cache/CacheBuilder.removalListener:(Lcom/google/common/cache/RemovalListener;)Lcom/google/common/cache/CacheBuilder;
      21: astore        6
      23: lload_3
      24: lconst_0
      25: lcmp
      26: ifle          39
      29: aload         6
      31: lload_3
      32: getstatic     #50                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      35: invokevirtual #51                 // Method com/google/common/cache/CacheBuilder.expireAfterAccess:(JLjava/util/concurrent/TimeUnit;)Lcom/google/common/cache/CacheBuilder;
      38: pop
      39: aload         6
      41: invokevirtual #52                 // Method com/google/common/cache/CacheBuilder.build:()Lcom/google/common/cache/Cache;
      44: areturn

  private java.io.File createFileInfoBackingFile(long, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #53                 // Method findIndexFile:(J)Ljava/io/File;
       5: astore        4
       7: aconst_null
       8: aload         4
      10: if_acmpne     37
      13: iload_3
      14: ifne          26
      17: new           #54                 // class org/apache/bookkeeper/bookie/Bookie$NoLedgerException
      20: dup
      21: lload_1
      22: invokespecial #55                 // Method org/apache/bookkeeper/bookie/Bookie$NoLedgerException."<init>":(J)V
      25: athrow
      26: aload_0
      27: lload_1
      28: invokestatic  #56                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      31: aconst_null
      32: invokespecial #57                 // Method getNewLedgerIndexFile:(Ljava/lang/Long;Ljava/io/File;)Ljava/io/File;
      35: astore        4
      37: aload         4
      39: areturn

  private void handleLedgerEviction(com.google.common.cache.RemovalNotification<java.lang.Long, org.apache.bookkeeper.bookie.FileInfoBackingCache$CachedFileInfo>);
    Code:
       0: aload_1
       1: invokevirtual #58                 // Method com/google/common/cache/RemovalNotification.getValue:()Ljava/lang/Object;
       4: checkcast     #59                 // class org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo
       7: astore_2
       8: aconst_null
       9: aload_2
      10: if_acmpeq     21
      13: aconst_null
      14: aload_1
      15: invokevirtual #60                 // Method com/google/common/cache/RemovalNotification.getKey:()Ljava/lang/Object;
      18: if_acmpne     22
      21: return
      22: aload_1
      23: invokevirtual #61                 // Method com/google/common/cache/RemovalNotification.wasEvicted:()Z
      26: ifeq          41
      29: aload_0
      30: getfield      #44                 // Field persistenceMgrStats:Lorg/apache/bookkeeper/bookie/stats/IndexPersistenceMgrStats;
      33: invokevirtual #62                 // Method org/apache/bookkeeper/bookie/stats/IndexPersistenceMgrStats.getEvictedLedgersCounter:()Lorg/apache/bookkeeper/stats/Counter;
      36: invokeinterface #63,  1           // InterfaceMethod org/apache/bookkeeper/stats/Counter.inc:()V
      41: aload_2
      42: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
      45: return

  org.apache.bookkeeper.bookie.FileInfoBackingCache$CachedFileInfo getFileInfo(java.lang.Long, byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #44                 // Field persistenceMgrStats:Lorg/apache/bookkeeper/bookie/stats/IndexPersistenceMgrStats;
       4: invokevirtual #65                 // Method org/apache/bookkeeper/bookie/stats/IndexPersistenceMgrStats.getPendingGetFileInfoCounter:()Lorg/apache/bookkeeper/stats/Counter;
       7: invokeinterface #63,  1           // InterfaceMethod org/apache/bookkeeper/stats/Counter.inc:()V
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokedynamic #66,  0             // InvokeDynamic #4:call:(Lorg/apache/bookkeeper/bookie/IndexPersistenceMgr;Ljava/lang/Long;[B)Ljava/util/concurrent/Callable;
      20: astore        4
      22: aconst_null
      23: aload_2
      24: if_acmpeq     46
      27: aload_0
      28: getfield      #38                 // Field writeFileInfoCache:Lcom/google/common/cache/Cache;
      31: aload_1
      32: aload         4
      34: invokeinterface #67,  3           // InterfaceMethod com/google/common/cache/Cache.get:(Ljava/lang/Object;Ljava/util/concurrent/Callable;)Ljava/lang/Object;
      39: checkcast     #59                 // class org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo
      42: astore_3
      43: goto          62
      46: aload_0
      47: getfield      #39                 // Field readFileInfoCache:Lcom/google/common/cache/Cache;
      50: aload_1
      51: aload         4
      53: invokeinterface #67,  3           // InterfaceMethod com/google/common/cache/Cache.get:(Ljava/lang/Object;Ljava/util/concurrent/Callable;)Ljava/lang/Object;
      58: checkcast     #59                 // class org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo
      61: astore_3
      62: aload_3
      63: invokevirtual #68                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.tryRetain:()Z
      66: ifne          151
      69: aload_0
      70: getfield      #38                 // Field writeFileInfoCache:Lcom/google/common/cache/Cache;
      73: invokeinterface #69,  1           // InterfaceMethod com/google/common/cache/Cache.asMap:()Ljava/util/concurrent/ConcurrentMap;
      78: aload_1
      79: aload_3
      80: invokeinterface #70,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      85: istore        5
      87: aload_0
      88: getfield      #39                 // Field readFileInfoCache:Lcom/google/common/cache/Cache;
      91: invokeinterface #69,  1           // InterfaceMethod com/google/common/cache/Cache.asMap:()Ljava/util/concurrent/ConcurrentMap;
      96: aload_1
      97: aload_3
      98: invokeinterface #70,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
     103: istore        6
     105: iload         5
     107: ifne          115
     110: iload         6
     112: ifeq          149
     115: getstatic     #21                 // Field LOG:Lorg/slf4j/Logger;
     118: ldc           #71                 // String Dead fileinfo({}) forced out of cache (write:{}, read:{}). It must have been double-released somewhere.
     120: iconst_3
     121: anewarray     #72                 // class java/lang/Object
     124: dup
     125: iconst_0
     126: aload_3
     127: aastore
     128: dup
     129: iconst_1
     130: iload         5
     132: invokestatic  #73                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     135: aastore
     136: dup
     137: iconst_2
     138: iload         6
     140: invokestatic  #73                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     143: aastore
     144: invokeinterface #74,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;[Ljava/lang/Object;)V
     149: aconst_null
     150: astore_3
     151: aload_3
     152: ifnull        22
     155: aload_3
     156: astore        5
     158: aload_0
     159: getfield      #44                 // Field persistenceMgrStats:Lorg/apache/bookkeeper/bookie/stats/IndexPersistenceMgrStats;
     162: invokevirtual #65                 // Method org/apache/bookkeeper/bookie/stats/IndexPersistenceMgrStats.getPendingGetFileInfoCounter:()Lorg/apache/bookkeeper/stats/Counter;
     165: invokeinterface #75,  1           // InterfaceMethod org/apache/bookkeeper/stats/Counter.dec:()V
     170: aload         5
     172: areturn
     173: astore_3
     174: aload_3
     175: invokevirtual #78                 // Method java/lang/Exception.getCause:()Ljava/lang/Throwable;
     178: instanceof    #79                 // class java/io/IOException
     181: ifeq          192
     184: aload_3
     185: invokevirtual #78                 // Method java/lang/Exception.getCause:()Ljava/lang/Throwable;
     188: checkcast     #79                 // class java/io/IOException
     191: athrow
     192: new           #80                 // class org/apache/bookkeeper/bookie/LedgerCache$NoIndexForLedgerException
     195: dup
     196: new           #5                  // class java/lang/StringBuilder
     199: dup
     200: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
     203: ldc           #81                 // String Failed to load file info for ledger
     205: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     208: aload_1
     209: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     212: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     215: aload_3
     216: invokespecial #83                 // Method org/apache/bookkeeper/bookie/LedgerCache$NoIndexForLedgerException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
     219: athrow
     220: astore        7
     222: aload_0
     223: getfield      #44                 // Field persistenceMgrStats:Lorg/apache/bookkeeper/bookie/stats/IndexPersistenceMgrStats;
     226: invokevirtual #65                 // Method org/apache/bookkeeper/bookie/stats/IndexPersistenceMgrStats.getPendingGetFileInfoCounter:()Lorg/apache/bookkeeper/stats/Counter;
     229: invokeinterface #75,  1           // InterfaceMethod org/apache/bookkeeper/stats/Counter.dec:()V
     234: aload         7
     236: athrow
    Exception table:
       from    to  target type
           0   158   173   Class java/util/concurrent/ExecutionException
           0   158   173   Class com/google/common/util/concurrent/UncheckedExecutionException
           0   158   220   any
         173   222   220   any

  private java.io.File getNewLedgerIndexFile(java.lang.Long, java.io.File) throws org.apache.bookkeeper.bookie.LedgerDirsManager$NoWritableLedgerDirException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field ledgerDirsManager:Lorg/apache/bookkeeper/bookie/LedgerDirsManager;
       4: aload_2
       5: invokevirtual #84                 // Method org/apache/bookkeeper/bookie/LedgerDirsManager.pickRandomWritableDirForNewIndexFile:(Ljava/io/File;)Ljava/io/File;
       8: astore_3
       9: aload_1
      10: invokevirtual #85                 // Method java/lang/Long.longValue:()J
      13: invokestatic  #86                 // Method getLedgerName:(J)Ljava/lang/String;
      16: astore        4
      18: new           #87                 // class java/io/File
      21: dup
      22: aload_3
      23: aload         4
      25: invokespecial #88                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      28: areturn

  private void getActiveLedgers() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field ledgerDirsManager:Lorg/apache/bookkeeper/bookie/LedgerDirsManager;
       4: invokevirtual #89                 // Method org/apache/bookkeeper/bookie/LedgerDirsManager.getAllLedgerDirs:()Ljava/util/List;
       7: invokeinterface #90,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      12: astore_1
      13: aload_1
      14: invokeinterface #91,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          413
      22: aload_1
      23: invokeinterface #92,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #87                 // class java/io/File
      31: astore_2
      32: aload_2
      33: invokevirtual #93                 // Method java/io/File.listFiles:()[Ljava/io/File;
      36: astore_3
      37: aload_3
      38: ifnonnull     44
      41: goto          13
      44: aload_3
      45: astore        4
      47: aload         4
      49: arraylength
      50: istore        5
      52: iconst_0
      53: istore        6
      55: iload         6
      57: iload         5
      59: if_icmpge     410
      62: aload         4
      64: iload         6
      66: aaload
      67: astore        7
      69: aload         7
      71: invokevirtual #94                 // Method java/io/File.isDirectory:()Z
      74: ifeq          404
      77: aload         7
      79: invokevirtual #93                 // Method java/io/File.listFiles:()[Ljava/io/File;
      82: astore        8
      84: aload         8
      86: ifnonnull     92
      89: goto          404
      92: aload         8
      94: astore        9
      96: aload         9
      98: arraylength
      99: istore        10
     101: iconst_0
     102: istore        11
     104: iload         11
     106: iload         10
     108: if_icmpge     404
     111: aload         9
     113: iload         11
     115: aaload
     116: astore        12
     118: aload         12
     120: invokevirtual #94                 // Method java/io/File.isDirectory:()Z
     123: ifeq          398
     126: aload         12
     128: invokevirtual #93                 // Method java/io/File.listFiles:()[Ljava/io/File;
     131: astore        13
     133: aload         13
     135: ifnonnull     141
     138: goto          398
     141: aload         13
     143: astore        14
     145: aload         14
     147: arraylength
     148: istore        15
     150: iconst_0
     151: istore        16
     153: iload         16
     155: iload         15
     157: if_icmpge     398
     160: aload         14
     162: iload         16
     164: aaload
     165: astore        17
     167: aload         17
     169: invokevirtual #95                 // Method java/io/File.isFile:()Z
     172: ifeq          392
     175: aload         17
     177: invokevirtual #96                 // Method java/io/File.getName:()Ljava/lang/String;
     180: ldc           #12                 // String .idx
     182: invokevirtual #97                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
     185: ifne          204
     188: aload         17
     190: invokevirtual #96                 // Method java/io/File.getName:()Ljava/lang/String;
     193: ldc           #98                 // String .rloc
     195: invokevirtual #97                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
     198: ifne          204
     201: goto          392
     204: aload         17
     206: invokevirtual #96                 // Method java/io/File.getName:()Ljava/lang/String;
     209: ldc           #98                 // String .rloc
     211: ldc           #99                 // String
     213: invokevirtual #100                // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
     216: ldc           #12                 // String .idx
     218: ldc           #99                 // String
     220: invokevirtual #100                // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
     223: astore        18
     225: aload         17
     227: invokevirtual #96                 // Method java/io/File.getName:()Ljava/lang/String;
     230: ldc           #98                 // String .rloc
     232: invokevirtual #97                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
     235: ifeq          371
     238: aload_0
     239: aload         18
     241: invokestatic  #101                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
     244: invokespecial #53                 // Method findIndexFile:(J)Ljava/io/File;
     247: ifnull        294
     250: aload         17
     252: invokevirtual #102                // Method java/io/File.delete:()Z
     255: ifne          392
     258: getstatic     #21                 // Field LOG:Lorg/slf4j/Logger;
     261: new           #5                  // class java/lang/StringBuilder
     264: dup
     265: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
     268: ldc           #103                // String Deleting the rloc file
     270: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     273: aload         17
     275: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     278: ldc           #104                // String  failed
     280: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     283: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     286: invokeinterface #105,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     291: goto          392
     294: new           #87                 // class java/io/File
     297: dup
     298: aload         17
     300: invokevirtual #106                // Method java/io/File.getParentFile:()Ljava/io/File;
     303: new           #5                  // class java/lang/StringBuilder
     306: dup
     307: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
     310: aload         18
     312: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     315: ldc           #12                 // String .idx
     317: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     320: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     323: invokespecial #88                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
     326: astore        19
     328: aload         17
     330: aload         19
     332: invokevirtual #107                // Method java/io/File.renameTo:(Ljava/io/File;)Z
     335: ifne          371
     338: new           #79                 // class java/io/IOException
     341: dup
     342: new           #5                  // class java/lang/StringBuilder
     345: dup
     346: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
     349: ldc           #108                // String Renaming rloc file
     351: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     354: aload         17
     356: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     359: ldc           #109                // String  to index file has failed
     361: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     364: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     367: invokespecial #110                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     370: athrow
     371: aload_0
     372: getfield      #17                 // Field activeLedgers:Lorg/apache/bookkeeper/util/SnapshotMap;
     375: aload         18
     377: bipush        16
     379: invokestatic  #111                // Method java/lang/Long.parseLong:(Ljava/lang/String;I)J
     382: invokestatic  #56                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     385: iconst_1
     386: invokestatic  #73                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     389: invokevirtual #112                // Method org/apache/bookkeeper/util/SnapshotMap.put:(Ljava/lang/Object;Ljava/lang/Object;)V
     392: iinc          16, 1
     395: goto          153
     398: iinc          11, 1
     401: goto          104
     404: iinc          6, 1
     407: goto          55
     410: goto          13
     413: return

  void removeLedger(java.lang.Long) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: aload_1
       4: aconst_null
       5: invokevirtual #113                // Method getFileInfo:(Ljava/lang/Long;[B)Lorg/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo;
       8: astore_2
       9: aload_2
      10: iconst_0
      11: invokevirtual #114                // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.close:(Z)V
      14: aload_2
      15: invokevirtual #115                // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.delete:()Z
      18: pop
      19: aload_2
      20: ifnull        97
      23: aload_2
      24: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
      27: aload_0
      28: getfield      #17                 // Field activeLedgers:Lorg/apache/bookkeeper/util/SnapshotMap;
      31: aload_1
      32: invokevirtual #116                // Method org/apache/bookkeeper/util/SnapshotMap.remove:(Ljava/lang/Object;)V
      35: aload_0
      36: getfield      #38                 // Field writeFileInfoCache:Lcom/google/common/cache/Cache;
      39: aload_1
      40: invokeinterface #117,  2          // InterfaceMethod com/google/common/cache/Cache.invalidate:(Ljava/lang/Object;)V
      45: aload_0
      46: getfield      #39                 // Field readFileInfoCache:Lcom/google/common/cache/Cache;
      49: aload_1
      50: invokeinterface #117,  2          // InterfaceMethod com/google/common/cache/Cache.invalidate:(Ljava/lang/Object;)V
      55: goto          97
      58: astore_3
      59: aload_2
      60: ifnull        95
      63: aload_2
      64: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
      67: aload_0
      68: getfield      #17                 // Field activeLedgers:Lorg/apache/bookkeeper/util/SnapshotMap;
      71: aload_1
      72: invokevirtual #116                // Method org/apache/bookkeeper/util/SnapshotMap.remove:(Ljava/lang/Object;)V
      75: aload_0
      76: getfield      #38                 // Field writeFileInfoCache:Lcom/google/common/cache/Cache;
      79: aload_1
      80: invokeinterface #117,  2          // InterfaceMethod com/google/common/cache/Cache.invalidate:(Ljava/lang/Object;)V
      85: aload_0
      86: getfield      #39                 // Field readFileInfoCache:Lcom/google/common/cache/Cache;
      89: aload_1
      90: invokeinterface #117,  2          // InterfaceMethod com/google/common/cache/Cache.invalidate:(Ljava/lang/Object;)V
      95: aload_3
      96: athrow
      97: return
    Exception table:
       from    to  target type
           2    19    58   any

  private java.io.File findIndexFile(long) throws java.io.IOException;
    Code:
       0: lload_1
       1: invokestatic  #86                 // Method getLedgerName:(J)Ljava/lang/String;
       4: astore_3
       5: aload_0
       6: getfield      #18                 // Field ledgerDirsManager:Lorg/apache/bookkeeper/bookie/LedgerDirsManager;
       9: invokevirtual #89                 // Method org/apache/bookkeeper/bookie/LedgerDirsManager.getAllLedgerDirs:()Ljava/util/List;
      12: invokeinterface #90,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore        4
      19: aload         4
      21: invokeinterface #91,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          67
      29: aload         4
      31: invokeinterface #92,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #87                 // class java/io/File
      39: astore        5
      41: new           #87                 // class java/io/File
      44: dup
      45: aload         5
      47: aload_3
      48: invokespecial #88                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      51: astore        6
      53: aload         6
      55: invokevirtual #118                // Method java/io/File.exists:()Z
      58: ifeq          64
      61: aload         6
      63: areturn
      64: goto          19
      67: aconst_null
      68: areturn

  boolean ledgerExists(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field activeLedgers:Lorg/apache/bookkeeper/util/SnapshotMap;
       4: lload_1
       5: invokestatic  #56                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       8: invokevirtual #119                // Method org/apache/bookkeeper/util/SnapshotMap.containsKey:(Ljava/lang/Object;)Z
      11: ireturn

  void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fileInfoBackingCache:Lorg/apache/bookkeeper/bookie/FileInfoBackingCache;
       4: invokevirtual #120                // Method org/apache/bookkeeper/bookie/FileInfoBackingCache.closeAllWithoutFlushing:()V
       7: aload_0
       8: getfield      #38                 // Field writeFileInfoCache:Lcom/google/common/cache/Cache;
      11: invokeinterface #121,  1          // InterfaceMethod com/google/common/cache/Cache.invalidateAll:()V
      16: aload_0
      17: getfield      #39                 // Field readFileInfoCache:Lcom/google/common/cache/Cache;
      20: invokeinterface #121,  1          // InterfaceMethod com/google/common/cache/Cache.invalidateAll:()V
      25: return

  java.lang.Long getLastAddConfirmed(long) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: lload_1
       4: invokestatic  #56                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       7: aconst_null
       8: invokevirtual #113                // Method getFileInfo:(Ljava/lang/Long;[B)Lorg/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo;
      11: astore_3
      12: aload_3
      13: invokevirtual #122                // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.getLastAddConfirmed:()Ljava/lang/Long;
      16: astore        4
      18: aconst_null
      19: aload_3
      20: if_acmpeq     27
      23: aload_3
      24: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
      27: aload         4
      29: areturn
      30: astore        5
      32: aconst_null
      33: aload_3
      34: if_acmpeq     41
      37: aload_3
      38: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
      41: aload         5
      43: athrow
    Exception table:
       from    to  target type
           2    18    30   any
          30    32    30   any

  boolean waitForLastAddConfirmedUpdate(long, long, org.apache.bookkeeper.common.util.Watcher<org.apache.bookkeeper.bookie.LastAddConfirmedUpdateNotification>) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore        6
       3: aload_0
       4: lload_1
       5: invokestatic  #56                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       8: aconst_null
       9: invokevirtual #113                // Method getFileInfo:(Ljava/lang/Long;[B)Lorg/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo;
      12: astore        6
      14: aload         6
      16: lload_3
      17: aload         5
      19: invokevirtual #123                // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.waitForLastAddConfirmedUpdate:(JLorg/apache/bookkeeper/common/util/Watcher;)Z
      22: istore        7
      24: aconst_null
      25: aload         6
      27: if_acmpeq     35
      30: aload         6
      32: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
      35: iload         7
      37: ireturn
      38: astore        8
      40: aconst_null
      41: aload         6
      43: if_acmpeq     51
      46: aload         6
      48: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
      51: aload         8
      53: athrow
    Exception table:
       from    to  target type
           3    24    38   any
          38    40    38   any

  void cancelWaitForLastAddConfirmedUpdate(long, org.apache.bookkeeper.common.util.Watcher<org.apache.bookkeeper.bookie.LastAddConfirmedUpdateNotification>) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore        4
       3: aload_0
       4: lload_1
       5: invokestatic  #56                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       8: aconst_null
       9: invokevirtual #113                // Method getFileInfo:(Ljava/lang/Long;[B)Lorg/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo;
      12: astore        4
      14: aload         4
      16: aload_3
      17: invokevirtual #124                // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.cancelWaitForLastAddConfirmedUpdate:(Lorg/apache/bookkeeper/common/util/Watcher;)V
      20: aconst_null
      21: aload         4
      23: if_acmpeq     50
      26: aload         4
      28: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
      31: goto          50
      34: astore        5
      36: aconst_null
      37: aload         4
      39: if_acmpeq     47
      42: aload         4
      44: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
      47: aload         5
      49: athrow
      50: return
    Exception table:
       from    to  target type
           3    20    34   any
          34    36    34   any

  long updateLastAddConfirmed(long, long) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore        5
       3: aload_0
       4: lload_1
       5: invokestatic  #56                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       8: aconst_null
       9: invokevirtual #113                // Method getFileInfo:(Ljava/lang/Long;[B)Lorg/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo;
      12: astore        5
      14: aload         5
      16: lload_3
      17: invokevirtual #125                // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.setLastAddConfirmed:(J)J
      20: lstore        6
      22: aconst_null
      23: aload         5
      25: if_acmpeq     33
      28: aload         5
      30: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
      33: lload         6
      35: lreturn
      36: astore        8
      38: aconst_null
      39: aload         5
      41: if_acmpeq     49
      44: aload         5
      46: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
      49: aload         8
      51: athrow
    Exception table:
       from    to  target type
           3    22    36   any
          36    38    36   any

  byte[] readMasterKey(long) throws java.io.IOException, org.apache.bookkeeper.bookie.BookieException;
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: lload_1
       4: invokestatic  #56                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       7: aconst_null
       8: invokevirtual #113                // Method getFileInfo:(Ljava/lang/Long;[B)Lorg/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo;
      11: astore_3
      12: aload_3
      13: invokevirtual #126                // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.getMasterKey:()[B
      16: astore        4
      18: aconst_null
      19: aload_3
      20: if_acmpeq     27
      23: aload_3
      24: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
      27: aload         4
      29: areturn
      30: astore        5
      32: aconst_null
      33: aload_3
      34: if_acmpeq     41
      37: aload_3
      38: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
      41: aload         5
      43: athrow
    Exception table:
       from    to  target type
           2    18    30   any
          30    32    30   any

  void setMasterKey(long, byte[]) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore        4
       3: aload_0
       4: lload_1
       5: invokestatic  #56                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       8: aload_3
       9: invokevirtual #113                // Method getFileInfo:(Ljava/lang/Long;[B)Lorg/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo;
      12: astore        4
      14: aconst_null
      15: aload         4
      17: if_acmpeq     44
      20: aload         4
      22: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
      25: goto          44
      28: astore        5
      30: aconst_null
      31: aload         4
      33: if_acmpeq     41
      36: aload         4
      38: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
      41: aload         5
      43: athrow
      44: return
    Exception table:
       from    to  target type
           3    14    28   any
          28    30    28   any

  boolean setFenced(long) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: lload_1
       4: invokestatic  #56                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       7: aconst_null
       8: invokevirtual #113                // Method getFileInfo:(Ljava/lang/Long;[B)Lorg/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo;
      11: astore_3
      12: aload_3
      13: invokevirtual #127                // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.setFenced:()Z
      16: istore        4
      18: aconst_null
      19: aload_3
      20: if_acmpeq     27
      23: aload_3
      24: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
      27: iload         4
      29: ireturn
      30: astore        5
      32: aconst_null
      33: aload_3
      34: if_acmpeq     41
      37: aload_3
      38: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
      41: aload         5
      43: athrow
    Exception table:
       from    to  target type
           2    18    30   any
          30    32    30   any

  boolean isFenced(long) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: lload_1
       4: invokestatic  #56                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       7: aconst_null
       8: invokevirtual #113                // Method getFileInfo:(Ljava/lang/Long;[B)Lorg/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo;
      11: astore_3
      12: aload_3
      13: invokevirtual #128                // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.isFenced:()Z
      16: istore        4
      18: aconst_null
      19: aload_3
      20: if_acmpeq     27
      23: aload_3
      24: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
      27: iload         4
      29: ireturn
      30: astore        5
      32: aconst_null
      33: aload_3
      34: if_acmpeq     41
      37: aload_3
      38: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
      41: aload         5
      43: athrow
    Exception table:
       from    to  target type
           2    18    30   any
          30    32    30   any

  void setExplicitLac(long, io.netty.buffer.ByteBuf) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore        4
       3: aload_0
       4: lload_1
       5: invokestatic  #56                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       8: aconst_null
       9: invokevirtual #113                // Method getFileInfo:(Ljava/lang/Long;[B)Lorg/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo;
      12: astore        4
      14: aload         4
      16: aload_3
      17: invokevirtual #129                // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.setExplicitLac:(Lio/netty/buffer/ByteBuf;)V
      20: aconst_null
      21: aload         4
      23: if_acmpeq     50
      26: aload         4
      28: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
      31: goto          50
      34: astore        5
      36: aconst_null
      37: aload         4
      39: if_acmpeq     47
      42: aload         4
      44: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
      47: aload         5
      49: athrow
      50: return
    Exception table:
       from    to  target type
           3    20    34   any
          34    36    34   any

  public io.netty.buffer.ByteBuf getExplicitLac(long);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: lload_1
       4: invokestatic  #56                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       7: aconst_null
       8: invokevirtual #113                // Method getFileInfo:(Ljava/lang/Long;[B)Lorg/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo;
      11: astore_3
      12: aload_3
      13: invokevirtual #130                // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.getExplicitLac:()Lio/netty/buffer/ByteBuf;
      16: astore        4
      18: aconst_null
      19: aload_3
      20: if_acmpeq     27
      23: aload_3
      24: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
      27: aload         4
      29: areturn
      30: astore        4
      32: getstatic     #21                 // Field LOG:Lorg/slf4j/Logger;
      35: ldc           #131                // String Exception during getLastAddConfirmed
      37: aload         4
      39: invokeinterface #132,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      44: aconst_null
      45: astore        5
      47: aconst_null
      48: aload_3
      49: if_acmpeq     56
      52: aload_3
      53: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
      56: aload         5
      58: areturn
      59: astore        6
      61: aconst_null
      62: aload_3
      63: if_acmpeq     70
      66: aload_3
      67: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
      70: aload         6
      72: athrow
    Exception table:
       from    to  target type
           2    18    30   Class java/io/IOException
           2    18    59   any
          30    47    59   any
          59    61    59   any

  int getOpenFileLimit();
    Code:
       0: aload_0
       1: getfield      #16                 // Field openFileLimit:I
       4: ireturn

  private void relocateIndexFileAndFlushHeader(long, org.apache.bookkeeper.bookie.FileInfo) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_3
       2: invokespecial #133                // Method getLedgerDirForLedger:(Lorg/apache/bookkeeper/bookie/FileInfo;)Ljava/io/File;
       5: astore        4
       7: aload_0
       8: getfield      #18                 // Field ledgerDirsManager:Lorg/apache/bookkeeper/bookie/LedgerDirsManager;
      11: aload         4
      13: invokevirtual #134                // Method org/apache/bookkeeper/bookie/LedgerDirsManager.isDirFull:(Ljava/io/File;)Z
      16: ifeq          48
      19: aload_0
      20: lload_1
      21: invokestatic  #56                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      24: aload_3
      25: invokespecial #135                // Method moveLedgerIndexFile:(Ljava/lang/Long;Lorg/apache/bookkeeper/bookie/FileInfo;)V
      28: goto          48
      31: astore        5
      33: aload_0
      34: getfield      #18                 // Field ledgerDirsManager:Lorg/apache/bookkeeper/bookie/LedgerDirsManager;
      37: aload         4
      39: invokevirtual #137                // Method org/apache/bookkeeper/bookie/LedgerDirsManager.isDirWritableForNewIndexFile:(Ljava/io/File;)Z
      42: ifne          48
      45: aload         5
      47: athrow
      48: aload_3
      49: invokevirtual #138                // Method org/apache/bookkeeper/bookie/FileInfo.flushHeader:()V
      52: return
    Exception table:
       from    to  target type
          19    28    31   Class org/apache/bookkeeper/bookie/LedgerDirsManager$NoWritableLedgerDirException

  private java.io.File getLedgerDirForLedger(org.apache.bookkeeper.bookie.FileInfo);
    Code:
       0: aload_1
       1: invokevirtual #139                // Method org/apache/bookkeeper/bookie/FileInfo.getLf:()Ljava/io/File;
       4: invokevirtual #106                // Method java/io/File.getParentFile:()Ljava/io/File;
       7: invokevirtual #106                // Method java/io/File.getParentFile:()Ljava/io/File;
      10: invokevirtual #106                // Method java/io/File.getParentFile:()Ljava/io/File;
      13: areturn

  private void moveLedgerIndexFile(java.lang.Long, org.apache.bookkeeper.bookie.FileInfo) throws org.apache.bookkeeper.bookie.LedgerDirsManager$NoWritableLedgerDirException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_2
       4: invokespecial #133                // Method getLedgerDirForLedger:(Lorg/apache/bookkeeper/bookie/FileInfo;)Ljava/io/File;
       7: invokespecial #57                 // Method getNewLedgerIndexFile:(Ljava/lang/Long;Ljava/io/File;)Ljava/io/File;
      10: astore_3
      11: aload_2
      12: aload_3
      13: aload_2
      14: invokevirtual #140                // Method org/apache/bookkeeper/bookie/FileInfo.getSizeSinceLastWrite:()J
      17: invokevirtual #141                // Method org/apache/bookkeeper/bookie/FileInfo.moveToNewLocation:(Ljava/io/File;J)V
      20: goto          37
      23: astore        4
      25: new           #54                 // class org/apache/bookkeeper/bookie/Bookie$NoLedgerException
      28: dup
      29: aload_1
      30: invokevirtual #85                 // Method java/lang/Long.longValue:()J
      33: invokespecial #55                 // Method org/apache/bookkeeper/bookie/Bookie$NoLedgerException."<init>":(J)V
      36: athrow
      37: return
    Exception table:
       from    to  target type
          11    20    23   Class org/apache/bookkeeper/bookie/FileInfo$FileInfoDeletedException

  void flushLedgerHeader(long) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: lload_1
       4: invokestatic  #56                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       7: aconst_null
       8: invokevirtual #113                // Method getFileInfo:(Ljava/lang/Long;[B)Lorg/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo;
      11: astore_3
      12: aload_0
      13: lload_1
      14: aload_3
      15: invokespecial #143                // Method relocateIndexFileAndFlushHeader:(JLorg/apache/bookkeeper/bookie/FileInfo;)V
      18: aconst_null
      19: aload_3
      20: if_acmpeq     70
      23: aload_3
      24: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
      27: goto          70
      30: astore        4
      32: getstatic     #21                 // Field LOG:Lorg/slf4j/Logger;
      35: ldc           #144                // String No ledger {} found when flushing header.
      37: lload_1
      38: invokestatic  #56                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      41: invokeinterface #24,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      46: aconst_null
      47: aload_3
      48: if_acmpeq     55
      51: aload_3
      52: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
      55: return
      56: astore        5
      58: aconst_null
      59: aload_3
      60: if_acmpeq     67
      63: aload_3
      64: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
      67: aload         5
      69: athrow
      70: return
    Exception table:
       from    to  target type
           2    18    30   Class org/apache/bookkeeper/bookie/Bookie$NoLedgerException
           2    18    56   any
          30    46    56   any
          56    58    56   any

  void flushLedgerEntries(long, java.util.List<org.apache.bookkeeper.bookie.LedgerEntryPage>) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore        4
       3: aload_3
       4: new           #145                // class org/apache/bookkeeper/bookie/IndexPersistenceMgr$1
       7: dup
       8: aload_0
       9: invokespecial #146                // Method org/apache/bookkeeper/bookie/IndexPersistenceMgr$1."<init>":(Lorg/apache/bookkeeper/bookie/IndexPersistenceMgr;)V
      12: invokestatic  #147                // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
      15: aload_3
      16: invokeinterface #148,  1          // InterfaceMethod java/util/List.size:()I
      21: newarray       int
      23: astore        5
      25: aload_0
      26: lload_1
      27: invokestatic  #56                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      30: aconst_null
      31: invokevirtual #113                // Method getFileInfo:(Ljava/lang/Long;[B)Lorg/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo;
      34: astore        4
      36: goto          66
      39: astore        6
      41: getstatic     #21                 // Field LOG:Lorg/slf4j/Logger;
      44: ldc           #149                // String No ledger {} found when flushing entries.
      46: lload_1
      47: invokestatic  #56                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      50: invokeinterface #24,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      55: aload         4
      57: ifnull        65
      60: aload         4
      62: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
      65: return
      66: aload_0
      67: lload_1
      68: aload         4
      70: invokespecial #143                // Method relocateIndexFileAndFlushHeader:(JLorg/apache/bookkeeper/bookie/FileInfo;)V
      73: iconst_0
      74: istore        6
      76: ldc2_w        #150                // long -1l
      79: lstore        7
      81: iconst_0
      82: istore        9
      84: iload         9
      86: aload_3
      87: invokeinterface #148,  1          // InterfaceMethod java/util/List.size:()I
      92: if_icmpge     212
      95: aload         5
      97: iload         9
      99: aload_3
     100: iload         9
     102: invokeinterface #152,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     107: checkcast     #153                // class org/apache/bookkeeper/bookie/LedgerEntryPage
     110: invokevirtual #154                // Method org/apache/bookkeeper/bookie/LedgerEntryPage.getVersion:()I
     113: iastore
     114: lload         7
     116: ldc2_w        #150                // long -1l
     119: lcmp
     120: ifeq          190
     123: aload_3
     124: iload         9
     126: invokeinterface #152,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     131: checkcast     #153                // class org/apache/bookkeeper/bookie/LedgerEntryPage
     134: invokevirtual #155                // Method org/apache/bookkeeper/bookie/LedgerEntryPage.getFirstEntry:()J
     137: lload         7
     139: lsub
     140: aload_0
     141: getfield      #20                 // Field entriesPerPage:I
     144: i2l
     145: lcmp
     146: ifeq          190
     149: iload         9
     151: iload         6
     153: isub
     154: istore        10
     156: iload         10
     158: ifne          171
     161: getstatic     #21                 // Field LOG:Lorg/slf4j/Logger;
     164: ldc           #156                // String Count cannot possibly be zero!
     166: invokeinterface #105,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     171: aload_0
     172: lload_1
     173: invokestatic  #56                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     176: aload_3
     177: aload         4
     179: iload         6
     181: iload         10
     183: invokespecial #157                // Method writeBuffers:(Ljava/lang/Long;Ljava/util/List;Lorg/apache/bookkeeper/bookie/FileInfo;II)V
     186: iload         9
     188: istore        6
     190: aload_3
     191: iload         9
     193: invokeinterface #152,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     198: checkcast     #153                // class org/apache/bookkeeper/bookie/LedgerEntryPage
     201: invokevirtual #155                // Method org/apache/bookkeeper/bookie/LedgerEntryPage.getFirstEntry:()J
     204: lstore        7
     206: iinc          9, 1
     209: goto          84
     212: aload_3
     213: invokeinterface #148,  1          // InterfaceMethod java/util/List.size:()I
     218: iload         6
     220: isub
     221: ifne          243
     224: aload_3
     225: invokeinterface #148,  1          // InterfaceMethod java/util/List.size:()I
     230: ifeq          243
     233: getstatic     #21                 // Field LOG:Lorg/slf4j/Logger;
     236: ldc           #158                // String Nothing to write, but there were entries!
     238: invokeinterface #105,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     243: aload_0
     244: lload_1
     245: invokestatic  #56                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     248: aload_3
     249: aload         4
     251: iload         6
     253: aload_3
     254: invokeinterface #148,  1          // InterfaceMethod java/util/List.size:()I
     259: iload         6
     261: isub
     262: invokespecial #157                // Method writeBuffers:(Ljava/lang/Long;Ljava/util/List;Lorg/apache/bookkeeper/bookie/FileInfo;II)V
     265: iconst_0
     266: istore        9
     268: iload         9
     270: aload_3
     271: invokeinterface #148,  1          // InterfaceMethod java/util/List.size:()I
     276: if_icmpge     308
     279: aload_3
     280: iload         9
     282: invokeinterface #152,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     287: checkcast     #153                // class org/apache/bookkeeper/bookie/LedgerEntryPage
     290: astore        10
     292: aload         10
     294: aload         5
     296: iload         9
     298: iaload
     299: invokevirtual #159                // Method org/apache/bookkeeper/bookie/LedgerEntryPage.setClean:(I)V
     302: iinc          9, 1
     305: goto          268
     308: getstatic     #21                 // Field LOG:Lorg/slf4j/Logger;
     311: invokeinterface #160,  1          // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     316: ifeq          342
     319: getstatic     #21                 // Field LOG:Lorg/slf4j/Logger;
     322: ldc           #161                // String Flushed ledger {} with {} pages.
     324: lload_1
     325: invokestatic  #56                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     328: aload_3
     329: invokeinterface #148,  1          // InterfaceMethod java/util/List.size:()I
     334: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     337: invokeinterface #162,  4          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     342: aload         4
     344: ifnull        370
     347: aload         4
     349: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
     352: goto          370
     355: astore        11
     357: aload         4
     359: ifnull        367
     362: aload         4
     364: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
     367: aload         11
     369: athrow
     370: return
    Exception table:
       from    to  target type
          25    36    39   Class org/apache/bookkeeper/bookie/Bookie$NoLedgerException
           3    55   355   any
          66   342   355   any
         355   357   355   any

  private void writeBuffers(java.lang.Long, java.util.List<org.apache.bookkeeper.bookie.LedgerEntryPage>, org.apache.bookkeeper.bookie.FileInfo, int, int) throws java.io.IOException, org.apache.bookkeeper.bookie.Bookie$NoLedgerException;
    Code:
       0: getstatic     #21                 // Field LOG:Lorg/slf4j/Logger;
       3: invokeinterface #163,  1          // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
       8: ifeq          33
      11: getstatic     #21                 // Field LOG:Lorg/slf4j/Logger;
      14: ldc           #164                // String Writing {} buffers of {}
      16: iload         5
      18: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      21: aload_1
      22: invokevirtual #85                 // Method java/lang/Long.longValue:()J
      25: invokestatic  #10                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
      28: invokeinterface #165,  4          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      33: iload         5
      35: ifne          39
      38: return
      39: iload         5
      41: anewarray     #166                // class java/nio/ByteBuffer
      44: astore        6
      46: iconst_0
      47: istore        7
      49: iload         7
      51: iload         5
      53: if_icmpge     161
      56: aload         6
      58: iload         7
      60: aload_2
      61: iload         4
      63: iload         7
      65: iadd
      66: invokeinterface #152,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      71: checkcast     #153                // class org/apache/bookkeeper/bookie/LedgerEntryPage
      74: invokevirtual #167                // Method org/apache/bookkeeper/bookie/LedgerEntryPage.getPageToWrite:()Ljava/nio/ByteBuffer;
      77: aastore
      78: aload_2
      79: iload         4
      81: iload         7
      83: iadd
      84: invokeinterface #152,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      89: checkcast     #153                // class org/apache/bookkeeper/bookie/LedgerEntryPage
      92: invokevirtual #168                // Method org/apache/bookkeeper/bookie/LedgerEntryPage.getLedger:()J
      95: aload_1
      96: invokevirtual #85                 // Method java/lang/Long.longValue:()J
      99: lcmp
     100: ifeq          155
     103: new           #79                 // class java/io/IOException
     106: dup
     107: new           #5                  // class java/lang/StringBuilder
     110: dup
     111: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
     114: ldc           #169                // String Writing to
     116: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: aload_1
     120: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     123: ldc           #170                // String  but page belongs to
     125: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: aload_2
     129: iload         4
     131: iload         7
     133: iadd
     134: invokeinterface #152,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     139: checkcast     #153                // class org/apache/bookkeeper/bookie/LedgerEntryPage
     142: invokevirtual #168                // Method org/apache/bookkeeper/bookie/LedgerEntryPage.getLedger:()J
     145: invokevirtual #171                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     148: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     151: invokespecial #110                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     154: athrow
     155: iinc          7, 1
     158: goto          49
     161: lconst_0
     162: lstore        7
     164: aload         6
     166: aload         6
     168: arraylength
     169: iconst_1
     170: isub
     171: aaload
     172: invokevirtual #172                // Method java/nio/ByteBuffer.remaining:()I
     175: ifle          276
     178: lconst_0
     179: lstore        9
     181: aload_3
     182: aload         6
     184: aload_2
     185: iload         4
     187: iconst_0
     188: iadd
     189: invokeinterface #152,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     194: checkcast     #153                // class org/apache/bookkeeper/bookie/LedgerEntryPage
     197: invokevirtual #173                // Method org/apache/bookkeeper/bookie/LedgerEntryPage.getFirstEntryPosition:()J
     200: invokevirtual #174                // Method org/apache/bookkeeper/bookie/FileInfo.write:([Ljava/nio/ByteBuffer;J)J
     203: lstore        9
     205: goto          222
     208: astore        11
     210: new           #54                 // class org/apache/bookkeeper/bookie/Bookie$NoLedgerException
     213: dup
     214: aload_1
     215: invokevirtual #85                 // Method java/lang/Long.longValue:()J
     218: invokespecial #55                 // Method org/apache/bookkeeper/bookie/Bookie$NoLedgerException."<init>":(J)V
     221: athrow
     222: lload         9
     224: lconst_0
     225: lcmp
     226: ifgt          266
     229: new           #79                 // class java/io/IOException
     232: dup
     233: new           #5                  // class java/lang/StringBuilder
     236: dup
     237: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
     240: ldc           #175                // String Short write to ledger
     242: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     245: aload_1
     246: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     249: ldc           #176                // String  rc =
     251: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     254: lload         9
     256: invokevirtual #171                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     259: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     262: invokespecial #110                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     265: athrow
     266: lload         7
     268: lload         9
     270: ladd
     271: lstore        7
     273: goto          164
     276: lload         7
     278: iload         5
     280: i2l
     281: aload_0
     282: getfield      #19                 // Field pageSize:I
     285: i2l
     286: lmul
     287: lcmp
     288: ifeq          343
     291: new           #79                 // class java/io/IOException
     294: dup
     295: new           #5                  // class java/lang/StringBuilder
     298: dup
     299: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
     302: ldc           #175                // String Short write to ledger
     304: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     307: aload_1
     308: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     311: ldc           #177                // String  wrote
     313: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     316: lload         7
     318: invokevirtual #171                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     321: ldc           #178                // String  expected
     323: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     326: iload         5
     328: aload_0
     329: getfield      #19                 // Field pageSize:I
     332: imul
     333: invokevirtual #179                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     336: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     339: invokespecial #110                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     342: athrow
     343: return
    Exception table:
       from    to  target type
         181   205   208   Class org/apache/bookkeeper/bookie/FileInfo$FileInfoDeletedException

  boolean updatePage(org.apache.bookkeeper.bookie.LedgerEntryPage) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #180                // Method org/apache/bookkeeper/bookie/LedgerEntryPage.isClean:()Z
       4: ifne          17
       7: new           #79                 // class java/io/IOException
      10: dup
      11: ldc           #181                // String Trying to update a dirty page
      13: invokespecial #110                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aconst_null
      18: astore_2
      19: aload_0
      20: aload_1
      21: invokevirtual #168                // Method org/apache/bookkeeper/bookie/LedgerEntryPage.getLedger:()J
      24: invokestatic  #56                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      27: aconst_null
      28: invokevirtual #113                // Method getFileInfo:(Ljava/lang/Long;[B)Lorg/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo;
      31: astore_2
      32: aload_1
      33: invokevirtual #173                // Method org/apache/bookkeeper/bookie/LedgerEntryPage.getFirstEntryPosition:()J
      36: lstore_3
      37: lload_3
      38: aload_2
      39: invokevirtual #182                // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.size:()J
      42: lcmp
      43: iflt          64
      46: aload_1
      47: invokevirtual #183                // Method org/apache/bookkeeper/bookie/LedgerEntryPage.zeroPage:()V
      50: iconst_1
      51: istore        5
      53: aload_2
      54: ifnull        61
      57: aload_2
      58: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
      61: iload         5
      63: ireturn
      64: aload_1
      65: aload_2
      66: invokevirtual #184                // Method org/apache/bookkeeper/bookie/LedgerEntryPage.readPage:(Lorg/apache/bookkeeper/bookie/FileInfo;)V
      69: iconst_0
      70: istore        5
      72: aload_2
      73: ifnull        80
      76: aload_2
      77: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
      80: iload         5
      82: ireturn
      83: astore        6
      85: aload_2
      86: ifnull        93
      89: aload_2
      90: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
      93: aload         6
      95: athrow
    Exception table:
       from    to  target type
          19    53    83   any
          64    72    83   any
          83    85    83   any

  long getPersistEntryBeyondInMem(long, long) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore        5
       3: lload_3
       4: lstore        6
       6: aload_0
       7: lload_1
       8: invokestatic  #56                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      11: aconst_null
      12: invokevirtual #113                // Method getFileInfo:(Ljava/lang/Long;[B)Lorg/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo;
      15: astore        5
      17: aload         5
      19: invokevirtual #182                // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.size:()J
      22: lstore        8
      24: lconst_0
      25: lload         8
      27: invokestatic  #185                // Method org/apache/bookkeeper/bookie/LedgerEntryPage.getIndexEntrySize:()I
      30: i2l
      31: lrem
      32: lcmp
      33: ifeq          62
      36: getstatic     #21                 // Field LOG:Lorg/slf4j/Logger;
      39: ldc           #186                // String Index file of ledger {} is not aligned with index entry size.
      41: lload_1
      42: invokestatic  #56                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      45: invokeinterface #187,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      50: lload         8
      52: lload         8
      54: invokestatic  #185                // Method org/apache/bookkeeper/bookie/LedgerEntryPage.getIndexEntrySize:()I
      57: i2l
      58: lrem
      59: lsub
      60: lstore        8
      62: lload         8
      64: lload         6
      66: invokestatic  #185                // Method org/apache/bookkeeper/bookie/LedgerEntryPage.getIndexEntrySize:()I
      69: i2l
      70: lmul
      71: lcmp
      72: ifle          227
      75: aload_0
      76: getfield      #19                 // Field pageSize:I
      79: invokestatic  #188                // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      82: astore        10
      84: lload         8
      86: aload_0
      87: getfield      #19                 // Field pageSize:I
      90: i2l
      91: lsub
      92: lstore        11
      94: lload         11
      96: lconst_0
      97: lcmp
      98: ifge          104
     101: lconst_0
     102: lstore        11
     104: aload         5
     106: aload         10
     108: lload         11
     110: iconst_0
     111: invokevirtual #189                // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.read:(Ljava/nio/ByteBuffer;JZ)I
     114: pop
     115: goto          154
     118: astore        13
     120: new           #190                // class org/apache/bookkeeper/bookie/ShortReadException
     123: dup
     124: new           #5                  // class java/lang/StringBuilder
     127: dup
     128: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
     131: ldc           #191                // String Short read on ledger
     133: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: lload_1
     137: invokevirtual #171                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     140: ldc           #192                // String  :
     142: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     148: aload         13
     150: invokespecial #193                // Method org/apache/bookkeeper/bookie/ShortReadException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     153: athrow
     154: aload         10
     156: invokevirtual #194                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     159: pop
     160: lload         11
     162: invokestatic  #185                // Method org/apache/bookkeeper/bookie/LedgerEntryPage.getIndexEntrySize:()I
     165: i2l
     166: ldiv
     167: lstore        13
     169: aload_0
     170: getfield      #20                 // Field entriesPerPage:I
     173: iconst_1
     174: isub
     175: istore        15
     177: iload         15
     179: iflt          227
     182: aload         10
     184: iload         15
     186: invokestatic  #185                // Method org/apache/bookkeeper/bookie/LedgerEntryPage.getIndexEntrySize:()I
     189: imul
     190: invokevirtual #195                // Method java/nio/ByteBuffer.getLong:(I)J
     193: lconst_0
     194: lcmp
     195: ifeq          221
     198: lload         6
     200: lload         13
     202: iload         15
     204: i2l
     205: ladd
     206: lcmp
     207: ifge          227
     210: lload         13
     212: iload         15
     214: i2l
     215: ladd
     216: lstore        6
     218: goto          227
     221: iinc          15, -1
     224: goto          177
     227: aload         5
     229: ifnull        255
     232: aload         5
     234: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
     237: goto          255
     240: astore        16
     242: aload         5
     244: ifnull        252
     247: aload         5
     249: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
     252: aload         16
     254: athrow
     255: lload         6
     257: lreturn
    Exception table:
       from    to  target type
         104   115   118   Class org/apache/bookkeeper/bookie/ShortReadException
           6   227   240   any
         240   242   240   any

  public org.apache.bookkeeper.bookie.LedgerCache$LedgerIndexMetadata readLedgerIndexMetadata(long) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: lload_1
       4: invokestatic  #56                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       7: aconst_null
       8: invokevirtual #113                // Method getFileInfo:(Ljava/lang/Long;[B)Lorg/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo;
      11: astore_3
      12: new           #196                // class org/apache/bookkeeper/bookie/LedgerCache$LedgerIndexMetadata
      15: dup
      16: aload_3
      17: invokevirtual #126                // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.getMasterKey:()[B
      20: aload_3
      21: invokevirtual #182                // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.size:()J
      24: aload_3
      25: invokevirtual #128                // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.isFenced:()Z
      28: invokespecial #197                // Method org/apache/bookkeeper/bookie/LedgerCache$LedgerIndexMetadata."<init>":([BJZ)V
      31: astore        4
      33: aload_3
      34: ifnull        41
      37: aload_3
      38: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
      41: aload         4
      43: areturn
      44: astore        5
      46: aload_3
      47: ifnull        54
      50: aload_3
      51: invokevirtual #64                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.release:()V
      54: aload         5
      56: athrow
    Exception table:
       from    to  target type
           2    33    44   any
          44    46    44   any

  private org.apache.bookkeeper.bookie.FileInfoBackingCache$CachedFileInfo lambda$getFileInfo$2(java.lang.Long, byte[]) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #33                 // Field fileInfoBackingCache:Lorg/apache/bookkeeper/bookie/FileInfoBackingCache;
       4: aload_1
       5: invokevirtual #85                 // Method java/lang/Long.longValue:()J
       8: aload_2
       9: invokevirtual #198                // Method org/apache/bookkeeper/bookie/FileInfoBackingCache.loadFileInfo:(J[B)Lorg/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo;
      12: astore_3
      13: aload_0
      14: getfield      #17                 // Field activeLedgers:Lorg/apache/bookkeeper/util/SnapshotMap;
      17: aload_1
      18: iconst_1
      19: invokestatic  #73                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      22: invokevirtual #112                // Method org/apache/bookkeeper/util/SnapshotMap.put:(Ljava/lang/Object;Ljava/lang/Object;)V
      25: aload_3
      26: areturn

  private java.lang.Number lambda$new$1();
    Code:
       0: aload_0
       1: getfield      #39                 // Field readFileInfoCache:Lcom/google/common/cache/Cache;
       4: invokeinterface #199,  1          // InterfaceMethod com/google/common/cache/Cache.size:()J
       9: invokestatic  #56                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      12: areturn

  private java.lang.Number lambda$new$0();
    Code:
       0: aload_0
       1: getfield      #38                 // Field writeFileInfoCache:Lcom/google/common/cache/Cache;
       4: invokeinterface #199,  1          // InterfaceMethod com/google/common/cache/Cache.size:()J
       9: invokestatic  #56                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      12: areturn

  static {};
    Code:
       0: ldc           #11                 // class org/apache/bookkeeper/bookie/IndexPersistenceMgr
       2: invokestatic  #200                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #21                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
