Compiled from "Auditor.java"
class org.apache.bookkeeper.replication.Auditor$16 extends org.apache.bookkeeper.proto.BookkeeperInternalCallbacks$MultiCallback {
  final java.util.concurrent.Semaphore val$maxConcurrentSemaphore;

  final org.apache.bookkeeper.replication.Auditor this$0;

  org.apache.bookkeeper.replication.Auditor$16(org.apache.bookkeeper.replication.Auditor, int, org.apache.zookeeper.AsyncCallback$VoidCallback, java.lang.Object, int, int, java.util.concurrent.Semaphore);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/bookkeeper/replication/Auditor;
       5: aload_0
       6: aload         7
       8: putfield      #2                  // Field val$maxConcurrentSemaphore:Ljava/util/concurrent/Semaphore;
      11: aload_0
      12: iload_2
      13: aload_3
      14: aload         4
      16: iload         5
      18: iload         6
      20: invokespecial #3                  // Method org/apache/bookkeeper/proto/BookkeeperInternalCallbacks$MultiCallback."<init>":(ILorg/apache/zookeeper/AsyncCallback$VoidCallback;Ljava/lang/Object;II)V
      23: return

  public void processResult(int, java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokespecial #4                  // Method org/apache/bookkeeper/proto/BookkeeperInternalCallbacks$MultiCallback.processResult:(ILjava/lang/String;Ljava/lang/Object;)V
       7: aload_0
       8: getfield      #2                  // Field val$maxConcurrentSemaphore:Ljava/util/concurrent/Semaphore;
      11: invokevirtual #5                  // Method java/util/concurrent/Semaphore.release:()V
      14: goto          29
      17: astore        4
      19: aload_0
      20: getfield      #2                  // Field val$maxConcurrentSemaphore:Ljava/util/concurrent/Semaphore;
      23: invokevirtual #5                  // Method java/util/concurrent/Semaphore.release:()V
      26: aload         4
      28: athrow
      29: return
    Exception table:
       from    to  target type
           0     7    17   any
          17    19    17   any
}
