Compiled from "PendingReadOp.java"
class org.apache.bookkeeper.client.PendingReadOp implements org.apache.bookkeeper.proto.BookkeeperInternalCallbacks$ReadEntryCallback,org.apache.bookkeeper.common.util.SafeRunnable {
  private static final org.slf4j.Logger LOG;

  private java.util.concurrent.ScheduledFuture<?> speculativeTask;

  protected final java.util.List<org.apache.bookkeeper.client.PendingReadOp$LedgerEntryRequest> seq;

  private final java.util.concurrent.CompletableFuture<org.apache.bookkeeper.client.api.LedgerEntries> future;

  private final java.util.Set<org.apache.bookkeeper.net.BookieId> heardFromHosts;

  private final java.util.BitSet heardFromHostsBitSet;

  private final java.util.Set<org.apache.bookkeeper.net.BookieId> sentToHosts;

  org.apache.bookkeeper.client.LedgerHandle lh;

  final org.apache.bookkeeper.client.ClientContext clientCtx;

  long numPendingEntries;

  final long startEntryId;

  final long endEntryId;

  long requestTimeNanos;

  final int requiredBookiesMissingEntryForRecovery;

  final boolean isRecoveryRead;

  boolean parallelRead;

  final java.util.concurrent.atomic.AtomicBoolean complete;

  boolean allowFailFast;

  org.apache.bookkeeper.client.PendingReadOp(org.apache.bookkeeper.client.LedgerHandle, org.apache.bookkeeper.client.ClientContext, long, long, boolean);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #5                  // Field speculativeTask:Ljava/util/concurrent/ScheduledFuture;
       9: aload_0
      10: new           #6                  // class java/util/HashSet
      13: dup
      14: invokespecial #7                  // Method java/util/HashSet."<init>":()V
      17: putfield      #1                  // Field sentToHosts:Ljava/util/Set;
      20: aload_0
      21: iconst_0
      22: putfield      #8                  // Field parallelRead:Z
      25: aload_0
      26: new           #9                  // class java/util/concurrent/atomic/AtomicBoolean
      29: dup
      30: iconst_0
      31: invokespecial #10                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      34: putfield      #11                 // Field complete:Ljava/util/concurrent/atomic/AtomicBoolean;
      37: aload_0
      38: iconst_0
      39: putfield      #12                 // Field allowFailFast:Z
      42: aload_0
      43: new           #13                 // class java/util/ArrayList
      46: dup
      47: lload         5
      49: lconst_1
      50: ladd
      51: lload_3
      52: lsub
      53: l2i
      54: invokespecial #14                 // Method java/util/ArrayList."<init>":(I)V
      57: putfield      #15                 // Field seq:Ljava/util/List;
      60: aload_0
      61: new           #16                 // class java/util/concurrent/CompletableFuture
      64: dup
      65: invokespecial #17                 // Method java/util/concurrent/CompletableFuture."<init>":()V
      68: putfield      #18                 // Field future:Ljava/util/concurrent/CompletableFuture;
      71: aload_0
      72: aload_1
      73: putfield      #19                 // Field lh:Lorg/apache/bookkeeper/client/LedgerHandle;
      76: aload_0
      77: aload_2
      78: putfield      #20                 // Field clientCtx:Lorg/apache/bookkeeper/client/ClientContext;
      81: aload_0
      82: lload_3
      83: putfield      #21                 // Field startEntryId:J
      86: aload_0
      87: lload         5
      89: putfield      #22                 // Field endEntryId:J
      92: aload_0
      93: iload         7
      95: putfield      #23                 // Field isRecoveryRead:Z
      98: aload_0
      99: iconst_0
     100: putfield      #12                 // Field allowFailFast:Z
     103: aload_0
     104: lload         5
     106: lload_3
     107: lsub
     108: lconst_1
     109: ladd
     110: putfield      #24                 // Field numPendingEntries:J
     113: aload_0
     114: aload_0
     115: invokevirtual #25                 // Method getLedgerMetadata:()Lorg/apache/bookkeeper/client/api/LedgerMetadata;
     118: invokeinterface #26,  1           // InterfaceMethod org/apache/bookkeeper/client/api/LedgerMetadata.getWriteQuorumSize:()I
     123: aload_0
     124: invokevirtual #25                 // Method getLedgerMetadata:()Lorg/apache/bookkeeper/client/api/LedgerMetadata;
     127: invokeinterface #27,  1           // InterfaceMethod org/apache/bookkeeper/client/api/LedgerMetadata.getAckQuorumSize:()I
     132: isub
     133: iconst_1
     134: iadd
     135: putfield      #28                 // Field requiredBookiesMissingEntryForRecovery:I
     138: aload_0
     139: new           #6                  // class java/util/HashSet
     142: dup
     143: invokespecial #7                  // Method java/util/HashSet."<init>":()V
     146: putfield      #29                 // Field heardFromHosts:Ljava/util/Set;
     149: aload_0
     150: new           #30                 // class java/util/BitSet
     153: dup
     154: aload_0
     155: invokevirtual #25                 // Method getLedgerMetadata:()Lorg/apache/bookkeeper/client/api/LedgerMetadata;
     158: invokeinterface #31,  1           // InterfaceMethod org/apache/bookkeeper/client/api/LedgerMetadata.getEnsembleSize:()I
     163: invokespecial #32                 // Method java/util/BitSet."<init>":(I)V
     166: putfield      #2                  // Field heardFromHostsBitSet:Ljava/util/BitSet;
     169: return

  java.util.concurrent.CompletableFuture<org.apache.bookkeeper.client.api.LedgerEntries> future();
    Code:
       0: aload_0
       1: getfield      #18                 // Field future:Ljava/util/concurrent/CompletableFuture;
       4: areturn

  protected org.apache.bookkeeper.client.api.LedgerMetadata getLedgerMetadata();
    Code:
       0: aload_0
       1: getfield      #19                 // Field lh:Lorg/apache/bookkeeper/client/LedgerHandle;
       4: invokevirtual #33                 // Method org/apache/bookkeeper/client/LedgerHandle.getLedgerMetadata:()Lorg/apache/bookkeeper/client/api/LedgerMetadata;
       7: areturn

  protected void cancelSpeculativeTask(boolean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field speculativeTask:Ljava/util/concurrent/ScheduledFuture;
       4: ifnull        23
       7: aload_0
       8: getfield      #5                  // Field speculativeTask:Ljava/util/concurrent/ScheduledFuture;
      11: iload_1
      12: invokeinterface #34,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      17: pop
      18: aload_0
      19: aconst_null
      20: putfield      #5                  // Field speculativeTask:Ljava/util/concurrent/ScheduledFuture;
      23: return

  public java.util.concurrent.ScheduledFuture<?> getSpeculativeTask();
    Code:
       0: aload_0
       1: getfield      #5                  // Field speculativeTask:Ljava/util/concurrent/ScheduledFuture;
       4: areturn

  org.apache.bookkeeper.client.PendingReadOp parallelRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field parallelRead:Z
       5: aload_0
       6: areturn

  void allowFailFastOnUnwritableChannel();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #12                 // Field allowFailFast:Z
       5: return

  public void submit();
    Code:
       0: aload_0
       1: getfield      #20                 // Field clientCtx:Lorg/apache/bookkeeper/client/ClientContext;
       4: invokeinterface #35,  1           // InterfaceMethod org/apache/bookkeeper/client/ClientContext.getMainWorkerPool:()Lorg/apache/bookkeeper/common/util/OrderedExecutor;
       9: aload_0
      10: getfield      #19                 // Field lh:Lorg/apache/bookkeeper/client/LedgerHandle;
      13: getfield      #36                 // Field org/apache/bookkeeper/client/LedgerHandle.ledgerId:J
      16: aload_0
      17: invokevirtual #37                 // Method org/apache/bookkeeper/common/util/OrderedExecutor.executeOrdered:(JLorg/apache/bookkeeper/common/util/SafeRunnable;)V
      20: return

  void initiate();
    Code:
       0: aload_0
       1: getfield      #21                 // Field startEntryId:J
       4: lstore_1
       5: aload_0
       6: getfield      #21                 // Field startEntryId:J
       9: lstore_3
      10: aload_0
      11: invokestatic  #38                 // Method org/apache/bookkeeper/util/MathUtils.nowInNano:()J
      14: putfield      #39                 // Field requestTimeNanos:J
      17: aconst_null
      18: astore        5
      20: lload_3
      21: lload_1
      22: lcmp
      23: ifne          47
      26: aload_0
      27: invokevirtual #25                 // Method getLedgerMetadata:()Lorg/apache/bookkeeper/client/api/LedgerMetadata;
      30: lload_3
      31: invokeinterface #40,  3           // InterfaceMethod org/apache/bookkeeper/client/api/LedgerMetadata.getEnsembleAt:(J)Ljava/util/List;
      36: astore        5
      38: aload_0
      39: invokevirtual #25                 // Method getLedgerMetadata:()Lorg/apache/bookkeeper/client/api/LedgerMetadata;
      42: lload_3
      43: invokestatic  #41                 // Method org/apache/bookkeeper/client/LedgerMetadataUtils.getNextEnsembleChange:(Lorg/apache/bookkeeper/client/api/LedgerMetadata;J)J
      46: lstore_1
      47: aload_0
      48: getfield      #8                  // Field parallelRead:Z
      51: ifeq          77
      54: new           #42                 // class org/apache/bookkeeper/client/PendingReadOp$ParallelReadRequest
      57: dup
      58: aload_0
      59: aload         5
      61: aload_0
      62: getfield      #19                 // Field lh:Lorg/apache/bookkeeper/client/LedgerHandle;
      65: getfield      #36                 // Field org/apache/bookkeeper/client/LedgerHandle.ledgerId:J
      68: lload_3
      69: invokespecial #43                 // Method org/apache/bookkeeper/client/PendingReadOp$ParallelReadRequest."<init>":(Lorg/apache/bookkeeper/client/PendingReadOp;Ljava/util/List;JJ)V
      72: astore        6
      74: goto          97
      77: new           #44                 // class org/apache/bookkeeper/client/PendingReadOp$SequenceReadRequest
      80: dup
      81: aload_0
      82: aload         5
      84: aload_0
      85: getfield      #19                 // Field lh:Lorg/apache/bookkeeper/client/LedgerHandle;
      88: getfield      #36                 // Field org/apache/bookkeeper/client/LedgerHandle.ledgerId:J
      91: lload_3
      92: invokespecial #45                 // Method org/apache/bookkeeper/client/PendingReadOp$SequenceReadRequest."<init>":(Lorg/apache/bookkeeper/client/PendingReadOp;Ljava/util/List;JJ)V
      95: astore        6
      97: aload_0
      98: getfield      #15                 // Field seq:Ljava/util/List;
     101: aload         6
     103: invokeinterface #46,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     108: pop
     109: lload_3
     110: lconst_1
     111: ladd
     112: lstore_3
     113: lload_3
     114: aload_0
     115: getfield      #22                 // Field endEntryId:J
     118: lcmp
     119: ifle          20
     122: aload_0
     123: getfield      #15                 // Field seq:Ljava/util/List;
     126: invokeinterface #47,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     131: astore        6
     133: aload         6
     135: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     140: ifeq          226
     143: aload         6
     145: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     150: checkcast     #50                 // class org/apache/bookkeeper/client/PendingReadOp$LedgerEntryRequest
     153: astore        7
     155: aload         7
     157: invokevirtual #51                 // Method org/apache/bookkeeper/client/PendingReadOp$LedgerEntryRequest.read:()V
     160: aload_0
     161: getfield      #8                  // Field parallelRead:Z
     164: ifne          223
     167: aload_0
     168: getfield      #20                 // Field clientCtx:Lorg/apache/bookkeeper/client/ClientContext;
     171: invokeinterface #52,  1           // InterfaceMethod org/apache/bookkeeper/client/ClientContext.getConf:()Lorg/apache/bookkeeper/client/ClientInternalConf;
     176: getfield      #53                 // Field org/apache/bookkeeper/client/ClientInternalConf.readSpeculativeRequestPolicy:Ljava/util/Optional;
     179: invokevirtual #54                 // Method java/util/Optional.isPresent:()Z
     182: ifeq          223
     185: aload_0
     186: aload_0
     187: getfield      #20                 // Field clientCtx:Lorg/apache/bookkeeper/client/ClientContext;
     190: invokeinterface #52,  1           // InterfaceMethod org/apache/bookkeeper/client/ClientContext.getConf:()Lorg/apache/bookkeeper/client/ClientInternalConf;
     195: getfield      #53                 // Field org/apache/bookkeeper/client/ClientInternalConf.readSpeculativeRequestPolicy:Ljava/util/Optional;
     198: invokevirtual #55                 // Method java/util/Optional.get:()Ljava/lang/Object;
     201: checkcast     #56                 // class org/apache/bookkeeper/client/SpeculativeRequestExecutionPolicy
     204: aload_0
     205: getfield      #20                 // Field clientCtx:Lorg/apache/bookkeeper/client/ClientContext;
     208: invokeinterface #57,  1           // InterfaceMethod org/apache/bookkeeper/client/ClientContext.getScheduler:()Lorg/apache/bookkeeper/common/util/OrderedScheduler;
     213: aload         7
     215: invokeinterface #58,  3           // InterfaceMethod org/apache/bookkeeper/client/SpeculativeRequestExecutionPolicy.initiateSpeculativeRequest:(Ljava/util/concurrent/ScheduledExecutorService;Lorg/apache/bookkeeper/client/SpeculativeRequestExecutor;)Ljava/util/concurrent/ScheduledFuture;
     220: putfield      #5                  // Field speculativeTask:Ljava/util/concurrent/ScheduledFuture;
     223: goto          133
     226: return

  public void safeRun();
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method initiate:()V
       4: return

  void sendReadTo(int, org.apache.bookkeeper.net.BookieId, org.apache.bookkeeper.client.PendingReadOp$LedgerEntryRequest) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #19                 // Field lh:Lorg/apache/bookkeeper/client/LedgerHandle;
       4: getfield      #60                 // Field org/apache/bookkeeper/client/LedgerHandle.throttler:Lcom/google/common/util/concurrent/RateLimiter;
       7: ifnull        21
      10: aload_0
      11: getfield      #19                 // Field lh:Lorg/apache/bookkeeper/client/LedgerHandle;
      14: getfield      #60                 // Field org/apache/bookkeeper/client/LedgerHandle.throttler:Lcom/google/common/util/concurrent/RateLimiter;
      17: invokevirtual #61                 // Method com/google/common/util/concurrent/RateLimiter.acquire:()D
      20: pop2
      21: aload_0
      22: getfield      #23                 // Field isRecoveryRead:Z
      25: ifeq          80
      28: iconst_5
      29: istore        4
      31: aload_0
      32: getfield      #20                 // Field clientCtx:Lorg/apache/bookkeeper/client/ClientContext;
      35: invokeinterface #63,  1           // InterfaceMethod org/apache/bookkeeper/client/ClientContext.getBookieClient:()Lorg/apache/bookkeeper/proto/BookieClient;
      40: aload_2
      41: aload_0
      42: getfield      #19                 // Field lh:Lorg/apache/bookkeeper/client/LedgerHandle;
      45: getfield      #36                 // Field org/apache/bookkeeper/client/LedgerHandle.ledgerId:J
      48: aload_3
      49: getfield      #64                 // Field org/apache/bookkeeper/client/PendingReadOp$LedgerEntryRequest.eId:J
      52: aload_0
      53: new           #65                 // class org/apache/bookkeeper/client/PendingReadOp$ReadContext
      56: dup
      57: iload_1
      58: aload_2
      59: aload_3
      60: invokespecial #66                 // Method org/apache/bookkeeper/client/PendingReadOp$ReadContext."<init>":(ILorg/apache/bookkeeper/net/BookieId;Lorg/apache/bookkeeper/client/PendingReadOp$LedgerEntryRequest;)V
      63: iload         4
      65: aload_0
      66: getfield      #19                 // Field lh:Lorg/apache/bookkeeper/client/LedgerHandle;
      69: getfield      #67                 // Field org/apache/bookkeeper/client/LedgerHandle.ledgerKey:[B
      72: invokeinterface #68,  10          // InterfaceMethod org/apache/bookkeeper/proto/BookieClient.readEntry:(Lorg/apache/bookkeeper/net/BookieId;JJLorg/apache/bookkeeper/proto/BookkeeperInternalCallbacks$ReadEntryCallback;Ljava/lang/Object;I[B)V
      77: goto          118
      80: aload_0
      81: getfield      #20                 // Field clientCtx:Lorg/apache/bookkeeper/client/ClientContext;
      84: invokeinterface #63,  1           // InterfaceMethod org/apache/bookkeeper/client/ClientContext.getBookieClient:()Lorg/apache/bookkeeper/proto/BookieClient;
      89: aload_2
      90: aload_0
      91: getfield      #19                 // Field lh:Lorg/apache/bookkeeper/client/LedgerHandle;
      94: getfield      #36                 // Field org/apache/bookkeeper/client/LedgerHandle.ledgerId:J
      97: aload_3
      98: getfield      #64                 // Field org/apache/bookkeeper/client/PendingReadOp$LedgerEntryRequest.eId:J
     101: aload_0
     102: new           #65                 // class org/apache/bookkeeper/client/PendingReadOp$ReadContext
     105: dup
     106: iload_1
     107: aload_2
     108: aload_3
     109: invokespecial #66                 // Method org/apache/bookkeeper/client/PendingReadOp$ReadContext."<init>":(ILorg/apache/bookkeeper/net/BookieId;Lorg/apache/bookkeeper/client/PendingReadOp$LedgerEntryRequest;)V
     112: iconst_0
     113: invokeinterface #69,  9           // InterfaceMethod org/apache/bookkeeper/proto/BookieClient.readEntry:(Lorg/apache/bookkeeper/net/BookieId;JJLorg/apache/bookkeeper/proto/BookkeeperInternalCallbacks$ReadEntryCallback;Ljava/lang/Object;I)V
     118: return

  public void readEntryComplete(int, long, long, io.netty.buffer.ByteBuf, java.lang.Object);
    Code:
       0: aload         7
       2: checkcast     #65                 // class org/apache/bookkeeper/client/PendingReadOp$ReadContext
       5: astore        8
       7: aload         8
       9: getfield      #70                 // Field org/apache/bookkeeper/client/PendingReadOp$ReadContext.entry:Lorg/apache/bookkeeper/client/PendingReadOp$LedgerEntryRequest;
      12: astore        9
      14: iload_1
      15: ifeq          57
      18: aload         9
      20: aload         8
      22: getfield      #71                 // Field org/apache/bookkeeper/client/PendingReadOp$ReadContext.bookieIndex:I
      25: aload         8
      27: getfield      #72                 // Field org/apache/bookkeeper/client/PendingReadOp$ReadContext.to:Lorg/apache/bookkeeper/net/BookieId;
      30: new           #73                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #75                 // String Error:
      39: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: iload_1
      43: invokestatic  #77                 // Method org/apache/bookkeeper/client/BKException.getMessage:(I)Ljava/lang/String;
      46: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: iload_1
      53: invokevirtual #79                 // Method org/apache/bookkeeper/client/PendingReadOp$LedgerEntryRequest.logErrorAndReattemptRead:(ILorg/apache/bookkeeper/net/BookieId;Ljava/lang/String;I)V
      56: return
      57: aload_0
      58: getfield      #29                 // Field heardFromHosts:Ljava/util/Set;
      61: aload         8
      63: getfield      #72                 // Field org/apache/bookkeeper/client/PendingReadOp$ReadContext.to:Lorg/apache/bookkeeper/net/BookieId;
      66: invokeinterface #80,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      71: pop
      72: aload_0
      73: getfield      #2                  // Field heardFromHostsBitSet:Ljava/util/BitSet;
      76: aload         8
      78: getfield      #71                 // Field org/apache/bookkeeper/client/PendingReadOp$ReadContext.bookieIndex:I
      81: iconst_1
      82: invokevirtual #81                 // Method java/util/BitSet.set:(IZ)V
      85: aload         6
      87: invokevirtual #82                 // Method io/netty/buffer/ByteBuf.retain:()Lio/netty/buffer/ByteBuf;
      90: pop
      91: aload         9
      93: aload         8
      95: getfield      #71                 // Field org/apache/bookkeeper/client/PendingReadOp$ReadContext.bookieIndex:I
      98: aload         8
     100: getfield      #72                 // Field org/apache/bookkeeper/client/PendingReadOp$ReadContext.to:Lorg/apache/bookkeeper/net/BookieId;
     103: aload         6
     105: invokevirtual #83                 // Method org/apache/bookkeeper/client/PendingReadOp$LedgerEntryRequest.complete:(ILorg/apache/bookkeeper/net/BookieId;Lio/netty/buffer/ByteBuf;)Z
     108: ifeq          139
     111: aload_0
     112: getfield      #23                 // Field isRecoveryRead:Z
     115: ifne          131
     118: aload_0
     119: getfield      #19                 // Field lh:Lorg/apache/bookkeeper/client/LedgerHandle;
     122: aload         8
     124: invokevirtual #84                 // Method org/apache/bookkeeper/client/PendingReadOp$ReadContext.getLastAddConfirmed:()J
     127: lconst_0
     128: invokevirtual #85                 // Method org/apache/bookkeeper/client/LedgerHandle.updateLastConfirmed:(JJ)V
     131: aload_0
     132: iconst_0
     133: invokevirtual #87                 // Method submitCallback:(I)V
     136: goto          145
     139: aload         6
     141: invokevirtual #88                 // Method io/netty/buffer/ByteBuf.release:()Z
     144: pop
     145: aload_0
     146: getfield      #24                 // Field numPendingEntries:J
     149: lconst_0
     150: lcmp
     151: ifge          195
     154: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     157: ldc           #89                 // String Read too many values for ledger {} : [{}, {}].
     159: iconst_3
     160: anewarray     #90                 // class java/lang/Object
     163: dup
     164: iconst_0
     165: lload_2
     166: invokestatic  #91                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     169: aastore
     170: dup
     171: iconst_1
     172: aload_0
     173: getfield      #21                 // Field startEntryId:J
     176: invokestatic  #91                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     179: aastore
     180: dup
     181: iconst_2
     182: aload_0
     183: getfield      #22                 // Field endEntryId:J
     186: invokestatic  #91                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     189: aastore
     190: invokeinterface #92,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;[Ljava/lang/Object;)V
     195: return

  protected void submitCallback(int);
    Code:
       0: iconst_0
       1: iload_1
       2: if_icmpne     25
       5: aload_0
       6: dup
       7: getfield      #24                 // Field numPendingEntries:J
      10: lconst_1
      11: lsub
      12: putfield      #24                 // Field numPendingEntries:J
      15: aload_0
      16: getfield      #24                 // Field numPendingEntries:J
      19: lconst_0
      20: lcmp
      21: ifeq          25
      24: return
      25: aload_0
      26: getfield      #11                 // Field complete:Ljava/util/concurrent/atomic/AtomicBoolean;
      29: iconst_0
      30: iconst_1
      31: invokevirtual #93                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      34: ifne          38
      37: return
      38: aload_0
      39: iconst_1
      40: invokevirtual #94                 // Method cancelSpeculativeTask:(Z)V
      43: aload_0
      44: getfield      #39                 // Field requestTimeNanos:J
      47: invokestatic  #95                 // Method org/apache/bookkeeper/util/MathUtils.elapsedNanos:(J)J
      50: lstore_2
      51: iload_1
      52: ifeq          271
      55: ldc2_w        #97                 // long -1l
      58: lstore        4
      60: aconst_null
      61: astore        6
      63: aload_0
      64: getfield      #15                 // Field seq:Ljava/util/List;
      67: invokeinterface #47,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      72: astore        7
      74: aload         7
      76: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      81: ifeq          127
      84: aload         7
      86: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      91: checkcast     #50                 // class org/apache/bookkeeper/client/PendingReadOp$LedgerEntryRequest
      94: astore        8
      96: aload         8
      98: invokevirtual #99                 // Method org/apache/bookkeeper/client/PendingReadOp$LedgerEntryRequest.isComplete:()Z
     101: ifne          124
     104: aload         8
     106: getfield      #64                 // Field org/apache/bookkeeper/client/PendingReadOp$LedgerEntryRequest.eId:J
     109: lstore        4
     111: aload         8
     113: getfield      #100                // Field org/apache/bookkeeper/client/PendingReadOp$LedgerEntryRequest.rc:I
     116: invokestatic  #101                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     119: astore        6
     121: goto          127
     124: goto          74
     127: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     130: ldc           #102                // String Read of ledger entry failed: L{} E{}-E{}, Sent to {}, Heard from {} : bitset = {}, Error = \'{}\'. First unread entry is ({}, rc = {})
     132: bipush        9
     134: anewarray     #90                 // class java/lang/Object
     137: dup
     138: iconst_0
     139: aload_0
     140: getfield      #19                 // Field lh:Lorg/apache/bookkeeper/client/LedgerHandle;
     143: invokevirtual #103                // Method org/apache/bookkeeper/client/LedgerHandle.getId:()J
     146: invokestatic  #91                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     149: aastore
     150: dup
     151: iconst_1
     152: aload_0
     153: getfield      #21                 // Field startEntryId:J
     156: invokestatic  #91                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     159: aastore
     160: dup
     161: iconst_2
     162: aload_0
     163: getfield      #22                 // Field endEntryId:J
     166: invokestatic  #91                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     169: aastore
     170: dup
     171: iconst_3
     172: aload_0
     173: getfield      #1                  // Field sentToHosts:Ljava/util/Set;
     176: aastore
     177: dup
     178: iconst_4
     179: aload_0
     180: getfield      #29                 // Field heardFromHosts:Ljava/util/Set;
     183: aastore
     184: dup
     185: iconst_5
     186: aload_0
     187: getfield      #2                  // Field heardFromHostsBitSet:Ljava/util/BitSet;
     190: aastore
     191: dup
     192: bipush        6
     194: iload_1
     195: invokestatic  #77                 // Method org/apache/bookkeeper/client/BKException.getMessage:(I)Ljava/lang/String;
     198: aastore
     199: dup
     200: bipush        7
     202: lload         4
     204: invokestatic  #91                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     207: aastore
     208: dup
     209: bipush        8
     211: aload         6
     213: aastore
     214: invokeinterface #92,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;[Ljava/lang/Object;)V
     219: aload_0
     220: getfield      #20                 // Field clientCtx:Lorg/apache/bookkeeper/client/ClientContext;
     223: invokeinterface #104,  1          // InterfaceMethod org/apache/bookkeeper/client/ClientContext.getClientStats:()Lorg/apache/bookkeeper/client/BookKeeperClientStats;
     228: invokeinterface #105,  1          // InterfaceMethod org/apache/bookkeeper/client/BookKeeperClientStats.getReadOpLogger:()Lorg/apache/bookkeeper/stats/OpStatsLogger;
     233: lload_2
     234: getstatic     #106                // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     237: invokeinterface #107,  4          // InterfaceMethod org/apache/bookkeeper/stats/OpStatsLogger.registerFailedEvent:(JLjava/util/concurrent/TimeUnit;)V
     242: aload_0
     243: getfield      #15                 // Field seq:Ljava/util/List;
     246: invokedynamic #108,  0            // InvokeDynamic #0:accept:()Ljava/util/function/Consumer;
     251: invokeinterface #109,  2          // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
     256: aload_0
     257: getfield      #18                 // Field future:Ljava/util/concurrent/CompletableFuture;
     260: iload_1
     261: invokestatic  #110                // Method org/apache/bookkeeper/client/BKException.create:(I)Lorg/apache/bookkeeper/client/BKException;
     264: invokevirtual #111                // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
     267: pop
     268: goto          317
     271: aload_0
     272: getfield      #20                 // Field clientCtx:Lorg/apache/bookkeeper/client/ClientContext;
     275: invokeinterface #104,  1          // InterfaceMethod org/apache/bookkeeper/client/ClientContext.getClientStats:()Lorg/apache/bookkeeper/client/BookKeeperClientStats;
     280: invokeinterface #105,  1          // InterfaceMethod org/apache/bookkeeper/client/BookKeeperClientStats.getReadOpLogger:()Lorg/apache/bookkeeper/stats/OpStatsLogger;
     285: lload_2
     286: getstatic     #106                // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     289: invokeinterface #112,  4          // InterfaceMethod org/apache/bookkeeper/stats/OpStatsLogger.registerSuccessfulEvent:(JLjava/util/concurrent/TimeUnit;)V
     294: aload_0
     295: getfield      #18                 // Field future:Ljava/util/concurrent/CompletableFuture;
     298: aload_0
     299: getfield      #15                 // Field seq:Ljava/util/List;
     302: invokedynamic #113,  0            // InvokeDynamic #1:apply:()Lcom/google/common/base/Function;
     307: invokestatic  #114                // Method com/google/common/collect/Lists.transform:(Ljava/util/List;Lcom/google/common/base/Function;)Ljava/util/List;
     310: invokestatic  #115                // Method org/apache/bookkeeper/client/impl/LedgerEntriesImpl.create:(Ljava/util/List;)Lorg/apache/bookkeeper/client/impl/LedgerEntriesImpl;
     313: invokevirtual #116                // Method java/util/concurrent/CompletableFuture.complete:(Ljava/lang/Object;)Z
     316: pop
     317: return

  private static org.apache.bookkeeper.client.api.LedgerEntry lambda$submitCallback$0(org.apache.bookkeeper.client.PendingReadOp$LedgerEntryRequest);
    Code:
       0: aload_0
       1: getfield      #117                // Field org/apache/bookkeeper/client/PendingReadOp$LedgerEntryRequest.entryImpl:Lorg/apache/bookkeeper/client/impl/LedgerEntryImpl;
       4: areturn

  static org.slf4j.Logger access$000();
    Code:
       0: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static java.util.BitSet access$100(org.apache.bookkeeper.client.PendingReadOp);
    Code:
       0: aload_0
       1: getfield      #2                  // Field heardFromHostsBitSet:Ljava/util/BitSet;
       4: areturn

  static java.util.Set access$200(org.apache.bookkeeper.client.PendingReadOp);
    Code:
       0: aload_0
       1: getfield      #1                  // Field sentToHosts:Ljava/util/Set;
       4: areturn

  static {};
    Code:
       0: ldc           #118                // class org/apache/bookkeeper/client/PendingReadOp
       2: invokestatic  #119                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
