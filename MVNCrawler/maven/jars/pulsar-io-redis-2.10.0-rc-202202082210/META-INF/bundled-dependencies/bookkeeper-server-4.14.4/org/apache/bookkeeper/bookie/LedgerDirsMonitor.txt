Compiled from "LedgerDirsMonitor.java"
class org.apache.bookkeeper.bookie.LedgerDirsMonitor {
  private static final org.slf4j.Logger LOG;

  private final int interval;

  private final org.apache.bookkeeper.conf.ServerConfiguration conf;

  private final org.apache.bookkeeper.util.DiskChecker diskChecker;

  private final java.util.List<org.apache.bookkeeper.bookie.LedgerDirsManager> dirsManagers;

  private long minUsableSizeForHighPriorityWrites;

  private java.util.concurrent.ScheduledExecutorService executor;

  private java.util.concurrent.ScheduledFuture<?> checkTask;

  public org.apache.bookkeeper.bookie.LedgerDirsMonitor(org.apache.bookkeeper.conf.ServerConfiguration, org.apache.bookkeeper.util.DiskChecker, java.util.List<org.apache.bookkeeper.bookie.LedgerDirsManager>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #2                  // Method org/apache/bookkeeper/conf/ServerConfiguration.getDiskCheckInterval:()I
       9: putfield      #3                  // Field interval:I
      12: aload_0
      13: aload_1
      14: invokevirtual #4                  // Method org/apache/bookkeeper/conf/ServerConfiguration.getMinUsableSizeForHighPriorityWrites:()J
      17: putfield      #5                  // Field minUsableSizeForHighPriorityWrites:J
      20: aload_0
      21: aload_1
      22: putfield      #6                  // Field conf:Lorg/apache/bookkeeper/conf/ServerConfiguration;
      25: aload_0
      26: aload_2
      27: putfield      #7                  // Field diskChecker:Lorg/apache/bookkeeper/util/DiskChecker;
      30: aload_0
      31: aload_3
      32: putfield      #8                  // Field dirsManagers:Ljava/util/List;
      35: return

  private void check(org.apache.bookkeeper.bookie.LedgerDirsManager);
    Code:
       0: aload_1
       1: invokevirtual #9                  // Method org/apache/bookkeeper/bookie/LedgerDirsManager.getDiskUsages:()Ljava/util/concurrent/ConcurrentMap;
       4: astore_2
       5: aload_1
       6: invokevirtual #10                 // Method org/apache/bookkeeper/bookie/LedgerDirsManager.getWritableLedgerDirs:()Ljava/util/List;
       9: astore_3
      10: aload_3
      11: invokeinterface #11,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore        4
      18: aload         4
      20: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          225
      28: aload         4
      30: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #14                 // class java/io/File
      38: astore        5
      40: aload_2
      41: aload         5
      43: aload_0
      44: getfield      #7                  // Field diskChecker:Lorg/apache/bookkeeper/util/DiskChecker;
      47: aload         5
      49: invokevirtual #15                 // Method org/apache/bookkeeper/util/DiskChecker.checkDir:(Ljava/io/File;)F
      52: invokestatic  #16                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      55: invokeinterface #17,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      60: pop
      61: goto          222
      64: astore        6
      66: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
      69: ldc           #20                 // String Ledger directory {} failed on disk checking :
      71: aload         5
      73: aload         6
      75: invokeinterface #21,  4           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      80: aload_1
      81: invokevirtual #22                 // Method org/apache/bookkeeper/bookie/LedgerDirsManager.getListeners:()Ljava/util/List;
      84: invokeinterface #11,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      89: astore        7
      91: aload         7
      93: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      98: ifeq          125
     101: aload         7
     103: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     108: checkcast     #23                 // class org/apache/bookkeeper/bookie/LedgerDirsManager$LedgerDirsListener
     111: astore        8
     113: aload         8
     115: aload         5
     117: invokeinterface #24,  2           // InterfaceMethod org/apache/bookkeeper/bookie/LedgerDirsManager$LedgerDirsListener.diskFailed:(Ljava/io/File;)V
     122: goto          91
     125: goto          222
     128: astore        6
     130: aload_2
     131: aload         5
     133: aload         6
     135: aload         5
     137: invokedynamic #26,  0             // InvokeDynamic #0:apply:(Lorg/apache/bookkeeper/util/DiskChecker$DiskWarnThresholdException;Ljava/io/File;)Ljava/util/function/BiFunction;
     142: invokeinterface #27,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.compute:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
     147: pop
     148: aload_1
     149: invokevirtual #22                 // Method org/apache/bookkeeper/bookie/LedgerDirsManager.getListeners:()Ljava/util/List;
     152: invokeinterface #11,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     157: astore        7
     159: aload         7
     161: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     166: ifeq          193
     169: aload         7
     171: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     176: checkcast     #23                 // class org/apache/bookkeeper/bookie/LedgerDirsManager$LedgerDirsListener
     179: astore        8
     181: aload         8
     183: aload         5
     185: invokeinterface #28,  2           // InterfaceMethod org/apache/bookkeeper/bookie/LedgerDirsManager$LedgerDirsListener.diskAlmostFull:(Ljava/io/File;)V
     190: goto          159
     193: goto          222
     196: astore        6
     198: aload_2
     199: aload         5
     201: aload         6
     203: aload         5
     205: invokedynamic #30,  0             // InvokeDynamic #1:apply:(Lorg/apache/bookkeeper/util/DiskChecker$DiskOutOfSpaceException;Ljava/io/File;)Ljava/util/function/BiFunction;
     210: invokeinterface #27,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.compute:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
     215: pop
     216: aload_1
     217: aload         5
     219: invokevirtual #31                 // Method org/apache/bookkeeper/bookie/LedgerDirsManager.addToFilledDirs:(Ljava/io/File;)V
     222: goto          18
     225: aload_1
     226: invokevirtual #10                 // Method org/apache/bookkeeper/bookie/LedgerDirsManager.getWritableLedgerDirs:()Ljava/util/List;
     229: pop
     230: goto          310
     233: astore_3
     234: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
     237: ldc           #33                 // String LedgerDirsMonitor check process: All ledger directories are non writable
     239: invokeinterface #34,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     244: iconst_1
     245: istore        4
     247: aload_1
     248: aload_0
     249: getfield      #5                  // Field minUsableSizeForHighPriorityWrites:J
     252: iconst_0
     253: invokevirtual #35                 // Method org/apache/bookkeeper/bookie/LedgerDirsManager.getDirsAboveUsableThresholdSize:(JZ)Ljava/util/List;
     256: pop
     257: goto          265
     260: astore        5
     262: iconst_0
     263: istore        4
     265: aload_1
     266: invokevirtual #22                 // Method org/apache/bookkeeper/bookie/LedgerDirsManager.getListeners:()Ljava/util/List;
     269: invokeinterface #11,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     274: astore        5
     276: aload         5
     278: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     283: ifeq          310
     286: aload         5
     288: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     293: checkcast     #23                 // class org/apache/bookkeeper/bookie/LedgerDirsManager$LedgerDirsListener
     296: astore        6
     298: aload         6
     300: iload         4
     302: invokeinterface #36,  2           // InterfaceMethod org/apache/bookkeeper/bookie/LedgerDirsManager$LedgerDirsListener.allDisksFull:(Z)V
     307: goto          276
     310: new           #37                 // class java/util/ArrayList
     313: dup
     314: aload_1
     315: invokevirtual #38                 // Method org/apache/bookkeeper/bookie/LedgerDirsManager.getFullFilledLedgerDirs:()Ljava/util/List;
     318: invokespecial #39                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     321: astore_3
     322: aload_1
     323: invokevirtual #40                 // Method org/apache/bookkeeper/bookie/LedgerDirsManager.hasWritableLedgerDirs:()Z
     326: istore        4
     328: iload         4
     330: ifne          390
     333: aload_0
     334: getfield      #7                  // Field diskChecker:Lorg/apache/bookkeeper/util/DiskChecker;
     337: aload_1
     338: invokevirtual #41                 // Method org/apache/bookkeeper/bookie/LedgerDirsManager.getAllLedgerDirs:()Ljava/util/List;
     341: invokevirtual #42                 // Method org/apache/bookkeeper/util/DiskChecker.getTotalDiskUsage:(Ljava/util/List;)F
     344: fstore        5
     346: fload         5
     348: aload_0
     349: getfield      #6                  // Field conf:Lorg/apache/bookkeeper/conf/ServerConfiguration;
     352: invokevirtual #43                 // Method org/apache/bookkeeper/conf/ServerConfiguration.getDiskLowWaterMarkUsageThreshold:()F
     355: fcmpg
     356: ifge          365
     359: iconst_1
     360: istore        4
     362: goto          390
     365: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
     368: ldc           #44                 // String Current TotalDiskUsage: {} is greater than LWMThreshold: {}. So not adding any filledDir to WritableDirsList
     370: fload         5
     372: invokestatic  #16                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
     375: aload_0
     376: getfield      #6                  // Field conf:Lorg/apache/bookkeeper/conf/ServerConfiguration;
     379: invokevirtual #43                 // Method org/apache/bookkeeper/conf/ServerConfiguration.getDiskLowWaterMarkUsageThreshold:()F
     382: invokestatic  #16                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
     385: invokeinterface #45,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     390: aload_3
     391: invokeinterface #11,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     396: astore        5
     398: aload         5
     400: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     405: ifeq          562
     408: aload         5
     410: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     415: checkcast     #14                 // class java/io/File
     418: astore        6
     420: aload_2
     421: aload         6
     423: aload_0
     424: getfield      #7                  // Field diskChecker:Lorg/apache/bookkeeper/util/DiskChecker;
     427: aload         6
     429: invokevirtual #15                 // Method org/apache/bookkeeper/util/DiskChecker.checkDir:(Ljava/io/File;)F
     432: invokestatic  #16                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
     435: invokeinterface #17,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     440: pop
     441: iload         4
     443: ifeq          453
     446: aload_1
     447: aload         6
     449: iconst_1
     450: invokevirtual #46                 // Method org/apache/bookkeeper/bookie/LedgerDirsManager.addToWritableDirs:(Ljava/io/File;Z)V
     453: goto          559
     456: astore        7
     458: aload_1
     459: invokevirtual #22                 // Method org/apache/bookkeeper/bookie/LedgerDirsManager.getListeners:()Ljava/util/List;
     462: invokeinterface #11,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     467: astore        8
     469: aload         8
     471: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     476: ifeq          503
     479: aload         8
     481: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     486: checkcast     #23                 // class org/apache/bookkeeper/bookie/LedgerDirsManager$LedgerDirsListener
     489: astore        9
     491: aload         9
     493: aload         6
     495: invokeinterface #24,  2           // InterfaceMethod org/apache/bookkeeper/bookie/LedgerDirsManager$LedgerDirsListener.diskFailed:(Ljava/io/File;)V
     500: goto          469
     503: goto          559
     506: astore        7
     508: aload_2
     509: aload         6
     511: aload         7
     513: invokevirtual #47                 // Method org/apache/bookkeeper/util/DiskChecker$DiskWarnThresholdException.getUsage:()F
     516: invokestatic  #16                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
     519: invokeinterface #17,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     524: pop
     525: iload         4
     527: ifeq          537
     530: aload_1
     531: aload         6
     533: iconst_0
     534: invokevirtual #46                 // Method org/apache/bookkeeper/bookie/LedgerDirsManager.addToWritableDirs:(Ljava/io/File;Z)V
     537: goto          559
     540: astore        7
     542: aload_2
     543: aload         6
     545: aload         7
     547: invokevirtual #48                 // Method org/apache/bookkeeper/util/DiskChecker$DiskOutOfSpaceException.getUsage:()F
     550: invokestatic  #16                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
     553: invokeinterface #17,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     558: pop
     559: goto          398
     562: goto          622
     565: astore        5
     567: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
     570: ldc           #50                 // String Got IOException while monitoring Dirs
     572: aload         5
     574: invokeinterface #51,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     579: aload_1
     580: invokevirtual #22                 // Method org/apache/bookkeeper/bookie/LedgerDirsManager.getListeners:()Ljava/util/List;
     583: invokeinterface #11,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     588: astore        6
     590: aload         6
     592: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     597: ifeq          622
     600: aload         6
     602: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     607: checkcast     #23                 // class org/apache/bookkeeper/bookie/LedgerDirsManager$LedgerDirsListener
     610: astore        7
     612: aload         7
     614: invokeinterface #52,  1           // InterfaceMethod org/apache/bookkeeper/bookie/LedgerDirsManager$LedgerDirsListener.fatalError:()V
     619: goto          590
     622: return
    Exception table:
       from    to  target type
          40    61    64   Class org/apache/bookkeeper/util/DiskChecker$DiskErrorException
          40    61   128   Class org/apache/bookkeeper/util/DiskChecker$DiskWarnThresholdException
          40    61   196   Class org/apache/bookkeeper/util/DiskChecker$DiskOutOfSpaceException
           5   230   233   Class org/apache/bookkeeper/bookie/LedgerDirsManager$NoWritableLedgerDirException
         247   257   260   Class org/apache/bookkeeper/bookie/LedgerDirsManager$NoWritableLedgerDirException
         420   453   456   Class org/apache/bookkeeper/util/DiskChecker$DiskErrorException
         420   453   506   Class org/apache/bookkeeper/util/DiskChecker$DiskWarnThresholdException
         420   453   540   Class org/apache/bookkeeper/util/DiskChecker$DiskOutOfSpaceException
         328   562   565   Class java/io/IOException

  private void check();
    Code:
       0: aload_0
       1: getfield      #8                  // Field dirsManagers:Ljava/util/List;
       4: aload_0
       5: invokedynamic #53,  0             // InvokeDynamic #2:accept:(Lorg/apache/bookkeeper/bookie/LedgerDirsMonitor;)Ljava/util/function/Consumer;
      10: invokeinterface #54,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      15: return

  public void init() throws org.apache.bookkeeper.util.DiskChecker$DiskErrorException, org.apache.bookkeeper.bookie.LedgerDirsManager$NoWritableLedgerDirException;
    Code:
       0: aload_0
       1: invokespecial #55                 // Method checkDirs:()V
       4: return

  public void start();
    Code:
       0: aload_0
       1: new           #56                 // class com/google/common/util/concurrent/ThreadFactoryBuilder
       4: dup
       5: invokespecial #57                 // Method com/google/common/util/concurrent/ThreadFactoryBuilder."<init>":()V
       8: ldc           #58                 // String LedgerDirsMonitorThread
      10: invokevirtual #59                 // Method com/google/common/util/concurrent/ThreadFactoryBuilder.setNameFormat:(Ljava/lang/String;)Lcom/google/common/util/concurrent/ThreadFactoryBuilder;
      13: iconst_1
      14: invokevirtual #60                 // Method com/google/common/util/concurrent/ThreadFactoryBuilder.setDaemon:(Z)Lcom/google/common/util/concurrent/ThreadFactoryBuilder;
      17: invokevirtual #61                 // Method com/google/common/util/concurrent/ThreadFactoryBuilder.build:()Ljava/util/concurrent/ThreadFactory;
      20: invokestatic  #62                 // Method java/util/concurrent/Executors.newSingleThreadScheduledExecutor:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;
      23: putfield      #63                 // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      26: aload_0
      27: aload_0
      28: getfield      #63                 // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      31: aload_0
      32: invokedynamic #64,  0             // InvokeDynamic #3:run:(Lorg/apache/bookkeeper/bookie/LedgerDirsMonitor;)Ljava/lang/Runnable;
      37: aload_0
      38: getfield      #3                  // Field interval:I
      41: i2l
      42: aload_0
      43: getfield      #3                  // Field interval:I
      46: i2l
      47: getstatic     #65                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      50: invokeinterface #66,  7           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      55: putfield      #67                 // Field checkTask:Ljava/util/concurrent/ScheduledFuture;
      58: return

  public void shutdown();
    Code:
       0: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #68                 // String Shutting down LedgerDirsMonitor
       5: invokeinterface #69,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      10: aconst_null
      11: aload_0
      12: getfield      #67                 // Field checkTask:Ljava/util/concurrent/ScheduledFuture;
      15: if_acmpeq     41
      18: aload_0
      19: getfield      #67                 // Field checkTask:Ljava/util/concurrent/ScheduledFuture;
      22: iconst_1
      23: invokeinterface #70,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      28: ifeq          41
      31: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
      34: ldc           #71                 // String Failed to cancel check task in LedgerDirsMonitor
      36: invokeinterface #72,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      41: aconst_null
      42: aload_0
      43: getfield      #63                 // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      46: if_acmpeq     58
      49: aload_0
      50: getfield      #63                 // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      53: invokeinterface #73,  1           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.shutdown:()V
      58: return

  private void checkDirs() throws org.apache.bookkeeper.bookie.LedgerDirsManager$NoWritableLedgerDirException, org.apache.bookkeeper.util.DiskChecker$DiskErrorException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field dirsManagers:Ljava/util/List;
       4: invokeinterface #11,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          37
      19: aload_1
      20: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #74                 // class org/apache/bookkeeper/bookie/LedgerDirsManager
      28: astore_2
      29: aload_0
      30: aload_2
      31: invokespecial #75                 // Method checkDirs:(Lorg/apache/bookkeeper/bookie/LedgerDirsManager;)V
      34: goto          10
      37: return

  private void checkDirs(org.apache.bookkeeper.bookie.LedgerDirsManager) throws org.apache.bookkeeper.util.DiskChecker$DiskErrorException, org.apache.bookkeeper.bookie.LedgerDirsManager$NoWritableLedgerDirException;
    Code:
       0: aload_1
       1: invokevirtual #10                 // Method org/apache/bookkeeper/bookie/LedgerDirsManager.getWritableLedgerDirs:()Ljava/util/List;
       4: invokeinterface #11,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          56
      19: aload_2
      20: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #14                 // class java/io/File
      28: astore_3
      29: aload_0
      30: getfield      #7                  // Field diskChecker:Lorg/apache/bookkeeper/util/DiskChecker;
      33: aload_3
      34: invokevirtual #15                 // Method org/apache/bookkeeper/util/DiskChecker.checkDir:(Ljava/io/File;)F
      37: pop
      38: goto          53
      41: astore        4
      43: goto          53
      46: astore        4
      48: aload_1
      49: aload_3
      50: invokevirtual #31                 // Method org/apache/bookkeeper/bookie/LedgerDirsManager.addToFilledDirs:(Ljava/io/File;)V
      53: goto          10
      56: aload_1
      57: invokevirtual #10                 // Method org/apache/bookkeeper/bookie/LedgerDirsManager.getWritableLedgerDirs:()Ljava/util/List;
      60: pop
      61: return
    Exception table:
       from    to  target type
          29    38    41   Class org/apache/bookkeeper/util/DiskChecker$DiskWarnThresholdException
          29    38    46   Class org/apache/bookkeeper/util/DiskChecker$DiskOutOfSpaceException

  private static java.lang.Float lambda$check$1(org.apache.bookkeeper.util.DiskChecker$DiskOutOfSpaceException, java.io.File, java.io.File, java.lang.Float);
    Code:
       0: aconst_null
       1: aload_3
       2: if_acmpeq     17
       5: aload_0
       6: invokevirtual #48                 // Method org/apache/bookkeeper/util/DiskChecker$DiskOutOfSpaceException.getUsage:()F
       9: aload_3
      10: invokevirtual #76                 // Method java/lang/Float.floatValue:()F
      13: fcmpl
      14: ifeq          35
      17: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
      20: ldc           #77                 // String Ledger directory {} is out-of-space : usage {}
      22: aload_1
      23: aload_0
      24: invokevirtual #48                 // Method org/apache/bookkeeper/util/DiskChecker$DiskOutOfSpaceException.getUsage:()F
      27: invokestatic  #16                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      30: invokeinterface #21,  4           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      35: aload_0
      36: invokevirtual #48                 // Method org/apache/bookkeeper/util/DiskChecker$DiskOutOfSpaceException.getUsage:()F
      39: invokestatic  #16                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      42: areturn

  private static java.lang.Float lambda$check$0(org.apache.bookkeeper.util.DiskChecker$DiskWarnThresholdException, java.io.File, java.io.File, java.lang.Float);
    Code:
       0: aconst_null
       1: aload_3
       2: if_acmpeq     17
       5: aload_0
       6: invokevirtual #47                 // Method org/apache/bookkeeper/util/DiskChecker$DiskWarnThresholdException.getUsage:()F
       9: aload_3
      10: invokevirtual #76                 // Method java/lang/Float.floatValue:()F
      13: fcmpl
      14: ifeq          35
      17: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
      20: ldc           #78                 // String Ledger directory {} is almost full : usage {}
      22: aload_1
      23: aload_0
      24: invokevirtual #47                 // Method org/apache/bookkeeper/util/DiskChecker$DiskWarnThresholdException.getUsage:()F
      27: invokestatic  #16                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      30: invokeinterface #79,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      35: aload_0
      36: invokevirtual #47                 // Method org/apache/bookkeeper/util/DiskChecker$DiskWarnThresholdException.getUsage:()F
      39: invokestatic  #16                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      42: areturn

  static {};
    Code:
       0: ldc           #80                 // class org/apache/bookkeeper/bookie/LedgerDirsMonitor
       2: invokestatic  #81                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
