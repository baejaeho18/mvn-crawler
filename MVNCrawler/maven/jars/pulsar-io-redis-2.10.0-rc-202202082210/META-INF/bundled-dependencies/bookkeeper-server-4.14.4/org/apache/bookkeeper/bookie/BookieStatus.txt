Compiled from "BookieStatus.java"
public class org.apache.bookkeeper.bookie.BookieStatus {
  private static final org.slf4j.Logger LOG;

  static final int CURRENT_STATUS_LAYOUT_VERSION;

  private static final long INVALID_UPDATE_TIME;

  private int layoutVersion;

  private long lastUpdateTime;

  private volatile org.apache.bookkeeper.bookie.BookieStatus$BookieMode bookieMode;

  org.apache.bookkeeper.bookie.BookieStatus();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #3                  // Field org/apache/bookkeeper/bookie/BookieStatus$BookieMode.READ_WRITE:Lorg/apache/bookkeeper/bookie/BookieStatus$BookieMode;
       8: putfield      #4                  // Field bookieMode:Lorg/apache/bookkeeper/bookie/BookieStatus$BookieMode;
      11: aload_0
      12: iconst_1
      13: putfield      #6                  // Field layoutVersion:I
      16: aload_0
      17: ldc2_w        #7                  // long -1l
      20: putfield      #9                  // Field lastUpdateTime:J
      23: return

  private org.apache.bookkeeper.bookie.BookieStatus$BookieMode getBookieMode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bookieMode:Lorg/apache/bookkeeper/bookie/BookieStatus$BookieMode;
       4: areturn

  public boolean isInWritable();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bookieMode:Lorg/apache/bookkeeper/bookie/BookieStatus$BookieMode;
       4: getstatic     #3                  // Field org/apache/bookkeeper/bookie/BookieStatus$BookieMode.READ_WRITE:Lorg/apache/bookkeeper/bookie/BookieStatus$BookieMode;
       7: invokevirtual #10                 // Method org/apache/bookkeeper/bookie/BookieStatus$BookieMode.equals:(Ljava/lang/Object;)Z
      10: ireturn

  synchronized boolean setToWritableMode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bookieMode:Lorg/apache/bookkeeper/bookie/BookieStatus$BookieMode;
       4: getstatic     #3                  // Field org/apache/bookkeeper/bookie/BookieStatus$BookieMode.READ_WRITE:Lorg/apache/bookkeeper/bookie/BookieStatus$BookieMode;
       7: invokevirtual #10                 // Method org/apache/bookkeeper/bookie/BookieStatus$BookieMode.equals:(Ljava/lang/Object;)Z
      10: ifne          29
      13: aload_0
      14: getstatic     #3                  // Field org/apache/bookkeeper/bookie/BookieStatus$BookieMode.READ_WRITE:Lorg/apache/bookkeeper/bookie/BookieStatus$BookieMode;
      17: putfield      #4                  // Field bookieMode:Lorg/apache/bookkeeper/bookie/BookieStatus$BookieMode;
      20: aload_0
      21: invokestatic  #11                 // Method java/lang/System.currentTimeMillis:()J
      24: putfield      #9                  // Field lastUpdateTime:J
      27: iconst_1
      28: ireturn
      29: iconst_0
      30: ireturn

  boolean isInReadOnlyMode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bookieMode:Lorg/apache/bookkeeper/bookie/BookieStatus$BookieMode;
       4: getstatic     #12                 // Field org/apache/bookkeeper/bookie/BookieStatus$BookieMode.READ_ONLY:Lorg/apache/bookkeeper/bookie/BookieStatus$BookieMode;
       7: invokevirtual #10                 // Method org/apache/bookkeeper/bookie/BookieStatus$BookieMode.equals:(Ljava/lang/Object;)Z
      10: ireturn

  synchronized boolean setToReadOnlyMode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bookieMode:Lorg/apache/bookkeeper/bookie/BookieStatus$BookieMode;
       4: getstatic     #12                 // Field org/apache/bookkeeper/bookie/BookieStatus$BookieMode.READ_ONLY:Lorg/apache/bookkeeper/bookie/BookieStatus$BookieMode;
       7: invokevirtual #10                 // Method org/apache/bookkeeper/bookie/BookieStatus$BookieMode.equals:(Ljava/lang/Object;)Z
      10: ifne          29
      13: aload_0
      14: getstatic     #12                 // Field org/apache/bookkeeper/bookie/BookieStatus$BookieMode.READ_ONLY:Lorg/apache/bookkeeper/bookie/BookieStatus$BookieMode;
      17: putfield      #4                  // Field bookieMode:Lorg/apache/bookkeeper/bookie/BookieStatus$BookieMode;
      20: aload_0
      21: invokestatic  #11                 // Method java/lang/System.currentTimeMillis:()J
      24: putfield      #9                  // Field lastUpdateTime:J
      27: iconst_1
      28: ireturn
      29: iconst_0
      30: ireturn

  synchronized void writeToDirectories(java.util.List<java.io.File>);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: invokeinterface #13,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       8: astore_3
       9: aload_3
      10: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          73
      18: aload_3
      19: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #16                 // class java/io/File
      27: astore        4
      29: new           #16                 // class java/io/File
      32: dup
      33: aload         4
      35: ldc           #17                 // String BOOKIE_STATUS
      37: invokespecial #18                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      40: astore        5
      42: aload         5
      44: aload_0
      45: invokevirtual #19                 // Method toString:()Ljava/lang/String;
      48: invokestatic  #20                 // Method writeToFile:(Ljava/io/File;Ljava/lang/String;)V
      51: iconst_1
      52: istore_2
      53: goto          70
      56: astore        5
      58: getstatic     #22                 // Field LOG:Lorg/slf4j/Logger;
      61: ldc           #23                 // String IOException while trying to write bookie status to directory {}. This is fine if not all directories are failed.
      63: aload         4
      65: invokeinterface #24,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      70: goto          9
      73: iload_2
      74: ifeq          94
      77: getstatic     #22                 // Field LOG:Lorg/slf4j/Logger;
      80: ldc           #25                 // String Successfully persist bookie status {}
      82: aload_0
      83: getfield      #4                  // Field bookieMode:Lorg/apache/bookkeeper/bookie/BookieStatus$BookieMode;
      86: invokeinterface #26,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      91: goto          108
      94: getstatic     #22                 // Field LOG:Lorg/slf4j/Logger;
      97: ldc           #27                 // String Failed to persist bookie status {}
      99: aload_0
     100: getfield      #4                  // Field bookieMode:Lorg/apache/bookkeeper/bookie/BookieStatus$BookieMode;
     103: invokeinterface #24,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     108: return
    Exception table:
       from    to  target type
          29    53    56   Class java/io/IOException

  private static void writeToFile(java.io.File, java.lang.String) throws java.io.IOException;
    Code:
       0: new           #28                 // class java/io/FileOutputStream
       3: dup
       4: aload_0
       5: invokespecial #29                 // Method java/io/FileOutputStream."<init>":(Ljava/io/File;)V
       8: astore_2
       9: aconst_null
      10: astore_3
      11: new           #30                 // class java/io/BufferedWriter
      14: dup
      15: new           #31                 // class java/io/OutputStreamWriter
      18: dup
      19: aload_2
      20: getstatic     #32                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      23: invokespecial #33                 // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V
      26: invokespecial #34                 // Method java/io/BufferedWriter."<init>":(Ljava/io/Writer;)V
      29: astore        4
      31: aconst_null
      32: astore        5
      34: aload         4
      36: aload_1
      37: invokevirtual #35                 // Method java/io/BufferedWriter.write:(Ljava/lang/String;)V
      40: aload         4
      42: ifnull        127
      45: aload         5
      47: ifnull        70
      50: aload         4
      52: invokevirtual #36                 // Method java/io/BufferedWriter.close:()V
      55: goto          127
      58: astore        6
      60: aload         5
      62: aload         6
      64: invokevirtual #38                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      67: goto          127
      70: aload         4
      72: invokevirtual #36                 // Method java/io/BufferedWriter.close:()V
      75: goto          127
      78: astore        6
      80: aload         6
      82: astore        5
      84: aload         6
      86: athrow
      87: astore        7
      89: aload         4
      91: ifnull        124
      94: aload         5
      96: ifnull        119
      99: aload         4
     101: invokevirtual #36                 // Method java/io/BufferedWriter.close:()V
     104: goto          124
     107: astore        8
     109: aload         5
     111: aload         8
     113: invokevirtual #38                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     116: goto          124
     119: aload         4
     121: invokevirtual #36                 // Method java/io/BufferedWriter.close:()V
     124: aload         7
     126: athrow
     127: aload_2
     128: ifnull        203
     131: aload_3
     132: ifnull        153
     135: aload_2
     136: invokevirtual #39                 // Method java/io/FileOutputStream.close:()V
     139: goto          203
     142: astore        4
     144: aload_3
     145: aload         4
     147: invokevirtual #38                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     150: goto          203
     153: aload_2
     154: invokevirtual #39                 // Method java/io/FileOutputStream.close:()V
     157: goto          203
     160: astore        4
     162: aload         4
     164: astore_3
     165: aload         4
     167: athrow
     168: astore        9
     170: aload_2
     171: ifnull        200
     174: aload_3
     175: ifnull        196
     178: aload_2
     179: invokevirtual #39                 // Method java/io/FileOutputStream.close:()V
     182: goto          200
     185: astore        10
     187: aload_3
     188: aload         10
     190: invokevirtual #38                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     193: goto          200
     196: aload_2
     197: invokevirtual #39                 // Method java/io/FileOutputStream.close:()V
     200: aload         9
     202: athrow
     203: return
    Exception table:
       from    to  target type
          50    55    58   Class java/lang/Throwable
          34    40    78   Class java/lang/Throwable
          34    40    87   any
          99   104   107   Class java/lang/Throwable
          78    89    87   any
         135   139   142   Class java/lang/Throwable
          11   127   160   Class java/lang/Throwable
          11   127   168   any
         178   182   185   Class java/lang/Throwable
         160   170   168   any

  void readFromDirectories(java.util.List<java.io.File>);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: invokeinterface #13,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       8: astore_3
       9: aload_3
      10: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          155
      18: aload_3
      19: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #16                 // class java/io/File
      27: astore        4
      29: new           #16                 // class java/io/File
      32: dup
      33: aload         4
      35: ldc           #17                 // String BOOKIE_STATUS
      37: invokespecial #18                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      40: astore        5
      42: aload_0
      43: aload         5
      45: invokespecial #40                 // Method readFromFile:(Ljava/io/File;)Lorg/apache/bookkeeper/bookie/BookieStatus;
      48: astore        6
      50: aconst_null
      51: aload         6
      53: if_acmpeq     118
      56: aload         6
      58: dup
      59: astore        7
      61: monitorenter
      62: aload         6
      64: getfield      #9                  // Field lastUpdateTime:J
      67: aload_0
      68: getfield      #9                  // Field lastUpdateTime:J
      71: lcmp
      72: ifle          104
      75: aload_0
      76: aload         6
      78: getfield      #9                  // Field lastUpdateTime:J
      81: putfield      #9                  // Field lastUpdateTime:J
      84: aload_0
      85: aload         6
      87: getfield      #6                  // Field layoutVersion:I
      90: putfield      #6                  // Field layoutVersion:I
      93: aload_0
      94: aload         6
      96: getfield      #4                  // Field bookieMode:Lorg/apache/bookkeeper/bookie/BookieStatus$BookieMode;
      99: putfield      #4                  // Field bookieMode:Lorg/apache/bookkeeper/bookie/BookieStatus$BookieMode;
     102: iconst_1
     103: istore_2
     104: aload         7
     106: monitorexit
     107: goto          118
     110: astore        8
     112: aload         7
     114: monitorexit
     115: aload         8
     117: athrow
     118: goto          152
     121: astore        6
     123: getstatic     #22                 // Field LOG:Lorg/slf4j/Logger;
     126: ldc           #41                 // String IOException while trying to read bookie status from directory {}. This is fine if not all directories failed.
     128: aload         4
     130: invokeinterface #24,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     135: goto          152
     138: astore        6
     140: getstatic     #22                 // Field LOG:Lorg/slf4j/Logger;
     143: ldc           #43                 // String IllegalArgumentException while trying to read bookie status from directory {}. This is fine if not all directories failed.
     145: aload         4
     147: invokeinterface #24,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     152: goto          9
     155: iload_2
     156: ifeq          176
     159: getstatic     #22                 // Field LOG:Lorg/slf4j/Logger;
     162: ldc           #44                 // String Successfully retrieve bookie status {} from disks.
     164: aload_0
     165: invokespecial #45                 // Method getBookieMode:()Lorg/apache/bookkeeper/bookie/BookieStatus$BookieMode;
     168: invokeinterface #26,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
     173: goto          190
     176: getstatic     #22                 // Field LOG:Lorg/slf4j/Logger;
     179: ldc           #46                 // String Failed to retrieve bookie status from disks. Fall back to current or default bookie status: {}
     181: aload_0
     182: invokespecial #45                 // Method getBookieMode:()Lorg/apache/bookkeeper/bookie/BookieStatus$BookieMode;
     185: invokeinterface #24,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     190: return
    Exception table:
       from    to  target type
          62   107   110   any
         110   115   110   any
          42   118   121   Class java/io/IOException
          42   118   138   Class java/lang/IllegalArgumentException

  private org.apache.bookkeeper.bookie.BookieStatus readFromFile(java.io.File) throws java.io.IOException, java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: invokevirtual #47                 // Method java/io/File.exists:()Z
       4: ifne          9
       7: aconst_null
       8: areturn
       9: new           #48                 // class java/io/BufferedReader
      12: dup
      13: new           #49                 // class java/io/InputStreamReader
      16: dup
      17: new           #50                 // class java/io/FileInputStream
      20: dup
      21: aload_1
      22: invokespecial #51                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      25: getstatic     #32                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      28: invokespecial #52                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
      31: invokespecial #53                 // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
      34: astore_2
      35: aconst_null
      36: astore_3
      37: aload_0
      38: aload_2
      39: invokevirtual #54                 // Method parse:(Ljava/io/BufferedReader;)Lorg/apache/bookkeeper/bookie/BookieStatus;
      42: astore        4
      44: aload_2
      45: ifnull        74
      48: aload_3
      49: ifnull        70
      52: aload_2
      53: invokevirtual #55                 // Method java/io/BufferedReader.close:()V
      56: goto          74
      59: astore        5
      61: aload_3
      62: aload         5
      64: invokevirtual #38                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      67: goto          74
      70: aload_2
      71: invokevirtual #55                 // Method java/io/BufferedReader.close:()V
      74: aload         4
      76: areturn
      77: astore        4
      79: aload         4
      81: astore_3
      82: aload         4
      84: athrow
      85: astore        6
      87: aload_2
      88: ifnull        117
      91: aload_3
      92: ifnull        113
      95: aload_2
      96: invokevirtual #55                 // Method java/io/BufferedReader.close:()V
      99: goto          117
     102: astore        7
     104: aload_3
     105: aload         7
     107: invokevirtual #38                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     110: goto          117
     113: aload_2
     114: invokevirtual #55                 // Method java/io/BufferedReader.close:()V
     117: aload         6
     119: athrow
    Exception table:
       from    to  target type
          52    56    59   Class java/lang/Throwable
          37    44    77   Class java/lang/Throwable
          37    44    85   any
          95    99   102   Class java/lang/Throwable
          77    87    85   any

  public org.apache.bookkeeper.bookie.BookieStatus parse(java.io.BufferedReader) throws java.io.IOException, java.lang.IllegalArgumentException;
    Code:
       0: new           #5                  // class org/apache/bookkeeper/bookie/BookieStatus
       3: dup
       4: invokespecial #56                 // Method "<init>":()V
       7: astore_2
       8: aload_1
       9: invokevirtual #57                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;
      12: astore_3
      13: aload_3
      14: ifnull        27
      17: aload_3
      18: invokevirtual #58                 // Method java/lang/String.trim:()Ljava/lang/String;
      21: invokevirtual #59                 // Method java/lang/String.isEmpty:()Z
      24: ifeq          39
      27: getstatic     #22                 // Field LOG:Lorg/slf4j/Logger;
      30: ldc           #60                 // String Empty line when parsing bookie status
      32: invokeinterface #61,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      37: aconst_null
      38: areturn
      39: aload_3
      40: ldc           #62                 // String ,
      42: invokevirtual #63                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      45: astore        4
      47: aload         4
      49: arraylength
      50: ifne          66
      53: getstatic     #22                 // Field LOG:Lorg/slf4j/Logger;
      56: ldc           #64                 // String Error in parsing bookie status: {}
      58: aload_3
      59: invokeinterface #65,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      64: aconst_null
      65: areturn
      66: aload_2
      67: dup
      68: astore        5
      70: monitorenter
      71: aload_2
      72: aload         4
      74: iconst_0
      75: aaload
      76: invokevirtual #58                 // Method java/lang/String.trim:()Ljava/lang/String;
      79: invokestatic  #66                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      82: putfield      #6                  // Field layoutVersion:I
      85: aload_2
      86: getfield      #6                  // Field layoutVersion:I
      89: iconst_1
      90: if_icmpne     130
      93: aload         4
      95: arraylength
      96: iconst_3
      97: if_icmpne     130
     100: aload_2
     101: aload         4
     103: iconst_1
     104: aaload
     105: invokestatic  #67                 // Method org/apache/bookkeeper/bookie/BookieStatus$BookieMode.valueOf:(Ljava/lang/String;)Lorg/apache/bookkeeper/bookie/BookieStatus$BookieMode;
     108: putfield      #4                  // Field bookieMode:Lorg/apache/bookkeeper/bookie/BookieStatus$BookieMode;
     111: aload_2
     112: aload         4
     114: iconst_2
     115: aaload
     116: invokevirtual #58                 // Method java/lang/String.trim:()Ljava/lang/String;
     119: invokestatic  #68                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
     122: putfield      #9                  // Field lastUpdateTime:J
     125: aload_2
     126: aload         5
     128: monitorexit
     129: areturn
     130: aload         5
     132: monitorexit
     133: goto          144
     136: astore        6
     138: aload         5
     140: monitorexit
     141: aload         6
     143: athrow
     144: aconst_null
     145: areturn
    Exception table:
       from    to  target type
          71   129   136   any
         130   133   136   any
         136   141   136   any

  public java.lang.String toString();
    Code:
       0: new           #69                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #70                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: iconst_1
      10: invokevirtual #71                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      13: pop
      14: aload_1
      15: ldc           #62                 // String ,
      17: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: pop
      21: aload_1
      22: aload_0
      23: invokespecial #45                 // Method getBookieMode:()Lorg/apache/bookkeeper/bookie/BookieStatus$BookieMode;
      26: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      29: pop
      30: aload_1
      31: ldc           #62                 // String ,
      33: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: pop
      37: aload_1
      38: invokestatic  #11                 // Method java/lang/System.currentTimeMillis:()J
      41: invokevirtual #74                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      44: pop
      45: aload_1
      46: ldc           #75                 // String \n
      48: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: pop
      52: aload_1
      53: invokevirtual #76                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: areturn

  static {};
    Code:
       0: ldc           #5                  // class org/apache/bookkeeper/bookie/BookieStatus
       2: invokestatic  #77                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #22                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
