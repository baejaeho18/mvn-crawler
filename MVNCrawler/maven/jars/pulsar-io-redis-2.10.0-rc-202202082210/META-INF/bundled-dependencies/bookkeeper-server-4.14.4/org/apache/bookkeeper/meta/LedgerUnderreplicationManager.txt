Compiled from "LedgerUnderreplicationManager.java"
public interface org.apache.bookkeeper.meta.LedgerUnderreplicationManager extends java.lang.AutoCloseable {
  public default void markLedgerUnderreplicated(long, java.lang.String) throws org.apache.bookkeeper.replication.ReplicationException;
    Code:
       0: aload_0
       1: lload_1
       2: iconst_1
       3: anewarray     #1                  // class java/lang/String
       6: dup
       7: iconst_0
       8: aload_3
       9: aastore
      10: invokestatic  #2                  // Method com/google/common/collect/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;
      13: invokeinterface #3,  4            // InterfaceMethod markLedgerUnderreplicatedAsync:(JLjava/util/Collection;)Ljava/util/concurrent/CompletableFuture;
      18: getstatic     #4                  // Field org/apache/bookkeeper/replication/ReplicationException.EXCEPTION_HANDLER:Ljava/util/function/Function;
      21: invokestatic  #5                  // Method org/apache/bookkeeper/common/concurrent/FutureUtils.result:(Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Function;)Ljava/lang/Object;
      24: pop
      25: return

  public abstract boolean isLedgerBeingReplicated(long) throws org.apache.bookkeeper.replication.ReplicationException;

  public abstract java.util.concurrent.CompletableFuture<java.lang.Void> markLedgerUnderreplicatedAsync(long, java.util.Collection<java.lang.String>);

  public abstract void markLedgerReplicated(long) throws org.apache.bookkeeper.replication.ReplicationException$UnavailableException;

  public abstract org.apache.bookkeeper.meta.UnderreplicatedLedger getLedgerUnreplicationInfo(long) throws org.apache.bookkeeper.replication.ReplicationException$UnavailableException;

  public abstract java.util.Iterator<org.apache.bookkeeper.meta.UnderreplicatedLedger> listLedgersToRereplicate(java.util.function.Predicate<java.util.List<java.lang.String>>);

  public abstract long getLedgerToRereplicate() throws org.apache.bookkeeper.replication.ReplicationException$UnavailableException;

  public abstract long pollLedgerToRereplicate() throws org.apache.bookkeeper.replication.ReplicationException$UnavailableException;

  public abstract void acquireUnderreplicatedLedger(long) throws org.apache.bookkeeper.replication.ReplicationException;

  public abstract void releaseUnderreplicatedLedger(long) throws org.apache.bookkeeper.replication.ReplicationException$UnavailableException;

  public abstract void close() throws org.apache.bookkeeper.replication.ReplicationException$UnavailableException;

  public abstract void disableLedgerReplication() throws org.apache.bookkeeper.replication.ReplicationException$UnavailableException;

  public abstract void enableLedgerReplication() throws org.apache.bookkeeper.replication.ReplicationException$UnavailableException;

  public abstract boolean isLedgerReplicationEnabled() throws org.apache.bookkeeper.replication.ReplicationException$UnavailableException;

  public abstract void notifyLedgerReplicationEnabled(org.apache.bookkeeper.proto.BookkeeperInternalCallbacks$GenericCallback<java.lang.Void>) throws org.apache.bookkeeper.replication.ReplicationException$UnavailableException;

  public abstract boolean initializeLostBookieRecoveryDelay(int) throws org.apache.bookkeeper.replication.ReplicationException$UnavailableException;

  public abstract void setLostBookieRecoveryDelay(int) throws org.apache.bookkeeper.replication.ReplicationException$UnavailableException;

  public abstract int getLostBookieRecoveryDelay() throws org.apache.bookkeeper.replication.ReplicationException$UnavailableException;

  public abstract void setCheckAllLedgersCTime(long) throws org.apache.bookkeeper.replication.ReplicationException$UnavailableException;

  public abstract long getCheckAllLedgersCTime() throws org.apache.bookkeeper.replication.ReplicationException$UnavailableException;

  public abstract void setPlacementPolicyCheckCTime(long) throws org.apache.bookkeeper.replication.ReplicationException$UnavailableException;

  public abstract long getPlacementPolicyCheckCTime() throws org.apache.bookkeeper.replication.ReplicationException$UnavailableException;

  public abstract void setReplicasCheckCTime(long) throws org.apache.bookkeeper.replication.ReplicationException$UnavailableException;

  public abstract long getReplicasCheckCTime() throws org.apache.bookkeeper.replication.ReplicationException$UnavailableException;

  public abstract void notifyLostBookieRecoveryDelayChanged(org.apache.bookkeeper.proto.BookkeeperInternalCallbacks$GenericCallback<java.lang.Void>) throws org.apache.bookkeeper.replication.ReplicationException$UnavailableException;

  public abstract java.lang.String getReplicationWorkerIdRereplicatingLedger(long) throws org.apache.bookkeeper.replication.ReplicationException$UnavailableException;
}
