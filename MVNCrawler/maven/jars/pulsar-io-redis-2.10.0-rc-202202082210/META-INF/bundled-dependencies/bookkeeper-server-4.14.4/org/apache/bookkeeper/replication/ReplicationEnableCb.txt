Compiled from "ReplicationEnableCb.java"
public class org.apache.bookkeeper.replication.ReplicationEnableCb implements org.apache.bookkeeper.proto.BookkeeperInternalCallbacks$GenericCallback<java.lang.Void> {
  private static final org.slf4j.Logger LOG;

  private final java.util.concurrent.CountDownLatch latch;

  public org.apache.bookkeeper.replication.ReplicationEnableCb();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/CountDownLatch
       8: dup
       9: iconst_1
      10: invokespecial #3                  // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      13: putfield      #4                  // Field latch:Ljava/util/concurrent/CountDownLatch;
      16: return

  public void operationComplete(int, java.lang.Void);
    Code:
       0: aload_0
       1: getfield      #4                  // Field latch:Ljava/util/concurrent/CountDownLatch;
       4: invokevirtual #5                  // Method java/util/concurrent/CountDownLatch.countDown:()V
       7: getstatic     #6                  // Field LOG:Lorg/slf4j/Logger;
      10: invokeinterface #7,  1            // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      15: ifeq          28
      18: getstatic     #6                  // Field LOG:Lorg/slf4j/Logger;
      21: ldc           #8                  // String Automatic ledger re-replication is enabled
      23: invokeinterface #9,  2            // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      28: return

  public void await() throws java.lang.InterruptedException;
    Code:
       0: getstatic     #6                  // Field LOG:Lorg/slf4j/Logger;
       3: invokeinterface #7,  1            // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
       8: ifeq          21
      11: getstatic     #6                  // Field LOG:Lorg/slf4j/Logger;
      14: ldc           #10                 // String Automatic ledger re-replication is disabled. Hence waiting until its enabled!
      16: invokeinterface #9,  2            // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      21: aload_0
      22: getfield      #4                  // Field latch:Ljava/util/concurrent/CountDownLatch;
      25: invokevirtual #11                 // Method java/util/concurrent/CountDownLatch.await:()V
      28: return

  public void operationComplete(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: checkcast     #12                 // class java/lang/Void
       6: invokevirtual #13                 // Method operationComplete:(ILjava/lang/Void;)V
       9: return

  static {};
    Code:
       0: ldc           #14                 // class org/apache/bookkeeper/replication/ReplicationEnableCb
       2: invokestatic  #15                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #6                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
