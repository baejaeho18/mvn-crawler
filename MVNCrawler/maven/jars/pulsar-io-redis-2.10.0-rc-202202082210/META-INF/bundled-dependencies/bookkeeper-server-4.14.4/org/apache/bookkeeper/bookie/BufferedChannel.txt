Compiled from "BufferedChannel.java"
public class org.apache.bookkeeper.bookie.BufferedChannel extends org.apache.bookkeeper.bookie.BufferedReadChannel implements java.io.Closeable {
  protected final int writeCapacity;

  protected java.util.concurrent.atomic.AtomicLong writeBufferStartPosition;

  protected final io.netty.buffer.ByteBuf writeBuffer;

  protected volatile long position;

  protected final long unpersistedBytesBound;

  private final boolean doRegularFlushes;

  protected final java.util.concurrent.atomic.AtomicLong unpersistedBytes;

  private boolean closed;

  public org.apache.bookkeeper.bookie.BufferedChannel(io.netty.buffer.ByteBufAllocator, java.nio.channels.FileChannel, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: lconst_0
       5: invokespecial #1                  // Method "<init>":(Lio/netty/buffer/ByteBufAllocator;Ljava/nio/channels/FileChannel;IJ)V
       8: return

  public org.apache.bookkeeper.bookie.BufferedChannel(io.netty.buffer.ByteBufAllocator, java.nio.channels.FileChannel, int, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iload_3
       5: lload         4
       7: invokespecial #2                  // Method "<init>":(Lio/netty/buffer/ByteBufAllocator;Ljava/nio/channels/FileChannel;IIJ)V
      10: return

  public org.apache.bookkeeper.bookie.BufferedChannel(io.netty.buffer.ByteBufAllocator, java.nio.channels.FileChannel, int, int, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_2
       2: iload         4
       4: invokespecial #3                  // Method org/apache/bookkeeper/bookie/BufferedReadChannel."<init>":(Ljava/nio/channels/FileChannel;I)V
       7: aload_0
       8: new           #4                  // class java/util/concurrent/atomic/AtomicLong
      11: dup
      12: lconst_0
      13: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      16: putfield      #6                  // Field writeBufferStartPosition:Ljava/util/concurrent/atomic/AtomicLong;
      19: aload_0
      20: iconst_0
      21: putfield      #7                  // Field closed:Z
      24: aload_0
      25: iload_3
      26: putfield      #8                  // Field writeCapacity:I
      29: aload_0
      30: aload_2
      31: invokevirtual #9                  // Method java/nio/channels/FileChannel.position:()J
      34: putfield      #10                 // Field position:J
      37: aload_0
      38: getfield      #6                  // Field writeBufferStartPosition:Ljava/util/concurrent/atomic/AtomicLong;
      41: aload_0
      42: getfield      #10                 // Field position:J
      45: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      48: aload_0
      49: aload_1
      50: iload_3
      51: invokeinterface #12,  2           // InterfaceMethod io/netty/buffer/ByteBufAllocator.directBuffer:(I)Lio/netty/buffer/ByteBuf;
      56: putfield      #13                 // Field writeBuffer:Lio/netty/buffer/ByteBuf;
      59: aload_0
      60: new           #4                  // class java/util/concurrent/atomic/AtomicLong
      63: dup
      64: lconst_0
      65: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      68: putfield      #14                 // Field unpersistedBytes:Ljava/util/concurrent/atomic/AtomicLong;
      71: aload_0
      72: lload         5
      74: putfield      #15                 // Field unpersistedBytesBound:J
      77: aload_0
      78: lload         5
      80: lconst_0
      81: lcmp
      82: ifle          89
      85: iconst_1
      86: goto          90
      89: iconst_0
      90: putfield      #16                 // Field doRegularFlushes:Z
      93: return

  public synchronized void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field closed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #13                 // Field writeBuffer:Lio/netty/buffer/ByteBuf;
      12: invokestatic  #17                 // Method io/netty/util/ReferenceCountUtil.safeRelease:(Ljava/lang/Object;)V
      15: aload_0
      16: getfield      #18                 // Field fileChannel:Ljava/nio/channels/FileChannel;
      19: invokevirtual #19                 // Method java/nio/channels/FileChannel.close:()V
      22: aload_0
      23: iconst_1
      24: putfield      #7                  // Field closed:Z
      27: return

  public void write(io.netty.buffer.ByteBuf) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: iconst_0
       3: istore_3
       4: aload_0
       5: dup
       6: astore        4
       8: monitorenter
       9: aload_1
      10: invokevirtual #20                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      13: istore        5
      15: iload_2
      16: iload         5
      18: if_icmpge     78
      21: aload_1
      22: invokevirtual #20                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      25: iload_2
      26: isub
      27: aload_0
      28: getfield      #13                 // Field writeBuffer:Lio/netty/buffer/ByteBuf;
      31: invokevirtual #21                 // Method io/netty/buffer/ByteBuf.writableBytes:()I
      34: invokestatic  #22                 // Method java/lang/Math.min:(II)I
      37: istore        6
      39: aload_0
      40: getfield      #13                 // Field writeBuffer:Lio/netty/buffer/ByteBuf;
      43: aload_1
      44: aload_1
      45: invokevirtual #23                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
      48: iload_2
      49: iadd
      50: iload         6
      52: invokevirtual #24                 // Method io/netty/buffer/ByteBuf.writeBytes:(Lio/netty/buffer/ByteBuf;II)Lio/netty/buffer/ByteBuf;
      55: pop
      56: iload_2
      57: iload         6
      59: iadd
      60: istore_2
      61: aload_0
      62: getfield      #13                 // Field writeBuffer:Lio/netty/buffer/ByteBuf;
      65: invokevirtual #25                 // Method io/netty/buffer/ByteBuf.isWritable:()Z
      68: ifne          75
      71: aload_0
      72: invokevirtual #26                 // Method flush:()V
      75: goto          15
      78: aload_0
      79: dup
      80: getfield      #10                 // Field position:J
      83: iload_2
      84: i2l
      85: ladd
      86: putfield      #10                 // Field position:J
      89: aload_0
      90: getfield      #16                 // Field doRegularFlushes:Z
      93: ifeq          127
      96: aload_0
      97: getfield      #14                 // Field unpersistedBytes:Ljava/util/concurrent/atomic/AtomicLong;
     100: iload_2
     101: i2l
     102: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
     105: pop2
     106: aload_0
     107: getfield      #14                 // Field unpersistedBytes:Ljava/util/concurrent/atomic/AtomicLong;
     110: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
     113: aload_0
     114: getfield      #15                 // Field unpersistedBytesBound:J
     117: lcmp
     118: iflt          127
     121: aload_0
     122: invokevirtual #26                 // Method flush:()V
     125: iconst_1
     126: istore_3
     127: aload         4
     129: monitorexit
     130: goto          141
     133: astore        7
     135: aload         4
     137: monitorexit
     138: aload         7
     140: athrow
     141: iload_3
     142: ifeq          151
     145: aload_0
     146: iconst_0
     147: invokevirtual #29                 // Method forceWrite:(Z)J
     150: pop2
     151: return
    Exception table:
       from    to  target type
           9   130   133   any
         133   138   133   any

  public long position();
    Code:
       0: aload_0
       1: getfield      #10                 // Field position:J
       4: lreturn

  public long getFileChannelPosition();
    Code:
       0: aload_0
       1: getfield      #6                  // Field writeBufferStartPosition:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public void flushAndForceWrite(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method flush:()V
       4: aload_0
       5: iload_1
       6: invokevirtual #29                 // Method forceWrite:(Z)J
       9: pop2
      10: return

  public void flushAndForceWriteIfRegularFlush(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field doRegularFlushes:Z
       4: ifeq          12
       7: aload_0
       8: iload_1
       9: invokevirtual #30                 // Method flushAndForceWrite:(Z)V
      12: return

  public synchronized void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field writeBuffer:Lio/netty/buffer/ByteBuf;
       4: iconst_0
       5: aload_0
       6: getfield      #13                 // Field writeBuffer:Lio/netty/buffer/ByteBuf;
       9: invokevirtual #31                 // Method io/netty/buffer/ByteBuf.writerIndex:()I
      12: invokevirtual #32                 // Method io/netty/buffer/ByteBuf.internalNioBuffer:(II)Ljava/nio/ByteBuffer;
      15: astore_1
      16: aload_0
      17: getfield      #18                 // Field fileChannel:Ljava/nio/channels/FileChannel;
      20: aload_1
      21: invokevirtual #33                 // Method java/nio/channels/FileChannel.write:(Ljava/nio/ByteBuffer;)I
      24: pop
      25: aload_1
      26: invokevirtual #34                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      29: ifne          16
      32: aload_0
      33: getfield      #13                 // Field writeBuffer:Lio/netty/buffer/ByteBuf;
      36: invokevirtual #35                 // Method io/netty/buffer/ByteBuf.clear:()Lio/netty/buffer/ByteBuf;
      39: pop
      40: aload_0
      41: getfield      #6                  // Field writeBufferStartPosition:Ljava/util/concurrent/atomic/AtomicLong;
      44: aload_0
      45: getfield      #18                 // Field fileChannel:Ljava/nio/channels/FileChannel;
      48: invokevirtual #9                  // Method java/nio/channels/FileChannel.position:()J
      51: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      54: return

  public long forceWrite(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field writeBufferStartPosition:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lstore_2
       8: aload_0
       9: getfield      #15                 // Field unpersistedBytesBound:J
      12: lconst_0
      13: lcmp
      14: ifle          51
      17: aload_0
      18: dup
      19: astore        4
      21: monitorenter
      22: aload_0
      23: getfield      #14                 // Field unpersistedBytes:Ljava/util/concurrent/atomic/AtomicLong;
      26: aload_0
      27: getfield      #13                 // Field writeBuffer:Lio/netty/buffer/ByteBuf;
      30: invokevirtual #20                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      33: i2l
      34: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      37: aload         4
      39: monitorexit
      40: goto          51
      43: astore        5
      45: aload         4
      47: monitorexit
      48: aload         5
      50: athrow
      51: aload_0
      52: getfield      #18                 // Field fileChannel:Ljava/nio/channels/FileChannel;
      55: iload_1
      56: invokevirtual #36                 // Method java/nio/channels/FileChannel.force:(Z)V
      59: lload_2
      60: lreturn
    Exception table:
       from    to  target type
          22    40    43   any
          43    48    43   any

  public synchronized int read(io.netty.buffer.ByteBuf, long, int) throws java.io.IOException;
    Code:
       0: lload_2
       1: lstore        5
       3: iload         4
       5: ifle          266
       8: aload_0
       9: getfield      #13                 // Field writeBuffer:Lio/netty/buffer/ByteBuf;
      12: ifnull        102
      15: aload_0
      16: getfield      #6                  // Field writeBufferStartPosition:Ljava/util/concurrent/atomic/AtomicLong;
      19: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      22: lload_2
      23: lcmp
      24: ifgt          102
      27: lload_2
      28: aload_0
      29: getfield      #6                  // Field writeBufferStartPosition:Ljava/util/concurrent/atomic/AtomicLong;
      32: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      35: lsub
      36: l2i
      37: istore        7
      39: aload_0
      40: getfield      #13                 // Field writeBuffer:Lio/netty/buffer/ByteBuf;
      43: invokevirtual #31                 // Method io/netty/buffer/ByteBuf.writerIndex:()I
      46: iload         7
      48: isub
      49: aload_1
      50: invokevirtual #21                 // Method io/netty/buffer/ByteBuf.writableBytes:()I
      53: invokestatic  #22                 // Method java/lang/Math.min:(II)I
      56: istore        8
      58: iload         8
      60: ifne          73
      63: new           #37                 // class java/io/IOException
      66: dup
      67: ldc           #38                 // String Read past EOF
      69: invokespecial #39                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      72: athrow
      73: aload_1
      74: aload_0
      75: getfield      #13                 // Field writeBuffer:Lio/netty/buffer/ByteBuf;
      78: iload         7
      80: iload         8
      82: invokevirtual #24                 // Method io/netty/buffer/ByteBuf.writeBytes:(Lio/netty/buffer/ByteBuf;II)Lio/netty/buffer/ByteBuf;
      85: pop
      86: lload_2
      87: iload         8
      89: i2l
      90: ladd
      91: lstore_2
      92: iload         4
      94: iload         8
      96: isub
      97: istore        4
      99: goto          3
     102: aload_0
     103: getfield      #13                 // Field writeBuffer:Lio/netty/buffer/ByteBuf;
     106: ifnonnull     124
     109: aload_0
     110: getfield      #6                  // Field writeBufferStartPosition:Ljava/util/concurrent/atomic/AtomicLong;
     113: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
     116: lload_2
     117: lcmp
     118: ifgt          124
     121: goto          266
     124: aload_0
     125: getfield      #40                 // Field readBufferStartPosition:J
     128: lload_2
     129: lcmp
     130: ifgt          208
     133: lload_2
     134: aload_0
     135: getfield      #40                 // Field readBufferStartPosition:J
     138: aload_0
     139: getfield      #41                 // Field readBuffer:Lio/netty/buffer/ByteBuf;
     142: invokevirtual #31                 // Method io/netty/buffer/ByteBuf.writerIndex:()I
     145: i2l
     146: ladd
     147: lcmp
     148: ifge          208
     151: lload_2
     152: aload_0
     153: getfield      #40                 // Field readBufferStartPosition:J
     156: lsub
     157: l2i
     158: istore        7
     160: aload_0
     161: getfield      #41                 // Field readBuffer:Lio/netty/buffer/ByteBuf;
     164: invokevirtual #31                 // Method io/netty/buffer/ByteBuf.writerIndex:()I
     167: iload         7
     169: isub
     170: aload_1
     171: invokevirtual #21                 // Method io/netty/buffer/ByteBuf.writableBytes:()I
     174: invokestatic  #22                 // Method java/lang/Math.min:(II)I
     177: istore        8
     179: aload_1
     180: aload_0
     181: getfield      #41                 // Field readBuffer:Lio/netty/buffer/ByteBuf;
     184: iload         7
     186: iload         8
     188: invokevirtual #24                 // Method io/netty/buffer/ByteBuf.writeBytes:(Lio/netty/buffer/ByteBuf;II)Lio/netty/buffer/ByteBuf;
     191: pop
     192: lload_2
     193: iload         8
     195: i2l
     196: ladd
     197: lstore_2
     198: iload         4
     200: iload         8
     202: isub
     203: istore        4
     205: goto          3
     208: aload_0
     209: lload_2
     210: putfield      #40                 // Field readBufferStartPosition:J
     213: aload_0
     214: getfield      #18                 // Field fileChannel:Ljava/nio/channels/FileChannel;
     217: aload_0
     218: getfield      #41                 // Field readBuffer:Lio/netty/buffer/ByteBuf;
     221: iconst_0
     222: aload_0
     223: getfield      #42                 // Field readCapacity:I
     226: invokevirtual #32                 // Method io/netty/buffer/ByteBuf.internalNioBuffer:(II)Ljava/nio/ByteBuffer;
     229: aload_0
     230: getfield      #40                 // Field readBufferStartPosition:J
     233: invokevirtual #43                 // Method java/nio/channels/FileChannel.read:(Ljava/nio/ByteBuffer;J)I
     236: istore        7
     238: iload         7
     240: ifgt          253
     243: new           #37                 // class java/io/IOException
     246: dup
     247: ldc           #44                 // String Reading from filechannel returned a non-positive value. Short read.
     249: invokespecial #39                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     252: athrow
     253: aload_0
     254: getfield      #41                 // Field readBuffer:Lio/netty/buffer/ByteBuf;
     257: iload         7
     259: invokevirtual #45                 // Method io/netty/buffer/ByteBuf.writerIndex:(I)Lio/netty/buffer/ByteBuf;
     262: pop
     263: goto          3
     266: lload_2
     267: lload         5
     269: lsub
     270: l2i
     271: ireturn

  public synchronized void clear();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method org/apache/bookkeeper/bookie/BufferedReadChannel.clear:()V
       4: aload_0
       5: getfield      #13                 // Field writeBuffer:Lio/netty/buffer/ByteBuf;
       8: invokevirtual #35                 // Method io/netty/buffer/ByteBuf.clear:()Lio/netty/buffer/ByteBuf;
      11: pop
      12: return

  public synchronized int getNumOfBytesInWriteBuffer();
    Code:
       0: aload_0
       1: getfield      #13                 // Field writeBuffer:Lio/netty/buffer/ByteBuf;
       4: invokevirtual #20                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
       7: ireturn

  long getUnpersistedBytes();
    Code:
       0: aload_0
       1: getfield      #14                 // Field unpersistedBytes:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn
}
