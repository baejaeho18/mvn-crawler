Compiled from "FileInfoBackingCache.java"
class org.apache.bookkeeper.bookie.FileInfoBackingCache {
  private static final org.slf4j.Logger log;

  static final int DEAD_REF;

  final java.util.concurrent.locks.ReentrantReadWriteLock lock;

  final org.apache.bookkeeper.util.collections.ConcurrentLongHashMap<org.apache.bookkeeper.bookie.FileInfoBackingCache$CachedFileInfo> fileInfos;

  final org.apache.bookkeeper.bookie.FileInfoBackingCache$FileLoader fileLoader;

  final int fileInfoVersionToWrite;

  org.apache.bookkeeper.bookie.FileInfoBackingCache(org.apache.bookkeeper.bookie.FileInfoBackingCache$FileLoader, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/locks/ReentrantReadWriteLock
       8: dup
       9: invokespecial #4                  // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
      12: putfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      15: aload_0
      16: new           #6                  // class org/apache/bookkeeper/util/collections/ConcurrentLongHashMap
      19: dup
      20: invokespecial #7                  // Method org/apache/bookkeeper/util/collections/ConcurrentLongHashMap."<init>":()V
      23: putfield      #8                  // Field fileInfos:Lorg/apache/bookkeeper/util/collections/ConcurrentLongHashMap;
      26: aload_0
      27: aload_1
      28: putfield      #9                  // Field fileLoader:Lorg/apache/bookkeeper/bookie/FileInfoBackingCache$FileLoader;
      31: aload_0
      32: iload_2
      33: putfield      #10                 // Field fileInfoVersionToWrite:I
      36: return

  private static org.apache.bookkeeper.bookie.FileInfoBackingCache$CachedFileInfo tryRetainFileInfo(org.apache.bookkeeper.bookie.FileInfoBackingCache$CachedFileInfo) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.tryRetain:()Z
       4: istore_1
       5: iload_1
       6: ifne          41
       9: new           #12                 // class java/io/IOException
      12: dup
      13: new           #13                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #15                 // String FileInfo
      22: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_0
      26: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      29: ldc           #18                 // String  is already marked dead
      31: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokespecial #20                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: aload_0
      42: invokevirtual #21                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.isDeleted:()Z
      45: ifeq          60
      48: new           #22                 // class org/apache/bookkeeper/bookie/Bookie$NoLedgerException
      51: dup
      52: aload_0
      53: getfield      #23                 // Field org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.ledgerId:J
      56: invokespecial #24                 // Method org/apache/bookkeeper/bookie/Bookie$NoLedgerException."<init>":(J)V
      59: athrow
      60: aload_0
      61: areturn

  org.apache.bookkeeper.bookie.FileInfoBackingCache$CachedFileInfo loadFileInfo(long, byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
       7: invokevirtual #26                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      10: aload_0
      11: getfield      #8                  // Field fileInfos:Lorg/apache/bookkeeper/util/collections/ConcurrentLongHashMap;
      14: lload_1
      15: invokevirtual #27                 // Method org/apache/bookkeeper/util/collections/ConcurrentLongHashMap.get:(J)Ljava/lang/Object;
      18: checkcast     #28                 // class org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo
      21: astore        4
      23: aload         4
      25: ifnull        48
      28: aload         4
      30: invokestatic  #29                 // Method tryRetainFileInfo:(Lorg/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo;)Lorg/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo;
      33: astore        5
      35: aload_0
      36: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      39: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      42: invokevirtual #30                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      45: aload         5
      47: areturn
      48: aload_0
      49: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      52: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      55: invokevirtual #30                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      58: goto          76
      61: astore        6
      63: aload_0
      64: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      67: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      70: invokevirtual #30                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      73: aload         6
      75: athrow
      76: aload_0
      77: getfield      #9                  // Field fileLoader:Lorg/apache/bookkeeper/bookie/FileInfoBackingCache$FileLoader;
      80: lload_1
      81: aload_3
      82: ifnull        89
      85: iconst_1
      86: goto          90
      89: iconst_0
      90: invokeinterface #31,  4           // InterfaceMethod org/apache/bookkeeper/bookie/FileInfoBackingCache$FileLoader.load:(JZ)Ljava/io/File;
      95: astore        4
      97: new           #28                 // class org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo
     100: dup
     101: aload_0
     102: lload_1
     103: aload         4
     105: aload_3
     106: invokespecial #32                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo."<init>":(Lorg/apache/bookkeeper/bookie/FileInfoBackingCache;JLjava/io/File;[B)V
     109: astore        5
     111: aload_0
     112: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     115: invokevirtual #33                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
     118: invokevirtual #34                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
     121: aload_0
     122: getfield      #8                  // Field fileInfos:Lorg/apache/bookkeeper/util/collections/ConcurrentLongHashMap;
     125: lload_1
     126: invokevirtual #27                 // Method org/apache/bookkeeper/util/collections/ConcurrentLongHashMap.get:(J)Ljava/lang/Object;
     129: checkcast     #28                 // class org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo
     132: astore        6
     134: aload         6
     136: ifnull        147
     139: aload         5
     141: invokevirtual #35                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.recycle:()V
     144: goto          162
     147: aload_0
     148: getfield      #8                  // Field fileInfos:Lorg/apache/bookkeeper/util/collections/ConcurrentLongHashMap;
     151: lload_1
     152: aload         5
     154: invokevirtual #36                 // Method org/apache/bookkeeper/util/collections/ConcurrentLongHashMap.put:(JLjava/lang/Object;)Ljava/lang/Object;
     157: pop
     158: aload         5
     160: astore        6
     162: aload         6
     164: invokestatic  #29                 // Method tryRetainFileInfo:(Lorg/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo;)Lorg/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo;
     167: astore        7
     169: aload_0
     170: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     173: invokevirtual #33                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
     176: invokevirtual #37                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
     179: aload         7
     181: areturn
     182: astore        8
     184: aload_0
     185: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     188: invokevirtual #33                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
     191: invokevirtual #37                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
     194: aload         8
     196: athrow
    Exception table:
       from    to  target type
          10    35    61   any
          61    63    61   any
         121   169   182   any
         182   184   182   any

  private void releaseFileInfo(long, org.apache.bookkeeper.bookie.FileInfoBackingCache$CachedFileInfo);
    Code:
       0: aload_0
       1: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #33                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
       7: invokevirtual #34                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
      10: aload_3
      11: invokestatic  #38                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.access$000:(Lorg/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo;)Z
      14: ifeq          32
      17: aload_3
      18: iconst_1
      19: invokevirtual #39                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.close:(Z)V
      22: aload_0
      23: getfield      #8                  // Field fileInfos:Lorg/apache/bookkeeper/util/collections/ConcurrentLongHashMap;
      26: lload_1
      27: aload_3
      28: invokevirtual #40                 // Method org/apache/bookkeeper/util/collections/ConcurrentLongHashMap.remove:(JLjava/lang/Object;)Z
      31: pop
      32: aload_0
      33: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      36: invokevirtual #33                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      39: invokevirtual #37                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      42: goto          105
      45: astore        4
      47: getstatic     #41                 // Field log:Lorg/slf4j/Logger;
      50: ldc           #42                 // String Error evicting file info({}) for ledger {} from backing cache
      52: iconst_3
      53: anewarray     #43                 // class java/lang/Object
      56: dup
      57: iconst_0
      58: aload_3
      59: aastore
      60: dup
      61: iconst_1
      62: lload_1
      63: invokestatic  #44                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      66: aastore
      67: dup
      68: iconst_2
      69: aload         4
      71: aastore
      72: invokeinterface #45,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;[Ljava/lang/Object;)V
      77: aload_0
      78: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      81: invokevirtual #33                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      84: invokevirtual #37                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      87: goto          105
      90: astore        5
      92: aload_0
      93: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      96: invokevirtual #33                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      99: invokevirtual #37                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
     102: aload         5
     104: athrow
     105: return
    Exception table:
       from    to  target type
          10    32    45   Class java/io/IOException
          10    32    90   any
          45    77    90   any
          90    92    90   any

  void closeAllWithoutFlushing() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field fileInfos:Lorg/apache/bookkeeper/util/collections/ConcurrentLongHashMap;
       4: invokedynamic #46,  0             // InvokeDynamic #0:accept:()Lorg/apache/bookkeeper/util/collections/ConcurrentLongHashMap$EntryProcessor;
       9: invokevirtual #47                 // Method org/apache/bookkeeper/util/collections/ConcurrentLongHashMap.forEach:(Lorg/apache/bookkeeper/util/collections/ConcurrentLongHashMap$EntryProcessor;)V
      12: goto          21
      15: astore_1
      16: aload_1
      17: invokevirtual #49                 // Method java/io/UncheckedIOException.getCause:()Ljava/io/IOException;
      20: athrow
      21: return
    Exception table:
       from    to  target type
           0    12    15   Class java/io/UncheckedIOException

  private static void lambda$closeAllWithoutFlushing$0(long, org.apache.bookkeeper.bookie.FileInfoBackingCache$CachedFileInfo);
    Code:
       0: aload_2
       1: iconst_0
       2: invokevirtual #39                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo.close:(Z)V
       5: goto          18
       8: astore_3
       9: new           #48                 // class java/io/UncheckedIOException
      12: dup
      13: aload_3
      14: invokespecial #50                 // Method java/io/UncheckedIOException."<init>":(Ljava/io/IOException;)V
      17: athrow
      18: return
    Exception table:
       from    to  target type
           0     5     8   Class java/io/IOException

  static void access$100(org.apache.bookkeeper.bookie.FileInfoBackingCache, long, org.apache.bookkeeper.bookie.FileInfoBackingCache$CachedFileInfo);
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: invokespecial #1                  // Method releaseFileInfo:(JLorg/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo;)V
       6: return

  static {};
    Code:
       0: ldc           #51                 // class org/apache/bookkeeper/bookie/FileInfoBackingCache
       2: invokestatic  #52                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #41                 // Field log:Lorg/slf4j/Logger;
       8: return
}
