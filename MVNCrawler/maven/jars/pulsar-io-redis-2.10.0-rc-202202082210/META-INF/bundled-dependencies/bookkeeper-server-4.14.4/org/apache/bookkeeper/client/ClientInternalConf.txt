Compiled from "ClientInternalConf.java"
class org.apache.bookkeeper.client.ClientInternalConf {
  final org.apache.bookkeeper.feature.Feature disableEnsembleChangeFeature;

  final boolean delayEnsembleChange;

  final java.util.Optional<org.apache.bookkeeper.client.SpeculativeRequestExecutionPolicy> readSpeculativeRequestPolicy;

  final java.util.Optional<org.apache.bookkeeper.client.SpeculativeRequestExecutionPolicy> readLACSpeculativeRequestPolicy;

  final int explicitLacInterval;

  final long waitForWriteSetMs;

  final long addEntryQuorumTimeoutNanos;

  final boolean enableParallelRecoveryRead;

  final boolean enableReorderReadSequence;

  final boolean enableStickyReads;

  final int recoveryReadBatchSize;

  final int throttleValue;

  final int bookieFailureHistoryExpirationMSec;

  final int maxAllowedEnsembleChanges;

  final long timeoutMonitorIntervalSec;

  final boolean enableBookieFailureTracking;

  final boolean useV2WireProtocol;

  final boolean enforceMinNumFaultDomainsForWrite;

  static org.apache.bookkeeper.client.ClientInternalConf defaultValues();
    Code:
       0: new           #1                  // class org/apache/bookkeeper/conf/ClientConfiguration
       3: dup
       4: invokespecial #2                  // Method org/apache/bookkeeper/conf/ClientConfiguration."<init>":()V
       7: invokestatic  #3                  // Method fromConfig:(Lorg/apache/bookkeeper/conf/ClientConfiguration;)Lorg/apache/bookkeeper/client/ClientInternalConf;
      10: areturn

  static org.apache.bookkeeper.client.ClientInternalConf fromConfig(org.apache.bookkeeper.conf.ClientConfiguration);
    Code:
       0: aload_0
       1: getstatic     #4                  // Field org/apache/bookkeeper/feature/SettableFeatureProvider.DISABLE_ALL:Lorg/apache/bookkeeper/feature/FeatureProvider;
       4: invokestatic  #5                  // Method fromConfigAndFeatureProvider:(Lorg/apache/bookkeeper/conf/ClientConfiguration;Lorg/apache/bookkeeper/feature/FeatureProvider;)Lorg/apache/bookkeeper/client/ClientInternalConf;
       7: areturn

  static org.apache.bookkeeper.client.ClientInternalConf fromConfigAndFeatureProvider(org.apache.bookkeeper.conf.ClientConfiguration, org.apache.bookkeeper.feature.FeatureProvider);
    Code:
       0: new           #6                  // class org/apache/bookkeeper/client/ClientInternalConf
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #7                  // Method "<init>":(Lorg/apache/bookkeeper/conf/ClientConfiguration;Lorg/apache/bookkeeper/feature/FeatureProvider;)V
       9: areturn

  private org.apache.bookkeeper.client.ClientInternalConf(org.apache.bookkeeper.conf.ClientConfiguration, org.apache.bookkeeper.feature.FeatureProvider);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #9                  // Method org/apache/bookkeeper/conf/ClientConfiguration.getExplictLacInterval:()I
       9: putfield      #10                 // Field explicitLacInterval:I
      12: aload_0
      13: aload_1
      14: invokevirtual #11                 // Method org/apache/bookkeeper/conf/ClientConfiguration.isReorderReadSequenceEnabled:()Z
      17: putfield      #12                 // Field enableReorderReadSequence:Z
      20: aload_0
      21: aload_1
      22: invokevirtual #13                 // Method org/apache/bookkeeper/conf/ClientConfiguration.getEnableParallelRecoveryRead:()Z
      25: putfield      #14                 // Field enableParallelRecoveryRead:Z
      28: aload_0
      29: aload_1
      30: invokevirtual #15                 // Method org/apache/bookkeeper/conf/ClientConfiguration.getRecoveryReadBatchSize:()I
      33: putfield      #16                 // Field recoveryReadBatchSize:I
      36: aload_0
      37: aload_1
      38: invokevirtual #17                 // Method org/apache/bookkeeper/conf/ClientConfiguration.getWaitTimeoutOnBackpressureMillis:()J
      41: putfield      #18                 // Field waitForWriteSetMs:J
      44: aload_0
      45: getstatic     #19                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      48: aload_1
      49: invokevirtual #20                 // Method org/apache/bookkeeper/conf/ClientConfiguration.getAddEntryQuorumTimeout:()I
      52: i2l
      53: invokevirtual #21                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      56: putfield      #22                 // Field addEntryQuorumTimeoutNanos:J
      59: aload_0
      60: aload_1
      61: invokevirtual #23                 // Method org/apache/bookkeeper/conf/ClientConfiguration.getThrottleValue:()I
      64: putfield      #24                 // Field throttleValue:I
      67: aload_0
      68: aload_1
      69: invokevirtual #25                 // Method org/apache/bookkeeper/conf/ClientConfiguration.getBookieFailureHistoryExpirationMSec:()I
      72: putfield      #26                 // Field bookieFailureHistoryExpirationMSec:I
      75: aload_0
      76: aload_2
      77: aload_1
      78: invokevirtual #27                 // Method org/apache/bookkeeper/conf/ClientConfiguration.getDisableEnsembleChangeFeatureName:()Ljava/lang/String;
      81: invokeinterface #28,  2           // InterfaceMethod org/apache/bookkeeper/feature/FeatureProvider.getFeature:(Ljava/lang/String;)Lorg/apache/bookkeeper/feature/Feature;
      86: putfield      #29                 // Field disableEnsembleChangeFeature:Lorg/apache/bookkeeper/feature/Feature;
      89: aload_0
      90: aload_1
      91: invokevirtual #30                 // Method org/apache/bookkeeper/conf/ClientConfiguration.getDelayEnsembleChange:()Z
      94: putfield      #31                 // Field delayEnsembleChange:Z
      97: aload_0
      98: aload_1
      99: invokevirtual #32                 // Method org/apache/bookkeeper/conf/ClientConfiguration.getMaxAllowedEnsembleChanges:()I
     102: putfield      #33                 // Field maxAllowedEnsembleChanges:I
     105: aload_0
     106: aload_1
     107: invokevirtual #34                 // Method org/apache/bookkeeper/conf/ClientConfiguration.getTimeoutMonitorIntervalSec:()J
     110: putfield      #35                 // Field timeoutMonitorIntervalSec:J
     113: aload_0
     114: aload_1
     115: invokevirtual #36                 // Method org/apache/bookkeeper/conf/ClientConfiguration.getEnableBookieFailureTracking:()Z
     118: putfield      #37                 // Field enableBookieFailureTracking:Z
     121: aload_0
     122: aload_1
     123: invokevirtual #38                 // Method org/apache/bookkeeper/conf/ClientConfiguration.getUseV2WireProtocol:()Z
     126: putfield      #39                 // Field useV2WireProtocol:Z
     129: aload_0
     130: aload_1
     131: invokevirtual #40                 // Method org/apache/bookkeeper/conf/ClientConfiguration.isStickyReadsEnabled:()Z
     134: putfield      #41                 // Field enableStickyReads:Z
     137: aload_0
     138: aload_1
     139: invokevirtual #42                 // Method org/apache/bookkeeper/conf/ClientConfiguration.getEnforceMinNumFaultDomainsForWrite:()Z
     142: putfield      #43                 // Field enforceMinNumFaultDomainsForWrite:Z
     145: aload_1
     146: invokevirtual #44                 // Method org/apache/bookkeeper/conf/ClientConfiguration.getFirstSpeculativeReadTimeout:()I
     149: ifle          181
     152: aload_0
     153: new           #45                 // class org/apache/bookkeeper/client/DefaultSpeculativeRequestExecutionPolicy
     156: dup
     157: aload_1
     158: invokevirtual #44                 // Method org/apache/bookkeeper/conf/ClientConfiguration.getFirstSpeculativeReadTimeout:()I
     161: aload_1
     162: invokevirtual #46                 // Method org/apache/bookkeeper/conf/ClientConfiguration.getMaxSpeculativeReadTimeout:()I
     165: aload_1
     166: invokevirtual #47                 // Method org/apache/bookkeeper/conf/ClientConfiguration.getSpeculativeReadTimeoutBackoffMultiplier:()F
     169: invokespecial #48                 // Method org/apache/bookkeeper/client/DefaultSpeculativeRequestExecutionPolicy."<init>":(IIF)V
     172: invokestatic  #49                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
     175: putfield      #50                 // Field readSpeculativeRequestPolicy:Ljava/util/Optional;
     178: goto          188
     181: aload_0
     182: invokestatic  #51                 // Method java/util/Optional.empty:()Ljava/util/Optional;
     185: putfield      #50                 // Field readSpeculativeRequestPolicy:Ljava/util/Optional;
     188: aload_1
     189: invokevirtual #52                 // Method org/apache/bookkeeper/conf/ClientConfiguration.getFirstSpeculativeReadLACTimeout:()I
     192: ifle          224
     195: aload_0
     196: new           #45                 // class org/apache/bookkeeper/client/DefaultSpeculativeRequestExecutionPolicy
     199: dup
     200: aload_1
     201: invokevirtual #52                 // Method org/apache/bookkeeper/conf/ClientConfiguration.getFirstSpeculativeReadLACTimeout:()I
     204: aload_1
     205: invokevirtual #53                 // Method org/apache/bookkeeper/conf/ClientConfiguration.getMaxSpeculativeReadLACTimeout:()I
     208: aload_1
     209: invokevirtual #54                 // Method org/apache/bookkeeper/conf/ClientConfiguration.getSpeculativeReadLACTimeoutBackoffMultiplier:()F
     212: invokespecial #48                 // Method org/apache/bookkeeper/client/DefaultSpeculativeRequestExecutionPolicy."<init>":(IIF)V
     215: invokestatic  #49                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
     218: putfield      #55                 // Field readLACSpeculativeRequestPolicy:Ljava/util/Optional;
     221: goto          231
     224: aload_0
     225: invokestatic  #51                 // Method java/util/Optional.empty:()Ljava/util/Optional;
     228: putfield      #55                 // Field readLACSpeculativeRequestPolicy:Ljava/util/Optional;
     231: return
}
