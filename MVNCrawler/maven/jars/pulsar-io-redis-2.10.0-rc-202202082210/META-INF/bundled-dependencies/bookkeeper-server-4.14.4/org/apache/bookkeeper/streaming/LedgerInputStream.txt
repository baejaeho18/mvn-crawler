Compiled from "LedgerInputStream.java"
public class org.apache.bookkeeper.streaming.LedgerInputStream extends java.io.InputStream {
  private final org.apache.bookkeeper.client.LedgerHandle lh;

  private java.nio.ByteBuffer bytebuff;

  byte[] bbytes;

  long lastEntry;

  int increment;

  int defaultSize;

  java.util.Enumeration<org.apache.bookkeeper.client.LedgerEntry> ledgerSeq;

  public org.apache.bookkeeper.streaming.LedgerInputStream(org.apache.bookkeeper.client.LedgerHandle) throws org.apache.bookkeeper.client.BKException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #2                  // Field lastEntry:J
       9: aload_0
      10: bipush        50
      12: putfield      #3                  // Field increment:I
      15: aload_0
      16: ldc           #4                  // int 1048576
      18: putfield      #5                  // Field defaultSize:I
      21: aload_0
      22: aconst_null
      23: putfield      #6                  // Field ledgerSeq:Ljava/util/Enumeration;
      26: aload_0
      27: aload_1
      28: putfield      #7                  // Field lh:Lorg/apache/bookkeeper/client/LedgerHandle;
      31: aload_0
      32: aload_0
      33: getfield      #5                  // Field defaultSize:I
      36: newarray       byte
      38: putfield      #8                  // Field bbytes:[B
      41: aload_0
      42: aload_0
      43: getfield      #8                  // Field bbytes:[B
      46: invokestatic  #9                  // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      49: putfield      #10                 // Field bytebuff:Ljava/nio/ByteBuffer;
      52: aload_0
      53: getfield      #10                 // Field bytebuff:Ljava/nio/ByteBuffer;
      56: aload_0
      57: getfield      #10                 // Field bytebuff:Ljava/nio/ByteBuffer;
      60: invokevirtual #11                 // Method java/nio/ByteBuffer.limit:()I
      63: invokevirtual #12                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      66: pop
      67: aload_0
      68: aload_1
      69: invokevirtual #13                 // Method org/apache/bookkeeper/client/LedgerHandle.getLastAddConfirmed:()J
      72: aload_0
      73: getfield      #3                  // Field increment:I
      76: i2l
      77: invokestatic  #14                 // Method java/lang/Math.min:(JJ)J
      80: putfield      #2                  // Field lastEntry:J
      83: aload_0
      84: aload_1
      85: lconst_0
      86: aload_0
      87: getfield      #2                  // Field lastEntry:J
      90: invokevirtual #15                 // Method org/apache/bookkeeper/client/LedgerHandle.readEntries:(JJ)Ljava/util/Enumeration;
      93: putfield      #6                  // Field ledgerSeq:Ljava/util/Enumeration;
      96: return

  public org.apache.bookkeeper.streaming.LedgerInputStream(org.apache.bookkeeper.client.LedgerHandle, int) throws org.apache.bookkeeper.client.BKException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #2                  // Field lastEntry:J
       9: aload_0
      10: bipush        50
      12: putfield      #3                  // Field increment:I
      15: aload_0
      16: ldc           #4                  // int 1048576
      18: putfield      #5                  // Field defaultSize:I
      21: aload_0
      22: aconst_null
      23: putfield      #6                  // Field ledgerSeq:Ljava/util/Enumeration;
      26: aload_0
      27: aload_1
      28: putfield      #7                  // Field lh:Lorg/apache/bookkeeper/client/LedgerHandle;
      31: aload_0
      32: iload_2
      33: newarray       byte
      35: putfield      #8                  // Field bbytes:[B
      38: aload_0
      39: aload_0
      40: getfield      #8                  // Field bbytes:[B
      43: invokestatic  #9                  // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      46: putfield      #10                 // Field bytebuff:Ljava/nio/ByteBuffer;
      49: aload_0
      50: getfield      #10                 // Field bytebuff:Ljava/nio/ByteBuffer;
      53: aload_0
      54: getfield      #10                 // Field bytebuff:Ljava/nio/ByteBuffer;
      57: invokevirtual #11                 // Method java/nio/ByteBuffer.limit:()I
      60: invokevirtual #12                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      63: pop
      64: aload_0
      65: aload_1
      66: invokevirtual #13                 // Method org/apache/bookkeeper/client/LedgerHandle.getLastAddConfirmed:()J
      69: aload_0
      70: getfield      #3                  // Field increment:I
      73: i2l
      74: invokestatic  #14                 // Method java/lang/Math.min:(JJ)J
      77: putfield      #2                  // Field lastEntry:J
      80: aload_0
      81: aload_1
      82: lconst_0
      83: aload_0
      84: getfield      #2                  // Field lastEntry:J
      87: invokevirtual #15                 // Method org/apache/bookkeeper/client/LedgerHandle.readEntries:(JJ)Ljava/util/Enumeration;
      90: putfield      #6                  // Field ledgerSeq:Ljava/util/Enumeration;
      93: return

  public void close();
    Code:
       0: return

  private synchronized boolean refill() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field bytebuff:Ljava/nio/ByteBuffer;
       4: invokevirtual #16                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
       7: pop
       8: aload_0
       9: getfield      #6                  // Field ledgerSeq:Ljava/util/Enumeration;
      12: invokeinterface #17,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      17: ifne          37
      20: aload_0
      21: getfield      #2                  // Field lastEntry:J
      24: aload_0
      25: getfield      #7                  // Field lh:Lorg/apache/bookkeeper/client/LedgerHandle;
      28: invokevirtual #13                 // Method org/apache/bookkeeper/client/LedgerHandle.getLastAddConfirmed:()J
      31: lcmp
      32: iflt          37
      35: iconst_0
      36: ireturn
      37: aload_0
      38: getfield      #6                  // Field ledgerSeq:Ljava/util/Enumeration;
      41: invokeinterface #17,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      46: ifne          127
      49: aload_0
      50: getfield      #2                  // Field lastEntry:J
      53: aload_0
      54: getfield      #3                  // Field increment:I
      57: i2l
      58: ladd
      59: aload_0
      60: getfield      #7                  // Field lh:Lorg/apache/bookkeeper/client/LedgerHandle;
      63: invokevirtual #13                 // Method org/apache/bookkeeper/client/LedgerHandle.getLastAddConfirmed:()J
      66: invokestatic  #14                 // Method java/lang/Math.min:(JJ)J
      69: lstore_1
      70: aload_0
      71: aload_0
      72: getfield      #7                  // Field lh:Lorg/apache/bookkeeper/client/LedgerHandle;
      75: aload_0
      76: getfield      #2                  // Field lastEntry:J
      79: lconst_1
      80: ladd
      81: lload_1
      82: invokevirtual #15                 // Method org/apache/bookkeeper/client/LedgerHandle.readEntries:(JJ)Ljava/util/Enumeration;
      85: putfield      #6                  // Field ledgerSeq:Ljava/util/Enumeration;
      88: goto          122
      91: astore_3
      92: new           #19                 // class java/io/IOException
      95: dup
      96: aload_3
      97: invokevirtual #20                 // Method org/apache/bookkeeper/client/BKException.getMessage:()Ljava/lang/String;
     100: invokespecial #21                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     103: astore        4
     105: aload         4
     107: aload_3
     108: invokevirtual #22                 // Method java/io/IOException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
     111: pop
     112: aload         4
     114: athrow
     115: astore_3
     116: invokestatic  #24                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     119: invokevirtual #25                 // Method java/lang/Thread.interrupt:()V
     122: aload_0
     123: lload_1
     124: putfield      #2                  // Field lastEntry:J
     127: aload_0
     128: getfield      #6                  // Field ledgerSeq:Ljava/util/Enumeration;
     131: invokeinterface #26,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
     136: checkcast     #27                 // class org/apache/bookkeeper/client/LedgerEntry
     139: astore_1
     140: aload_0
     141: aload_1
     142: invokevirtual #28                 // Method org/apache/bookkeeper/client/LedgerEntry.getEntry:()[B
     145: putfield      #8                  // Field bbytes:[B
     148: aload_0
     149: aload_0
     150: getfield      #8                  // Field bbytes:[B
     153: invokestatic  #9                  // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
     156: putfield      #10                 // Field bytebuff:Ljava/nio/ByteBuffer;
     159: iconst_1
     160: ireturn
    Exception table:
       from    to  target type
          70    88    91   Class org/apache/bookkeeper/client/BKException
          70    88   115   Class java/lang/InterruptedException

  public synchronized int read() throws java.io.IOException;
    Code:
       0: iconst_1
       1: istore_1
       2: aload_0
       3: getfield      #10                 // Field bytebuff:Ljava/nio/ByteBuffer;
       6: invokevirtual #29                 // Method java/nio/ByteBuffer.remaining:()I
       9: ifne          17
      12: aload_0
      13: invokespecial #30                 // Method refill:()Z
      16: istore_1
      17: iload_1
      18: ifeq          35
      21: sipush        255
      24: aload_0
      25: getfield      #10                 // Field bytebuff:Ljava/nio/ByteBuffer;
      28: invokevirtual #31                 // Method java/nio/ByteBuffer.get:()B
      31: iand
      32: istore_2
      33: iload_2
      34: ireturn
      35: iconst_m1
      36: ireturn

  public synchronized int read(byte[]) throws java.io.IOException;
    Code:
       0: iconst_1
       1: istore_2
       2: aload_0
       3: getfield      #10                 // Field bytebuff:Ljava/nio/ByteBuffer;
       6: invokevirtual #29                 // Method java/nio/ByteBuffer.remaining:()I
       9: ifne          17
      12: aload_0
      13: invokespecial #30                 // Method refill:()Z
      16: istore_2
      17: iload_2
      18: ifeq          76
      21: aload_0
      22: getfield      #10                 // Field bytebuff:Ljava/nio/ByteBuffer;
      25: invokevirtual #29                 // Method java/nio/ByteBuffer.remaining:()I
      28: istore_3
      29: iload_3
      30: aload_1
      31: arraylength
      32: invokestatic  #32                 // Method java/lang/Math.min:(II)I
      35: istore        4
      37: aload_0
      38: getfield      #8                  // Field bbytes:[B
      41: aload_0
      42: getfield      #10                 // Field bytebuff:Ljava/nio/ByteBuffer;
      45: invokevirtual #33                 // Method java/nio/ByteBuffer.position:()I
      48: aload_1
      49: iconst_0
      50: iload         4
      52: invokestatic  #34                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      55: aload_0
      56: getfield      #10                 // Field bytebuff:Ljava/nio/ByteBuffer;
      59: aload_0
      60: getfield      #10                 // Field bytebuff:Ljava/nio/ByteBuffer;
      63: invokevirtual #33                 // Method java/nio/ByteBuffer.position:()I
      66: iload         4
      68: iadd
      69: invokevirtual #12                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      72: pop
      73: iload         4
      75: ireturn
      76: iconst_m1
      77: ireturn

  public synchronized int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: iconst_1
       1: istore        4
       3: aload_0
       4: getfield      #10                 // Field bytebuff:Ljava/nio/ByteBuffer;
       7: invokevirtual #29                 // Method java/nio/ByteBuffer.remaining:()I
      10: ifne          19
      13: aload_0
      14: invokespecial #30                 // Method refill:()Z
      17: istore        4
      19: iload         4
      21: ifeq          80
      24: aload_0
      25: getfield      #10                 // Field bytebuff:Ljava/nio/ByteBuffer;
      28: invokevirtual #29                 // Method java/nio/ByteBuffer.remaining:()I
      31: istore        5
      33: iload         5
      35: iload_3
      36: invokestatic  #32                 // Method java/lang/Math.min:(II)I
      39: istore        6
      41: aload_0
      42: getfield      #8                  // Field bbytes:[B
      45: aload_0
      46: getfield      #10                 // Field bytebuff:Ljava/nio/ByteBuffer;
      49: invokevirtual #33                 // Method java/nio/ByteBuffer.position:()I
      52: aload_1
      53: iload_2
      54: iload         6
      56: invokestatic  #34                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      59: aload_0
      60: getfield      #10                 // Field bytebuff:Ljava/nio/ByteBuffer;
      63: aload_0
      64: getfield      #10                 // Field bytebuff:Ljava/nio/ByteBuffer;
      67: invokevirtual #33                 // Method java/nio/ByteBuffer.position:()I
      70: iload         6
      72: iadd
      73: invokevirtual #12                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      76: pop
      77: iload         6
      79: ireturn
      80: iconst_m1
      81: ireturn
}
