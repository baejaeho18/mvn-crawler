Compiled from "SkipListArena.java"
public class org.apache.bookkeeper.bookie.SkipListArena {
  private java.util.concurrent.atomic.AtomicReference<org.apache.bookkeeper.bookie.SkipListArena$Chunk> curChunk;

  final int chunkSize;

  final int maxAlloc;

  static final boolean $assertionsDisabled;

  public org.apache.bookkeeper.bookie.SkipListArena(org.apache.bookkeeper.conf.ServerConfiguration);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #4                  // Field curChunk:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_0
      16: aload_1
      17: invokevirtual #5                  // Method org/apache/bookkeeper/conf/ServerConfiguration.getSkipListArenaChunkSize:()I
      20: putfield      #6                  // Field chunkSize:I
      23: aload_0
      24: aload_1
      25: invokevirtual #7                  // Method org/apache/bookkeeper/conf/ServerConfiguration.getSkipListArenaMaxAllocSize:()I
      28: putfield      #8                  // Field maxAlloc:I
      31: getstatic     #9                  // Field $assertionsDisabled:Z
      34: ifne          56
      37: aload_0
      38: getfield      #8                  // Field maxAlloc:I
      41: aload_0
      42: getfield      #6                  // Field chunkSize:I
      45: if_icmple     56
      48: new           #10                 // class java/lang/AssertionError
      51: dup
      52: invokespecial #11                 // Method java/lang/AssertionError."<init>":()V
      55: athrow
      56: return

  public org.apache.bookkeeper.bookie.SkipListArena$MemorySlice allocateBytes(int);
    Code:
       0: getstatic     #9                  // Field $assertionsDisabled:Z
       3: ifne          18
       6: iload_1
       7: ifge          18
      10: new           #10                 // class java/lang/AssertionError
      13: dup
      14: invokespecial #11                 // Method java/lang/AssertionError."<init>":()V
      17: athrow
      18: iload_1
      19: aload_0
      20: getfield      #8                  // Field maxAlloc:I
      23: if_icmple     28
      26: aconst_null
      27: areturn
      28: aload_0
      29: invokespecial #12                 // Method getCurrentChunk:()Lorg/apache/bookkeeper/bookie/SkipListArena$Chunk;
      32: astore_2
      33: aload_2
      34: iload_1
      35: invokevirtual #13                 // Method org/apache/bookkeeper/bookie/SkipListArena$Chunk.alloc:(I)I
      38: istore_3
      39: iload_3
      40: iconst_m1
      41: if_icmpeq     58
      44: new           #14                 // class org/apache/bookkeeper/bookie/SkipListArena$MemorySlice
      47: dup
      48: aload_2
      49: invokestatic  #15                 // Method org/apache/bookkeeper/bookie/SkipListArena$Chunk.access$000:(Lorg/apache/bookkeeper/bookie/SkipListArena$Chunk;)[B
      52: iload_3
      53: aconst_null
      54: invokespecial #16                 // Method org/apache/bookkeeper/bookie/SkipListArena$MemorySlice."<init>":([BILorg/apache/bookkeeper/bookie/SkipListArena$1;)V
      57: areturn
      58: aload_0
      59: aload_2
      60: invokespecial #17                 // Method retireCurrentChunk:(Lorg/apache/bookkeeper/bookie/SkipListArena$Chunk;)V
      63: goto          28

  private void retireCurrentChunk(org.apache.bookkeeper.bookie.SkipListArena$Chunk);
    Code:
       0: aload_0
       1: getfield      #4                  // Field curChunk:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_1
       5: aconst_null
       6: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
       9: pop
      10: return

  private org.apache.bookkeeper.bookie.SkipListArena$Chunk getCurrentChunk();
    Code:
       0: aload_0
       1: getfield      #4                  // Field curChunk:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #20                 // class org/apache/bookkeeper/bookie/SkipListArena$Chunk
      10: astore_1
      11: aload_1
      12: ifnull        17
      15: aload_1
      16: areturn
      17: new           #20                 // class org/apache/bookkeeper/bookie/SkipListArena$Chunk
      20: dup
      21: aload_0
      22: getfield      #6                  // Field chunkSize:I
      25: aconst_null
      26: invokespecial #21                 // Method org/apache/bookkeeper/bookie/SkipListArena$Chunk."<init>":(ILorg/apache/bookkeeper/bookie/SkipListArena$1;)V
      29: astore_1
      30: aload_0
      31: getfield      #4                  // Field curChunk:Ljava/util/concurrent/atomic/AtomicReference;
      34: aconst_null
      35: aload_1
      36: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      39: ifeq          48
      42: aload_1
      43: invokevirtual #22                 // Method org/apache/bookkeeper/bookie/SkipListArena$Chunk.init:()V
      46: aload_1
      47: areturn
      48: goto          0

  static {};
    Code:
       0: ldc           #23                 // class org/apache/bookkeeper/bookie/SkipListArena
       2: invokevirtual #24                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #9                  // Field $assertionsDisabled:Z
      16: return
}
