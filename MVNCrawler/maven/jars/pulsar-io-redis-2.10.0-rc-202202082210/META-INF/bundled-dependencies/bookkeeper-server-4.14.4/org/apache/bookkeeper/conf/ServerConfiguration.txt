Compiled from "ServerConfiguration.java"
public class org.apache.bookkeeper.conf.ServerConfiguration extends org.apache.bookkeeper.conf.AbstractConfiguration<org.apache.bookkeeper.conf.ServerConfiguration> {
  private static final org.apache.bookkeeper.common.conf.ConfigKeyGroup GROUP_LEDGER_STORAGE;

  protected static final java.lang.String LEDGER_STORAGE_CLASS;

  protected static final org.apache.bookkeeper.common.conf.ConfigKey LEDGER_STORAGE_CLASS_KEY;

  private static final org.apache.bookkeeper.common.conf.ConfigKeyGroup GROUP_LEDGER_STORAGE_ENTRY_LOGGER;

  protected static final java.lang.String ENTRY_LOG_SIZE_LIMIT;

  protected static final org.apache.bookkeeper.common.conf.ConfigKey ENTRY_LOG_SIZE_LIMIT_KEY;

  protected static final java.lang.String ENTRY_LOG_FILE_PREALLOCATION_ENABLED;

  protected static final java.lang.String FORCE_ALLOW_COMPACTION;

  protected static final java.lang.String MINOR_COMPACTION_INTERVAL;

  protected static final java.lang.String MINOR_COMPACTION_THRESHOLD;

  protected static final java.lang.String MINOR_COMPACTION_MAX_TIME_MILLIS;

  protected static final java.lang.String MAJOR_COMPACTION_INTERVAL;

  protected static final java.lang.String MAJOR_COMPACTION_THRESHOLD;

  protected static final java.lang.String MAJOR_COMPACTION_MAX_TIME_MILLIS;

  protected static final java.lang.String IS_THROTTLE_BY_BYTES;

  protected static final java.lang.String COMPACTION_MAX_OUTSTANDING_REQUESTS;

  protected static final java.lang.String COMPACTION_RATE;

  protected static final java.lang.String COMPACTION_RATE_BY_ENTRIES;

  protected static final java.lang.String COMPACTION_RATE_BY_BYTES;

  protected static final java.lang.String GC_WAIT_TIME;

  protected static final java.lang.String IS_FORCE_GC_ALLOW_WHEN_NO_SPACE;

  protected static final java.lang.String GC_OVERREPLICATED_LEDGER_WAIT_TIME;

  protected static final java.lang.String USE_TRANSACTIONAL_COMPACTION;

  protected static final java.lang.String VERIFY_METADATA_ON_GC;

  protected static final java.lang.String LOCAL_SCRUB_PERIOD;

  protected static final java.lang.String LOCAL_SCRUB_RATE_LIMIT;

  protected static final java.lang.String FLUSH_INTERVAL;

  protected static final java.lang.String FLUSH_ENTRYLOG_INTERVAL_BYTES;

  protected static final java.lang.String DEATH_WATCH_INTERVAL;

  protected static final java.lang.String OPEN_FILE_LIMIT;

  protected static final java.lang.String PAGE_LIMIT;

  protected static final java.lang.String PAGE_SIZE;

  protected static final java.lang.String FILEINFO_CACHE_INITIAL_CAPACITY;

  protected static final java.lang.String FILEINFO_MAX_IDLE_TIME;

  protected static final java.lang.String FILEINFO_FORMAT_VERSION_TO_WRITE;

  protected static final java.lang.String MAX_JOURNAL_SIZE;

  protected static final java.lang.String MAX_BACKUP_JOURNALS;

  protected static final java.lang.String JOURNAL_SYNC_DATA;

  protected static final java.lang.String JOURNAL_WRITE_DATA;

  protected static final java.lang.String JOURNAL_ADAPTIVE_GROUP_WRITES;

  protected static final java.lang.String JOURNAL_MAX_GROUP_WAIT_MSEC;

  protected static final java.lang.String JOURNAL_BUFFERED_WRITES_THRESHOLD;

  protected static final java.lang.String JOURNAL_BUFFERED_ENTRIES_THRESHOLD;

  protected static final java.lang.String JOURNAL_FLUSH_WHEN_QUEUE_EMPTY;

  protected static final java.lang.String JOURNAL_REMOVE_FROM_PAGE_CACHE;

  protected static final java.lang.String JOURNAL_PRE_ALLOC_SIZE;

  protected static final java.lang.String JOURNAL_WRITE_BUFFER_SIZE;

  protected static final java.lang.String JOURNAL_ALIGNMENT_SIZE;

  protected static final java.lang.String NUM_JOURNAL_CALLBACK_THREADS;

  protected static final java.lang.String JOURNAL_FORMAT_VERSION_TO_WRITE;

  protected static final java.lang.String JOURNAL_QUEUE_SIZE;

  protected static final java.lang.String JOURNAL_MAX_MEMORY_SIZE_MB;

  protected static final java.lang.String JOURNAL_PAGECACHE_FLUSH_INTERVAL_MSEC;

  protected static final java.lang.String MAX_ADDS_IN_PROGRESS_LIMIT;

  protected static final java.lang.String MAX_READS_IN_PROGRESS_LIMIT;

  protected static final java.lang.String CLOSE_CHANNEL_ON_RESPONSE_TIMEOUT;

  protected static final java.lang.String WAIT_TIMEOUT_ON_RESPONSE_BACKPRESSURE;

  protected static final java.lang.String BOOKIE_PORT;

  protected static final java.lang.String LISTENING_INTERFACE;

  protected static final java.lang.String ALLOW_LOOPBACK;

  protected static final java.lang.String ADVERTISED_ADDRESS;

  protected static final java.lang.String BOOKIE_ID;

  protected static final java.lang.String ALLOW_EPHEMERAL_PORTS;

  protected static final java.lang.String JOURNAL_DIR;

  protected static final java.lang.String JOURNAL_DIRS;

  protected static final java.lang.String LEDGER_DIRS;

  protected static final java.lang.String INDEX_DIRS;

  protected static final java.lang.String ALLOW_STORAGE_EXPANSION;

  protected static final java.lang.String SERVER_TCP_NODELAY;

  protected static final java.lang.String SERVER_SOCK_KEEPALIVE;

  protected static final java.lang.String SERVER_SOCK_LINGER;

  protected static final java.lang.String SERVER_WRITEBUFFER_LOW_WATER_MARK;

  protected static final java.lang.String SERVER_WRITEBUFFER_HIGH_WATER_MARK;

  protected static final java.lang.String SERVER_NUM_IO_THREADS;

  protected static final java.lang.String ZK_RETRY_BACKOFF_START_MS;

  protected static final java.lang.String ZK_RETRY_BACKOFF_MAX_MS;

  protected static final java.lang.String OPEN_LEDGER_REREPLICATION_GRACE_PERIOD;

  protected static final java.lang.String LOCK_RELEASE_OF_FAILED_LEDGER_GRACE_PERIOD;

  protected static final java.lang.String READ_ONLY_MODE_ENABLED;

  protected static final java.lang.String FORCE_READ_ONLY_BOOKIE;

  protected static final java.lang.String PERSIST_BOOKIE_STATUS_ENABLED;

  protected static final java.lang.String DISK_USAGE_THRESHOLD;

  protected static final java.lang.String DISK_USAGE_WARN_THRESHOLD;

  protected static final java.lang.String DISK_USAGE_LWM_THRESHOLD;

  protected static final java.lang.String DISK_CHECK_INTERVAL;

  protected static final java.lang.String AUDITOR_PERIODIC_CHECK_INTERVAL;

  protected static final java.lang.String AUDITOR_PERIODIC_BOOKIE_CHECK_INTERVAL;

  protected static final java.lang.String AUDITOR_PERIODIC_PLACEMENT_POLICY_CHECK_INTERVAL;

  protected static final java.lang.String AUDITOR_LEDGER_VERIFICATION_PERCENTAGE;

  protected static final java.lang.String AUTO_RECOVERY_DAEMON_ENABLED;

  protected static final java.lang.String LOST_BOOKIE_RECOVERY_DELAY;

  protected static final java.lang.String RW_REREPLICATE_BACKOFF_MS;

  protected static final java.lang.String UNDERREPLICATED_LEDGER_RECOVERY_GRACE_PERIOD;

  protected static final java.lang.String AUDITOR_REPLICAS_CHECK_INTERVAL;

  protected static final java.lang.String AUDITOR_MAX_NUMBER_OF_CONCURRENT_OPEN_LEDGER_OPERATIONS;

  protected static final java.lang.String AUDITOR_ACQUIRE_CONCURRENT_OPEN_LEDGER_OPERATIONS_TIMEOUT_MSEC;

  protected static final java.lang.String NUM_ADD_WORKER_THREADS;

  protected static final java.lang.String NUM_READ_WORKER_THREADS;

  protected static final java.lang.String MAX_PENDING_READ_REQUESTS_PER_THREAD;

  protected static final java.lang.String MAX_PENDING_ADD_REQUESTS_PER_THREAD;

  protected static final java.lang.String NUM_LONG_POLL_WORKER_THREADS;

  protected static final java.lang.String NUM_HIGH_PRIORITY_WORKER_THREADS;

  protected static final java.lang.String READ_WORKER_THREADS_THROTTLING_ENABLED;

  protected static final java.lang.String REQUEST_TIMER_TICK_DURATION_MILLISEC;

  protected static final java.lang.String REQUEST_TIMER_NO_OF_TICKS;

  protected static final java.lang.String READ_BUFFER_SIZE;

  protected static final java.lang.String WRITE_BUFFER_SIZE;

  protected static final java.lang.String USE_HOST_NAME_AS_BOOKIE_ID;

  protected static final java.lang.String USE_SHORT_HOST_NAME;

  protected static final java.lang.String ENABLE_LOCAL_TRANSPORT;

  protected static final java.lang.String DISABLE_SERVER_SOCKET_BIND;

  protected static final java.lang.String SORTED_LEDGER_STORAGE_ENABLED;

  protected static final java.lang.String SKIP_LIST_SIZE_LIMIT;

  protected static final java.lang.String SKIP_LIST_CHUNK_SIZE_ENTRY;

  protected static final java.lang.String SKIP_LIST_MAX_ALLOC_ENTRY;

  protected static final java.lang.String ENABLE_STATISTICS;

  protected static final java.lang.String STATS_PROVIDER_CLASS;

  protected static final java.lang.String BYTEBUF_ALLOCATOR_SIZE_INITIAL;

  protected static final java.lang.String BYTEBUF_ALLOCATOR_SIZE_MIN;

  protected static final java.lang.String BYTEBUF_ALLOCATOR_SIZE_MAX;

  protected static final java.lang.String BOOKIE_AUTH_PROVIDER_FACTORY_CLASS;

  protected static final java.lang.String MIN_USABLESIZE_FOR_INDEXFILE_CREATION;

  protected static final java.lang.String MIN_USABLESIZE_FOR_ENTRYLOG_CREATION;

  protected static final java.lang.String MIN_USABLESIZE_FOR_HIGH_PRIORITY_WRITES;

  protected static final java.lang.String ALLOW_MULTIPLEDIRS_UNDER_SAME_DISKPARTITION;

  protected static final java.lang.String HTTP_SERVER_ENABLED;

  protected static final java.lang.String HTTP_SERVER_PORT;

  protected static final java.lang.String EXTRA_SERVER_COMPONENTS;

  protected static final java.lang.String IGNORE_EXTRA_SERVER_COMPONENTS_STARTUP_FAILURES;

  protected static final java.lang.String REGISTRATION_MANAGER_CLASS;

  protected static final java.lang.String ENABLE_TASK_EXECUTION_STATS;

  protected static final java.lang.String ENTRY_LOG_PER_LEDGER_ENABLED;

  protected static final java.lang.String NUMBER_OF_MEMTABLE_FLUSH_THREADS;

  protected static final java.lang.String ENTRYLOGMAP_ACCESS_EXPIRYTIME_INSECONDS;

  protected static final java.lang.String MAXIMUM_NUMBER_OF_ACTIVE_ENTRYLOGS;

  protected static final java.lang.String ENTRY_LOG_PER_LEDGER_COUNTER_LIMITS_MULT_FACTOR;

  protected static final java.lang.String LOCAL_CONSISTENCY_CHECK_ON_STARTUP;

  protected static final java.lang.String AUTHORIZED_ROLES;

  public org.apache.bookkeeper.conf.ServerConfiguration();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/bookkeeper/conf/AbstractConfiguration."<init>":()V
       4: return

  public org.apache.bookkeeper.conf.ServerConfiguration(org.apache.bookkeeper.conf.AbstractConfiguration);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/bookkeeper/conf/AbstractConfiguration."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #3                  // Method loadConf:(Lorg/apache/commons/configuration/CompositeConfiguration;)V
       9: return

  public long getEntryLogSizeLimit();
    Code:
       0: getstatic     #4                  // Field ENTRY_LOG_SIZE_LIMIT_KEY:Lorg/apache/bookkeeper/common/conf/ConfigKey;
       3: aload_0
       4: invokevirtual #5                  // Method org/apache/bookkeeper/common/conf/ConfigKey.getLong:(Lorg/apache/commons/configuration/Configuration;)J
       7: lreturn

  public org.apache.bookkeeper.conf.ServerConfiguration setEntryLogSizeLimit(long);
    Code:
       0: getstatic     #4                  // Field ENTRY_LOG_SIZE_LIMIT_KEY:Lorg/apache/bookkeeper/common/conf/ConfigKey;
       3: aload_0
       4: lload_1
       5: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       8: invokevirtual #7                  // Method org/apache/bookkeeper/common/conf/ConfigKey.set:(Lorg/apache/commons/configuration/Configuration;Ljava/lang/Object;)V
      11: aload_0
      12: areturn

  public boolean isEntryLogFilePreAllocationEnabled();
    Code:
       0: aload_0
       1: ldc           #9                  // String entryLogFilePreallocationEnabled
       3: iconst_1
       4: invokevirtual #10                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setEntryLogFilePreAllocationEnabled(boolean);
    Code:
       0: aload_0
       1: ldc           #9                  // String entryLogFilePreallocationEnabled
       3: iload_1
       4: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public long getGcWaitTime();
    Code:
       0: aload_0
       1: ldc           #13                 // String gcWaitTime
       3: ldc2_w        #14                 // long 600000l
       6: invokevirtual #16                 // Method getLong:(Ljava/lang/String;J)J
       9: lreturn

  public org.apache.bookkeeper.conf.ServerConfiguration setGcWaitTime(long);
    Code:
       0: aload_0
       1: ldc           #13                 // String gcWaitTime
       3: lload_1
       4: invokestatic  #17                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public long getGcOverreplicatedLedgerWaitTimeMillis();
    Code:
       0: aload_0
       1: ldc           #18                 // String gcOverreplicatedLedgerWaitTime
       3: getstatic     #19                 // Field java/util/concurrent/TimeUnit.DAYS:Ljava/util/concurrent/TimeUnit;
       6: lconst_1
       7: invokevirtual #20                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      10: invokevirtual #16                 // Method getLong:(Ljava/lang/String;J)J
      13: lreturn

  public org.apache.bookkeeper.conf.ServerConfiguration setGcOverreplicatedLedgerWaitTime(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: ldc           #18                 // String gcOverreplicatedLedgerWaitTime
       3: aload_3
       4: lload_1
       5: invokevirtual #20                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
       8: invokestatic  #17                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
      11: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      14: aload_0
      15: areturn

  public boolean getUseTransactionalCompaction();
    Code:
       0: aload_0
       1: ldc           #21                 // String useTransactionalCompaction
       3: iconst_0
       4: invokevirtual #10                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setUseTransactionalCompaction(boolean);
    Code:
       0: aload_0
       1: ldc           #21                 // String useTransactionalCompaction
       3: iload_1
       4: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public boolean getVerifyMetadataOnGC();
    Code:
       0: aload_0
       1: ldc           #22                 // String verifyMetadataOnGC
       3: iconst_0
       4: invokevirtual #10                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setVerifyMetadataOnGc(boolean);
    Code:
       0: aload_0
       1: ldc           #22                 // String verifyMetadataOnGC
       3: iload_1
       4: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public boolean isLocalScrubEnabled();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method getLocalScrubPeriod:()J
       4: lconst_0
       5: lcmp
       6: ifle          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public long getLocalScrubPeriod();
    Code:
       0: aload_0
       1: ldc           #24                 // String localScrubInterval
       3: lconst_0
       4: invokevirtual #16                 // Method getLong:(Ljava/lang/String;J)J
       7: lreturn

  public void setLocalScrubPeriod(long);
    Code:
       0: aload_0
       1: ldc           #24                 // String localScrubInterval
       3: lload_1
       4: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public double getLocalScrubRateLimit();
    Code:
       0: aload_0
       1: ldc           #25                 // String localScrubRateLimit
       3: ldc2_w        #26                 // double 60.0d
       6: invokevirtual #28                 // Method getDouble:(Ljava/lang/String;D)D
       9: dreturn

  public void setLocalScrubRateLimit(double);
    Code:
       0: aload_0
       1: ldc           #25                 // String localScrubRateLimit
       3: dload_1
       4: invokestatic  #29                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public int getFlushInterval();
    Code:
       0: aload_0
       1: ldc           #30                 // String flushInterval
       3: sipush        10000
       6: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       9: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setFlushInterval(int);
    Code:
       0: aload_0
       1: ldc           #30                 // String flushInterval
       3: iload_1
       4: invokestatic  #32                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public long getFlushIntervalInBytes();
    Code:
       0: aload_0
       1: ldc           #33                 // String flushEntrylogBytes
       3: lconst_0
       4: invokevirtual #16                 // Method getLong:(Ljava/lang/String;J)J
       7: lreturn

  public org.apache.bookkeeper.conf.ServerConfiguration setFlushIntervalInBytes(long);
    Code:
       0: aload_0
       1: ldc           #33                 // String flushEntrylogBytes
       3: lload_1
       4: invokestatic  #17                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public int getDeathWatchInterval();
    Code:
       0: aload_0
       1: ldc           #34                 // String bookieDeathWatchInterval
       3: sipush        1000
       6: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       9: ireturn

  public int getOpenFileLimit();
    Code:
       0: aload_0
       1: ldc           #35                 // String openFileLimit
       3: sipush        20000
       6: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       9: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setOpenFileLimit(int);
    Code:
       0: aload_0
       1: ldc           #35                 // String openFileLimit
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public int getPageLimit();
    Code:
       0: aload_0
       1: ldc           #37                 // String pageLimit
       3: iconst_m1
       4: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       7: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setPageLimit(int);
    Code:
       0: aload_0
       1: ldc           #37                 // String pageLimit
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public int getPageSize();
    Code:
       0: aload_0
       1: ldc           #38                 // String pageSize
       3: sipush        8192
       6: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       9: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setPageSize(int);
    Code:
       0: aload_0
       1: ldc           #38                 // String pageSize
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public int getFileInfoCacheInitialCapacity();
    Code:
       0: aload_0
       1: ldc           #39                 // String fileInfoCacheInitialCapacity
       3: aload_0
       4: invokevirtual #40                 // Method getOpenFileLimit:()I
       7: iconst_4
       8: idiv
       9: bipush        64
      11: invokestatic  #41                 // Method java/lang/Math.max:(II)I
      14: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
      17: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setFileInfoCacheInitialCapacity(int);
    Code:
       0: aload_0
       1: ldc           #39                 // String fileInfoCacheInitialCapacity
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public long getFileInfoMaxIdleTime();
    Code:
       0: aload_0
       1: ldc           #42                 // String fileInfoMaxIdleTime
       3: lconst_0
       4: invokevirtual #16                 // Method getLong:(Ljava/lang/String;J)J
       7: lreturn

  public org.apache.bookkeeper.conf.ServerConfiguration setFileInfoMaxIdleTime(long);
    Code:
       0: aload_0
       1: ldc           #42                 // String fileInfoMaxIdleTime
       3: lload_1
       4: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public int getFileInfoFormatVersionToWrite();
    Code:
       0: aload_0
       1: ldc           #43                 // String fileInfoFormatVersionToWrite
       3: iconst_1
       4: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       7: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setFileInfoFormatVersionToWrite(int);
    Code:
       0: aload_0
       1: ldc           #43                 // String fileInfoFormatVersionToWrite
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public long getMaxJournalSizeMB();
    Code:
       0: aload_0
       1: ldc           #44                 // String journalMaxSizeMB
       3: ldc2_w        #45                 // long 2048l
       6: invokevirtual #16                 // Method getLong:(Ljava/lang/String;J)J
       9: lreturn

  public org.apache.bookkeeper.conf.ServerConfiguration setMaxJournalSizeMB(long);
    Code:
       0: aload_0
       1: ldc           #44                 // String journalMaxSizeMB
       3: lload_1
       4: invokestatic  #17                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public int getJournalPreAllocSizeMB();
    Code:
       0: aload_0
       1: ldc           #47                 // String journalPreAllocSizeMB
       3: bipush        16
       5: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       8: ireturn

  public int getJournalWriteBufferSizeKB();
    Code:
       0: aload_0
       1: ldc           #48                 // String journalWriteBufferSizeKB
       3: bipush        64
       5: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       8: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setJournalWriteBufferSizeKB(int);
    Code:
       0: aload_0
       1: ldc           #48                 // String journalWriteBufferSizeKB
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public int getMaxBackupJournals();
    Code:
       0: aload_0
       1: ldc           #49                 // String journalMaxBackups
       3: iconst_5
       4: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       7: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setMaxBackupJournals(int);
    Code:
       0: aload_0
       1: ldc           #49                 // String journalMaxBackups
       3: iload_1
       4: invokestatic  #32                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public int getJournalAlignmentSize();
    Code:
       0: aload_0
       1: ldc           #50                 // String journalAlignmentSize
       3: sipush        512
       6: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       9: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setJournalAlignmentSize(int);
    Code:
       0: aload_0
       1: ldc           #50                 // String journalAlignmentSize
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public int getJournalFormatVersionToWrite();
    Code:
       0: aload_0
       1: ldc           #51                 // String journalFormatVersionToWrite
       3: bipush        6
       5: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       8: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setJournalFormatVersionToWrite(int);
    Code:
       0: aload_0
       1: ldc           #51                 // String journalFormatVersionToWrite
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public org.apache.bookkeeper.conf.ServerConfiguration setJournalQueueSize(int);
    Code:
       0: aload_0
       1: ldc           #52                 // String journalQueueSize
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public int getJournalQueueSize();
    Code:
       0: aload_0
       1: ldc           #52                 // String journalQueueSize
       3: sipush        10000
       6: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       9: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setJournalMaxMemorySizeMb(long);
    Code:
       0: aload_0
       1: ldc           #53                 // String journalMaxMemorySizeMb
       3: lload_1
       4: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public long getJournalMaxMemorySizeMb();
    Code:
       0: invokestatic  #54                 // Method io/netty/util/internal/PlatformDependent.maxDirectMemory:()J
       3: l2d
       4: ldc2_w        #55                 // double 0.05d
       7: dmul
       8: ldc2_w        #57                 // double 1024.0d
      11: ddiv
      12: ldc2_w        #57                 // double 1024.0d
      15: ddiv
      16: d2l
      17: lstore_1
      18: aload_0
      19: ldc           #53                 // String journalMaxMemorySizeMb
      21: lload_1
      22: invokevirtual #16                 // Method getLong:(Ljava/lang/String;J)J
      25: lreturn

  public org.apache.bookkeeper.conf.ServerConfiguration setJournalPageCacheFlushIntervalMSec(long);
    Code:
       0: aload_0
       1: ldc           #59                 // String journalPageCacheFlushIntervalMSec
       3: lload_1
       4: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public long getJournalPageCacheFlushIntervalMSec();
    Code:
       0: aload_0
       1: ldc           #59                 // String journalPageCacheFlushIntervalMSec
       3: ldc2_w        #60                 // long 1000l
       6: invokevirtual #16                 // Method getLong:(Ljava/lang/String;J)J
       9: lreturn

  public int getMaxAddsInProgressLimit();
    Code:
       0: aload_0
       1: ldc           #62                 // String maxAddsInProgressLimit
       3: iconst_0
       4: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       7: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setMaxAddsInProgressLimit(int);
    Code:
       0: aload_0
       1: ldc           #62                 // String maxAddsInProgressLimit
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public int getMaxReadsInProgressLimit();
    Code:
       0: aload_0
       1: ldc           #63                 // String maxReadsInProgressLimit
       3: iconst_0
       4: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       7: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setMaxReadsInProgressLimit(int);
    Code:
       0: aload_0
       1: ldc           #63                 // String maxReadsInProgressLimit
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public boolean getCloseChannelOnResponseTimeout();
    Code:
       0: aload_0
       1: ldc           #64                 // String closeChannelOnResponseTimeout
       3: iconst_0
       4: invokevirtual #10                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setCloseChannelOnResponseTimeout(boolean);
    Code:
       0: aload_0
       1: ldc           #64                 // String closeChannelOnResponseTimeout
       3: iload_1
       4: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public long getWaitTimeoutOnResponseBackpressureMillis();
    Code:
       0: aload_0
       1: ldc           #65                 // String waitTimeoutOnResponseBackpressureMs
       3: ldc2_w        #66                 // long -1l
       6: invokevirtual #16                 // Method getLong:(Ljava/lang/String;J)J
       9: lreturn

  public org.apache.bookkeeper.conf.ServerConfiguration setWaitTimeoutOnResponseBackpressureMillis(long);
    Code:
       0: aload_0
       1: ldc           #65                 // String waitTimeoutOnResponseBackpressureMs
       3: lload_1
       4: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public int getBookiePort();
    Code:
       0: aload_0
       1: ldc           #68                 // String bookiePort
       3: sipush        3181
       6: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       9: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setBookiePort(int);
    Code:
       0: aload_0
       1: ldc           #68                 // String bookiePort
       3: iload_1
       4: invokestatic  #32                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public java.lang.String getListeningInterface();
    Code:
       0: aload_0
       1: ldc           #69                 // String listeningInterface
       3: invokevirtual #70                 // Method getString:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public org.apache.bookkeeper.conf.ServerConfiguration setListeningInterface(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #69                 // String listeningInterface
       3: aload_1
       4: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       7: aload_0
       8: areturn

  public boolean getAllowLoopback();
    Code:
       0: aload_0
       1: ldc           #71                 // String allowLoopback
       3: iconst_0
       4: invokevirtual #10                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setAllowLoopback(boolean);
    Code:
       0: aload_0
       1: ldc           #71                 // String allowLoopback
       3: iload_1
       4: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public java.lang.String getBookieId();
    Code:
       0: aload_0
       1: ldc           #72                 // String bookieId
       3: aconst_null
       4: invokevirtual #73                 // Method getString:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public org.apache.bookkeeper.conf.ServerConfiguration setBookieId(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #74                 // Method org/apache/bookkeeper/net/BookieId.parse:(Ljava/lang/String;)Lorg/apache/bookkeeper/net/BookieId;
       4: pop
       5: aload_0
       6: ldc           #72                 // String bookieId
       8: aload_1
       9: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      12: aload_0
      13: areturn

  public java.lang.String getAdvertisedAddress();
    Code:
       0: aload_0
       1: ldc           #75                 // String advertisedAddress
       3: aconst_null
       4: invokevirtual #73                 // Method getString:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public org.apache.bookkeeper.conf.ServerConfiguration setAdvertisedAddress(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #75                 // String advertisedAddress
       3: aload_1
       4: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       7: aload_0
       8: areturn

  public boolean getAllowEphemeralPorts();
    Code:
       0: aload_0
       1: ldc           #76                 // String allowEphemeralPorts
       3: iconst_0
       4: invokevirtual #10                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setAllowEphemeralPorts(boolean);
    Code:
       0: aload_0
       1: ldc           #76                 // String allowEphemeralPorts
       3: iload_1
       4: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public boolean getAllowStorageExpansion();
    Code:
       0: aload_0
       1: ldc           #77                 // String allowStorageExpansion
       3: iconst_0
       4: invokevirtual #10                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setAllowStorageExpansion(boolean);
    Code:
       0: aload_0
       1: ldc           #77                 // String allowStorageExpansion
       3: iload_1
       4: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public java.lang.String[] getJournalDirNames();
    Code:
       0: aload_0
       1: ldc           #78                 // String journalDirectories
       3: invokevirtual #79                 // Method getStringArray:(Ljava/lang/String;)[Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnull        31
      11: aload_1
      12: arraylength
      13: ifeq          31
      16: aload_1
      17: arraylength
      18: iconst_1
      19: if_icmpne     43
      22: aload_1
      23: iconst_0
      24: aaload
      25: invokestatic  #80                 // Method org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z
      28: ifeq          43
      31: iconst_1
      32: anewarray     #81                 // class java/lang/String
      35: dup
      36: iconst_0
      37: aload_0
      38: invokevirtual #82                 // Method getJournalDirName:()Ljava/lang/String;
      41: aastore
      42: areturn
      43: aload_1
      44: areturn

  public java.lang.String getJournalDirName();
    Code:
       0: aload_0
       1: ldc           #83                 // String journalDirectory
       3: ldc           #84                 // String /tmp/bk-txn
       5: invokevirtual #73                 // Method getString:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public java.lang.String getJournalDirNameWithoutDefault();
    Code:
       0: aload_0
       1: ldc           #83                 // String journalDirectory
       3: invokevirtual #70                 // Method getString:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public org.apache.bookkeeper.conf.ServerConfiguration setJournalDirName(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #78                 // String journalDirectories
       3: iconst_1
       4: anewarray     #81                 // class java/lang/String
       7: dup
       8: iconst_0
       9: aload_1
      10: aastore
      11: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      14: aload_0
      15: areturn

  public org.apache.bookkeeper.conf.ServerConfiguration setJournalDirsName(java.lang.String[]);
    Code:
       0: aload_0
       1: ldc           #78                 // String journalDirectories
       3: aload_1
       4: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       7: aload_0
       8: areturn

  public java.io.File[] getJournalDirs();
    Code:
       0: aload_0
       1: invokevirtual #85                 // Method getJournalDirNames:()[Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: arraylength
       7: anewarray     #86                 // class java/io/File
      10: astore_2
      11: iconst_0
      12: istore_3
      13: iload_3
      14: aload_1
      15: arraylength
      16: if_icmpge     38
      19: aload_2
      20: iload_3
      21: new           #86                 // class java/io/File
      24: dup
      25: aload_1
      26: iload_3
      27: aaload
      28: invokespecial #87                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      31: aastore
      32: iinc          3, 1
      35: goto          13
      38: aload_2
      39: areturn

  public java.lang.String[] getLedgerDirWithoutDefault();
    Code:
       0: aload_0
       1: ldc           #88                 // String ledgerDirectories
       3: invokevirtual #79                 // Method getStringArray:(Ljava/lang/String;)[Ljava/lang/String;
       6: areturn

  public java.lang.String[] getLedgerDirNames();
    Code:
       0: aload_0
       1: ldc           #88                 // String ledgerDirectories
       3: invokevirtual #79                 // Method getStringArray:(Ljava/lang/String;)[Ljava/lang/String;
       6: astore_1
       7: aconst_null
       8: aload_1
       9: if_acmpeq     18
      12: iconst_0
      13: aload_1
      14: arraylength
      15: if_icmpne     28
      18: iconst_1
      19: anewarray     #81                 // class java/lang/String
      22: dup
      23: iconst_0
      24: ldc           #89                 // String /tmp/bk-data
      26: aastore
      27: areturn
      28: aload_1
      29: areturn

  public org.apache.bookkeeper.conf.ServerConfiguration setLedgerDirNames(java.lang.String[]);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     7
       5: aload_0
       6: areturn
       7: aload_0
       8: ldc           #88                 // String ledgerDirectories
      10: aload_1
      11: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      14: aload_0
      15: areturn

  public java.io.File[] getLedgerDirs();
    Code:
       0: aload_0
       1: invokevirtual #90                 // Method getLedgerDirNames:()[Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: arraylength
       7: anewarray     #86                 // class java/io/File
      10: astore_2
      11: iconst_0
      12: istore_3
      13: iload_3
      14: aload_1
      15: arraylength
      16: if_icmpge     38
      19: aload_2
      20: iload_3
      21: new           #86                 // class java/io/File
      24: dup
      25: aload_1
      26: iload_3
      27: aaload
      28: invokespecial #87                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      31: aastore
      32: iinc          3, 1
      35: goto          13
      38: aload_2
      39: areturn

  public java.lang.String[] getIndexDirNames();
    Code:
       0: aload_0
       1: ldc           #91                 // String indexDirectories
       3: invokevirtual #92                 // Method containsKey:(Ljava/lang/String;)Z
       6: ifne          11
       9: aconst_null
      10: areturn
      11: aload_0
      12: ldc           #91                 // String indexDirectories
      14: invokevirtual #79                 // Method getStringArray:(Ljava/lang/String;)[Ljava/lang/String;
      17: areturn

  public org.apache.bookkeeper.conf.ServerConfiguration setIndexDirName(java.lang.String[]);
    Code:
       0: aload_0
       1: ldc           #91                 // String indexDirectories
       3: aload_1
       4: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       7: aload_0
       8: areturn

  public java.io.File[] getIndexDirs();
    Code:
       0: aload_0
       1: invokevirtual #93                 // Method getIndexDirNames:()[Ljava/lang/String;
       4: astore_1
       5: aconst_null
       6: aload_1
       7: if_acmpne     12
      10: aconst_null
      11: areturn
      12: aload_1
      13: arraylength
      14: anewarray     #86                 // class java/io/File
      17: astore_2
      18: iconst_0
      19: istore_3
      20: iload_3
      21: aload_1
      22: arraylength
      23: if_icmpge     45
      26: aload_2
      27: iload_3
      28: new           #86                 // class java/io/File
      31: dup
      32: aload_1
      33: iload_3
      34: aaload
      35: invokespecial #87                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      38: aastore
      39: iinc          3, 1
      42: goto          20
      45: aload_2
      46: areturn

  public boolean getServerTcpNoDelay();
    Code:
       0: aload_0
       1: ldc           #94                 // String serverTcpNoDelay
       3: iconst_1
       4: invokevirtual #10                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setServerTcpNoDelay(boolean);
    Code:
       0: aload_0
       1: ldc           #94                 // String serverTcpNoDelay
       3: iload_1
       4: invokestatic  #95                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public int getServerNumIOThreads();
    Code:
       0: aload_0
       1: ldc           #96                 // String serverNumIOThreads
       3: iconst_2
       4: invokestatic  #97                 // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
       7: invokevirtual #98                 // Method java/lang/Runtime.availableProcessors:()I
      10: imul
      11: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
      14: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setServerNumIOThreads(int);
    Code:
       0: aload_0
       1: ldc           #96                 // String serverNumIOThreads
       3: iload_1
       4: invokestatic  #32                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public int getServerSockLinger();
    Code:
       0: aload_0
       1: ldc           #99                 // String serverTcpLinger
       3: iconst_0
       4: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       7: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setServerSockLinger(int);
    Code:
       0: aload_0
       1: ldc           #99                 // String serverTcpLinger
       3: iload_1
       4: invokestatic  #32                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public boolean getServerSockKeepalive();
    Code:
       0: aload_0
       1: ldc           #100                // String serverSockKeepalive
       3: iconst_1
       4: invokevirtual #10                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setServerSockKeepalive(boolean);
    Code:
       0: aload_0
       1: ldc           #100                // String serverSockKeepalive
       3: iload_1
       4: invokestatic  #95                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public int getZkRetryBackoffStartMs();
    Code:
       0: aload_0
       1: ldc           #101                // String zkRetryBackoffStartMs
       3: aload_0
       4: invokevirtual #102                // Method getZkTimeout:()I
       7: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
      10: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setZkRetryBackoffStartMs(int);
    Code:
       0: aload_0
       1: ldc           #101                // String zkRetryBackoffStartMs
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public int getZkRetryBackoffMaxMs();
    Code:
       0: aload_0
       1: ldc           #103                // String zkRetryBackoffMaxMs
       3: aload_0
       4: invokevirtual #102                // Method getZkTimeout:()I
       7: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
      10: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setZkRetryBackoffMaxMs(int);
    Code:
       0: aload_0
       1: ldc           #103                // String zkRetryBackoffMaxMs
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public boolean isStatisticsEnabled();
    Code:
       0: aload_0
       1: ldc           #104                // String enableStatistics
       3: iconst_1
       4: invokevirtual #10                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setStatisticsEnabled(boolean);
    Code:
       0: aload_0
       1: ldc           #104                // String enableStatistics
       3: iload_1
       4: invokestatic  #95                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public org.apache.bookkeeper.conf.ServerConfiguration setForceAllowCompaction(boolean);
    Code:
       0: aload_0
       1: ldc           #105                // String forceAllowCompaction
       3: iload_1
       4: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public boolean isForceAllowCompaction();
    Code:
       0: aload_0
       1: ldc           #105                // String forceAllowCompaction
       3: iconst_0
       4: invokevirtual #10                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public double getMinorCompactionThreshold();
    Code:
       0: aload_0
       1: ldc           #106                // String minorCompactionThreshold
       3: ldc2_w        #107                // double 0.20000000298023224d
       6: invokevirtual #28                 // Method getDouble:(Ljava/lang/String;D)D
       9: dreturn

  public org.apache.bookkeeper.conf.ServerConfiguration setMinorCompactionThreshold(double);
    Code:
       0: aload_0
       1: ldc           #106                // String minorCompactionThreshold
       3: dload_1
       4: invokestatic  #29                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public double getMajorCompactionThreshold();
    Code:
       0: aload_0
       1: ldc           #109                // String majorCompactionThreshold
       3: ldc2_w        #110                // double 0.800000011920929d
       6: invokevirtual #28                 // Method getDouble:(Ljava/lang/String;D)D
       9: dreturn

  public org.apache.bookkeeper.conf.ServerConfiguration setMajorCompactionThreshold(double);
    Code:
       0: aload_0
       1: ldc           #109                // String majorCompactionThreshold
       3: dload_1
       4: invokestatic  #29                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public long getMajorCompactionMaxTimeMillis();
    Code:
       0: aload_0
       1: ldc           #112                // String majorCompactionMaxTimeMillis
       3: ldc2_w        #66                 // long -1l
       6: invokevirtual #16                 // Method getLong:(Ljava/lang/String;J)J
       9: lreturn

  public org.apache.bookkeeper.conf.ServerConfiguration setMajorCompactionMaxTimeMillis(long);
    Code:
       0: aload_0
       1: ldc           #112                // String majorCompactionMaxTimeMillis
       3: lload_1
       4: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public long getMinorCompactionInterval();
    Code:
       0: aload_0
       1: ldc           #113                // String minorCompactionInterval
       3: ldc2_w        #114                // long 3600l
       6: invokevirtual #16                 // Method getLong:(Ljava/lang/String;J)J
       9: lreturn

  public org.apache.bookkeeper.conf.ServerConfiguration setMinorCompactionInterval(long);
    Code:
       0: aload_0
       1: ldc           #113                // String minorCompactionInterval
       3: lload_1
       4: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public long getMajorCompactionInterval();
    Code:
       0: aload_0
       1: ldc           #116                // String majorCompactionInterval
       3: ldc2_w        #117                // long 86400l
       6: invokevirtual #16                 // Method getLong:(Ljava/lang/String;J)J
       9: lreturn

  public org.apache.bookkeeper.conf.ServerConfiguration setMajorCompactionInterval(long);
    Code:
       0: aload_0
       1: ldc           #116                // String majorCompactionInterval
       3: lload_1
       4: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public long getMinorCompactionMaxTimeMillis();
    Code:
       0: aload_0
       1: ldc           #119                // String minorCompactionMaxTimeMillis
       3: ldc2_w        #66                 // long -1l
       6: invokevirtual #16                 // Method getLong:(Ljava/lang/String;J)J
       9: lreturn

  public org.apache.bookkeeper.conf.ServerConfiguration setMinorCompactionMaxTimeMillis(long);
    Code:
       0: aload_0
       1: ldc           #119                // String minorCompactionMaxTimeMillis
       3: lload_1
       4: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public boolean getIsForceGCAllowWhenNoSpace();
    Code:
       0: aload_0
       1: ldc           #120                // String isForceGCAllowWhenNoSpace
       3: iconst_0
       4: invokevirtual #10                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setIsForceGCAllowWhenNoSpace(boolean);
    Code:
       0: aload_0
       1: ldc           #120                // String isForceGCAllowWhenNoSpace
       3: iload_1
       4: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public void setOpenLedgerRereplicationGracePeriod(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #121                // String openLedgerRereplicationGracePeriod
       3: aload_1
       4: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       7: return

  public long getOpenLedgerRereplicationGracePeriod();
    Code:
       0: aload_0
       1: ldc           #121                // String openLedgerRereplicationGracePeriod
       3: ldc2_w        #122                // long 30000l
       6: invokevirtual #16                 // Method getLong:(Ljava/lang/String;J)J
       9: lreturn

  public void setLockReleaseOfFailedLedgerGracePeriod(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #124                // String lockReleaseOfFailedLedgerGracePeriod
       3: aload_1
       4: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       7: return

  public long getLockReleaseOfFailedLedgerGracePeriod();
    Code:
       0: aload_0
       1: ldc           #124                // String lockReleaseOfFailedLedgerGracePeriod
       3: ldc2_w        #125                // long 300000l
       6: invokevirtual #16                 // Method getLong:(Ljava/lang/String;J)J
       9: lreturn

  public int getReadBufferBytes();
    Code:
       0: aload_0
       1: ldc           #127                // String readBufferSizeBytes
       3: sipush        512
       6: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       9: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setReadBufferBytes(int);
    Code:
       0: aload_0
       1: ldc           #127                // String readBufferSizeBytes
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public org.apache.bookkeeper.conf.ServerConfiguration setNumAddWorkerThreads(int);
    Code:
       0: aload_0
       1: ldc           #128                // String numAddWorkerThreads
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public int getNumAddWorkerThreads();
    Code:
       0: aload_0
       1: ldc           #128                // String numAddWorkerThreads
       3: iconst_1
       4: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       7: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setNumLongPollWorkerThreads(int);
    Code:
       0: aload_0
       1: ldc           #129                // String numLongPollWorkerThreads
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public int getNumLongPollWorkerThreads();
    Code:
       0: aload_0
       1: ldc           #129                // String numLongPollWorkerThreads
       3: iconst_0
       4: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       7: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setNumHighPriorityWorkerThreads(int);
    Code:
       0: aload_0
       1: ldc           #130                // String numHighPriorityWorkerThreads
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public int getNumHighPriorityWorkerThreads();
    Code:
       0: aload_0
       1: ldc           #130                // String numHighPriorityWorkerThreads
       3: bipush        8
       5: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       8: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setReadWorkerThreadsThrottlingEnabled(boolean);
    Code:
       0: aload_0
       1: ldc           #131                // String readWorkerThreadsThrottlingEnabled
       3: iload_1
       4: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public boolean isReadWorkerThreadsThrottlingEnabled();
    Code:
       0: aload_0
       1: ldc           #131                // String readWorkerThreadsThrottlingEnabled
       3: iconst_1
       4: invokevirtual #10                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setNumReadWorkerThreads(int);
    Code:
       0: aload_0
       1: ldc           #132                // String numReadWorkerThreads
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public int getNumReadWorkerThreads();
    Code:
       0: aload_0
       1: ldc           #132                // String numReadWorkerThreads
       3: bipush        8
       5: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       8: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setRequestTimerTickDurationMs(int);
    Code:
       0: aload_0
       1: ldc           #133                // String requestTimerTickDurationMs
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public org.apache.bookkeeper.conf.ServerConfiguration setMaxPendingReadRequestPerThread(int);
    Code:
       0: aload_0
       1: ldc           #134                // String maxPendingReadRequestsPerThread
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public int getMaxPendingReadRequestPerThread();
    Code:
       0: aload_0
       1: ldc           #134                // String maxPendingReadRequestsPerThread
       3: sipush        10000
       6: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       9: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setMaxPendingAddRequestPerThread(int);
    Code:
       0: aload_0
       1: ldc           #135                // String maxPendingAddRequestsPerThread
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public int getMaxPendingAddRequestPerThread();
    Code:
       0: aload_0
       1: ldc           #135                // String maxPendingAddRequestsPerThread
       3: sipush        10000
       6: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       9: ireturn

  public int getRequestTimerTickDurationMs();
    Code:
       0: aload_0
       1: ldc           #133                // String requestTimerTickDurationMs
       3: bipush        10
       5: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       8: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setRequestTimerNumTicks(int);
    Code:
       0: aload_0
       1: ldc           #136                // String requestTimerNumTicks
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public int getRequestTimerNumTicks();
    Code:
       0: aload_0
       1: ldc           #136                // String requestTimerNumTicks
       3: sipush        1024
       6: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       9: ireturn

  public int getWriteBufferBytes();
    Code:
       0: aload_0
       1: ldc           #137                // String writeBufferSizeBytes
       3: ldc           #138                // int 65536
       5: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       8: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setWriteBufferBytes(int);
    Code:
       0: aload_0
       1: ldc           #137                // String writeBufferSizeBytes
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public org.apache.bookkeeper.conf.ServerConfiguration setNumJournalCallbackThreads(int);
    Code:
       0: aload_0
       1: ldc           #139                // String numJournalCallbackThreads
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public int getNumJournalCallbackThreads();
    Code:
       0: aload_0
       1: ldc           #139                // String numJournalCallbackThreads
       3: iconst_1
       4: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       7: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setSortedLedgerStorageEnabled(boolean);
    Code:
       0: aload_0
       1: ldc           #140                // String sortedLedgerStorageEnabled
       3: iload_1
       4: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public boolean getSortedLedgerStorageEnabled();
    Code:
       0: aload_0
       1: ldc           #140                // String sortedLedgerStorageEnabled
       3: iconst_1
       4: invokevirtual #10                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public long getSkipListSizeLimit();
    Code:
       0: aload_0
       1: ldc           #141                // String skipListSizeLimit
       3: ldc2_w        #142                // long 67108864l
       6: invokevirtual #16                 // Method getLong:(Ljava/lang/String;J)J
       9: lreturn

  public org.apache.bookkeeper.conf.ServerConfiguration setSkipListSizeLimit(int);
    Code:
       0: iload_1
       1: ldc           #145                // int 1073741823
       3: if_icmple     16
       6: new           #146                // class java/lang/IllegalArgumentException
       9: dup
      10: ldc           #147                // String skiplist size over 1073741823
      12: invokespecial #148                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: aload_0
      17: ldc           #141                // String skipListSizeLimit
      19: iload_1
      20: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      23: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      26: aload_0
      27: areturn

  public int getSkipListArenaChunkSize();
    Code:
       0: aload_0
       1: ldc           #149                // String skipListArenaChunkSize
       3: ldc           #150                // int 4194304
       5: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       8: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setSkipListArenaChunkSize(int);
    Code:
       0: aload_0
       1: ldc           #149                // String skipListArenaChunkSize
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public int getSkipListArenaMaxAllocSize();
    Code:
       0: aload_0
       1: ldc           #151                // String skipListArenaMaxAllocSize
       3: ldc           #152                // int 131072
       5: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       8: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setSkipListArenaMaxAllocSize(int);
    Code:
       0: aload_0
       1: ldc           #151                // String skipListArenaMaxAllocSize
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public boolean getJournalSyncData();
    Code:
       0: aload_0
       1: ldc           #153                // String journalSyncData
       3: iconst_1
       4: invokevirtual #10                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public boolean getJournalWriteData();
    Code:
       0: aload_0
       1: ldc           #154                // String journalWriteData
       3: iconst_1
       4: invokevirtual #10                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setJournalWriteData(boolean);
    Code:
       0: aload_0
       1: ldc           #154                // String journalWriteData
       3: iload_1
       4: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public org.apache.bookkeeper.conf.ServerConfiguration setJournalSyncData(boolean);
    Code:
       0: aload_0
       1: ldc           #153                // String journalSyncData
       3: iload_1
       4: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public boolean getJournalAdaptiveGroupWrites();
    Code:
       0: aload_0
       1: ldc           #155                // String journalAdaptiveGroupWrites
       3: iconst_1
       4: invokevirtual #10                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setJournalAdaptiveGroupWrites(boolean);
    Code:
       0: aload_0
       1: ldc           #155                // String journalAdaptiveGroupWrites
       3: iload_1
       4: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public long getJournalMaxGroupWaitMSec();
    Code:
       0: aload_0
       1: ldc           #156                // String journalMaxGroupWaitMSec
       3: ldc2_w        #157                // long 2l
       6: invokevirtual #16                 // Method getLong:(Ljava/lang/String;J)J
       9: lreturn

  public org.apache.bookkeeper.conf.ServerConfiguration setJournalMaxGroupWaitMSec(long);
    Code:
       0: aload_0
       1: ldc           #156                // String journalMaxGroupWaitMSec
       3: lload_1
       4: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public long getJournalBufferedWritesThreshold();
    Code:
       0: aload_0
       1: ldc           #159                // String journalBufferedWritesThreshold
       3: ldc2_w        #160                // long 524288l
       6: invokevirtual #16                 // Method getLong:(Ljava/lang/String;J)J
       9: lreturn

  public org.apache.bookkeeper.conf.ServerConfiguration setJournalBufferedWritesThreshold(long);
    Code:
       0: aload_0
       1: ldc           #159                // String journalBufferedWritesThreshold
       3: lload_1
       4: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public long getJournalBufferedEntriesThreshold();
    Code:
       0: aload_0
       1: ldc           #162                // String journalBufferedEntriesThreshold
       3: lconst_0
       4: invokevirtual #16                 // Method getLong:(Ljava/lang/String;J)J
       7: lreturn

  public org.apache.bookkeeper.conf.ServerConfiguration setJournalBufferedEntriesThreshold(int);
    Code:
       0: aload_0
       1: ldc           #162                // String journalBufferedEntriesThreshold
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public org.apache.bookkeeper.conf.ServerConfiguration setJournalFlushWhenQueueEmpty(boolean);
    Code:
       0: aload_0
       1: ldc           #163                // String journalFlushWhenQueueEmpty
       3: iload_1
       4: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public boolean getJournalFlushWhenQueueEmpty();
    Code:
       0: aload_0
       1: ldc           #163                // String journalFlushWhenQueueEmpty
       3: iconst_0
       4: invokevirtual #10                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setReadOnlyModeEnabled(boolean);
    Code:
       0: aload_0
       1: ldc           #164                // String readOnlyModeEnabled
       3: iload_1
       4: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public boolean isReadOnlyModeEnabled();
    Code:
       0: aload_0
       1: ldc           #164                // String readOnlyModeEnabled
       3: iconst_1
       4: invokevirtual #10                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setDiskUsageWarnThreshold(float);
    Code:
       0: aload_0
       1: ldc           #165                // String diskUsageWarnThreshold
       3: fload_1
       4: invokestatic  #166                // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public float getDiskUsageWarnThreshold();
    Code:
       0: aload_0
       1: ldc           #165                // String diskUsageWarnThreshold
       3: ldc           #167                // float 0.9f
       5: invokevirtual #168                // Method getFloat:(Ljava/lang/String;F)F
       8: freturn

  public org.apache.bookkeeper.conf.ServerConfiguration setPersistBookieStatusEnabled(boolean);
    Code:
       0: aload_0
       1: ldc           #169                // String persistBookieStatusEnabled
       3: iload_1
       4: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public boolean isPersistBookieStatusEnabled();
    Code:
       0: aload_0
       1: ldc           #169                // String persistBookieStatusEnabled
       3: iconst_0
       4: invokevirtual #10                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setDiskUsageThreshold(float);
    Code:
       0: aload_0
       1: ldc           #170                // String diskUsageThreshold
       3: fload_1
       4: invokestatic  #166                // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public float getDiskUsageThreshold();
    Code:
       0: aload_0
       1: ldc           #170                // String diskUsageThreshold
       3: ldc           #171                // float 0.95f
       5: invokevirtual #168                // Method getFloat:(Ljava/lang/String;F)F
       8: freturn

  public org.apache.bookkeeper.conf.ServerConfiguration setDiskLowWaterMarkUsageThreshold(float);
    Code:
       0: aload_0
       1: ldc           #172                // String diskUsageLwmThreshold
       3: fload_1
       4: invokestatic  #166                // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public float getDiskLowWaterMarkUsageThreshold();
    Code:
       0: aload_0
       1: ldc           #172                // String diskUsageLwmThreshold
       3: aload_0
       4: invokevirtual #173                // Method getDiskUsageThreshold:()F
       7: invokevirtual #168                // Method getFloat:(Ljava/lang/String;F)F
      10: freturn

  public org.apache.bookkeeper.conf.ServerConfiguration setDiskCheckInterval(int);
    Code:
       0: aload_0
       1: ldc           #174                // String diskCheckInterval
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public int getDiskCheckInterval();
    Code:
       0: aload_0
       1: ldc           #174                // String diskCheckInterval
       3: sipush        10000
       6: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       9: ireturn

  public void setAuditorPeriodicCheckInterval(long);
    Code:
       0: aload_0
       1: ldc           #175                // String auditorPeriodicCheckInterval
       3: lload_1
       4: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public long getAuditorPeriodicCheckInterval();
    Code:
       0: aload_0
       1: ldc           #175                // String auditorPeriodicCheckInterval
       3: ldc2_w        #176                // long 604800l
       6: invokevirtual #16                 // Method getLong:(Ljava/lang/String;J)J
       9: lreturn

  public void setAuditorPeriodicBookieCheckInterval(long);
    Code:
       0: aload_0
       1: ldc           #178                // String auditorPeriodicBookieCheckInterval
       3: lload_1
       4: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public long getAuditorPeriodicBookieCheckInterval();
    Code:
       0: aload_0
       1: ldc           #178                // String auditorPeriodicBookieCheckInterval
       3: ldc2_w        #117                // long 86400l
       6: invokevirtual #16                 // Method getLong:(Ljava/lang/String;J)J
       9: lreturn

  public void setAuditorPeriodicPlacementPolicyCheckInterval(long);
    Code:
       0: aload_0
       1: ldc           #179                // String auditorPeriodicPlacementPolicyCheckInterval
       3: lload_1
       4: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public long getAuditorPeriodicPlacementPolicyCheckInterval();
    Code:
       0: aload_0
       1: ldc           #179                // String auditorPeriodicPlacementPolicyCheckInterval
       3: lconst_0
       4: invokevirtual #16                 // Method getLong:(Ljava/lang/String;J)J
       7: lreturn

  public void setUnderreplicatedLedgerRecoveryGracePeriod(long);
    Code:
       0: aload_0
       1: ldc           #180                // String underreplicatedLedgerRecoveryGracePeriod
       3: lload_1
       4: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public long getUnderreplicatedLedgerRecoveryGracePeriod();
    Code:
       0: aload_0
       1: ldc           #180                // String underreplicatedLedgerRecoveryGracePeriod
       3: lconst_0
       4: invokevirtual #16                 // Method getLong:(Ljava/lang/String;J)J
       7: lreturn

  public void setAuditorPeriodicReplicasCheckInterval(long);
    Code:
       0: aload_0
       1: ldc           #181                // String auditorReplicasCheckInterval
       3: lload_1
       4: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public long getAuditorPeriodicReplicasCheckInterval();
    Code:
       0: aload_0
       1: ldc           #181                // String auditorReplicasCheckInterval
       3: lconst_0
       4: invokevirtual #16                 // Method getLong:(Ljava/lang/String;J)J
       7: lreturn

  public int getAuditorMaxNumberOfConcurrentOpenLedgerOperations();
    Code:
       0: aload_0
       1: ldc           #182                // String auditorMaxNumberOfConcurrentOpenLedgerOperations
       3: sipush        500
       6: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       9: ireturn

  public void setAuditorMaxNumberOfConcurrentOpenLedgerOperations(int);
    Code:
       0: aload_0
       1: ldc           #182                // String auditorMaxNumberOfConcurrentOpenLedgerOperations
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public int getAuditorAcquireConcurrentOpenLedgerOperationsTimeoutMSec();
    Code:
       0: aload_0
       1: ldc           #183                // String auditorAcquireConcurrentOpenLedgerOperationsTimeOutMSec
       3: ldc           #184                // int 120000
       5: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       8: ireturn

  public void setAuditorAcquireConcurrentOpenLedgerOperationsTimeoutMSec(int);
    Code:
       0: aload_0
       1: ldc           #183                // String auditorAcquireConcurrentOpenLedgerOperationsTimeOutMSec
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public org.apache.bookkeeper.conf.ServerConfiguration setAuditorLedgerVerificationPercentage(long);
    Code:
       0: aload_0
       1: ldc           #185                // String auditorLedgerVerificationPercentage
       3: lload_1
       4: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public long getAuditorLedgerVerificationPercentage();
    Code:
       0: aload_0
       1: ldc           #185                // String auditorLedgerVerificationPercentage
       3: lconst_0
       4: invokevirtual #16                 // Method getLong:(Ljava/lang/String;J)J
       7: lreturn

  public org.apache.bookkeeper.conf.ServerConfiguration setAutoRecoveryDaemonEnabled(boolean);
    Code:
       0: aload_0
       1: ldc           #186                // String autoRecoveryDaemonEnabled
       3: iload_1
       4: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public boolean isAutoRecoveryDaemonEnabled();
    Code:
       0: aload_0
       1: ldc           #186                // String autoRecoveryDaemonEnabled
       3: iconst_0
       4: invokevirtual #10                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public int getLostBookieRecoveryDelay();
    Code:
       0: aload_0
       1: ldc           #187                // String lostBookieRecoveryDelay
       3: iconst_0
       4: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       7: ireturn

  public void setLostBookieRecoveryDelay(int);
    Code:
       0: aload_0
       1: ldc           #187                // String lostBookieRecoveryDelay
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public int getRwRereplicateBackoffMs();
    Code:
       0: aload_0
       1: ldc           #188                // String rwRereplicateBackoffMs
       3: sipush        5000
       6: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       9: ireturn

  public void setRwRereplicateBackoffMs(int);
    Code:
       0: aload_0
       1: ldc           #188                // String rwRereplicateBackoffMs
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public org.apache.bookkeeper.conf.ServerConfiguration setForceReadOnlyBookie(boolean);
    Code:
       0: aload_0
       1: ldc           #189                // String forceReadOnlyBookie
       3: iload_1
       4: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public boolean isForceReadOnlyBookie();
    Code:
       0: aload_0
       1: ldc           #189                // String forceReadOnlyBookie
       3: iconst_0
       4: invokevirtual #10                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public boolean getIsThrottleByBytes();
    Code:
       0: aload_0
       1: ldc           #190                // String isThrottleByBytes
       3: iconst_0
       4: invokevirtual #10                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setIsThrottleByBytes(boolean);
    Code:
       0: aload_0
       1: ldc           #190                // String isThrottleByBytes
       3: iload_1
       4: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public int getCompactionMaxOutstandingRequests();
    Code:
       0: aload_0
       1: ldc           #191                // String compactionMaxOutstandingRequests
       3: ldc           #192                // int 100000
       5: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       8: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setCompactionMaxOutstandingRequests(int);
    Code:
       0: aload_0
       1: ldc           #191                // String compactionMaxOutstandingRequests
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public int getCompactionRate();
    Code:
       0: aload_0
       1: ldc           #193                // String compactionRate
       3: sipush        1000
       6: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       9: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setCompactionRate(int);
    Code:
       0: aload_0
       1: ldc           #193                // String compactionRate
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public int getCompactionRateByEntries();
    Code:
       0: aload_0
       1: ldc           #194                // String compactionRateByEntries
       3: aload_0
       4: invokevirtual #195                // Method getCompactionRate:()I
       7: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
      10: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setCompactionRateByEntries(int);
    Code:
       0: aload_0
       1: ldc           #194                // String compactionRateByEntries
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public int getCompactionRateByBytes();
    Code:
       0: aload_0
       1: ldc           #196                // String compactionRateByBytes
       3: ldc           #197                // int 1000000
       5: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       8: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setCompactionRateByBytes(int);
    Code:
       0: aload_0
       1: ldc           #196                // String compactionRateByBytes
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public boolean getJournalRemovePagesFromCache();
    Code:
       0: aload_0
       1: ldc           #198                // String journalRemoveFromPageCache
       3: iconst_1
       4: invokevirtual #10                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setJournalRemovePagesFromCache(boolean);
    Code:
       0: aload_0
       1: ldc           #198                // String journalRemoveFromPageCache
       3: iload_1
       4: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public java.lang.String getLedgerStorageClass();
    Code:
       0: getstatic     #199                // Field LEDGER_STORAGE_CLASS_KEY:Lorg/apache/bookkeeper/common/conf/ConfigKey;
       3: aload_0
       4: invokevirtual #200                // Method org/apache/bookkeeper/common/conf/ConfigKey.getString:(Lorg/apache/commons/configuration/Configuration;)Ljava/lang/String;
       7: astore_1
       8: aload_1
       9: ldc           #201                // class org/apache/bookkeeper/bookie/SortedLedgerStorage
      11: invokevirtual #202                // Method java/lang/Class.getName:()Ljava/lang/String;
      14: invokevirtual #203                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      17: ifeq          33
      20: aload_0
      21: invokevirtual #204                // Method getSortedLedgerStorageEnabled:()Z
      24: ifne          33
      27: ldc           #205                // class org/apache/bookkeeper/bookie/InterleavedLedgerStorage
      29: invokevirtual #202                // Method java/lang/Class.getName:()Ljava/lang/String;
      32: astore_1
      33: aload_1
      34: areturn

  public org.apache.bookkeeper.conf.ServerConfiguration setLedgerStorageClass(java.lang.String);
    Code:
       0: getstatic     #199                // Field LEDGER_STORAGE_CLASS_KEY:Lorg/apache/bookkeeper/common/conf/ConfigKey;
       3: aload_0
       4: aload_1
       5: invokevirtual #7                  // Method org/apache/bookkeeper/common/conf/ConfigKey.set:(Lorg/apache/commons/configuration/Configuration;Ljava/lang/Object;)V
       8: aload_0
       9: areturn

  public boolean getUseHostNameAsBookieID();
    Code:
       0: aload_0
       1: ldc           #206                // String useHostNameAsBookieID
       3: iconst_0
       4: invokevirtual #10                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setUseHostNameAsBookieID(boolean);
    Code:
       0: aload_0
       1: ldc           #206                // String useHostNameAsBookieID
       3: iload_1
       4: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public boolean getUseShortHostName();
    Code:
       0: aload_0
       1: ldc           #207                // String useShortHostName
       3: iconst_0
       4: invokevirtual #10                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setUseShortHostName(boolean);
    Code:
       0: aload_0
       1: ldc           #207                // String useShortHostName
       3: iload_1
       4: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public boolean isEnableLocalTransport();
    Code:
       0: aload_0
       1: ldc           #208                // String enableLocalTransport
       3: iconst_0
       4: invokevirtual #10                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setEnableLocalTransport(boolean);
    Code:
       0: aload_0
       1: ldc           #208                // String enableLocalTransport
       3: iload_1
       4: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public boolean isDisableServerSocketBind();
    Code:
       0: aload_0
       1: ldc           #209                // String disableServerSocketBind
       3: iconst_0
       4: invokevirtual #10                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setDisableServerSocketBind(boolean);
    Code:
       0: aload_0
       1: ldc           #209                // String disableServerSocketBind
       3: iload_1
       4: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public java.lang.Class<? extends org.apache.bookkeeper.stats.StatsProvider> getStatsProviderClass() throws org.apache.commons.configuration.ConfigurationException;
    Code:
       0: aload_0
       1: ldc           #210                // String statsProviderClass
       3: ldc           #211                // class org/apache/bookkeeper/stats/NullStatsProvider
       5: ldc           #212                // class org/apache/bookkeeper/stats/StatsProvider
       7: getstatic     #213                // Field DEFAULT_LOADER:Ljava/lang/ClassLoader;
      10: invokestatic  #214                // Method org/apache/bookkeeper/common/util/ReflectionUtils.getClass:(Lorg/apache/commons/configuration/Configuration;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Class;
      13: areturn

  public org.apache.bookkeeper.conf.ServerConfiguration setStatsProviderClass(java.lang.Class<? extends org.apache.bookkeeper.stats.StatsProvider>);
    Code:
       0: aload_0
       1: ldc           #210                // String statsProviderClass
       3: aload_1
       4: invokevirtual #202                // Method java/lang/Class.getName:()Ljava/lang/String;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  public void validate() throws org.apache.commons.configuration.ConfigurationException;
    Code:
       0: ldc           #8                  // class org/apache/bookkeeper/conf/ServerConfiguration
       2: invokestatic  #215                // Method org/apache/bookkeeper/common/conf/ConfigDef.of:(Ljava/lang/Class;)Lorg/apache/bookkeeper/common/conf/ConfigDef;
       5: astore_1
       6: aload_1
       7: aload_0
       8: invokevirtual #216                // Method org/apache/bookkeeper/common/conf/ConfigDef.validate:(Lorg/apache/commons/configuration/Configuration;)V
      11: goto          31
      14: astore_2
      15: new           #218                // class org/apache/commons/configuration/ConfigurationException
      18: dup
      19: aload_2
      20: invokevirtual #219                // Method org/apache/bookkeeper/common/conf/ConfigException.getMessage:()Ljava/lang/String;
      23: aload_2
      24: invokevirtual #220                // Method org/apache/bookkeeper/common/conf/ConfigException.getCause:()Ljava/lang/Throwable;
      27: invokespecial #221                // Method org/apache/commons/configuration/ConfigurationException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      30: athrow
      31: aload_0
      32: invokevirtual #222                // Method getSkipListArenaChunkSize:()I
      35: aload_0
      36: invokevirtual #223                // Method getSkipListArenaMaxAllocSize:()I
      39: if_icmpge     52
      42: new           #218                // class org/apache/commons/configuration/ConfigurationException
      45: dup
      46: ldc           #224                // String Arena max allocation size should be smaller than the chunk size.
      48: invokespecial #225                // Method org/apache/commons/configuration/ConfigurationException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: aload_0
      53: invokevirtual #226                // Method getJournalAlignmentSize:()I
      56: sipush        512
      59: if_icmplt     73
      62: aload_0
      63: invokevirtual #226                // Method getJournalAlignmentSize:()I
      66: sipush        512
      69: irem
      70: ifeq          103
      73: new           #218                // class org/apache/commons/configuration/ConfigurationException
      76: dup
      77: new           #227                // class java/lang/StringBuilder
      80: dup
      81: invokespecial #228                // Method java/lang/StringBuilder."<init>":()V
      84: ldc           #229                // String Invalid journal alignment size :
      86: invokevirtual #230                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: aload_0
      90: invokevirtual #226                // Method getJournalAlignmentSize:()I
      93: invokevirtual #231                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      96: invokevirtual #232                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: invokespecial #225                // Method org/apache/commons/configuration/ConfigurationException."<init>":(Ljava/lang/String;)V
     102: athrow
     103: aload_0
     104: invokevirtual #226                // Method getJournalAlignmentSize:()I
     107: aload_0
     108: invokevirtual #233                // Method getJournalPreAllocSizeMB:()I
     111: sipush        1024
     114: imul
     115: sipush        1024
     118: imul
     119: if_icmple     157
     122: new           #218                // class org/apache/commons/configuration/ConfigurationException
     125: dup
     126: new           #227                // class java/lang/StringBuilder
     129: dup
     130: invokespecial #228                // Method java/lang/StringBuilder."<init>":()V
     133: ldc           #234                // String Invalid preallocation size :
     135: invokevirtual #230                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: aload_0
     139: invokevirtual #233                // Method getJournalPreAllocSizeMB:()I
     142: invokevirtual #231                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     145: ldc           #235                // String  MB
     147: invokevirtual #230                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     150: invokevirtual #232                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     153: invokespecial #225                // Method org/apache/commons/configuration/ConfigurationException."<init>":(Ljava/lang/String;)V
     156: athrow
     157: iconst_0
     158: aload_0
     159: invokevirtual #236                // Method getBookiePort:()I
     162: if_icmpne     182
     165: aload_0
     166: invokevirtual #237                // Method getAllowEphemeralPorts:()Z
     169: ifne          182
     172: new           #218                // class org/apache/commons/configuration/ConfigurationException
     175: dup
     176: ldc           #238                // String Invalid port specified, using ephemeral ports accidentally?
     178: invokespecial #225                // Method org/apache/commons/configuration/ConfigurationException."<init>":(Ljava/lang/String;)V
     181: athrow
     182: aload_0
     183: invokevirtual #239                // Method isEntryLogPerLedgerEnabled:()Z
     186: ifeq          206
     189: aload_0
     190: invokevirtual #240                // Method getUseTransactionalCompaction:()Z
     193: ifeq          206
     196: new           #218                // class org/apache/commons/configuration/ConfigurationException
     199: dup
     200: ldc           #241                // String When entryLogPerLedger is enabled , it is unnecessary to use transactional compaction
     202: invokespecial #225                // Method org/apache/commons/configuration/ConfigurationException."<init>":(Ljava/lang/String;)V
     205: athrow
     206: aload_0
     207: invokevirtual #242                // Method getJournalFormatVersionToWrite:()I
     210: bipush        6
     212: if_icmplt     219
     215: iconst_1
     216: goto          220
     219: iconst_0
     220: aload_0
     221: invokevirtual #243                // Method getFileInfoFormatVersionToWrite:()I
     224: iconst_1
     225: if_icmplt     232
     228: iconst_1
     229: goto          233
     232: iconst_0
     233: ixor
     234: ifeq          247
     237: new           #218                // class org/apache/commons/configuration/ConfigurationException
     240: dup
     241: ldc           #244                // String For persisiting explicitLac, journalFormatVersionToWrite should be >= 6and FileInfoFormatVersionToWrite should be >= 1
     243: invokespecial #225                // Method org/apache/commons/configuration/ConfigurationException."<init>":(Ljava/lang/String;)V
     246: athrow
     247: return
    Exception table:
       from    to  target type
           6    11    14   Class org/apache/bookkeeper/common/conf/ConfigException

  public int getRecvByteBufAllocatorSizeInitial();
    Code:
       0: aload_0
       1: ldc           #245                // String byteBufAllocatorSizeInitial
       3: ldc           #138                // int 65536
       5: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       8: ireturn

  public void setRecvByteBufAllocatorSizeInitial(int);
    Code:
       0: aload_0
       1: ldc           #245                // String byteBufAllocatorSizeInitial
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public int getRecvByteBufAllocatorSizeMin();
    Code:
       0: aload_0
       1: ldc           #246                // String byteBufAllocatorSizeMin
       3: ldc           #138                // int 65536
       5: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       8: ireturn

  public void setRecvByteBufAllocatorSizeMin(int);
    Code:
       0: aload_0
       1: ldc           #246                // String byteBufAllocatorSizeMin
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public int getRecvByteBufAllocatorSizeMax();
    Code:
       0: aload_0
       1: ldc           #247                // String byteBufAllocatorSizeMax
       3: ldc           #248                // int 1048576
       5: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       8: ireturn

  public void setRecvByteBufAllocatorSizeMax(int);
    Code:
       0: aload_0
       1: ldc           #247                // String byteBufAllocatorSizeMax
       3: iload_1
       4: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public void setBookieAuthProviderFactoryClass(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #249                // String bookieAuthProviderFactoryClass
       3: aload_1
       4: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       7: return

  public java.lang.String getBookieAuthProviderFactoryClass();
    Code:
       0: aload_0
       1: ldc           #249                // String bookieAuthProviderFactoryClass
       3: aconst_null
       4: invokevirtual #73                 // Method getString:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public org.apache.bookkeeper.conf.ServerConfiguration setNettyMaxFrameSizeBytes(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #250                // Method org/apache/bookkeeper/conf/AbstractConfiguration.setNettyMaxFrameSizeBytes:(I)Lorg/apache/bookkeeper/conf/AbstractConfiguration;
       5: pop
       6: aload_0
       7: areturn

  public java.lang.String getTLSTrustStoreType();
    Code:
       0: aload_0
       1: ldc           #252                // String tlsTrustStoreType
       3: ldc           #253                // String JKS
       5: invokevirtual #73                 // Method getString:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public org.apache.bookkeeper.conf.ServerConfiguration setTLSKeyStoreType(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #254                // String tlsKeyStoreType
       3: aload_1
       4: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       7: aload_0
       8: areturn

  public java.lang.String getTLSKeyStore();
    Code:
       0: aload_0
       1: ldc           #255                // String tlsKeyStore
       3: aconst_null
       4: invokevirtual #73                 // Method getString:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public org.apache.bookkeeper.conf.ServerConfiguration setTLSKeyStore(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #255                // String tlsKeyStore
       3: aload_1
       4: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       7: aload_0
       8: areturn

  public java.lang.String getTLSKeyStorePasswordPath();
    Code:
       0: aload_0
       1: ldc_w         #256                // String tlsKeyStorePasswordPath
       4: aconst_null
       5: invokevirtual #73                 // Method getString:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public org.apache.bookkeeper.conf.ServerConfiguration setTLSKeyStorePasswordPath(java.lang.String);
    Code:
       0: aload_0
       1: ldc_w         #256                // String tlsKeyStorePasswordPath
       4: aload_1
       5: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       8: aload_0
       9: areturn

  public java.lang.String getTLSKeyStoreType();
    Code:
       0: aload_0
       1: ldc           #254                // String tlsKeyStoreType
       3: ldc           #253                // String JKS
       5: invokevirtual #73                 // Method getString:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public org.apache.bookkeeper.conf.ServerConfiguration setTLSTrustStoreType(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #252                // String tlsTrustStoreType
       3: aload_1
       4: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       7: aload_0
       8: areturn

  public java.lang.String getTLSTrustStore();
    Code:
       0: aload_0
       1: ldc_w         #257                // String tlsTrustStore
       4: aconst_null
       5: invokevirtual #73                 // Method getString:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public org.apache.bookkeeper.conf.ServerConfiguration setTLSTrustStore(java.lang.String);
    Code:
       0: aload_0
       1: ldc_w         #257                // String tlsTrustStore
       4: aload_1
       5: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       8: aload_0
       9: areturn

  public java.lang.String getTLSTrustStorePasswordPath();
    Code:
       0: aload_0
       1: ldc_w         #258                // String tlsTrustStorePasswordPath
       4: aconst_null
       5: invokevirtual #73                 // Method getString:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public org.apache.bookkeeper.conf.ServerConfiguration setTLSTrustStorePasswordPath(java.lang.String);
    Code:
       0: aload_0
       1: ldc_w         #258                // String tlsTrustStorePasswordPath
       4: aload_1
       5: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       8: aload_0
       9: areturn

  public java.lang.String getTLSCertificatePath();
    Code:
       0: aload_0
       1: ldc_w         #259                // String tlsCertificatePath
       4: aconst_null
       5: invokevirtual #73                 // Method getString:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public org.apache.bookkeeper.conf.ServerConfiguration setTLSCertificatePath(java.lang.String);
    Code:
       0: aload_0
       1: ldc_w         #259                // String tlsCertificatePath
       4: aload_1
       5: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       8: aload_0
       9: areturn

  public boolean getEnableTaskExecutionStats();
    Code:
       0: aload_0
       1: ldc_w         #260                // String enableTaskExecutionStats
       4: iconst_0
       5: invokevirtual #10                 // Method getBoolean:(Ljava/lang/String;Z)Z
       8: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setEnableTaskExecutionStats(boolean);
    Code:
       0: aload_0
       1: ldc_w         #260                // String enableTaskExecutionStats
       4: iload_1
       5: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       8: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_0
      12: areturn

  public long getMinUsableSizeForIndexFileCreation();
    Code:
       0: aload_0
       1: ldc_w         #261                // String minUsableSizeForIndexFileCreation
       4: ldc2_w        #262                // long 104857600l
       7: invokevirtual #16                 // Method getLong:(Ljava/lang/String;J)J
      10: lreturn

  public org.apache.bookkeeper.conf.ServerConfiguration setMinUsableSizeForIndexFileCreation(long);
    Code:
       0: aload_0
       1: ldc_w         #261                // String minUsableSizeForIndexFileCreation
       4: lload_1
       5: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       8: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_0
      12: areturn

  public long getMinUsableSizeForEntryLogCreation();
    Code:
       0: aload_0
       1: ldc_w         #264                // String minUsableSizeForEntryLogCreation
       4: lconst_1
       5: aload_0
       6: invokevirtual #265                // Method getEntryLogSizeLimit:()J
       9: lmul
      10: invokevirtual #16                 // Method getLong:(Ljava/lang/String;J)J
      13: lreturn

  public org.apache.bookkeeper.conf.ServerConfiguration setMinUsableSizeForEntryLogCreation(long);
    Code:
       0: aload_0
       1: ldc_w         #264                // String minUsableSizeForEntryLogCreation
       4: lload_1
       5: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       8: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_0
      12: areturn

  public long getMinUsableSizeForHighPriorityWrites();
    Code:
       0: aload_0
       1: ldc_w         #266                // String minUsableSizeForHighPriorityWrites
       4: aload_0
       5: invokevirtual #267                // Method getMinUsableSizeForEntryLogCreation:()J
       8: invokevirtual #16                 // Method getLong:(Ljava/lang/String;J)J
      11: lreturn

  public org.apache.bookkeeper.conf.ServerConfiguration setMinUsableSizeForHighPriorityWrites(long);
    Code:
       0: aload_0
       1: ldc_w         #266                // String minUsableSizeForHighPriorityWrites
       4: lload_1
       5: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       8: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_0
      12: areturn

  public boolean isAllowMultipleDirsUnderSameDiskPartition();
    Code:
       0: aload_0
       1: ldc_w         #268                // String allowMultipleDirsUnderSameDiskPartition
       4: iconst_1
       5: invokevirtual #10                 // Method getBoolean:(Ljava/lang/String;Z)Z
       8: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setAllowMultipleDirsUnderSameDiskPartition(boolean);
    Code:
       0: aload_0
       1: ldc_w         #268                // String allowMultipleDirsUnderSameDiskPartition
       4: iload_1
       5: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       8: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_0
      12: areturn

  public boolean isHttpServerEnabled();
    Code:
       0: aload_0
       1: ldc_w         #269                // String httpServerEnabled
       4: iconst_0
       5: invokevirtual #10                 // Method getBoolean:(Ljava/lang/String;Z)Z
       8: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setHttpServerEnabled(boolean);
    Code:
       0: aload_0
       1: ldc_w         #269                // String httpServerEnabled
       4: iload_1
       5: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       8: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_0
      12: areturn

  public int getHttpServerPort();
    Code:
       0: aload_0
       1: ldc_w         #270                // String httpServerPort
       4: sipush        8080
       7: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
      10: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setHttpServerPort(int);
    Code:
       0: aload_0
       1: ldc_w         #270                // String httpServerPort
       4: iload_1
       5: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_0
      12: areturn

  public java.lang.String[] getExtraServerComponents();
    Code:
       0: aload_0
       1: ldc_w         #271                // String extraServerComponents
       4: invokevirtual #70                 // Method getString:(Ljava/lang/String;)Ljava/lang/String;
       7: astore_1
       8: aload_1
       9: invokestatic  #272                // Method com/google/common/base/Strings.isNullOrEmpty:(Ljava/lang/String;)Z
      12: ifeq          17
      15: aconst_null
      16: areturn
      17: aload_0
      18: ldc_w         #271                // String extraServerComponents
      21: invokevirtual #79                 // Method getStringArray:(Ljava/lang/String;)[Ljava/lang/String;
      24: areturn

  public org.apache.bookkeeper.conf.ServerConfiguration setExtraServerComponents(java.lang.String[]);
    Code:
       0: aload_0
       1: ldc_w         #271                // String extraServerComponents
       4: aload_1
       5: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       8: aload_0
       9: areturn

  public boolean getIgnoreExtraServerComponentsStartupFailures();
    Code:
       0: aload_0
       1: ldc_w         #273                // String ignoreExtraServerComponentsStartupFailures
       4: iconst_0
       5: invokevirtual #10                 // Method getBoolean:(Ljava/lang/String;Z)Z
       8: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setIgnoreExtraServerComponentsStartupFailures(boolean);
    Code:
       0: aload_0
       1: ldc_w         #273                // String ignoreExtraServerComponentsStartupFailures
       4: iload_1
       5: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       8: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_0
      12: areturn

  public int getServerWriteBufferLowWaterMark();
    Code:
       0: aload_0
       1: ldc_w         #274                // String serverWriteBufferLowWaterMark
       4: ldc_w         #275                // int 393216
       7: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
      10: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setServerWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: ldc_w         #274                // String serverWriteBufferLowWaterMark
       4: iload_1
       5: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_0
      12: areturn

  public int getServerWriteBufferHighWaterMark();
    Code:
       0: aload_0
       1: ldc_w         #276                // String serverWriteBufferHighWaterMark
       4: ldc_w         #277                // int 524288
       7: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
      10: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setServerWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: ldc_w         #276                // String serverWriteBufferHighWaterMark
       4: iload_1
       5: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_0
      12: areturn

  public void setRegistrationManagerClass(java.lang.Class<? extends org.apache.bookkeeper.discover.RegistrationManager>);
    Code:
       0: aload_0
       1: ldc_w         #278                // String registrationManagerClass
       4: aload_1
       5: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       8: return

  public java.lang.Class<? extends org.apache.bookkeeper.discover.RegistrationManager> getRegistrationManagerClass() throws org.apache.commons.configuration.ConfigurationException;
    Code:
       0: aload_0
       1: ldc_w         #278                // String registrationManagerClass
       4: ldc_w         #279                // class org/apache/bookkeeper/discover/ZKRegistrationManager
       7: ldc_w         #280                // class org/apache/bookkeeper/discover/RegistrationManager
      10: getstatic     #213                // Field DEFAULT_LOADER:Ljava/lang/ClassLoader;
      13: invokestatic  #214                // Method org/apache/bookkeeper/common/util/ReflectionUtils.getClass:(Lorg/apache/commons/configuration/Configuration;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Class;
      16: areturn

  protected org.apache.bookkeeper.conf.ServerConfiguration getThis();
    Code:
       0: aload_0
       1: areturn

  public boolean isEntryLogPerLedgerEnabled();
    Code:
       0: aload_0
       1: ldc_w         #281                // String entryLogPerLedgerEnabled
       4: iconst_0
       5: invokevirtual #10                 // Method getBoolean:(Ljava/lang/String;Z)Z
       8: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setEntryLogPerLedgerEnabled(boolean);
    Code:
       0: aload_0
       1: ldc_w         #281                // String entryLogPerLedgerEnabled
       4: iload_1
       5: invokestatic  #95                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
       8: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_0
      12: areturn

  public int getNumOfMemtableFlushThreads();
    Code:
       0: aload_0
       1: ldc_w         #282                // String numOfMemtableFlushThreads
       4: bipush        8
       6: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       9: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setNumOfMemtableFlushThreads(int);
    Code:
       0: aload_0
       1: ldc_w         #282                // String numOfMemtableFlushThreads
       4: iload_1
       5: invokestatic  #32                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
       8: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_0
      12: areturn

  public int getEntrylogMapAccessExpiryTimeInSeconds();
    Code:
       0: aload_0
       1: ldc_w         #283                // String entrylogMapAccessExpiryTimeInSeconds
       4: sipush        300
       7: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
      10: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setEntrylogMapAccessExpiryTimeInSeconds(int);
    Code:
       0: aload_0
       1: ldc_w         #283                // String entrylogMapAccessExpiryTimeInSeconds
       4: iload_1
       5: invokestatic  #32                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
       8: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_0
      12: areturn

  public int getMaximumNumberOfActiveEntryLogs();
    Code:
       0: aload_0
       1: ldc_w         #284                // String maximumNumberOfActiveEntryLogs
       4: sipush        500
       7: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
      10: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setMaximumNumberOfActiveEntryLogs(int);
    Code:
       0: aload_0
       1: ldc_w         #284                // String maximumNumberOfActiveEntryLogs
       4: iload_1
       5: invokestatic  #32                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
       8: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_0
      12: areturn

  public int getEntryLogPerLedgerCounterLimitsMultFactor();
    Code:
       0: aload_0
       1: ldc_w         #285                // String entryLogPerLedgerCounterLimitsMultFactor
       4: bipush        10
       6: invokevirtual #31                 // Method getInt:(Ljava/lang/String;I)I
       9: ireturn

  public org.apache.bookkeeper.conf.ServerConfiguration setEntryLogPerLedgerCounterLimitsMultFactor(int);
    Code:
       0: aload_0
       1: ldc_w         #285                // String entryLogPerLedgerCounterLimitsMultFactor
       4: iload_1
       5: invokestatic  #32                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
       8: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_0
      12: areturn

  public boolean isLocalConsistencyCheckOnStartup();
    Code:
       0: aload_0
       1: ldc_w         #286                // String localConsistencyCheckOnStartup
       4: iconst_0
       5: invokevirtual #10                 // Method getBoolean:(Ljava/lang/String;Z)Z
       8: ireturn

  public java.lang.String[] getAuthorizedRoles();
    Code:
       0: aload_0
       1: ldc_w         #287                // String authorizedRoles
       4: invokevirtual #79                 // Method getStringArray:(Ljava/lang/String;)[Ljava/lang/String;
       7: areturn

  public org.apache.bookkeeper.conf.ServerConfiguration setAuthorizedRoles(java.lang.String);
    Code:
       0: aload_0
       1: ldc_w         #287                // String authorizedRoles
       4: aload_1
       5: invokevirtual #12                 // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       8: aload_0
       9: areturn

  protected org.apache.bookkeeper.conf.AbstractConfiguration getThis();
    Code:
       0: aload_0
       1: invokevirtual #288                // Method getThis:()Lorg/apache/bookkeeper/conf/ServerConfiguration;
       4: areturn

  public org.apache.bookkeeper.conf.AbstractConfiguration setNettyMaxFrameSizeBytes(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #289                // Method setNettyMaxFrameSizeBytes:(I)Lorg/apache/bookkeeper/conf/ServerConfiguration;
       5: areturn

  static {};
    Code:
       0: ldc_w         #290                // String ledgerstorage
       3: invokestatic  #291                // Method org/apache/bookkeeper/common/conf/ConfigKeyGroup.builder:(Ljava/lang/String;)Lorg/apache/bookkeeper/common/conf/ConfigKeyGroup$ConfigKeyGroupBuilder;
       6: ldc_w         #292                // String Ledger Storage related settings
       9: invokevirtual #293                // Method org/apache/bookkeeper/common/conf/ConfigKeyGroup$ConfigKeyGroupBuilder.description:(Ljava/lang/String;)Lorg/apache/bookkeeper/common/conf/ConfigKeyGroup$ConfigKeyGroupBuilder;
      12: bipush        10
      14: invokevirtual #294                // Method org/apache/bookkeeper/common/conf/ConfigKeyGroup$ConfigKeyGroupBuilder.order:(I)Lorg/apache/bookkeeper/common/conf/ConfigKeyGroup$ConfigKeyGroupBuilder;
      17: invokevirtual #295                // Method org/apache/bookkeeper/common/conf/ConfigKeyGroup$ConfigKeyGroupBuilder.build:()Lorg/apache/bookkeeper/common/conf/ConfigKeyGroup;
      20: putstatic     #296                // Field GROUP_LEDGER_STORAGE:Lorg/apache/bookkeeper/common/conf/ConfigKeyGroup;
      23: ldc_w         #297                // String ledgerStorageClass
      26: invokestatic  #298                // Method org/apache/bookkeeper/common/conf/ConfigKey.builder:(Ljava/lang/String;)Lorg/apache/bookkeeper/common/conf/ConfigKey$ConfigKeyBuilder;
      29: getstatic     #299                // Field org/apache/bookkeeper/common/conf/Type.CLASS:Lorg/apache/bookkeeper/common/conf/Type;
      32: invokevirtual #300                // Method org/apache/bookkeeper/common/conf/ConfigKey$ConfigKeyBuilder.type:(Lorg/apache/bookkeeper/common/conf/Type;)Lorg/apache/bookkeeper/common/conf/ConfigKey$ConfigKeyBuilder;
      35: ldc_w         #301                // String Ledger storage implementation class
      38: invokevirtual #302                // Method org/apache/bookkeeper/common/conf/ConfigKey$ConfigKeyBuilder.description:(Ljava/lang/String;)Lorg/apache/bookkeeper/common/conf/ConfigKey$ConfigKeyBuilder;
      41: ldc           #201                // class org/apache/bookkeeper/bookie/SortedLedgerStorage
      43: invokevirtual #303                // Method org/apache/bookkeeper/common/conf/ConfigKey$ConfigKeyBuilder.defaultValue:(Ljava/lang/Object;)Lorg/apache/bookkeeper/common/conf/ConfigKey$ConfigKeyBuilder;
      46: iconst_3
      47: anewarray     #81                 // class java/lang/String
      50: dup
      51: iconst_0
      52: ldc           #205                // class org/apache/bookkeeper/bookie/InterleavedLedgerStorage
      54: invokevirtual #202                // Method java/lang/Class.getName:()Ljava/lang/String;
      57: aastore
      58: dup
      59: iconst_1
      60: ldc           #201                // class org/apache/bookkeeper/bookie/SortedLedgerStorage
      62: invokevirtual #202                // Method java/lang/Class.getName:()Ljava/lang/String;
      65: aastore
      66: dup
      67: iconst_2
      68: ldc_w         #304                // class org/apache/bookkeeper/bookie/storage/ldb/DbLedgerStorage
      71: invokevirtual #202                // Method java/lang/Class.getName:()Ljava/lang/String;
      74: aastore
      75: invokestatic  #305                // Method com/google/common/collect/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;
      78: invokevirtual #306                // Method org/apache/bookkeeper/common/conf/ConfigKey$ConfigKeyBuilder.optionValues:(Ljava/util/List;)Lorg/apache/bookkeeper/common/conf/ConfigKey$ConfigKeyBuilder;
      81: ldc_w         #307                // class org/apache/bookkeeper/bookie/LedgerStorage
      84: invokestatic  #308                // Method org/apache/bookkeeper/common/conf/validators/ClassValidator.of:(Ljava/lang/Class;)Lorg/apache/bookkeeper/common/conf/validators/ClassValidator;
      87: invokevirtual #309                // Method org/apache/bookkeeper/common/conf/ConfigKey$ConfigKeyBuilder.validator:(Lorg/apache/bookkeeper/common/conf/Validator;)Lorg/apache/bookkeeper/common/conf/ConfigKey$ConfigKeyBuilder;
      90: getstatic     #296                // Field GROUP_LEDGER_STORAGE:Lorg/apache/bookkeeper/common/conf/ConfigKeyGroup;
      93: invokevirtual #310                // Method org/apache/bookkeeper/common/conf/ConfigKey$ConfigKeyBuilder.group:(Lorg/apache/bookkeeper/common/conf/ConfigKeyGroup;)Lorg/apache/bookkeeper/common/conf/ConfigKey$ConfigKeyBuilder;
      96: invokevirtual #311                // Method org/apache/bookkeeper/common/conf/ConfigKey$ConfigKeyBuilder.build:()Lorg/apache/bookkeeper/common/conf/ConfigKey;
      99: putstatic     #199                // Field LEDGER_STORAGE_CLASS_KEY:Lorg/apache/bookkeeper/common/conf/ConfigKey;
     102: ldc_w         #312                // String entrylogger
     105: invokestatic  #291                // Method org/apache/bookkeeper/common/conf/ConfigKeyGroup.builder:(Ljava/lang/String;)Lorg/apache/bookkeeper/common/conf/ConfigKeyGroup$ConfigKeyGroupBuilder;
     108: ldc_w         #313                // String EntryLogger related settings
     111: invokevirtual #293                // Method org/apache/bookkeeper/common/conf/ConfigKeyGroup$ConfigKeyGroupBuilder.description:(Ljava/lang/String;)Lorg/apache/bookkeeper/common/conf/ConfigKeyGroup$ConfigKeyGroupBuilder;
     114: bipush        11
     116: invokevirtual #294                // Method org/apache/bookkeeper/common/conf/ConfigKeyGroup$ConfigKeyGroupBuilder.order:(I)Lorg/apache/bookkeeper/common/conf/ConfigKeyGroup$ConfigKeyGroupBuilder;
     119: invokevirtual #295                // Method org/apache/bookkeeper/common/conf/ConfigKeyGroup$ConfigKeyGroupBuilder.build:()Lorg/apache/bookkeeper/common/conf/ConfigKeyGroup;
     122: putstatic     #314                // Field GROUP_LEDGER_STORAGE_ENTRY_LOGGER:Lorg/apache/bookkeeper/common/conf/ConfigKeyGroup;
     125: ldc_w         #315                // String logSizeLimit
     128: invokestatic  #298                // Method org/apache/bookkeeper/common/conf/ConfigKey.builder:(Ljava/lang/String;)Lorg/apache/bookkeeper/common/conf/ConfigKey$ConfigKeyBuilder;
     131: getstatic     #316                // Field org/apache/bookkeeper/common/conf/Type.LONG:Lorg/apache/bookkeeper/common/conf/Type;
     134: invokevirtual #300                // Method org/apache/bookkeeper/common/conf/ConfigKey$ConfigKeyBuilder.type:(Lorg/apache/bookkeeper/common/conf/Type;)Lorg/apache/bookkeeper/common/conf/ConfigKey$ConfigKeyBuilder;
     137: ldc_w         #317                // String Max file size of entry logger, in bytes
     140: invokevirtual #302                // Method org/apache/bookkeeper/common/conf/ConfigKey$ConfigKeyBuilder.description:(Ljava/lang/String;)Lorg/apache/bookkeeper/common/conf/ConfigKey$ConfigKeyBuilder;
     143: ldc_w         #318                // String A new entry log file will be created when the old one reaches this file size limitation
     146: invokevirtual #319                // Method org/apache/bookkeeper/common/conf/ConfigKey$ConfigKeyBuilder.documentation:(Ljava/lang/String;)Lorg/apache/bookkeeper/common/conf/ConfigKey$ConfigKeyBuilder;
     149: ldc2_w        #320                // long 1073741824l
     152: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     155: invokevirtual #303                // Method org/apache/bookkeeper/common/conf/ConfigKey$ConfigKeyBuilder.defaultValue:(Ljava/lang/Object;)Lorg/apache/bookkeeper/common/conf/ConfigKey$ConfigKeyBuilder;
     158: iconst_0
     159: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     162: ldc2_w        #320                // long 1073741824l
     165: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     168: invokestatic  #322                // Method org/apache/bookkeeper/common/conf/validators/RangeValidator.between:(Ljava/lang/Number;Ljava/lang/Number;)Lorg/apache/bookkeeper/common/conf/validators/RangeValidator;
     171: invokevirtual #309                // Method org/apache/bookkeeper/common/conf/ConfigKey$ConfigKeyBuilder.validator:(Lorg/apache/bookkeeper/common/conf/Validator;)Lorg/apache/bookkeeper/common/conf/ConfigKey$ConfigKeyBuilder;
     174: getstatic     #314                // Field GROUP_LEDGER_STORAGE_ENTRY_LOGGER:Lorg/apache/bookkeeper/common/conf/ConfigKeyGroup;
     177: invokevirtual #310                // Method org/apache/bookkeeper/common/conf/ConfigKey$ConfigKeyBuilder.group:(Lorg/apache/bookkeeper/common/conf/ConfigKeyGroup;)Lorg/apache/bookkeeper/common/conf/ConfigKey$ConfigKeyBuilder;
     180: invokevirtual #311                // Method org/apache/bookkeeper/common/conf/ConfigKey$ConfigKeyBuilder.build:()Lorg/apache/bookkeeper/common/conf/ConfigKey;
     183: putstatic     #4                  // Field ENTRY_LOG_SIZE_LIMIT_KEY:Lorg/apache/bookkeeper/common/conf/ConfigKey;
     186: return
}
