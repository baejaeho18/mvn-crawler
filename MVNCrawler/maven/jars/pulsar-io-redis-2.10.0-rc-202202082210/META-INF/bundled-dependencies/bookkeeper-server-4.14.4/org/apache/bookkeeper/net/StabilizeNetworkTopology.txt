Compiled from "StabilizeNetworkTopology.java"
public class org.apache.bookkeeper.net.StabilizeNetworkTopology implements org.apache.bookkeeper.net.NetworkTopology {
  private static final org.slf4j.Logger logger;

  protected final org.apache.bookkeeper.net.NetworkTopologyImpl impl;

  protected final io.netty.util.HashedWheelTimer timer;

  protected final java.util.concurrent.ConcurrentMap<org.apache.bookkeeper.net.Node, org.apache.bookkeeper.net.StabilizeNetworkTopology$NodeStatus> nodeStatuses;

  protected final long stabilizePeriodMillis;

  public org.apache.bookkeeper.net.StabilizeNetworkTopology(io.netty.util.HashedWheelTimer, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class org/apache/bookkeeper/net/NetworkTopologyImpl
       8: dup
       9: invokespecial #4                  // Method org/apache/bookkeeper/net/NetworkTopologyImpl."<init>":()V
      12: putfield      #5                  // Field impl:Lorg/apache/bookkeeper/net/NetworkTopologyImpl;
      15: aload_0
      16: aload_1
      17: putfield      #6                  // Field timer:Lio/netty/util/HashedWheelTimer;
      20: aload_0
      21: new           #7                  // class java/util/concurrent/ConcurrentHashMap
      24: dup
      25: invokespecial #8                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      28: putfield      #9                  // Field nodeStatuses:Ljava/util/concurrent/ConcurrentMap;
      31: aload_0
      32: getstatic     #10                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      35: iload_2
      36: i2l
      37: invokevirtual #11                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      40: putfield      #12                 // Field stabilizePeriodMillis:J
      43: return

  void updateNode(org.apache.bookkeeper.net.Node, boolean);
    Code:
       0: aload_0
       1: getfield      #9                  // Field nodeStatuses:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #13,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #14                 // class org/apache/bookkeeper/net/StabilizeNetworkTopology$NodeStatus
      13: astore_3
      14: aconst_null
      15: aload_3
      16: if_acmpne     60
      19: new           #14                 // class org/apache/bookkeeper/net/StabilizeNetworkTopology$NodeStatus
      22: dup
      23: invokespecial #15                 // Method org/apache/bookkeeper/net/StabilizeNetworkTopology$NodeStatus."<init>":()V
      26: astore        4
      28: aload_0
      29: getfield      #9                  // Field nodeStatuses:Ljava/util/concurrent/ConcurrentMap;
      32: aload_1
      33: aload         4
      35: invokeinterface #16,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      40: checkcast     #14                 // class org/apache/bookkeeper/net/StabilizeNetworkTopology$NodeStatus
      43: astore        5
      45: aconst_null
      46: aload         5
      48: if_acmpne     57
      51: aload         4
      53: astore_3
      54: goto          60
      57: aload         5
      59: astore_3
      60: aload_3
      61: iload_2
      62: invokevirtual #17                 // Method org/apache/bookkeeper/net/StabilizeNetworkTopology$NodeStatus.updateStatus:(Z)Lorg/apache/bookkeeper/net/StabilizeNetworkTopology$NodeStatus;
      65: pop
      66: return

  public void add(org.apache.bookkeeper.net.Node);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #18                 // Method updateNode:(Lorg/apache/bookkeeper/net/Node;Z)V
       6: aload_0
       7: getfield      #5                  // Field impl:Lorg/apache/bookkeeper/net/NetworkTopologyImpl;
      10: aload_1
      11: invokevirtual #19                 // Method org/apache/bookkeeper/net/NetworkTopologyImpl.add:(Lorg/apache/bookkeeper/net/Node;)V
      14: return

  public void remove(org.apache.bookkeeper.net.Node);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #18                 // Method updateNode:(Lorg/apache/bookkeeper/net/Node;Z)V
       6: aload_0
       7: getfield      #6                  // Field timer:Lio/netty/util/HashedWheelTimer;
      10: new           #20                 // class org/apache/bookkeeper/net/StabilizeNetworkTopology$RemoveNodeTask
      13: dup
      14: aload_0
      15: aload_1
      16: invokespecial #21                 // Method org/apache/bookkeeper/net/StabilizeNetworkTopology$RemoveNodeTask."<init>":(Lorg/apache/bookkeeper/net/StabilizeNetworkTopology;Lorg/apache/bookkeeper/net/Node;)V
      19: aload_0
      20: getfield      #12                 // Field stabilizePeriodMillis:J
      23: getstatic     #22                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      26: invokevirtual #23                 // Method io/netty/util/HashedWheelTimer.newTimeout:(Lio/netty/util/TimerTask;JLjava/util/concurrent/TimeUnit;)Lio/netty/util/Timeout;
      29: pop
      30: return

  public boolean contains(org.apache.bookkeeper.net.Node);
    Code:
       0: aload_0
       1: getfield      #5                  // Field impl:Lorg/apache/bookkeeper/net/NetworkTopologyImpl;
       4: aload_1
       5: invokevirtual #24                 // Method org/apache/bookkeeper/net/NetworkTopologyImpl.contains:(Lorg/apache/bookkeeper/net/Node;)Z
       8: ireturn

  public org.apache.bookkeeper.net.Node getNode(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field impl:Lorg/apache/bookkeeper/net/NetworkTopologyImpl;
       4: aload_1
       5: invokevirtual #25                 // Method org/apache/bookkeeper/net/NetworkTopologyImpl.getNode:(Ljava/lang/String;)Lorg/apache/bookkeeper/net/Node;
       8: areturn

  public int getNumOfRacks();
    Code:
       0: aload_0
       1: getfield      #5                  // Field impl:Lorg/apache/bookkeeper/net/NetworkTopologyImpl;
       4: invokevirtual #26                 // Method org/apache/bookkeeper/net/NetworkTopologyImpl.getNumOfRacks:()I
       7: ireturn

  public java.util.Set<org.apache.bookkeeper.net.Node> getLeaves(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field impl:Lorg/apache/bookkeeper/net/NetworkTopologyImpl;
       4: aload_1
       5: invokevirtual #27                 // Method org/apache/bookkeeper/net/NetworkTopologyImpl.getLeaves:(Ljava/lang/String;)Ljava/util/Set;
       8: areturn

  public int countNumOfAvailableNodes(java.lang.String, java.util.Collection<org.apache.bookkeeper.net.Node>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field impl:Lorg/apache/bookkeeper/net/NetworkTopologyImpl;
       4: aload_1
       5: aload_2
       6: invokevirtual #28                 // Method org/apache/bookkeeper/net/NetworkTopologyImpl.countNumOfAvailableNodes:(Ljava/lang/String;Ljava/util/Collection;)I
       9: ireturn

  static org.slf4j.Logger access$000();
    Code:
       0: getstatic     #1                  // Field logger:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #29                 // class org/apache/bookkeeper/net/StabilizeNetworkTopology
       2: invokestatic  #30                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #1                  // Field logger:Lorg/slf4j/Logger;
       8: return
}
