Compiled from "CleanupLedgerManager.java"
public class org.apache.bookkeeper.meta.CleanupLedgerManager implements org.apache.bookkeeper.meta.LedgerManager {
  private final org.apache.bookkeeper.meta.LedgerManager underlying;

  private final java.util.concurrent.ConcurrentMap<org.apache.bookkeeper.proto.BookkeeperInternalCallbacks$GenericCallback, org.apache.bookkeeper.proto.BookkeeperInternalCallbacks$GenericCallback> callbacks;

  private boolean closed;

  private final java.util.concurrent.locks.ReentrantReadWriteLock closeLock;

  private final java.util.Set<java.util.concurrent.CompletableFuture<?>> futures;

  public org.apache.bookkeeper.meta.CleanupLedgerManager(org.apache.bookkeeper.meta.LedgerManager);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #7                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #8                  // Field callbacks:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: iconst_0
      17: putfield      #2                  // Field closed:Z
      20: aload_0
      21: new           #9                  // class java/util/concurrent/locks/ReentrantReadWriteLock
      24: dup
      25: invokespecial #10                 // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
      28: putfield      #3                  // Field closeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      31: aload_0
      32: invokestatic  #11                 // Method java/util/concurrent/ConcurrentHashMap.newKeySet:()Ljava/util/concurrent/ConcurrentHashMap$KeySetView;
      35: putfield      #12                 // Field futures:Ljava/util/Set;
      38: aload_0
      39: aload_1
      40: putfield      #13                 // Field underlying:Lorg/apache/bookkeeper/meta/LedgerManager;
      43: return

  public org.apache.bookkeeper.meta.LedgerManager getUnderlying();
    Code:
       0: aload_0
       1: getfield      #13                 // Field underlying:Lorg/apache/bookkeeper/meta/LedgerManager;
       4: areturn

  private void addCallback(org.apache.bookkeeper.proto.BookkeeperInternalCallbacks$GenericCallback);
    Code:
       0: aload_0
       1: getfield      #8                  // Field callbacks:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_1
       6: invokeinterface #14,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public void registerLedgerMetadataListener(long, org.apache.bookkeeper.proto.BookkeeperInternalCallbacks$LedgerMetadataListener);
    Code:
       0: aload_0
       1: getfield      #13                 // Field underlying:Lorg/apache/bookkeeper/meta/LedgerManager;
       4: lload_1
       5: aload_3
       6: invokeinterface #15,  4           // InterfaceMethod org/apache/bookkeeper/meta/LedgerManager.registerLedgerMetadataListener:(JLorg/apache/bookkeeper/proto/BookkeeperInternalCallbacks$LedgerMetadataListener;)V
      11: return

  public void unregisterLedgerMetadataListener(long, org.apache.bookkeeper.proto.BookkeeperInternalCallbacks$LedgerMetadataListener);
    Code:
       0: aload_0
       1: getfield      #13                 // Field underlying:Lorg/apache/bookkeeper/meta/LedgerManager;
       4: lload_1
       5: aload_3
       6: invokeinterface #16,  4           // InterfaceMethod org/apache/bookkeeper/meta/LedgerManager.unregisterLedgerMetadataListener:(JLorg/apache/bookkeeper/proto/BookkeeperInternalCallbacks$LedgerMetadataListener;)V
      11: return

  private org.apache.bookkeeper.proto.BookkeeperInternalCallbacks$GenericCallback removeCallback(org.apache.bookkeeper.proto.BookkeeperInternalCallbacks$GenericCallback);
    Code:
       0: aload_0
       1: getfield      #8                  // Field callbacks:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #18                 // class org/apache/bookkeeper/proto/BookkeeperInternalCallbacks$GenericCallback
      13: areturn

  private void recordPromise(java.util.concurrent.CompletableFuture<?>);
    Code:
       0: aload_0
       1: getfield      #12                 // Field futures:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #19,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_1
      12: aload_0
      13: aload_1
      14: invokedynamic #20,  0             // InvokeDynamic #0:run:(Lorg/apache/bookkeeper/meta/CleanupLedgerManager;Ljava/util/concurrent/CompletableFuture;)Ljava/lang/Runnable;
      19: invokevirtual #21                 // Method java/util/concurrent/CompletableFuture.thenRun:(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;
      22: pop
      23: return

  public java.util.concurrent.CompletableFuture<org.apache.bookkeeper.versioning.Versioned<org.apache.bookkeeper.client.api.LedgerMetadata>> createLedgerMetadata(long, org.apache.bookkeeper.client.api.LedgerMetadata);
    Code:
       0: aload_0
       1: getfield      #3                  // Field closeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
       7: invokevirtual #23                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      10: aload_0
      11: getfield      #2                  // Field closed:Z
      14: ifeq          35
      17: invokestatic  #24                 // Method closedPromise:()Ljava/util/concurrent/CompletableFuture;
      20: astore        4
      22: aload_0
      23: getfield      #3                  // Field closeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      26: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      29: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      32: aload         4
      34: areturn
      35: aload_0
      36: getfield      #13                 // Field underlying:Lorg/apache/bookkeeper/meta/LedgerManager;
      39: lload_1
      40: aload_3
      41: invokeinterface #26,  4           // InterfaceMethod org/apache/bookkeeper/meta/LedgerManager.createLedgerMetadata:(JLorg/apache/bookkeeper/client/api/LedgerMetadata;)Ljava/util/concurrent/CompletableFuture;
      46: astore        4
      48: aload_0
      49: aload         4
      51: invokespecial #27                 // Method recordPromise:(Ljava/util/concurrent/CompletableFuture;)V
      54: aload         4
      56: astore        5
      58: aload_0
      59: getfield      #3                  // Field closeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      62: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      65: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      68: aload         5
      70: areturn
      71: astore        6
      73: aload_0
      74: getfield      #3                  // Field closeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      77: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      80: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      83: aload         6
      85: athrow
    Exception table:
       from    to  target type
          10    22    71   any
          35    58    71   any
          71    73    71   any

  public java.util.concurrent.CompletableFuture<java.lang.Void> removeLedgerMetadata(long, org.apache.bookkeeper.versioning.Version);
    Code:
       0: aload_0
       1: getfield      #3                  // Field closeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
       7: invokevirtual #23                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      10: aload_0
      11: getfield      #2                  // Field closed:Z
      14: ifeq          35
      17: invokestatic  #24                 // Method closedPromise:()Ljava/util/concurrent/CompletableFuture;
      20: astore        4
      22: aload_0
      23: getfield      #3                  // Field closeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      26: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      29: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      32: aload         4
      34: areturn
      35: aload_0
      36: getfield      #13                 // Field underlying:Lorg/apache/bookkeeper/meta/LedgerManager;
      39: lload_1
      40: aload_3
      41: invokeinterface #28,  4           // InterfaceMethod org/apache/bookkeeper/meta/LedgerManager.removeLedgerMetadata:(JLorg/apache/bookkeeper/versioning/Version;)Ljava/util/concurrent/CompletableFuture;
      46: astore        4
      48: aload_0
      49: aload         4
      51: invokespecial #27                 // Method recordPromise:(Ljava/util/concurrent/CompletableFuture;)V
      54: aload         4
      56: astore        5
      58: aload_0
      59: getfield      #3                  // Field closeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      62: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      65: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      68: aload         5
      70: areturn
      71: astore        6
      73: aload_0
      74: getfield      #3                  // Field closeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      77: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      80: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      83: aload         6
      85: athrow
    Exception table:
       from    to  target type
          10    22    71   any
          35    58    71   any
          71    73    71   any

  public java.util.concurrent.CompletableFuture<org.apache.bookkeeper.versioning.Versioned<org.apache.bookkeeper.client.api.LedgerMetadata>> readLedgerMetadata(long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field closeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
       7: invokevirtual #23                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      10: aload_0
      11: getfield      #2                  // Field closed:Z
      14: ifeq          33
      17: invokestatic  #24                 // Method closedPromise:()Ljava/util/concurrent/CompletableFuture;
      20: astore_3
      21: aload_0
      22: getfield      #3                  // Field closeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      25: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      28: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      31: aload_3
      32: areturn
      33: aload_0
      34: getfield      #13                 // Field underlying:Lorg/apache/bookkeeper/meta/LedgerManager;
      37: lload_1
      38: invokeinterface #29,  3           // InterfaceMethod org/apache/bookkeeper/meta/LedgerManager.readLedgerMetadata:(J)Ljava/util/concurrent/CompletableFuture;
      43: astore_3
      44: aload_0
      45: aload_3
      46: invokespecial #27                 // Method recordPromise:(Ljava/util/concurrent/CompletableFuture;)V
      49: aload_3
      50: astore        4
      52: aload_0
      53: getfield      #3                  // Field closeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      56: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      59: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      62: aload         4
      64: areturn
      65: astore        5
      67: aload_0
      68: getfield      #3                  // Field closeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      71: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      74: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      77: aload         5
      79: athrow
    Exception table:
       from    to  target type
          10    21    65   any
          33    52    65   any
          65    67    65   any

  public java.util.concurrent.CompletableFuture<org.apache.bookkeeper.versioning.Versioned<org.apache.bookkeeper.client.api.LedgerMetadata>> writeLedgerMetadata(long, org.apache.bookkeeper.client.api.LedgerMetadata, org.apache.bookkeeper.versioning.Version);
    Code:
       0: aload_0
       1: getfield      #3                  // Field closeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
       7: invokevirtual #23                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      10: aload_0
      11: getfield      #2                  // Field closed:Z
      14: ifeq          35
      17: invokestatic  #24                 // Method closedPromise:()Ljava/util/concurrent/CompletableFuture;
      20: astore        5
      22: aload_0
      23: getfield      #3                  // Field closeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      26: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      29: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      32: aload         5
      34: areturn
      35: aload_0
      36: getfield      #13                 // Field underlying:Lorg/apache/bookkeeper/meta/LedgerManager;
      39: lload_1
      40: aload_3
      41: aload         4
      43: invokeinterface #30,  5           // InterfaceMethod org/apache/bookkeeper/meta/LedgerManager.writeLedgerMetadata:(JLorg/apache/bookkeeper/client/api/LedgerMetadata;Lorg/apache/bookkeeper/versioning/Version;)Ljava/util/concurrent/CompletableFuture;
      48: astore        5
      50: aload_0
      51: aload         5
      53: invokespecial #27                 // Method recordPromise:(Ljava/util/concurrent/CompletableFuture;)V
      56: aload         5
      58: astore        6
      60: aload_0
      61: getfield      #3                  // Field closeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      64: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      67: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      70: aload         6
      72: areturn
      73: astore        7
      75: aload_0
      76: getfield      #3                  // Field closeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      79: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      82: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      85: aload         7
      87: athrow
    Exception table:
       from    to  target type
          10    22    73   any
          35    60    73   any
          73    75    73   any

  public void asyncProcessLedgers(org.apache.bookkeeper.proto.BookkeeperInternalCallbacks$Processor<java.lang.Long>, org.apache.zookeeper.AsyncCallback$VoidCallback, java.lang.Object, int, int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field closeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
       7: invokevirtual #23                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      10: aload_0
      11: getfield      #2                  // Field closed:Z
      14: ifeq          38
      17: aload_2
      18: iload         5
      20: aconst_null
      21: aload_3
      22: invokeinterface #31,  4           // InterfaceMethod org/apache/zookeeper/AsyncCallback$VoidCallback.processResult:(ILjava/lang/String;Ljava/lang/Object;)V
      27: aload_0
      28: getfield      #3                  // Field closeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      31: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      34: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      37: return
      38: new           #32                 // class org/apache/bookkeeper/meta/CleanupLedgerManager$1
      41: dup
      42: aload_0
      43: aload_2
      44: iload         5
      46: aload_3
      47: invokespecial #33                 // Method org/apache/bookkeeper/meta/CleanupLedgerManager$1."<init>":(Lorg/apache/bookkeeper/meta/CleanupLedgerManager;Lorg/apache/zookeeper/AsyncCallback$VoidCallback;ILjava/lang/Object;)V
      50: astore        6
      52: aload_0
      53: aload         6
      55: invokespecial #4                  // Method addCallback:(Lorg/apache/bookkeeper/proto/BookkeeperInternalCallbacks$GenericCallback;)V
      58: aload_0
      59: getfield      #13                 // Field underlying:Lorg/apache/bookkeeper/meta/LedgerManager;
      62: aload_1
      63: new           #34                 // class org/apache/bookkeeper/meta/CleanupLedgerManager$2
      66: dup
      67: aload_0
      68: aload         6
      70: aload_2
      71: invokespecial #35                 // Method org/apache/bookkeeper/meta/CleanupLedgerManager$2."<init>":(Lorg/apache/bookkeeper/meta/CleanupLedgerManager;Lorg/apache/bookkeeper/proto/BookkeeperInternalCallbacks$GenericCallback;Lorg/apache/zookeeper/AsyncCallback$VoidCallback;)V
      74: aload_3
      75: iload         4
      77: iload         5
      79: invokeinterface #36,  6           // InterfaceMethod org/apache/bookkeeper/meta/LedgerManager.asyncProcessLedgers:(Lorg/apache/bookkeeper/proto/BookkeeperInternalCallbacks$Processor;Lorg/apache/zookeeper/AsyncCallback$VoidCallback;Ljava/lang/Object;II)V
      84: aload_0
      85: getfield      #3                  // Field closeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      88: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      91: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      94: goto          112
      97: astore        7
      99: aload_0
     100: getfield      #3                  // Field closeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     103: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
     106: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
     109: aload         7
     111: athrow
     112: return
    Exception table:
       from    to  target type
          10    27    97   any
          38    84    97   any
          97    99    97   any

  public org.apache.bookkeeper.meta.LedgerManager$LedgerRangeIterator getLedgerRanges(long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field closeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
       7: invokevirtual #23                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      10: aload_0
      11: getfield      #2                  // Field closed:Z
      14: ifeq          38
      17: new           #37                 // class org/apache/bookkeeper/meta/CleanupLedgerManager$ClosedLedgerRangeIterator
      20: dup
      21: aconst_null
      22: invokespecial #38                 // Method org/apache/bookkeeper/meta/CleanupLedgerManager$ClosedLedgerRangeIterator."<init>":(Lorg/apache/bookkeeper/meta/CleanupLedgerManager$1;)V
      25: astore_3
      26: aload_0
      27: getfield      #3                  // Field closeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      30: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      33: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      36: aload_3
      37: areturn
      38: aload_0
      39: getfield      #13                 // Field underlying:Lorg/apache/bookkeeper/meta/LedgerManager;
      42: lload_1
      43: invokeinterface #39,  3           // InterfaceMethod org/apache/bookkeeper/meta/LedgerManager.getLedgerRanges:(J)Lorg/apache/bookkeeper/meta/LedgerManager$LedgerRangeIterator;
      48: astore_3
      49: aload_0
      50: getfield      #3                  // Field closeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      53: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      56: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      59: aload_3
      60: areturn
      61: astore        4
      63: aload_0
      64: getfield      #3                  // Field closeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      67: invokevirtual #22                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      70: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      73: aload         4
      75: athrow
    Exception table:
       from    to  target type
          10    26    61   any
          38    49    61   any
          61    63    61   any

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field closeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #40                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
       7: invokevirtual #41                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
      10: aload_0
      11: getfield      #2                  // Field closed:Z
      14: ifeq          28
      17: aload_0
      18: getfield      #3                  // Field closeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      21: invokevirtual #40                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      24: invokevirtual #42                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      27: return
      28: aload_0
      29: iconst_1
      30: putfield      #2                  // Field closed:Z
      33: new           #43                 // class java/util/HashSet
      36: dup
      37: aload_0
      38: getfield      #8                  // Field callbacks:Ljava/util/concurrent/ConcurrentMap;
      41: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
      46: invokespecial #45                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      49: astore_1
      50: aload_0
      51: getfield      #3                  // Field closeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      54: invokevirtual #40                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      57: invokevirtual #42                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      60: goto          76
      63: astore_2
      64: aload_0
      65: getfield      #3                  // Field closeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      68: invokevirtual #40                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      71: invokevirtual #42                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      74: aload_2
      75: athrow
      76: aload_1
      77: invokeinterface #46,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      82: astore_2
      83: aload_2
      84: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      89: ifeq          136
      92: aload_2
      93: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      98: checkcast     #18                 // class org/apache/bookkeeper/proto/BookkeeperInternalCallbacks$GenericCallback
     101: astore_3
     102: aload_0
     103: getfield      #8                  // Field callbacks:Ljava/util/concurrent/ConcurrentMap;
     106: aload_3
     107: invokeinterface #17,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     112: checkcast     #18                 // class org/apache/bookkeeper/proto/BookkeeperInternalCallbacks$GenericCallback
     115: astore        4
     117: aconst_null
     118: aload         4
     120: if_acmpeq     133
     123: aload         4
     125: bipush        -19
     127: aconst_null
     128: invokeinterface #50,  3           // InterfaceMethod org/apache/bookkeeper/proto/BookkeeperInternalCallbacks$GenericCallback.operationComplete:(ILjava/lang/Object;)V
     133: goto          83
     136: new           #51                 // class org/apache/bookkeeper/client/BKException$BKClientClosedException
     139: dup
     140: invokespecial #52                 // Method org/apache/bookkeeper/client/BKException$BKClientClosedException."<init>":()V
     143: astore_2
     144: aload_0
     145: getfield      #12                 // Field futures:Ljava/util/Set;
     148: aload_2
     149: invokedynamic #53,  0             // InvokeDynamic #1:accept:(Lorg/apache/bookkeeper/client/BKException;)Ljava/util/function/Consumer;
     154: invokeinterface #54,  2           // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V
     159: aload_0
     160: getfield      #12                 // Field futures:Ljava/util/Set;
     163: invokeinterface #55,  1           // InterfaceMethod java/util/Set.clear:()V
     168: aload_0
     169: getfield      #13                 // Field underlying:Lorg/apache/bookkeeper/meta/LedgerManager;
     172: invokeinterface #56,  1           // InterfaceMethod org/apache/bookkeeper/meta/LedgerManager.close:()V
     177: return
    Exception table:
       from    to  target type
          10    17    63   any
          28    50    63   any

  private static <T> java.util.concurrent.CompletableFuture<T> closedPromise();
    Code:
       0: new           #51                 // class org/apache/bookkeeper/client/BKException$BKClientClosedException
       3: dup
       4: invokespecial #52                 // Method org/apache/bookkeeper/client/BKException$BKClientClosedException."<init>":()V
       7: invokestatic  #57                 // Method org/apache/bookkeeper/common/concurrent/FutureUtils.exception:(Ljava/lang/Throwable;)Ljava/util/concurrent/CompletableFuture;
      10: areturn

  private static void lambda$close$1(org.apache.bookkeeper.client.BKException, java.util.concurrent.CompletableFuture);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #58                 // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
       5: pop
       6: return

  private void lambda$recordPromise$0(java.util.concurrent.CompletableFuture);
    Code:
       0: aload_0
       1: getfield      #12                 // Field futures:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #59,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      10: pop
      11: return

  static void access$000(org.apache.bookkeeper.meta.CleanupLedgerManager, org.apache.bookkeeper.proto.BookkeeperInternalCallbacks$GenericCallback);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method addCallback:(Lorg/apache/bookkeeper/proto/BookkeeperInternalCallbacks$GenericCallback;)V
       5: return

  static java.util.concurrent.locks.ReentrantReadWriteLock access$100(org.apache.bookkeeper.meta.CleanupLedgerManager);
    Code:
       0: aload_0
       1: getfield      #3                  // Field closeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: areturn

  static boolean access$200(org.apache.bookkeeper.meta.CleanupLedgerManager);
    Code:
       0: aload_0
       1: getfield      #2                  // Field closed:Z
       4: ireturn

  static org.apache.bookkeeper.proto.BookkeeperInternalCallbacks$GenericCallback access$300(org.apache.bookkeeper.meta.CleanupLedgerManager, org.apache.bookkeeper.proto.BookkeeperInternalCallbacks$GenericCallback);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method removeCallback:(Lorg/apache/bookkeeper/proto/BookkeeperInternalCallbacks$GenericCallback;)Lorg/apache/bookkeeper/proto/BookkeeperInternalCallbacks$GenericCallback;
       5: areturn
}
