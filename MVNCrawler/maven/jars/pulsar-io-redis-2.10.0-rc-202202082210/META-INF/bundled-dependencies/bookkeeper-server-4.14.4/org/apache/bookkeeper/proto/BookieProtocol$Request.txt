Compiled from "BookieProtocol.java"
public class org.apache.bookkeeper.proto.BookieProtocol$Request {
  byte protocolVersion;

  byte opCode;

  long ledgerId;

  long entryId;

  short flags;

  byte[] masterKey;

  static final boolean $assertionsDisabled;

  public org.apache.bookkeeper.proto.BookieProtocol$Request();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  protected void init(byte, byte, long, long, short, byte[]);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field protocolVersion:B
       5: aload_0
       6: iload_2
       7: putfield      #4                  // Field opCode:B
      10: aload_0
      11: lload_3
      12: putfield      #5                  // Field ledgerId:J
      15: aload_0
      16: lload         5
      18: putfield      #6                  // Field entryId:J
      21: aload_0
      22: iload         7
      24: putfield      #7                  // Field flags:S
      27: aload_0
      28: aload         8
      30: putfield      #8                  // Field masterKey:[B
      33: return

  byte getProtocolVersion();
    Code:
       0: aload_0
       1: getfield      #3                  // Field protocolVersion:B
       4: ireturn

  byte getOpCode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field opCode:B
       4: ireturn

  long getLedgerId();
    Code:
       0: aload_0
       1: getfield      #5                  // Field ledgerId:J
       4: lreturn

  long getEntryId();
    Code:
       0: aload_0
       1: getfield      #6                  // Field entryId:J
       4: lreturn

  short getFlags();
    Code:
       0: aload_0
       1: getfield      #7                  // Field flags:S
       4: ireturn

  boolean hasMasterKey();
    Code:
       0: aload_0
       1: getfield      #8                  // Field masterKey:[B
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  byte[] getMasterKey();
    Code:
       0: getstatic     #9                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #10                 // Method hasMasterKey:()Z
      10: ifne          21
      13: new           #11                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #12                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #8                  // Field masterKey:[B
      25: areturn

  boolean isHighPriority();
    Code:
       0: aload_0
       1: getfield      #7                  // Field flags:S
       4: iconst_4
       5: iand
       6: iconst_4
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public java.lang.String toString();
    Code:
       0: ldc           #13                 // String Op(%d)[Ledger:%d,Entry:%d]
       2: iconst_3
       3: anewarray     #14                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: getfield      #4                  // Field opCode:B
      12: invokestatic  #15                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
      15: aastore
      16: dup
      17: iconst_1
      18: aload_0
      19: getfield      #5                  // Field ledgerId:J
      22: invokestatic  #16                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      25: aastore
      26: dup
      27: iconst_2
      28: aload_0
      29: getfield      #6                  // Field entryId:J
      32: invokestatic  #16                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      35: aastore
      36: invokestatic  #17                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      39: areturn

  public void recycle();
    Code:
       0: return

  static {};
    Code:
       0: ldc           #1                  // class org/apache/bookkeeper/proto/BookieProtocol
       2: invokevirtual #18                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #9                  // Field $assertionsDisabled:Z
      16: return
}
