Compiled from "DefaultSpeculativeRequestExecutionPolicy.java"
public class org.apache.bookkeeper.client.DefaultSpeculativeRequestExecutionPolicy implements org.apache.bookkeeper.client.SpeculativeRequestExecutionPolicy {
  private static final org.slf4j.Logger LOG;

  final int firstSpeculativeRequestTimeout;

  final int maxSpeculativeRequestTimeout;

  final float backoffMultiplier;

  public org.apache.bookkeeper.client.DefaultSpeculativeRequestExecutionPolicy(int, int, float);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #4                  // Field firstSpeculativeRequestTimeout:I
       9: aload_0
      10: iload_2
      11: putfield      #5                  // Field maxSpeculativeRequestTimeout:I
      14: aload_0
      15: fload_3
      16: putfield      #6                  // Field backoffMultiplier:F
      19: fload_3
      20: fconst_0
      21: fcmpg
      22: ifgt          35
      25: new           #7                  // class java/lang/IllegalArgumentException
      28: dup
      29: ldc           #8                  // String Invalid value provided for backoffMultiplier
      31: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: iload_2
      36: i2d
      37: fload_3
      38: f2d
      39: dmul
      40: invokestatic  #10                 // Method java/lang/Math.round:(D)J
      43: ldc2_w        #12                 // long 2147483647l
      46: lcmp
      47: ifle          60
      50: new           #7                  // class java/lang/IllegalArgumentException
      53: dup
      54: ldc           #14                 // String Invalid values for maxSpeculativeRequestTimeout and backoffMultiplier
      56: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      59: athrow
      60: return

  public java.util.concurrent.ScheduledFuture<?> initiateSpeculativeRequest(java.util.concurrent.ScheduledExecutorService, org.apache.bookkeeper.client.SpeculativeRequestExecutor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: getfield      #4                  // Field firstSpeculativeRequestTimeout:I
       7: invokespecial #2                  // Method scheduleSpeculativeRead:(Ljava/util/concurrent/ScheduledExecutorService;Lorg/apache/bookkeeper/client/SpeculativeRequestExecutor;I)Ljava/util/concurrent/ScheduledFuture;
      10: areturn

  private java.util.concurrent.ScheduledFuture<?> scheduleSpeculativeRead(java.util.concurrent.ScheduledExecutorService, org.apache.bookkeeper.client.SpeculativeRequestExecutor, int);
    Code:
       0: aload_1
       1: new           #15                 // class org/apache/bookkeeper/client/DefaultSpeculativeRequestExecutionPolicy$1
       4: dup
       5: aload_0
       6: aload_2
       7: aload_1
       8: iload_3
       9: invokespecial #16                 // Method org/apache/bookkeeper/client/DefaultSpeculativeRequestExecutionPolicy$1."<init>":(Lorg/apache/bookkeeper/client/DefaultSpeculativeRequestExecutionPolicy;Lorg/apache/bookkeeper/client/SpeculativeRequestExecutor;Ljava/util/concurrent/ScheduledExecutorService;I)V
      12: iload_3
      13: i2l
      14: getstatic     #17                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      17: invokeinterface #18,  5           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      22: areturn
      23: astore        4
      25: aload_1
      26: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.isShutdown:()Z
      31: ifne          64
      34: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      37: ldc           #21                 // String Failed to schedule speculative request for {}, speculativeReadTimeout = {} :
      39: iconst_3
      40: anewarray     #22                 // class java/lang/Object
      43: dup
      44: iconst_0
      45: aload_2
      46: aastore
      47: dup
      48: iconst_1
      49: iload_3
      50: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      53: aastore
      54: dup
      55: iconst_2
      56: aload         4
      58: aastore
      59: invokeinterface #24,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
      64: aconst_null
      65: areturn
    Exception table:
       from    to  target type
           0    22    23   Class java/util/concurrent/RejectedExecutionException

  static java.util.concurrent.ScheduledFuture access$000(org.apache.bookkeeper.client.DefaultSpeculativeRequestExecutionPolicy, java.util.concurrent.ScheduledExecutorService, org.apache.bookkeeper.client.SpeculativeRequestExecutor, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #2                  // Method scheduleSpeculativeRead:(Ljava/util/concurrent/ScheduledExecutorService;Lorg/apache/bookkeeper/client/SpeculativeRequestExecutor;I)Ljava/util/concurrent/ScheduledFuture;
       7: areturn

  static org.slf4j.Logger access$100();
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #25                 // class org/apache/bookkeeper/client/DefaultSpeculativeRequestExecutionPolicy
       2: invokestatic  #26                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
