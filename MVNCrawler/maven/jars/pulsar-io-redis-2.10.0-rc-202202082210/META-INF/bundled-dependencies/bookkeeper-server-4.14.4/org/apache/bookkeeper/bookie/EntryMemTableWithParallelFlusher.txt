Compiled from "EntryMemTableWithParallelFlusher.java"
class org.apache.bookkeeper.bookie.EntryMemTableWithParallelFlusher extends org.apache.bookkeeper.bookie.EntryMemTable {
  private static final org.slf4j.Logger log;

  final org.apache.bookkeeper.common.util.OrderedExecutor flushExecutor;

  public org.apache.bookkeeper.bookie.EntryMemTableWithParallelFlusher(org.apache.bookkeeper.conf.ServerConfiguration, org.apache.bookkeeper.bookie.CheckpointSource, org.apache.bookkeeper.stats.StatsLogger);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #2                  // Method org/apache/bookkeeper/bookie/EntryMemTable."<init>":(Lorg/apache/bookkeeper/conf/ServerConfiguration;Lorg/apache/bookkeeper/bookie/CheckpointSource;Lorg/apache/bookkeeper/stats/StatsLogger;)V
       7: aload_0
       8: invokestatic  #3                  // Method org/apache/bookkeeper/common/util/OrderedExecutor.newBuilder:()Lorg/apache/bookkeeper/common/util/OrderedExecutor$Builder;
      11: aload_1
      12: invokevirtual #4                  // Method org/apache/bookkeeper/conf/ServerConfiguration.getNumOfMemtableFlushThreads:()I
      15: invokevirtual #5                  // Method org/apache/bookkeeper/common/util/OrderedExecutor$Builder.numThreads:(I)Lorg/apache/bookkeeper/common/util/OrderedExecutor$AbstractBuilder;
      18: ldc           #6                  // String MemtableFlushThreads
      20: invokevirtual #7                  // Method org/apache/bookkeeper/common/util/OrderedExecutor$AbstractBuilder.name:(Ljava/lang/String;)Lorg/apache/bookkeeper/common/util/OrderedExecutor$AbstractBuilder;
      23: invokevirtual #8                  // Method org/apache/bookkeeper/common/util/OrderedExecutor$AbstractBuilder.build:()Lorg/apache/bookkeeper/common/util/OrderedExecutor;
      26: putfield      #9                  // Field flushExecutor:Lorg/apache/bookkeeper/common/util/OrderedExecutor;
      29: return

  long flushSnapshot(org.apache.bookkeeper.bookie.SkipListFlusher, org.apache.bookkeeper.bookie.CheckpointSource$Checkpoint) throws java.io.IOException;
    Code:
       0: new           #10                 // class java/util/concurrent/atomic/AtomicLong
       3: dup
       4: invokespecial #11                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
       7: astore_3
       8: aload_0
       9: getfield      #12                 // Field snapshot:Lorg/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList;
      12: aload_2
      13: invokevirtual #13                 // Method org/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList.compareTo:(Lorg/apache/bookkeeper/bookie/CheckpointSource$Checkpoint;)I
      16: ifge          281
      19: aload_0
      20: dup
      21: astore        4
      23: monitorenter
      24: aload_0
      25: getfield      #12                 // Field snapshot:Lorg/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList;
      28: astore        5
      30: new           #14                 // class java/util/concurrent/Phaser
      33: dup
      34: iconst_1
      35: invokespecial #15                 // Method java/util/concurrent/Phaser."<init>":(I)V
      38: astore        6
      40: new           #16                 // class java/util/concurrent/atomic/AtomicReference
      43: dup
      44: invokespecial #17                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      47: astore        7
      49: aload         5
      51: aload_2
      52: invokevirtual #13                 // Method org/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList.compareTo:(Lorg/apache/bookkeeper/bookie/CheckpointSource$Checkpoint;)I
      55: ifge          267
      58: aload         5
      60: invokevirtual #18                 // Method org/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList.firstEntry:()Ljava/util/Map$Entry;
      63: astore        8
      65: aload         8
      67: ifnull        157
      70: aload         8
      72: invokeinterface #19,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      77: checkcast     #20                 // class org/apache/bookkeeper/bookie/EntryKeyValue
      80: astore        9
      82: aload         9
      84: invokevirtual #21                 // Method org/apache/bookkeeper/bookie/EntryKeyValue.getLedgerId:()J
      87: lstore        10
      89: new           #22                 // class org/apache/bookkeeper/bookie/EntryKey
      92: dup
      93: lload         10
      95: ldc2_w        #24                 // long 9223372036854775806l
      98: invokespecial #26                 // Method org/apache/bookkeeper/bookie/EntryKey."<init>":(JJ)V
     101: astore        12
     103: aload         5
     105: aload         9
     107: aload         12
     109: invokevirtual #27                 // Method org/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList.subMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentNavigableMap;
     112: astore        13
     114: aload         6
     116: invokevirtual #28                 // Method java/util/concurrent/Phaser.register:()I
     119: pop
     120: aload_0
     121: getfield      #9                  // Field flushExecutor:Lorg/apache/bookkeeper/common/util/OrderedExecutor;
     124: lload         10
     126: new           #29                 // class org/apache/bookkeeper/bookie/EntryMemTableWithParallelFlusher$1
     129: dup
     130: aload_0
     131: aload         13
     133: aload_3
     134: aload_1
     135: aload         6
     137: aload         7
     139: invokespecial #30                 // Method org/apache/bookkeeper/bookie/EntryMemTableWithParallelFlusher$1."<init>":(Lorg/apache/bookkeeper/bookie/EntryMemTableWithParallelFlusher;Ljava/util/concurrent/ConcurrentNavigableMap;Ljava/util/concurrent/atomic/AtomicLong;Lorg/apache/bookkeeper/bookie/SkipListFlusher;Ljava/util/concurrent/Phaser;Ljava/util/concurrent/atomic/AtomicReference;)V
     142: invokevirtual #31                 // Method org/apache/bookkeeper/common/util/OrderedExecutor.executeOrdered:(JLorg/apache/bookkeeper/common/util/SafeRunnable;)V
     145: aload         5
     147: aload         12
     149: invokevirtual #32                 // Method org/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList.ceilingEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;
     152: astore        8
     154: goto          65
     157: iconst_0
     158: istore        12
     160: aload         6
     162: invokevirtual #33                 // Method java/util/concurrent/Phaser.arriveAndAwaitAdvance:()I
     165: ifge          172
     168: iconst_1
     169: goto          173
     172: iconst_0
     173: istore        12
     175: goto          204
     178: astore        13
     180: getstatic     #1                  // Field log:Lorg/slf4j/Logger;
     183: ldc           #35                 // String Got IllegalStateException while awaiting on Phaser
     185: aload         13
     187: invokeinterface #36,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     192: new           #37                 // class java/io/IOException
     195: dup
     196: ldc           #35                 // String Got IllegalStateException while awaiting on Phaser
     198: aload         13
     200: invokespecial #38                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     203: athrow
     204: iload         12
     206: ifeq          245
     209: getstatic     #1                  // Field log:Lorg/slf4j/Logger;
     212: ldc           #39                 // String Phaser is terminated while awaiting flushExecutor to complete the entry flushes
     214: aload         7
     216: invokevirtual #40                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     219: checkcast     #41                 // class java/lang/Throwable
     222: invokeinterface #36,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     227: new           #37                 // class java/io/IOException
     230: dup
     231: ldc           #42                 // String Failed to complete the flushSnapshotByParallelizing
     233: aload         7
     235: invokevirtual #40                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     238: checkcast     #41                 // class java/lang/Throwable
     241: invokespecial #38                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     244: athrow
     245: aload_0
     246: getfield      #43                 // Field memTableStats:Lorg/apache/bookkeeper/bookie/stats/EntryMemTableStats;
     249: invokevirtual #44                 // Method org/apache/bookkeeper/bookie/stats/EntryMemTableStats.getFlushBytesCounter:()Lorg/apache/bookkeeper/stats/Counter;
     252: aload_3
     253: invokevirtual #45                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
     256: invokeinterface #46,  3           // InterfaceMethod org/apache/bookkeeper/stats/Counter.add:(J)V
     261: aload_0
     262: aload         5
     264: invokevirtual #47                 // Method clearSnapshot:(Lorg/apache/bookkeeper/bookie/EntryMemTable$EntrySkipList;)V
     267: aload         4
     269: monitorexit
     270: goto          281
     273: astore        14
     275: aload         4
     277: monitorexit
     278: aload         14
     280: athrow
     281: aload_0
     282: getfield      #48                 // Field skipListSemaphore:Ljava/util/concurrent/Semaphore;
     285: aload_3
     286: invokevirtual #49                 // Method java/util/concurrent/atomic/AtomicLong.intValue:()I
     289: invokevirtual #50                 // Method java/util/concurrent/Semaphore.release:(I)V
     292: aload_3
     293: invokevirtual #51                 // Method java/util/concurrent/atomic/AtomicLong.longValue:()J
     296: lreturn
    Exception table:
       from    to  target type
         160   175   178   Class java/lang/IllegalStateException
          24   270   273   any
         273   278   273   any

  public void close() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #9                  // Field flushExecutor:Lorg/apache/bookkeeper/common/util/OrderedExecutor;
       4: invokevirtual #52                 // Method org/apache/bookkeeper/common/util/OrderedExecutor.shutdown:()V
       7: return

  static org.slf4j.Logger access$000();
    Code:
       0: getstatic     #1                  // Field log:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #53                 // class org/apache/bookkeeper/bookie/EntryMemTableWithParallelFlusher
       2: invokestatic  #54                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #1                  // Field log:Lorg/slf4j/Logger;
       8: return
}
