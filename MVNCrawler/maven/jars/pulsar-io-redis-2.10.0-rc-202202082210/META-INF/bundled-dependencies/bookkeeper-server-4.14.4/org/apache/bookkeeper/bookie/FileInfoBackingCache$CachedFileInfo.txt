Compiled from "FileInfoBackingCache.java"
class org.apache.bookkeeper.bookie.FileInfoBackingCache$CachedFileInfo extends org.apache.bookkeeper.bookie.FileInfo {
  final long ledgerId;

  final java.util.concurrent.atomic.AtomicInteger refCount;

  final org.apache.bookkeeper.bookie.FileInfoBackingCache this$0;

  org.apache.bookkeeper.bookie.FileInfoBackingCache$CachedFileInfo(org.apache.bookkeeper.bookie.FileInfoBackingCache, long, java.io.File, byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field this$0:Lorg/apache/bookkeeper/bookie/FileInfoBackingCache;
       5: aload_0
       6: aload         4
       8: aload         5
      10: aload_1
      11: getfield      #4                  // Field org/apache/bookkeeper/bookie/FileInfoBackingCache.fileInfoVersionToWrite:I
      14: invokespecial #5                  // Method org/apache/bookkeeper/bookie/FileInfo."<init>":(Ljava/io/File;[BI)V
      17: aload_0
      18: lload_2
      19: putfield      #6                  // Field ledgerId:J
      22: aload_0
      23: new           #7                  // class java/util/concurrent/atomic/AtomicInteger
      26: dup
      27: iconst_0
      28: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      31: putfield      #9                  // Field refCount:Ljava/util/concurrent/atomic/AtomicInteger;
      34: return

  private boolean markDead();
    Code:
       0: aload_0
       1: getfield      #9                  // Field refCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: iconst_0
       5: ldc           #10                 // int -57005
       7: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
      10: ireturn

  boolean tryRetain();
    Code:
       0: aload_0
       1: getfield      #9                  // Field refCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: istore_1
       8: iload_1
       9: ifge          14
      12: iconst_0
      13: ireturn
      14: aload_0
      15: getfield      #9                  // Field refCount:Ljava/util/concurrent/atomic/AtomicInteger;
      18: iload_1
      19: iload_1
      20: iconst_1
      21: iadd
      22: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
      25: ifeq          30
      28: iconst_1
      29: ireturn
      30: goto          0

  int getRefCount();
    Code:
       0: aload_0
       1: getfield      #9                  // Field refCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  void release();
    Code:
       0: aload_0
       1: getfield      #9                  // Field refCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
       7: ifne          22
      10: aload_0
      11: getfield      #3                  // Field this$0:Lorg/apache/bookkeeper/bookie/FileInfoBackingCache;
      14: aload_0
      15: getfield      #6                  // Field ledgerId:J
      18: aload_0
      19: invokestatic  #14                 // Method org/apache/bookkeeper/bookie/FileInfoBackingCache.access$100:(Lorg/apache/bookkeeper/bookie/FileInfoBackingCache;JLorg/apache/bookkeeper/bookie/FileInfoBackingCache$CachedFileInfo;)V
      22: return

  public java.lang.String toString();
    Code:
       0: new           #15                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #17                 // String CachedFileInfo(ledger=
       9: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #6                  // Field ledgerId:J
      16: invokevirtual #19                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      19: ldc           #20                 // String ,refCount=
      21: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #9                  // Field refCount:Ljava/util/concurrent/atomic/AtomicInteger;
      28: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      31: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      34: ldc           #22                 // String ,closed=
      36: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: invokevirtual #23                 // Method isClosed:()Z
      43: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      46: ldc           #25                 // String ,id=
      48: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_0
      52: invokestatic  #26                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      55: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      58: ldc           #27                 // String )
      60: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: areturn

  static boolean access$000(org.apache.bookkeeper.bookie.FileInfoBackingCache$CachedFileInfo);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method markDead:()Z
       4: ireturn
}
