Compiled from "AbstractConfiguration.java"
public abstract class org.apache.bookkeeper.conf.AbstractConfiguration<T extends org.apache.bookkeeper.conf.AbstractConfiguration> extends org.apache.commons.configuration.CompositeConfiguration {
  private static final org.slf4j.Logger log;

  public static final java.lang.String READ_SYSTEM_PROPERTIES_PROPERTY;

  private static final boolean READ_SYSTEM_PROPERTIES;

  protected static final java.lang.ClassLoader DEFAULT_LOADER;

  protected static final java.lang.String ZK_TIMEOUT;

  protected static final java.lang.String ZK_SERVERS;

  protected static final java.lang.String LEDGER_MANAGER_TYPE;

  protected static final java.lang.String LEDGER_MANAGER_FACTORY_CLASS;

  protected static final java.lang.String ALLOW_SHADED_LEDGER_MANAGER_FACTORY_CLASS;

  protected static final java.lang.String SHADED_LEDGER_MANAGER_FACTORY_CLASS_PREFIX;

  protected static final java.lang.String METADATA_SERVICE_URI;

  protected static final java.lang.String ZK_LEDGERS_ROOT_PATH;

  protected static final java.lang.String ZK_REQUEST_RATE_LIMIT;

  protected static final java.lang.String AVAILABLE_NODE;

  protected static final java.lang.String REREPLICATION_ENTRY_BATCH_SIZE;

  protected static final java.lang.String STORE_SYSTEMTIME_AS_LEDGER_UNDERREPLICATED_MARK_TIME;

  protected static final java.lang.String STORE_SYSTEMTIME_AS_LEDGER_CREATION_TIME;

  protected static final java.lang.String ENABLE_BUSY_WAIT;

  protected static final java.lang.String METASTORE_IMPL_CLASS;

  protected static final java.lang.String METASTORE_MAX_ENTRIES_PER_SCAN;

  protected static final java.lang.String TLS_PROVIDER;

  protected static final java.lang.String TLS_PROVIDER_FACTORY_CLASS;

  protected static final java.lang.String LEDGERID_FORMATTER_CLASS;

  protected static final java.lang.String ENTRY_FORMATTER_CLASS;

  protected static final java.lang.String TLS_CLIENT_AUTHENTICATION;

  protected static final java.lang.String PRESERVE_MDC_FOR_TASK_EXECUTION;

  protected static final java.lang.Class<? extends org.apache.bookkeeper.util.EntryFormatter> DEFAULT_ENTRY_FORMATTER;

  protected static final java.lang.Class<? extends org.apache.bookkeeper.util.LedgerIdFormatter> DEFAULT_LEDGERID_FORMATTER;

  protected static final java.lang.String TLS_CERT_FILES_REFRESH_DURATION_SECONDS;

  protected static final java.lang.String TLS_ENABLED_CIPHER_SUITES;

  protected static final java.lang.String TLS_ENABLED_PROTOCOLS;

  protected static final java.lang.String TLS_KEYSTORE_TYPE;

  protected static final java.lang.String TLS_KEYSTORE;

  protected static final java.lang.String TLS_KEYSTORE_PASSWORD_PATH;

  protected static final java.lang.String TLS_TRUSTSTORE_TYPE;

  protected static final java.lang.String TLS_TRUSTSTORE;

  protected static final java.lang.String TLS_TRUSTSTORE_PASSWORD_PATH;

  protected static final java.lang.String TLS_CERTIFICATE_PATH;

  protected static final java.lang.String NETTY_MAX_FRAME_SIZE;

  protected static final int DEFAULT_NETTY_MAX_FRAME_SIZE;

  protected static final java.lang.String ZK_ENABLE_SECURITY;

  public static final java.lang.String LEDGER_MANAGER_FACTORY_DISABLE_CLASS_CHECK;

  public static final java.lang.String PERMITTED_STARTUP_USERS;

  public static final java.lang.String MIN_NUM_RACKS_PER_WRITE_QUORUM;

  public static final java.lang.String ENFORCE_MIN_NUM_RACKS_PER_WRITE_QUORUM;

  public static final java.lang.String ENFORCE_MIN_NUM_FAULT_DOMAINS_FOR_WRITE;

  public static final java.lang.String IGNORE_LOCAL_NODE_IN_PLACEMENT_POLICY;

  public static final java.lang.String MIN_NUM_ZONES_PER_WRITE_QUORUM;

  public static final java.lang.String DESIRED_NUM_ZONES_PER_WRITE_QUORUM;

  public static final java.lang.String ENFORCE_STRICT_ZONEAWARE_PLACEMENT;

  protected static final java.lang.String ALLOCATOR_POOLING_POLICY;

  protected static final java.lang.String ALLOCATOR_POOLING_CONCURRENCY;

  protected static final java.lang.String ALLOCATOR_OOM_POLICY;

  protected static final java.lang.String ALLOCATOR_LEAK_DETECTION_POLICY;

  public static final java.lang.String LIMIT_STATS_LOGGING;

  protected org.apache.bookkeeper.conf.AbstractConfiguration();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/commons/configuration/CompositeConfiguration."<init>":()V
       4: getstatic     #3                  // Field READ_SYSTEM_PROPERTIES:Z
       7: ifeq          21
      10: aload_0
      11: new           #4                  // class org/apache/commons/configuration/SystemConfiguration
      14: dup
      15: invokespecial #5                  // Method org/apache/commons/configuration/SystemConfiguration."<init>":()V
      18: invokevirtual #6                  // Method addConfiguration:(Lorg/apache/commons/configuration/Configuration;)V
      21: return

  public void setPermittedStartupUsers(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #8                  // String permittedStartupUsers
       3: aload_1
       4: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       7: return

  public java.lang.String[] getPermittedStartupUsers();
    Code:
       0: aload_0
       1: ldc           #8                  // String permittedStartupUsers
       3: invokevirtual #10                 // Method getStringArray:(Ljava/lang/String;)[Ljava/lang/String;
       6: areturn

  public void loadConf(java.net.URL) throws org.apache.commons.configuration.ConfigurationException;
    Code:
       0: new           #11                 // class org/apache/commons/configuration/PropertiesConfiguration
       3: dup
       4: aload_1
       5: invokespecial #12                 // Method org/apache/commons/configuration/PropertiesConfiguration."<init>":(Ljava/net/URL;)V
       8: astore_2
       9: aload_2
      10: invokevirtual #13                 // Method org/apache/commons/configuration/PropertiesConfiguration.getKeys:()Ljava/util/Iterator;
      13: astore_3
      14: aload_3
      15: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          49
      23: aload_3
      24: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #16                 // class java/lang/String
      32: astore        4
      34: aload_0
      35: aload         4
      37: aload_2
      38: aload         4
      40: invokevirtual #17                 // Method org/apache/commons/configuration/PropertiesConfiguration.getProperty:(Ljava/lang/String;)Ljava/lang/Object;
      43: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      46: goto          14
      49: return

  public void loadConf(org.apache.commons.configuration.CompositeConfiguration);
    Code:
       0: aload_1
       1: invokevirtual #18                 // Method org/apache/commons/configuration/CompositeConfiguration.getKeys:()Ljava/util/Iterator;
       4: astore_2
       5: aload_2
       6: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifeq          37
      14: aload_2
      15: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      20: checkcast     #16                 // class java/lang/String
      23: astore_3
      24: aload_0
      25: aload_3
      26: aload_1
      27: aload_3
      28: invokevirtual #19                 // Method org/apache/commons/configuration/CompositeConfiguration.getProperty:(Ljava/lang/String;)Ljava/lang/Object;
      31: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      34: goto          5
      37: return

  public java.lang.String getMetadataServiceUriUnchecked() throws org.apache.bookkeeper.conf.UncheckedConfigurationException;
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method getMetadataServiceUri:()Ljava/lang/String;
       4: areturn
       5: astore_1
       6: new           #22                 // class org/apache/bookkeeper/conf/UncheckedConfigurationException
       9: dup
      10: aload_1
      11: invokespecial #23                 // Method org/apache/bookkeeper/conf/UncheckedConfigurationException."<init>":(Lorg/apache/commons/configuration/ConfigurationException;)V
      14: athrow
    Exception table:
       from    to  target type
           0     4     5   Class org/apache/commons/configuration/ConfigurationException

  public java.lang.String getMetadataServiceUri() throws org.apache.commons.configuration.ConfigurationException;
    Code:
       0: aload_0
       1: ldc           #24                 // String metadataServiceUri
       3: invokevirtual #25                 // Method getString:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: invokestatic  #26                 // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
      11: ifeq          61
      14: aload_0
      15: invokevirtual #27                 // Method getLedgerManagerLayoutStringFromFactoryClass:()Ljava/lang/String;
      18: astore_2
      19: aload_0
      20: invokevirtual #28                 // Method getZkServers:()Ljava/lang/String;
      23: astore_3
      24: aconst_null
      25: aload_3
      26: if_acmpeq     61
      29: ldc           #29                 // String zk+%s://%s%s
      31: iconst_3
      32: anewarray     #30                 // class java/lang/Object
      35: dup
      36: iconst_0
      37: aload_2
      38: aastore
      39: dup
      40: iconst_1
      41: aload_3
      42: ldc           #31                 // String ,
      44: ldc           #32                 // String ;
      46: invokevirtual #33                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      49: aastore
      50: dup
      51: iconst_2
      52: aload_0
      53: invokevirtual #34                 // Method getZkLedgersRootPath:()Ljava/lang/String;
      56: aastore
      57: invokestatic  #35                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      60: astore_1
      61: aload_1
      62: areturn

  public T setMetadataServiceUri(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #24                 // String metadataServiceUri
       3: aload_1
       4: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       7: aload_0
       8: invokevirtual #36                 // Method getThis:()Lorg/apache/bookkeeper/conf/AbstractConfiguration;
      11: areturn

  public java.lang.String getZkServers();
    Code:
       0: aload_0
       1: ldc           #37                 // String zkServers
       3: aconst_null
       4: invokevirtual #38                 // Method getList:(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
       7: astore_1
       8: aconst_null
       9: aload_1
      10: if_acmpeq     23
      13: iconst_0
      14: aload_1
      15: invokeinterface #39,  1           // InterfaceMethod java/util/List.size:()I
      20: if_icmpne     25
      23: aconst_null
      24: areturn
      25: aload_1
      26: ldc           #31                 // String ,
      28: invokestatic  #40                 // Method org/apache/commons/lang/StringUtils.join:(Ljava/util/Collection;Ljava/lang/String;)Ljava/lang/String;
      31: areturn

  public T setZkServers(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #37                 // String zkServers
       3: aload_1
       4: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       7: aload_0
       8: invokevirtual #36                 // Method getThis:()Lorg/apache/bookkeeper/conf/AbstractConfiguration;
      11: areturn

  public int getZkTimeout();
    Code:
       0: aload_0
       1: ldc           #41                 // String zkTimeout
       3: sipush        10000
       6: invokevirtual #42                 // Method getInt:(Ljava/lang/String;I)I
       9: ireturn

  public T setZkTimeout(int);
    Code:
       0: aload_0
       1: ldc           #41                 // String zkTimeout
       3: iload_1
       4: invokestatic  #43                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
       7: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: invokevirtual #36                 // Method getThis:()Lorg/apache/bookkeeper/conf/AbstractConfiguration;
      14: areturn

  public void setLedgerManagerType(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #44                 // String ledgerManagerType
       3: aload_1
       4: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       7: return

  public java.lang.String getLedgerManagerType();
    Code:
       0: aload_0
       1: ldc           #44                 // String ledgerManagerType
       3: invokevirtual #25                 // Method getString:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public T setAllowShadedLedgerManagerFactoryClass(boolean);
    Code:
       0: aload_0
       1: ldc           #45                 // String allowShadedLedgerManagerFactoryClass
       3: iload_1
       4: invokestatic  #46                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: invokevirtual #36                 // Method getThis:()Lorg/apache/bookkeeper/conf/AbstractConfiguration;
      14: areturn

  public boolean isShadedLedgerManagerFactoryClassAllowed();
    Code:
       0: aload_0
       1: ldc           #45                 // String allowShadedLedgerManagerFactoryClass
       3: iconst_0
       4: invokevirtual #47                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public T setShadedLedgerManagerFactoryClassPrefix(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #48                 // String shadedLedgerManagerFactoryClassPrefix
       3: aload_1
       4: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       7: aload_0
       8: invokevirtual #36                 // Method getThis:()Lorg/apache/bookkeeper/conf/AbstractConfiguration;
      11: areturn

  public java.lang.String getShadedLedgerManagerFactoryClassPrefix();
    Code:
       0: aload_0
       1: ldc           #48                 // String shadedLedgerManagerFactoryClassPrefix
       3: ldc           #49                 // String dlshade.
       5: invokevirtual #50                 // Method getString:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public void setLedgerManagerFactoryClassName(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #51                 // String ledgerManagerFactoryClass
       3: aload_1
       4: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       7: return

  public java.lang.String getLedgerManagerFactoryClassName();
    Code:
       0: aload_0
       1: ldc           #51                 // String ledgerManagerFactoryClass
       3: invokevirtual #25                 // Method getString:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public java.lang.String getLedgerManagerLayoutStringFromFactoryClass() throws org.apache.commons.configuration.ConfigurationException;
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method getLedgerManagerFactoryClass:()Ljava/lang/Class;
       4: astore_2
       5: aload_2
       6: ifnonnull     15
       9: ldc           #53                 // String null
      11: astore_1
      12: goto          126
      15: ldc           #54                 // class org/apache/bookkeeper/meta/AbstractZkLedgerManagerFactory
      17: aload_2
      18: invokevirtual #55                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      21: ifne          51
      24: new           #21                 // class org/apache/commons/configuration/ConfigurationException
      27: dup
      28: new           #56                 // class java/lang/StringBuilder
      31: dup
      32: invokespecial #57                 // Method java/lang/StringBuilder."<init>":()V
      35: ldc           #58                 // String metadata service uri is not supported for
      37: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_2
      41: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      44: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokespecial #62                 // Method org/apache/commons/configuration/ConfigurationException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: aload_2
      52: ldc           #63                 // class org/apache/bookkeeper/meta/HierarchicalLedgerManagerFactory
      54: if_acmpne     63
      57: ldc           #64                 // String hierarchical
      59: astore_1
      60: goto          126
      63: aload_2
      64: ldc           #65                 // class org/apache/bookkeeper/meta/FlatLedgerManagerFactory
      66: if_acmpne     75
      69: ldc           #66                 // String flat
      71: astore_1
      72: goto          126
      75: aload_2
      76: ldc           #67                 // class org/apache/bookkeeper/meta/LongHierarchicalLedgerManagerFactory
      78: if_acmpne     87
      81: ldc           #68                 // String longhierarchical
      83: astore_1
      84: goto          126
      87: aload_2
      88: ldc           #69                 // class org/apache/bookkeeper/meta/MSLedgerManagerFactory
      90: if_acmpne     99
      93: ldc           #70                 // String ms
      95: astore_1
      96: goto          126
      99: new           #71                 // class java/lang/IllegalArgumentException
     102: dup
     103: new           #56                 // class java/lang/StringBuilder
     106: dup
     107: invokespecial #57                 // Method java/lang/StringBuilder."<init>":()V
     110: ldc           #72                 // String Unknown zookeeper based ledger manager factory :
     112: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: aload_2
     116: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     119: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     122: invokespecial #73                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     125: athrow
     126: aload_1
     127: areturn

  public void setLedgerManagerFactoryClass(java.lang.Class<? extends org.apache.bookkeeper.meta.LedgerManagerFactory>);
    Code:
       0: aload_0
       1: ldc           #51                 // String ledgerManagerFactoryClass
       3: aload_1
       4: invokevirtual #74                 // Method java/lang/Class.getName:()Ljava/lang/String;
       7: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public java.lang.Class<? extends org.apache.bookkeeper.meta.LedgerManagerFactory> getLedgerManagerFactoryClass() throws org.apache.commons.configuration.ConfigurationException;
    Code:
       0: aload_0
       1: ldc           #51                 // String ledgerManagerFactoryClass
       3: aconst_null
       4: ldc           #75                 // class org/apache/bookkeeper/meta/LedgerManagerFactory
       6: getstatic     #76                 // Field DEFAULT_LOADER:Ljava/lang/ClassLoader;
       9: invokestatic  #77                 // Method org/apache/bookkeeper/common/util/ReflectionUtils.getClass:(Lorg/apache/commons/configuration/Configuration;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Class;
      12: areturn

  public void setZkLedgersRootPath(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #78                 // String zkLedgersRootPath
       3: aload_1
       4: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       7: return

  public java.lang.String getZkLedgersRootPath();
    Code:
       0: aload_0
       1: ldc           #78                 // String zkLedgersRootPath
       3: ldc           #79                 // String /ledgers
       5: invokevirtual #50                 // Method getString:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public double getZkRequestRateLimit();
    Code:
       0: aload_0
       1: ldc           #80                 // String zkRequestRateLimit
       3: dconst_0
       4: invokevirtual #81                 // Method getDouble:(Ljava/lang/String;D)D
       7: dreturn

  public void setZkRequestRateLimit(double);
    Code:
       0: aload_0
       1: ldc           #80                 // String zkRequestRateLimit
       3: dload_1
       4: invokestatic  #82                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
       7: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public boolean isZkEnableSecurity();
    Code:
       0: aload_0
       1: ldc           #83                 // String zkEnableSecurity
       3: iconst_0
       4: invokevirtual #47                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public void setZkEnableSecurity(boolean);
    Code:
       0: aload_0
       1: ldc           #83                 // String zkEnableSecurity
       3: iload_1
       4: invokestatic  #46                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public java.lang.String getZkAvailableBookiesPath();
    Code:
       0: new           #56                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #57                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #34                 // Method getZkLedgersRootPath:()Ljava/lang/String;
      11: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #84                 // String /
      16: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #85                 // String available
      21: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public void setRereplicationEntryBatchSize(long);
    Code:
       0: aload_0
       1: ldc           #86                 // String rereplicationEntryBatchSize
       3: lload_1
       4: invokestatic  #87                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       7: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public long getRereplicationEntryBatchSize();
    Code:
       0: aload_0
       1: ldc           #86                 // String rereplicationEntryBatchSize
       3: ldc2_w        #88                 // long 10l
       6: invokevirtual #90                 // Method getLong:(Ljava/lang/String;J)J
       9: lreturn

  public java.lang.String getMetastoreImplClass();
    Code:
       0: aload_0
       1: ldc           #91                 // String metastoreImplClass
       3: invokevirtual #25                 // Method getString:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setMetastoreImplClass(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #91                 // String metastoreImplClass
       3: aload_1
       4: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       7: return

  public int getMetastoreMaxEntriesPerScan();
    Code:
       0: aload_0
       1: ldc           #92                 // String metastoreMaxEntriesPerScan
       3: bipush        50
       5: invokevirtual #42                 // Method getInt:(Ljava/lang/String;I)I
       8: ireturn

  public void setMetastoreMaxEntriesPerScan(int);
    Code:
       0: aload_0
       1: ldc           #92                 // String metastoreMaxEntriesPerScan
       3: iload_1
       4: invokestatic  #93                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public void setFeature(java.lang.String, org.apache.bookkeeper.feature.Feature);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       6: return

  public org.apache.bookkeeper.feature.Feature getFeature(java.lang.String, org.apache.bookkeeper.feature.Feature);
    Code:
       0: aconst_null
       1: aload_0
       2: aload_1
       3: invokevirtual #94                 // Method getProperty:(Ljava/lang/String;)Ljava/lang/Object;
       6: if_acmpne     11
       9: aload_2
      10: areturn
      11: aload_0
      12: aload_1
      13: invokevirtual #94                 // Method getProperty:(Ljava/lang/String;)Ljava/lang/Object;
      16: checkcast     #95                 // class org/apache/bookkeeper/feature/Feature
      19: areturn

  public void setLedgerIdFormatterClass(java.lang.Class<? extends org.apache.bookkeeper.util.LedgerIdFormatter>);
    Code:
       0: aload_0
       1: ldc           #96                 // String ledgerIdFormatterClass
       3: aload_1
       4: invokevirtual #74                 // Method java/lang/Class.getName:()Ljava/lang/String;
       7: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public java.lang.Class<? extends org.apache.bookkeeper.util.LedgerIdFormatter> getLedgerIdFormatterClass() throws org.apache.commons.configuration.ConfigurationException;
    Code:
       0: aload_0
       1: ldc           #96                 // String ledgerIdFormatterClass
       3: getstatic     #97                 // Field DEFAULT_LEDGERID_FORMATTER:Ljava/lang/Class;
       6: ldc           #98                 // class org/apache/bookkeeper/util/LedgerIdFormatter
       8: getstatic     #76                 // Field DEFAULT_LOADER:Ljava/lang/ClassLoader;
      11: invokestatic  #77                 // Method org/apache/bookkeeper/common/util/ReflectionUtils.getClass:(Lorg/apache/commons/configuration/Configuration;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Class;
      14: areturn

  public void setEntryFormatterClass(java.lang.Class<? extends org.apache.bookkeeper.util.EntryFormatter>);
    Code:
       0: aload_0
       1: ldc           #99                 // String entryFormatterClass
       3: aload_1
       4: invokevirtual #74                 // Method java/lang/Class.getName:()Ljava/lang/String;
       7: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public java.lang.Class<? extends org.apache.bookkeeper.util.EntryFormatter> getEntryFormatterClass() throws org.apache.commons.configuration.ConfigurationException;
    Code:
       0: aload_0
       1: ldc           #99                 // String entryFormatterClass
       3: getstatic     #100                // Field DEFAULT_ENTRY_FORMATTER:Ljava/lang/Class;
       6: ldc           #101                // class org/apache/bookkeeper/util/EntryFormatter
       8: getstatic     #76                 // Field DEFAULT_LOADER:Ljava/lang/ClassLoader;
      11: invokestatic  #77                 // Method org/apache/bookkeeper/common/util/ReflectionUtils.getClass:(Lorg/apache/commons/configuration/Configuration;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Class;
      14: areturn

  public T setClientAuthProviderFactoryClass(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #102                // String clientAuthProviderFactoryClass
       3: aload_1
       4: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       7: aload_0
       8: invokevirtual #36                 // Method getThis:()Lorg/apache/bookkeeper/conf/AbstractConfiguration;
      11: areturn

  public java.lang.String getClientAuthProviderFactoryClass();
    Code:
       0: aload_0
       1: ldc           #102                // String clientAuthProviderFactoryClass
       3: aconst_null
       4: invokevirtual #50                 // Method getString:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public int getNettyMaxFrameSizeBytes();
    Code:
       0: aload_0
       1: ldc           #103                // String nettyMaxFrameSizeBytes
       3: ldc           #104                // int 5242880
       5: invokevirtual #42                 // Method getInt:(Ljava/lang/String;I)I
       8: ireturn

  public T setNettyMaxFrameSizeBytes(int);
    Code:
       0: aload_0
       1: ldc           #103                // String nettyMaxFrameSizeBytes
       3: iload_1
       4: invokestatic  #105                // Method java/lang/String.valueOf:(I)Ljava/lang/String;
       7: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: invokevirtual #36                 // Method getThis:()Lorg/apache/bookkeeper/conf/AbstractConfiguration;
      14: areturn

  public java.lang.String getTLSProviderFactoryClass();
    Code:
       0: aload_0
       1: ldc           #106                // String tlsProviderFactoryClass
       3: aconst_null
       4: invokevirtual #50                 // Method getString:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public T setTLSProviderFactoryClass(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #106                // String tlsProviderFactoryClass
       3: aload_1
       4: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       7: aload_0
       8: invokevirtual #36                 // Method getThis:()Lorg/apache/bookkeeper/conf/AbstractConfiguration;
      11: areturn

  public java.lang.String getTLSProvider();
    Code:
       0: aload_0
       1: ldc           #107                // String tlsProvider
       3: ldc           #108                // String OpenSSL
       5: invokevirtual #50                 // Method getString:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public T setTLSProvider(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #107                // String tlsProvider
       3: aload_1
       4: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       7: aload_0
       8: invokevirtual #36                 // Method getThis:()Lorg/apache/bookkeeper/conf/AbstractConfiguration;
      11: areturn

  public boolean getTLSClientAuthentication();
    Code:
       0: aload_0
       1: ldc           #109                // String tlsClientAuthentication
       3: iconst_0
       4: invokevirtual #47                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public T setTLSClientAuthentication(boolean);
    Code:
       0: aload_0
       1: ldc           #109                // String tlsClientAuthentication
       3: iload_1
       4: invokestatic  #46                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: invokevirtual #36                 // Method getThis:()Lorg/apache/bookkeeper/conf/AbstractConfiguration;
      14: areturn

  public T setTLSCertFilesRefreshDurationSeconds(long);
    Code:
       0: aload_0
       1: ldc           #110                // String tlsCertFilesRefreshDurationSeconds
       3: lload_1
       4: invokestatic  #87                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       7: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: invokevirtual #36                 // Method getThis:()Lorg/apache/bookkeeper/conf/AbstractConfiguration;
      14: areturn

  public long getTLSCertFilesRefreshDurationSeconds();
    Code:
       0: aload_0
       1: ldc           #110                // String tlsCertFilesRefreshDurationSeconds
       3: lconst_0
       4: invokevirtual #90                 // Method getLong:(Ljava/lang/String;J)J
       7: lreturn

  public T setTLSEnabledCipherSuites(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #111                // String tlsEnabledCipherSuites
       3: aload_1
       4: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       7: aload_0
       8: invokevirtual #36                 // Method getThis:()Lorg/apache/bookkeeper/conf/AbstractConfiguration;
      11: areturn

  public java.lang.String getTLSEnabledCipherSuites();
    Code:
       0: aload_0
       1: ldc           #111                // String tlsEnabledCipherSuites
       3: aconst_null
       4: invokevirtual #50                 // Method getString:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public T setTLSEnabledProtocols(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #112                // String tlsEnabledProtocols
       3: aload_1
       4: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       7: aload_0
       8: invokevirtual #36                 // Method getThis:()Lorg/apache/bookkeeper/conf/AbstractConfiguration;
      11: areturn

  public java.lang.String getTLSEnabledProtocols();
    Code:
       0: aload_0
       1: ldc           #112                // String tlsEnabledProtocols
       3: aconst_null
       4: invokevirtual #50                 // Method getString:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public void setMinNumRacksPerWriteQuorum(int);
    Code:
       0: aload_0
       1: ldc           #113                // String minNumRacksPerWriteQuorum
       3: iload_1
       4: invokestatic  #93                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public int getMinNumRacksPerWriteQuorum();
    Code:
       0: aload_0
       1: ldc           #113                // String minNumRacksPerWriteQuorum
       3: iconst_2
       4: invokestatic  #93                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #114                // Method getInteger:(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;
      10: invokevirtual #115                // Method java/lang/Integer.intValue:()I
      13: ireturn

  public void setMinNumZonesPerWriteQuorum(int);
    Code:
       0: aload_0
       1: ldc           #116                // String minNumZonesPerWriteQuorum
       3: iload_1
       4: invokestatic  #93                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public int getMinNumZonesPerWriteQuorum();
    Code:
       0: aload_0
       1: ldc           #116                // String minNumZonesPerWriteQuorum
       3: iconst_2
       4: invokestatic  #93                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #114                // Method getInteger:(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;
      10: invokevirtual #115                // Method java/lang/Integer.intValue:()I
      13: ireturn

  public void setDesiredNumZonesPerWriteQuorum(int);
    Code:
       0: aload_0
       1: ldc           #117                // String desiredNumZonesPerWriteQuorum
       3: iload_1
       4: invokestatic  #93                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public int getDesiredNumZonesPerWriteQuorum();
    Code:
       0: aload_0
       1: ldc           #117                // String desiredNumZonesPerWriteQuorum
       3: iconst_3
       4: invokestatic  #93                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #114                // Method getInteger:(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;
      10: invokevirtual #115                // Method java/lang/Integer.intValue:()I
      13: ireturn

  public void setEnforceStrictZoneawarePlacement(boolean);
    Code:
       0: aload_0
       1: ldc           #118                // String enforceStrictZoneawarePlacement
       3: iload_1
       4: invokestatic  #46                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public boolean getEnforceStrictZoneawarePlacement();
    Code:
       0: aload_0
       1: ldc           #118                // String enforceStrictZoneawarePlacement
       3: iconst_1
       4: invokevirtual #47                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public void setEnforceMinNumRacksPerWriteQuorum(boolean);
    Code:
       0: aload_0
       1: ldc           #119                // String enforceMinNumRacksPerWriteQuorum
       3: iload_1
       4: invokestatic  #46                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public boolean getEnforceMinNumRacksPerWriteQuorum();
    Code:
       0: aload_0
       1: ldc           #119                // String enforceMinNumRacksPerWriteQuorum
       3: iconst_0
       4: invokevirtual #47                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public void setEnforceMinNumFaultDomainsForWrite(boolean);
    Code:
       0: aload_0
       1: ldc           #120                // String enforceMinNumFaultDomainsForWrite
       3: iload_1
       4: invokestatic  #46                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public boolean getEnforceMinNumFaultDomainsForWrite();
    Code:
       0: aload_0
       1: ldc           #120                // String enforceMinNumFaultDomainsForWrite
       3: iconst_0
       4: invokevirtual #47                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public void setIgnoreLocalNodeInPlacementPolicy(boolean);
    Code:
       0: aload_0
       1: ldc           #121                // String ignoreLocalNodeInPlacementPolicy
       3: iload_1
       4: invokestatic  #46                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public boolean getIgnoreLocalNodeInPlacementPolicy();
    Code:
       0: aload_0
       1: ldc           #121                // String ignoreLocalNodeInPlacementPolicy
       3: iconst_0
       4: invokevirtual #47                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public T setStoreSystemTimeAsLedgerUnderreplicatedMarkTime(boolean);
    Code:
       0: aload_0
       1: ldc           #122                // String storeSystemTimeAsLedgerUnderreplicatedMarkTime
       3: iload_1
       4: invokestatic  #46                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: invokevirtual #36                 // Method getThis:()Lorg/apache/bookkeeper/conf/AbstractConfiguration;
      14: areturn

  public boolean getStoreSystemTimeAsLedgerUnderreplicatedMarkTime();
    Code:
       0: aload_0
       1: ldc           #122                // String storeSystemTimeAsLedgerUnderreplicatedMarkTime
       3: iconst_1
       4: invokevirtual #47                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public boolean getPreserveMdcForTaskExecution();
    Code:
       0: aload_0
       1: ldc           #123                // String preserveMdcForTaskExecution
       3: iconst_0
       4: invokevirtual #47                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public T setPreserveMdcForTaskExecution(boolean);
    Code:
       0: aload_0
       1: ldc           #123                // String preserveMdcForTaskExecution
       3: iload_1
       4: invokestatic  #46                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: invokevirtual #36                 // Method getThis:()Lorg/apache/bookkeeper/conf/AbstractConfiguration;
      14: areturn

  public org.apache.bookkeeper.common.allocator.PoolingPolicy getAllocatorPoolingPolicy();
    Code:
       0: aload_0
       1: ldc           #124                // String allocatorPoolingPolicy
       3: getstatic     #125                // Field org/apache/bookkeeper/common/allocator/PoolingPolicy.PooledDirect:Lorg/apache/bookkeeper/common/allocator/PoolingPolicy;
       6: invokevirtual #126                // Method org/apache/bookkeeper/common/allocator/PoolingPolicy.toString:()Ljava/lang/String;
       9: invokevirtual #50                 // Method getString:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      12: invokestatic  #127                // Method org/apache/bookkeeper/common/allocator/PoolingPolicy.valueOf:(Ljava/lang/String;)Lorg/apache/bookkeeper/common/allocator/PoolingPolicy;
      15: areturn

  public T setAllocatorPoolingPolicy(org.apache.bookkeeper.common.allocator.PoolingPolicy);
    Code:
       0: aload_0
       1: ldc           #124                // String allocatorPoolingPolicy
       3: aload_1
       4: invokevirtual #126                // Method org/apache/bookkeeper/common/allocator/PoolingPolicy.toString:()Ljava/lang/String;
       7: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: invokevirtual #36                 // Method getThis:()Lorg/apache/bookkeeper/conf/AbstractConfiguration;
      14: areturn

  public int getAllocatorPoolingConcurrency();
    Code:
       0: aload_0
       1: ldc           #128                // String allocatorPoolingConcurrency
       3: iconst_2
       4: invokestatic  #129                // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
       7: invokevirtual #130                // Method java/lang/Runtime.availableProcessors:()I
      10: imul
      11: invokestatic  #93                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      14: invokevirtual #114                // Method getInteger:(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;
      17: invokevirtual #115                // Method java/lang/Integer.intValue:()I
      20: ireturn

  public T setAllocatorPoolingConcurrenncy(int);
    Code:
       0: aload_0
       1: ldc           #124                // String allocatorPoolingPolicy
       3: iload_1
       4: invokestatic  #93                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: invokevirtual #36                 // Method getThis:()Lorg/apache/bookkeeper/conf/AbstractConfiguration;
      14: areturn

  public org.apache.bookkeeper.common.allocator.OutOfMemoryPolicy getAllocatorOutOfMemoryPolicy();
    Code:
       0: aload_0
       1: ldc           #131                // String allocatorOutOfMemoryPolicy
       3: getstatic     #132                // Field org/apache/bookkeeper/common/allocator/OutOfMemoryPolicy.FallbackToHeap:Lorg/apache/bookkeeper/common/allocator/OutOfMemoryPolicy;
       6: invokevirtual #133                // Method org/apache/bookkeeper/common/allocator/OutOfMemoryPolicy.toString:()Ljava/lang/String;
       9: invokevirtual #50                 // Method getString:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      12: invokestatic  #134                // Method org/apache/bookkeeper/common/allocator/OutOfMemoryPolicy.valueOf:(Ljava/lang/String;)Lorg/apache/bookkeeper/common/allocator/OutOfMemoryPolicy;
      15: areturn

  public T setAllocatorOutOfMemoryPolicy(org.apache.bookkeeper.common.allocator.OutOfMemoryPolicy);
    Code:
       0: aload_0
       1: ldc           #131                // String allocatorOutOfMemoryPolicy
       3: aload_1
       4: invokevirtual #133                // Method org/apache/bookkeeper/common/allocator/OutOfMemoryPolicy.toString:()Ljava/lang/String;
       7: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: invokevirtual #36                 // Method getThis:()Lorg/apache/bookkeeper/conf/AbstractConfiguration;
      14: areturn

  public org.apache.bookkeeper.common.allocator.LeakDetectionPolicy getAllocatorLeakDetectionPolicy();
    Code:
       0: aload_0
       1: ldc           #135                // String allocatorLeakDetectionPolicy
       3: getstatic     #136                // Field org/apache/bookkeeper/common/allocator/LeakDetectionPolicy.Disabled:Lorg/apache/bookkeeper/common/allocator/LeakDetectionPolicy;
       6: invokevirtual #137                // Method org/apache/bookkeeper/common/allocator/LeakDetectionPolicy.toString:()Ljava/lang/String;
       9: invokevirtual #50                 // Method getString:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      12: invokestatic  #138                // Method org/apache/bookkeeper/common/allocator/LeakDetectionPolicy.valueOf:(Ljava/lang/String;)Lorg/apache/bookkeeper/common/allocator/LeakDetectionPolicy;
      15: areturn

  public T setAllocatorLeakDetectionPolicy(org.apache.bookkeeper.common.allocator.LeakDetectionPolicy);
    Code:
       0: aload_0
       1: ldc           #135                // String allocatorLeakDetectionPolicy
       3: aload_1
       4: invokevirtual #137                // Method org/apache/bookkeeper/common/allocator/LeakDetectionPolicy.toString:()Ljava/lang/String;
       7: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: invokevirtual #36                 // Method getThis:()Lorg/apache/bookkeeper/conf/AbstractConfiguration;
      14: areturn

  public boolean isBusyWaitEnabled();
    Code:
       0: aload_0
       1: ldc           #139                // String enableBusyWait
       3: iconst_0
       4: invokevirtual #47                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public T setBusyWaitEnabled(boolean);
    Code:
       0: aload_0
       1: ldc           #139                // String enableBusyWait
       3: iload_1
       4: invokestatic  #46                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: invokevirtual #36                 // Method getThis:()Lorg/apache/bookkeeper/conf/AbstractConfiguration;
      14: areturn

  public boolean getLimitStatsLogging();
    Code:
       0: aload_0
       1: ldc           #140                // String limitStatsLogging
       3: iconst_0
       4: invokevirtual #47                 // Method getBoolean:(Ljava/lang/String;Z)Z
       7: ireturn

  public T setLimitStatsLogging(boolean);
    Code:
       0: aload_0
       1: ldc           #140                // String limitStatsLogging
       3: iload_1
       4: invokestatic  #46                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #9                  // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: invokevirtual #36                 // Method getThis:()Lorg/apache/bookkeeper/conf/AbstractConfiguration;
      14: areturn

  protected abstract T getThis();

  public java.lang.String asJson() throws org.apache.bookkeeper.common.util.JsonUtil$ParseJsonException;
    Code:
       0: aload_0
       1: invokespecial #141                // Method toMap:()Ljava/util/Map;
       4: invokestatic  #142                // Method org/apache/bookkeeper/common/util/JsonUtil.toJson:(Ljava/lang/Object;)Ljava/lang/String;
       7: areturn

  private java.util.Map<java.lang.String, java.lang.Object> toMap();
    Code:
       0: new           #143                // class java/util/HashMap
       3: dup
       4: invokespecial #144                // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #145                // Method getKeys:()Ljava/util/Iterator;
      12: astore_2
      13: aload_2
      14: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          63
      22: aload_2
      23: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #16                 // class java/lang/String
      31: invokevirtual #146                // Method java/lang/String.toString:()Ljava/lang/String;
      34: astore_3
      35: aload_0
      36: aload_3
      37: invokevirtual #94                 // Method getProperty:(Ljava/lang/String;)Ljava/lang/Object;
      40: astore        4
      42: aload         4
      44: ifnull        60
      47: aload_1
      48: aload_3
      49: aload         4
      51: invokevirtual #147                // Method java/lang/Object.toString:()Ljava/lang/String;
      54: invokeinterface #148,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      59: pop
      60: goto          13
      63: aload_1
      64: areturn

  static {};
    Code:
       0: ldc           #7                  // class org/apache/bookkeeper/conf/AbstractConfiguration
       2: invokestatic  #149                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #150                // Field log:Lorg/slf4j/Logger;
       8: ldc           #151                // String org.apache.bookkeeper.conf.readsystemproperties
      10: invokestatic  #152                // Method java/lang/Boolean.getBoolean:(Ljava/lang/String;)Z
      13: putstatic     #3                  // Field READ_SYSTEM_PROPERTIES:Z
      16: invokestatic  #153                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      19: invokevirtual #154                // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
      22: astore_0
      23: aconst_null
      24: aload_0
      25: if_acmpne     34
      28: ldc           #7                  // class org/apache/bookkeeper/conf/AbstractConfiguration
      30: invokevirtual #155                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      33: astore_0
      34: aload_0
      35: putstatic     #76                 // Field DEFAULT_LOADER:Ljava/lang/ClassLoader;
      38: ldc           #156                // class org/apache/bookkeeper/util/StringEntryFormatter
      40: putstatic     #100                // Field DEFAULT_ENTRY_FORMATTER:Ljava/lang/Class;
      43: ldc           #157                // class org/apache/bookkeeper/util/LedgerIdFormatter$LongLedgerIdFormatter
      45: putstatic     #97                 // Field DEFAULT_LEDGERID_FORMATTER:Ljava/lang/Class;
      48: return
}
