Compiled from "LedgerEntryPage.java"
public class org.apache.bookkeeper.bookie.LedgerEntryPage implements java.lang.AutoCloseable {
  private static final org.slf4j.Logger LOG;

  private static final int indexEntrySize;

  private final int pageSize;

  private final int entriesPerPage;

  private volatile org.apache.bookkeeper.bookie.EntryKey entryKey;

  private final java.nio.ByteBuffer page;

  private volatile boolean clean;

  private final java.util.concurrent.atomic.AtomicInteger useCount;

  private final java.util.concurrent.atomic.AtomicInteger version;

  private volatile int last;

  private final org.apache.bookkeeper.bookie.LEPStateChangeCallback callback;

  private boolean deleted;

  public static int getIndexEntrySize();
    Code:
       0: bipush        8
       2: ireturn

  public org.apache.bookkeeper.bookie.LedgerEntryPage(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aconst_null
       4: invokespecial #3                  // Method "<init>":(IILorg/apache/bookkeeper/bookie/LEPStateChangeCallback;)V
       7: return

  public org.apache.bookkeeper.bookie.LedgerEntryPage(int, int, org.apache.bookkeeper.bookie.LEPStateChangeCallback);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class org/apache/bookkeeper/bookie/EntryKey
       8: dup
       9: ldc2_w        #6                  // long -1l
      12: ldc2_w        #6                  // long -1l
      15: invokespecial #9                  // Method org/apache/bookkeeper/bookie/EntryKey."<init>":(JJ)V
      18: putfield      #10                 // Field entryKey:Lorg/apache/bookkeeper/bookie/EntryKey;
      21: aload_0
      22: iconst_1
      23: putfield      #11                 // Field clean:Z
      26: aload_0
      27: new           #12                 // class java/util/concurrent/atomic/AtomicInteger
      30: dup
      31: iconst_0
      32: invokespecial #13                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      35: putfield      #14                 // Field useCount:Ljava/util/concurrent/atomic/AtomicInteger;
      38: aload_0
      39: new           #12                 // class java/util/concurrent/atomic/AtomicInteger
      42: dup
      43: iconst_0
      44: invokespecial #13                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      47: putfield      #15                 // Field version:Ljava/util/concurrent/atomic/AtomicInteger;
      50: aload_0
      51: iconst_m1
      52: putfield      #16                 // Field last:I
      55: aload_0
      56: iload_1
      57: putfield      #17                 // Field pageSize:I
      60: aload_0
      61: iload_2
      62: putfield      #1                  // Field entriesPerPage:I
      65: aload_0
      66: iload_1
      67: invokestatic  #18                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      70: putfield      #19                 // Field page:Ljava/nio/ByteBuffer;
      73: aload_0
      74: aload_3
      75: putfield      #20                 // Field callback:Lorg/apache/bookkeeper/bookie/LEPStateChangeCallback;
      78: aconst_null
      79: aload_0
      80: getfield      #20                 // Field callback:Lorg/apache/bookkeeper/bookie/LEPStateChangeCallback;
      83: if_acmpeq     93
      86: aload_3
      87: aload_0
      88: invokeinterface #21,  2           // InterfaceMethod org/apache/bookkeeper/bookie/LEPStateChangeCallback.onResetInUse:(Lorg/apache/bookkeeper/bookie/LedgerEntryPage;)V
      93: return

  public void resetPage();
    Code:
       0: aload_0
       1: getfield      #19                 // Field page:Ljava/nio/ByteBuffer;
       4: invokevirtual #22                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
       7: pop
       8: aload_0
       9: getfield      #19                 // Field page:Ljava/nio/ByteBuffer;
      12: invokestatic  #23                 // Method org/apache/bookkeeper/util/ZeroBuffer.put:(Ljava/nio/ByteBuffer;)V
      15: aload_0
      16: iconst_m1
      17: putfield      #16                 // Field last:I
      20: aload_0
      21: new           #5                  // class org/apache/bookkeeper/bookie/EntryKey
      24: dup
      25: ldc2_w        #6                  // long -1l
      28: ldc2_w        #6                  // long -1l
      31: invokespecial #9                  // Method org/apache/bookkeeper/bookie/EntryKey."<init>":(JJ)V
      34: putfield      #10                 // Field entryKey:Lorg/apache/bookkeeper/bookie/EntryKey;
      37: aload_0
      38: iconst_1
      39: putfield      #11                 // Field clean:Z
      42: aload_0
      43: getfield      #14                 // Field useCount:Ljava/util/concurrent/atomic/AtomicInteger;
      46: iconst_0
      47: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      50: aload_0
      51: iconst_0
      52: putfield      #25                 // Field deleted:Z
      55: aconst_null
      56: aload_0
      57: getfield      #20                 // Field callback:Lorg/apache/bookkeeper/bookie/LEPStateChangeCallback;
      60: if_acmpeq     73
      63: aload_0
      64: getfield      #20                 // Field callback:Lorg/apache/bookkeeper/bookie/LEPStateChangeCallback;
      67: aload_0
      68: invokeinterface #21,  2           // InterfaceMethod org/apache/bookkeeper/bookie/LEPStateChangeCallback.onResetInUse:(Lorg/apache/bookkeeper/bookie/LedgerEntryPage;)V
      73: return

  public void markDeleted();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #25                 // Field deleted:Z
       5: aload_0
       6: getfield      #15                 // Field version:Ljava/util/concurrent/atomic/AtomicInteger;
       9: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      12: pop
      13: return

  public boolean isDeleted();
    Code:
       0: aload_0
       1: getfield      #25                 // Field deleted:Z
       4: ireturn

  public java.lang.String toString();
    Code:
       0: new           #27                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #29                 // Method getLedger:()J
      13: invokevirtual #30                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      16: pop
      17: aload_1
      18: bipush        64
      20: invokevirtual #31                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      23: pop
      24: aload_1
      25: aload_0
      26: invokevirtual #32                 // Method getFirstEntry:()J
      29: invokevirtual #30                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      32: pop
      33: aload_1
      34: aload_0
      35: getfield      #11                 // Field clean:Z
      38: ifeq          46
      41: ldc           #33                 // String  clean
      43: goto          48
      46: ldc           #34                 // String  dirty
      48: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: pop
      52: aload_1
      53: aload_0
      54: getfield      #14                 // Field useCount:Ljava/util/concurrent/atomic/AtomicInteger;
      57: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      60: invokevirtual #37                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      63: pop
      64: aload_1
      65: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: areturn

  public void usePage();
    Code:
       0: aload_0
       1: getfield      #14                 // Field useCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #39                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
       7: istore_1
       8: iconst_0
       9: iload_1
      10: if_icmpne     31
      13: aconst_null
      14: aload_0
      15: getfield      #20                 // Field callback:Lorg/apache/bookkeeper/bookie/LEPStateChangeCallback;
      18: if_acmpeq     31
      21: aload_0
      22: getfield      #20                 // Field callback:Lorg/apache/bookkeeper/bookie/LEPStateChangeCallback;
      25: aload_0
      26: invokeinterface #40,  2           // InterfaceMethod org/apache/bookkeeper/bookie/LEPStateChangeCallback.onSetInUse:(Lorg/apache/bookkeeper/bookie/LedgerEntryPage;)V
      31: return

  public void releasePageNoCallback();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #41                 // Method releasePageInternal:(Z)V
       5: return

  public void releasePage();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #41                 // Method releasePageInternal:(Z)V
       5: return

  private void releasePageInternal(boolean);
    Code:
       0: aload_0
       1: getfield      #14                 // Field useCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
       7: istore_2
       8: iload_2
       9: ifge          22
      12: new           #43                 // class java/lang/IllegalStateException
      15: dup
      16: ldc           #44                 // String Use count has gone below 0
      18: invokespecial #45                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: iload_1
      23: ifeq          48
      26: aconst_null
      27: aload_0
      28: getfield      #20                 // Field callback:Lorg/apache/bookkeeper/bookie/LEPStateChangeCallback;
      31: if_acmpeq     48
      34: iload_2
      35: ifne          48
      38: aload_0
      39: getfield      #20                 // Field callback:Lorg/apache/bookkeeper/bookie/LEPStateChangeCallback;
      42: aload_0
      43: invokeinterface #21,  2           // InterfaceMethod org/apache/bookkeeper/bookie/LEPStateChangeCallback.onResetInUse:(Lorg/apache/bookkeeper/bookie/LedgerEntryPage;)V
      48: return

  private void checkPage();
    Code:
       0: aload_0
       1: getfield      #14                 // Field useCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifgt          20
      10: new           #43                 // class java/lang/IllegalStateException
      13: dup
      14: ldc           #46                 // String Page not marked in use
      16: invokespecial #45                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class org/apache/bookkeeper/bookie/LedgerEntryPage
       4: ifeq          42
       7: aload_1
       8: checkcast     #2                  // class org/apache/bookkeeper/bookie/LedgerEntryPage
      11: astore_2
      12: aload_2
      13: invokevirtual #29                 // Method getLedger:()J
      16: aload_0
      17: invokevirtual #29                 // Method getLedger:()J
      20: lcmp
      21: ifne          40
      24: aload_2
      25: invokevirtual #32                 // Method getFirstEntry:()J
      28: aload_0
      29: invokevirtual #32                 // Method getFirstEntry:()J
      32: lcmp
      33: ifne          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn
      42: iconst_0
      43: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method getLedger:()J
       4: l2i
       5: aload_0
       6: invokevirtual #32                 // Method getFirstEntry:()J
       9: l2i
      10: ixor
      11: ireturn

  void setClean(int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_0
       3: getfield      #15                 // Field version:Ljava/util/concurrent/atomic/AtomicInteger;
       6: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       9: if_icmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: putfield      #11                 // Field clean:Z
      20: aconst_null
      21: aload_0
      22: getfield      #20                 // Field callback:Lorg/apache/bookkeeper/bookie/LEPStateChangeCallback;
      25: if_acmpeq     45
      28: aload_0
      29: getfield      #11                 // Field clean:Z
      32: ifeq          45
      35: aload_0
      36: getfield      #20                 // Field callback:Lorg/apache/bookkeeper/bookie/LEPStateChangeCallback;
      39: aload_0
      40: invokeinterface #47,  2           // InterfaceMethod org/apache/bookkeeper/bookie/LEPStateChangeCallback.onSetClean:(Lorg/apache/bookkeeper/bookie/LedgerEntryPage;)V
      45: return

  boolean isClean();
    Code:
       0: aload_0
       1: getfield      #11                 // Field clean:Z
       4: ireturn

  public void setOffset(long, int);
    Code:
       0: aload_0
       1: invokespecial #48                 // Method checkPage:()V
       4: aload_0
       5: getfield      #19                 // Field page:Ljava/nio/ByteBuffer;
       8: iload_3
       9: lload_1
      10: invokevirtual #49                 // Method java/nio/ByteBuffer.putLong:(IJ)Ljava/nio/ByteBuffer;
      13: pop
      14: aload_0
      15: getfield      #15                 // Field version:Ljava/util/concurrent/atomic/AtomicInteger;
      18: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      21: pop
      22: aload_0
      23: getfield      #16                 // Field last:I
      26: iload_3
      27: invokestatic  #50                 // Method getIndexEntrySize:()I
      30: idiv
      31: if_icmpge     43
      34: aload_0
      35: iload_3
      36: invokestatic  #50                 // Method getIndexEntrySize:()I
      39: idiv
      40: putfield      #16                 // Field last:I
      43: aload_0
      44: iconst_0
      45: putfield      #11                 // Field clean:Z
      48: aconst_null
      49: aload_0
      50: getfield      #20                 // Field callback:Lorg/apache/bookkeeper/bookie/LEPStateChangeCallback;
      53: if_acmpeq     66
      56: aload_0
      57: getfield      #20                 // Field callback:Lorg/apache/bookkeeper/bookie/LEPStateChangeCallback;
      60: aload_0
      61: invokeinterface #51,  2           // InterfaceMethod org/apache/bookkeeper/bookie/LEPStateChangeCallback.onSetDirty:(Lorg/apache/bookkeeper/bookie/LedgerEntryPage;)V
      66: return

  public long getOffset(int);
    Code:
       0: aload_0
       1: invokespecial #48                 // Method checkPage:()V
       4: aload_0
       5: getfield      #19                 // Field page:Ljava/nio/ByteBuffer;
       8: iload_1
       9: invokevirtual #52                 // Method java/nio/ByteBuffer.getLong:(I)J
      12: lreturn

  public void zeroPage();
    Code:
       0: aload_0
       1: invokespecial #48                 // Method checkPage:()V
       4: aload_0
       5: getfield      #19                 // Field page:Ljava/nio/ByteBuffer;
       8: invokevirtual #22                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      11: pop
      12: aload_0
      13: getfield      #19                 // Field page:Ljava/nio/ByteBuffer;
      16: invokestatic  #23                 // Method org/apache/bookkeeper/util/ZeroBuffer.put:(Ljava/nio/ByteBuffer;)V
      19: aload_0
      20: iconst_m1
      21: putfield      #16                 // Field last:I
      24: aload_0
      25: iconst_1
      26: putfield      #11                 // Field clean:Z
      29: return

  public void readPage(org.apache.bookkeeper.bookie.FileInfo) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #48                 // Method checkPage:()V
       4: aload_0
       5: getfield      #19                 // Field page:Ljava/nio/ByteBuffer;
       8: invokevirtual #22                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      11: pop
      12: aload_1
      13: aload_0
      14: getfield      #19                 // Field page:Ljava/nio/ByteBuffer;
      17: aload_0
      18: invokevirtual #53                 // Method getFirstEntryPosition:()J
      21: iconst_1
      22: invokevirtual #54                 // Method org/apache/bookkeeper/bookie/FileInfo.read:(Ljava/nio/ByteBuffer;JZ)I
      25: pop
      26: goto          144
      29: astore_2
      30: new           #55                 // class org/apache/bookkeeper/bookie/ShortReadException
      33: dup
      34: new           #27                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #56                 // String Short page read of ledger
      43: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_0
      47: invokevirtual #29                 // Method getLedger:()J
      50: invokevirtual #30                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      53: ldc           #57                 // String  tried to get
      55: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_0
      59: getfield      #19                 // Field page:Ljava/nio/ByteBuffer;
      62: invokevirtual #58                 // Method java/nio/ByteBuffer.capacity:()I
      65: invokevirtual #37                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      68: ldc           #59                 // String  from position
      70: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_0
      74: invokevirtual #53                 // Method getFirstEntryPosition:()J
      77: invokevirtual #30                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      80: ldc           #60                 // String  still need
      82: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: aload_0
      86: getfield      #19                 // Field page:Ljava/nio/ByteBuffer;
      89: invokevirtual #61                 // Method java/nio/ByteBuffer.remaining:()I
      92: invokevirtual #37                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      95: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: aload_2
      99: invokespecial #62                 // Method org/apache/bookkeeper/bookie/ShortReadException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     102: athrow
     103: astore_2
     104: getstatic     #64                 // Field LOG:Lorg/slf4j/Logger;
     107: ldc           #65                 // String IllegalArgumentException when trying to read ledger {} from position {}
     109: iconst_3
     110: anewarray     #66                 // class java/lang/Object
     113: dup
     114: iconst_0
     115: aload_0
     116: invokevirtual #29                 // Method getLedger:()J
     119: invokestatic  #67                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     122: aastore
     123: dup
     124: iconst_1
     125: aload_0
     126: invokevirtual #53                 // Method getFirstEntryPosition:()J
     129: invokestatic  #67                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     132: aastore
     133: dup
     134: iconst_2
     135: aload_2
     136: aastore
     137: invokeinterface #68,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;[Ljava/lang/Object;)V
     142: aload_2
     143: athrow
     144: aload_0
     145: getfield      #19                 // Field page:Ljava/nio/ByteBuffer;
     148: invokevirtual #61                 // Method java/nio/ByteBuffer.remaining:()I
     151: ifeq          256
     154: getstatic     #64                 // Field LOG:Lorg/slf4j/Logger;
     157: ldc           #69                 // String Short page read of ledger {} : tried to read {} bytes from position {}, but only {} bytes read.
     159: iconst_4
     160: anewarray     #66                 // class java/lang/Object
     163: dup
     164: iconst_0
     165: aload_0
     166: invokevirtual #29                 // Method getLedger:()J
     169: invokestatic  #67                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     172: aastore
     173: dup
     174: iconst_1
     175: aload_0
     176: getfield      #19                 // Field page:Ljava/nio/ByteBuffer;
     179: invokevirtual #58                 // Method java/nio/ByteBuffer.capacity:()I
     182: invokestatic  #70                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     185: aastore
     186: dup
     187: iconst_2
     188: aload_0
     189: invokevirtual #53                 // Method getFirstEntryPosition:()J
     192: invokestatic  #67                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     195: aastore
     196: dup
     197: iconst_3
     198: aload_0
     199: getfield      #19                 // Field page:Ljava/nio/ByteBuffer;
     202: invokevirtual #71                 // Method java/nio/ByteBuffer.position:()I
     205: invokestatic  #70                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     208: aastore
     209: invokeinterface #72,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;[Ljava/lang/Object;)V
     214: aload_0
     215: getfield      #19                 // Field page:Ljava/nio/ByteBuffer;
     218: invokevirtual #71                 // Method java/nio/ByteBuffer.position:()I
     221: bipush        8
     223: irem
     224: ifeq          256
     227: aload_0
     228: getfield      #19                 // Field page:Ljava/nio/ByteBuffer;
     231: invokevirtual #71                 // Method java/nio/ByteBuffer.position:()I
     234: aload_0
     235: getfield      #19                 // Field page:Ljava/nio/ByteBuffer;
     238: invokevirtual #71                 // Method java/nio/ByteBuffer.position:()I
     241: bipush        8
     243: irem
     244: isub
     245: istore_2
     246: aload_0
     247: getfield      #19                 // Field page:Ljava/nio/ByteBuffer;
     250: iload_2
     251: lconst_0
     252: invokevirtual #49                 // Method java/nio/ByteBuffer.putLong:(IJ)Ljava/nio/ByteBuffer;
     255: pop
     256: aload_0
     257: aload_0
     258: invokespecial #73                 // Method getLastEntryIndex:()I
     261: putfield      #16                 // Field last:I
     264: aload_0
     265: iconst_1
     266: putfield      #11                 // Field clean:Z
     269: return
    Exception table:
       from    to  target type
          12    26    29   Class org/apache/bookkeeper/bookie/ShortReadException
          12    26   103   Class java/lang/IllegalArgumentException

  public java.nio.ByteBuffer getPageToWrite();
    Code:
       0: aload_0
       1: invokespecial #48                 // Method checkPage:()V
       4: aload_0
       5: getfield      #19                 // Field page:Ljava/nio/ByteBuffer;
       8: invokevirtual #22                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      11: pop
      12: aload_0
      13: getfield      #19                 // Field page:Ljava/nio/ByteBuffer;
      16: invokevirtual #74                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      19: areturn

  long getLedger();
    Code:
       0: aload_0
       1: getfield      #10                 // Field entryKey:Lorg/apache/bookkeeper/bookie/EntryKey;
       4: invokevirtual #75                 // Method org/apache/bookkeeper/bookie/EntryKey.getLedgerId:()J
       7: lreturn

  public int getVersion();
    Code:
       0: aload_0
       1: getfield      #15                 // Field version:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public org.apache.bookkeeper.bookie.EntryKey getEntryKey();
    Code:
       0: aload_0
       1: getfield      #10                 // Field entryKey:Lorg/apache/bookkeeper/bookie/EntryKey;
       4: areturn

  void setLedgerAndFirstEntry(long, long);
    Code:
       0: lload_3
       1: aload_0
       2: getfield      #1                  // Field entriesPerPage:I
       5: i2l
       6: lrem
       7: lconst_0
       8: lcmp
       9: ifeq          46
      12: new           #63                 // class java/lang/IllegalArgumentException
      15: dup
      16: new           #27                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      23: lload_3
      24: invokevirtual #30                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      27: ldc           #76                 // String  is not a multiple of
      29: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_0
      33: getfield      #1                  // Field entriesPerPage:I
      36: invokevirtual #37                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      39: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokespecial #77                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload_0
      47: new           #5                  // class org/apache/bookkeeper/bookie/EntryKey
      50: dup
      51: lload_1
      52: lload_3
      53: invokespecial #9                  // Method org/apache/bookkeeper/bookie/EntryKey."<init>":(JJ)V
      56: putfield      #10                 // Field entryKey:Lorg/apache/bookkeeper/bookie/EntryKey;
      59: return

  long getFirstEntry();
    Code:
       0: aload_0
       1: getfield      #10                 // Field entryKey:Lorg/apache/bookkeeper/bookie/EntryKey;
       4: invokevirtual #78                 // Method org/apache/bookkeeper/bookie/EntryKey.getEntryId:()J
       7: lreturn

  long getMaxPossibleEntry();
    Code:
       0: aload_0
       1: getfield      #10                 // Field entryKey:Lorg/apache/bookkeeper/bookie/EntryKey;
       4: invokevirtual #78                 // Method org/apache/bookkeeper/bookie/EntryKey.getEntryId:()J
       7: aload_0
       8: getfield      #1                  // Field entriesPerPage:I
      11: i2l
      12: ladd
      13: lreturn

  long getFirstEntryPosition();
    Code:
       0: aload_0
       1: getfield      #10                 // Field entryKey:Lorg/apache/bookkeeper/bookie/EntryKey;
       4: invokevirtual #78                 // Method org/apache/bookkeeper/bookie/EntryKey.getEntryId:()J
       7: ldc2_w        #79                 // long 8l
      10: lmul
      11: lreturn

  public boolean inUse();
    Code:
       0: aload_0
       1: getfield      #14                 // Field useCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  private int getLastEntryIndex();
    Code:
       0: aload_0
       1: getfield      #1                  // Field entriesPerPage:I
       4: iconst_1
       5: isub
       6: istore_1
       7: iload_1
       8: iflt          33
      11: aload_0
      12: iload_1
      13: invokestatic  #50                 // Method getIndexEntrySize:()I
      16: imul
      17: invokevirtual #81                 // Method getOffset:(I)J
      20: lconst_0
      21: lcmp
      22: ifle          27
      25: iload_1
      26: ireturn
      27: iinc          1, -1
      30: goto          7
      33: iconst_m1
      34: ireturn

  public long getLastEntry();
    Code:
       0: aload_0
       1: getfield      #16                 // Field last:I
       4: iflt          21
       7: aload_0
       8: getfield      #16                 // Field last:I
      11: i2l
      12: aload_0
      13: getfield      #10                 // Field entryKey:Lorg/apache/bookkeeper/bookie/EntryKey;
      16: invokevirtual #78                 // Method org/apache/bookkeeper/bookie/EntryKey.getEntryId:()J
      19: ladd
      20: lreturn
      21: aload_0
      22: invokespecial #73                 // Method getLastEntryIndex:()I
      25: istore_1
      26: iload_1
      27: iflt          43
      30: iload_1
      31: i2l
      32: aload_0
      33: getfield      #10                 // Field entryKey:Lorg/apache/bookkeeper/bookie/EntryKey;
      36: invokevirtual #78                 // Method org/apache/bookkeeper/bookie/EntryKey.getEntryId:()J
      39: ladd
      40: goto          44
      43: lconst_0
      44: lreturn

  public void getEntries(org.apache.bookkeeper.bookie.LedgerEntryPage$EntryVisitor) throws java.lang.Exception;
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: getfield      #1                  // Field entriesPerPage:I
       7: if_icmpge     49
      10: aload_0
      11: iload_2
      12: bipush        8
      14: imul
      15: invokevirtual #81                 // Method getOffset:(I)J
      18: lstore_3
      19: lload_3
      20: lconst_0
      21: lcmp
      22: ifeq          43
      25: aload_1
      26: aload_0
      27: invokevirtual #32                 // Method getFirstEntry:()J
      30: iload_2
      31: i2l
      32: ladd
      33: lload_3
      34: invokeinterface #82,  5           // InterfaceMethod org/apache/bookkeeper/bookie/LedgerEntryPage$EntryVisitor.visit:(JJ)Z
      39: ifne          43
      42: return
      43: iinc          2, 1
      46: goto          2
      49: return

  public java.util.PrimitiveIterator$OfLong getEntriesIterator();
    Code:
       0: new           #83                 // class org/apache/bookkeeper/bookie/LedgerEntryPage$1
       3: dup
       4: aload_0
       5: invokespecial #84                 // Method org/apache/bookkeeper/bookie/LedgerEntryPage$1."<init>":(Lorg/apache/bookkeeper/bookie/LedgerEntryPage;)V
       8: areturn

  public void close() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #85                 // Method releasePage:()V
       4: return

  static int access$000(org.apache.bookkeeper.bookie.LedgerEntryPage);
    Code:
       0: aload_0
       1: getfield      #1                  // Field entriesPerPage:I
       4: ireturn

  static {};
    Code:
       0: ldc           #2                  // class org/apache/bookkeeper/bookie/LedgerEntryPage
       2: invokestatic  #86                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #64                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
