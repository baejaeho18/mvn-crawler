Compiled from "LedgerDirsManager.java"
public class org.apache.bookkeeper.bookie.LedgerDirsManager {
  private static final org.slf4j.Logger LOG;

  private volatile java.util.List<java.io.File> filledDirs;

  private final java.util.List<java.io.File> ledgerDirectories;

  private volatile java.util.List<java.io.File> writableLedgerDirectories;

  private final java.util.List<org.apache.bookkeeper.bookie.LedgerDirsManager$LedgerDirsListener> listeners;

  private final java.util.Random rand;

  private final java.util.concurrent.ConcurrentMap<java.io.File, java.lang.Float> diskUsages;

  private final long entryLogSize;

  private long minUsableSizeForEntryLogCreation;

  private long minUsableSizeForIndexFileCreation;

  private final org.apache.bookkeeper.util.DiskChecker diskChecker;

  public org.apache.bookkeeper.bookie.LedgerDirsManager(org.apache.bookkeeper.conf.ServerConfiguration, java.io.File[], org.apache.bookkeeper.util.DiskChecker);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: getstatic     #4                  // Field org/apache/bookkeeper/stats/NullStatsLogger.INSTANCE:Lorg/apache/bookkeeper/stats/NullStatsLogger;
       7: invokespecial #5                  // Method "<init>":(Lorg/apache/bookkeeper/conf/ServerConfiguration;[Ljava/io/File;Lorg/apache/bookkeeper/util/DiskChecker;Lorg/apache/bookkeeper/stats/StatsLogger;)V
      10: return

  public org.apache.bookkeeper.bookie.LedgerDirsManager(org.apache.bookkeeper.conf.ServerConfiguration, java.io.File[], org.apache.bookkeeper.util.DiskChecker, org.apache.bookkeeper.stats.StatsLogger);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/Random
       8: dup
       9: invokespecial #8                  // Method java/util/Random."<init>":()V
      12: putfield      #9                  // Field rand:Ljava/util/Random;
      15: aload_0
      16: new           #10                 // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: invokespecial #11                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      23: putfield      #3                  // Field diskUsages:Ljava/util/concurrent/ConcurrentMap;
      26: aload_0
      27: aload_2
      28: invokestatic  #12                 // Method org/apache/bookkeeper/bookie/Bookie.getCurrentDirectories:([Ljava/io/File;)[Ljava/io/File;
      31: invokestatic  #13                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      34: putfield      #14                 // Field ledgerDirectories:Ljava/util/List;
      37: aload_0
      38: new           #15                 // class java/util/ArrayList
      41: dup
      42: aload_0
      43: getfield      #14                 // Field ledgerDirectories:Ljava/util/List;
      46: invokespecial #16                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      49: putfield      #2                  // Field writableLedgerDirectories:Ljava/util/List;
      52: aload_0
      53: new           #15                 // class java/util/ArrayList
      56: dup
      57: invokespecial #17                 // Method java/util/ArrayList."<init>":()V
      60: putfield      #18                 // Field filledDirs:Ljava/util/List;
      63: aload_0
      64: new           #15                 // class java/util/ArrayList
      67: dup
      68: invokespecial #17                 // Method java/util/ArrayList."<init>":()V
      71: putfield      #19                 // Field listeners:Ljava/util/List;
      74: aload_0
      75: aload_1
      76: invokevirtual #20                 // Method org/apache/bookkeeper/conf/ServerConfiguration.getEntryLogSizeLimit:()J
      79: putfield      #21                 // Field entryLogSize:J
      82: aload_0
      83: aload_1
      84: invokevirtual #22                 // Method org/apache/bookkeeper/conf/ServerConfiguration.getMinUsableSizeForIndexFileCreation:()J
      87: putfield      #23                 // Field minUsableSizeForIndexFileCreation:J
      90: aload_0
      91: aload_1
      92: invokevirtual #24                 // Method org/apache/bookkeeper/conf/ServerConfiguration.getMinUsableSizeForEntryLogCreation:()J
      95: putfield      #25                 // Field minUsableSizeForEntryLogCreation:J
      98: aload_0
      99: getfield      #14                 // Field ledgerDirectories:Ljava/util/List;
     102: invokeinterface #26,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     107: astore        5
     109: aload         5
     111: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     116: ifeq          210
     119: aload         5
     121: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     126: checkcast     #29                 // class java/io/File
     129: astore        6
     131: aload_0
     132: getfield      #3                  // Field diskUsages:Ljava/util/concurrent/ConcurrentMap;
     135: aload         6
     137: fconst_0
     138: invokestatic  #30                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
     141: invokeinterface #31,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     146: pop
     147: new           #32                 // class java/lang/StringBuilder
     150: dup
     151: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
     154: ldc           #34                 // String dir_
     156: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: aload         6
     161: invokevirtual #36                 // Method java/io/File.getParent:()Ljava/lang/String;
     164: bipush        47
     166: bipush        95
     168: invokevirtual #37                 // Method java/lang/String.replace:(CC)Ljava/lang/String;
     171: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: ldc           #38                 // String _usage
     176: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     179: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     182: astore        7
     184: aload         6
     186: astore        8
     188: aload         4
     190: aload         7
     192: new           #40                 // class org/apache/bookkeeper/bookie/LedgerDirsManager$1
     195: dup
     196: aload_0
     197: aload         8
     199: invokespecial #41                 // Method org/apache/bookkeeper/bookie/LedgerDirsManager$1."<init>":(Lorg/apache/bookkeeper/bookie/LedgerDirsManager;Ljava/io/File;)V
     202: invokeinterface #42,  3           // InterfaceMethod org/apache/bookkeeper/stats/StatsLogger.registerGauge:(Ljava/lang/String;Lorg/apache/bookkeeper/stats/Gauge;)V
     207: goto          109
     210: aload_0
     211: aload_3
     212: putfield      #43                 // Field diskChecker:Lorg/apache/bookkeeper/util/DiskChecker;
     215: aload         4
     217: ldc           #44                 // String writable_dirs
     219: new           #45                 // class org/apache/bookkeeper/bookie/LedgerDirsManager$2
     222: dup
     223: aload_0
     224: invokespecial #46                 // Method org/apache/bookkeeper/bookie/LedgerDirsManager$2."<init>":(Lorg/apache/bookkeeper/bookie/LedgerDirsManager;)V
     227: invokeinterface #42,  3           // InterfaceMethod org/apache/bookkeeper/stats/StatsLogger.registerGauge:(Ljava/lang/String;Lorg/apache/bookkeeper/stats/Gauge;)V
     232: return

  public java.util.List<java.io.File> getAllLedgerDirs();
    Code:
       0: aload_0
       1: getfield      #14                 // Field ledgerDirectories:Ljava/util/List;
       4: areturn

  public java.util.List<org.apache.bookkeeper.bookie.LedgerDirsManager$LedgerDirsListener> getListeners();
    Code:
       0: aload_0
       1: getfield      #19                 // Field listeners:Ljava/util/List;
       4: areturn

  public long getTotalFreeSpace(java.util.List<java.io.File>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #43                 // Field diskChecker:Lorg/apache/bookkeeper/util/DiskChecker;
       4: aload_1
       5: invokevirtual #47                 // Method org/apache/bookkeeper/util/DiskChecker.getTotalFreeSpace:(Ljava/util/List;)J
       8: lreturn

  public long getTotalDiskSpace(java.util.List<java.io.File>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #43                 // Field diskChecker:Lorg/apache/bookkeeper/util/DiskChecker;
       4: aload_1
       5: invokevirtual #48                 // Method org/apache/bookkeeper/util/DiskChecker.getTotalDiskSpace:(Ljava/util/List;)J
       8: lreturn

  public java.util.concurrent.ConcurrentMap<java.io.File, java.lang.Float> getDiskUsages();
    Code:
       0: aload_0
       1: getfield      #3                  // Field diskUsages:Ljava/util/concurrent/ConcurrentMap;
       4: areturn

  public java.util.List<java.io.File> getWritableLedgerDirs() throws org.apache.bookkeeper.bookie.LedgerDirsManager$NoWritableLedgerDirException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field writableLedgerDirectories:Ljava/util/List;
       4: invokeinterface #49,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifeq          26
      12: ldc           #50                 // String All ledger directories are non writable
      14: astore_1
      15: new           #51                 // class org/apache/bookkeeper/bookie/LedgerDirsManager$NoWritableLedgerDirException
      18: dup
      19: aload_1
      20: invokespecial #52                 // Method org/apache/bookkeeper/bookie/LedgerDirsManager$NoWritableLedgerDirException."<init>":(Ljava/lang/String;)V
      23: astore_2
      24: aload_2
      25: athrow
      26: aload_0
      27: getfield      #2                  // Field writableLedgerDirectories:Ljava/util/List;
      30: areturn

  public boolean hasWritableLedgerDirs();
    Code:
       0: aload_0
       1: getfield      #2                  // Field writableLedgerDirectories:Ljava/util/List;
       4: invokeinterface #49,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public java.util.List<java.io.File> getWritableLedgerDirsForNewLog() throws org.apache.bookkeeper.bookie.LedgerDirsManager$NoWritableLedgerDirException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field writableLedgerDirectories:Ljava/util/List;
       4: invokeinterface #49,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifne          17
      12: aload_0
      13: getfield      #2                  // Field writableLedgerDirectories:Ljava/util/List;
      16: areturn
      17: aload_0
      18: aload_0
      19: getfield      #25                 // Field minUsableSizeForEntryLogCreation:J
      22: iconst_1
      23: invokevirtual #53                 // Method getDirsAboveUsableThresholdSize:(JZ)Ljava/util/List;
      26: areturn

  java.util.List<java.io.File> getDirsAboveUsableThresholdSize(long, boolean) throws org.apache.bookkeeper.bookie.LedgerDirsManager$NoWritableLedgerDirException;
    Code:
       0: new           #15                 // class java/util/ArrayList
       3: dup
       4: invokespecial #17                 // Method java/util/ArrayList."<init>":()V
       7: astore        4
       9: aload_0
      10: getfield      #14                 // Field ledgerDirectories:Ljava/util/List;
      13: invokeinterface #26,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      18: astore        5
      20: aload         5
      22: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          65
      30: aload         5
      32: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #29                 // class java/io/File
      40: astore        6
      42: aload         6
      44: invokevirtual #54                 // Method java/io/File.getUsableSpace:()J
      47: lload_1
      48: lcmp
      49: ifle          62
      52: aload         4
      54: aload         6
      56: invokeinterface #55,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      61: pop
      62: goto          20
      65: aload         4
      67: invokeinterface #49,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      72: ifne          98
      75: iload_3
      76: ifeq          95
      79: getstatic     #56                 // Field LOG:Lorg/slf4j/Logger;
      82: ldc           #57                 // String No writable ledger dirs below diskUsageThreshold. But Dirs that can accommodate {} are: {}
      84: lload_1
      85: invokestatic  #58                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      88: aload         4
      90: invokeinterface #59,  4           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      95: aload         4
      97: areturn
      98: new           #32                 // class java/lang/StringBuilder
     101: dup
     102: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
     105: ldc           #60                 // String All ledger directories are non writable and no reserved space (
     107: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: lload_1
     111: invokevirtual #61                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     114: ldc           #62                 // String ) left.
     116: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     122: astore        5
     124: new           #51                 // class org/apache/bookkeeper/bookie/LedgerDirsManager$NoWritableLedgerDirException
     127: dup
     128: aload         5
     130: invokespecial #52                 // Method org/apache/bookkeeper/bookie/LedgerDirsManager$NoWritableLedgerDirException."<init>":(Ljava/lang/String;)V
     133: astore        6
     135: iload_3
     136: ifeq          151
     139: getstatic     #56                 // Field LOG:Lorg/slf4j/Logger;
     142: aload         5
     144: aload         6
     146: invokeinterface #63,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     151: aload         6
     153: athrow

  public java.util.List<java.io.File> getFullFilledLedgerDirs();
    Code:
       0: aload_0
       1: getfield      #18                 // Field filledDirs:Ljava/util/List;
       4: areturn

  public boolean isDirFull(java.io.File);
    Code:
       0: aload_0
       1: getfield      #18                 // Field filledDirs:Ljava/util/List;
       4: aload_1
       5: invokeinterface #64,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      10: ireturn

  public void addToFilledDirs(java.io.File);
    Code:
       0: aload_0
       1: getfield      #18                 // Field filledDirs:Ljava/util/List;
       4: aload_1
       5: invokeinterface #64,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      10: ifne          137
      13: getstatic     #56                 // Field LOG:Lorg/slf4j/Logger;
      16: new           #32                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      23: aload_1
      24: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      27: ldc           #66                 // String  is out of space. Adding it to filled dirs list
      29: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokeinterface #67,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      40: new           #15                 // class java/util/ArrayList
      43: dup
      44: aload_0
      45: getfield      #18                 // Field filledDirs:Ljava/util/List;
      48: invokespecial #16                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      51: astore_2
      52: aload_2
      53: aload_1
      54: invokeinterface #55,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      59: pop
      60: aload_0
      61: aload_2
      62: putfield      #18                 // Field filledDirs:Ljava/util/List;
      65: new           #15                 // class java/util/ArrayList
      68: dup
      69: aload_0
      70: getfield      #2                  // Field writableLedgerDirectories:Ljava/util/List;
      73: invokespecial #16                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      76: astore_3
      77: aload_3
      78: aload_0
      79: getfield      #18                 // Field filledDirs:Ljava/util/List;
      82: invokeinterface #68,  2           // InterfaceMethod java/util/List.removeAll:(Ljava/util/Collection;)Z
      87: pop
      88: aload_0
      89: aload_3
      90: putfield      #2                  // Field writableLedgerDirectories:Ljava/util/List;
      93: aload_0
      94: getfield      #19                 // Field listeners:Ljava/util/List;
      97: invokeinterface #26,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     102: astore        4
     104: aload         4
     106: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     111: ifeq          137
     114: aload         4
     116: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     121: checkcast     #69                 // class org/apache/bookkeeper/bookie/LedgerDirsManager$LedgerDirsListener
     124: astore        5
     126: aload         5
     128: aload_1
     129: invokeinterface #70,  2           // InterfaceMethod org/apache/bookkeeper/bookie/LedgerDirsManager$LedgerDirsListener.diskFull:(Ljava/io/File;)V
     134: goto          104
     137: return

  public void addToWritableDirs(java.io.File, boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field writableLedgerDirectories:Ljava/util/List;
       4: aload_1
       5: invokeinterface #64,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      10: ifeq          14
      13: return
      14: getstatic     #56                 // Field LOG:Lorg/slf4j/Logger;
      17: ldc           #71                 // String {} becomes writable. Adding it to writable dirs list.
      19: aload_1
      20: invokeinterface #72,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      25: new           #15                 // class java/util/ArrayList
      28: dup
      29: aload_0
      30: getfield      #2                  // Field writableLedgerDirectories:Ljava/util/List;
      33: invokespecial #16                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      36: astore_3
      37: aload_3
      38: aload_1
      39: invokeinterface #55,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      44: pop
      45: aload_0
      46: aload_3
      47: putfield      #2                  // Field writableLedgerDirectories:Ljava/util/List;
      50: new           #15                 // class java/util/ArrayList
      53: dup
      54: aload_0
      55: getfield      #18                 // Field filledDirs:Ljava/util/List;
      58: invokespecial #16                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      61: astore        4
      63: aload         4
      65: aload_0
      66: getfield      #2                  // Field writableLedgerDirectories:Ljava/util/List;
      69: invokeinterface #68,  2           // InterfaceMethod java/util/List.removeAll:(Ljava/util/Collection;)Z
      74: pop
      75: aload_0
      76: aload         4
      78: putfield      #18                 // Field filledDirs:Ljava/util/List;
      81: aload_0
      82: getfield      #19                 // Field listeners:Ljava/util/List;
      85: invokeinterface #26,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      90: astore        5
      92: aload         5
      94: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      99: ifeq          140
     102: aload         5
     104: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     109: checkcast     #69                 // class org/apache/bookkeeper/bookie/LedgerDirsManager$LedgerDirsListener
     112: astore        6
     114: iload_2
     115: ifeq          129
     118: aload         6
     120: aload_1
     121: invokeinterface #73,  2           // InterfaceMethod org/apache/bookkeeper/bookie/LedgerDirsManager$LedgerDirsListener.diskWritable:(Ljava/io/File;)V
     126: goto          137
     129: aload         6
     131: aload_1
     132: invokeinterface #74,  2           // InterfaceMethod org/apache/bookkeeper/bookie/LedgerDirsManager$LedgerDirsListener.diskJustWritable:(Ljava/io/File;)V
     137: goto          92
     140: return

  java.io.File pickRandomWritableDir() throws org.apache.bookkeeper.bookie.LedgerDirsManager$NoWritableLedgerDirException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #75                 // Method pickRandomWritableDir:(Ljava/io/File;)Ljava/io/File;
       5: areturn

  java.io.File pickRandomWritableDir(java.io.File) throws org.apache.bookkeeper.bookie.LedgerDirsManager$NoWritableLedgerDirException;
    Code:
       0: aload_0
       1: invokevirtual #76                 // Method getWritableLedgerDirs:()Ljava/util/List;
       4: astore_2
       5: aload_0
       6: aload_2
       7: aload_1
       8: invokevirtual #77                 // Method pickRandomDir:(Ljava/util/List;Ljava/io/File;)Ljava/io/File;
      11: areturn

  java.io.File pickRandomWritableDirForNewIndexFile(java.io.File) throws org.apache.bookkeeper.bookie.LedgerDirsManager$NoWritableLedgerDirException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field writableLedgerDirectories:Ljava/util/List;
       4: invokeinterface #49,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifne          20
      12: aload_0
      13: getfield      #2                  // Field writableLedgerDirectories:Ljava/util/List;
      16: astore_2
      17: goto          30
      20: aload_0
      21: aload_0
      22: getfield      #23                 // Field minUsableSizeForIndexFileCreation:J
      25: iconst_1
      26: invokevirtual #53                 // Method getDirsAboveUsableThresholdSize:(JZ)Ljava/util/List;
      29: astore_2
      30: aload_0
      31: aload_2
      32: aload_1
      33: invokevirtual #77                 // Method pickRandomDir:(Ljava/util/List;Ljava/io/File;)Ljava/io/File;
      36: areturn

  boolean isDirWritableForNewIndexFile(java.io.File);
    Code:
       0: aload_0
       1: getfield      #14                 // Field ledgerDirectories:Ljava/util/List;
       4: aload_1
       5: invokeinterface #64,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      10: ifeq          29
      13: aload_1
      14: invokevirtual #54                 // Method java/io/File.getUsableSpace:()J
      17: aload_0
      18: getfield      #23                 // Field minUsableSizeForIndexFileCreation:J
      21: lcmp
      22: ifle          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  java.io.File pickRandomDir(java.io.File) throws org.apache.bookkeeper.bookie.LedgerDirsManager$NoWritableLedgerDirException;
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #78                 // Method getAllLedgerDirs:()Ljava/util/List;
       5: aload_1
       6: invokevirtual #77                 // Method pickRandomDir:(Ljava/util/List;Ljava/io/File;)Ljava/io/File;
       9: areturn

  java.io.File pickRandomDir(java.util.List<java.io.File>, java.io.File) throws org.apache.bookkeeper.bookie.LedgerDirsManager$NoWritableLedgerDirException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field rand:Ljava/util/Random;
       4: aload_1
       5: invokeinterface #79,  1           // InterfaceMethod java/util/List.size:()I
      10: invokevirtual #80                 // Method java/util/Random.nextInt:(I)I
      13: istore_3
      14: iload_3
      15: istore        4
      17: aload_1
      18: iload         4
      20: invokeinterface #81,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      25: checkcast     #29                 // class java/io/File
      28: astore        5
      30: aconst_null
      31: aload_2
      32: if_acmpeq     115
      35: aload_2
      36: aload         5
      38: invokevirtual #82                 // Method java/io/File.equals:(Ljava/lang/Object;)Z
      41: ifeq          115
      44: iload         4
      46: iconst_1
      47: iadd
      48: aload_1
      49: invokeinterface #79,  1           // InterfaceMethod java/util/List.size:()I
      54: irem
      55: istore        4
      57: iload         4
      59: iload_3
      60: if_icmpne     99
      63: new           #51                 // class org/apache/bookkeeper/bookie/LedgerDirsManager$NoWritableLedgerDirException
      66: dup
      67: new           #32                 // class java/lang/StringBuilder
      70: dup
      71: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      74: ldc           #83                 // String No writable directories found from  available writable dirs (
      76: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_1
      80: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      83: ldc           #84                 // String ) : exclude dir
      85: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload_2
      89: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      92: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      95: invokespecial #52                 // Method org/apache/bookkeeper/bookie/LedgerDirsManager$NoWritableLedgerDirException."<init>":(Ljava/lang/String;)V
      98: athrow
      99: aload_1
     100: iload         4
     102: invokeinterface #81,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     107: checkcast     #29                 // class java/io/File
     110: astore        5
     112: goto          30
     115: aload         5
     117: areturn

  public void addLedgerDirsListener(org.apache.bookkeeper.bookie.LedgerDirsManager$LedgerDirsListener);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_0
       5: getfield      #19                 // Field listeners:Ljava/util/List;
       8: aload_1
       9: invokeinterface #55,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      14: pop
      15: return

  public org.apache.bookkeeper.util.DiskChecker getDiskChecker();
    Code:
       0: aload_0
       1: getfield      #43                 // Field diskChecker:Lorg/apache/bookkeeper/util/DiskChecker;
       4: areturn

  static java.util.concurrent.ConcurrentMap access$000(org.apache.bookkeeper.bookie.LedgerDirsManager);
    Code:
       0: aload_0
       1: getfield      #3                  // Field diskUsages:Ljava/util/concurrent/ConcurrentMap;
       4: areturn

  static java.util.List access$100(org.apache.bookkeeper.bookie.LedgerDirsManager);
    Code:
       0: aload_0
       1: getfield      #2                  // Field writableLedgerDirectories:Ljava/util/List;
       4: areturn

  static {};
    Code:
       0: ldc           #85                 // class org/apache/bookkeeper/bookie/LedgerDirsManager
       2: invokestatic  #86                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #56                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
