Compiled from "SnapshotMap.java"
public class org.apache.bookkeeper.util.SnapshotMap<K, V> {
  volatile java.util.Map<K, V> updates;

  volatile java.util.Map<K, V> updatesToMerge;

  volatile java.util.NavigableMap<K, V> snapshot;

  final java.util.concurrent.locks.ReentrantReadWriteLock lock;

  public org.apache.bookkeeper.util.SnapshotMap();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/locks/ReentrantReadWriteLock
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
      12: putfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      15: aload_0
      16: new           #5                  // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: invokespecial #6                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      23: putfield      #7                  // Field updates:Ljava/util/Map;
      26: aload_0
      27: new           #5                  // class java/util/concurrent/ConcurrentHashMap
      30: dup
      31: invokespecial #6                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      34: putfield      #8                  // Field updatesToMerge:Ljava/util/Map;
      37: aload_0
      38: new           #9                  // class java/util/concurrent/ConcurrentSkipListMap
      41: dup
      42: invokespecial #10                 // Method java/util/concurrent/ConcurrentSkipListMap."<init>":()V
      45: putfield      #11                 // Field snapshot:Ljava/util/NavigableMap;
      48: return

  public java.util.NavigableMap<K, V> snapshot();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #12                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
       7: invokevirtual #13                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
      10: aload_0
      11: getfield      #7                  // Field updates:Ljava/util/Map;
      14: invokeinterface #14,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      19: ifeq          39
      22: aload_0
      23: getfield      #11                 // Field snapshot:Ljava/util/NavigableMap;
      26: astore_1
      27: aload_0
      28: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      31: invokevirtual #12                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      34: invokevirtual #15                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      37: aload_1
      38: areturn
      39: aload_0
      40: aload_0
      41: getfield      #7                  // Field updates:Ljava/util/Map;
      44: putfield      #8                  // Field updatesToMerge:Ljava/util/Map;
      47: aload_0
      48: new           #5                  // class java/util/concurrent/ConcurrentHashMap
      51: dup
      52: invokespecial #6                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      55: putfield      #7                  // Field updates:Ljava/util/Map;
      58: aload_0
      59: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      62: invokevirtual #12                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      65: invokevirtual #15                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      68: goto          84
      71: astore_2
      72: aload_0
      73: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      76: invokevirtual #12                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      79: invokevirtual #15                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      82: aload_2
      83: athrow
      84: aload_0
      85: getfield      #8                  // Field updatesToMerge:Ljava/util/Map;
      88: invokeinterface #16,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      93: invokeinterface #17,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      98: astore_1
      99: aload_1
     100: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     105: ifeq          143
     108: aload_1
     109: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     114: checkcast     #20                 // class java/util/Map$Entry
     117: astore_2
     118: aload_0
     119: getfield      #11                 // Field snapshot:Ljava/util/NavigableMap;
     122: aload_2
     123: invokeinterface #21,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     128: aload_2
     129: invokeinterface #22,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     134: invokeinterface #23,  3           // InterfaceMethod java/util/NavigableMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     139: pop
     140: goto          99
     143: aload_0
     144: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     147: invokevirtual #12                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
     150: invokevirtual #13                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
     153: aload_0
     154: new           #5                  // class java/util/concurrent/ConcurrentHashMap
     157: dup
     158: invokespecial #6                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
     161: putfield      #8                  // Field updatesToMerge:Ljava/util/Map;
     164: aload_0
     165: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     168: invokevirtual #12                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
     171: invokevirtual #15                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
     174: goto          190
     177: astore_3
     178: aload_0
     179: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
     182: invokevirtual #12                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
     185: invokevirtual #15                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
     188: aload_3
     189: athrow
     190: aload_0
     191: getfield      #11                 // Field snapshot:Ljava/util/NavigableMap;
     194: areturn
    Exception table:
       from    to  target type
          10    27    71   any
          39    58    71   any
         153   164   177   any

  public void put(K, V);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #24                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
       7: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      10: aload_0
      11: getfield      #7                  // Field updates:Ljava/util/Map;
      14: aload_1
      15: aload_2
      16: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      21: pop
      22: aload_0
      23: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      26: invokevirtual #24                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      29: invokevirtual #27                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      32: goto          48
      35: astore_3
      36: aload_0
      37: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      40: invokevirtual #24                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      43: invokevirtual #27                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      46: aload_3
      47: athrow
      48: return
    Exception table:
       from    to  target type
          10    22    35   any

  public void remove(K);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #24                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
       7: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      10: aload_0
      11: getfield      #7                  // Field updates:Ljava/util/Map;
      14: aload_1
      15: invokeinterface #28,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: aload_0
      22: getfield      #8                  // Field updatesToMerge:Ljava/util/Map;
      25: aload_1
      26: invokeinterface #28,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      31: pop
      32: aload_0
      33: getfield      #11                 // Field snapshot:Ljava/util/NavigableMap;
      36: aload_1
      37: invokeinterface #29,  2           // InterfaceMethod java/util/NavigableMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: aload_0
      44: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      47: invokevirtual #24                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      50: invokevirtual #27                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      53: goto          69
      56: astore_2
      57: aload_0
      58: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      61: invokevirtual #24                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      64: invokevirtual #27                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      67: aload_2
      68: athrow
      69: return
    Exception table:
       from    to  target type
          10    43    56   any

  public boolean containsKey(K);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #24                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
       7: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      10: aload_0
      11: getfield      #7                  // Field updates:Ljava/util/Map;
      14: aload_1
      15: invokeinterface #30,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      20: aload_0
      21: getfield      #8                  // Field updatesToMerge:Ljava/util/Map;
      24: aload_1
      25: invokeinterface #30,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      30: ior
      31: aload_0
      32: getfield      #11                 // Field snapshot:Ljava/util/NavigableMap;
      35: aload_1
      36: invokeinterface #31,  2           // InterfaceMethod java/util/NavigableMap.containsKey:(Ljava/lang/Object;)Z
      41: ior
      42: istore_2
      43: aload_0
      44: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      47: invokevirtual #24                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      50: invokevirtual #27                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      53: iload_2
      54: ireturn
      55: astore_3
      56: aload_0
      57: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      60: invokevirtual #24                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      63: invokevirtual #27                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      66: aload_3
      67: athrow
    Exception table:
       from    to  target type
          10    43    55   any
}
