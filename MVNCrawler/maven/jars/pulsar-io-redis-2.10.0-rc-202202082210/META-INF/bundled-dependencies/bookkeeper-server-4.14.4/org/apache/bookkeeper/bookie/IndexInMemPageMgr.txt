Compiled from "IndexInMemPageMgr.java"
class org.apache.bookkeeper.bookie.IndexInMemPageMgr {
  private static final org.slf4j.Logger LOG;

  private static final java.util.concurrent.ConcurrentHashMap<java.lang.Long, org.apache.bookkeeper.bookie.LedgerEntryPage> EMPTY_PAGE_MAP;

  final int pageSize;

  final int entriesPerPage;

  final int pageLimit;

  final org.apache.bookkeeper.bookie.IndexInMemPageMgr$InMemPageCollection pageMapAndList;

  private final java.util.concurrent.atomic.AtomicInteger pageCount;

  private final org.apache.bookkeeper.bookie.IndexPersistenceMgr indexPersistenceManager;

  private final org.apache.bookkeeper.stats.Counter ledgerCacheHitCounter;

  private final org.apache.bookkeeper.stats.Counter ledgerCacheMissCounter;

  private final org.apache.bookkeeper.stats.OpStatsLogger ledgerCacheReadPageStats;

  static final boolean $assertionsDisabled;

  public org.apache.bookkeeper.bookie.IndexInMemPageMgr(int, int, org.apache.bookkeeper.conf.ServerConfiguration, org.apache.bookkeeper.bookie.IndexPersistenceMgr, org.apache.bookkeeper.stats.StatsLogger);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: iconst_0
      10: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      13: putfield      #9                  // Field pageCount:Ljava/util/concurrent/atomic/AtomicInteger;
      16: aload_0
      17: iload_1
      18: putfield      #10                 // Field pageSize:I
      21: aload_0
      22: iload_2
      23: putfield      #11                 // Field entriesPerPage:I
      26: aload_0
      27: aload         4
      29: putfield      #2                  // Field indexPersistenceManager:Lorg/apache/bookkeeper/bookie/IndexPersistenceMgr;
      32: aload_0
      33: new           #12                 // class org/apache/bookkeeper/bookie/IndexInMemPageMgr$InMemPageCollection
      36: dup
      37: aload         5
      39: invokespecial #13                 // Method org/apache/bookkeeper/bookie/IndexInMemPageMgr$InMemPageCollection."<init>":(Lorg/apache/bookkeeper/stats/StatsLogger;)V
      42: putfield      #14                 // Field pageMapAndList:Lorg/apache/bookkeeper/bookie/IndexInMemPageMgr$InMemPageCollection;
      45: invokestatic  #15                 // Method org/apache/bookkeeper/util/DirectMemoryUtils.maxDirectMemory:()J
      48: lstore        6
      50: aload_3
      51: invokevirtual #16                 // Method org/apache/bookkeeper/conf/ServerConfiguration.getPageLimit:()I
      54: ifgt          77
      57: aload_0
      58: lload         6
      60: ldc2_w        #17                 // long 3l
      63: ldiv
      64: aload_0
      65: getfield      #10                 // Field pageSize:I
      68: i2l
      69: ldiv
      70: l2i
      71: putfield      #19                 // Field pageLimit:I
      74: goto          85
      77: aload_0
      78: aload_3
      79: invokevirtual #16                 // Method org/apache/bookkeeper/conf/ServerConfiguration.getPageLimit:()I
      82: putfield      #19                 // Field pageLimit:I
      85: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
      88: ldc           #20                 // String maxDirectMemory = {}, pageSize = {}, pageLimit = {}
      90: iconst_3
      91: anewarray     #21                 // class java/lang/Object
      94: dup
      95: iconst_0
      96: lload         6
      98: invokestatic  #22                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     101: aastore
     102: dup
     103: iconst_1
     104: iload_1
     105: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     108: aastore
     109: dup
     110: iconst_2
     111: aload_0
     112: getfield      #19                 // Field pageLimit:I
     115: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     118: aastore
     119: invokeinterface #24,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;[Ljava/lang/Object;)V
     124: aload_0
     125: aload         5
     127: ldc           #25                 // String LEDGER_CACHE_HIT
     129: invokeinterface #26,  2           // InterfaceMethod org/apache/bookkeeper/stats/StatsLogger.getCounter:(Ljava/lang/String;)Lorg/apache/bookkeeper/stats/Counter;
     134: putfield      #27                 // Field ledgerCacheHitCounter:Lorg/apache/bookkeeper/stats/Counter;
     137: aload_0
     138: aload         5
     140: ldc           #28                 // String LEDGER_CACHE_MISS
     142: invokeinterface #26,  2           // InterfaceMethod org/apache/bookkeeper/stats/StatsLogger.getCounter:(Ljava/lang/String;)Lorg/apache/bookkeeper/stats/Counter;
     147: putfield      #29                 // Field ledgerCacheMissCounter:Lorg/apache/bookkeeper/stats/Counter;
     150: aload_0
     151: aload         5
     153: ldc           #30                 // String LEDGER_CACHE_READ_PAGE
     155: invokeinterface #31,  2           // InterfaceMethod org/apache/bookkeeper/stats/StatsLogger.getOpStatsLogger:(Ljava/lang/String;)Lorg/apache/bookkeeper/stats/OpStatsLogger;
     160: putfield      #32                 // Field ledgerCacheReadPageStats:Lorg/apache/bookkeeper/stats/OpStatsLogger;
     163: aload         5
     165: ldc           #33                 // String NUM_INDEX_PAGES
     167: new           #34                 // class org/apache/bookkeeper/bookie/IndexInMemPageMgr$1
     170: dup
     171: aload_0
     172: invokespecial #35                 // Method org/apache/bookkeeper/bookie/IndexInMemPageMgr$1."<init>":(Lorg/apache/bookkeeper/bookie/IndexInMemPageMgr;)V
     175: invokeinterface #36,  3           // InterfaceMethod org/apache/bookkeeper/stats/StatsLogger.registerGauge:(Ljava/lang/String;Lorg/apache/bookkeeper/stats/Gauge;)V
     180: return

  public int getPageSize();
    Code:
       0: aload_0
       1: getfield      #10                 // Field pageSize:I
       4: ireturn

  private int getNumUsedPages();
    Code:
       0: aload_0
       1: getfield      #9                  // Field pageCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #37                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  org.apache.bookkeeper.bookie.LedgerEntryPage getLedgerEntryPage(long, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: iconst_0
       4: invokevirtual #38                 // Method getLedgerEntryPageFromCache:(JJZ)Lorg/apache/bookkeeper/bookie/LedgerEntryPage;
       7: astore        5
       9: aload         5
      11: ifnonnull     34
      14: aload_0
      15: getfield      #29                 // Field ledgerCacheMissCounter:Lorg/apache/bookkeeper/stats/Counter;
      18: invokeinterface #39,  1           // InterfaceMethod org/apache/bookkeeper/stats/Counter.inc:()V
      23: aload_0
      24: lload_1
      25: lload_3
      26: invokespecial #40                 // Method grabLedgerEntryPage:(JJ)Lorg/apache/bookkeeper/bookie/LedgerEntryPage;
      29: astore        5
      31: goto          43
      34: aload_0
      35: getfield      #27                 // Field ledgerCacheHitCounter:Lorg/apache/bookkeeper/stats/Counter;
      38: invokeinterface #39,  1           // InterfaceMethod org/apache/bookkeeper/stats/Counter.inc:()V
      43: aload         5
      45: areturn

  org.apache.bookkeeper.bookie.LedgerEntryPage getLedgerEntryPageFromCache(long, long, boolean);
    Code:
       0: aload_0
       1: getfield      #14                 // Field pageMapAndList:Lorg/apache/bookkeeper/bookie/IndexInMemPageMgr$InMemPageCollection;
       4: lload_1
       5: lload_3
       6: invokestatic  #41                 // Method org/apache/bookkeeper/bookie/IndexInMemPageMgr$InMemPageCollection.access$300:(Lorg/apache/bookkeeper/bookie/IndexInMemPageMgr$InMemPageCollection;JJ)Lorg/apache/bookkeeper/bookie/LedgerEntryPage;
       9: astore        6
      11: iload         5
      13: ifeq          32
      16: aconst_null
      17: aload         6
      19: if_acmpeq     32
      22: aload         6
      24: invokevirtual #42                 // Method org/apache/bookkeeper/bookie/LedgerEntryPage.isClean:()Z
      27: ifeq          32
      30: aconst_null
      31: areturn
      32: aconst_null
      33: aload         6
      35: if_acmpeq     43
      38: aload         6
      40: invokevirtual #43                 // Method org/apache/bookkeeper/bookie/LedgerEntryPage.usePage:()V
      43: aload         6
      45: areturn

  private org.apache.bookkeeper.bookie.LedgerEntryPage grabLedgerEntryPage(long, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: invokespecial #44                 // Method grabCleanPage:(JJ)Lorg/apache/bookkeeper/bookie/LedgerEntryPage;
       6: astore        5
       8: invokestatic  #45                 // Method com/google/common/base/Stopwatch.createStarted:()Lcom/google/common/base/Stopwatch;
      11: astore        6
      13: aload_0
      14: getfield      #2                  // Field indexPersistenceManager:Lorg/apache/bookkeeper/bookie/IndexPersistenceMgr;
      17: aload         5
      19: invokevirtual #46                 // Method org/apache/bookkeeper/bookie/IndexPersistenceMgr.updatePage:(Lorg/apache/bookkeeper/bookie/LedgerEntryPage;)Z
      22: istore        7
      24: iload         7
      26: ifne          49
      29: aload_0
      30: getfield      #32                 // Field ledgerCacheReadPageStats:Lorg/apache/bookkeeper/stats/OpStatsLogger;
      33: aload         6
      35: getstatic     #47                 // Field java/util/concurrent/TimeUnit.MICROSECONDS:Ljava/util/concurrent/TimeUnit;
      38: invokevirtual #48                 // Method com/google/common/base/Stopwatch.elapsed:(Ljava/util/concurrent/TimeUnit;)J
      41: getstatic     #47                 // Field java/util/concurrent/TimeUnit.MICROSECONDS:Ljava/util/concurrent/TimeUnit;
      44: invokeinterface #49,  4           // InterfaceMethod org/apache/bookkeeper/stats/OpStatsLogger.registerSuccessfulEvent:(JLjava/util/concurrent/TimeUnit;)V
      49: goto          71
      52: astore        6
      54: aload         5
      56: invokevirtual #51                 // Method org/apache/bookkeeper/bookie/LedgerEntryPage.releasePageNoCallback:()V
      59: aload_0
      60: getfield      #14                 // Field pageMapAndList:Lorg/apache/bookkeeper/bookie/IndexInMemPageMgr$InMemPageCollection;
      63: aload         5
      65: invokevirtual #52                 // Method org/apache/bookkeeper/bookie/IndexInMemPageMgr$InMemPageCollection.addToListOfFreePages:(Lorg/apache/bookkeeper/bookie/LedgerEntryPage;)V
      68: aload         6
      70: athrow
      71: aload         5
      73: aload_0
      74: getfield      #14                 // Field pageMapAndList:Lorg/apache/bookkeeper/bookie/IndexInMemPageMgr$InMemPageCollection;
      77: aload         5
      79: invokestatic  #53                 // Method org/apache/bookkeeper/bookie/IndexInMemPageMgr$InMemPageCollection.access$400:(Lorg/apache/bookkeeper/bookie/IndexInMemPageMgr$InMemPageCollection;Lorg/apache/bookkeeper/bookie/LedgerEntryPage;)Lorg/apache/bookkeeper/bookie/LedgerEntryPage;
      82: dup
      83: astore        6
      85: if_acmpeq     111
      88: aload         5
      90: invokevirtual #51                 // Method org/apache/bookkeeper/bookie/LedgerEntryPage.releasePageNoCallback:()V
      93: aload_0
      94: getfield      #14                 // Field pageMapAndList:Lorg/apache/bookkeeper/bookie/IndexInMemPageMgr$InMemPageCollection;
      97: aload         5
      99: invokevirtual #52                 // Method org/apache/bookkeeper/bookie/IndexInMemPageMgr$InMemPageCollection.addToListOfFreePages:(Lorg/apache/bookkeeper/bookie/LedgerEntryPage;)V
     102: aload         6
     104: invokevirtual #43                 // Method org/apache/bookkeeper/bookie/LedgerEntryPage.usePage:()V
     107: aload         6
     109: astore        5
     111: aload         5
     113: areturn
    Exception table:
       from    to  target type
           8    49    52   Class java/io/IOException

  void removePagesForLedger(long);
    Code:
       0: aload_0
       1: getfield      #14                 // Field pageMapAndList:Lorg/apache/bookkeeper/bookie/IndexInMemPageMgr$InMemPageCollection;
       4: lload_1
       5: invokestatic  #54                 // Method org/apache/bookkeeper/bookie/IndexInMemPageMgr$InMemPageCollection.access$500:(Lorg/apache/bookkeeper/bookie/IndexInMemPageMgr$InMemPageCollection;J)V
       8: return

  long getLastEntryInMem(long);
    Code:
       0: aload_0
       1: getfield      #14                 // Field pageMapAndList:Lorg/apache/bookkeeper/bookie/IndexInMemPageMgr$InMemPageCollection;
       4: lload_1
       5: invokestatic  #55                 // Method org/apache/bookkeeper/bookie/IndexInMemPageMgr$InMemPageCollection.access$600:(Lorg/apache/bookkeeper/bookie/IndexInMemPageMgr$InMemPageCollection;J)J
       8: lreturn

  private org.apache.bookkeeper.bookie.LedgerEntryPage grabCleanPage(long, long) throws java.io.IOException;
    Code:
       0: lload_3
       1: aload_0
       2: getfield      #11                 // Field entriesPerPage:I
       5: i2l
       6: lrem
       7: lconst_0
       8: lcmp
       9: ifeq          46
      12: new           #56                 // class java/lang/IllegalArgumentException
      15: dup
      16: new           #57                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
      23: lload_3
      24: invokevirtual #59                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      27: ldc           #60                 // String  is not a multiple of
      29: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_0
      33: getfield      #11                 // Field entriesPerPage:I
      36: invokevirtual #62                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      39: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokespecial #64                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: iconst_0
      47: istore        5
      49: aload_0
      50: getfield      #9                  // Field pageCount:Ljava/util/concurrent/atomic/AtomicInteger;
      53: invokevirtual #65                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      56: aload_0
      57: getfield      #19                 // Field pageLimit:I
      60: if_icmpgt     69
      63: iconst_1
      64: istore        5
      66: goto          77
      69: aload_0
      70: getfield      #9                  // Field pageCount:Ljava/util/concurrent/atomic/AtomicInteger;
      73: invokevirtual #66                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
      76: pop
      77: iload         5
      79: ifeq          118
      82: new           #67                 // class org/apache/bookkeeper/bookie/LedgerEntryPage
      85: dup
      86: aload_0
      87: getfield      #10                 // Field pageSize:I
      90: aload_0
      91: getfield      #11                 // Field entriesPerPage:I
      94: aload_0
      95: getfield      #14                 // Field pageMapAndList:Lorg/apache/bookkeeper/bookie/IndexInMemPageMgr$InMemPageCollection;
      98: invokespecial #68                 // Method org/apache/bookkeeper/bookie/LedgerEntryPage."<init>":(IILorg/apache/bookkeeper/bookie/LEPStateChangeCallback;)V
     101: astore        6
     103: aload         6
     105: lload_1
     106: lload_3
     107: invokevirtual #69                 // Method org/apache/bookkeeper/bookie/LedgerEntryPage.setLedgerAndFirstEntry:(JJ)V
     110: aload         6
     112: invokevirtual #43                 // Method org/apache/bookkeeper/bookie/LedgerEntryPage.usePage:()V
     115: aload         6
     117: areturn
     118: aload_0
     119: getfield      #14                 // Field pageMapAndList:Lorg/apache/bookkeeper/bookie/IndexInMemPageMgr$InMemPageCollection;
     122: lload_1
     123: lload_3
     124: invokevirtual #70                 // Method org/apache/bookkeeper/bookie/IndexInMemPageMgr$InMemPageCollection.grabCleanPage:(JJ)Lorg/apache/bookkeeper/bookie/LedgerEntryPage;
     127: astore        6
     129: aconst_null
     130: aload         6
     132: if_acmpeq     138
     135: aload         6
     137: areturn
     138: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
     141: ldc           #71                 // String Could not grab a clean page for ledger {}, entry {}, force flushing dirty ledgers.
     143: lload_1
     144: invokestatic  #22                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     147: lload_3
     148: invokestatic  #22                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     151: invokeinterface #72,  4           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     156: aload_0
     157: iconst_0
     158: invokevirtual #73                 // Method flushOneOrMoreLedgers:(Z)V
     161: goto          46

  void flushOneOrMoreLedgers(boolean) throws java.io.IOException;
    Code:
       0: new           #74                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #14                 // Field pageMapAndList:Lorg/apache/bookkeeper/bookie/IndexInMemPageMgr$InMemPageCollection;
       8: invokevirtual #75                 // Method org/apache/bookkeeper/bookie/IndexInMemPageMgr$InMemPageCollection.getActiveLedgers:()Ljava/util/Set;
      11: invokespecial #76                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      14: astore_2
      15: aload_2
      16: invokeinterface #77,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      21: astore_3
      22: aload_3
      23: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          69
      31: aload_3
      32: invokeinterface #79,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #80                 // class java/lang/Long
      40: astore        4
      42: aload_0
      43: aload         4
      45: invokevirtual #81                 // Method java/lang/Long.longValue:()J
      48: invokespecial #82                 // Method flushSpecificLedger:(J)V
      51: goto          59
      54: astore        5
      56: goto          22
      59: iload_1
      60: ifne          66
      63: goto          69
      66: goto          22
      69: return
    Exception table:
       from    to  target type
          42    51    54   Class org/apache/bookkeeper/bookie/Bookie$NoLedgerException

  private void flushSpecificLedger(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field pageMapAndList:Lorg/apache/bookkeeper/bookie/IndexInMemPageMgr$InMemPageCollection;
       4: lload_1
       5: invokestatic  #84                 // Method org/apache/bookkeeper/bookie/IndexInMemPageMgr$InMemPageCollection.access$700:(Lorg/apache/bookkeeper/bookie/IndexInMemPageMgr$InMemPageCollection;J)Ljava/util/LinkedList;
       8: astore_3
       9: aload_0
      10: getfield      #2                  // Field indexPersistenceManager:Lorg/apache/bookkeeper/bookie/IndexPersistenceMgr;
      13: lload_1
      14: invokevirtual #85                 // Method org/apache/bookkeeper/bookie/IndexPersistenceMgr.flushLedgerHeader:(J)V
      17: aconst_null
      18: aload_3
      19: if_acmpeq     29
      22: aload_3
      23: invokevirtual #86                 // Method java/util/LinkedList.size:()I
      26: ifne          55
      29: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
      32: invokeinterface #87,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      37: ifeq          54
      40: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
      43: ldc           #88                 // String Nothing to flush for ledger {}.
      45: lload_1
      46: invokestatic  #22                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      49: invokeinterface #89,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      54: return
      55: new           #74                 // class java/util/ArrayList
      58: dup
      59: aload_3
      60: invokevirtual #86                 // Method java/util/LinkedList.size:()I
      63: invokespecial #90                 // Method java/util/ArrayList."<init>":(I)V
      66: astore        4
      68: aload_3
      69: invokevirtual #91                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      72: astore        5
      74: aload         5
      76: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      81: ifeq          127
      84: aload         5
      86: invokeinterface #79,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      91: checkcast     #80                 // class java/lang/Long
      94: astore        6
      96: aload_0
      97: lload_1
      98: aload         6
     100: invokevirtual #81                 // Method java/lang/Long.longValue:()J
     103: iconst_1
     104: invokevirtual #38                 // Method getLedgerEntryPageFromCache:(JJZ)Lorg/apache/bookkeeper/bookie/LedgerEntryPage;
     107: astore        7
     109: aload         7
     111: ifnull        124
     114: aload         4
     116: aload         7
     118: invokeinterface #92,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     123: pop
     124: goto          74
     127: aload_0
     128: getfield      #2                  // Field indexPersistenceManager:Lorg/apache/bookkeeper/bookie/IndexPersistenceMgr;
     131: lload_1
     132: aload         4
     134: invokevirtual #93                 // Method org/apache/bookkeeper/bookie/IndexPersistenceMgr.flushLedgerEntries:(JLjava/util/List;)V
     137: aload         4
     139: invokeinterface #77,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     144: astore        5
     146: aload         5
     148: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     153: ifeq          176
     156: aload         5
     158: invokeinterface #79,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     163: checkcast     #67                 // class org/apache/bookkeeper/bookie/LedgerEntryPage
     166: astore        6
     168: aload         6
     170: invokevirtual #94                 // Method org/apache/bookkeeper/bookie/LedgerEntryPage.releasePage:()V
     173: goto          146
     176: goto          223
     179: astore        8
     181: aload         4
     183: invokeinterface #77,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     188: astore        9
     190: aload         9
     192: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     197: ifeq          220
     200: aload         9
     202: invokeinterface #79,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     207: checkcast     #67                 // class org/apache/bookkeeper/bookie/LedgerEntryPage
     210: astore        10
     212: aload         10
     214: invokevirtual #94                 // Method org/apache/bookkeeper/bookie/LedgerEntryPage.releasePage:()V
     217: goto          190
     220: aload         8
     222: athrow
     223: return
    Exception table:
       from    to  target type
          68   137   179   any
         179   181   179   any

  void putEntryOffset(long, long, long) throws java.io.IOException;
    Code:
       0: lload_3
       1: aload_0
       2: getfield      #11                 // Field entriesPerPage:I
       5: i2l
       6: lrem
       7: l2i
       8: istore        7
      10: lload_3
      11: iload         7
      13: i2l
      14: lsub
      15: lstore        8
      17: aconst_null
      18: astore        10
      20: aload_0
      21: lload_1
      22: lload         8
      24: invokevirtual #95                 // Method getLedgerEntryPage:(JJ)Lorg/apache/bookkeeper/bookie/LedgerEntryPage;
      27: astore        10
      29: getstatic     #96                 // Field $assertionsDisabled:Z
      32: ifne          48
      35: aload         10
      37: ifnonnull     48
      40: new           #97                 // class java/lang/AssertionError
      43: dup
      44: invokespecial #98                 // Method java/lang/AssertionError."<init>":()V
      47: athrow
      48: aload         10
      50: lload         5
      52: iload         7
      54: invokestatic  #99                 // Method org/apache/bookkeeper/bookie/LedgerEntryPage.getIndexEntrySize:()I
      57: imul
      58: invokevirtual #100                // Method org/apache/bookkeeper/bookie/LedgerEntryPage.setOffset:(JI)V
      61: aconst_null
      62: aload         10
      64: if_acmpeq     102
      67: aload         10
      69: invokevirtual #94                 // Method org/apache/bookkeeper/bookie/LedgerEntryPage.releasePage:()V
      72: goto          102
      75: astore        11
      77: new           #83                 // class org/apache/bookkeeper/bookie/Bookie$NoLedgerException
      80: dup
      81: lload_1
      82: invokespecial #102                // Method org/apache/bookkeeper/bookie/Bookie$NoLedgerException."<init>":(J)V
      85: athrow
      86: astore        12
      88: aconst_null
      89: aload         10
      91: if_acmpeq     99
      94: aload         10
      96: invokevirtual #94                 // Method org/apache/bookkeeper/bookie/LedgerEntryPage.releasePage:()V
      99: aload         12
     101: athrow
     102: return
    Exception table:
       from    to  target type
          20    61    75   Class org/apache/bookkeeper/bookie/FileInfo$FileInfoDeletedException
          20    61    86   any
          75    88    86   any

  long getEntryOffset(long, long) throws java.io.IOException;
    Code:
       0: lload_3
       1: aload_0
       2: getfield      #11                 // Field entriesPerPage:I
       5: i2l
       6: lrem
       7: l2i
       8: istore        5
      10: lload_3
      11: iload         5
      13: i2l
      14: lsub
      15: lstore        6
      17: aconst_null
      18: astore        8
      20: aload_0
      21: lload_1
      22: lload         6
      24: invokevirtual #95                 // Method getLedgerEntryPage:(JJ)Lorg/apache/bookkeeper/bookie/LedgerEntryPage;
      27: astore        8
      29: aload         8
      31: iload         5
      33: invokestatic  #99                 // Method org/apache/bookkeeper/bookie/LedgerEntryPage.getIndexEntrySize:()I
      36: imul
      37: invokevirtual #103                // Method org/apache/bookkeeper/bookie/LedgerEntryPage.getOffset:(I)J
      40: lstore        9
      42: aload         8
      44: ifnull        52
      47: aload         8
      49: invokevirtual #94                 // Method org/apache/bookkeeper/bookie/LedgerEntryPage.releasePage:()V
      52: lload         9
      54: lreturn
      55: astore        11
      57: aload         8
      59: ifnull        67
      62: aload         8
      64: invokevirtual #94                 // Method org/apache/bookkeeper/bookie/LedgerEntryPage.releasePage:()V
      67: aload         11
      69: athrow
    Exception table:
       from    to  target type
          20    42    55   any
          55    57    55   any

  public org.apache.bookkeeper.bookie.LedgerCache$PageEntriesIterable listEntries(long) throws java.io.IOException;
    Code:
       0: new           #104                // class org/apache/bookkeeper/bookie/IndexInMemPageMgr$PageEntriesIterableImpl
       3: dup
       4: aload_0
       5: lload_1
       6: invokespecial #105                // Method org/apache/bookkeeper/bookie/IndexInMemPageMgr$PageEntriesIterableImpl."<init>":(Lorg/apache/bookkeeper/bookie/IndexInMemPageMgr;J)V
       9: areturn

  static org.slf4j.Logger access$000();
    Code:
       0: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static java.util.concurrent.ConcurrentHashMap access$100();
    Code:
       0: getstatic     #4                  // Field EMPTY_PAGE_MAP:Ljava/util/concurrent/ConcurrentHashMap;
       3: areturn

  static int access$200(org.apache.bookkeeper.bookie.IndexInMemPageMgr);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method getNumUsedPages:()I
       4: ireturn

  static org.apache.bookkeeper.bookie.IndexPersistenceMgr access$800(org.apache.bookkeeper.bookie.IndexInMemPageMgr);
    Code:
       0: aload_0
       1: getfield      #2                  // Field indexPersistenceManager:Lorg/apache/bookkeeper/bookie/IndexPersistenceMgr;
       4: areturn

  static {};
    Code:
       0: ldc           #106                // class org/apache/bookkeeper/bookie/IndexInMemPageMgr
       2: invokevirtual #107                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #96                 // Field $assertionsDisabled:Z
      16: ldc           #106                // class org/apache/bookkeeper/bookie/IndexInMemPageMgr
      18: invokestatic  #108                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      21: putstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
      24: new           #109                // class java/util/concurrent/ConcurrentHashMap
      27: dup
      28: invokespecial #110                // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      31: putstatic     #4                  // Field EMPTY_PAGE_MAP:Ljava/util/concurrent/ConcurrentHashMap;
      34: return
}
