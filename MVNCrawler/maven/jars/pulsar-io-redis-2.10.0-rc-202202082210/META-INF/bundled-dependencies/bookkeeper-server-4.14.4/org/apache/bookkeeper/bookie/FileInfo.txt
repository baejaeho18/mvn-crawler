Compiled from "FileInfo.java"
class org.apache.bookkeeper.bookie.FileInfo extends org.apache.bookkeeper.common.util.Watchable<org.apache.bookkeeper.bookie.LastAddConfirmedUpdateNotification> {
  private static final org.slf4j.Logger LOG;

  static final int NO_MASTER_KEY;

  static final int STATE_FENCED_BIT;

  private java.nio.channels.FileChannel fc;

  private java.io.File lf;

  private java.nio.ByteBuffer explicitLac;

  byte[] masterKey;

  public static final int SIGNATURE;

  static final int V0;

  static final int V1;

  public static final int CURRENT_HEADER_VERSION;

  static final long START_OF_DATA;

  private long size;

  private boolean isClosed;

  private long sizeSinceLastWrite;

  private int stateBits;

  private boolean needFlushHeader;

  private java.lang.Long lac;

  protected java.lang.String mode;

  int headerVersion;

  private boolean deleted;

  public org.apache.bookkeeper.bookie.FileInfo(java.io.File, byte[], int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #2                  // Field org/apache/bookkeeper/bookie/LastAddConfirmedUpdateNotification.WATCHER_RECYCLER:Lorg/apache/bookkeeper/common/collections/RecyclableArrayList$Recycler;
       4: invokespecial #3                  // Method org/apache/bookkeeper/common/util/Watchable."<init>":(Lorg/apache/bookkeeper/common/collections/RecyclableArrayList$Recycler;)V
       7: aload_0
       8: aconst_null
       9: putfield      #4                  // Field explicitLac:Ljava/nio/ByteBuffer;
      12: aload_0
      13: iconst_0
      14: putfield      #5                  // Field needFlushHeader:Z
      17: aload_0
      18: aconst_null
      19: putfield      #6                  // Field lac:Ljava/lang/Long;
      22: aload_0
      23: aload_1
      24: putfield      #7                  // Field lf:Ljava/io/File;
      27: aload_0
      28: aload_2
      29: putfield      #8                  // Field masterKey:[B
      32: aload_0
      33: ldc           #9                  // String rw
      35: putfield      #10                 // Field mode:Ljava/lang/String;
      38: aload_0
      39: iload_3
      40: putfield      #11                 // Field headerVersion:I
      43: aload_0
      44: iconst_0
      45: putfield      #12                 // Field deleted:Z
      48: return

  synchronized java.lang.Long getLastAddConfirmed();
    Code:
       0: aload_0
       1: getfield      #6                  // Field lac:Ljava/lang/Long;
       4: areturn

  long setLastAddConfirmed(long);
    Code:
       0: iconst_0
       1: istore        5
       3: aload_0
       4: dup
       5: astore        6
       7: monitorenter
       8: aconst_null
       9: aload_0
      10: getfield      #6                  // Field lac:Ljava/lang/Long;
      13: if_acmpeq     28
      16: aload_0
      17: getfield      #6                  // Field lac:Ljava/lang/Long;
      20: invokevirtual #13                 // Method java/lang/Long.longValue:()J
      23: lload_1
      24: lcmp
      25: ifge          39
      28: aload_0
      29: lload_1
      30: invokestatic  #14                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      33: putfield      #6                  // Field lac:Ljava/lang/Long;
      36: iconst_1
      37: istore        5
      39: aload_0
      40: getfield      #6                  // Field lac:Ljava/lang/Long;
      43: invokevirtual #13                 // Method java/lang/Long.longValue:()J
      46: lstore_3
      47: aload         6
      49: monitorexit
      50: goto          61
      53: astore        7
      55: aload         6
      57: monitorexit
      58: aload         7
      60: athrow
      61: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      64: invokeinterface #16,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
      69: ifeq          90
      72: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      75: ldc           #17                 // String Updating LAC {} , {}
      77: lload_3
      78: invokestatic  #14                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      81: lload_1
      82: invokestatic  #14                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      85: invokeinterface #18,  4           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      90: iload         5
      92: ifeq          106
      95: aload_0
      96: getstatic     #19                 // Field org/apache/bookkeeper/bookie/LastAddConfirmedUpdateNotification.FUNC:Ljava/util/function/Function;
      99: lload_3
     100: invokestatic  #14                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     103: invokevirtual #20                 // Method notifyWatchers:(Ljava/util/function/Function;Ljava/lang/Object;)V
     106: lload_3
     107: lreturn
    Exception table:
       from    to  target type
           8    50    53   any
          53    58    53   any

  synchronized boolean waitForLastAddConfirmedUpdate(long, org.apache.bookkeeper.common.util.Watcher<org.apache.bookkeeper.bookie.LastAddConfirmedUpdateNotification>);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #6                  // Field lac:Ljava/lang/Long;
       5: if_acmpeq     20
       8: aload_0
       9: getfield      #6                  // Field lac:Ljava/lang/Long;
      12: invokevirtual #13                 // Method java/lang/Long.longValue:()J
      15: lload_1
      16: lcmp
      17: ifgt          27
      20: aload_0
      21: getfield      #21                 // Field isClosed:Z
      24: ifeq          58
      27: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      30: invokeinterface #16,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
      35: ifeq          56
      38: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      41: ldc           #22                 // String Wait For LAC {} , {}
      43: aload_0
      44: getfield      #6                  // Field lac:Ljava/lang/Long;
      47: lload_1
      48: invokestatic  #14                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      51: invokeinterface #18,  4           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      56: iconst_0
      57: ireturn
      58: aload_0
      59: aload_3
      60: invokevirtual #23                 // Method addWatcher:(Lorg/apache/bookkeeper/common/util/Watcher;)Z
      63: pop
      64: iconst_1
      65: ireturn

  synchronized void cancelWaitForLastAddConfirmedUpdate(org.apache.bookkeeper.common.util.Watcher<org.apache.bookkeeper.bookie.LastAddConfirmedUpdateNotification>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #24                 // Method deleteWatcher:(Lorg/apache/bookkeeper/common/util/Watcher;)Z
       5: pop
       6: return

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #21                 // Field isClosed:Z
       4: ireturn

  public synchronized java.io.File getLf();
    Code:
       0: aload_0
       1: getfield      #7                  // Field lf:Ljava/io/File;
       4: areturn

  public long getSizeSinceLastWrite();
    Code:
       0: aload_0
       1: getfield      #25                 // Field sizeSinceLastWrite:J
       4: lreturn

  public io.netty.buffer.ByteBuf getExplicitLac();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: dup
       4: astore_2
       5: monitorenter
       6: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
       9: invokeinterface #26,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      14: ifeq          31
      17: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      20: ldc           #27                 // String fileInfo:GetLac: {}
      22: aload_0
      23: getfield      #4                  // Field explicitLac:Ljava/nio/ByteBuffer;
      26: invokeinterface #28,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      31: aload_0
      32: getfield      #4                  // Field explicitLac:Ljava/nio/ByteBuffer;
      35: ifnull        78
      38: aload_0
      39: getfield      #4                  // Field explicitLac:Ljava/nio/ByteBuffer;
      42: invokevirtual #29                 // Method java/nio/ByteBuffer.capacity:()I
      45: invokestatic  #30                 // Method io/netty/buffer/Unpooled.buffer:(I)Lio/netty/buffer/ByteBuf;
      48: astore_1
      49: aload_0
      50: getfield      #4                  // Field explicitLac:Ljava/nio/ByteBuffer;
      53: invokevirtual #31                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
      56: pop
      57: aload_1
      58: aload_0
      59: getfield      #4                  // Field explicitLac:Ljava/nio/ByteBuffer;
      62: invokevirtual #32                 // Method io/netty/buffer/ByteBuf.writeBytes:(Ljava/nio/ByteBuffer;)Lio/netty/buffer/ByteBuf;
      65: pop
      66: aload_0
      67: getfield      #4                  // Field explicitLac:Ljava/nio/ByteBuffer;
      70: invokevirtual #31                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
      73: pop
      74: aload_1
      75: aload_2
      76: monitorexit
      77: areturn
      78: aload_2
      79: monitorexit
      80: goto          88
      83: astore_3
      84: aload_2
      85: monitorexit
      86: aload_3
      87: athrow
      88: aload_1
      89: areturn
    Exception table:
       from    to  target type
           6    77    83   any
          78    80    83   any
          83    86    83   any

  public void setExplicitLac(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: dup
       2: astore        4
       4: monitorenter
       5: aload_0
       6: getfield      #4                  // Field explicitLac:Ljava/nio/ByteBuffer;
       9: ifnonnull     23
      12: aload_0
      13: aload_1
      14: invokevirtual #33                 // Method io/netty/buffer/ByteBuf.capacity:()I
      17: invokestatic  #34                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      20: putfield      #4                  // Field explicitLac:Ljava/nio/ByteBuffer;
      23: aload_1
      24: aload_0
      25: getfield      #4                  // Field explicitLac:Ljava/nio/ByteBuffer;
      28: invokevirtual #35                 // Method io/netty/buffer/ByteBuf.readBytes:(Ljava/nio/ByteBuffer;)Lio/netty/buffer/ByteBuf;
      31: pop
      32: aload_0
      33: getfield      #4                  // Field explicitLac:Ljava/nio/ByteBuffer;
      36: invokevirtual #31                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
      39: pop
      40: aload_0
      41: getfield      #4                  // Field explicitLac:Ljava/nio/ByteBuffer;
      44: invokevirtual #36                 // Method java/nio/ByteBuffer.getLong:()J
      47: pop2
      48: aload_0
      49: getfield      #4                  // Field explicitLac:Ljava/nio/ByteBuffer;
      52: invokevirtual #36                 // Method java/nio/ByteBuffer.getLong:()J
      55: lstore_2
      56: aload_0
      57: getfield      #4                  // Field explicitLac:Ljava/nio/ByteBuffer;
      60: invokevirtual #31                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
      63: pop
      64: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      67: invokeinterface #26,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      72: ifeq          89
      75: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      78: ldc           #37                 // String fileInfo:SetLac: {}
      80: aload_0
      81: getfield      #4                  // Field explicitLac:Ljava/nio/ByteBuffer;
      84: invokeinterface #28,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      89: aload_0
      90: iconst_1
      91: putfield      #5                  // Field needFlushHeader:Z
      94: aload         4
      96: monitorexit
      97: goto          108
     100: astore        5
     102: aload         4
     104: monitorexit
     105: aload         5
     107: athrow
     108: aload_0
     109: lload_2
     110: invokevirtual #38                 // Method setLastAddConfirmed:(J)J
     113: pop2
     114: return
    Exception table:
       from    to  target type
           5    97   100   any
         100   105   100   any

  public synchronized void readHeader() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field lf:Ljava/io/File;
       4: invokevirtual #39                 // Method java/io/File.exists:()Z
       7: ifeq          412
      10: aload_0
      11: getfield      #40                 // Field fc:Ljava/nio/channels/FileChannel;
      14: ifnull        18
      17: return
      18: aload_0
      19: new           #41                 // class java/io/RandomAccessFile
      22: dup
      23: aload_0
      24: getfield      #7                  // Field lf:Ljava/io/File;
      27: aload_0
      28: getfield      #10                 // Field mode:Ljava/lang/String;
      31: invokespecial #42                 // Method java/io/RandomAccessFile."<init>":(Ljava/io/File;Ljava/lang/String;)V
      34: invokevirtual #43                 // Method java/io/RandomAccessFile.getChannel:()Ljava/nio/channels/FileChannel;
      37: putfield      #40                 // Field fc:Ljava/nio/channels/FileChannel;
      40: aload_0
      41: aload_0
      42: getfield      #40                 // Field fc:Ljava/nio/channels/FileChannel;
      45: invokevirtual #44                 // Method java/nio/channels/FileChannel.size:()J
      48: putfield      #45                 // Field size:J
      51: aload_0
      52: aload_0
      53: getfield      #45                 // Field size:J
      56: putfield      #25                 // Field sizeSinceLastWrite:J
      59: aload_0
      60: getfield      #45                 // Field size:J
      63: ldc2_w        #46                 // long 1024l
      66: invokestatic  #48                 // Method java/lang/Math.min:(JJ)J
      69: l2i
      70: invokestatic  #34                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      73: astore_1
      74: aload_1
      75: invokevirtual #49                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      78: ifeq          93
      81: aload_0
      82: getfield      #40                 // Field fc:Ljava/nio/channels/FileChannel;
      85: aload_1
      86: invokevirtual #50                 // Method java/nio/channels/FileChannel.read:(Ljava/nio/ByteBuffer;)I
      89: pop
      90: goto          74
      93: aload_1
      94: invokevirtual #51                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      97: pop
      98: aload_1
      99: invokevirtual #52                 // Method java/nio/ByteBuffer.getInt:()I
     102: getstatic     #53                 // Field SIGNATURE:I
     105: if_icmpeq     138
     108: new           #54                 // class java/io/IOException
     111: dup
     112: new           #55                 // class java/lang/StringBuilder
     115: dup
     116: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
     119: ldc           #57                 // String Missing ledger signature while reading header for
     121: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: aload_0
     125: getfield      #7                  // Field lf:Ljava/io/File;
     128: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     131: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     134: invokespecial #61                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     137: athrow
     138: aload_1
     139: invokevirtual #52                 // Method java/nio/ByteBuffer.getInt:()I
     142: istore_2
     143: iload_2
     144: iconst_1
     145: if_icmple     187
     148: new           #54                 // class java/io/IOException
     151: dup
     152: new           #55                 // class java/lang/StringBuilder
     155: dup
     156: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
     159: ldc           #62                 // String Incompatible ledger version
     161: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: iload_2
     165: invokevirtual #63                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     168: ldc           #64                 // String  while reading header for
     170: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     173: aload_0
     174: getfield      #7                  // Field lf:Ljava/io/File;
     177: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     180: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     183: invokespecial #61                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     186: athrow
     187: aload_0
     188: iload_2
     189: putfield      #11                 // Field headerVersion:I
     192: aload_1
     193: invokevirtual #52                 // Method java/nio/ByteBuffer.getInt:()I
     196: istore_3
     197: iload_3
     198: ifge          240
     201: new           #54                 // class java/io/IOException
     204: dup
     205: new           #55                 // class java/lang/StringBuilder
     208: dup
     209: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
     212: ldc           #65                 // String Length
     214: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     217: iload_3
     218: invokevirtual #63                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     221: ldc           #66                 // String  is invalid while reading header for
     223: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     226: aload_0
     227: getfield      #7                  // Field lf:Ljava/io/File;
     230: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     233: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     236: invokespecial #61                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     239: athrow
     240: iload_3
     241: aload_1
     242: invokevirtual #67                 // Method java/nio/ByteBuffer.remaining:()I
     245: if_icmple     256
     248: new           #68                 // class java/nio/BufferUnderflowException
     251: dup
     252: invokespecial #69                 // Method java/nio/BufferUnderflowException."<init>":()V
     255: athrow
     256: aload_0
     257: iload_3
     258: newarray       byte
     260: putfield      #8                  // Field masterKey:[B
     263: aload_1
     264: aload_0
     265: getfield      #8                  // Field masterKey:[B
     268: invokevirtual #70                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
     271: pop
     272: aload_0
     273: aload_1
     274: invokevirtual #52                 // Method java/nio/ByteBuffer.getInt:()I
     277: putfield      #71                 // Field stateBits:I
     280: aload_0
     281: getfield      #11                 // Field headerVersion:I
     284: iconst_1
     285: if_icmplt     404
     288: aload_1
     289: invokevirtual #52                 // Method java/nio/ByteBuffer.getInt:()I
     292: istore        4
     294: iload         4
     296: ifne          307
     299: aload_0
     300: aconst_null
     301: putfield      #4                  // Field explicitLac:Ljava/nio/ByteBuffer;
     304: goto          404
     307: iload         4
     309: bipush        16
     311: if_icmplt     364
     314: aload_0
     315: getfield      #4                  // Field explicitLac:Ljava/nio/ByteBuffer;
     318: ifnonnull     330
     321: aload_0
     322: iload         4
     324: invokestatic  #34                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
     327: putfield      #4                  // Field explicitLac:Ljava/nio/ByteBuffer;
     330: iload         4
     332: newarray       byte
     334: astore        5
     336: aload_1
     337: aload         5
     339: invokevirtual #70                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
     342: pop
     343: aload_0
     344: getfield      #4                  // Field explicitLac:Ljava/nio/ByteBuffer;
     347: aload         5
     349: invokevirtual #73                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
     352: pop
     353: aload_0
     354: getfield      #4                  // Field explicitLac:Ljava/nio/ByteBuffer;
     357: invokevirtual #31                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
     360: pop
     361: goto          404
     364: new           #54                 // class java/io/IOException
     367: dup
     368: new           #55                 // class java/lang/StringBuilder
     371: dup
     372: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
     375: ldc           #74                 // String ExplicitLacBufLength
     377: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     380: iload         4
     382: invokevirtual #63                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     385: ldc           #66                 // String  is invalid while reading header for
     387: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     390: aload_0
     391: getfield      #7                  // Field lf:Ljava/io/File;
     394: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     397: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     400: invokespecial #61                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     403: athrow
     404: aload_0
     405: iconst_0
     406: putfield      #5                  // Field needFlushHeader:Z
     409: goto          447
     412: new           #54                 // class java/io/IOException
     415: dup
     416: new           #55                 // class java/lang/StringBuilder
     419: dup
     420: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
     423: ldc           #75                 // String Ledger index file
     425: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     428: aload_0
     429: getfield      #7                  // Field lf:Ljava/io/File;
     432: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     435: ldc           #76                 // String  does not exist
     437: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     440: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     443: invokespecial #61                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     446: athrow
     447: return

  public synchronized boolean isDeleted();
    Code:
       0: aload_0
       1: getfield      #12                 // Field deleted:Z
       4: ireturn

  void checkOpen(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokespecial #77                 // Method checkOpen:(ZZ)V
       6: return

  private synchronized void checkOpen(boolean, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field deleted:Z
       4: ifeq          15
       7: new           #78                 // class org/apache/bookkeeper/bookie/FileInfo$FileInfoDeletedException
      10: dup
      11: invokespecial #79                 // Method org/apache/bookkeeper/bookie/FileInfo$FileInfoDeletedException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #40                 // Field fc:Ljava/nio/channels/FileChannel;
      19: ifnull        23
      22: return
      23: aload_0
      24: getfield      #7                  // Field lf:Ljava/io/File;
      27: invokevirtual #39                 // Method java/io/File.exists:()Z
      30: istore_3
      31: aload_0
      32: getfield      #8                  // Field masterKey:[B
      35: ifnonnull     72
      38: iload_3
      39: ifne          72
      42: new           #54                 // class java/io/IOException
      45: dup
      46: new           #55                 // class java/lang/StringBuilder
      49: dup
      50: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
      53: aload_0
      54: getfield      #7                  // Field lf:Ljava/io/File;
      57: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      60: ldc           #80                 // String  not found
      62: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokespecial #61                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: iload_3
      73: ifne          136
      76: iload_1
      77: ifeq          225
      80: aload_0
      81: getfield      #7                  // Field lf:Ljava/io/File;
      84: invokestatic  #81                 // Method checkParents:(Ljava/io/File;)V
      87: aload_0
      88: new           #41                 // class java/io/RandomAccessFile
      91: dup
      92: aload_0
      93: getfield      #7                  // Field lf:Ljava/io/File;
      96: aload_0
      97: getfield      #10                 // Field mode:Ljava/lang/String;
     100: invokespecial #42                 // Method java/io/RandomAccessFile."<init>":(Ljava/io/File;Ljava/lang/String;)V
     103: invokevirtual #43                 // Method java/io/RandomAccessFile.getChannel:()Ljava/nio/channels/FileChannel;
     106: putfield      #40                 // Field fc:Ljava/nio/channels/FileChannel;
     109: aload_0
     110: aload_0
     111: getfield      #40                 // Field fc:Ljava/nio/channels/FileChannel;
     114: invokevirtual #44                 // Method java/nio/channels/FileChannel.size:()J
     117: putfield      #45                 // Field size:J
     120: aload_0
     121: getfield      #45                 // Field size:J
     124: lconst_0
     125: lcmp
     126: ifne          225
     129: aload_0
     130: invokespecial #82                 // Method writeHeader:()V
     133: goto          225
     136: iload_2
     137: ifeq          141
     140: return
     141: aload_0
     142: invokevirtual #83                 // Method readHeader:()V
     145: goto          225
     148: astore        4
     150: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
     153: ldc           #84                 // String Exception when reading header of {}.
     155: aload_0
     156: getfield      #7                  // Field lf:Ljava/io/File;
     159: aload         4
     161: invokeinterface #85,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     166: aconst_null
     167: aload_0
     168: getfield      #8                  // Field masterKey:[B
     171: if_acmpeq     195
     174: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
     177: ldc           #86                 // String Attempting to write header of {} again.
     179: aload_0
     180: getfield      #7                  // Field lf:Ljava/io/File;
     183: invokeinterface #87,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     188: aload_0
     189: invokespecial #82                 // Method writeHeader:()V
     192: goto          225
     195: new           #54                 // class java/io/IOException
     198: dup
     199: new           #55                 // class java/lang/StringBuilder
     202: dup
     203: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
     206: ldc           #88                 // String Error reading header
     208: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     211: aload_0
     212: getfield      #7                  // Field lf:Ljava/io/File;
     215: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     218: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     221: invokespecial #61                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     224: athrow
     225: return
    Exception table:
       from    to  target type
         141   145   148   Class java/nio/BufferUnderflowException

  private void writeHeader() throws java.io.IOException;
    Code:
       0: sipush        1024
       3: invokestatic  #34                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
       6: astore_1
       7: aload_1
       8: getstatic     #53                 // Field SIGNATURE:I
      11: invokevirtual #89                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      14: pop
      15: aload_1
      16: aload_0
      17: getfield      #11                 // Field headerVersion:I
      20: invokevirtual #89                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      23: pop
      24: aload_1
      25: aload_0
      26: getfield      #8                  // Field masterKey:[B
      29: arraylength
      30: invokevirtual #89                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      33: pop
      34: aload_1
      35: aload_0
      36: getfield      #8                  // Field masterKey:[B
      39: invokevirtual #73                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
      42: pop
      43: aload_1
      44: aload_0
      45: getfield      #71                 // Field stateBits:I
      48: invokevirtual #89                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      51: pop
      52: aload_0
      53: getfield      #11                 // Field headerVersion:I
      56: iconst_1
      57: if_icmplt     113
      60: aload_0
      61: getfield      #4                  // Field explicitLac:Ljava/nio/ByteBuffer;
      64: ifnull        107
      67: aload_0
      68: getfield      #4                  // Field explicitLac:Ljava/nio/ByteBuffer;
      71: invokevirtual #31                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
      74: pop
      75: aload_1
      76: aload_0
      77: getfield      #4                  // Field explicitLac:Ljava/nio/ByteBuffer;
      80: invokevirtual #29                 // Method java/nio/ByteBuffer.capacity:()I
      83: invokevirtual #89                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      86: pop
      87: aload_1
      88: aload_0
      89: getfield      #4                  // Field explicitLac:Ljava/nio/ByteBuffer;
      92: invokevirtual #90                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      95: pop
      96: aload_0
      97: getfield      #4                  // Field explicitLac:Ljava/nio/ByteBuffer;
     100: invokevirtual #31                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
     103: pop
     104: goto          113
     107: aload_1
     108: iconst_0
     109: invokevirtual #89                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
     112: pop
     113: aload_1
     114: invokevirtual #31                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
     117: pop
     118: aload_0
     119: getfield      #40                 // Field fc:Ljava/nio/channels/FileChannel;
     122: lconst_0
     123: invokevirtual #91                 // Method java/nio/channels/FileChannel.position:(J)Ljava/nio/channels/FileChannel;
     126: pop
     127: aload_0
     128: getfield      #40                 // Field fc:Ljava/nio/channels/FileChannel;
     131: aload_1
     132: invokevirtual #92                 // Method java/nio/channels/FileChannel.write:(Ljava/nio/ByteBuffer;)I
     135: pop
     136: return

  public synchronized boolean isFenced() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #93                 // Method checkOpen:(Z)V
       5: aload_0
       6: getfield      #71                 // Field stateBits:I
       9: iconst_1
      10: iand
      11: iconst_1
      12: if_icmpne     19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public boolean setFenced() throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: aload_0
       5: dup
       6: astore_3
       7: monitorenter
       8: aload_0
       9: iconst_0
      10: invokevirtual #93                 // Method checkOpen:(Z)V
      13: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      16: invokeinterface #26,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      21: ifeq          45
      24: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
      27: ldc           #94                 // String Try to set fenced state in file info {} : state bits {}.
      29: aload_0
      30: getfield      #7                  // Field lf:Ljava/io/File;
      33: aload_0
      34: getfield      #71                 // Field stateBits:I
      37: invokestatic  #95                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      40: invokeinterface #96,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      45: aload_0
      46: getfield      #71                 // Field stateBits:I
      49: iconst_1
      50: iand
      51: iconst_1
      52: if_icmpeq     74
      55: aload_0
      56: dup
      57: getfield      #71                 // Field stateBits:I
      60: iconst_1
      61: ior
      62: putfield      #71                 // Field stateBits:I
      65: aload_0
      66: iconst_1
      67: putfield      #5                  // Field needFlushHeader:Z
      70: iconst_1
      71: istore_2
      72: iconst_1
      73: istore_1
      74: aload_3
      75: monitorexit
      76: goto          86
      79: astore        4
      81: aload_3
      82: monitorexit
      83: aload         4
      85: athrow
      86: iload_2
      87: ifeq          103
      90: aload_0
      91: getstatic     #19                 // Field org/apache/bookkeeper/bookie/LastAddConfirmedUpdateNotification.FUNC:Ljava/util/function/Function;
      94: ldc2_w        #98                 // long 9223372036854775807l
      97: invokestatic  #14                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     100: invokevirtual #20                 // Method notifyWatchers:(Ljava/util/function/Function;Ljava/lang/Object;)V
     103: iload_1
     104: ireturn
    Exception table:
       from    to  target type
           8    76    79   any
          79    83    79   any

  public synchronized void flushHeader() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field needFlushHeader:Z
       4: ifeq          21
       7: aload_0
       8: iconst_1
       9: invokevirtual #93                 // Method checkOpen:(Z)V
      12: aload_0
      13: invokespecial #82                 // Method writeHeader:()V
      16: aload_0
      17: iconst_0
      18: putfield      #5                  // Field needFlushHeader:Z
      21: return

  public synchronized long size() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #93                 // Method checkOpen:(Z)V
       5: aload_0
       6: getfield      #45                 // Field size:J
       9: ldc2_w        #46                 // long 1024l
      12: lsub
      13: lstore_1
      14: lload_1
      15: lconst_0
      16: lcmp
      17: ifge          22
      20: lconst_0
      21: lstore_1
      22: lload_1
      23: lreturn

  public int read(java.nio.ByteBuffer, long, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: ldc2_w        #46                 // long 1024l
       6: ladd
       7: iload         4
       9: invokespecial #100                // Method readAbsolute:(Ljava/nio/ByteBuffer;JZ)I
      12: ireturn

  private int readAbsolute(java.nio.ByteBuffer, long, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #93                 // Method checkOpen:(Z)V
       5: aload_0
       6: dup
       7: astore        5
       9: monitorenter
      10: aload_0
      11: getfield      #40                 // Field fc:Ljava/nio/channels/FileChannel;
      14: ifnonnull     22
      17: iconst_0
      18: aload         5
      20: monitorexit
      21: ireturn
      22: aload         5
      24: monitorexit
      25: goto          36
      28: astore        6
      30: aload         5
      32: monitorexit
      33: aload         6
      35: athrow
      36: iconst_0
      37: istore        5
      39: iconst_0
      40: istore        6
      42: aload_1
      43: invokevirtual #67                 // Method java/nio/ByteBuffer.remaining:()I
      46: ifle          150
      49: aload_0
      50: dup
      51: astore        7
      53: monitorenter
      54: aload_0
      55: getfield      #40                 // Field fc:Ljava/nio/channels/FileChannel;
      58: aload_1
      59: lload_2
      60: invokevirtual #101                // Method java/nio/channels/FileChannel.read:(Ljava/nio/ByteBuffer;J)I
      63: istore        6
      65: aload         7
      67: monitorexit
      68: goto          79
      71: astore        8
      73: aload         7
      75: monitorexit
      76: aload         8
      78: athrow
      79: iload         6
      81: ifgt          134
      84: iload         4
      86: ifeq          92
      89: iload         5
      91: ireturn
      92: new           #102                // class org/apache/bookkeeper/bookie/ShortReadException
      95: dup
      96: new           #55                 // class java/lang/StringBuilder
      99: dup
     100: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
     103: ldc           #103                // String Short read at
     105: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: aload_0
     109: invokevirtual #104                // Method getLf:()Ljava/io/File;
     112: invokevirtual #105                // Method java/io/File.getPath:()Ljava/lang/String;
     115: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: ldc           #106                // String @
     120: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: lload_2
     124: invokevirtual #107                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     127: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     130: invokespecial #108                // Method org/apache/bookkeeper/bookie/ShortReadException."<init>":(Ljava/lang/String;)V
     133: athrow
     134: iload         5
     136: iload         6
     138: iadd
     139: istore        5
     141: lload_2
     142: iload         6
     144: i2l
     145: ladd
     146: lstore_2
     147: goto          42
     150: iload         5
     152: ireturn
    Exception table:
       from    to  target type
          10    21    28   any
          22    25    28   any
          28    33    28   any
          54    68    71   any
          71    76    71   any

  public void close(boolean) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: dup
       4: astore_3
       5: monitorenter
       6: aload_0
       7: getfield      #21                 // Field isClosed:Z
      10: ifeq          16
      13: aload_3
      14: monitorexit
      15: return
      16: aload_0
      17: iconst_1
      18: putfield      #21                 // Field isClosed:Z
      21: aload_0
      22: iload_1
      23: iconst_1
      24: invokespecial #77                 // Method checkOpen:(ZZ)V
      27: iload_1
      28: ifeq          35
      31: aload_0
      32: invokevirtual #109                // Method flushHeader:()V
      35: iconst_1
      36: istore_2
      37: aload_0
      38: getfield      #40                 // Field fc:Ljava/nio/channels/FileChannel;
      41: ifnull        51
      44: aload_0
      45: getfield      #40                 // Field fc:Ljava/nio/channels/FileChannel;
      48: invokevirtual #110                // Method java/nio/channels/FileChannel.close:()V
      51: aload_0
      52: aconst_null
      53: putfield      #40                 // Field fc:Ljava/nio/channels/FileChannel;
      56: aload_3
      57: monitorexit
      58: goto          68
      61: astore        4
      63: aload_3
      64: monitorexit
      65: aload         4
      67: athrow
      68: iload_2
      69: ifeq          85
      72: aload_0
      73: getstatic     #19                 // Field org/apache/bookkeeper/bookie/LastAddConfirmedUpdateNotification.FUNC:Ljava/util/function/Function;
      76: ldc2_w        #98                 // long 9223372036854775807l
      79: invokestatic  #14                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      82: invokevirtual #20                 // Method notifyWatchers:(Ljava/util/function/Function;Ljava/lang/Object;)V
      85: return
    Exception table:
       from    to  target type
           6    15    61   any
          16    58    61   any
          61    65    61   any

  public synchronized long write(java.nio.ByteBuffer[], long) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #93                 // Method checkOpen:(Z)V
       5: lconst_0
       6: lstore        4
       8: aload_0
       9: getfield      #40                 // Field fc:Ljava/nio/channels/FileChannel;
      12: lload_2
      13: ldc2_w        #46                 // long 1024l
      16: ladd
      17: invokevirtual #91                 // Method java/nio/channels/FileChannel.position:(J)Ljava/nio/channels/FileChannel;
      20: pop
      21: aload_1
      22: aload_1
      23: arraylength
      24: iconst_1
      25: isub
      26: aaload
      27: invokevirtual #67                 // Method java/nio/ByteBuffer.remaining:()I
      30: ifle          70
      33: aload_0
      34: getfield      #40                 // Field fc:Ljava/nio/channels/FileChannel;
      37: aload_1
      38: invokevirtual #111                // Method java/nio/channels/FileChannel.write:([Ljava/nio/ByteBuffer;)J
      41: lstore        6
      43: lload         6
      45: lconst_0
      46: lcmp
      47: ifgt          60
      50: new           #54                 // class java/io/IOException
      53: dup
      54: ldc           #112                // String Short write
      56: invokespecial #61                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      59: athrow
      60: lload         4
      62: lload         6
      64: ladd
      65: lstore        4
      67: goto          21
      70: aload_0
      71: getfield      #40                 // Field fc:Ljava/nio/channels/FileChannel;
      74: iconst_1
      75: invokevirtual #113                // Method java/nio/channels/FileChannel.force:(Z)V
      78: lload_2
      79: ldc2_w        #46                 // long 1024l
      82: ladd
      83: lload         4
      85: ladd
      86: lstore        6
      88: lload         6
      90: aload_0
      91: getfield      #45                 // Field size:J
      94: lcmp
      95: ifle          104
      98: aload_0
      99: lload         6
     101: putfield      #45                 // Field size:J
     104: goto          146
     107: astore        8
     109: aload_0
     110: getfield      #40                 // Field fc:Ljava/nio/channels/FileChannel;
     113: iconst_1
     114: invokevirtual #113                // Method java/nio/channels/FileChannel.force:(Z)V
     117: lload_2
     118: ldc2_w        #46                 // long 1024l
     121: ladd
     122: lload         4
     124: ladd
     125: lstore        9
     127: lload         9
     129: aload_0
     130: getfield      #45                 // Field size:J
     133: lcmp
     134: ifle          143
     137: aload_0
     138: lload         9
     140: putfield      #45                 // Field size:J
     143: aload         8
     145: athrow
     146: aload_0
     147: aload_0
     148: getfield      #40                 // Field fc:Ljava/nio/channels/FileChannel;
     151: invokevirtual #44                 // Method java/nio/channels/FileChannel.size:()J
     154: putfield      #25                 // Field sizeSinceLastWrite:J
     157: lload         4
     159: lreturn
    Exception table:
       from    to  target type
           8    70   107   any
         107   109   107   any

  public synchronized void moveToNewLocation(java.io.File, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #93                 // Method checkOpen:(Z)V
       5: aconst_null
       6: aload_0
       7: getfield      #40                 // Field fc:Ljava/nio/channels/FileChannel;
      10: if_acmpeq     21
      13: aload_0
      14: aload_1
      15: invokevirtual #114                // Method isSameFile:(Ljava/io/File;)Z
      18: ifeq          22
      21: return
      22: lload_2
      23: aload_0
      24: getfield      #40                 // Field fc:Ljava/nio/channels/FileChannel;
      27: invokevirtual #44                 // Method java/nio/channels/FileChannel.size:()J
      30: lcmp
      31: ifle          42
      34: aload_0
      35: getfield      #40                 // Field fc:Ljava/nio/channels/FileChannel;
      38: invokevirtual #44                 // Method java/nio/channels/FileChannel.size:()J
      41: lstore_2
      42: new           #115                // class java/io/File
      45: dup
      46: aload_1
      47: invokevirtual #116                // Method java/io/File.getParentFile:()Ljava/io/File;
      50: new           #55                 // class java/lang/StringBuilder
      53: dup
      54: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
      57: aload_1
      58: invokevirtual #117                // Method java/io/File.getName:()Ljava/lang/String;
      61: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: ldc           #119                // String .rloc
      66: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: invokespecial #120                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      75: astore        4
      77: aload         4
      79: invokevirtual #39                 // Method java/io/File.exists:()Z
      82: ifne          131
      85: aload         4
      87: invokestatic  #81                 // Method checkParents:(Ljava/io/File;)V
      90: aload         4
      92: invokevirtual #121                // Method java/io/File.createNewFile:()Z
      95: ifne          131
      98: new           #54                 // class java/io/IOException
     101: dup
     102: new           #55                 // class java/lang/StringBuilder
     105: dup
     106: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
     109: ldc           #122                // String Creating new cache index file
     111: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: aload         4
     116: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     119: ldc           #123                // String  failed
     121: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     127: invokespecial #61                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     130: athrow
     131: new           #41                 // class java/io/RandomAccessFile
     134: dup
     135: aload         4
     137: ldc           #9                  // String rw
     139: invokespecial #42                 // Method java/io/RandomAccessFile."<init>":(Ljava/io/File;Ljava/lang/String;)V
     142: invokevirtual #43                 // Method java/io/RandomAccessFile.getChannel:()Ljava/nio/channels/FileChannel;
     145: astore        5
     147: lconst_0
     148: lstore        6
     150: lload         6
     152: lload_2
     153: lcmp
     154: ifge          221
     157: aload_0
     158: getfield      #40                 // Field fc:Ljava/nio/channels/FileChannel;
     161: lload         6
     163: lload_2
     164: aload         5
     166: invokevirtual #124                // Method java/nio/channels/FileChannel.transferTo:(JJLjava/nio/channels/WritableByteChannel;)J
     169: lstore        8
     171: lload         8
     173: lconst_0
     174: lcmp
     175: ifgt          211
     178: new           #54                 // class java/io/IOException
     181: dup
     182: new           #55                 // class java/lang/StringBuilder
     185: dup
     186: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
     189: ldc           #125                // String Copying to new location
     191: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     194: aload         4
     196: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     199: ldc           #126                // String  failed
     201: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     204: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     207: invokespecial #61                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     210: athrow
     211: lload         6
     213: lload         8
     215: ladd
     216: lstore        6
     218: goto          150
     221: lload         6
     223: lconst_0
     224: lcmp
     225: ifgt          267
     228: lload_2
     229: lconst_0
     230: lcmp
     231: ifle          267
     234: new           #54                 // class java/io/IOException
     237: dup
     238: new           #55                 // class java/lang/StringBuilder
     241: dup
     242: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
     245: ldc           #125                // String Copying to new location
     247: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     250: aload         4
     252: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     255: ldc           #126                // String  failed
     257: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     260: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     263: invokespecial #61                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     266: athrow
     267: aload         5
     269: iconst_1
     270: invokevirtual #113                // Method java/nio/channels/FileChannel.force:(Z)V
     273: aload         5
     275: invokevirtual #110                // Method java/nio/channels/FileChannel.close:()V
     278: goto          297
     281: astore        10
     283: aload         5
     285: iconst_1
     286: invokevirtual #113                // Method java/nio/channels/FileChannel.force:(Z)V
     289: aload         5
     291: invokevirtual #110                // Method java/nio/channels/FileChannel.close:()V
     294: aload         10
     296: athrow
     297: aload_0
     298: getfield      #40                 // Field fc:Ljava/nio/channels/FileChannel;
     301: invokevirtual #110                // Method java/nio/channels/FileChannel.close:()V
     304: aload_0
     305: invokevirtual #127                // Method delete:()Z
     308: ifne          371
     311: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
     314: new           #55                 // class java/lang/StringBuilder
     317: dup
     318: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
     321: ldc           #128                // String Failed to delete the previous index file
     323: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     326: aload_0
     327: getfield      #7                  // Field lf:Ljava/io/File;
     330: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     333: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     336: invokeinterface #129,  2          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
     341: new           #54                 // class java/io/IOException
     344: dup
     345: new           #55                 // class java/lang/StringBuilder
     348: dup
     349: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
     352: ldc           #128                // String Failed to delete the previous index file
     354: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     357: aload_0
     358: getfield      #7                  // Field lf:Ljava/io/File;
     361: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     364: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     367: invokespecial #61                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     370: athrow
     371: aload         4
     373: aload_1
     374: invokevirtual #130                // Method java/io/File.renameTo:(Ljava/io/File;)Z
     377: ifne          454
     380: getstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
     383: new           #55                 // class java/lang/StringBuilder
     386: dup
     387: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
     390: ldc           #131                // String Failed to rename
     392: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     395: aload         4
     397: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     400: ldc           #132                // String  to
     402: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     405: aload_1
     406: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     409: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     412: invokeinterface #129,  2          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
     417: new           #54                 // class java/io/IOException
     420: dup
     421: new           #55                 // class java/lang/StringBuilder
     424: dup
     425: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
     428: ldc           #131                // String Failed to rename
     430: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     433: aload         4
     435: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     438: ldc           #132                // String  to
     440: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     443: aload_1
     444: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     447: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     450: invokespecial #61                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     453: athrow
     454: aload_0
     455: new           #41                 // class java/io/RandomAccessFile
     458: dup
     459: aload_1
     460: aload_0
     461: getfield      #10                 // Field mode:Ljava/lang/String;
     464: invokespecial #42                 // Method java/io/RandomAccessFile."<init>":(Ljava/io/File;Ljava/lang/String;)V
     467: invokevirtual #43                 // Method java/io/RandomAccessFile.getChannel:()Ljava/nio/channels/FileChannel;
     470: putfield      #40                 // Field fc:Ljava/nio/channels/FileChannel;
     473: aload_0
     474: aload_1
     475: putfield      #7                  // Field lf:Ljava/io/File;
     478: return
    Exception table:
       from    to  target type
         147   267   281   any
         281   283   281   any

  public synchronized byte[] getMasterKey() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #93                 // Method checkOpen:(Z)V
       5: aload_0
       6: getfield      #8                  // Field masterKey:[B
       9: areturn

  public synchronized boolean delete();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #12                 // Field deleted:Z
       5: aload_0
       6: getfield      #7                  // Field lf:Ljava/io/File;
       9: invokevirtual #133                // Method java/io/File.delete:()Z
      12: ireturn

  private static void checkParents(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #116                // Method java/io/File.getParentFile:()Ljava/io/File;
       4: astore_1
       5: aload_1
       6: invokevirtual #39                 // Method java/io/File.exists:()Z
       9: ifeq          13
      12: return
      13: aload_1
      14: invokevirtual #134                // Method java/io/File.mkdirs:()Z
      17: ifne          47
      20: new           #54                 // class java/io/IOException
      23: dup
      24: new           #55                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #135                // String Couldn\'t mkdirs for
      33: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_1
      37: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      40: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokespecial #61                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: return

  public synchronized boolean isSameFile(java.io.File);
    Code:
       0: aload_0
       1: getfield      #7                  // Field lf:Ljava/io/File;
       4: aload_1
       5: invokevirtual #136                // Method java/io/File.equals:(Ljava/lang/Object;)Z
       8: ireturn

  static {};
    Code:
       0: ldc           #1                  // class org/apache/bookkeeper/bookie/FileInfo
       2: invokestatic  #137                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #15                 // Field LOG:Lorg/slf4j/Logger;
       8: ldc           #138                // String BKLE
      10: getstatic     #139                // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      13: invokevirtual #140                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      16: invokestatic  #141                // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      19: invokevirtual #52                 // Method java/nio/ByteBuffer.getInt:()I
      22: putstatic     #53                 // Field SIGNATURE:I
      25: return
}
