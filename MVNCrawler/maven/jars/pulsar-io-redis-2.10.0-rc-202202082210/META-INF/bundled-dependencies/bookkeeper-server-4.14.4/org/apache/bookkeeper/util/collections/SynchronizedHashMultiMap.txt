Compiled from "SynchronizedHashMultiMap.java"
public class org.apache.bookkeeper.util.collections.SynchronizedHashMultiMap<K, V> {
  java.util.HashMap<java.lang.Integer, java.util.Set<org.apache.commons.lang3.tuple.Pair<K, V>>> map;

  public org.apache.bookkeeper.util.collections.SynchronizedHashMultiMap();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field map:Ljava/util/HashMap;
      15: return

  public synchronized void put(K, V);
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #5                  // Method java/lang/Object.hashCode:()I
       8: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      11: invokedynamic #7,  0              // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      16: invokevirtual #8                  // Method java/util/HashMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      19: checkcast     #9                  // class java/util/Set
      22: aload_1
      23: aload_2
      24: invokestatic  #10                 // Method org/apache/commons/lang3/tuple/Pair.of:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/tuple/Pair;
      27: invokeinterface #11,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      32: pop
      33: return

  public synchronized java.util.Optional<K> getAnyKey();
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/HashMap;
       4: invokevirtual #12                 // Method java/util/HashMap.values:()Ljava/util/Collection;
       7: invokeinterface #13,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      12: invokeinterface #14,  1           // InterfaceMethod java/util/stream/Stream.findAny:()Ljava/util/Optional;
      17: invokedynamic #15,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      22: invokevirtual #16                 // Method java/util/Optional.flatMap:(Ljava/util/function/Function;)Ljava/util/Optional;
      25: areturn

  public synchronized java.util.Optional<V> removeAny(K);
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #5                  // Method java/lang/Object.hashCode:()I
       8: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      11: invokestatic  #17                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
      14: invokevirtual #18                 // Method java/util/HashMap.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #9                  // class java/util/Set
      20: astore_2
      21: aload_2
      22: invokeinterface #19,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      27: aload_1
      28: invokedynamic #20,  0             // InvokeDynamic #2:test:(Ljava/lang/Object;)Ljava/util/function/Predicate;
      33: invokeinterface #21,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      38: invokeinterface #14,  1           // InterfaceMethod java/util/stream/Stream.findAny:()Ljava/util/Optional;
      43: astore_3
      44: aload_3
      45: aload_2
      46: invokedynamic #22,  0             // InvokeDynamic #3:accept:(Ljava/util/Set;)Ljava/util/function/Consumer;
      51: invokevirtual #23                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      54: aload_3
      55: invokedynamic #24,  0             // InvokeDynamic #4:apply:()Ljava/util/function/Function;
      60: invokevirtual #25                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      63: areturn

  public synchronized int removeIf(java.util.function.BiPredicate<K, V>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/HashMap;
       4: invokevirtual #12                 // Method java/util/HashMap.values:()Ljava/util/Collection;
       7: invokeinterface #13,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      12: aload_1
      13: invokedynamic #26,  0             // InvokeDynamic #5:applyAsInt:(Ljava/util/function/BiPredicate;)Ljava/util/function/ToIntFunction;
      18: invokeinterface #27,  2           // InterfaceMethod java/util/stream/Stream.mapToInt:(Ljava/util/function/ToIntFunction;)Ljava/util/stream/IntStream;
      23: invokeinterface #28,  1           // InterfaceMethod java/util/stream/IntStream.sum:()I
      28: istore_2
      29: aload_0
      30: getfield      #4                  // Field map:Ljava/util/HashMap;
      33: invokevirtual #12                 // Method java/util/HashMap.values:()Ljava/util/Collection;
      36: invokedynamic #29,  0             // InvokeDynamic #6:test:()Ljava/util/function/Predicate;
      41: invokeinterface #30,  2           // InterfaceMethod java/util/Collection.removeIf:(Ljava/util/function/Predicate;)Z
      46: pop
      47: iload_2
      48: ireturn

  private static boolean lambda$removeIf$7(java.util.Set);
    Code:
       0: aload_0
       1: invokeinterface #31,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
       6: ireturn

  private static int lambda$removeIf$6(java.util.function.BiPredicate, java.util.Set);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: invokeinterface #32,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       8: astore_3
       9: aload_3
      10: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          60
      18: aload_3
      19: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #35                 // class org/apache/commons/lang3/tuple/Pair
      27: astore        4
      29: aload_0
      30: aload         4
      32: invokevirtual #36                 // Method org/apache/commons/lang3/tuple/Pair.getLeft:()Ljava/lang/Object;
      35: aload         4
      37: invokevirtual #37                 // Method org/apache/commons/lang3/tuple/Pair.getRight:()Ljava/lang/Object;
      40: invokeinterface #38,  3           // InterfaceMethod java/util/function/BiPredicate.test:(Ljava/lang/Object;Ljava/lang/Object;)Z
      45: ifeq          57
      48: aload_3
      49: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.remove:()V
      54: iinc          2, 1
      57: goto          9
      60: iload_2
      61: ireturn

  private static java.lang.Object lambda$removeAny$5(org.apache.commons.lang3.tuple.Pair);
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method org/apache/commons/lang3/tuple/Pair.getRight:()Ljava/lang/Object;
       4: areturn

  private static void lambda$removeAny$4(java.util.Set, org.apache.commons.lang3.tuple.Pair);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #40,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
       7: pop
       8: return

  private static boolean lambda$removeAny$3(java.lang.Object, org.apache.commons.lang3.tuple.Pair);
    Code:
       0: aload_1
       1: invokevirtual #36                 // Method org/apache/commons/lang3/tuple/Pair.getLeft:()Ljava/lang/Object;
       4: aload_0
       5: invokevirtual #41                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       8: ireturn

  private static java.util.Optional lambda$getAnyKey$2(java.util.Set);
    Code:
       0: aload_0
       1: invokeinterface #19,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
       6: invokeinterface #14,  1           // InterfaceMethod java/util/stream/Stream.findAny:()Ljava/util/Optional;
      11: invokedynamic #42,  0             // InvokeDynamic #7:apply:()Ljava/util/function/Function;
      16: invokevirtual #25                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      19: areturn

  private static java.lang.Object lambda$null$1(org.apache.commons.lang3.tuple.Pair);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method org/apache/commons/lang3/tuple/Pair.getLeft:()Ljava/lang/Object;
       4: areturn

  private static java.util.Set lambda$put$0(java.lang.Integer);
    Code:
       0: new           #43                 // class java/util/HashSet
       3: dup
       4: invokespecial #44                 // Method java/util/HashSet."<init>":()V
       7: areturn
}
