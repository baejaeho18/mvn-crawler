Compiled from "SyncThread.java"
class org.apache.bookkeeper.bookie.SyncThread implements org.apache.bookkeeper.bookie.Checkpointer {
  private static final org.slf4j.Logger log;

  final java.util.concurrent.ScheduledExecutorService executor;

  final org.apache.bookkeeper.bookie.LedgerStorage ledgerStorage;

  final org.apache.bookkeeper.bookie.LedgerDirsManager$LedgerDirsListener dirsListener;

  final org.apache.bookkeeper.bookie.CheckpointSource checkpointSource;

  private final java.lang.Object suspensionLock;

  private boolean suspended;

  private boolean disableCheckpoint;

  public org.apache.bookkeeper.bookie.SyncThread(org.apache.bookkeeper.conf.ServerConfiguration, org.apache.bookkeeper.bookie.LedgerDirsManager$LedgerDirsListener, org.apache.bookkeeper.bookie.LedgerStorage, org.apache.bookkeeper.bookie.CheckpointSource);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/Object
       8: dup
       9: invokespecial #1                  // Method java/lang/Object."<init>":()V
      12: putfield      #3                  // Field suspensionLock:Ljava/lang/Object;
      15: aload_0
      16: iconst_0
      17: putfield      #4                  // Field suspended:Z
      20: aload_0
      21: iconst_0
      22: putfield      #5                  // Field disableCheckpoint:Z
      25: aload_0
      26: aload_2
      27: putfield      #6                  // Field dirsListener:Lorg/apache/bookkeeper/bookie/LedgerDirsManager$LedgerDirsListener;
      30: aload_0
      31: aload_3
      32: putfield      #7                  // Field ledgerStorage:Lorg/apache/bookkeeper/bookie/LedgerStorage;
      35: aload_0
      36: aload         4
      38: putfield      #8                  // Field checkpointSource:Lorg/apache/bookkeeper/bookie/CheckpointSource;
      41: aload_0
      42: new           #9                  // class io/netty/util/concurrent/DefaultThreadFactory
      45: dup
      46: ldc           #10                 // String SyncThread
      48: invokespecial #11                 // Method io/netty/util/concurrent/DefaultThreadFactory."<init>":(Ljava/lang/String;)V
      51: invokestatic  #12                 // Method java/util/concurrent/Executors.newSingleThreadScheduledExecutor:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;
      54: putfield      #13                 // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      57: return

  public void startCheckpoint(org.apache.bookkeeper.bookie.CheckpointSource$Checkpoint);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method doCheckpoint:(Lorg/apache/bookkeeper/bookie/CheckpointSource$Checkpoint;)V
       5: return

  protected void doCheckpoint(org.apache.bookkeeper.bookie.CheckpointSource$Checkpoint);
    Code:
       0: aload_0
       1: getfield      #13                 // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_0
       5: aload_1
       6: invokedynamic #15,  0             // InvokeDynamic #0:run:(Lorg/apache/bookkeeper/bookie/SyncThread;Lorg/apache/bookkeeper/bookie/CheckpointSource$Checkpoint;)Ljava/lang/Runnable;
      11: invokeinterface #16,  2           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
      16: pop
      17: return

  public java.util.concurrent.Future requestFlush();
    Code:
       0: aload_0
       1: getfield      #13                 // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
       4: aload_0
       5: invokedynamic #17,  0             // InvokeDynamic #1:run:(Lorg/apache/bookkeeper/bookie/SyncThread;)Ljava/lang/Runnable;
      10: invokeinterface #16,  2           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
      15: areturn

  private void flush();
    Code:
       0: aload_0
       1: getfield      #8                  // Field checkpointSource:Lorg/apache/bookkeeper/bookie/CheckpointSource;
       4: invokeinterface #18,  1           // InterfaceMethod org/apache/bookkeeper/bookie/CheckpointSource.newCheckpoint:()Lorg/apache/bookkeeper/bookie/CheckpointSource$Checkpoint;
       9: astore_1
      10: aload_0
      11: getfield      #7                  // Field ledgerStorage:Lorg/apache/bookkeeper/bookie/LedgerStorage;
      14: invokeinterface #19,  1           // InterfaceMethod org/apache/bookkeeper/bookie/LedgerStorage.flush:()V
      19: goto          58
      22: astore_2
      23: getstatic     #21                 // Field log:Lorg/slf4j/Logger;
      26: ldc           #22                 // String No writeable ledger directories
      28: aload_2
      29: invokeinterface #23,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      34: aload_0
      35: getfield      #6                  // Field dirsListener:Lorg/apache/bookkeeper/bookie/LedgerDirsManager$LedgerDirsListener;
      38: iconst_1
      39: invokeinterface #24,  2           // InterfaceMethod org/apache/bookkeeper/bookie/LedgerDirsManager$LedgerDirsListener.allDisksFull:(Z)V
      44: return
      45: astore_2
      46: getstatic     #21                 // Field log:Lorg/slf4j/Logger;
      49: ldc           #26                 // String Exception flushing ledgers
      51: aload_2
      52: invokeinterface #23,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      57: return
      58: aload_0
      59: getfield      #5                  // Field disableCheckpoint:Z
      62: ifeq          66
      65: return
      66: getstatic     #21                 // Field log:Lorg/slf4j/Logger;
      69: ldc           #27                 // String Flush ledger storage at checkpoint {}.
      71: aload_1
      72: invokeinterface #28,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      77: aload_0
      78: getfield      #8                  // Field checkpointSource:Lorg/apache/bookkeeper/bookie/CheckpointSource;
      81: aload_1
      82: iconst_0
      83: invokeinterface #29,  3           // InterfaceMethod org/apache/bookkeeper/bookie/CheckpointSource.checkpointComplete:(Lorg/apache/bookkeeper/bookie/CheckpointSource$Checkpoint;Z)V
      88: goto          113
      91: astore_2
      92: getstatic     #21                 // Field log:Lorg/slf4j/Logger;
      95: ldc           #30                 // String Exception marking checkpoint as complete
      97: aload_2
      98: invokeinterface #23,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     103: aload_0
     104: getfield      #6                  // Field dirsListener:Lorg/apache/bookkeeper/bookie/LedgerDirsManager$LedgerDirsListener;
     107: iconst_1
     108: invokeinterface #24,  2           // InterfaceMethod org/apache/bookkeeper/bookie/LedgerDirsManager$LedgerDirsListener.allDisksFull:(Z)V
     113: return
    Exception table:
       from    to  target type
          10    19    22   Class org/apache/bookkeeper/bookie/LedgerDirsManager$NoWritableLedgerDirException
          10    19    45   Class java/io/IOException
          77    88    91   Class java/io/IOException

  public void checkpoint(org.apache.bookkeeper.bookie.CheckpointSource$Checkpoint);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     6
       5: return
       6: aload_0
       7: getfield      #7                  // Field ledgerStorage:Lorg/apache/bookkeeper/bookie/LedgerStorage;
      10: aload_1
      11: invokeinterface #31,  2           // InterfaceMethod org/apache/bookkeeper/bookie/LedgerStorage.checkpoint:(Lorg/apache/bookkeeper/bookie/CheckpointSource$Checkpoint;)V
      16: goto          55
      19: astore_2
      20: getstatic     #21                 // Field log:Lorg/slf4j/Logger;
      23: ldc           #22                 // String No writeable ledger directories
      25: aload_2
      26: invokeinterface #23,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      31: aload_0
      32: getfield      #6                  // Field dirsListener:Lorg/apache/bookkeeper/bookie/LedgerDirsManager$LedgerDirsListener;
      35: iconst_1
      36: invokeinterface #24,  2           // InterfaceMethod org/apache/bookkeeper/bookie/LedgerDirsManager$LedgerDirsListener.allDisksFull:(Z)V
      41: return
      42: astore_2
      43: getstatic     #21                 // Field log:Lorg/slf4j/Logger;
      46: ldc           #26                 // String Exception flushing ledgers
      48: aload_2
      49: invokeinterface #23,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      54: return
      55: aload_0
      56: getfield      #8                  // Field checkpointSource:Lorg/apache/bookkeeper/bookie/CheckpointSource;
      59: aload_1
      60: iconst_1
      61: invokeinterface #29,  3           // InterfaceMethod org/apache/bookkeeper/bookie/CheckpointSource.checkpointComplete:(Lorg/apache/bookkeeper/bookie/CheckpointSource$Checkpoint;Z)V
      66: goto          91
      69: astore_2
      70: getstatic     #21                 // Field log:Lorg/slf4j/Logger;
      73: ldc           #30                 // String Exception marking checkpoint as complete
      75: aload_2
      76: invokeinterface #23,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      81: aload_0
      82: getfield      #6                  // Field dirsListener:Lorg/apache/bookkeeper/bookie/LedgerDirsManager$LedgerDirsListener;
      85: iconst_1
      86: invokeinterface #24,  2           // InterfaceMethod org/apache/bookkeeper/bookie/LedgerDirsManager$LedgerDirsListener.allDisksFull:(Z)V
      91: return
    Exception table:
       from    to  target type
           6    16    19   Class org/apache/bookkeeper/bookie/LedgerDirsManager$NoWritableLedgerDirException
           6    16    42   Class java/io/IOException
          55    66    69   Class java/io/IOException

  public void start();
    Code:
       0: return

  public void suspendSync();
    Code:
       0: aload_0
       1: getfield      #3                  // Field suspensionLock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: iconst_1
       9: putfield      #4                  // Field suspended:Z
      12: aload_1
      13: monitorexit
      14: goto          22
      17: astore_2
      18: aload_1
      19: monitorexit
      20: aload_2
      21: athrow
      22: return
    Exception table:
       from    to  target type
           7    14    17   any
          17    20    17   any

  public void resumeSync();
    Code:
       0: aload_0
       1: getfield      #3                  // Field suspensionLock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: iconst_0
       9: putfield      #4                  // Field suspended:Z
      12: aload_0
      13: getfield      #3                  // Field suspensionLock:Ljava/lang/Object;
      16: invokevirtual #32                 // Method java/lang/Object.notify:()V
      19: aload_1
      20: monitorexit
      21: goto          29
      24: astore_2
      25: aload_1
      26: monitorexit
      27: aload_2
      28: athrow
      29: return
    Exception table:
       from    to  target type
           7    21    24   any
          24    27    24   any

  public void disableCheckpoint();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #5                  // Field disableCheckpoint:Z
       5: return

  void shutdown() throws java.lang.InterruptedException;
    Code:
       0: getstatic     #21                 // Field log:Lorg/slf4j/Logger;
       3: ldc           #33                 // String Shutting down SyncThread
       5: invokeinterface #34,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      10: aload_0
      11: invokevirtual #35                 // Method requestFlush:()Ljava/util/concurrent/Future;
      14: pop
      15: aload_0
      16: getfield      #13                 // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      19: invokeinterface #36,  1           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.shutdown:()V
      24: invokestatic  #37                 // Method java/lang/System.currentTimeMillis:()J
      27: lstore_1
      28: aload_0
      29: getfield      #13                 // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      32: ldc2_w        #38                 // long 5l
      35: getstatic     #40                 // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
      38: invokeinterface #41,  4           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
      43: ifne          69
      46: invokestatic  #37                 // Method java/lang/System.currentTimeMillis:()J
      49: lstore_3
      50: getstatic     #21                 // Field log:Lorg/slf4j/Logger;
      53: ldc           #42                 // String SyncThread taking a long time to shutdown. Has taken {} milliseconds so far
      55: lload_3
      56: lload_1
      57: lsub
      58: invokestatic  #43                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      61: invokeinterface #28,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      66: goto          28
      69: return

  java.util.concurrent.ScheduledExecutorService getExecutor();
    Code:
       0: aload_0
       1: getfield      #13                 // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
       4: areturn

  private void lambda$requestFlush$1();
    Code:
       0: aload_0
       1: invokespecial #44                 // Method flush:()V
       4: goto          19
       7: astore_1
       8: getstatic     #21                 // Field log:Lorg/slf4j/Logger;
      11: ldc           #46                 // String Exception flushing ledgers
      13: aload_1
      14: invokeinterface #23,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      19: return
    Exception table:
       from    to  target type
           0     4     7   Class java/lang/Throwable

  private void lambda$doCheckpoint$0(org.apache.bookkeeper.bookie.CheckpointSource$Checkpoint);
    Code:
       0: aload_0
       1: getfield      #3                  // Field suspensionLock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #4                  // Field suspended:Z
      11: ifeq          34
      14: aload_0
      15: getfield      #3                  // Field suspensionLock:Ljava/lang/Object;
      18: invokevirtual #47                 // Method java/lang/Object.wait:()V
      21: goto          7
      24: astore_3
      25: invokestatic  #49                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      28: invokevirtual #50                 // Method java/lang/Thread.interrupt:()V
      31: goto          7
      34: aload_2
      35: monitorexit
      36: goto          46
      39: astore        4
      41: aload_2
      42: monitorexit
      43: aload         4
      45: athrow
      46: aload_0
      47: getfield      #5                  // Field disableCheckpoint:Z
      50: ifne          58
      53: aload_0
      54: aload_1
      55: invokevirtual #51                 // Method checkpoint:(Lorg/apache/bookkeeper/bookie/CheckpointSource$Checkpoint;)V
      58: goto          82
      61: astore_2
      62: getstatic     #21                 // Field log:Lorg/slf4j/Logger;
      65: ldc           #52                 // String Exception in SyncThread
      67: aload_2
      68: invokeinterface #23,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      73: aload_0
      74: getfield      #6                  // Field dirsListener:Lorg/apache/bookkeeper/bookie/LedgerDirsManager$LedgerDirsListener;
      77: invokeinterface #53,  1           // InterfaceMethod org/apache/bookkeeper/bookie/LedgerDirsManager$LedgerDirsListener.fatalError:()V
      82: return
    Exception table:
       from    to  target type
          14    21    24   Class java/lang/InterruptedException
           7    36    39   any
          39    43    39   any
           0    58    61   Class java/lang/Throwable

  static {};
    Code:
       0: ldc           #54                 // class org/apache/bookkeeper/bookie/SyncThread
       2: invokestatic  #55                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #21                 // Field log:Lorg/slf4j/Logger;
       8: return
}
