Compiled from "Auditor.java"
class org.apache.bookkeeper.replication.Auditor$ReadLedgerMetadataCallbackForReplicasCheck implements java.util.function.BiConsumer<org.apache.bookkeeper.versioning.Versioned<org.apache.bookkeeper.client.api.LedgerMetadata>, java.lang.Throwable> {
  private final long ledgerInRange;

  private final org.apache.bookkeeper.proto.BookkeeperInternalCallbacks$MultiCallback mcbForThisLedgerRange;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.Long, org.apache.bookkeeper.replication.Auditor$MissingEntriesInfoOfLedger> ledgersWithMissingEntries;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.Long, org.apache.bookkeeper.replication.Auditor$MissingEntriesInfoOfLedger> ledgersWithUnavailableBookies;

  final org.apache.bookkeeper.replication.Auditor this$0;

  org.apache.bookkeeper.replication.Auditor$ReadLedgerMetadataCallbackForReplicasCheck(long, org.apache.bookkeeper.proto.BookkeeperInternalCallbacks$MultiCallback, java.util.concurrent.ConcurrentHashMap<java.lang.Long, org.apache.bookkeeper.replication.Auditor$MissingEntriesInfoOfLedger>, java.util.concurrent.ConcurrentHashMap<java.lang.Long, org.apache.bookkeeper.replication.Auditor$MissingEntriesInfoOfLedger>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/bookkeeper/replication/Auditor;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: lload_2
      11: putfield      #3                  // Field ledgerInRange:J
      14: aload_0
      15: aload         4
      17: putfield      #4                  // Field mcbForThisLedgerRange:Lorg/apache/bookkeeper/proto/BookkeeperInternalCallbacks$MultiCallback;
      20: aload_0
      21: aload         5
      23: putfield      #5                  // Field ledgersWithMissingEntries:Ljava/util/concurrent/ConcurrentHashMap;
      26: aload_0
      27: aload         6
      29: putfield      #6                  // Field ledgersWithUnavailableBookies:Ljava/util/concurrent/ConcurrentHashMap;
      32: return

  public void accept(org.apache.bookkeeper.versioning.Versioned<org.apache.bookkeeper.client.api.LedgerMetadata>, java.lang.Throwable);
    Code:
       0: aload_2
       1: ifnull        73
       4: aload_2
       5: invokestatic  #7                  // Method org/apache/bookkeeper/client/BKException.getExceptionCode:(Ljava/lang/Throwable;)I
       8: bipush        -25
      10: if_icmpne     41
      13: invokestatic  #9                  // Method org/apache/bookkeeper/replication/Auditor.access$600:()Lorg/slf4j/Logger;
      16: ldc           #10                 // String Ignoring replicas check of already deleted ledger {}
      18: aload_0
      19: getfield      #3                  // Field ledgerInRange:J
      22: invokestatic  #11                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      25: invokeinterface #12,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      30: aload_0
      31: getfield      #4                  // Field mcbForThisLedgerRange:Lorg/apache/bookkeeper/proto/BookkeeperInternalCallbacks$MultiCallback;
      34: iconst_0
      35: aconst_null
      36: aconst_null
      37: invokevirtual #13                 // Method org/apache/bookkeeper/proto/BookkeeperInternalCallbacks$MultiCallback.processResult:(ILjava/lang/String;Ljava/lang/Object;)V
      40: return
      41: invokestatic  #9                  // Method org/apache/bookkeeper/replication/Auditor.access$600:()Lorg/slf4j/Logger;
      44: ldc           #14                 // String Unable to read the ledger: {} information
      46: aload_0
      47: getfield      #3                  // Field ledgerInRange:J
      50: invokestatic  #11                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      53: aload_2
      54: invokeinterface #15,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      59: aload_0
      60: getfield      #4                  // Field mcbForThisLedgerRange:Lorg/apache/bookkeeper/proto/BookkeeperInternalCallbacks$MultiCallback;
      63: aload_2
      64: invokestatic  #7                  // Method org/apache/bookkeeper/client/BKException.getExceptionCode:(Ljava/lang/Throwable;)I
      67: aconst_null
      68: aconst_null
      69: invokevirtual #13                 // Method org/apache/bookkeeper/proto/BookkeeperInternalCallbacks$MultiCallback.processResult:(ILjava/lang/String;Ljava/lang/Object;)V
      72: return
      73: aload_1
      74: invokevirtual #16                 // Method org/apache/bookkeeper/versioning/Versioned.getValue:()Ljava/lang/Object;
      77: checkcast     #17                 // class org/apache/bookkeeper/client/api/LedgerMetadata
      80: astore_3
      81: aload_3
      82: invokeinterface #18,  1           // InterfaceMethod org/apache/bookkeeper/client/api/LedgerMetadata.isClosed:()Z
      87: ifne          118
      90: invokestatic  #9                  // Method org/apache/bookkeeper/replication/Auditor.access$600:()Lorg/slf4j/Logger;
      93: ldc           #19                 // String Ledger: {} is not yet closed, so skipping the replicas check analysis for now
      95: aload_0
      96: getfield      #3                  // Field ledgerInRange:J
      99: invokestatic  #11                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     102: invokeinterface #12,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     107: aload_0
     108: getfield      #4                  // Field mcbForThisLedgerRange:Lorg/apache/bookkeeper/proto/BookkeeperInternalCallbacks$MultiCallback;
     111: iconst_0
     112: aconst_null
     113: aconst_null
     114: invokevirtual #13                 // Method org/apache/bookkeeper/proto/BookkeeperInternalCallbacks$MultiCallback.processResult:(ILjava/lang/String;Ljava/lang/Object;)V
     117: return
     118: aload_3
     119: invokeinterface #20,  1           // InterfaceMethod org/apache/bookkeeper/client/api/LedgerMetadata.getLastEntryId:()J
     124: lstore        4
     126: lload         4
     128: ldc2_w        #21                 // long -1l
     131: lcmp
     132: ifne          163
     135: invokestatic  #9                  // Method org/apache/bookkeeper/replication/Auditor.access$600:()Lorg/slf4j/Logger;
     138: ldc           #23                 // String Ledger: {} is closed but it doesn\'t has any entries, so skipping the replicas check
     140: aload_0
     141: getfield      #3                  // Field ledgerInRange:J
     144: invokestatic  #11                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     147: invokeinterface #12,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     152: aload_0
     153: getfield      #4                  // Field mcbForThisLedgerRange:Lorg/apache/bookkeeper/proto/BookkeeperInternalCallbacks$MultiCallback;
     156: iconst_0
     157: aconst_null
     158: aconst_null
     159: invokevirtual #13                 // Method org/apache/bookkeeper/proto/BookkeeperInternalCallbacks$MultiCallback.processResult:(ILjava/lang/String;Ljava/lang/Object;)V
     162: return
     163: aload_3
     164: invokeinterface #24,  1           // InterfaceMethod org/apache/bookkeeper/client/api/LedgerMetadata.getWriteQuorumSize:()I
     169: istore        6
     171: aload_3
     172: invokeinterface #25,  1           // InterfaceMethod org/apache/bookkeeper/client/api/LedgerMetadata.getAckQuorumSize:()I
     177: istore        7
     179: aload_3
     180: invokeinterface #26,  1           // InterfaceMethod org/apache/bookkeeper/client/api/LedgerMetadata.getEnsembleSize:()I
     185: istore        8
     187: new           #27                 // class org/apache/bookkeeper/client/RoundRobinDistributionSchedule
     190: dup
     191: iload         6
     193: iload         7
     195: iload         8
     197: invokespecial #28                 // Method org/apache/bookkeeper/client/RoundRobinDistributionSchedule."<init>":(III)V
     200: astore        9
     202: new           #29                 // class java/util/LinkedList
     205: dup
     206: aload_3
     207: invokeinterface #30,  1           // InterfaceMethod org/apache/bookkeeper/client/api/LedgerMetadata.getAllEnsembles:()Ljava/util/NavigableMap;
     212: invokeinterface #31,  1           // InterfaceMethod java/util/NavigableMap.entrySet:()Ljava/util/Set;
     217: invokespecial #32                 // Method java/util/LinkedList."<init>":(Ljava/util/Collection;)V
     220: astore        10
     222: new           #33                 // class org/apache/bookkeeper/proto/BookkeeperInternalCallbacks$MultiCallback
     225: dup
     226: iload         8
     228: aload         10
     230: invokeinterface #34,  1           // InterfaceMethod java/util/List.size:()I
     235: imul
     236: aload_0
     237: getfield      #4                  // Field mcbForThisLedgerRange:Lorg/apache/bookkeeper/proto/BookkeeperInternalCallbacks$MultiCallback;
     240: aconst_null
     241: iconst_0
     242: iconst_m1
     243: invokespecial #35                 // Method org/apache/bookkeeper/proto/BookkeeperInternalCallbacks$MultiCallback."<init>":(ILorg/apache/zookeeper/AsyncCallback$VoidCallback;Ljava/lang/Object;II)V
     246: astore        11
     248: new           #36                 // class java/util/HashMap
     251: dup
     252: invokespecial #37                 // Method java/util/HashMap."<init>":()V
     255: astore        12
     257: iconst_0
     258: istore        13
     260: iload         13
     262: aload         10
     264: invokeinterface #34,  1           // InterfaceMethod java/util/List.size:()I
     269: if_icmpge     621
     272: aload         10
     274: iload         13
     276: invokeinterface #38,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     281: checkcast     #39                 // class java/util/Map$Entry
     284: astore        14
     286: aload         14
     288: invokeinterface #40,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     293: checkcast     #41                 // class java/util/List
     296: astore        15
     298: aload         14
     300: invokeinterface #42,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     305: checkcast     #43                 // class java/lang/Long
     308: invokevirtual #44                 // Method java/lang/Long.longValue:()J
     311: lstore        16
     313: iload         13
     315: aload         10
     317: invokeinterface #34,  1           // InterfaceMethod java/util/List.size:()I
     322: iconst_1
     323: isub
     324: if_icmpne     331
     327: iconst_1
     328: goto          332
     331: iconst_0
     332: istore        18
     334: iload         18
     336: ifeq          344
     339: lload         4
     341: goto          371
     344: aload         10
     346: iload         13
     348: iconst_1
     349: iadd
     350: invokeinterface #38,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     355: checkcast     #39                 // class java/util/Map$Entry
     358: invokeinterface #42,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     363: checkcast     #43                 // class java/lang/Long
     366: invokevirtual #44                 // Method java/lang/Long.longValue:()J
     369: lconst_1
     370: lsub
     371: lstore        19
     373: iload         18
     375: ifeq          394
     378: lload         16
     380: lload         4
     382: lcmp
     383: ifle          390
     386: iconst_1
     387: goto          430
     390: iconst_0
     391: goto          430
     394: lload         16
     396: aload         10
     398: iload         13
     400: iconst_1
     401: iadd
     402: invokeinterface #38,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     407: checkcast     #39                 // class java/util/Map$Entry
     410: invokeinterface #42,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     415: checkcast     #43                 // class java/lang/Long
     418: invokevirtual #44                 // Method java/lang/Long.longValue:()J
     421: lcmp
     422: ifne          429
     425: iconst_1
     426: goto          430
     429: iconst_0
     430: istore        21
     432: iconst_0
     433: istore        22
     435: iload         22
     437: aload         15
     439: invokeinterface #34,  1           // InterfaceMethod java/util/List.size:()I
     444: if_icmpge     615
     447: aload         15
     449: iload         22
     451: invokeinterface #38,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     456: checkcast     #45                 // class org/apache/bookkeeper/net/BookieId
     459: astore        23
     461: iload         21
     463: ifeq          472
     466: invokestatic  #46                 // Method org/apache/bookkeeper/replication/Auditor.access$3200:()Ljava/util/BitSet;
     469: goto          483
     472: aload         9
     474: iload         22
     476: lload         16
     478: lload         19
     480: invokevirtual #47                 // Method org/apache/bookkeeper/client/RoundRobinDistributionSchedule.getEntriesStripedToTheBookie:(IJJ)Ljava/util/BitSet;
     483: astore        24
     485: aload         24
     487: invokevirtual #48                 // Method java/util/BitSet.cardinality:()I
     490: ifne          549
     493: invokestatic  #9                  // Method org/apache/bookkeeper/replication/Auditor.access$600:()Lorg/slf4j/Logger;
     496: invokeinterface #49,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     501: ifeq          538
     504: invokestatic  #9                  // Method org/apache/bookkeeper/replication/Auditor.access$600:()Lorg/slf4j/Logger;
     507: ldc           #50                 // String For ledger: {}, in Segment: {}, no entry is expected to contain in this bookie: {}. So skipping getListOfEntriesOfLedger call
     509: iconst_3
     510: anewarray     #51                 // class java/lang/Object
     513: dup
     514: iconst_0
     515: aload_0
     516: getfield      #3                  // Field ledgerInRange:J
     519: invokestatic  #11                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     522: aastore
     523: dup
     524: iconst_1
     525: aload         14
     527: aastore
     528: dup
     529: iconst_2
     530: aload         23
     532: aastore
     533: invokeinterface #52,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     538: aload         11
     540: iconst_0
     541: aconst_null
     542: aconst_null
     543: invokevirtual #13                 // Method org/apache/bookkeeper/proto/BookkeeperInternalCallbacks$MultiCallback.processResult:(ILjava/lang/String;Ljava/lang/Object;)V
     546: goto          609
     549: aload         12
     551: aload         23
     553: invokevirtual #53                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     556: checkcast     #41                 // class java/util/List
     559: astore        25
     561: aload         25
     563: ifnonnull     585
     566: new           #54                 // class java/util/ArrayList
     569: dup
     570: invokespecial #55                 // Method java/util/ArrayList."<init>":()V
     573: astore        25
     575: aload         12
     577: aload         23
     579: aload         25
     581: invokevirtual #56                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     584: pop
     585: aload         25
     587: new           #57                 // class org/apache/bookkeeper/replication/Auditor$BookieExpectedToContainSegmentInfo
     590: dup
     591: lload         16
     593: lload         19
     595: aload         14
     597: aload         24
     599: aconst_null
     600: invokespecial #58                 // Method org/apache/bookkeeper/replication/Auditor$BookieExpectedToContainSegmentInfo."<init>":(JJLjava/util/Map$Entry;Ljava/util/BitSet;Lorg/apache/bookkeeper/replication/Auditor$1;)V
     603: invokeinterface #59,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     608: pop
     609: iinc          22, 1
     612: goto          435
     615: iinc          13, 1
     618: goto          260
     621: aload         12
     623: invokevirtual #60                 // Method java/util/HashMap.entrySet:()Ljava/util/Set;
     626: invokeinterface #61,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     631: astore        13
     633: aload         13
     635: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     640: ifeq          734
     643: aload         13
     645: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     650: checkcast     #39                 // class java/util/Map$Entry
     653: astore        14
     655: aload         14
     657: invokeinterface #42,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     662: checkcast     #45                 // class org/apache/bookkeeper/net/BookieId
     665: astore        15
     667: aload         14
     669: invokeinterface #40,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     674: checkcast     #41                 // class java/util/List
     677: astore        16
     679: aload_0
     680: getfield      #1                  // Field this$0:Lorg/apache/bookkeeper/replication/Auditor;
     683: invokestatic  #64                 // Method org/apache/bookkeeper/replication/Auditor.access$3100:(Lorg/apache/bookkeeper/replication/Auditor;)Lorg/apache/bookkeeper/client/BookKeeperAdmin;
     686: aload         15
     688: aload_0
     689: getfield      #3                  // Field ledgerInRange:J
     692: invokevirtual #65                 // Method org/apache/bookkeeper/client/BookKeeperAdmin.asyncGetListOfEntriesOfLedger:(Lorg/apache/bookkeeper/net/BookieId;J)Ljava/util/concurrent/CompletableFuture;
     695: new           #66                 // class org/apache/bookkeeper/replication/Auditor$GetListOfEntriesOfLedgerCallbackForReplicasCheck
     698: dup
     699: aload_0
     700: getfield      #3                  // Field ledgerInRange:J
     703: iload         8
     705: iload         6
     707: iload         7
     709: aload         15
     711: aload         16
     713: aload_0
     714: getfield      #5                  // Field ledgersWithMissingEntries:Ljava/util/concurrent/ConcurrentHashMap;
     717: aload_0
     718: getfield      #6                  // Field ledgersWithUnavailableBookies:Ljava/util/concurrent/ConcurrentHashMap;
     721: aload         11
     723: aconst_null
     724: invokespecial #67                 // Method org/apache/bookkeeper/replication/Auditor$GetListOfEntriesOfLedgerCallbackForReplicasCheck."<init>":(JIIILorg/apache/bookkeeper/net/BookieId;Ljava/util/List;Ljava/util/concurrent/ConcurrentHashMap;Ljava/util/concurrent/ConcurrentHashMap;Lorg/apache/bookkeeper/proto/BookkeeperInternalCallbacks$MultiCallback;Lorg/apache/bookkeeper/replication/Auditor$1;)V
     727: invokevirtual #68                 // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
     730: pop
     731: goto          633
     734: return

  public void accept(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #69                 // class org/apache/bookkeeper/versioning/Versioned
       5: aload_2
       6: checkcast     #70                 // class java/lang/Throwable
       9: invokevirtual #71                 // Method accept:(Lorg/apache/bookkeeper/versioning/Versioned;Ljava/lang/Throwable;)V
      12: return
}
