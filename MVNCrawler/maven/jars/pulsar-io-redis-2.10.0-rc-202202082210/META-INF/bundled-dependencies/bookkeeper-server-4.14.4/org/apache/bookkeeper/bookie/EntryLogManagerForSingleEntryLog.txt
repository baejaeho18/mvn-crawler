Compiled from "EntryLogManagerForSingleEntryLog.java"
class org.apache.bookkeeper.bookie.EntryLogManagerForSingleEntryLog extends org.apache.bookkeeper.bookie.EntryLogManagerBase {
  private static final org.slf4j.Logger log;

  private volatile org.apache.bookkeeper.bookie.EntryLogger$BufferedLogChannel activeLogChannel;

  private long logIdBeforeFlush;

  private final java.util.concurrent.atomic.AtomicBoolean shouldCreateNewEntryLog;

  private final org.apache.bookkeeper.bookie.EntryLogger$RecentEntryLogsStatus recentlyCreatedEntryLogsStatus;

  org.apache.bookkeeper.bookie.EntryLogManagerForSingleEntryLog(org.apache.bookkeeper.conf.ServerConfiguration, org.apache.bookkeeper.bookie.LedgerDirsManager, org.apache.bookkeeper.bookie.EntryLoggerAllocator, java.util.List<org.apache.bookkeeper.bookie.EntryLogger$EntryLogListener>, org.apache.bookkeeper.bookie.EntryLogger$RecentEntryLogsStatus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #4                  // Method org/apache/bookkeeper/bookie/EntryLogManagerBase."<init>":(Lorg/apache/bookkeeper/conf/ServerConfiguration;Lorg/apache/bookkeeper/bookie/LedgerDirsManager;Lorg/apache/bookkeeper/bookie/EntryLoggerAllocator;Ljava/util/List;)V
       9: aload_0
      10: ldc2_w        #5                  // long -1l
      13: putfield      #7                  // Field logIdBeforeFlush:J
      16: aload_0
      17: new           #8                  // class java/util/concurrent/atomic/AtomicBoolean
      20: dup
      21: iconst_0
      22: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      25: putfield      #2                  // Field shouldCreateNewEntryLog:Ljava/util/concurrent/atomic/AtomicBoolean;
      28: aload_0
      29: new           #10                 // class java/util/LinkedList
      32: dup
      33: invokespecial #11                 // Method java/util/LinkedList."<init>":()V
      36: putfield      #12                 // Field rotatedLogChannels:Ljava/util/List;
      39: aload_0
      40: aload         5
      42: putfield      #13                 // Field recentlyCreatedEntryLogsStatus:Lorg/apache/bookkeeper/bookie/EntryLogger$RecentEntryLogsStatus;
      45: aload_2
      46: aload_0
      47: invokespecial #14                 // Method getLedgerDirsListener:()Lorg/apache/bookkeeper/bookie/LedgerDirsManager$LedgerDirsListener;
      50: invokevirtual #15                 // Method org/apache/bookkeeper/bookie/LedgerDirsManager.addLedgerDirsListener:(Lorg/apache/bookkeeper/bookie/LedgerDirsManager$LedgerDirsListener;)V
      53: return

  private org.apache.bookkeeper.bookie.LedgerDirsManager$LedgerDirsListener getLedgerDirsListener();
    Code:
       0: new           #16                 // class org/apache/bookkeeper/bookie/EntryLogManagerForSingleEntryLog$1
       3: dup
       4: aload_0
       5: invokespecial #17                 // Method org/apache/bookkeeper/bookie/EntryLogManagerForSingleEntryLog$1."<init>":(Lorg/apache/bookkeeper/bookie/EntryLogManagerForSingleEntryLog;)V
       8: areturn

  public synchronized long addEntry(long, io.netty.buffer.ByteBuf, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: iload         4
       5: invokespecial #18                 // Method org/apache/bookkeeper/bookie/EntryLogManagerBase.addEntry:(JLio/netty/buffer/ByteBuf;Z)J
       8: lreturn

  synchronized org.apache.bookkeeper.bookie.EntryLogger$BufferedLogChannel getCurrentLogForLedgerForAddEntry(long, int, boolean) throws java.io.IOException;
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #3                  // Field activeLogChannel:Lorg/apache/bookkeeper/bookie/EntryLogger$BufferedLogChannel;
       5: if_acmpne     17
       8: aload_0
       9: ldc2_w        #5                  // long -1l
      12: ldc           #19                 // String because current active log channel has not initialized yet
      14: invokevirtual #20                 // Method createNewLog:(JLjava/lang/String;)V
      17: iload         4
      19: ifeq          35
      22: aload_0
      23: aload_0
      24: getfield      #3                  // Field activeLogChannel:Lorg/apache/bookkeeper/bookie/EntryLogger$BufferedLogChannel;
      27: iload_3
      28: i2l
      29: invokevirtual #21                 // Method reachEntryLogLimit:(Lorg/apache/bookkeeper/bookie/EntryLogger$BufferedLogChannel;J)Z
      32: goto          45
      35: aload_0
      36: aload_0
      37: getfield      #3                  // Field activeLogChannel:Lorg/apache/bookkeeper/bookie/EntryLogger$BufferedLogChannel;
      40: iload_3
      41: i2l
      42: invokevirtual #22                 // Method readEntryLogHardLimit:(Lorg/apache/bookkeeper/bookie/EntryLogger$BufferedLogChannel;J)Z
      45: istore        5
      47: aload_0
      48: getfield      #2                  // Field shouldCreateNewEntryLog:Ljava/util/concurrent/atomic/AtomicBoolean;
      51: invokevirtual #23                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      54: istore        6
      56: iload         6
      58: ifne          66
      61: iload         5
      63: ifeq          131
      66: aload_0
      67: getfield      #3                  // Field activeLogChannel:Lorg/apache/bookkeeper/bookie/EntryLogger$BufferedLogChannel;
      70: ifnull        81
      73: aload_0
      74: getfield      #3                  // Field activeLogChannel:Lorg/apache/bookkeeper/bookie/EntryLogger$BufferedLogChannel;
      77: iconst_0
      78: invokevirtual #24                 // Method org/apache/bookkeeper/bookie/EntryLogger$BufferedLogChannel.flushAndForceWriteIfRegularFlush:(Z)V
      81: aload_0
      82: ldc2_w        #5                  // long -1l
      85: new           #25                 // class java/lang/StringBuilder
      88: dup
      89: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      92: ldc           #27                 // String : createNewLog =
      94: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: iload         6
      99: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     102: ldc           #30                 // String , reachEntryLogLimit =
     104: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: iload         5
     109: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     112: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     115: invokevirtual #20                 // Method createNewLog:(JLjava/lang/String;)V
     118: iload         6
     120: ifeq          131
     123: aload_0
     124: getfield      #2                  // Field shouldCreateNewEntryLog:Ljava/util/concurrent/atomic/AtomicBoolean;
     127: iconst_0
     128: invokevirtual #32                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
     131: aload_0
     132: getfield      #3                  // Field activeLogChannel:Lorg/apache/bookkeeper/bookie/EntryLogger$BufferedLogChannel;
     135: areturn

  synchronized void createNewLog(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #33                 // Method org/apache/bookkeeper/bookie/EntryLogManagerBase.createNewLog:(J)V
       5: return

  public synchronized void setCurrentLogForLedgerAndAddToRotate(long, org.apache.bookkeeper.bookie.EntryLogger$BufferedLogChannel);
    Code:
       0: aload_0
       1: getfield      #3                  // Field activeLogChannel:Lorg/apache/bookkeeper/bookie/EntryLogger$BufferedLogChannel;
       4: astore        4
       6: aload_0
       7: aload_3
       8: putfield      #3                  // Field activeLogChannel:Lorg/apache/bookkeeper/bookie/EntryLogger$BufferedLogChannel;
      11: aload         4
      13: ifnull        28
      16: aload_0
      17: getfield      #12                 // Field rotatedLogChannels:Ljava/util/List;
      20: aload         4
      22: invokeinterface #34,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      27: pop
      28: return

  public org.apache.bookkeeper.bookie.EntryLogger$BufferedLogChannel getCurrentLogForLedger(long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field activeLogChannel:Lorg/apache/bookkeeper/bookie/EntryLogger$BufferedLogChannel;
       4: areturn

  public org.apache.bookkeeper.bookie.EntryLogger$BufferedLogChannel getCurrentLogIfPresent(long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field activeLogChannel:Lorg/apache/bookkeeper/bookie/EntryLogger$BufferedLogChannel;
       4: astore_3
       5: aload_3
       6: ifnull        20
       9: aload_3
      10: invokevirtual #35                 // Method org/apache/bookkeeper/bookie/EntryLogger$BufferedLogChannel.getLogId:()J
      13: lload_1
      14: lcmp
      15: ifne          20
      18: aload_3
      19: areturn
      20: aconst_null
      21: areturn

  public java.io.File getDirForNextEntryLog(java.util.List<java.io.File>);
    Code:
       0: aload_1
       1: invokestatic  #36                 // Method java/util/Collections.shuffle:(Ljava/util/List;)V
       4: aload_1
       5: iconst_0
       6: invokeinterface #37,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      11: checkcast     #38                 // class java/io/File
      14: areturn

  public void checkpoint() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method flushRotatedLogs:()V
       4: return

  public long getCurrentLogId();
    Code:
       0: aload_0
       1: getfield      #3                  // Field activeLogChannel:Lorg/apache/bookkeeper/bookie/EntryLogger$BufferedLogChannel;
       4: astore_1
       5: aload_1
       6: ifnull        14
       9: aload_1
      10: invokevirtual #35                 // Method org/apache/bookkeeper/bookie/EntryLogger$BufferedLogChannel.getLogId:()J
      13: lreturn
      14: ldc2_w        #40                 // long -57005l
      17: lreturn

  public void flushCurrentLogs() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field activeLogChannel:Lorg/apache/bookkeeper/bookie/EntryLogger$BufferedLogChannel;
       4: astore_1
       5: aload_1
       6: ifnull        15
       9: aload_0
      10: aload_1
      11: iconst_1
      12: invokevirtual #42                 // Method flushLogChannel:(Lorg/apache/bookkeeper/bookie/EntryLogger$BufferedLogChannel;Z)V
      15: return

  void flushRotatedLogs() throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: dup
       4: astore_2
       5: monitorenter
       6: aload_0
       7: getfield      #12                 // Field rotatedLogChannels:Ljava/util/List;
      10: astore_1
      11: aload_0
      12: new           #10                 // class java/util/LinkedList
      15: dup
      16: invokespecial #11                 // Method java/util/LinkedList."<init>":()V
      19: putfield      #12                 // Field rotatedLogChannels:Ljava/util/List;
      22: aload_2
      23: monitorexit
      24: goto          32
      27: astore_3
      28: aload_2
      29: monitorexit
      30: aload_3
      31: athrow
      32: aconst_null
      33: aload_1
      34: if_acmpne     38
      37: return
      38: aload_1
      39: invokeinterface #43,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      44: astore_2
      45: aload_2
      46: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      51: ifeq          168
      54: aload_2
      55: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      60: checkcast     #46                 // class org/apache/bookkeeper/bookie/EntryLogger$BufferedLogChannel
      63: astore_3
      64: aload_3
      65: iconst_1
      66: invokevirtual #47                 // Method org/apache/bookkeeper/bookie/EntryLogger$BufferedLogChannel.flushAndForceWrite:(Z)V
      69: goto          124
      72: astore        4
      74: aload_0
      75: dup
      76: astore        5
      78: monitorenter
      79: aconst_null
      80: aload_0
      81: getfield      #12                 // Field rotatedLogChannels:Ljava/util/List;
      84: if_acmpne     95
      87: aload_0
      88: aload_1
      89: putfield      #12                 // Field rotatedLogChannels:Ljava/util/List;
      92: goto          107
      95: aload_0
      96: getfield      #12                 // Field rotatedLogChannels:Ljava/util/List;
      99: iconst_0
     100: aload_1
     101: invokeinterface #49,  3           // InterfaceMethod java/util/List.addAll:(ILjava/util/Collection;)Z
     106: pop
     107: aload         5
     109: monitorexit
     110: goto          121
     113: astore        6
     115: aload         5
     117: monitorexit
     118: aload         6
     120: athrow
     121: aload         4
     123: athrow
     124: aload_2
     125: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.remove:()V
     130: aload_3
     131: invokevirtual #51                 // Method org/apache/bookkeeper/bookie/EntryLogger$BufferedLogChannel.close:()V
     134: aload_0
     135: getfield      #13                 // Field recentlyCreatedEntryLogsStatus:Lorg/apache/bookkeeper/bookie/EntryLogger$RecentEntryLogsStatus;
     138: aload_3
     139: invokevirtual #35                 // Method org/apache/bookkeeper/bookie/EntryLogger$BufferedLogChannel.getLogId:()J
     142: invokestatic  #52                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     145: invokevirtual #53                 // Method org/apache/bookkeeper/bookie/EntryLogger$RecentEntryLogsStatus.flushRotatedEntryLog:(Ljava/lang/Long;)V
     148: getstatic     #54                 // Field log:Lorg/slf4j/Logger;
     151: ldc           #55                 // String Synced entry logger {} to disk.
     153: aload_3
     154: invokevirtual #35                 // Method org/apache/bookkeeper/bookie/EntryLogger$BufferedLogChannel.getLogId:()J
     157: invokestatic  #52                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     160: invokeinterface #56,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
     165: goto          45
     168: return
    Exception table:
       from    to  target type
           6    24    27   any
          27    30    27   any
          64    69    72   Class java/io/IOException
          79   110   113   any
         113   118   113   any

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field activeLogChannel:Lorg/apache/bookkeeper/bookie/EntryLogger$BufferedLogChannel;
       4: ifnull        14
       7: aload_0
       8: getfield      #3                  // Field activeLogChannel:Lorg/apache/bookkeeper/bookie/EntryLogger$BufferedLogChannel;
      11: invokevirtual #51                 // Method org/apache/bookkeeper/bookie/EntryLogger$BufferedLogChannel.close:()V
      14: return

  public void forceClose();
    Code:
       0: getstatic     #54                 // Field log:Lorg/slf4j/Logger;
       3: aload_0
       4: getfield      #3                  // Field activeLogChannel:Lorg/apache/bookkeeper/bookie/EntryLogger$BufferedLogChannel;
       7: invokestatic  #57                 // Method org/apache/bookkeeper/util/IOUtils.close:(Lorg/slf4j/Logger;Ljava/io/Closeable;)V
      10: return

  public void prepareEntryMemTableFlush();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #58                 // Method getCurrentLogId:()J
       5: putfield      #7                  // Field logIdBeforeFlush:J
       8: return

  public boolean commitEntryMemTableFlush() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method getCurrentLogId:()J
       4: lstore_1
       5: aload_0
       6: aload_0
       7: getfield      #3                  // Field activeLogChannel:Lorg/apache/bookkeeper/bookie/EntryLogger$BufferedLogChannel;
      10: lconst_0
      11: invokevirtual #21                 // Method reachEntryLogLimit:(Lorg/apache/bookkeeper/bookie/EntryLogger$BufferedLogChannel;J)Z
      14: ifne          26
      17: lload_1
      18: aload_0
      19: getfield      #7                  // Field logIdBeforeFlush:J
      22: lcmp
      23: ifeq          76
      26: getstatic     #54                 // Field log:Lorg/slf4j/Logger;
      29: ldc           #59                 // String Rolling entry logger since it reached size limitation
      31: invokeinterface #60,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      36: aload_0
      37: ldc2_w        #5                  // long -1l
      40: new           #25                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #61                 // String due to reaching log limit after flushing memtable : logIdBeforeFlush =
      49: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_0
      53: getfield      #7                  // Field logIdBeforeFlush:J
      56: invokevirtual #62                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      59: ldc           #63                 // String , logIdAfterFlush =
      61: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: lload_1
      65: invokevirtual #62                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      68: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: invokevirtual #20                 // Method createNewLog:(JLjava/lang/String;)V
      74: iconst_1
      75: ireturn
      76: iconst_0
      77: ireturn

  public void prepareSortedLedgerStorageCheckpoint(long) throws java.io.IOException;
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifle          32
       6: aload_0
       7: ldc2_w        #5                  // long -1l
      10: new           #25                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #64                 // String due to preparing checkpoint : numBytesFlushed =
      19: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: lload_1
      23: invokevirtual #62                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      26: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokevirtual #20                 // Method createNewLog:(JLjava/lang/String;)V
      32: return

  public org.apache.bookkeeper.bookie.EntryLogger$BufferedLogChannel createNewLogForCompaction() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #65                 // Field entryLoggerAllocator:Lorg/apache/bookkeeper/bookie/EntryLoggerAllocator;
       4: aload_0
       5: invokevirtual #66                 // Method selectDirForNextEntryLog:()Ljava/io/File;
       8: invokevirtual #67                 // Method org/apache/bookkeeper/bookie/EntryLoggerAllocator.createNewLogForCompaction:(Ljava/io/File;)Lorg/apache/bookkeeper/bookie/EntryLogger$BufferedLogChannel;
      11: areturn

  static org.apache.bookkeeper.bookie.EntryLogger$BufferedLogChannel access$000(org.apache.bookkeeper.bookie.EntryLogManagerForSingleEntryLog);
    Code:
       0: aload_0
       1: getfield      #3                  // Field activeLogChannel:Lorg/apache/bookkeeper/bookie/EntryLogger$BufferedLogChannel;
       4: areturn

  static java.util.concurrent.atomic.AtomicBoolean access$100(org.apache.bookkeeper.bookie.EntryLogManagerForSingleEntryLog);
    Code:
       0: aload_0
       1: getfield      #2                  // Field shouldCreateNewEntryLog:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: areturn

  static {};
    Code:
       0: ldc           #68                 // class org/apache/bookkeeper/bookie/EntryLogManagerForSingleEntryLog
       2: invokestatic  #69                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #54                 // Field log:Lorg/slf4j/Logger;
       8: return
}
