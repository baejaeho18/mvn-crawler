Compiled from "BookkeeperInternalCallbacks.java"
public class org.apache.bookkeeper.proto.BookkeeperInternalCallbacks$MultiCallback implements org.apache.zookeeper.AsyncCallback$VoidCallback {
  final int expected;

  final int failureRc;

  final int successRc;

  final org.apache.zookeeper.AsyncCallback$VoidCallback cb;

  final java.lang.Object context;

  final java.util.concurrent.ExecutorService callbackExecutor;

  final java.util.concurrent.atomic.AtomicInteger done;

  final java.util.concurrent.LinkedBlockingQueue<java.lang.Integer> exceptions;

  public org.apache.bookkeeper.proto.BookkeeperInternalCallbacks$MultiCallback(int, org.apache.zookeeper.AsyncCallback$VoidCallback, java.lang.Object, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: iload         5
       8: aconst_null
       9: invokespecial #2                  // Method "<init>":(ILorg/apache/zookeeper/AsyncCallback$VoidCallback;Ljava/lang/Object;IILjava/util/concurrent/ExecutorService;)V
      12: return

  public org.apache.bookkeeper.proto.BookkeeperInternalCallbacks$MultiCallback(int, org.apache.zookeeper.AsyncCallback$VoidCallback, java.lang.Object, int, int, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      12: putfield      #6                  // Field done:Ljava/util/concurrent/atomic/AtomicInteger;
      15: aload_0
      16: new           #7                  // class java/util/concurrent/LinkedBlockingQueue
      19: dup
      20: invokespecial #8                  // Method java/util/concurrent/LinkedBlockingQueue."<init>":()V
      23: putfield      #9                  // Field exceptions:Ljava/util/concurrent/LinkedBlockingQueue;
      26: aload_0
      27: iload_1
      28: putfield      #10                 // Field expected:I
      31: aload_0
      32: aload_2
      33: putfield      #11                 // Field cb:Lorg/apache/zookeeper/AsyncCallback$VoidCallback;
      36: aload_0
      37: aload_3
      38: putfield      #12                 // Field context:Ljava/lang/Object;
      41: aload_0
      42: iload         5
      44: putfield      #13                 // Field failureRc:I
      47: aload_0
      48: iload         4
      50: putfield      #14                 // Field successRc:I
      53: aload_0
      54: aload         6
      56: putfield      #15                 // Field callbackExecutor:Ljava/util/concurrent/ExecutorService;
      59: iload_1
      60: ifne          67
      63: aload_0
      64: invokespecial #16                 // Method callback:()V
      67: return

  private void tick();
    Code:
       0: aload_0
       1: getfield      #6                  // Field done:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: aload_0
       8: getfield      #10                 // Field expected:I
      11: if_icmpne     18
      14: aload_0
      15: invokespecial #16                 // Method callback:()V
      18: return

  private void callback();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #15                 // Field callbackExecutor:Ljava/util/concurrent/ExecutorService;
       5: if_acmpeq     37
       8: aload_0
       9: getfield      #15                 // Field callbackExecutor:Ljava/util/concurrent/ExecutorService;
      12: new           #18                 // class org/apache/bookkeeper/proto/BookkeeperInternalCallbacks$MultiCallback$1
      15: dup
      16: aload_0
      17: invokespecial #19                 // Method org/apache/bookkeeper/proto/BookkeeperInternalCallbacks$MultiCallback$1."<init>":(Lorg/apache/bookkeeper/proto/BookkeeperInternalCallbacks$MultiCallback;)V
      20: invokeinterface #20,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
      25: pop
      26: goto          41
      29: astore_1
      30: aload_0
      31: invokespecial #1                  // Method doCallback:()V
      34: goto          41
      37: aload_0
      38: invokespecial #1                  // Method doCallback:()V
      41: return
    Exception table:
       from    to  target type
           8    26    29   Class java/util/concurrent/RejectedExecutionException

  private void doCallback();
    Code:
       0: aload_0
       1: getfield      #9                  // Field exceptions:Ljava/util/concurrent/LinkedBlockingQueue;
       4: invokevirtual #22                 // Method java/util/concurrent/LinkedBlockingQueue.isEmpty:()Z
       7: ifeq          31
      10: aload_0
      11: getfield      #11                 // Field cb:Lorg/apache/zookeeper/AsyncCallback$VoidCallback;
      14: aload_0
      15: getfield      #14                 // Field successRc:I
      18: aconst_null
      19: aload_0
      20: getfield      #12                 // Field context:Ljava/lang/Object;
      23: invokeinterface #23,  4           // InterfaceMethod org/apache/zookeeper/AsyncCallback$VoidCallback.processResult:(ILjava/lang/String;Ljava/lang/Object;)V
      28: goto          49
      31: aload_0
      32: getfield      #11                 // Field cb:Lorg/apache/zookeeper/AsyncCallback$VoidCallback;
      35: aload_0
      36: getfield      #13                 // Field failureRc:I
      39: aconst_null
      40: aload_0
      41: getfield      #12                 // Field context:Ljava/lang/Object;
      44: invokeinterface #23,  4           // InterfaceMethod org/apache/zookeeper/AsyncCallback$VoidCallback.processResult:(ILjava/lang/String;Ljava/lang/Object;)V
      49: return

  public void processResult(int, java.lang.String, java.lang.Object);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #14                 // Field successRc:I
       5: if_icmpeq     47
       8: getstatic     #24                 // Field org/apache/bookkeeper/proto/BookkeeperInternalCallbacks.LOG:Lorg/slf4j/Logger;
      11: new           #25                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #27                 // String Error in multi callback :
      20: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: iload_1
      24: invokevirtual #29                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      27: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokeinterface #31,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      35: aload_0
      36: getfield      #9                  // Field exceptions:Ljava/util/concurrent/LinkedBlockingQueue;
      39: iload_1
      40: invokestatic  #32                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      43: invokevirtual #33                 // Method java/util/concurrent/LinkedBlockingQueue.add:(Ljava/lang/Object;)Z
      46: pop
      47: aload_0
      48: invokespecial #34                 // Method tick:()V
      51: return

  static void access$000(org.apache.bookkeeper.proto.BookkeeperInternalCallbacks$MultiCallback);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method doCallback:()V
       4: return
}
