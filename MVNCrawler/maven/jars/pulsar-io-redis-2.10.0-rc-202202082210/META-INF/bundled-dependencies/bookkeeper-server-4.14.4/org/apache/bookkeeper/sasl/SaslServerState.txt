Compiled from "SaslServerState.java"
public class org.apache.bookkeeper.sasl.SaslServerState {
  private static final org.slf4j.Logger LOG;

  private final javax.security.sasl.SaslServer saslServer;

  private final java.util.regex.Pattern allowedIdsPattern;

  public org.apache.bookkeeper.sasl.SaslServerState(org.apache.bookkeeper.conf.ServerConfiguration, javax.security.auth.Subject, java.util.regex.Pattern) throws java.io.IOException, javax.security.sasl.SaslException, javax.security.auth.login.LoginException;
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_3
       6: putfield      #1                  // Field allowedIdsPattern:Ljava/util/regex/Pattern;
       9: aload_0
      10: aload_0
      11: aload_2
      12: aload_1
      13: invokespecial #4                  // Method createSaslServer:(Ljavax/security/auth/Subject;Lorg/apache/bookkeeper/conf/ServerConfiguration;)Ljavax/security/sasl/SaslServer;
      16: putfield      #5                  // Field saslServer:Ljavax/security/sasl/SaslServer;
      19: return

  private javax.security.sasl.SaslServer createSaslServer(javax.security.auth.Subject, org.apache.bookkeeper.conf.ServerConfiguration) throws javax.security.sasl.SaslException, java.io.IOException;
    Code:
       0: new           #6                  // class org/apache/bookkeeper/sasl/SaslServerState$SaslServerCallbackHandler
       3: dup
       4: aload_0
       5: invokestatic  #7                  // Method javax/security/auth/login/Configuration.getConfiguration:()Ljavax/security/auth/login/Configuration;
       8: aload_2
       9: invokespecial #8                  // Method org/apache/bookkeeper/sasl/SaslServerState$SaslServerCallbackHandler."<init>":(Lorg/apache/bookkeeper/sasl/SaslServerState;Ljavax/security/auth/login/Configuration;Lorg/apache/bookkeeper/conf/ServerConfiguration;)V
      12: astore_3
      13: aload_1
      14: invokevirtual #9                  // Method javax/security/auth/Subject.getPrincipals:()Ljava/util/Set;
      17: invokeinterface #10,  1           // InterfaceMethod java/util/Set.size:()I
      22: ifle          204
      25: aload_1
      26: invokevirtual #9                  // Method javax/security/auth/Subject.getPrincipals:()Ljava/util/Set;
      29: invokeinterface #11,  1           // InterfaceMethod java/util/Set.toArray:()[Ljava/lang/Object;
      34: astore        4
      36: aload         4
      38: iconst_0
      39: aaload
      40: checkcast     #12                 // class java/security/Principal
      43: astore        5
      45: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      48: invokeinterface #13,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      53: ifeq          68
      56: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      59: ldc           #14                 // String Authentication will use SASL/JAAS/Kerberos, servicePrincipal is {}
      61: aload         5
      63: invokeinterface #15,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      68: aload         5
      70: invokeinterface #16,  1           // InterfaceMethod java/security/Principal.getName:()Ljava/lang/String;
      75: astore        6
      77: aload         6
      79: ldc           #17                 // String /
      81: invokevirtual #18                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      84: istore        7
      86: aload         6
      88: iload         7
      90: iconst_1
      91: iadd
      92: aload         6
      94: invokevirtual #19                 // Method java/lang/String.length:()I
      97: invokevirtual #20                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     100: astore        8
     102: aload         8
     104: ldc           #21                 // String @
     106: invokevirtual #18                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
     109: istore        9
     111: iload         7
     113: ifle          139
     116: aload         6
     118: iconst_0
     119: iload         7
     121: invokevirtual #20                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     124: astore        10
     126: aload         8
     128: iconst_0
     129: iload         9
     131: invokevirtual #20                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     134: astore        11
     136: goto          152
     139: aload         6
     141: iconst_0
     142: iload         9
     144: invokevirtual #20                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     147: astore        10
     149: aconst_null
     150: astore        11
     152: aload_1
     153: new           #22                 // class org/apache/bookkeeper/sasl/SaslServerState$1
     156: dup
     157: aload_0
     158: aload         10
     160: aload         11
     162: aload_3
     163: invokespecial #23                 // Method org/apache/bookkeeper/sasl/SaslServerState$1."<init>":(Lorg/apache/bookkeeper/sasl/SaslServerState;Ljava/lang/String;Ljava/lang/String;Lorg/apache/bookkeeper/sasl/SaslServerState$SaslServerCallbackHandler;)V
     166: invokestatic  #24                 // Method javax/security/auth/Subject.doAs:(Ljavax/security/auth/Subject;Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
     169: checkcast     #25                 // class javax/security/sasl/SaslServer
     172: areturn
     173: astore        12
     175: new           #27                 // class javax/security/sasl/SaslException
     178: dup
     179: ldc           #28                 // String error on GSSAPI boot
     181: aload         12
     183: invokevirtual #29                 // Method java/security/PrivilegedActionException.getCause:()Ljava/lang/Throwable;
     186: invokespecial #30                 // Method javax/security/sasl/SaslException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     189: athrow
     190: astore        4
     192: new           #27                 // class javax/security/sasl/SaslException
     195: dup
     196: ldc           #28                 // String error on GSSAPI boot
     198: aload         4
     200: invokespecial #30                 // Method javax/security/sasl/SaslException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     203: athrow
     204: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     207: invokeinterface #13,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     212: ifeq          225
     215: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     218: ldc           #32                 // String Authentication will use SASL/JAAS/DIGEST-MD5
     220: invokeinterface #33,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     225: ldc           #34                 // String DIGEST-MD5
     227: ldc           #36                 // String bookkeeper
     229: ldc           #36                 // String bookkeeper
     231: aconst_null
     232: aload_3
     233: invokestatic  #37                 // Method javax/security/sasl/Sasl.createSaslServer:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljavax/security/auth/callback/CallbackHandler;)Ljavax/security/sasl/SaslServer;
     236: areturn
    Exception table:
       from    to  target type
         152   172   173   Class java/security/PrivilegedActionException
          25   172   190   Class java/lang/IndexOutOfBoundsException
         173   190   190   Class java/lang/IndexOutOfBoundsException

  public boolean isComplete();
    Code:
       0: aload_0
       1: getfield      #5                  // Field saslServer:Ljavax/security/sasl/SaslServer;
       4: invokeinterface #38,  1           // InterfaceMethod javax/security/sasl/SaslServer.isComplete:()Z
       9: ireturn

  public java.lang.String getUserName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field saslServer:Ljavax/security/sasl/SaslServer;
       4: invokeinterface #39,  1           // InterfaceMethod javax/security/sasl/SaslServer.getAuthorizationID:()Ljava/lang/String;
       9: areturn

  public byte[] response(byte[]) throws javax.security.sasl.SaslException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field saslServer:Ljavax/security/sasl/SaslServer;
       4: aload_1
       5: invokeinterface #40,  2           // InterfaceMethod javax/security/sasl/SaslServer.evaluateResponse:([B)[B
      10: astore_2
      11: aload_2
      12: areturn
      13: astore_2
      14: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      17: ldc           #41                 // String response: Failed to evaluate client token
      19: aload_2
      20: invokeinterface #42,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      25: aload_2
      26: athrow
    Exception table:
       from    to  target type
           0    12    13   Class javax/security/sasl/SaslException

  static org.slf4j.Logger access$000();
    Code:
       0: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static java.util.regex.Pattern access$100(org.apache.bookkeeper.sasl.SaslServerState);
    Code:
       0: aload_0
       1: getfield      #1                  // Field allowedIdsPattern:Ljava/util/regex/Pattern;
       4: areturn

  static {};
    Code:
       0: ldc           #43                 // class org/apache/bookkeeper/sasl/SaslServerState
       2: invokestatic  #44                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
