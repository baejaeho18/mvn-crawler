Compiled from "PooledClusterConnectionProvider.java"
class io.lettuce.core.cluster.PooledClusterConnectionProvider<K, V> implements io.lettuce.core.cluster.ClusterConnectionProvider, io.lettuce.core.cluster.AsyncClusterConnectionProvider {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private final java.lang.Object stateLock;

  private final boolean debugEnabled;

  private final java.util.concurrent.CompletableFuture<io.lettuce.core.api.StatefulRedisConnection<K, V>>[] writers;

  private final java.util.concurrent.CompletableFuture<io.lettuce.core.api.StatefulRedisConnection<K, V>>[][] readers;

  private final io.lettuce.core.cluster.RedisClusterClient redisClusterClient;

  private final io.lettuce.core.cluster.ClusterNodeConnectionFactory<K, V> connectionFactory;

  private final io.lettuce.core.RedisChannelWriter clusterWriter;

  private final io.lettuce.core.codec.RedisCodec<K, V> redisCodec;

  private final io.lettuce.core.cluster.SynchronizingClusterConnectionProvider<K, V> connectionProvider;

  private io.lettuce.core.cluster.models.partitions.Partitions partitions;

  private boolean autoFlushCommands;

  private io.lettuce.core.ReadFrom readFrom;

  public io.lettuce.core.cluster.PooledClusterConnectionProvider(io.lettuce.core.cluster.RedisClusterClient, io.lettuce.core.RedisChannelWriter, io.lettuce.core.codec.RedisCodec<K, V>);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class java/lang/Object
       8: dup
       9: invokespecial #4                  // Method java/lang/Object."<init>":()V
      12: putfield      #2                  // Field stateLock:Ljava/lang/Object;
      15: aload_0
      16: getstatic     #6                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      19: invokeinterface #7,  1            // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isDebugEnabled:()Z
      24: putfield      #8                  // Field debugEnabled:Z
      27: aload_0
      28: sipush        16384
      31: anewarray     #10                 // class java/util/concurrent/CompletableFuture
      34: putfield      #11                 // Field writers:[Ljava/util/concurrent/CompletableFuture;
      37: aload_0
      38: sipush        16384
      41: anewarray     #12                 // class "[Ljava/util/concurrent/CompletableFuture;"
      44: putfield      #13                 // Field readers:[[Ljava/util/concurrent/CompletableFuture;
      47: aload_0
      48: iconst_1
      49: putfield      #1                  // Field autoFlushCommands:Z
      52: aload_0
      53: aload_3
      54: putfield      #14                 // Field redisCodec:Lio/lettuce/core/codec/RedisCodec;
      57: aload_0
      58: aload_1
      59: putfield      #15                 // Field redisClusterClient:Lio/lettuce/core/cluster/RedisClusterClient;
      62: aload_0
      63: aload_2
      64: putfield      #16                 // Field clusterWriter:Lio/lettuce/core/RedisChannelWriter;
      67: aload_0
      68: new           #17                 // class io/lettuce/core/cluster/PooledClusterConnectionProvider$NodeConnectionPostProcessor
      71: dup
      72: aload_0
      73: aload_0
      74: aload_1
      75: invokevirtual #18                 // Method getConnectionFactory:(Lio/lettuce/core/cluster/RedisClusterClient;)Lio/lettuce/core/cluster/ClusterNodeConnectionFactory;
      78: invokespecial #19                 // Method io/lettuce/core/cluster/PooledClusterConnectionProvider$NodeConnectionPostProcessor."<init>":(Lio/lettuce/core/cluster/PooledClusterConnectionProvider;Lio/lettuce/core/cluster/ClusterNodeConnectionFactory;)V
      81: putfield      #20                 // Field connectionFactory:Lio/lettuce/core/cluster/ClusterNodeConnectionFactory;
      84: aload_0
      85: new           #21                 // class io/lettuce/core/cluster/SynchronizingClusterConnectionProvider
      88: dup
      89: aload_0
      90: getfield      #20                 // Field connectionFactory:Lio/lettuce/core/cluster/ClusterNodeConnectionFactory;
      93: invokespecial #22                 // Method io/lettuce/core/cluster/SynchronizingClusterConnectionProvider."<init>":(Lio/lettuce/core/cluster/ClusterNodeConnectionFactory;)V
      96: putfield      #23                 // Field connectionProvider:Lio/lettuce/core/cluster/SynchronizingClusterConnectionProvider;
      99: return

  public io.lettuce.core.api.StatefulRedisConnection<K, V> getConnection(io.lettuce.core.cluster.ClusterConnectionProvider$Intent, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokevirtual #24                 // Method getConnectionAsync:(Lio/lettuce/core/cluster/ClusterConnectionProvider$Intent;I)Ljava/util/concurrent/CompletableFuture;
       6: invokevirtual #25                 // Method java/util/concurrent/CompletableFuture.get:()Ljava/lang/Object;
       9: checkcast     #26                 // class io/lettuce/core/api/StatefulRedisConnection
      12: areturn
      13: astore_3
      14: aload_3
      15: athrow
      16: astore_3
      17: invokestatic  #29                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      20: invokevirtual #30                 // Method java/lang/Thread.interrupt:()V
      23: new           #31                 // class io/lettuce/core/RedisCommandInterruptedException
      26: dup
      27: aload_3
      28: invokespecial #32                 // Method io/lettuce/core/RedisCommandInterruptedException."<init>":(Ljava/lang/Throwable;)V
      31: athrow
      32: astore_3
      33: new           #27                 // class io/lettuce/core/RedisException
      36: dup
      37: aload_3
      38: invokevirtual #34                 // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
      41: invokespecial #35                 // Method io/lettuce/core/RedisException."<init>":(Ljava/lang/Throwable;)V
      44: athrow
      45: astore_3
      46: new           #27                 // class io/lettuce/core/RedisException
      49: dup
      50: aload_3
      51: invokespecial #35                 // Method io/lettuce/core/RedisException."<init>":(Ljava/lang/Throwable;)V
      54: athrow
    Exception table:
       from    to  target type
           0    12    13   Class io/lettuce/core/RedisException
           0    12    16   Class java/lang/InterruptedException
           0    12    32   Class java/util/concurrent/ExecutionException
           0    12    45   Class java/lang/RuntimeException

  public java.util.concurrent.CompletableFuture<io.lettuce.core.api.StatefulRedisConnection<K, V>> getConnectionAsync(io.lettuce.core.cluster.ClusterConnectionProvider$Intent, int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field debugEnabled:Z
       4: ifeq          48
       7: getstatic     #6                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      10: new           #37                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #39                 // String getConnection(
      19: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_1
      23: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      26: ldc           #42                 // String ,
      28: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: iload_2
      32: invokevirtual #43                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      35: ldc           #44                 // String )
      37: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokeinterface #46,  2           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;)V
      48: aload_1
      49: getstatic     #47                 // Field io/lettuce/core/cluster/ClusterConnectionProvider$Intent.READ:Lio/lettuce/core/cluster/ClusterConnectionProvider$Intent;
      52: if_acmpne     68
      55: aload_0
      56: getfield      #48                 // Field readFrom:Lio/lettuce/core/ReadFrom;
      59: ifnull        68
      62: aload_0
      63: iload_2
      64: invokevirtual #49                 // Method getReadConnection:(I)Ljava/util/concurrent/CompletableFuture;
      67: areturn
      68: aload_0
      69: iload_2
      70: invokespecial #50                 // Method getWriteConnection:(I)Ljava/util/concurrent/CompletableFuture;
      73: invokevirtual #51                 // Method java/util/concurrent/CompletableFuture.toCompletableFuture:()Ljava/util/concurrent/CompletableFuture;
      76: areturn

  private java.util.concurrent.CompletableFuture<io.lettuce.core.api.StatefulRedisConnection<K, V>> getWriteConnection(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field stateLock:Ljava/lang/Object;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #11                 // Field writers:[Ljava/util/concurrent/CompletableFuture;
      11: iload_1
      12: aaload
      13: astore_2
      14: aload_3
      15: monitorexit
      16: goto          26
      19: astore        4
      21: aload_3
      22: monitorexit
      23: aload         4
      25: athrow
      26: aload_2
      27: ifnonnull     143
      30: aload_0
      31: getfield      #52                 // Field partitions:Lio/lettuce/core/cluster/models/partitions/Partitions;
      34: iload_1
      35: invokevirtual #53                 // Method io/lettuce/core/cluster/models/partitions/Partitions.getPartitionBySlot:(I)Lio/lettuce/core/cluster/models/partitions/RedisClusterNode;
      38: astore_3
      39: aload_3
      40: ifnonnull     87
      43: new           #27                 // class io/lettuce/core/RedisException
      46: dup
      47: new           #37                 // class java/lang/StringBuilder
      50: dup
      51: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      54: ldc           #54                 // String Cannot determine a partition for slot
      56: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: iload_1
      60: invokevirtual #43                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      63: ldc           #55                 // String  (Partitions:
      65: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_0
      69: getfield      #52                 // Field partitions:Lio/lettuce/core/cluster/models/partitions/Partitions;
      72: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      75: ldc           #44                 // String )
      77: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      83: invokespecial #56                 // Method io/lettuce/core/RedisException."<init>":(Ljava/lang/String;)V
      86: athrow
      87: aload_3
      88: invokevirtual #57                 // Method io/lettuce/core/cluster/models/partitions/RedisClusterNode.getUri:()Lio/lettuce/core/RedisURI;
      91: astore        4
      93: new           #58                 // class io/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey
      96: dup
      97: getstatic     #59                 // Field io/lettuce/core/cluster/ClusterConnectionProvider$Intent.WRITE:Lio/lettuce/core/cluster/ClusterConnectionProvider$Intent;
     100: aload         4
     102: invokevirtual #60                 // Method io/lettuce/core/RedisURI.getHost:()Ljava/lang/String;
     105: aload         4
     107: invokevirtual #61                 // Method io/lettuce/core/RedisURI.getPort:()I
     110: invokespecial #62                 // Method io/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey."<init>":(Lio/lettuce/core/cluster/ClusterConnectionProvider$Intent;Ljava/lang/String;I)V
     113: astore        5
     115: aload_0
     116: aload         5
     118: invokevirtual #63                 // Method getConnectionAsync:(Lio/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey;)Lio/lettuce/core/ConnectionFuture;
     121: astore        6
     123: aload         6
     125: aload_0
     126: iload_1
     127: invokedynamic #64,  0             // InvokeDynamic #0:apply:(Lio/lettuce/core/cluster/PooledClusterConnectionProvider;I)Ljava/util/function/Function;
     132: invokeinterface #65,  2           // InterfaceMethod io/lettuce/core/ConnectionFuture.thenApply:(Ljava/util/function/Function;)Lio/lettuce/core/ConnectionFuture;
     137: invokeinterface #66,  1           // InterfaceMethod io/lettuce/core/ConnectionFuture.toCompletableFuture:()Ljava/util/concurrent/CompletableFuture;
     142: areturn
     143: aload_2
     144: areturn
    Exception table:
       from    to  target type
           7    16    19   any
          19    23    19   any

  protected java.util.concurrent.CompletableFuture<io.lettuce.core.api.StatefulRedisConnection<K, V>> getReadConnection(int);
    Code:
       0: iconst_1
       1: istore_3
       2: aload_0
       3: getfield      #2                  // Field stateLock:Ljava/lang/Object;
       6: dup
       7: astore        4
       9: monitorenter
      10: aload_0
      11: getfield      #13                 // Field readers:[[Ljava/util/concurrent/CompletableFuture;
      14: iload_1
      15: aaload
      16: astore_2
      17: aload         4
      19: monitorexit
      20: goto          31
      23: astore        5
      25: aload         4
      27: monitorexit
      28: aload         5
      30: athrow
      31: aload_2
      32: ifnonnull     191
      35: aload_0
      36: getfield      #52                 // Field partitions:Lio/lettuce/core/cluster/models/partitions/Partitions;
      39: iload_1
      40: invokevirtual #53                 // Method io/lettuce/core/cluster/models/partitions/Partitions.getPartitionBySlot:(I)Lio/lettuce/core/cluster/models/partitions/RedisClusterNode;
      43: astore        4
      45: aload         4
      47: ifnonnull     94
      50: new           #27                 // class io/lettuce/core/RedisException
      53: dup
      54: new           #37                 // class java/lang/StringBuilder
      57: dup
      58: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      61: ldc           #67                 // String Cannot determine a partition to read for slot
      63: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: iload_1
      67: invokevirtual #43                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      70: ldc           #55                 // String  (Partitions:
      72: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: aload_0
      76: getfield      #52                 // Field partitions:Lio/lettuce/core/cluster/models/partitions/Partitions;
      79: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      82: ldc           #44                 // String )
      84: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: invokespecial #56                 // Method io/lettuce/core/RedisException."<init>":(Ljava/lang/String;)V
      93: athrow
      94: aload_0
      95: aload         4
      97: invokespecial #68                 // Method getReadCandidates:(Lio/lettuce/core/cluster/models/partitions/RedisClusterNode;)Ljava/util/List;
     100: astore        5
     102: aload_0
     103: getfield      #48                 // Field readFrom:Lio/lettuce/core/ReadFrom;
     106: new           #69                 // class io/lettuce/core/cluster/PooledClusterConnectionProvider$1
     109: dup
     110: aload_0
     111: aload         5
     113: invokespecial #70                 // Method io/lettuce/core/cluster/PooledClusterConnectionProvider$1."<init>":(Lio/lettuce/core/cluster/PooledClusterConnectionProvider;Ljava/util/List;)V
     116: invokevirtual #71                 // Method io/lettuce/core/ReadFrom.select:(Lio/lettuce/core/ReadFrom$Nodes;)Ljava/util/List;
     119: astore        6
     121: aload         6
     123: invokeinterface #72,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     128: ifeq          182
     131: new           #27                 // class io/lettuce/core/RedisException
     134: dup
     135: new           #37                 // class java/lang/StringBuilder
     138: dup
     139: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
     142: ldc           #67                 // String Cannot determine a partition to read for slot
     144: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     147: iload_1
     148: invokevirtual #43                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     151: ldc           #55                 // String  (Partitions:
     153: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: aload_0
     157: getfield      #52                 // Field partitions:Lio/lettuce/core/cluster/models/partitions/Partitions;
     160: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     163: ldc           #73                 // String ) with setting
     165: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: aload_0
     169: getfield      #48                 // Field readFrom:Lio/lettuce/core/ReadFrom;
     172: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     175: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     178: invokespecial #56                 // Method io/lettuce/core/RedisException."<init>":(Ljava/lang/String;)V
     181: athrow
     182: aload_0
     183: aload         6
     185: invokespecial #74                 // Method getReadFromConnections:(Ljava/util/List;)[Ljava/util/concurrent/CompletableFuture;
     188: astore_2
     189: iconst_0
     190: istore_3
     191: aload_2
     192: astore        4
     194: iload_3
     195: ifeq          213
     198: aload_2
     199: invokestatic  #75                 // Method java/util/concurrent/CompletableFuture.allOf:([Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture;
     202: aload         4
     204: invokedynamic #76,  0             // InvokeDynamic #1:apply:([Ljava/util/concurrent/CompletableFuture;)Ljava/util/function/Function;
     209: invokevirtual #77                 // Method java/util/concurrent/CompletableFuture.thenCompose:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
     212: areturn
     213: new           #10                 // class java/util/concurrent/CompletableFuture
     216: dup
     217: invokespecial #78                 // Method java/util/concurrent/CompletableFuture."<init>":()V
     220: astore        5
     222: aload_2
     223: invokestatic  #75                 // Method java/util/concurrent/CompletableFuture.allOf:([Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture;
     226: aload         4
     228: invokedynamic #79,  0             // InvokeDynamic #2:apply:([Ljava/util/concurrent/CompletableFuture;)Ljava/util/function/Function;
     233: invokevirtual #80                 // Method java/util/concurrent/CompletableFuture.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
     236: aload_0
     237: aload         5
     239: aload         4
     241: invokedynamic #81,  0             // InvokeDynamic #3:accept:(Lio/lettuce/core/cluster/PooledClusterConnectionProvider;Ljava/util/concurrent/CompletableFuture;[Ljava/util/concurrent/CompletableFuture;)Ljava/util/function/BiConsumer;
     246: invokevirtual #82                 // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
     249: pop
     250: aload         5
     252: aload_0
     253: iload_1
     254: invokedynamic #83,  0             // InvokeDynamic #4:apply:(Lio/lettuce/core/cluster/PooledClusterConnectionProvider;I)Ljava/util/function/Function;
     259: invokevirtual #80                 // Method java/util/concurrent/CompletableFuture.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
     262: areturn
    Exception table:
       from    to  target type
          10    20    23   any
          23    28    23   any

  private io.lettuce.core.api.StatefulRedisConnection<K, V>[] getConnections(java.util.concurrent.CompletableFuture<io.lettuce.core.api.StatefulRedisConnection<K, V>>[]);
    Code:
       0: new           #84                 // class java/util/ArrayList
       3: dup
       4: aload_1
       5: arraylength
       6: invokespecial #85                 // Method java/util/ArrayList."<init>":(I)V
       9: astore_2
      10: aload_1
      11: astore_3
      12: aload_3
      13: arraylength
      14: istore        4
      16: iconst_0
      17: istore        5
      19: iload         5
      21: iload         4
      23: if_icmpge     55
      26: aload_3
      27: iload         5
      29: aaload
      30: astore        6
      32: aload_2
      33: aload         6
      35: invokevirtual #86                 // Method java/util/concurrent/CompletableFuture.join:()Ljava/lang/Object;
      38: invokeinterface #87,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      43: pop
      44: goto          49
      47: astore        7
      49: iinc          5, 1
      52: goto          19
      55: aload_2
      56: invokeinterface #89,  1           // InterfaceMethod java/util/List.size:()I
      61: anewarray     #26                 // class io/lettuce/core/api/StatefulRedisConnection
      64: astore_3
      65: aload_2
      66: aload_3
      67: invokeinterface #90,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      72: pop
      73: aload_3
      74: areturn
    Exception table:
       from    to  target type
          32    44    47   Class java/lang/Exception

  private java.util.concurrent.CompletableFuture<io.lettuce.core.api.StatefulRedisConnection<K, V>>[] getReadFromConnections(java.util.List<io.lettuce.core.models.role.RedisNodeDescription>);
    Code:
       0: aload_1
       1: invokeinterface #89,  1           // InterfaceMethod java/util/List.size:()I
       6: anewarray     #10                 // class java/util/concurrent/CompletableFuture
       9: astore_2
      10: iconst_0
      11: istore_3
      12: iload_3
      13: aload_1
      14: invokeinterface #89,  1           // InterfaceMethod java/util/List.size:()I
      19: if_icmpge     104
      22: aload_1
      23: iload_3
      24: invokeinterface #91,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      29: checkcast     #92                 // class io/lettuce/core/models/role/RedisNodeDescription
      32: astore        4
      34: aload         4
      36: invokeinterface #93,  1           // InterfaceMethod io/lettuce/core/models/role/RedisNodeDescription.getUri:()Lio/lettuce/core/RedisURI;
      41: astore        5
      43: new           #58                 // class io/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey
      46: dup
      47: aload         4
      49: invokeinterface #94,  1           // InterfaceMethod io/lettuce/core/models/role/RedisNodeDescription.getRole:()Lio/lettuce/core/models/role/RedisInstance$Role;
      54: getstatic     #95                 // Field io/lettuce/core/models/role/RedisInstance$Role.MASTER:Lio/lettuce/core/models/role/RedisInstance$Role;
      57: if_acmpne     66
      60: getstatic     #59                 // Field io/lettuce/core/cluster/ClusterConnectionProvider$Intent.WRITE:Lio/lettuce/core/cluster/ClusterConnectionProvider$Intent;
      63: goto          69
      66: getstatic     #47                 // Field io/lettuce/core/cluster/ClusterConnectionProvider$Intent.READ:Lio/lettuce/core/cluster/ClusterConnectionProvider$Intent;
      69: aload         5
      71: invokevirtual #60                 // Method io/lettuce/core/RedisURI.getHost:()Ljava/lang/String;
      74: aload         5
      76: invokevirtual #61                 // Method io/lettuce/core/RedisURI.getPort:()I
      79: invokespecial #62                 // Method io/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey."<init>":(Lio/lettuce/core/cluster/ClusterConnectionProvider$Intent;Ljava/lang/String;I)V
      82: astore        6
      84: aload_2
      85: iload_3
      86: aload_0
      87: aload         6
      89: invokevirtual #63                 // Method getConnectionAsync:(Lio/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey;)Lio/lettuce/core/ConnectionFuture;
      92: invokeinterface #66,  1           // InterfaceMethod io/lettuce/core/ConnectionFuture.toCompletableFuture:()Ljava/util/concurrent/CompletableFuture;
      97: aastore
      98: iinc          3, 1
     101: goto          12
     104: aload_2
     105: areturn

  private java.util.List<io.lettuce.core.models.role.RedisNodeDescription> getReadCandidates(io.lettuce.core.cluster.models.partitions.RedisClusterNode);
    Code:
       0: aload_0
       1: getfield      #52                 // Field partitions:Lio/lettuce/core/cluster/models/partitions/Partitions;
       4: invokevirtual #96                 // Method io/lettuce/core/cluster/models/partitions/Partitions.stream:()Ljava/util/stream/Stream;
       7: aload_0
       8: aload_1
       9: invokedynamic #97,  0             // InvokeDynamic #5:test:(Lio/lettuce/core/cluster/PooledClusterConnectionProvider;Lio/lettuce/core/cluster/models/partitions/RedisClusterNode;)Ljava/util/function/Predicate;
      14: invokeinterface #98,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      19: invokestatic  #99                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      22: invokeinterface #100,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      27: checkcast     #101                // class java/util/List
      30: areturn

  private boolean isReadCandidate(io.lettuce.core.cluster.models.partitions.RedisClusterNode, io.lettuce.core.cluster.models.partitions.RedisClusterNode);
    Code:
       0: aload_1
       1: invokevirtual #102                // Method io/lettuce/core/cluster/models/partitions/RedisClusterNode.getNodeId:()Ljava/lang/String;
       4: aload_2
       5: invokevirtual #102                // Method io/lettuce/core/cluster/models/partitions/RedisClusterNode.getNodeId:()Ljava/lang/String;
       8: invokevirtual #103                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      11: ifne          28
      14: aload_1
      15: invokevirtual #102                // Method io/lettuce/core/cluster/models/partitions/RedisClusterNode.getNodeId:()Ljava/lang/String;
      18: aload_2
      19: invokevirtual #104                // Method io/lettuce/core/cluster/models/partitions/RedisClusterNode.getSlaveOf:()Ljava/lang/String;
      22: invokevirtual #103                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  public io.lettuce.core.api.StatefulRedisConnection<K, V> getConnection(io.lettuce.core.cluster.ClusterConnectionProvider$Intent, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field debugEnabled:Z
       4: ifeq          48
       7: getstatic     #6                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      10: new           #37                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #39                 // String getConnection(
      19: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_1
      23: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      26: ldc           #42                 // String ,
      28: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_2
      32: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #44                 // String )
      37: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokeinterface #46,  2           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;)V
      48: aload_0
      49: getfield      #23                 // Field connectionProvider:Lio/lettuce/core/cluster/SynchronizingClusterConnectionProvider;
      52: new           #58                 // class io/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey
      55: dup
      56: aload_1
      57: aload_2
      58: invokespecial #105                // Method io/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey."<init>":(Lio/lettuce/core/cluster/ClusterConnectionProvider$Intent;Ljava/lang/String;)V
      61: invokevirtual #106                // Method io/lettuce/core/cluster/SynchronizingClusterConnectionProvider.getConnection:(Lio/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey;)Lio/lettuce/core/api/StatefulRedisConnection;
      64: areturn

  public java.util.concurrent.CompletableFuture<io.lettuce.core.api.StatefulRedisConnection<K, V>> getConnectionAsync(io.lettuce.core.cluster.ClusterConnectionProvider$Intent, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field debugEnabled:Z
       4: ifeq          48
       7: getstatic     #6                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      10: new           #37                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #39                 // String getConnection(
      19: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_1
      23: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      26: ldc           #42                 // String ,
      28: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_2
      32: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #44                 // String )
      37: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokeinterface #46,  2           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;)V
      48: aload_0
      49: new           #58                 // class io/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey
      52: dup
      53: aload_1
      54: aload_2
      55: invokespecial #105                // Method io/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey."<init>":(Lio/lettuce/core/cluster/ClusterConnectionProvider$Intent;Ljava/lang/String;)V
      58: invokevirtual #63                 // Method getConnectionAsync:(Lio/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey;)Lio/lettuce/core/ConnectionFuture;
      61: invokeinterface #66,  1           // InterfaceMethod io/lettuce/core/ConnectionFuture.toCompletableFuture:()Ljava/util/concurrent/CompletableFuture;
      66: areturn

  protected io.lettuce.core.ConnectionFuture<io.lettuce.core.api.StatefulRedisConnection<K, V>> getConnectionAsync(io.lettuce.core.cluster.ClusterNodeConnectionFactory$ConnectionKey);
    Code:
       0: aload_0
       1: getfield      #23                 // Field connectionProvider:Lio/lettuce/core/cluster/SynchronizingClusterConnectionProvider;
       4: aload_1
       5: invokevirtual #107                // Method io/lettuce/core/cluster/SynchronizingClusterConnectionProvider.getConnectionAsync:(Lio/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey;)Lio/lettuce/core/ConnectionFuture;
       8: astore_2
       9: new           #10                 // class java/util/concurrent/CompletableFuture
      12: dup
      13: invokespecial #78                 // Method java/util/concurrent/CompletableFuture."<init>":()V
      16: astore_3
      17: aload_2
      18: aload_3
      19: aload_2
      20: invokedynamic #108,  0            // InvokeDynamic #6:apply:(Ljava/util/concurrent/CompletableFuture;Lio/lettuce/core/ConnectionFuture;)Ljava/util/function/BiFunction;
      25: invokeinterface #109,  2          // InterfaceMethod io/lettuce/core/ConnectionFuture.handle:(Ljava/util/function/BiFunction;)Lio/lettuce/core/ConnectionFuture;
      30: pop
      31: aload_2
      32: invokeinterface #110,  1          // InterfaceMethod io/lettuce/core/ConnectionFuture.getRemoteAddress:()Ljava/net/SocketAddress;
      37: aload_3
      38: invokestatic  #111                // InterfaceMethod io/lettuce/core/ConnectionFuture.from:(Ljava/net/SocketAddress;Ljava/util/concurrent/CompletableFuture;)Lio/lettuce/core/ConnectionFuture;
      41: areturn

  public io.lettuce.core.api.StatefulRedisConnection<K, V> getConnection(io.lettuce.core.cluster.ClusterConnectionProvider$Intent, java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #112                // Method beforeGetConnection:(Lio/lettuce/core/cluster/ClusterConnectionProvider$Intent;Ljava/lang/String;I)V
       7: new           #58                 // class io/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey
      10: dup
      11: aload_1
      12: aload_2
      13: iload_3
      14: invokespecial #62                 // Method io/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey."<init>":(Lio/lettuce/core/cluster/ClusterConnectionProvider$Intent;Ljava/lang/String;I)V
      17: astore        4
      19: aload_0
      20: getfield      #23                 // Field connectionProvider:Lio/lettuce/core/cluster/SynchronizingClusterConnectionProvider;
      23: aload         4
      25: invokevirtual #106                // Method io/lettuce/core/cluster/SynchronizingClusterConnectionProvider.getConnection:(Lio/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey;)Lio/lettuce/core/api/StatefulRedisConnection;
      28: areturn
      29: astore        4
      31: aload         4
      33: athrow
      34: astore        4
      36: new           #27                 // class io/lettuce/core/RedisException
      39: dup
      40: aload         4
      42: invokespecial #35                 // Method io/lettuce/core/RedisException."<init>":(Ljava/lang/Throwable;)V
      45: athrow
    Exception table:
       from    to  target type
           0    28    29   Class io/lettuce/core/RedisException
           0    28    34   Class java/lang/RuntimeException

  public java.util.concurrent.CompletableFuture<io.lettuce.core.api.StatefulRedisConnection<K, V>> getConnectionAsync(io.lettuce.core.cluster.ClusterConnectionProvider$Intent, java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #112                // Method beforeGetConnection:(Lio/lettuce/core/cluster/ClusterConnectionProvider$Intent;Ljava/lang/String;I)V
       7: aload_0
       8: getfield      #23                 // Field connectionProvider:Lio/lettuce/core/cluster/SynchronizingClusterConnectionProvider;
      11: new           #58                 // class io/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey
      14: dup
      15: aload_1
      16: aload_2
      17: iload_3
      18: invokespecial #62                 // Method io/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey."<init>":(Lio/lettuce/core/cluster/ClusterConnectionProvider$Intent;Ljava/lang/String;I)V
      21: invokevirtual #107                // Method io/lettuce/core/cluster/SynchronizingClusterConnectionProvider.getConnectionAsync:(Lio/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey;)Lio/lettuce/core/ConnectionFuture;
      24: invokeinterface #66,  1           // InterfaceMethod io/lettuce/core/ConnectionFuture.toCompletableFuture:()Ljava/util/concurrent/CompletableFuture;
      29: areturn
      30: astore        4
      32: aload         4
      34: athrow
      35: astore        4
      37: new           #27                 // class io/lettuce/core/RedisException
      40: dup
      41: aload         4
      43: invokespecial #35                 // Method io/lettuce/core/RedisException."<init>":(Ljava/lang/Throwable;)V
      46: athrow
    Exception table:
       from    to  target type
           0    29    30   Class io/lettuce/core/RedisException
           0    29    35   Class java/lang/RuntimeException

  private void beforeGetConnection(io.lettuce.core.cluster.ClusterConnectionProvider$Intent, java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field debugEnabled:Z
       4: ifeq          57
       7: getstatic     #6                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      10: new           #37                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #39                 // String getConnection(
      19: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_1
      23: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      26: ldc           #42                 // String ,
      28: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_2
      32: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #42                 // String ,
      37: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: iload_3
      41: invokevirtual #43                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      44: ldc           #44                 // String )
      46: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokeinterface #46,  2           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;)V
      57: aload_0
      58: invokevirtual #113                // Method validateClusterNodeMembership:()Z
      61: ifeq          93
      64: aload_0
      65: aload_2
      66: iload_3
      67: invokevirtual #114                // Method getPartition:(Ljava/lang/String;I)Lio/lettuce/core/cluster/models/partitions/RedisClusterNode;
      70: astore        4
      72: aload         4
      74: ifnonnull     93
      77: aload_2
      78: iload_3
      79: invokestatic  #115                // Method io/lettuce/core/internal/HostAndPort.of:(Ljava/lang/String;I)Lio/lettuce/core/internal/HostAndPort;
      82: astore        5
      84: aload         5
      86: invokevirtual #116                // Method io/lettuce/core/internal/HostAndPort.toString:()Ljava/lang/String;
      89: invokestatic  #3                  // Method invalidConnectionPoint:(Ljava/lang/String;)Ljava/lang/RuntimeException;
      92: athrow
      93: return

  protected io.lettuce.core.cluster.models.partitions.RedisClusterNode getPartition(java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #52                 // Field partitions:Lio/lettuce/core/cluster/models/partitions/Partitions;
       4: invokevirtual #117                // Method io/lettuce/core/cluster/models/partitions/Partitions.iterator:()Ljava/util/Iterator;
       7: astore_3
       8: aload_3
       9: invokeinterface #118,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          62
      17: aload_3
      18: invokeinterface #119,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #120                // class io/lettuce/core/cluster/models/partitions/RedisClusterNode
      26: astore        4
      28: aload         4
      30: invokevirtual #57                 // Method io/lettuce/core/cluster/models/partitions/RedisClusterNode.getUri:()Lio/lettuce/core/RedisURI;
      33: astore        5
      35: iload_2
      36: aload         5
      38: invokevirtual #61                 // Method io/lettuce/core/RedisURI.getPort:()I
      41: if_icmpne     59
      44: aload_1
      45: aload         5
      47: invokevirtual #60                 // Method io/lettuce/core/RedisURI.getHost:()Ljava/lang/String;
      50: invokevirtual #103                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      53: ifeq          59
      56: aload         4
      58: areturn
      59: goto          8
      62: aconst_null
      63: areturn

  public void close();
    Code:
       0: aload_0
       1: invokespecial #121                // Method resetFastConnectionCache:()V
       4: aload_0
       5: getfield      #23                 // Field connectionProvider:Lio/lettuce/core/cluster/SynchronizingClusterConnectionProvider;
       8: invokevirtual #122                // Method io/lettuce/core/cluster/SynchronizingClusterConnectionProvider.close:()V
      11: return

  public void reset();
    Code:
       0: aload_0
       1: getfield      #23                 // Field connectionProvider:Lio/lettuce/core/cluster/SynchronizingClusterConnectionProvider;
       4: invokedynamic #123,  0            // InvokeDynamic #7:accept:()Ljava/util/function/Consumer;
       9: invokevirtual #124                // Method io/lettuce/core/cluster/SynchronizingClusterConnectionProvider.forEach:(Ljava/util/function/Consumer;)V
      12: return

  public void setPartitions(io.lettuce.core.cluster.models.partitions.Partitions);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #2                  // Field stateLock:Ljava/lang/Object;
       6: dup
       7: astore_3
       8: monitorenter
       9: aload_0
      10: getfield      #52                 // Field partitions:Lio/lettuce/core/cluster/models/partitions/Partitions;
      13: ifnull        18
      16: iconst_1
      17: istore_2
      18: aload_0
      19: aload_1
      20: putfield      #52                 // Field partitions:Lio/lettuce/core/cluster/models/partitions/Partitions;
      23: aload_0
      24: getfield      #20                 // Field connectionFactory:Lio/lettuce/core/cluster/ClusterNodeConnectionFactory;
      27: aload_1
      28: invokeinterface #125,  2          // InterfaceMethod io/lettuce/core/cluster/ClusterNodeConnectionFactory.setPartitions:(Lio/lettuce/core/cluster/models/partitions/Partitions;)V
      33: aload_3
      34: monitorexit
      35: goto          45
      38: astore        4
      40: aload_3
      41: monitorexit
      42: aload         4
      44: athrow
      45: iload_2
      46: ifeq          53
      49: aload_0
      50: invokespecial #126                // Method reconfigurePartitions:()V
      53: return
    Exception table:
       from    to  target type
           9    35    38   any
          38    42    38   any

  protected io.lettuce.core.cluster.models.partitions.Partitions getPartitions();
    Code:
       0: aload_0
       1: getfield      #52                 // Field partitions:Lio/lettuce/core/cluster/models/partitions/Partitions;
       4: areturn

  private void reconfigurePartitions();
    Code:
       0: aload_0
       1: invokespecial #121                // Method resetFastConnectionCache:()V
       4: aload_0
       5: getfield      #15                 // Field redisClusterClient:Lio/lettuce/core/cluster/RedisClusterClient;
       8: invokevirtual #127                // Method io/lettuce/core/cluster/RedisClusterClient.expireStaleConnections:()Z
      11: ifeq          18
      14: aload_0
      15: invokevirtual #128                // Method closeStaleConnections:()V
      18: return

  public void closeStaleConnections();
    Code:
       0: getstatic     #6                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       3: ldc           #129                // String closeStaleConnections() count before expiring: {}
       5: aload_0
       6: invokevirtual #130                // Method getConnectionCount:()J
       9: invokestatic  #131                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      12: invokeinterface #132,  3          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      17: aload_0
      18: getfield      #23                 // Field connectionProvider:Lio/lettuce/core/cluster/SynchronizingClusterConnectionProvider;
      21: aload_0
      22: invokedynamic #133,  0            // InvokeDynamic #8:accept:(Lio/lettuce/core/cluster/PooledClusterConnectionProvider;)Ljava/util/function/BiConsumer;
      27: invokevirtual #134                // Method io/lettuce/core/cluster/SynchronizingClusterConnectionProvider.forEach:(Ljava/util/function/BiConsumer;)V
      30: getstatic     #6                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      33: ldc           #135                // String closeStaleConnections() count after expiring: {}
      35: aload_0
      36: invokevirtual #130                // Method getConnectionCount:()J
      39: invokestatic  #131                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      42: invokeinterface #132,  3          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      47: return

  private boolean isStale(io.lettuce.core.cluster.ClusterNodeConnectionFactory$ConnectionKey);
    Code:
       0: aload_1
       1: getfield      #136                // Field io/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey.nodeId:Ljava/lang/String;
       4: ifnull        23
       7: aload_0
       8: getfield      #52                 // Field partitions:Lio/lettuce/core/cluster/models/partitions/Partitions;
      11: aload_1
      12: getfield      #136                // Field io/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey.nodeId:Ljava/lang/String;
      15: invokevirtual #137                // Method io/lettuce/core/cluster/models/partitions/Partitions.getPartitionByNodeId:(Ljava/lang/String;)Lio/lettuce/core/cluster/models/partitions/RedisClusterNode;
      18: ifnull        23
      21: iconst_0
      22: ireturn
      23: aload_1
      24: getfield      #138                // Field io/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey.host:Ljava/lang/String;
      27: ifnull        47
      30: aload_0
      31: aload_1
      32: getfield      #138                // Field io/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey.host:Ljava/lang/String;
      35: aload_1
      36: getfield      #139                // Field io/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey.port:I
      39: invokevirtual #114                // Method getPartition:(Ljava/lang/String;I)Lio/lettuce/core/cluster/models/partitions/RedisClusterNode;
      42: ifnull        47
      45: iconst_0
      46: ireturn
      47: iconst_1
      48: ireturn

  public void setAutoFlushCommands(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field stateLock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: iload_1
       9: putfield      #1                  // Field autoFlushCommands:Z
      12: aload_2
      13: monitorexit
      14: goto          22
      17: astore_3
      18: aload_2
      19: monitorexit
      20: aload_3
      21: athrow
      22: aload_0
      23: getfield      #23                 // Field connectionProvider:Lio/lettuce/core/cluster/SynchronizingClusterConnectionProvider;
      26: iload_1
      27: invokedynamic #140,  0            // InvokeDynamic #9:accept:(Z)Ljava/util/function/Consumer;
      32: invokevirtual #124                // Method io/lettuce/core/cluster/SynchronizingClusterConnectionProvider.forEach:(Ljava/util/function/Consumer;)V
      35: return
    Exception table:
       from    to  target type
           7    14    17   any
          17    20    17   any

  public void flushCommands();
    Code:
       0: aload_0
       1: getfield      #23                 // Field connectionProvider:Lio/lettuce/core/cluster/SynchronizingClusterConnectionProvider;
       4: invokedynamic #141,  0            // InvokeDynamic #10:accept:()Ljava/util/function/Consumer;
       9: invokevirtual #124                // Method io/lettuce/core/cluster/SynchronizingClusterConnectionProvider.forEach:(Ljava/util/function/Consumer;)V
      12: return

  public void setReadFrom(io.lettuce.core.ReadFrom);
    Code:
       0: aload_0
       1: getfield      #2                  // Field stateLock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: aload_1
       9: putfield      #48                 // Field readFrom:Lio/lettuce/core/ReadFrom;
      12: aload_0
      13: getfield      #13                 // Field readers:[[Ljava/util/concurrent/CompletableFuture;
      16: aconst_null
      17: invokestatic  #142                // Method java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V
      20: aload_2
      21: monitorexit
      22: goto          30
      25: astore_3
      26: aload_2
      27: monitorexit
      28: aload_3
      29: athrow
      30: return
    Exception table:
       from    to  target type
           7    22    25   any
          25    28    25   any

  public io.lettuce.core.ReadFrom getReadFrom();
    Code:
       0: aload_0
       1: getfield      #48                 // Field readFrom:Lio/lettuce/core/ReadFrom;
       4: areturn

  long getConnectionCount();
    Code:
       0: aload_0
       1: getfield      #23                 // Field connectionProvider:Lio/lettuce/core/cluster/SynchronizingClusterConnectionProvider;
       4: invokevirtual #143                // Method io/lettuce/core/cluster/SynchronizingClusterConnectionProvider.getConnectionCount:()I
       7: i2l
       8: lreturn

  private void resetFastConnectionCache();
    Code:
       0: aload_0
       1: getfield      #2                  // Field stateLock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #11                 // Field writers:[Ljava/util/concurrent/CompletableFuture;
      11: aconst_null
      12: invokestatic  #142                // Method java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V
      15: aload_0
      16: getfield      #13                 // Field readers:[[Ljava/util/concurrent/CompletableFuture;
      19: aconst_null
      20: invokestatic  #142                // Method java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V
      23: aload_1
      24: monitorexit
      25: goto          33
      28: astore_2
      29: aload_1
      30: monitorexit
      31: aload_2
      32: athrow
      33: return
    Exception table:
       from    to  target type
           7    25    28   any
          28    31    28   any

  private static java.lang.RuntimeException invalidConnectionPoint(java.lang.String);
    Code:
       0: new           #144                // class java/lang/IllegalArgumentException
       3: dup
       4: new           #37                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #145                // String Connection to
      13: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc           #146                // String  not allowed. This connection point is not known in the cluster view
      22: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: invokespecial #147                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: areturn

  boolean validateClusterNodeMembership();
    Code:
       0: aload_0
       1: getfield      #15                 // Field redisClusterClient:Lio/lettuce/core/cluster/RedisClusterClient;
       4: invokevirtual #148                // Method io/lettuce/core/cluster/RedisClusterClient.getClusterClientOptions:()Lio/lettuce/core/cluster/ClusterClientOptions;
       7: ifnull        23
      10: aload_0
      11: getfield      #15                 // Field redisClusterClient:Lio/lettuce/core/cluster/RedisClusterClient;
      14: invokevirtual #148                // Method io/lettuce/core/cluster/RedisClusterClient.getClusterClientOptions:()Lio/lettuce/core/cluster/ClusterClientOptions;
      17: invokevirtual #149                // Method io/lettuce/core/cluster/ClusterClientOptions.isValidateClusterNodeMembership:()Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  protected io.lettuce.core.cluster.ClusterNodeConnectionFactory<K, V> getConnectionFactory(io.lettuce.core.cluster.RedisClusterClient);
    Code:
       0: new           #150                // class io/lettuce/core/cluster/PooledClusterConnectionProvider$DefaultClusterNodeConnectionFactory
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #14                 // Field redisCodec:Lio/lettuce/core/codec/RedisCodec;
       9: aload_0
      10: getfield      #16                 // Field clusterWriter:Lio/lettuce/core/RedisChannelWriter;
      13: invokespecial #151                // Method io/lettuce/core/cluster/PooledClusterConnectionProvider$DefaultClusterNodeConnectionFactory."<init>":(Lio/lettuce/core/cluster/RedisClusterClient;Lio/lettuce/core/codec/RedisCodec;Lio/lettuce/core/RedisChannelWriter;)V
      16: areturn

  private static void lambda$setAutoFlushCommands$8(boolean, io.lettuce.core.api.StatefulRedisConnection);
    Code:
       0: aload_1
       1: iload_0
       2: invokeinterface #152,  2          // InterfaceMethod io/lettuce/core/api/StatefulRedisConnection.setAutoFlushCommands:(Z)V
       7: return

  private void lambda$closeStaleConnections$7(io.lettuce.core.cluster.ClusterNodeConnectionFactory$ConnectionKey, io.lettuce.core.api.StatefulRedisConnection);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #153                // Method isStale:(Lio/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey;)Z
       5: ifeq          16
       8: aload_0
       9: getfield      #23                 // Field connectionProvider:Lio/lettuce/core/cluster/SynchronizingClusterConnectionProvider;
      12: aload_1
      13: invokevirtual #154                // Method io/lettuce/core/cluster/SynchronizingClusterConnectionProvider.close:(Lio/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey;)V
      16: return

  private static java.lang.Object lambda$getConnectionAsync$6(java.util.concurrent.CompletableFuture, io.lettuce.core.ConnectionFuture, io.lettuce.core.api.StatefulRedisConnection, java.lang.Throwable);
    Code:
       0: aload_3
       1: ifnull        22
       4: aload_0
       5: aload_1
       6: invokeinterface #110,  1          // InterfaceMethod io/lettuce/core/ConnectionFuture.getRemoteAddress:()Ljava/net/SocketAddress;
      11: aload_3
      12: invokestatic  #155                // Method io/lettuce/core/RedisConnectionException.create:(Ljava/net/SocketAddress;Ljava/lang/Throwable;)Lio/lettuce/core/RedisConnectionException;
      15: invokevirtual #156                // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
      18: pop
      19: goto          28
      22: aload_0
      23: aload_2
      24: invokevirtual #157                // Method java/util/concurrent/CompletableFuture.complete:(Ljava/lang/Object;)Z
      27: pop
      28: aconst_null
      29: areturn

  private boolean lambda$getReadCandidates$5(io.lettuce.core.cluster.models.partitions.RedisClusterNode, io.lettuce.core.cluster.models.partitions.RedisClusterNode);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #158                // Method isReadCandidate:(Lio/lettuce/core/cluster/models/partitions/RedisClusterNode;Lio/lettuce/core/cluster/models/partitions/RedisClusterNode;)Z
       6: ireturn

  private io.lettuce.core.api.StatefulRedisConnection lambda$getReadConnection$4(int, io.lettuce.core.api.StatefulRedisConnection[]);
    Code:
       0: aload_2
       1: arraylength
       2: anewarray     #10                 // class java/util/concurrent/CompletableFuture
       5: astore_3
       6: iconst_0
       7: istore        4
       9: iload         4
      11: aload_3
      12: arraylength
      13: if_icmpge     33
      16: aload_3
      17: iload         4
      19: aload_2
      20: iload         4
      22: aaload
      23: invokestatic  #159                // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      26: aastore
      27: iinc          4, 1
      30: goto          9
      33: aload_0
      34: getfield      #2                  // Field stateLock:Ljava/lang/Object;
      37: dup
      38: astore        4
      40: monitorenter
      41: aload_0
      42: getfield      #13                 // Field readers:[[Ljava/util/concurrent/CompletableFuture;
      45: iload_1
      46: aload_3
      47: aastore
      48: aload         4
      50: monitorexit
      51: goto          62
      54: astore        5
      56: aload         4
      58: monitorexit
      59: aload         5
      61: athrow
      62: aload_2
      63: astore        4
      65: aload         4
      67: arraylength
      68: istore        5
      70: iconst_0
      71: istore        6
      73: iload         6
      75: iload         5
      77: if_icmpge     106
      80: aload         4
      82: iload         6
      84: aaload
      85: astore        7
      87: aload         7
      89: invokeinterface #160,  1          // InterfaceMethod io/lettuce/core/api/StatefulRedisConnection.isOpen:()Z
      94: ifeq          100
      97: aload         7
      99: areturn
     100: iinc          6, 1
     103: goto          73
     106: aload_2
     107: iconst_0
     108: aaload
     109: areturn
    Exception table:
       from    to  target type
          41    51    54   any
          54    59    54   any

  private void lambda$getReadConnection$3(java.util.concurrent.CompletableFuture, java.util.concurrent.CompletableFuture[], java.util.concurrent.CompletableFuture[], java.lang.Throwable);
    Code:
       0: aload         4
       2: ifnonnull     16
       5: aload_1
       6: aload_0
       7: aload_3
       8: invokespecial #161                // Method getConnections:([Ljava/util/concurrent/CompletableFuture;)[Lio/lettuce/core/api/StatefulRedisConnection;
      11: invokevirtual #157                // Method java/util/concurrent/CompletableFuture.complete:(Ljava/lang/Object;)Z
      14: pop
      15: return
      16: aload_0
      17: aload_2
      18: invokespecial #161                // Method getConnections:([Ljava/util/concurrent/CompletableFuture;)[Lio/lettuce/core/api/StatefulRedisConnection;
      21: astore        5
      23: aload         5
      25: arraylength
      26: ifne          37
      29: aload_1
      30: aload         4
      32: invokevirtual #156                // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
      35: pop
      36: return
      37: aload_1
      38: aload         5
      40: invokevirtual #157                // Method java/util/concurrent/CompletableFuture.complete:(Ljava/lang/Object;)Z
      43: pop
      44: return

  private static java.util.concurrent.CompletableFuture[] lambda$getReadConnection$2(java.util.concurrent.CompletableFuture[], java.lang.Void);
    Code:
       0: aload_0
       1: areturn

  private static java.util.concurrent.CompletionStage lambda$getReadConnection$1(java.util.concurrent.CompletableFuture[], java.lang.Void);
    Code:
       0: aload_0
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     45
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload         5
      22: invokevirtual #86                 // Method java/util/concurrent/CompletableFuture.join:()Ljava/lang/Object;
      25: checkcast     #26                 // class io/lettuce/core/api/StatefulRedisConnection
      28: invokeinterface #160,  1          // InterfaceMethod io/lettuce/core/api/StatefulRedisConnection.isOpen:()Z
      33: ifeq          39
      36: aload         5
      38: areturn
      39: iinc          4, 1
      42: goto          8
      45: aload_0
      46: iconst_0
      47: aaload
      48: areturn

  private io.lettuce.core.api.StatefulRedisConnection lambda$getWriteConnection$0(int, io.lettuce.core.api.StatefulRedisConnection);
    Code:
       0: aload_0
       1: getfield      #2                  // Field stateLock:Ljava/lang/Object;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #11                 // Field writers:[Ljava/util/concurrent/CompletableFuture;
      11: iload_1
      12: aaload
      13: ifnonnull     26
      16: aload_0
      17: getfield      #11                 // Field writers:[Ljava/util/concurrent/CompletableFuture;
      20: iload_1
      21: aload_2
      22: invokestatic  #159                // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      25: aastore
      26: aload_3
      27: monitorexit
      28: goto          38
      31: astore        4
      33: aload_3
      34: monitorexit
      35: aload         4
      37: athrow
      38: aload_2
      39: areturn
    Exception table:
       from    to  target type
           7    28    31   any
          31    35    31   any

  static java.lang.RuntimeException access$000(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method invalidConnectionPoint:(Ljava/lang/String;)Ljava/lang/RuntimeException;
       4: areturn

  static java.lang.Object access$100(io.lettuce.core.cluster.PooledClusterConnectionProvider);
    Code:
       0: aload_0
       1: getfield      #2                  // Field stateLock:Ljava/lang/Object;
       4: areturn

  static boolean access$200(io.lettuce.core.cluster.PooledClusterConnectionProvider);
    Code:
       0: aload_0
       1: getfield      #1                  // Field autoFlushCommands:Z
       4: ireturn

  static {};
    Code:
       0: ldc           #162                // class io/lettuce/core/cluster/PooledClusterConnectionProvider
       2: invokestatic  #163                // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
       5: putstatic     #6                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       8: return
}
