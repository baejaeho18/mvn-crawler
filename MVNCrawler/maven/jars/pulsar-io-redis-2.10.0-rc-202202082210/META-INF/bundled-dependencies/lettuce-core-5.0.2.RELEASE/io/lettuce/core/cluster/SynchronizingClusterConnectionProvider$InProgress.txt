Compiled from "SynchronizingClusterConnectionProvider.java"
class io.lettuce.core.cluster.SynchronizingClusterConnectionProvider$InProgress<K, V> implements io.lettuce.core.cluster.SynchronizingClusterConnectionProvider$Sync<K, V> {
  private static final int ST_IN_PROGRESS;

  private static final int ST_FINISHED;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.lettuce.core.cluster.SynchronizingClusterConnectionProvider$InProgress> REMOVE;

  private volatile int remove;

  private final io.lettuce.core.cluster.ClusterNodeConnectionFactory$ConnectionKey key;

  private final io.lettuce.core.ConnectionFuture<io.lettuce.core.api.StatefulRedisConnection<K, V>> future;

  private final java.util.Map<io.lettuce.core.cluster.ClusterNodeConnectionFactory$ConnectionKey, io.lettuce.core.cluster.SynchronizingClusterConnectionProvider$Sync<K, V>> connections;

  public io.lettuce.core.cluster.SynchronizingClusterConnectionProvider$InProgress(io.lettuce.core.cluster.ClusterNodeConnectionFactory$ConnectionKey, io.lettuce.core.ConnectionFuture<io.lettuce.core.api.StatefulRedisConnection<K, V>>, java.util.Map<io.lettuce.core.cluster.ClusterNodeConnectionFactory$ConnectionKey, io.lettuce.core.cluster.SynchronizingClusterConnectionProvider$Sync<K, V>>);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field remove:I
       9: aload_0
      10: aload_1
      11: putfield      #5                  // Field key:Lio/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey;
      14: aload_0
      15: aload_2
      16: putfield      #1                  // Field future:Lio/lettuce/core/ConnectionFuture;
      19: aload_0
      20: aload_3
      21: putfield      #6                  // Field connections:Ljava/util/Map;
      24: return

  public io.lettuce.core.ConnectionFuture<io.lettuce.core.api.StatefulRedisConnection<K, V>> getConnectionAsync();
    Code:
       0: aload_0
       1: getfield      #1                  // Field future:Lio/lettuce/core/ConnectionFuture;
       4: aload_0
       5: invokedynamic #7,  0              // InvokeDynamic #0:accept:(Lio/lettuce/core/cluster/SynchronizingClusterConnectionProvider$InProgress;)Ljava/util/function/BiConsumer;
      10: invokeinterface #8,  2            // InterfaceMethod io/lettuce/core/ConnectionFuture.whenComplete:(Ljava/util/function/BiConsumer;)Lio/lettuce/core/ConnectionFuture;
      15: areturn

  public io.lettuce.core.api.StatefulRedisConnection<K, V> getConnection();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getConnectionAsync:()Lio/lettuce/core/ConnectionFuture;
       4: invokeinterface #10,  1           // InterfaceMethod io/lettuce/core/ConnectionFuture.toCompletableFuture:()Ljava/util/concurrent/CompletableFuture;
       9: invokevirtual #11                 // Method java/util/concurrent/CompletableFuture.join:()Ljava/lang/Object;
      12: checkcast     #12                 // class io/lettuce/core/api/StatefulRedisConnection
      15: areturn
      16: astore_1
      17: aload_0
      18: getfield      #1                  // Field future:Lio/lettuce/core/ConnectionFuture;
      21: invokeinterface #14,  1           // InterfaceMethod io/lettuce/core/ConnectionFuture.getRemoteAddress:()Ljava/net/SocketAddress;
      26: aload_1
      27: invokevirtual #15                 // Method java/util/concurrent/CompletionException.getCause:()Ljava/lang/Throwable;
      30: invokestatic  #16                 // Method io/lettuce/core/RedisConnectionException.create:(Ljava/net/SocketAddress;Ljava/lang/Throwable;)Lio/lettuce/core/RedisConnectionException;
      33: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/util/concurrent/CompletionException

  public void doWithSync(java.util.function.Consumer<? super io.lettuce.core.api.StatefulRedisConnection<K, V>>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field future:Lio/lettuce/core/ConnectionFuture;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod io/lettuce/core/ConnectionFuture.thenAccept:(Ljava/util/function/Consumer;)Lio/lettuce/core/ConnectionFuture;
      10: pop
      11: return

  public void doWithSync(java.util.function.BiConsumer<io.lettuce.core.cluster.ClusterNodeConnectionFactory$ConnectionKey, ? super io.lettuce.core.api.StatefulRedisConnection<K, V>>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field future:Lio/lettuce/core/ConnectionFuture;
       4: aload_0
       5: aload_1
       6: invokedynamic #18,  0             // InvokeDynamic #1:accept:(Lio/lettuce/core/cluster/SynchronizingClusterConnectionProvider$InProgress;Ljava/util/function/BiConsumer;)Ljava/util/function/Consumer;
      11: invokeinterface #17,  2           // InterfaceMethod io/lettuce/core/ConnectionFuture.thenAccept:(Ljava/util/function/Consumer;)Lio/lettuce/core/ConnectionFuture;
      16: pop
      17: return

  private void lambda$doWithSync$1(java.util.function.BiConsumer, io.lettuce.core.api.StatefulRedisConnection);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #5                  // Field key:Lio/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey;
       5: aload_2
       6: invokeinterface #19,  3           // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      11: return

  private void lambda$getConnectionAsync$0(io.lettuce.core.api.StatefulRedisConnection, java.lang.Throwable);
    Code:
       0: getstatic     #20                 // Field REMOVE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: iconst_0
       5: iconst_1
       6: invokevirtual #21                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
       9: ifeq          69
      12: aload_2
      13: ifnonnull     55
      16: aload_0
      17: getfield      #6                  // Field connections:Ljava/util/Map;
      20: aload_0
      21: getfield      #5                  // Field key:Lio/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey;
      24: aload_0
      25: new           #22                 // class io/lettuce/core/cluster/SynchronizingClusterConnectionProvider$Finished
      28: dup
      29: aload_0
      30: getfield      #5                  // Field key:Lio/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey;
      33: aload_0
      34: getfield      #1                  // Field future:Lio/lettuce/core/ConnectionFuture;
      37: invokeinterface #14,  1           // InterfaceMethod io/lettuce/core/ConnectionFuture.getRemoteAddress:()Ljava/net/SocketAddress;
      42: aload_1
      43: invokespecial #23                 // Method io/lettuce/core/cluster/SynchronizingClusterConnectionProvider$Finished."<init>":(Lio/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey;Ljava/net/SocketAddress;Lio/lettuce/core/api/StatefulRedisConnection;)V
      46: invokeinterface #24,  4           // InterfaceMethod java/util/Map.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      51: pop
      52: goto          69
      55: aload_0
      56: getfield      #6                  // Field connections:Ljava/util/Map;
      59: aload_0
      60: getfield      #5                  // Field key:Lio/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey;
      63: invokeinterface #25,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      68: pop
      69: return

  static int access$002(io.lettuce.core.cluster.SynchronizingClusterConnectionProvider$InProgress, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #2                  // Field remove:I
       6: ireturn

  static io.lettuce.core.ConnectionFuture access$100(io.lettuce.core.cluster.SynchronizingClusterConnectionProvider$InProgress);
    Code:
       0: aload_0
       1: getfield      #1                  // Field future:Lio/lettuce/core/ConnectionFuture;
       4: areturn

  static {};
    Code:
       0: ldc           #4                  // class io/lettuce/core/cluster/SynchronizingClusterConnectionProvider$InProgress
       2: ldc           #26                 // String remove
       4: invokestatic  #27                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #20                 // Field REMOVE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: return
}
