Compiled from "RedisSetCommands.java"
public interface io.lettuce.core.api.sync.RedisSetCommands<K, V> {
  public abstract java.lang.Long sadd(K, V...);

  public abstract java.lang.Long scard(K);

  public abstract java.util.Set<V> sdiff(K...);

  public abstract java.lang.Long sdiff(io.lettuce.core.output.ValueStreamingChannel<V>, K...);

  public abstract java.lang.Long sdiffstore(K, K...);

  public abstract java.util.Set<V> sinter(K...);

  public abstract java.lang.Long sinter(io.lettuce.core.output.ValueStreamingChannel<V>, K...);

  public abstract java.lang.Long sinterstore(K, K...);

  public abstract java.lang.Boolean sismember(K, V);

  public abstract java.lang.Boolean smove(K, K, V);

  public abstract java.util.Set<V> smembers(K);

  public abstract java.lang.Long smembers(io.lettuce.core.output.ValueStreamingChannel<V>, K);

  public abstract V spop(K);

  public abstract java.util.Set<V> spop(K, long);

  public abstract V srandmember(K);

  public abstract java.util.List<V> srandmember(K, long);

  public abstract java.lang.Long srandmember(io.lettuce.core.output.ValueStreamingChannel<V>, K, long);

  public abstract java.lang.Long srem(K, V...);

  public abstract java.util.Set<V> sunion(K...);

  public abstract java.lang.Long sunion(io.lettuce.core.output.ValueStreamingChannel<V>, K...);

  public abstract java.lang.Long sunionstore(K, K...);

  public abstract io.lettuce.core.ValueScanCursor<V> sscan(K);

  public abstract io.lettuce.core.ValueScanCursor<V> sscan(K, io.lettuce.core.ScanArgs);

  public abstract io.lettuce.core.ValueScanCursor<V> sscan(K, io.lettuce.core.ScanCursor, io.lettuce.core.ScanArgs);

  public abstract io.lettuce.core.ValueScanCursor<V> sscan(K, io.lettuce.core.ScanCursor);

  public abstract io.lettuce.core.StreamScanCursor sscan(io.lettuce.core.output.ValueStreamingChannel<V>, K);

  public abstract io.lettuce.core.StreamScanCursor sscan(io.lettuce.core.output.ValueStreamingChannel<V>, K, io.lettuce.core.ScanArgs);

  public abstract io.lettuce.core.StreamScanCursor sscan(io.lettuce.core.output.ValueStreamingChannel<V>, K, io.lettuce.core.ScanCursor, io.lettuce.core.ScanArgs);

  public abstract io.lettuce.core.StreamScanCursor sscan(io.lettuce.core.output.ValueStreamingChannel<V>, K, io.lettuce.core.ScanCursor);
}
