Compiled from "AbstractNodeSelection.java"
abstract class io.lettuce.core.cluster.AbstractNodeSelection<API, CMD, K, V> implements io.lettuce.core.cluster.api.NodeSelectionSupport<API, CMD> {
  io.lettuce.core.cluster.AbstractNodeSelection();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.util.Map<io.lettuce.core.cluster.models.partitions.RedisClusterNode, API> asMap();
    Code:
       0: new           #2                  // class java/util/ArrayList
       3: dup
       4: aload_0
       5: invokevirtual #3                  // Method nodes:()Ljava/util/List;
       8: invokespecial #4                  // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      11: astore_1
      12: new           #5                  // class java/util/HashMap
      15: dup
      16: aload_1
      17: invokeinterface #6,  1            // InterfaceMethod java/util/List.size:()I
      22: fconst_1
      23: invokespecial #7                  // Method java/util/HashMap."<init>":(IF)V
      26: astore_2
      27: aload_1
      28: aload_0
      29: aload_2
      30: invokedynamic #8,  0              // InvokeDynamic #0:accept:(Lio/lettuce/core/cluster/AbstractNodeSelection;Ljava/util/Map;)Ljava/util/function/Consumer;
      35: invokeinterface #9,  2            // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      40: aload_2
      41: areturn

  public int size();
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method nodes:()Ljava/util/List;
       4: invokeinterface #6,  1            // InterfaceMethod java/util/List.size:()I
       9: ireturn

  public io.lettuce.core.cluster.models.partitions.RedisClusterNode node(int);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method nodes:()Ljava/util/List;
       4: iload_1
       5: invokeinterface #10,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #11                 // class io/lettuce/core/cluster/models/partitions/RedisClusterNode
      13: areturn

  public CMD commands();
    Code:
       0: aconst_null
       1: areturn

  public API commands(int);
    Code:
       0: aload_0
       1: aload_0
       2: iload_1
       3: invokevirtual #12                 // Method node:(I)Lio/lettuce/core/cluster/models/partitions/RedisClusterNode;
       6: invokevirtual #13                 // Method getApi:(Lio/lettuce/core/cluster/models/partitions/RedisClusterNode;)Ljava/util/concurrent/CompletableFuture;
       9: invokevirtual #14                 // Method java/util/concurrent/CompletableFuture.join:()Ljava/lang/Object;
      12: areturn

  protected java.util.Map<io.lettuce.core.cluster.models.partitions.RedisClusterNode, java.util.concurrent.CompletableFuture<? extends io.lettuce.core.api.StatefulRedisConnection<K, V>>> statefulMap();
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method nodes:()Ljava/util/List;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: invokedynamic #16,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      14: aload_0
      15: invokedynamic #17,  0             // InvokeDynamic #2:apply:(Lio/lettuce/core/cluster/AbstractNodeSelection;)Ljava/util/function/Function;
      20: invokestatic  #18                 // Method java/util/stream/Collectors.toMap:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
      23: invokeinterface #19,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      28: checkcast     #20                 // class java/util/Map
      31: areturn

  protected abstract java.util.concurrent.CompletableFuture<? extends io.lettuce.core.api.StatefulRedisConnection<K, V>> getConnection(io.lettuce.core.cluster.models.partitions.RedisClusterNode);

  protected abstract java.util.concurrent.CompletableFuture<API> getApi(io.lettuce.core.cluster.models.partitions.RedisClusterNode);

  protected abstract java.util.List<io.lettuce.core.cluster.models.partitions.RedisClusterNode> nodes();

  private static io.lettuce.core.cluster.models.partitions.RedisClusterNode lambda$statefulMap$1(io.lettuce.core.cluster.models.partitions.RedisClusterNode);
    Code:
       0: aload_0
       1: areturn

  private void lambda$asMap$0(java.util.Map, io.lettuce.core.cluster.models.partitions.RedisClusterNode);
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: aload_2
       4: invokevirtual #13                 // Method getApi:(Lio/lettuce/core/cluster/models/partitions/RedisClusterNode;)Ljava/util/concurrent/CompletableFuture;
       7: invokevirtual #14                 // Method java/util/concurrent/CompletableFuture.join:()Ljava/lang/Object;
      10: invokeinterface #21,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: return
}
