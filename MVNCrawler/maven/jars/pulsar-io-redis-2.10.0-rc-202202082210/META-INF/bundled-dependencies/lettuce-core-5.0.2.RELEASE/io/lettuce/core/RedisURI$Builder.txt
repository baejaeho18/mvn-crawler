Compiled from "RedisURI.java"
public class io.lettuce.core.RedisURI$Builder {
  private java.lang.String host;

  private java.lang.String socket;

  private java.lang.String sentinelMasterId;

  private int port;

  private int database;

  private java.lang.String clientName;

  private char[] password;

  private boolean ssl;

  private boolean verifyPeer;

  private boolean startTls;

  private java.time.Duration timeout;

  private final java.util.List<io.lettuce.core.internal.HostAndPort> sentinels;

  private io.lettuce.core.RedisURI$Builder();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #6                  // Field ssl:Z
       9: aload_0
      10: iconst_1
      11: putfield      #7                  // Field verifyPeer:Z
      14: aload_0
      15: iconst_0
      16: putfield      #8                  // Field startTls:Z
      19: aload_0
      20: getstatic     #9                  // Field io/lettuce/core/RedisURI.DEFAULT_TIMEOUT_DURATION:Ljava/time/Duration;
      23: putfield      #10                 // Field timeout:Ljava/time/Duration;
      26: aload_0
      27: new           #11                 // class java/util/ArrayList
      30: dup
      31: invokespecial #12                 // Method java/util/ArrayList."<init>":()V
      34: putfield      #13                 // Field sentinels:Ljava/util/List;
      37: return

  public static io.lettuce.core.RedisURI$Builder socket(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #14                 // String Socket must not be null
       3: invokestatic  #15                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: invokestatic  #16                 // Method io/lettuce/core/RedisURI.builder:()Lio/lettuce/core/RedisURI$Builder;
       9: astore_1
      10: aload_1
      11: aload_0
      12: putfield      #3                  // Field socket:Ljava/lang/String;
      15: aload_1
      16: areturn

  public static io.lettuce.core.RedisURI$Builder redis(java.lang.String);
    Code:
       0: aload_0
       1: sipush        6379
       4: invokestatic  #17                 // Method redis:(Ljava/lang/String;I)Lio/lettuce/core/RedisURI$Builder;
       7: areturn

  public static io.lettuce.core.RedisURI$Builder redis(java.lang.String, int);
    Code:
       0: aload_0
       1: ldc           #18                 // String Host must not be empty
       3: invokestatic  #19                 // Method io/lettuce/core/internal/LettuceAssert.notEmpty:(Ljava/lang/String;Ljava/lang/String;)V
       6: iload_1
       7: invokestatic  #20                 // Method io/lettuce/core/RedisURI.access$300:(I)Z
      10: ldc           #21                 // String Port out of range: %s
      12: iconst_1
      13: anewarray     #22                 // class java/lang/Object
      16: dup
      17: iconst_0
      18: iload_1
      19: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      22: aastore
      23: invokestatic  #24                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      26: invokestatic  #25                 // Method io/lettuce/core/internal/LettuceAssert.isTrue:(ZLjava/lang/String;)V
      29: invokestatic  #16                 // Method io/lettuce/core/RedisURI.builder:()Lio/lettuce/core/RedisURI$Builder;
      32: astore_2
      33: aload_2
      34: aload_0
      35: invokevirtual #26                 // Method withHost:(Ljava/lang/String;)Lio/lettuce/core/RedisURI$Builder;
      38: iload_1
      39: invokevirtual #27                 // Method withPort:(I)Lio/lettuce/core/RedisURI$Builder;
      42: areturn

  public static io.lettuce.core.RedisURI$Builder sentinel(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #18                 // String Host must not be empty
       3: invokestatic  #19                 // Method io/lettuce/core/internal/LettuceAssert.notEmpty:(Ljava/lang/String;Ljava/lang/String;)V
       6: invokestatic  #16                 // Method io/lettuce/core/RedisURI.builder:()Lio/lettuce/core/RedisURI$Builder;
       9: astore_1
      10: aload_1
      11: aload_0
      12: invokevirtual #28                 // Method withSentinel:(Ljava/lang/String;)Lio/lettuce/core/RedisURI$Builder;
      15: areturn

  public static io.lettuce.core.RedisURI$Builder sentinel(java.lang.String, int);
    Code:
       0: aload_0
       1: ldc           #18                 // String Host must not be empty
       3: invokestatic  #19                 // Method io/lettuce/core/internal/LettuceAssert.notEmpty:(Ljava/lang/String;Ljava/lang/String;)V
       6: iload_1
       7: invokestatic  #20                 // Method io/lettuce/core/RedisURI.access$300:(I)Z
      10: ldc           #21                 // String Port out of range: %s
      12: iconst_1
      13: anewarray     #22                 // class java/lang/Object
      16: dup
      17: iconst_0
      18: iload_1
      19: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      22: aastore
      23: invokestatic  #24                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      26: invokestatic  #25                 // Method io/lettuce/core/internal/LettuceAssert.isTrue:(ZLjava/lang/String;)V
      29: invokestatic  #16                 // Method io/lettuce/core/RedisURI.builder:()Lio/lettuce/core/RedisURI$Builder;
      32: astore_2
      33: aload_2
      34: aload_0
      35: iload_1
      36: invokevirtual #29                 // Method withSentinel:(Ljava/lang/String;I)Lio/lettuce/core/RedisURI$Builder;
      39: areturn

  public static io.lettuce.core.RedisURI$Builder sentinel(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: sipush        26379
       4: aload_1
       5: invokestatic  #30                 // Method sentinel:(Ljava/lang/String;ILjava/lang/String;)Lio/lettuce/core/RedisURI$Builder;
       8: areturn

  public static io.lettuce.core.RedisURI$Builder sentinel(java.lang.String, int, java.lang.String);
    Code:
       0: aload_0
       1: ldc           #18                 // String Host must not be empty
       3: invokestatic  #19                 // Method io/lettuce/core/internal/LettuceAssert.notEmpty:(Ljava/lang/String;Ljava/lang/String;)V
       6: iload_1
       7: invokestatic  #20                 // Method io/lettuce/core/RedisURI.access$300:(I)Z
      10: ldc           #21                 // String Port out of range: %s
      12: iconst_1
      13: anewarray     #22                 // class java/lang/Object
      16: dup
      17: iconst_0
      18: iload_1
      19: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      22: aastore
      23: invokestatic  #24                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      26: invokestatic  #25                 // Method io/lettuce/core/internal/LettuceAssert.isTrue:(ZLjava/lang/String;)V
      29: invokestatic  #16                 // Method io/lettuce/core/RedisURI.builder:()Lio/lettuce/core/RedisURI$Builder;
      32: astore_3
      33: aload_3
      34: aload_2
      35: invokevirtual #31                 // Method withSentinelMasterId:(Ljava/lang/String;)Lio/lettuce/core/RedisURI$Builder;
      38: aload_0
      39: iload_1
      40: invokevirtual #29                 // Method withSentinel:(Ljava/lang/String;I)Lio/lettuce/core/RedisURI$Builder;
      43: areturn

  public io.lettuce.core.RedisURI$Builder withSentinel(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: sipush        26379
       5: invokevirtual #29                 // Method withSentinel:(Ljava/lang/String;I)Lio/lettuce/core/RedisURI$Builder;
       8: areturn

  public io.lettuce.core.RedisURI$Builder withSentinel(java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #32                 // Field host:Ljava/lang/String;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #33                 // String Cannot use with Redis mode.
      14: invokestatic  #34                 // Method io/lettuce/core/internal/LettuceAssert.assertState:(ZLjava/lang/String;)V
      17: aload_1
      18: ldc           #18                 // String Host must not be empty
      20: invokestatic  #19                 // Method io/lettuce/core/internal/LettuceAssert.notEmpty:(Ljava/lang/String;Ljava/lang/String;)V
      23: iload_2
      24: invokestatic  #20                 // Method io/lettuce/core/RedisURI.access$300:(I)Z
      27: ldc           #21                 // String Port out of range: %s
      29: iconst_1
      30: anewarray     #22                 // class java/lang/Object
      33: dup
      34: iconst_0
      35: iload_2
      36: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      39: aastore
      40: invokestatic  #24                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      43: invokestatic  #25                 // Method io/lettuce/core/internal/LettuceAssert.isTrue:(ZLjava/lang/String;)V
      46: aload_0
      47: getfield      #13                 // Field sentinels:Ljava/util/List;
      50: aload_1
      51: iload_2
      52: invokestatic  #35                 // Method io/lettuce/core/internal/HostAndPort.of:(Ljava/lang/String;I)Lio/lettuce/core/internal/HostAndPort;
      55: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      60: pop
      61: aload_0
      62: areturn

  public io.lettuce.core.RedisURI$Builder withHost(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #13                 // Field sentinels:Ljava/util/List;
       4: invokeinterface #37,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ldc           #38                 // String Sentinels are non-empty. Cannot use in Sentinel mode.
      11: invokestatic  #34                 // Method io/lettuce/core/internal/LettuceAssert.assertState:(ZLjava/lang/String;)V
      14: aload_1
      15: ldc           #18                 // String Host must not be empty
      17: invokestatic  #19                 // Method io/lettuce/core/internal/LettuceAssert.notEmpty:(Ljava/lang/String;Ljava/lang/String;)V
      20: aload_0
      21: aload_1
      22: putfield      #32                 // Field host:Ljava/lang/String;
      25: aload_0
      26: areturn

  public io.lettuce.core.RedisURI$Builder withPort(int);
    Code:
       0: aload_0
       1: getfield      #32                 // Field host:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #39                 // String Host is null. Cannot use in Sentinel mode.
      14: invokestatic  #34                 // Method io/lettuce/core/internal/LettuceAssert.assertState:(ZLjava/lang/String;)V
      17: iload_1
      18: invokestatic  #20                 // Method io/lettuce/core/RedisURI.access$300:(I)Z
      21: ldc           #21                 // String Port out of range: %s
      23: iconst_1
      24: anewarray     #22                 // class java/lang/Object
      27: dup
      28: iconst_0
      29: iload_1
      30: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      33: aastore
      34: invokestatic  #24                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      37: invokestatic  #25                 // Method io/lettuce/core/internal/LettuceAssert.isTrue:(ZLjava/lang/String;)V
      40: aload_0
      41: iload_1
      42: putfield      #40                 // Field port:I
      45: aload_0
      46: areturn

  public io.lettuce.core.RedisURI$Builder withSsl(boolean);
    Code:
       0: aload_0
       1: getfield      #32                 // Field host:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #39                 // String Host is null. Cannot use in Sentinel mode.
      14: invokestatic  #34                 // Method io/lettuce/core/internal/LettuceAssert.assertState:(ZLjava/lang/String;)V
      17: aload_0
      18: iload_1
      19: putfield      #6                  // Field ssl:Z
      22: aload_0
      23: areturn

  public io.lettuce.core.RedisURI$Builder withStartTls(boolean);
    Code:
       0: aload_0
       1: getfield      #32                 // Field host:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #39                 // String Host is null. Cannot use in Sentinel mode.
      14: invokestatic  #34                 // Method io/lettuce/core/internal/LettuceAssert.assertState:(ZLjava/lang/String;)V
      17: aload_0
      18: iload_1
      19: putfield      #8                  // Field startTls:Z
      22: aload_0
      23: areturn

  public io.lettuce.core.RedisURI$Builder withVerifyPeer(boolean);
    Code:
       0: aload_0
       1: getfield      #32                 // Field host:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #39                 // String Host is null. Cannot use in Sentinel mode.
      14: invokestatic  #34                 // Method io/lettuce/core/internal/LettuceAssert.assertState:(ZLjava/lang/String;)V
      17: aload_0
      18: iload_1
      19: putfield      #7                  // Field verifyPeer:Z
      22: aload_0
      23: areturn

  public io.lettuce.core.RedisURI$Builder withDatabase(int);
    Code:
       0: iload_1
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: new           #41                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #43                 // String Invalid database number:
      18: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: iload_1
      22: invokevirtual #45                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      25: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: invokestatic  #25                 // Method io/lettuce/core/internal/LettuceAssert.isTrue:(ZLjava/lang/String;)V
      31: aload_0
      32: iload_1
      33: putfield      #47                 // Field database:I
      36: aload_0
      37: areturn

  public io.lettuce.core.RedisURI$Builder withClientName(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #48                 // String Client name must not be null
       3: invokestatic  #15                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #49                 // Field clientName:Ljava/lang/String;
      11: aload_0
      12: areturn

  public io.lettuce.core.RedisURI$Builder withPassword(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #50                 // String Password must not be null
       3: invokestatic  #15                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokevirtual #51                 // Method java/lang/String.toCharArray:()[C
      11: invokevirtual #52                 // Method withPassword:([C)Lio/lettuce/core/RedisURI$Builder;
      14: areturn

  public io.lettuce.core.RedisURI$Builder withPassword(char[]);
    Code:
       0: aload_1
       1: ldc           #50                 // String Password must not be null
       3: invokestatic  #15                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: aload_1
       9: arraylength
      10: invokestatic  #53                 // Method java/util/Arrays.copyOf:([CI)[C
      13: putfield      #54                 // Field password:[C
      16: aload_0
      17: areturn

  public io.lettuce.core.RedisURI$Builder withTimeout(java.time.Duration);
    Code:
       0: aload_1
       1: ldc           #55                 // String Timeout must not be null
       3: invokestatic  #15                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokevirtual #56                 // Method java/time/Duration.isNegative:()Z
      10: ifne          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: invokestatic  #57                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      21: ldc           #58                 // String Timeout must be greater or equal 0
      23: invokestatic  #15                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      26: aload_0
      27: aload_1
      28: putfield      #10                 // Field timeout:Ljava/time/Duration;
      31: aload_0
      32: areturn

  public io.lettuce.core.RedisURI$Builder withTimeout(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_3
       1: ldc           #59                 // String TimeUnit must not be null
       3: invokestatic  #15                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: lload_1
       7: lconst_0
       8: lcmp
       9: iflt          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ldc           #58                 // String Timeout must be greater or equal 0
      19: invokestatic  #25                 // Method io/lettuce/core/internal/LettuceAssert.isTrue:(ZLjava/lang/String;)V
      22: aload_0
      23: aload_3
      24: lload_1
      25: invokevirtual #60                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      28: invokestatic  #61                 // Method java/time/Duration.ofNanos:(J)Ljava/time/Duration;
      31: invokevirtual #62                 // Method withTimeout:(Ljava/time/Duration;)Lio/lettuce/core/RedisURI$Builder;
      34: areturn

  public io.lettuce.core.RedisURI$Builder withSentinelMasterId(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #63                 // String Sentinel master id must not empty
       3: invokestatic  #19                 // Method io/lettuce/core/internal/LettuceAssert.notEmpty:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #2                  // Field sentinelMasterId:Ljava/lang/String;
      11: aload_0
      12: areturn

  public io.lettuce.core.RedisURI build();
    Code:
       0: aload_0
       1: getfield      #13                 // Field sentinels:Ljava/util/List;
       4: invokeinterface #37,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifeq          42
      12: aload_0
      13: getfield      #32                 // Field host:Ljava/lang/String;
      16: invokestatic  #64                 // Method io/lettuce/core/LettuceStrings.isEmpty:(Ljava/lang/CharSequence;)Z
      19: ifeq          42
      22: aload_0
      23: getfield      #3                  // Field socket:Ljava/lang/String;
      26: invokestatic  #64                 // Method io/lettuce/core/LettuceStrings.isEmpty:(Ljava/lang/CharSequence;)Z
      29: ifeq          42
      32: new           #65                 // class java/lang/IllegalStateException
      35: dup
      36: ldc           #66                 // String Cannot build a RedisURI. One of the following must be provided Host, Socket or Sentinel
      38: invokespecial #67                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: new           #1                  // class io/lettuce/core/RedisURI
      45: dup
      46: invokespecial #68                 // Method io/lettuce/core/RedisURI."<init>":()V
      49: astore_1
      50: aload_1
      51: aload_0
      52: getfield      #32                 // Field host:Ljava/lang/String;
      55: invokevirtual #69                 // Method io/lettuce/core/RedisURI.setHost:(Ljava/lang/String;)V
      58: aload_1
      59: aload_0
      60: getfield      #40                 // Field port:I
      63: invokevirtual #70                 // Method io/lettuce/core/RedisURI.setPort:(I)V
      66: aload_0
      67: getfield      #54                 // Field password:[C
      70: ifnull        81
      73: aload_1
      74: aload_0
      75: getfield      #54                 // Field password:[C
      78: invokevirtual #71                 // Method io/lettuce/core/RedisURI.setPassword:([C)V
      81: aload_1
      82: aload_0
      83: getfield      #47                 // Field database:I
      86: invokevirtual #72                 // Method io/lettuce/core/RedisURI.setDatabase:(I)V
      89: aload_1
      90: aload_0
      91: getfield      #49                 // Field clientName:Ljava/lang/String;
      94: invokevirtual #73                 // Method io/lettuce/core/RedisURI.setClientName:(Ljava/lang/String;)V
      97: aload_1
      98: aload_0
      99: getfield      #2                  // Field sentinelMasterId:Ljava/lang/String;
     102: invokevirtual #74                 // Method io/lettuce/core/RedisURI.setSentinelMasterId:(Ljava/lang/String;)V
     105: aload_0
     106: getfield      #13                 // Field sentinels:Ljava/util/List;
     109: invokeinterface #75,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     114: astore_2
     115: aload_2
     116: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     121: ifeq          166
     124: aload_2
     125: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     130: checkcast     #78                 // class io/lettuce/core/internal/HostAndPort
     133: astore_3
     134: aload_1
     135: invokevirtual #79                 // Method io/lettuce/core/RedisURI.getSentinels:()Ljava/util/List;
     138: new           #1                  // class io/lettuce/core/RedisURI
     141: dup
     142: aload_3
     143: invokevirtual #80                 // Method io/lettuce/core/internal/HostAndPort.getHostText:()Ljava/lang/String;
     146: aload_3
     147: invokevirtual #81                 // Method io/lettuce/core/internal/HostAndPort.getPort:()I
     150: aload_0
     151: getfield      #10                 // Field timeout:Ljava/time/Duration;
     154: invokespecial #82                 // Method io/lettuce/core/RedisURI."<init>":(Ljava/lang/String;ILjava/time/Duration;)V
     157: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     162: pop
     163: goto          115
     166: aload_1
     167: aload_0
     168: getfield      #3                  // Field socket:Ljava/lang/String;
     171: invokevirtual #83                 // Method io/lettuce/core/RedisURI.setSocket:(Ljava/lang/String;)V
     174: aload_1
     175: aload_0
     176: getfield      #6                  // Field ssl:Z
     179: invokevirtual #84                 // Method io/lettuce/core/RedisURI.setSsl:(Z)V
     182: aload_1
     183: aload_0
     184: getfield      #8                  // Field startTls:Z
     187: invokevirtual #85                 // Method io/lettuce/core/RedisURI.setStartTls:(Z)V
     190: aload_1
     191: aload_0
     192: getfield      #7                  // Field verifyPeer:Z
     195: invokevirtual #86                 // Method io/lettuce/core/RedisURI.setVerifyPeer:(Z)V
     198: aload_1
     199: aload_0
     200: getfield      #10                 // Field timeout:Ljava/time/Duration;
     203: invokevirtual #87                 // Method io/lettuce/core/RedisURI.setTimeout:(Ljava/time/Duration;)V
     206: aload_1
     207: areturn

  io.lettuce.core.RedisURI$Builder(io.lettuce.core.RedisURI$1);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method "<init>":()V
       4: return

  static java.lang.String access$100(io.lettuce.core.RedisURI$Builder);
    Code:
       0: aload_0
       1: getfield      #3                  // Field socket:Ljava/lang/String;
       4: areturn

  static java.lang.String access$200(io.lettuce.core.RedisURI$Builder);
    Code:
       0: aload_0
       1: getfield      #2                  // Field sentinelMasterId:Ljava/lang/String;
       4: areturn
}
