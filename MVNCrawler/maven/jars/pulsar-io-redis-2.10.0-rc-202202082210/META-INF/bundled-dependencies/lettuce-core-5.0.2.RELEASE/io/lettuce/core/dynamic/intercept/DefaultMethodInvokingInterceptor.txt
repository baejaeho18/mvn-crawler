Compiled from "DefaultMethodInvokingInterceptor.java"
public class io.lettuce.core.dynamic.intercept.DefaultMethodInvokingInterceptor implements io.lettuce.core.dynamic.intercept.MethodInterceptor {
  private final java.util.Map<java.lang.reflect.Method, java.lang.invoke.MethodHandle> methodHandleCache;

  public io.lettuce.core.dynamic.intercept.DefaultMethodInvokingInterceptor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field methodHandleCache:Ljava/util/Map;
      15: return

  public java.lang.Object invoke(io.lettuce.core.dynamic.intercept.MethodInvocation) throws java.lang.Throwable;
    Code:
       0: aload_1
       1: invokeinterface #5,  1            // InterfaceMethod io/lettuce/core/dynamic/intercept/MethodInvocation.getMethod:()Ljava/lang/reflect/Method;
       6: astore_2
       7: aload_2
       8: invokevirtual #6                  // Method java/lang/reflect/Method.isDefault:()Z
      11: ifne          21
      14: aload_1
      15: invokeinterface #7,  1            // InterfaceMethod io/lettuce/core/dynamic/intercept/MethodInvocation.proceed:()Ljava/lang/Object;
      20: areturn
      21: aload_1
      22: instanceof    #8                  // class io/lettuce/core/dynamic/intercept/InvocationTargetProvider
      25: ldc           #9                  // String Invocation must provide a target object via InvocationTargetProvider
      27: invokestatic  #10                 // Method io/lettuce/core/internal/LettuceAssert.isTrue:(ZLjava/lang/String;)V
      30: aload_1
      31: checkcast     #8                  // class io/lettuce/core/dynamic/intercept/InvocationTargetProvider
      34: astore_3
      35: aload_0
      36: getfield      #4                  // Field methodHandleCache:Ljava/util/Map;
      39: aload_2
      40: invokedynamic #11,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      45: invokeinterface #12,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      50: checkcast     #13                 // class java/lang/invoke/MethodHandle
      53: aload_3
      54: invokeinterface #14,  1           // InterfaceMethod io/lettuce/core/dynamic/intercept/InvocationTargetProvider.getInvocationTarget:()Ljava/lang/Object;
      59: invokevirtual #15                 // Method java/lang/invoke/MethodHandle.bindTo:(Ljava/lang/Object;)Ljava/lang/invoke/MethodHandle;
      62: aload_1
      63: invokeinterface #16,  1           // InterfaceMethod io/lettuce/core/dynamic/intercept/MethodInvocation.getArguments:()[Ljava/lang/Object;
      68: invokevirtual #17                 // Method java/lang/invoke/MethodHandle.invokeWithArguments:([Ljava/lang/Object;)Ljava/lang/Object;
      71: areturn

  private static java.lang.invoke.MethodHandle lookupMethodHandle(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: invokestatic  #18                 // Method io/lettuce/core/internal/DefaultMethods.lookupMethodHandle:(Ljava/lang/reflect/Method;)Ljava/lang/invoke/MethodHandle;
       4: areturn
       5: astore_1
       6: new           #20                 // class java/lang/IllegalArgumentException
       9: dup
      10: aload_1
      11: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
      14: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/ReflectiveOperationException
}
