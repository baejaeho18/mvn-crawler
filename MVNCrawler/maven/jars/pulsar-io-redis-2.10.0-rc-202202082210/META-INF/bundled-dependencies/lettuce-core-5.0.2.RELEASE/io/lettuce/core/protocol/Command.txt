Compiled from "Command.java"
public class io.lettuce.core.protocol.Command<K, V, T> implements io.lettuce.core.protocol.RedisCommand<K, V, T> {
  protected static final byte ST_INITIAL;

  protected static final byte ST_COMPLETED;

  protected static final byte ST_CANCELLED;

  private final io.lettuce.core.protocol.ProtocolKeyword type;

  protected io.lettuce.core.protocol.CommandArgs<K, V> args;

  protected io.lettuce.core.output.CommandOutput<K, V, T> output;

  protected java.lang.Throwable exception;

  protected volatile byte status;

  public io.lettuce.core.protocol.Command(io.lettuce.core.protocol.ProtocolKeyword, io.lettuce.core.output.CommandOutput<K, V, T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokespecial #1                  // Method "<init>":(Lio/lettuce/core/protocol/ProtocolKeyword;Lio/lettuce/core/output/CommandOutput;Lio/lettuce/core/protocol/CommandArgs;)V
       7: return

  public io.lettuce.core.protocol.Command(io.lettuce.core.protocol.ProtocolKeyword, io.lettuce.core.output.CommandOutput<K, V, T>, io.lettuce.core.protocol.CommandArgs<K, V>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #4                  // Field status:B
       9: aload_1
      10: ldc           #5                  // String Command type must not be null
      12: invokestatic  #6                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      15: aload_0
      16: aload_1
      17: putfield      #7                  // Field type:Lio/lettuce/core/protocol/ProtocolKeyword;
      20: aload_0
      21: aload_2
      22: putfield      #8                  // Field output:Lio/lettuce/core/output/CommandOutput;
      25: aload_0
      26: aload_3
      27: putfield      #9                  // Field args:Lio/lettuce/core/protocol/CommandArgs;
      30: return

  public io.lettuce.core.output.CommandOutput<K, V, T> getOutput();
    Code:
       0: aload_0
       1: getfield      #8                  // Field output:Lio/lettuce/core/output/CommandOutput;
       4: areturn

  public boolean completeExceptionally(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #8                  // Field output:Lio/lettuce/core/output/CommandOutput;
       4: ifnull        18
       7: aload_0
       8: getfield      #8                  // Field output:Lio/lettuce/core/output/CommandOutput;
      11: aload_1
      12: invokevirtual #10                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      15: invokevirtual #11                 // Method io/lettuce/core/output/CommandOutput.setError:(Ljava/lang/String;)V
      18: aload_0
      19: aload_1
      20: putfield      #12                 // Field exception:Ljava/lang/Throwable;
      23: iconst_1
      24: ireturn

  public void complete();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #4                  // Field status:B
       5: return

  public void cancel();
    Code:
       0: aload_0
       1: iconst_2
       2: putfield      #4                  // Field status:B
       5: return

  public void encode(io.netty.buffer.ByteBuf);
    Code:
       0: aload_1
       1: bipush        42
       3: invokevirtual #13                 // Method io/netty/buffer/ByteBuf.writeByte:(I)Lio/netty/buffer/ByteBuf;
       6: pop
       7: aload_1
       8: iconst_1
       9: aload_0
      10: getfield      #9                  // Field args:Lio/lettuce/core/protocol/CommandArgs;
      13: ifnull        26
      16: aload_0
      17: getfield      #9                  // Field args:Lio/lettuce/core/protocol/CommandArgs;
      20: invokevirtual #14                 // Method io/lettuce/core/protocol/CommandArgs.count:()I
      23: goto          27
      26: iconst_0
      27: iadd
      28: i2l
      29: invokestatic  #15                 // Method io/lettuce/core/protocol/CommandArgs$IntegerArgument.writeInteger:(Lio/netty/buffer/ByteBuf;J)V
      32: aload_1
      33: getstatic     #16                 // Field io/lettuce/core/protocol/CommandArgs.CRLF:[B
      36: invokevirtual #17                 // Method io/netty/buffer/ByteBuf.writeBytes:([B)Lio/netty/buffer/ByteBuf;
      39: pop
      40: aload_1
      41: aload_0
      42: getfield      #7                  // Field type:Lio/lettuce/core/protocol/ProtocolKeyword;
      45: invokeinterface #18,  1           // InterfaceMethod io/lettuce/core/protocol/ProtocolKeyword.getBytes:()[B
      50: invokestatic  #19                 // Method io/lettuce/core/protocol/CommandArgs$BytesArgument.writeBytes:(Lio/netty/buffer/ByteBuf;[B)V
      53: aload_0
      54: getfield      #9                  // Field args:Lio/lettuce/core/protocol/CommandArgs;
      57: ifnull        68
      60: aload_0
      61: getfield      #9                  // Field args:Lio/lettuce/core/protocol/CommandArgs;
      64: aload_1
      65: invokevirtual #20                 // Method io/lettuce/core/protocol/CommandArgs.encode:(Lio/netty/buffer/ByteBuf;)V
      68: return

  public java.lang.String getError();
    Code:
       0: aload_0
       1: getfield      #8                  // Field output:Lio/lettuce/core/output/CommandOutput;
       4: invokevirtual #21                 // Method io/lettuce/core/output/CommandOutput.getError:()Ljava/lang/String;
       7: areturn

  public io.lettuce.core.protocol.CommandArgs<K, V> getArgs();
    Code:
       0: aload_0
       1: getfield      #9                  // Field args:Lio/lettuce/core/protocol/CommandArgs;
       4: areturn

  public T get();
    Code:
       0: aload_0
       1: getfield      #8                  // Field output:Lio/lettuce/core/output/CommandOutput;
       4: ifnull        15
       7: aload_0
       8: getfield      #8                  // Field output:Lio/lettuce/core/output/CommandOutput;
      11: invokevirtual #22                 // Method io/lettuce/core/output/CommandOutput.get:()Ljava/lang/Object;
      14: areturn
      15: aconst_null
      16: areturn

  public java.lang.String toString();
    Code:
       0: new           #23                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #25                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      13: invokevirtual #26                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      16: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: pop
      20: aload_1
      21: ldc           #28                 // String  [type=
      23: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: getfield      #7                  // Field type:Lio/lettuce/core/protocol/ProtocolKeyword;
      30: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      33: pop
      34: aload_1
      35: ldc           #30                 // String , output=
      37: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_0
      41: getfield      #8                  // Field output:Lio/lettuce/core/output/CommandOutput;
      44: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      47: pop
      48: aload_1
      49: bipush        93
      51: invokevirtual #31                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      54: pop
      55: aload_1
      56: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: areturn

  public void setOutput(io.lettuce.core.output.CommandOutput<K, V, T>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field status:B
       4: ifeq          17
       7: new           #33                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #34                 // String Command is completed/cancelled. Cannot set a new output
      13: invokespecial #35                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: putfield      #8                  // Field output:Lio/lettuce/core/output/CommandOutput;
      22: return

  public io.lettuce.core.protocol.ProtocolKeyword getType();
    Code:
       0: aload_0
       1: getfield      #7                  // Field type:Lio/lettuce/core/protocol/ProtocolKeyword;
       4: areturn

  public boolean isCancelled();
    Code:
       0: aload_0
       1: getfield      #4                  // Field status:B
       4: iconst_2
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isDone();
    Code:
       0: aload_0
       1: getfield      #4                  // Field status:B
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn
}
