Compiled from "RedisClusterClientFactoryBean.java"
public class io.lettuce.core.support.RedisClusterClientFactoryBean extends io.lettuce.core.support.LettuceFactoryBeanSupport<io.lettuce.core.cluster.RedisClusterClient> {
  private boolean verifyPeer;

  private java.util.Collection<io.lettuce.core.RedisURI> redisURIs;

  public io.lettuce.core.support.RedisClusterClientFactoryBean();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/lettuce/core/support/LettuceFactoryBeanSupport."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field verifyPeer:Z
       9: return

  public void afterPropertiesSet() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #3                  // Field redisURIs:Ljava/util/Collection;
       4: ifnonnull     124
       7: aload_0
       8: invokevirtual #4                  // Method getUri:()Ljava/net/URI;
      11: ifnull        94
      14: aload_0
      15: invokevirtual #4                  // Method getUri:()Ljava/net/URI;
      18: astore_1
      19: aload_1
      20: invokevirtual #5                  // Method java/net/URI.getScheme:()Ljava/lang/String;
      23: ldc           #7                  // String redis-sentinel
      25: invokevirtual #8                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      28: ifne          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ldc           #9                  // String Sentinel mode not supported when using RedisClusterClient
      38: invokestatic  #10                 // Method io/lettuce/core/internal/LettuceAssert.isTrue:(ZLjava/lang/String;)V
      41: aload_1
      42: invokestatic  #11                 // Method io/lettuce/core/cluster/RedisClusterURIUtil.toRedisURIs:(Ljava/net/URI;)Ljava/util/List;
      45: astore_2
      46: aload_2
      47: invokeinterface #12,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      52: astore_3
      53: aload_3
      54: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      59: ifeq          86
      62: aload_3
      63: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      68: checkcast     #6                  // class io/lettuce/core/RedisURI
      71: astore        4
      73: aload_0
      74: aload_1
      75: invokevirtual #5                  // Method java/net/URI.getScheme:()Ljava/lang/String;
      78: aload         4
      80: invokespecial #15                 // Method applyProperties:(Ljava/lang/String;Lio/lettuce/core/RedisURI;)V
      83: goto          53
      86: aload_0
      87: aload_2
      88: putfield      #3                  // Field redisURIs:Ljava/util/Collection;
      91: goto          124
      94: aload_0
      95: invokevirtual #16                 // Method getRedisURI:()Lio/lettuce/core/RedisURI;
      98: invokevirtual #17                 // Method io/lettuce/core/RedisURI.toURI:()Ljava/net/URI;
     101: astore_1
     102: aload_1
     103: invokestatic  #18                 // Method io/lettuce/core/RedisURI.create:(Ljava/net/URI;)Lio/lettuce/core/RedisURI;
     106: astore_2
     107: aload_0
     108: aload_1
     109: invokevirtual #5                  // Method java/net/URI.getScheme:()Ljava/lang/String;
     112: aload_2
     113: invokespecial #15                 // Method applyProperties:(Ljava/lang/String;Lio/lettuce/core/RedisURI;)V
     116: aload_0
     117: aload_2
     118: invokestatic  #19                 // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
     121: putfield      #3                  // Field redisURIs:Ljava/util/Collection;
     124: aload_0
     125: invokespecial #20                 // Method io/lettuce/core/support/LettuceFactoryBeanSupport.afterPropertiesSet:()V
     128: return

  private void applyProperties(java.lang.String, io.lettuce.core.RedisURI);
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method getPassword:()Ljava/lang/String;
       4: invokestatic  #22                 // Method io/lettuce/core/LettuceStrings.isNotEmpty:(Ljava/lang/CharSequence;)Z
       7: ifeq          18
      10: aload_2
      11: aload_0
      12: invokevirtual #21                 // Method getPassword:()Ljava/lang/String;
      15: invokevirtual #23                 // Method io/lettuce/core/RedisURI.setPassword:(Ljava/lang/String;)V
      18: ldc           #24                 // String rediss
      20: aload_1
      21: invokevirtual #8                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      24: ifne          45
      27: ldc           #25                 // String redis+ssl
      29: aload_1
      30: invokevirtual #8                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      33: ifne          45
      36: ldc           #26                 // String redis+tls
      38: aload_1
      39: invokevirtual #8                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      42: ifeq          53
      45: aload_2
      46: aload_0
      47: getfield      #2                  // Field verifyPeer:Z
      50: invokevirtual #27                 // Method io/lettuce/core/RedisURI.setVerifyPeer:(Z)V
      53: return

  protected java.util.Collection<io.lettuce.core.RedisURI> getRedisURIs();
    Code:
       0: aload_0
       1: getfield      #3                  // Field redisURIs:Ljava/util/Collection;
       4: areturn

  protected void destroyInstance(io.lettuce.core.cluster.RedisClusterClient) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #28                 // Method io/lettuce/core/cluster/RedisClusterClient.shutdown:()V
       4: return

  public java.lang.Class<?> getObjectType();
    Code:
       0: ldc           #29                 // class io/lettuce/core/cluster/RedisClusterClient
       2: areturn

  protected io.lettuce.core.cluster.RedisClusterClient createInstance() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getClientResources:()Lio/lettuce/core/resource/ClientResources;
       4: ifnull        19
       7: aload_0
       8: invokevirtual #30                 // Method getClientResources:()Lio/lettuce/core/resource/ClientResources;
      11: aload_0
      12: getfield      #3                  // Field redisURIs:Ljava/util/Collection;
      15: invokestatic  #31                 // Method io/lettuce/core/cluster/RedisClusterClient.create:(Lio/lettuce/core/resource/ClientResources;Ljava/lang/Iterable;)Lio/lettuce/core/cluster/RedisClusterClient;
      18: areturn
      19: aload_0
      20: getfield      #3                  // Field redisURIs:Ljava/util/Collection;
      23: invokestatic  #32                 // Method io/lettuce/core/cluster/RedisClusterClient.create:(Ljava/lang/Iterable;)Lio/lettuce/core/cluster/RedisClusterClient;
      26: areturn

  public boolean isVerifyPeer();
    Code:
       0: aload_0
       1: getfield      #2                  // Field verifyPeer:Z
       4: ireturn

  public void setVerifyPeer(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field verifyPeer:Z
       5: return

  protected void destroyInstance(java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #29                 // class io/lettuce/core/cluster/RedisClusterClient
       5: invokevirtual #33                 // Method destroyInstance:(Lio/lettuce/core/cluster/RedisClusterClient;)V
       8: return

  protected java.lang.Object createInstance() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method createInstance:()Lio/lettuce/core/cluster/RedisClusterClient;
       4: areturn
}
