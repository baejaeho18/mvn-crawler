Compiled from "RedisGeoReactiveCommands.java"
public interface io.lettuce.core.api.reactive.RedisGeoReactiveCommands<K, V> {
  public abstract reactor.core.publisher.Mono<java.lang.Long> geoadd(K, double, double, V);

  public abstract reactor.core.publisher.Mono<java.lang.Long> geoadd(K, java.lang.Object...);

  public abstract reactor.core.publisher.Flux<io.lettuce.core.Value<java.lang.String>> geohash(K, V...);

  public abstract reactor.core.publisher.Flux<V> georadius(K, double, double, double, io.lettuce.core.GeoArgs$Unit);

  public abstract reactor.core.publisher.Flux<io.lettuce.core.GeoWithin<V>> georadius(K, double, double, double, io.lettuce.core.GeoArgs$Unit, io.lettuce.core.GeoArgs);

  public abstract reactor.core.publisher.Mono<java.lang.Long> georadius(K, double, double, double, io.lettuce.core.GeoArgs$Unit, io.lettuce.core.GeoRadiusStoreArgs<K>);

  public abstract reactor.core.publisher.Flux<V> georadiusbymember(K, V, double, io.lettuce.core.GeoArgs$Unit);

  public abstract reactor.core.publisher.Flux<io.lettuce.core.GeoWithin<V>> georadiusbymember(K, V, double, io.lettuce.core.GeoArgs$Unit, io.lettuce.core.GeoArgs);

  public abstract reactor.core.publisher.Mono<java.lang.Long> georadiusbymember(K, V, double, io.lettuce.core.GeoArgs$Unit, io.lettuce.core.GeoRadiusStoreArgs<K>);

  public abstract reactor.core.publisher.Flux<io.lettuce.core.Value<io.lettuce.core.GeoCoordinates>> geopos(K, V...);

  public abstract reactor.core.publisher.Mono<java.lang.Double> geodist(K, V, V, io.lettuce.core.GeoArgs$Unit);
}
