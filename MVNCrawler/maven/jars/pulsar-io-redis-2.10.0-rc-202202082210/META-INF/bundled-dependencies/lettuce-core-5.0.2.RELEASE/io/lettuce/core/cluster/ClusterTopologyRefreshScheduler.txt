Compiled from "ClusterTopologyRefreshScheduler.java"
class io.lettuce.core.cluster.ClusterTopologyRefreshScheduler implements java.lang.Runnable,io.lettuce.core.cluster.ClusterEventListener {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private static final io.lettuce.core.cluster.ClusterTopologyRefreshOptions FALLBACK_OPTIONS;

  private final io.lettuce.core.cluster.RedisClusterClient redisClusterClient;

  private final io.lettuce.core.resource.ClientResources clientResources;

  private final io.lettuce.core.cluster.ClusterTopologyRefreshScheduler$ClusterTopologyRefreshTask clusterTopologyRefreshTask;

  private final java.util.concurrent.atomic.AtomicReference<io.lettuce.core.cluster.ClusterTopologyRefreshScheduler$Timeout> timeoutRef;

  io.lettuce.core.cluster.ClusterTopologyRefreshScheduler(io.lettuce.core.cluster.RedisClusterClient, io.lettuce.core.resource.ClientResources);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #5                  // Field timeoutRef:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_0
      16: aload_1
      17: putfield      #6                  // Field redisClusterClient:Lio/lettuce/core/cluster/RedisClusterClient;
      20: aload_0
      21: aload_2
      22: putfield      #7                  // Field clientResources:Lio/lettuce/core/resource/ClientResources;
      25: aload_0
      26: new           #8                  // class io/lettuce/core/cluster/ClusterTopologyRefreshScheduler$ClusterTopologyRefreshTask
      29: dup
      30: aload_1
      31: invokespecial #9                  // Method io/lettuce/core/cluster/ClusterTopologyRefreshScheduler$ClusterTopologyRefreshTask."<init>":(Lio/lettuce/core/cluster/RedisClusterClient;)V
      34: putfield      #10                 // Field clusterTopologyRefreshTask:Lio/lettuce/core/cluster/ClusterTopologyRefreshScheduler$ClusterTopologyRefreshTask;
      37: return

  public void run();
    Code:
       0: getstatic     #1                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       3: ldc           #11                 // String ClusterTopologyRefreshScheduler.run()
       5: invokeinterface #12,  2           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;)V
      10: aload_0
      11: invokevirtual #13                 // Method isEventLoopActive:()Z
      14: ifeq          51
      17: aload_0
      18: getfield      #6                  // Field redisClusterClient:Lio/lettuce/core/cluster/RedisClusterClient;
      21: invokevirtual #14                 // Method io/lettuce/core/cluster/RedisClusterClient.getClusterClientOptions:()Lio/lettuce/core/cluster/ClusterClientOptions;
      24: ifnull        51
      27: aload_0
      28: getfield      #6                  // Field redisClusterClient:Lio/lettuce/core/cluster/RedisClusterClient;
      31: invokevirtual #14                 // Method io/lettuce/core/cluster/RedisClusterClient.getClusterClientOptions:()Lio/lettuce/core/cluster/ClusterClientOptions;
      34: invokevirtual #15                 // Method io/lettuce/core/cluster/ClusterClientOptions.isRefreshClusterView:()Z
      37: ifne          62
      40: getstatic     #1                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      43: ldc           #16                 // String Periodic ClusterTopologyRefresh is disabled
      45: invokeinterface #12,  2           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;)V
      50: return
      51: getstatic     #1                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      54: ldc           #16                 // String Periodic ClusterTopologyRefresh is disabled
      56: invokeinterface #12,  2           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;)V
      61: return
      62: aload_0
      63: getfield      #7                  // Field clientResources:Lio/lettuce/core/resource/ClientResources;
      66: invokeinterface #17,  1           // InterfaceMethod io/lettuce/core/resource/ClientResources.eventExecutorGroup:()Lio/netty/util/concurrent/EventExecutorGroup;
      71: aload_0
      72: getfield      #10                 // Field clusterTopologyRefreshTask:Lio/lettuce/core/cluster/ClusterTopologyRefreshScheduler$ClusterTopologyRefreshTask;
      75: invokeinterface #18,  2           // InterfaceMethod io/netty/util/concurrent/EventExecutorGroup.submit:(Ljava/lang/Runnable;)Lio/netty/util/concurrent/Future;
      80: pop
      81: return

  private void indicateTopologyRefreshSignal();
    Code:
       0: getstatic     #1                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       3: ldc           #19                 // String ClusterTopologyRefreshScheduler.indicateTopologyRefreshSignal()
       5: invokeinterface #12,  2           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;)V
      10: aload_0
      11: invokespecial #20                 // Method acquireTimeout:()Z
      14: ifne          18
      17: return
      18: aload_0
      19: invokevirtual #13                 // Method isEventLoopActive:()Z
      22: ifeq          57
      25: aload_0
      26: getfield      #6                  // Field redisClusterClient:Lio/lettuce/core/cluster/RedisClusterClient;
      29: invokevirtual #14                 // Method io/lettuce/core/cluster/RedisClusterClient.getClusterClientOptions:()Lio/lettuce/core/cluster/ClusterClientOptions;
      32: ifnull        57
      35: aload_0
      36: getfield      #7                  // Field clientResources:Lio/lettuce/core/resource/ClientResources;
      39: invokeinterface #17,  1           // InterfaceMethod io/lettuce/core/resource/ClientResources.eventExecutorGroup:()Lio/netty/util/concurrent/EventExecutorGroup;
      44: aload_0
      45: getfield      #10                 // Field clusterTopologyRefreshTask:Lio/lettuce/core/cluster/ClusterTopologyRefreshScheduler$ClusterTopologyRefreshTask;
      48: invokeinterface #18,  2           // InterfaceMethod io/netty/util/concurrent/EventExecutorGroup.submit:(Ljava/lang/Runnable;)Lio/netty/util/concurrent/Future;
      53: pop
      54: goto          67
      57: getstatic     #1                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      60: ldc           #21                 // String Adaptive ClusterTopologyRefresh is disabled
      62: invokeinterface #12,  2           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;)V
      67: return

  protected boolean isEventLoopActive();
    Code:
       0: aload_0
       1: getfield      #7                  // Field clientResources:Lio/lettuce/core/resource/ClientResources;
       4: invokeinterface #17,  1           // InterfaceMethod io/lettuce/core/resource/ClientResources.eventExecutorGroup:()Lio/netty/util/concurrent/EventExecutorGroup;
       9: astore_1
      10: aload_1
      11: invokeinterface #22,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutorGroup.isShuttingDown:()Z
      16: ifne          37
      19: aload_1
      20: invokeinterface #23,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutorGroup.isShutdown:()Z
      25: ifne          37
      28: aload_1
      29: invokeinterface #24,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutorGroup.isTerminated:()Z
      34: ifeq          39
      37: iconst_0
      38: ireturn
      39: iconst_1
      40: ireturn

  private boolean acquireTimeout();
    Code:
       0: aload_0
       1: getfield      #5                  // Field timeoutRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #26                 // class io/lettuce/core/cluster/ClusterTopologyRefreshScheduler$Timeout
      10: astore_1
      11: aload_1
      12: ifnull        24
      15: aload_1
      16: invokevirtual #27                 // Method io/lettuce/core/cluster/ClusterTopologyRefreshScheduler$Timeout.isExpired:()Z
      19: ifne          24
      22: iconst_0
      23: ireturn
      24: aload_0
      25: invokespecial #28                 // Method getClusterTopologyRefreshOptions:()Lio/lettuce/core/cluster/ClusterTopologyRefreshOptions;
      28: astore_2
      29: new           #26                 // class io/lettuce/core/cluster/ClusterTopologyRefreshScheduler$Timeout
      32: dup
      33: aload_0
      34: aload_2
      35: invokevirtual #29                 // Method io/lettuce/core/cluster/ClusterTopologyRefreshOptions.getAdaptiveRefreshTimeout:()Ljava/time/Duration;
      38: invokespecial #30                 // Method io/lettuce/core/cluster/ClusterTopologyRefreshScheduler$Timeout."<init>":(Lio/lettuce/core/cluster/ClusterTopologyRefreshScheduler;Ljava/time/Duration;)V
      41: astore_3
      42: aload_0
      43: getfield      #5                  // Field timeoutRef:Ljava/util/concurrent/atomic/AtomicReference;
      46: aload_1
      47: aload_3
      48: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      51: ifeq          56
      54: iconst_1
      55: ireturn
      56: iconst_0
      57: ireturn

  public void onAskRedirection();
    Code:
       0: aload_0
       1: getstatic     #32                 // Field io/lettuce/core/cluster/ClusterTopologyRefreshOptions$RefreshTrigger.ASK_REDIRECT:Lio/lettuce/core/cluster/ClusterTopologyRefreshOptions$RefreshTrigger;
       4: invokespecial #33                 // Method isEnabled:(Lio/lettuce/core/cluster/ClusterTopologyRefreshOptions$RefreshTrigger;)Z
       7: ifeq          14
      10: aload_0
      11: invokespecial #34                 // Method indicateTopologyRefreshSignal:()V
      14: return

  public void onMovedRedirection();
    Code:
       0: aload_0
       1: getstatic     #35                 // Field io/lettuce/core/cluster/ClusterTopologyRefreshOptions$RefreshTrigger.MOVED_REDIRECT:Lio/lettuce/core/cluster/ClusterTopologyRefreshOptions$RefreshTrigger;
       4: invokespecial #33                 // Method isEnabled:(Lio/lettuce/core/cluster/ClusterTopologyRefreshOptions$RefreshTrigger;)Z
       7: ifeq          14
      10: aload_0
      11: invokespecial #34                 // Method indicateTopologyRefreshSignal:()V
      14: return

  public void onReconnection(int);
    Code:
       0: aload_0
       1: getstatic     #36                 // Field io/lettuce/core/cluster/ClusterTopologyRefreshOptions$RefreshTrigger.PERSISTENT_RECONNECTS:Lio/lettuce/core/cluster/ClusterTopologyRefreshOptions$RefreshTrigger;
       4: invokespecial #33                 // Method isEnabled:(Lio/lettuce/core/cluster/ClusterTopologyRefreshOptions$RefreshTrigger;)Z
       7: ifeq          25
      10: iload_1
      11: aload_0
      12: invokespecial #28                 // Method getClusterTopologyRefreshOptions:()Lio/lettuce/core/cluster/ClusterTopologyRefreshOptions;
      15: invokevirtual #37                 // Method io/lettuce/core/cluster/ClusterTopologyRefreshOptions.getRefreshTriggersReconnectAttempts:()I
      18: if_icmplt     25
      21: aload_0
      22: invokespecial #34                 // Method indicateTopologyRefreshSignal:()V
      25: return

  private io.lettuce.core.cluster.ClusterTopologyRefreshOptions getClusterTopologyRefreshOptions();
    Code:
       0: aload_0
       1: getfield      #6                  // Field redisClusterClient:Lio/lettuce/core/cluster/RedisClusterClient;
       4: invokevirtual #14                 // Method io/lettuce/core/cluster/RedisClusterClient.getClusterClientOptions:()Lio/lettuce/core/cluster/ClusterClientOptions;
       7: astore_1
       8: aload_1
       9: ifnull        17
      12: aload_1
      13: invokevirtual #38                 // Method io/lettuce/core/cluster/ClusterClientOptions.getTopologyRefreshOptions:()Lio/lettuce/core/cluster/ClusterTopologyRefreshOptions;
      16: areturn
      17: getstatic     #39                 // Field FALLBACK_OPTIONS:Lio/lettuce/core/cluster/ClusterTopologyRefreshOptions;
      20: areturn

  private boolean isEnabled(io.lettuce.core.cluster.ClusterTopologyRefreshOptions$RefreshTrigger);
    Code:
       0: aload_0
       1: invokespecial #28                 // Method getClusterTopologyRefreshOptions:()Lio/lettuce/core/cluster/ClusterTopologyRefreshOptions;
       4: invokevirtual #40                 // Method io/lettuce/core/cluster/ClusterTopologyRefreshOptions.getAdaptiveRefreshTriggers:()Ljava/util/Set;
       7: aload_1
       8: invokeinterface #41,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      13: ireturn

  static io.netty.util.internal.logging.InternalLogger access$000();
    Code:
       0: getstatic     #1                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       3: areturn

  static {};
    Code:
       0: ldc           #42                 // class io/lettuce/core/cluster/ClusterTopologyRefreshScheduler
       2: invokestatic  #43                 // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
       5: putstatic     #1                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       8: invokestatic  #44                 // Method io/lettuce/core/cluster/ClusterTopologyRefreshOptions.create:()Lio/lettuce/core/cluster/ClusterTopologyRefreshOptions;
      11: putstatic     #39                 // Field FALLBACK_OPTIONS:Lio/lettuce/core/cluster/ClusterTopologyRefreshOptions;
      14: return
}
