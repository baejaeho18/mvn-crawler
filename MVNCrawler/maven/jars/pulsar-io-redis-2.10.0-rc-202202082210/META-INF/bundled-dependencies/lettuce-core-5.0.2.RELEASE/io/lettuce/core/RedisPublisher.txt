Compiled from "RedisPublisher.java"
class io.lettuce.core.RedisPublisher<K, V, T> implements org.reactivestreams.Publisher<T> {
  private static final io.netty.util.internal.logging.InternalLogger LOG;

  private final boolean traceEnabled;

  private final java.util.function.Supplier<? extends io.lettuce.core.protocol.RedisCommand<K, V, T>> commandSupplier;

  private final java.util.concurrent.atomic.AtomicReference<io.lettuce.core.protocol.RedisCommand<K, V, T>> ref;

  private final io.lettuce.core.api.StatefulConnection<K, V> connection;

  private final boolean dissolve;

  public io.lettuce.core.RedisPublisher(io.lettuce.core.protocol.RedisCommand<K, V, T>, io.lettuce.core.api.StatefulConnection<K, V>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #1,  0              // InvokeDynamic #0:get:(Lio/lettuce/core/protocol/RedisCommand;)Ljava/util/function/Supplier;
       7: aload_2
       8: iload_3
       9: invokespecial #2                  // Method "<init>":(Ljava/util/function/Supplier;Lio/lettuce/core/api/StatefulConnection;Z)V
      12: return

  public io.lettuce.core.RedisPublisher(java.util.function.Supplier<io.lettuce.core.protocol.RedisCommand<K, V, T>>, io.lettuce.core.api.StatefulConnection<K, V>, boolean);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #4                  // Field LOG:Lio/netty/util/internal/logging/InternalLogger;
       8: invokeinterface #5,  1            // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isTraceEnabled:()Z
      13: putfield      #6                  // Field traceEnabled:Z
      16: aload_1
      17: ldc           #7                  // String CommandSupplier must not be null
      19: invokestatic  #8                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      22: aload_2
      23: ldc           #9                  // String StatefulConnection must not be null
      25: invokestatic  #8                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      28: aload_0
      29: aload_1
      30: putfield      #10                 // Field commandSupplier:Ljava/util/function/Supplier;
      33: aload_0
      34: aload_2
      35: putfield      #11                 // Field connection:Lio/lettuce/core/api/StatefulConnection;
      38: aload_0
      39: iload_3
      40: putfield      #12                 // Field dissolve:Z
      43: aload_0
      44: new           #13                 // class java/util/concurrent/atomic/AtomicReference
      47: dup
      48: aload_1
      49: invokeinterface #14,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      54: invokespecial #15                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      57: putfield      #16                 // Field ref:Ljava/util/concurrent/atomic/AtomicReference;
      60: return

  public void subscribe(org.reactivestreams.Subscriber<? super T>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field traceEnabled:Z
       4: ifeq          31
       7: getstatic     #4                  // Field LOG:Lio/netty/util/internal/logging/InternalLogger;
      10: ldc           #17                 // String subscribe: {}@{}
      12: aload_1
      13: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      16: invokevirtual #19                 // Method java/lang/Class.getName:()Ljava/lang/String;
      19: aload_1
      20: invokestatic  #20                 // Method java/util/Objects.hashCode:(Ljava/lang/Object;)I
      23: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      26: invokeinterface #22,  4           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      31: aload_0
      32: getfield      #16                 // Field ref:Ljava/util/concurrent/atomic/AtomicReference;
      35: invokevirtual #23                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      38: checkcast     #24                 // class io/lettuce/core/protocol/RedisCommand
      41: astore_2
      42: aload_2
      43: ifnull        74
      46: aload_0
      47: getfield      #16                 // Field ref:Ljava/util/concurrent/atomic/AtomicReference;
      50: aload_2
      51: aconst_null
      52: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      55: ifne          87
      58: aload_0
      59: getfield      #10                 // Field commandSupplier:Ljava/util/function/Supplier;
      62: invokeinterface #14,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      67: checkcast     #24                 // class io/lettuce/core/protocol/RedisCommand
      70: astore_2
      71: goto          87
      74: aload_0
      75: getfield      #10                 // Field commandSupplier:Ljava/util/function/Supplier;
      78: invokeinterface #14,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      83: checkcast     #24                 // class io/lettuce/core/protocol/RedisCommand
      86: astore_2
      87: new           #26                 // class io/lettuce/core/RedisPublisher$RedisSubscription
      90: dup
      91: aload_0
      92: getfield      #11                 // Field connection:Lio/lettuce/core/api/StatefulConnection;
      95: aload_2
      96: aload_0
      97: getfield      #12                 // Field dissolve:Z
     100: invokespecial #27                 // Method io/lettuce/core/RedisPublisher$RedisSubscription."<init>":(Lio/lettuce/core/api/StatefulConnection;Lio/lettuce/core/protocol/RedisCommand;Z)V
     103: astore_3
     104: aload_3
     105: aload_1
     106: invokevirtual #28                 // Method io/lettuce/core/RedisPublisher$RedisSubscription.subscribe:(Lorg/reactivestreams/Subscriber;)V
     109: return

  private static io.lettuce.core.protocol.RedisCommand lambda$new$0(io.lettuce.core.protocol.RedisCommand);
    Code:
       0: aload_0
       1: areturn

  static {};
    Code:
       0: ldc           #29                 // class io/lettuce/core/RedisPublisher
       2: invokestatic  #30                 // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
       5: putstatic     #4                  // Field LOG:Lio/netty/util/internal/logging/InternalLogger;
       8: return
}
