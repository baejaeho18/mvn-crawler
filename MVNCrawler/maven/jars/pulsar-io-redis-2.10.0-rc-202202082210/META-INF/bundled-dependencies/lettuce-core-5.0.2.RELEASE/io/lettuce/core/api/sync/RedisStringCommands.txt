Compiled from "RedisStringCommands.java"
public interface io.lettuce.core.api.sync.RedisStringCommands<K, V> {
  public abstract java.lang.Long append(K, V);

  public abstract java.lang.Long bitcount(K);

  public abstract java.lang.Long bitcount(K, long, long);

  public abstract java.util.List<java.lang.Long> bitfield(K, io.lettuce.core.BitFieldArgs);

  public abstract java.lang.Long bitpos(K, boolean);

  public abstract java.lang.Long bitpos(K, boolean, long);

  public abstract java.lang.Long bitpos(K, boolean, long, long);

  public abstract java.lang.Long bitopAnd(K, K...);

  public abstract java.lang.Long bitopNot(K, K);

  public abstract java.lang.Long bitopOr(K, K...);

  public abstract java.lang.Long bitopXor(K, K...);

  public abstract java.lang.Long decr(K);

  public abstract java.lang.Long decrby(K, long);

  public abstract V get(K);

  public abstract java.lang.Long getbit(K, long);

  public abstract V getrange(K, long, long);

  public abstract V getset(K, V);

  public abstract java.lang.Long incr(K);

  public abstract java.lang.Long incrby(K, long);

  public abstract java.lang.Double incrbyfloat(K, double);

  public abstract java.util.List<io.lettuce.core.KeyValue<K, V>> mget(K...);

  public abstract java.lang.Long mget(io.lettuce.core.output.KeyValueStreamingChannel<K, V>, K...);

  public abstract java.lang.String mset(java.util.Map<K, V>);

  public abstract java.lang.Boolean msetnx(java.util.Map<K, V>);

  public abstract java.lang.String set(K, V);

  public abstract java.lang.String set(K, V, io.lettuce.core.SetArgs);

  public abstract java.lang.Long setbit(K, long, int);

  public abstract java.lang.String setex(K, long, V);

  public abstract java.lang.String psetex(K, long, V);

  public abstract java.lang.Boolean setnx(K, V);

  public abstract java.lang.Long setrange(K, long, V);

  public abstract java.lang.Long strlen(K);
}
