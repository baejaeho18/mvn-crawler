Compiled from "SentinelTopologyRefresh.java"
class io.lettuce.core.masterslave.SentinelTopologyRefresh$TimedSemaphore {
  private final java.util.concurrent.atomic.AtomicReference<io.lettuce.core.masterslave.Timeout> timeoutRef;

  private final int timeout;

  private final java.util.concurrent.TimeUnit timeUnit;

  private io.lettuce.core.masterslave.SentinelTopologyRefresh$TimedSemaphore();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #5                  // Field timeoutRef:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_0
      16: iconst_5
      17: putfield      #6                  // Field timeout:I
      20: aload_0
      21: getstatic     #7                  // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      24: putfield      #8                  // Field timeUnit:Ljava/util/concurrent/TimeUnit;
      27: return

  protected void onEvent(java.util.function.Consumer<io.lettuce.core.masterslave.Timeout>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field timeoutRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #10                 // class io/lettuce/core/masterslave/Timeout
      10: astore_2
      11: aload_2
      12: ifnull        23
      15: aload_2
      16: invokevirtual #11                 // Method io/lettuce/core/masterslave/Timeout.isExpired:()Z
      19: ifne          23
      22: return
      23: new           #10                 // class io/lettuce/core/masterslave/Timeout
      26: dup
      27: aload_0
      28: invokevirtual #12                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      31: pop
      32: ldc2_w        #13                 // long 5l
      35: aload_0
      36: getfield      #8                  // Field timeUnit:Ljava/util/concurrent/TimeUnit;
      39: invokespecial #15                 // Method io/lettuce/core/masterslave/Timeout."<init>":(JLjava/util/concurrent/TimeUnit;)V
      42: astore_3
      43: aload_0
      44: getfield      #5                  // Field timeoutRef:Ljava/util/concurrent/atomic/AtomicReference;
      47: aload_2
      48: aload_3
      49: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      52: istore        4
      54: iload         4
      56: ifeq          66
      59: aload_1
      60: aload_3
      61: invokeinterface #17,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      66: return

  io.lettuce.core.masterslave.SentinelTopologyRefresh$TimedSemaphore(io.lettuce.core.masterslave.SentinelTopologyRefresh$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
