Compiled from "RedisSortedSetCommands.java"
public interface io.lettuce.core.api.sync.RedisSortedSetCommands<K, V> {
  public abstract java.lang.Long zadd(K, double, V);

  public abstract java.lang.Long zadd(K, java.lang.Object...);

  public abstract java.lang.Long zadd(K, io.lettuce.core.ScoredValue<V>...);

  public abstract java.lang.Long zadd(K, io.lettuce.core.ZAddArgs, double, V);

  public abstract java.lang.Long zadd(K, io.lettuce.core.ZAddArgs, java.lang.Object...);

  public abstract java.lang.Long zadd(K, io.lettuce.core.ZAddArgs, io.lettuce.core.ScoredValue<V>...);

  public abstract java.lang.Double zaddincr(K, double, V);

  public abstract java.lang.Double zaddincr(K, io.lettuce.core.ZAddArgs, double, V);

  public abstract java.lang.Long zcard(K);

  public abstract java.lang.Long zcount(K, double, double);

  public abstract java.lang.Long zcount(K, java.lang.String, java.lang.String);

  public abstract java.lang.Long zcount(K, io.lettuce.core.Range<? extends java.lang.Number>);

  public abstract java.lang.Double zincrby(K, double, K);

  public abstract java.lang.Long zinterstore(K, K...);

  public abstract java.lang.Long zinterstore(K, io.lettuce.core.ZStoreArgs, K...);

  public abstract java.lang.Long zlexcount(K, java.lang.String, java.lang.String);

  public abstract java.lang.Long zlexcount(K, io.lettuce.core.Range<? extends V>);

  public abstract java.util.List<V> zrange(K, long, long);

  public abstract java.lang.Long zrange(io.lettuce.core.output.ValueStreamingChannel<V>, K, long, long);

  public abstract java.util.List<io.lettuce.core.ScoredValue<V>> zrangeWithScores(K, long, long);

  public abstract java.lang.Long zrangeWithScores(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K, long, long);

  public abstract java.util.List<V> zrangebylex(K, java.lang.String, java.lang.String);

  public abstract java.util.List<V> zrangebylex(K, io.lettuce.core.Range<? extends V>);

  public abstract java.util.List<V> zrangebylex(K, java.lang.String, java.lang.String, long, long);

  public abstract java.util.List<V> zrangebylex(K, io.lettuce.core.Range<? extends V>, io.lettuce.core.Limit);

  public abstract java.util.List<V> zrangebyscore(K, double, double);

  public abstract java.util.List<V> zrangebyscore(K, java.lang.String, java.lang.String);

  public abstract java.util.List<V> zrangebyscore(K, io.lettuce.core.Range<? extends java.lang.Number>);

  public abstract java.util.List<V> zrangebyscore(K, double, double, long, long);

  public abstract java.util.List<V> zrangebyscore(K, java.lang.String, java.lang.String, long, long);

  public abstract java.util.List<V> zrangebyscore(K, io.lettuce.core.Range<? extends java.lang.Number>, io.lettuce.core.Limit);

  public abstract java.lang.Long zrangebyscore(io.lettuce.core.output.ValueStreamingChannel<V>, K, double, double);

  public abstract java.lang.Long zrangebyscore(io.lettuce.core.output.ValueStreamingChannel<V>, K, java.lang.String, java.lang.String);

  public abstract java.lang.Long zrangebyscore(io.lettuce.core.output.ValueStreamingChannel<V>, K, io.lettuce.core.Range<? extends java.lang.Number>);

  public abstract java.lang.Long zrangebyscore(io.lettuce.core.output.ValueStreamingChannel<V>, K, double, double, long, long);

  public abstract java.lang.Long zrangebyscore(io.lettuce.core.output.ValueStreamingChannel<V>, K, java.lang.String, java.lang.String, long, long);

  public abstract java.lang.Long zrangebyscore(io.lettuce.core.output.ValueStreamingChannel<V>, K, io.lettuce.core.Range<? extends java.lang.Number>, io.lettuce.core.Limit);

  public abstract java.util.List<io.lettuce.core.ScoredValue<V>> zrangebyscoreWithScores(K, double, double);

  public abstract java.util.List<io.lettuce.core.ScoredValue<V>> zrangebyscoreWithScores(K, java.lang.String, java.lang.String);

  public abstract java.util.List<io.lettuce.core.ScoredValue<V>> zrangebyscoreWithScores(K, io.lettuce.core.Range<? extends java.lang.Number>);

  public abstract java.util.List<io.lettuce.core.ScoredValue<V>> zrangebyscoreWithScores(K, double, double, long, long);

  public abstract java.util.List<io.lettuce.core.ScoredValue<V>> zrangebyscoreWithScores(K, java.lang.String, java.lang.String, long, long);

  public abstract java.util.List<io.lettuce.core.ScoredValue<V>> zrangebyscoreWithScores(K, io.lettuce.core.Range<? extends java.lang.Number>, io.lettuce.core.Limit);

  public abstract java.lang.Long zrangebyscoreWithScores(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K, double, double);

  public abstract java.lang.Long zrangebyscoreWithScores(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K, java.lang.String, java.lang.String);

  public abstract java.lang.Long zrangebyscoreWithScores(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K, io.lettuce.core.Range<? extends java.lang.Number>);

  public abstract java.lang.Long zrangebyscoreWithScores(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K, double, double, long, long);

  public abstract java.lang.Long zrangebyscoreWithScores(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K, java.lang.String, java.lang.String, long, long);

  public abstract java.lang.Long zrangebyscoreWithScores(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K, io.lettuce.core.Range<? extends java.lang.Number>, io.lettuce.core.Limit);

  public abstract java.lang.Long zrank(K, V);

  public abstract java.lang.Long zrem(K, V...);

  public abstract java.lang.Long zremrangebylex(K, java.lang.String, java.lang.String);

  public abstract java.lang.Long zremrangebylex(K, io.lettuce.core.Range<? extends V>);

  public abstract java.lang.Long zremrangebyrank(K, long, long);

  public abstract java.lang.Long zremrangebyscore(K, double, double);

  public abstract java.lang.Long zremrangebyscore(K, java.lang.String, java.lang.String);

  public abstract java.lang.Long zremrangebyscore(K, io.lettuce.core.Range<? extends java.lang.Number>);

  public abstract java.util.List<V> zrevrange(K, long, long);

  public abstract java.lang.Long zrevrange(io.lettuce.core.output.ValueStreamingChannel<V>, K, long, long);

  public abstract java.util.List<io.lettuce.core.ScoredValue<V>> zrevrangeWithScores(K, long, long);

  public abstract java.lang.Long zrevrangeWithScores(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K, long, long);

  public abstract java.util.List<V> zrevrangebylex(K, io.lettuce.core.Range<? extends V>);

  public abstract java.util.List<V> zrevrangebylex(K, io.lettuce.core.Range<? extends V>, io.lettuce.core.Limit);

  public abstract java.util.List<V> zrevrangebyscore(K, double, double);

  public abstract java.util.List<V> zrevrangebyscore(K, java.lang.String, java.lang.String);

  public abstract java.util.List<V> zrevrangebyscore(K, io.lettuce.core.Range<? extends java.lang.Number>);

  public abstract java.util.List<V> zrevrangebyscore(K, double, double, long, long);

  public abstract java.util.List<V> zrevrangebyscore(K, java.lang.String, java.lang.String, long, long);

  public abstract java.util.List<V> zrevrangebyscore(K, io.lettuce.core.Range<? extends java.lang.Number>, io.lettuce.core.Limit);

  public abstract java.lang.Long zrevrangebyscore(io.lettuce.core.output.ValueStreamingChannel<V>, K, double, double);

  public abstract java.lang.Long zrevrangebyscore(io.lettuce.core.output.ValueStreamingChannel<V>, K, java.lang.String, java.lang.String);

  public abstract java.lang.Long zrevrangebyscore(io.lettuce.core.output.ValueStreamingChannel<V>, K, io.lettuce.core.Range<? extends java.lang.Number>);

  public abstract java.lang.Long zrevrangebyscore(io.lettuce.core.output.ValueStreamingChannel<V>, K, double, double, long, long);

  public abstract java.lang.Long zrevrangebyscore(io.lettuce.core.output.ValueStreamingChannel<V>, K, java.lang.String, java.lang.String, long, long);

  public abstract java.lang.Long zrevrangebyscore(io.lettuce.core.output.ValueStreamingChannel<V>, K, io.lettuce.core.Range<? extends java.lang.Number>, io.lettuce.core.Limit);

  public abstract java.util.List<io.lettuce.core.ScoredValue<V>> zrevrangebyscoreWithScores(K, double, double);

  public abstract java.util.List<io.lettuce.core.ScoredValue<V>> zrevrangebyscoreWithScores(K, java.lang.String, java.lang.String);

  public abstract java.util.List<io.lettuce.core.ScoredValue<V>> zrevrangebyscoreWithScores(K, io.lettuce.core.Range<? extends java.lang.Number>);

  public abstract java.util.List<io.lettuce.core.ScoredValue<V>> zrevrangebyscoreWithScores(K, double, double, long, long);

  public abstract java.util.List<io.lettuce.core.ScoredValue<V>> zrevrangebyscoreWithScores(K, java.lang.String, java.lang.String, long, long);

  public abstract java.util.List<io.lettuce.core.ScoredValue<V>> zrevrangebyscoreWithScores(K, io.lettuce.core.Range<? extends java.lang.Number>, io.lettuce.core.Limit);

  public abstract java.lang.Long zrevrangebyscoreWithScores(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K, double, double);

  public abstract java.lang.Long zrevrangebyscoreWithScores(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K, java.lang.String, java.lang.String);

  public abstract java.lang.Long zrevrangebyscoreWithScores(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K, io.lettuce.core.Range<? extends java.lang.Number>);

  public abstract java.lang.Long zrevrangebyscoreWithScores(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K, double, double, long, long);

  public abstract java.lang.Long zrevrangebyscoreWithScores(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K, java.lang.String, java.lang.String, long, long);

  public abstract java.lang.Long zrevrangebyscoreWithScores(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K, io.lettuce.core.Range<? extends java.lang.Number>, io.lettuce.core.Limit);

  public abstract java.lang.Long zrevrank(K, V);

  public abstract io.lettuce.core.ScoredValueScanCursor<V> zscan(K);

  public abstract io.lettuce.core.ScoredValueScanCursor<V> zscan(K, io.lettuce.core.ScanArgs);

  public abstract io.lettuce.core.ScoredValueScanCursor<V> zscan(K, io.lettuce.core.ScanCursor, io.lettuce.core.ScanArgs);

  public abstract io.lettuce.core.ScoredValueScanCursor<V> zscan(K, io.lettuce.core.ScanCursor);

  public abstract io.lettuce.core.StreamScanCursor zscan(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K);

  public abstract io.lettuce.core.StreamScanCursor zscan(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K, io.lettuce.core.ScanArgs);

  public abstract io.lettuce.core.StreamScanCursor zscan(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K, io.lettuce.core.ScanCursor, io.lettuce.core.ScanArgs);

  public abstract io.lettuce.core.StreamScanCursor zscan(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K, io.lettuce.core.ScanCursor);

  public abstract java.lang.Double zscore(K, V);

  public abstract java.lang.Long zunionstore(K, K...);

  public abstract java.lang.Long zunionstore(K, io.lettuce.core.ZStoreArgs, K...);
}
