Compiled from "ScanIterator.java"
final class io.lettuce.core.ScanIterator$2 extends io.lettuce.core.ScanIterator$SyncScanIterator<io.lettuce.core.KeyValue<K, V>> {
  final java.util.Optional val$scanArgs;

  final io.lettuce.core.api.sync.RedisHashCommands val$commands;

  final java.lang.Object val$key;

  io.lettuce.core.ScanIterator$2(java.util.Optional, io.lettuce.core.api.sync.RedisHashCommands, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$scanArgs:Ljava/util/Optional;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$commands:Lio/lettuce/core/api/sync/RedisHashCommands;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$key:Ljava/lang/Object;
      15: aload_0
      16: aconst_null
      17: invokespecial #4                  // Method io/lettuce/core/ScanIterator$SyncScanIterator."<init>":(Lio/lettuce/core/ScanIterator$1;)V
      20: return

  protected io.lettuce.core.ScanCursor nextScanCursor(io.lettuce.core.ScanCursor);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method getNextScanCursor:(Lio/lettuce/core/ScanCursor;)Lio/lettuce/core/MapScanCursor;
       5: astore_2
       6: aload_0
       7: aload_2
       8: invokevirtual #6                  // Method io/lettuce/core/MapScanCursor.getMap:()Ljava/util/Map;
      11: invokeinterface #7,  1            // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      16: invokeinterface #8,  1            // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      21: aload_2
      22: invokedynamic #9,  0              // InvokeDynamic #0:apply:(Lio/lettuce/core/MapScanCursor;)Ljava/util/function/Function;
      27: invokeinterface #10,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      32: invokeinterface #11,  1           // InterfaceMethod java/util/stream/Stream.iterator:()Ljava/util/Iterator;
      37: putfield      #12                 // Field chunk:Ljava/util/Iterator;
      40: aload_2
      41: areturn

  private io.lettuce.core.MapScanCursor<K, V> getNextScanCursor(io.lettuce.core.ScanCursor);
    Code:
       0: aload_1
       1: ifnonnull     44
       4: aload_0
       5: getfield      #1                  // Field val$scanArgs:Ljava/util/Optional;
       8: aload_0
       9: getfield      #2                  // Field val$commands:Lio/lettuce/core/api/sync/RedisHashCommands;
      12: aload_0
      13: getfield      #3                  // Field val$key:Ljava/lang/Object;
      16: invokedynamic #13,  0             // InvokeDynamic #1:apply:(Lio/lettuce/core/api/sync/RedisHashCommands;Ljava/lang/Object;)Ljava/util/function/Function;
      21: invokevirtual #14                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      24: aload_0
      25: getfield      #2                  // Field val$commands:Lio/lettuce/core/api/sync/RedisHashCommands;
      28: aload_0
      29: getfield      #3                  // Field val$key:Ljava/lang/Object;
      32: invokedynamic #15,  0             // InvokeDynamic #2:get:(Lio/lettuce/core/api/sync/RedisHashCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
      37: invokevirtual #16                 // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      40: checkcast     #17                 // class io/lettuce/core/MapScanCursor
      43: areturn
      44: aload_0
      45: getfield      #1                  // Field val$scanArgs:Ljava/util/Optional;
      48: aload_0
      49: getfield      #2                  // Field val$commands:Lio/lettuce/core/api/sync/RedisHashCommands;
      52: aload_0
      53: getfield      #3                  // Field val$key:Ljava/lang/Object;
      56: aload_1
      57: invokedynamic #18,  0             // InvokeDynamic #3:apply:(Lio/lettuce/core/api/sync/RedisHashCommands;Ljava/lang/Object;Lio/lettuce/core/ScanCursor;)Ljava/util/function/Function;
      62: invokevirtual #14                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      65: aload_0
      66: getfield      #2                  // Field val$commands:Lio/lettuce/core/api/sync/RedisHashCommands;
      69: aload_0
      70: getfield      #3                  // Field val$key:Ljava/lang/Object;
      73: aload_1
      74: invokedynamic #19,  0             // InvokeDynamic #4:get:(Lio/lettuce/core/api/sync/RedisHashCommands;Ljava/lang/Object;Lio/lettuce/core/ScanCursor;)Ljava/util/function/Supplier;
      79: invokevirtual #16                 // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      82: checkcast     #17                 // class io/lettuce/core/MapScanCursor
      85: areturn

  private static io.lettuce.core.MapScanCursor lambda$getNextScanCursor$4(io.lettuce.core.api.sync.RedisHashCommands, java.lang.Object, io.lettuce.core.ScanCursor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #20,  3           // InterfaceMethod io/lettuce/core/api/sync/RedisHashCommands.hscan:(Ljava/lang/Object;Lio/lettuce/core/ScanCursor;)Lio/lettuce/core/MapScanCursor;
       8: areturn

  private static io.lettuce.core.MapScanCursor lambda$getNextScanCursor$3(io.lettuce.core.api.sync.RedisHashCommands, java.lang.Object, io.lettuce.core.ScanCursor, io.lettuce.core.ScanArgs);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokeinterface #21,  4           // InterfaceMethod io/lettuce/core/api/sync/RedisHashCommands.hscan:(Ljava/lang/Object;Lio/lettuce/core/ScanCursor;Lio/lettuce/core/ScanArgs;)Lio/lettuce/core/MapScanCursor;
       9: areturn

  private static io.lettuce.core.MapScanCursor lambda$getNextScanCursor$2(io.lettuce.core.api.sync.RedisHashCommands, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #22,  2           // InterfaceMethod io/lettuce/core/api/sync/RedisHashCommands.hscan:(Ljava/lang/Object;)Lio/lettuce/core/MapScanCursor;
       7: areturn

  private static io.lettuce.core.MapScanCursor lambda$getNextScanCursor$1(io.lettuce.core.api.sync.RedisHashCommands, java.lang.Object, io.lettuce.core.ScanArgs);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #23,  3           // InterfaceMethod io/lettuce/core/api/sync/RedisHashCommands.hscan:(Ljava/lang/Object;Lio/lettuce/core/ScanArgs;)Lio/lettuce/core/MapScanCursor;
       8: areturn

  private static io.lettuce.core.KeyValue lambda$nextScanCursor$0(io.lettuce.core.MapScanCursor, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #6                  // Method io/lettuce/core/MapScanCursor.getMap:()Ljava/util/Map;
       5: aload_1
       6: invokeinterface #24,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: invokestatic  #25                 // Method io/lettuce/core/KeyValue.fromNullable:(Ljava/lang/Object;Ljava/lang/Object;)Lio/lettuce/core/KeyValue;
      14: areturn
}
