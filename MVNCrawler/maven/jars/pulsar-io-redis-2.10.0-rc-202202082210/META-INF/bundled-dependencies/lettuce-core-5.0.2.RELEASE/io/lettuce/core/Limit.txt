Compiled from "Limit.java"
public class io.lettuce.core.Limit {
  private static final io.lettuce.core.Limit UNLIMITED;

  private final java.lang.Long offset;

  private final java.lang.Long count;

  protected io.lettuce.core.Limit(java.lang.Long, java.lang.Long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field offset:Ljava/lang/Long;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field count:Ljava/lang/Long;
      14: return

  public static io.lettuce.core.Limit unlimited();
    Code:
       0: getstatic     #4                  // Field UNLIMITED:Lio/lettuce/core/Limit;
       3: areturn

  public static io.lettuce.core.Limit create(long, long);
    Code:
       0: new           #5                  // class io/lettuce/core/Limit
       3: dup
       4: lload_0
       5: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       8: lload_2
       9: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      12: invokespecial #7                  // Method "<init>":(Ljava/lang/Long;Ljava/lang/Long;)V
      15: areturn

  public long getOffset();
    Code:
       0: aload_0
       1: getfield      #2                  // Field offset:Ljava/lang/Long;
       4: ifnull        15
       7: aload_0
       8: getfield      #2                  // Field offset:Ljava/lang/Long;
      11: invokevirtual #8                  // Method java/lang/Long.longValue:()J
      14: lreturn
      15: ldc2_w        #9                  // long -1l
      18: lreturn

  public long getCount();
    Code:
       0: aload_0
       1: getfield      #3                  // Field count:Ljava/lang/Long;
       4: ifnull        15
       7: aload_0
       8: getfield      #3                  // Field count:Ljava/lang/Long;
      11: invokevirtual #8                  // Method java/lang/Long.longValue:()J
      14: lreturn
      15: ldc2_w        #9                  // long -1l
      18: lreturn

  public boolean isLimited();
    Code:
       0: aload_0
       1: getfield      #2                  // Field offset:Ljava/lang/Long;
       4: ifnull        18
       7: aload_0
       8: getfield      #3                  // Field count:Ljava/lang/Long;
      11: ifnull        18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public java.lang.String toString();
    Code:
       0: new           #11                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #13                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      13: invokevirtual #14                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      16: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: pop
      20: aload_0
      21: invokevirtual #16                 // Method isLimited:()Z
      24: ifeq          61
      27: aload_1
      28: ldc           #17                 // String  [offset=
      30: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_0
      34: invokevirtual #18                 // Method getOffset:()J
      37: invokevirtual #19                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      40: ldc           #20                 // String , count=
      42: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_0
      46: invokevirtual #21                 // Method getCount:()J
      49: invokevirtual #19                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      52: ldc           #22                 // String ]
      54: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: areturn
      61: aload_1
      62: ldc           #24                 // String  [unlimited]
      64: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: areturn

  static {};
    Code:
       0: new           #5                  // class io/lettuce/core/Limit
       3: dup
       4: aconst_null
       5: aconst_null
       6: invokespecial #7                  // Method "<init>":(Ljava/lang/Long;Ljava/lang/Long;)V
       9: putstatic     #4                  // Field UNLIMITED:Lio/lettuce/core/Limit;
      12: return
}
