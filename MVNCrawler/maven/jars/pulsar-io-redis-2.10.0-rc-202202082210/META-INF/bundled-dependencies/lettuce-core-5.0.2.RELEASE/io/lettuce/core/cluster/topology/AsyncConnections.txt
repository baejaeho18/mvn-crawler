Compiled from "AsyncConnections.java"
class io.lettuce.core.cluster.topology.AsyncConnections {
  private final java.util.Map<io.lettuce.core.RedisURI, java.util.concurrent.CompletableFuture<io.lettuce.core.api.StatefulRedisConnection<java.lang.String, java.lang.String>>> futures;

  public io.lettuce.core.cluster.topology.AsyncConnections();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/TreeMap
       8: dup
       9: getstatic     #3                  // Field io/lettuce/core/cluster/topology/TopologyComparators$RedisURIComparator.INSTANCE:Lio/lettuce/core/cluster/topology/TopologyComparators$RedisURIComparator;
      12: invokespecial #4                  // Method java/util/TreeMap."<init>":(Ljava/util/Comparator;)V
      15: putfield      #5                  // Field futures:Ljava/util/Map;
      18: return

  public void addConnection(io.lettuce.core.RedisURI, java.util.concurrent.CompletableFuture<io.lettuce.core.api.StatefulRedisConnection<java.lang.String, java.lang.String>>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field futures:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #6,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public java.util.Set<io.lettuce.core.RedisURI> connectedNodes();
    Code:
       0: aload_0
       1: getfield      #5                  // Field futures:Ljava/util/Map;
       4: invokeinterface #7,  1            // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn

  public io.lettuce.core.cluster.topology.Connections get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: new           #8                  // class io/lettuce/core/cluster/topology/Connections
       3: dup
       4: invokespecial #9                  // Method io/lettuce/core/cluster/topology/Connections."<init>":()V
       7: astore        4
       9: new           #10                 // class java/util/concurrent/CopyOnWriteArrayList
      12: dup
      13: invokespecial #11                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      16: astore        5
      18: new           #12                 // class java/util/ArrayList
      21: dup
      22: aload_0
      23: getfield      #5                  // Field futures:Ljava/util/Map;
      26: invokeinterface #13,  1           // InterfaceMethod java/util/Map.size:()I
      31: invokespecial #14                 // Method java/util/ArrayList."<init>":(I)V
      34: astore        6
      36: aload_0
      37: getfield      #5                  // Field futures:Ljava/util/Map;
      40: invokeinterface #15,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      45: invokeinterface #16,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      50: astore        7
      52: aload         7
      54: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      59: ifeq          113
      62: aload         7
      64: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      69: checkcast     #19                 // class java/util/Map$Entry
      72: astore        8
      74: aload         8
      76: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      81: checkcast     #21                 // class java/util/concurrent/CompletableFuture
      84: astore        9
      86: aload         6
      88: aload         9
      90: aload         5
      92: aload         4
      94: aload         8
      96: invokedynamic #22,  0             // InvokeDynamic #0:accept:(Ljava/util/List;Lio/lettuce/core/cluster/topology/Connections;Ljava/util/Map$Entry;)Ljava/util/function/BiConsumer;
     101: invokevirtual #23                 // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
     104: invokeinterface #24,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     109: pop
     110: goto          52
     113: lload_1
     114: aload_3
     115: aload         6
     117: invokestatic  #25                 // Method io/lettuce/core/cluster/topology/RefreshFutures.awaitAll:(JLjava/util/concurrent/TimeUnit;Ljava/util/Collection;)J
     120: pop2
     121: aload         4
     123: invokevirtual #26                 // Method io/lettuce/core/cluster/topology/Connections.isEmpty:()Z
     126: ifeq          182
     129: aload         6
     131: invokeinterface #27,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     136: ifne          182
     139: aload         5
     141: invokeinterface #27,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     146: ifne          182
     149: new           #28                 // class io/lettuce/core/RedisConnectionException
     152: dup
     153: ldc           #29                 // String Unable to establish a connection to Redis Cluster
     155: invokespecial #30                 // Method io/lettuce/core/RedisConnectionException."<init>":(Ljava/lang/String;)V
     158: astore        7
     160: aload         5
     162: aload         7
     164: dup
     165: invokevirtual #31                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     168: pop
     169: invokedynamic #32,  0             // InvokeDynamic #1:accept:(Lio/lettuce/core/RedisConnectionException;)Ljava/util/function/Consumer;
     174: invokeinterface #33,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
     179: aload         7
     181: athrow
     182: aload         4
     184: areturn

  public io.lettuce.core.cluster.topology.Connections optionalGet(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: new           #8                  // class io/lettuce/core/cluster/topology/Connections
       3: dup
       4: invokespecial #9                  // Method io/lettuce/core/cluster/topology/Connections."<init>":()V
       7: astore        4
       9: new           #12                 // class java/util/ArrayList
      12: dup
      13: aload_0
      14: getfield      #5                  // Field futures:Ljava/util/Map;
      17: invokeinterface #13,  1           // InterfaceMethod java/util/Map.size:()I
      22: invokespecial #14                 // Method java/util/ArrayList."<init>":(I)V
      25: astore        5
      27: aload_0
      28: getfield      #5                  // Field futures:Ljava/util/Map;
      31: invokeinterface #15,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      36: invokeinterface #16,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      41: astore        6
      43: aload         6
      45: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      50: ifeq          102
      53: aload         6
      55: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      60: checkcast     #19                 // class java/util/Map$Entry
      63: astore        7
      65: aload         7
      67: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      72: checkcast     #21                 // class java/util/concurrent/CompletableFuture
      75: astore        8
      77: aload         5
      79: aload         8
      81: aload         4
      83: aload         7
      85: invokedynamic #34,  0             // InvokeDynamic #2:accept:(Lio/lettuce/core/cluster/topology/Connections;Ljava/util/Map$Entry;)Ljava/util/function/Consumer;
      90: invokevirtual #35                 // Method java/util/concurrent/CompletableFuture.thenAccept:(Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;
      93: invokeinterface #24,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      98: pop
      99: goto          43
     102: lload_1
     103: aload_3
     104: aload         5
     106: invokestatic  #25                 // Method io/lettuce/core/cluster/topology/RefreshFutures.awaitAll:(JLjava/util/concurrent/TimeUnit;Ljava/util/Collection;)J
     109: pop2
     110: aload         4
     112: areturn

  private static void lambda$optionalGet$1(io.lettuce.core.cluster.topology.Connections, java.util.Map$Entry, io.lettuce.core.api.StatefulRedisConnection);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
       7: checkcast     #37                 // class io/lettuce/core/RedisURI
      10: aload_2
      11: invokevirtual #38                 // Method io/lettuce/core/cluster/topology/Connections.addConnection:(Lio/lettuce/core/RedisURI;Lio/lettuce/core/api/StatefulRedisConnection;)V
      14: return

  private static void lambda$get$0(java.util.List, io.lettuce.core.cluster.topology.Connections, java.util.Map$Entry, io.lettuce.core.api.StatefulRedisConnection, java.lang.Throwable);
    Code:
       0: aload         4
       2: ifnull        17
       5: aload_0
       6: aload         4
       8: invokeinterface #24,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      13: pop
      14: goto          31
      17: aload_1
      18: aload_2
      19: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      24: checkcast     #37                 // class io/lettuce/core/RedisURI
      27: aload_3
      28: invokevirtual #38                 // Method io/lettuce/core/cluster/topology/Connections.addConnection:(Lio/lettuce/core/RedisURI;Lio/lettuce/core/api/StatefulRedisConnection;)V
      31: return
}
