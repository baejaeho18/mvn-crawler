Compiled from "InvocationProxyFactory.java"
class io.lettuce.core.dynamic.intercept.InvocationProxyFactory$InterceptorChainInvocationHandler extends io.lettuce.core.internal.AbstractInvocationHandler {
  private final io.lettuce.core.dynamic.intercept.MethodInterceptorChain$Head context;

  io.lettuce.core.dynamic.intercept.InvocationProxyFactory$InterceptorChainInvocationHandler(java.util.List<io.lettuce.core.dynamic.intercept.MethodInterceptor>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/lettuce/core/internal/AbstractInvocationHandler."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method io/lettuce/core/dynamic/intercept/MethodInterceptorChain.from:(Ljava/lang/Iterable;)Lio/lettuce/core/dynamic/intercept/MethodInterceptorChain$Head;
       9: putfield      #3                  // Field context:Lio/lettuce/core/dynamic/intercept/MethodInterceptorChain$Head;
      12: return

  protected java.lang.Object handleInvocation(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #3                  // Field context:Lio/lettuce/core/dynamic/intercept/MethodInterceptorChain$Head;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #4                  // Method io/lettuce/core/dynamic/intercept/MethodInterceptorChain$Head.invoke:(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn
}
