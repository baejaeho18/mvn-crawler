Compiled from "PubSubCommandHandler.java"
public class io.lettuce.core.pubsub.PubSubCommandHandler<K, V> extends io.lettuce.core.protocol.CommandHandler {
  private final io.lettuce.core.pubsub.PubSubEndpoint<K, V> endpoint;

  private final io.lettuce.core.codec.RedisCodec<K, V> codec;

  private io.lettuce.core.pubsub.PubSubOutput<K, V, V> output;

  public io.lettuce.core.pubsub.PubSubCommandHandler(io.lettuce.core.ClientOptions, io.lettuce.core.resource.ClientResources, io.lettuce.core.codec.RedisCodec<K, V>, io.lettuce.core.pubsub.PubSubEndpoint<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload         4
       5: invokespecial #1                  // Method io/lettuce/core/protocol/CommandHandler."<init>":(Lio/lettuce/core/ClientOptions;Lio/lettuce/core/resource/ClientResources;Lio/lettuce/core/protocol/Endpoint;)V
       8: aload_0
       9: aload         4
      11: putfield      #2                  // Field endpoint:Lio/lettuce/core/pubsub/PubSubEndpoint;
      14: aload_0
      15: aload_3
      16: putfield      #3                  // Field codec:Lio/lettuce/core/codec/RedisCodec;
      19: aload_0
      20: new           #4                  // class io/lettuce/core/pubsub/PubSubOutput
      23: dup
      24: aload_3
      25: invokespecial #5                  // Method io/lettuce/core/pubsub/PubSubOutput."<init>":(Lio/lettuce/core/codec/RedisCodec;)V
      28: putfield      #6                  // Field output:Lio/lettuce/core/pubsub/PubSubOutput;
      31: return

  protected void decode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #7                  // Method io/lettuce/core/protocol/CommandHandler.decode:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V
       6: aload_2
       7: invokevirtual #8                  // Method io/netty/buffer/ByteBuf.isReadable:()Z
      10: ifeq          60
      13: aload_0
      14: aload_2
      15: aload_0
      16: getfield      #6                  // Field output:Lio/lettuce/core/pubsub/PubSubOutput;
      19: invokespecial #9                  // Method io/lettuce/core/protocol/CommandHandler.decode:(Lio/netty/buffer/ByteBuf;Lio/lettuce/core/output/CommandOutput;)Z
      22: ifne          26
      25: return
      26: aload_0
      27: getfield      #2                  // Field endpoint:Lio/lettuce/core/pubsub/PubSubEndpoint;
      30: aload_0
      31: getfield      #6                  // Field output:Lio/lettuce/core/pubsub/PubSubOutput;
      34: invokevirtual #10                 // Method io/lettuce/core/pubsub/PubSubEndpoint.notifyMessage:(Lio/lettuce/core/pubsub/PubSubOutput;)V
      37: aload_0
      38: new           #4                  // class io/lettuce/core/pubsub/PubSubOutput
      41: dup
      42: aload_0
      43: getfield      #3                  // Field codec:Lio/lettuce/core/codec/RedisCodec;
      46: invokespecial #5                  // Method io/lettuce/core/pubsub/PubSubOutput."<init>":(Lio/lettuce/core/codec/RedisCodec;)V
      49: putfield      #6                  // Field output:Lio/lettuce/core/pubsub/PubSubOutput;
      52: aload_2
      53: invokevirtual #11                 // Method io/netty/buffer/ByteBuf.discardReadBytes:()Lio/netty/buffer/ByteBuf;
      56: pop
      57: goto          6
      60: return

  protected boolean canDecode(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #12                 // Method io/lettuce/core/protocol/CommandHandler.canDecode:(Lio/netty/buffer/ByteBuf;)Z
       5: ifeq          22
       8: aload_0
       9: getfield      #6                  // Field output:Lio/lettuce/core/pubsub/PubSubOutput;
      12: invokevirtual #13                 // Method io/lettuce/core/pubsub/PubSubOutput.type:()Lio/lettuce/core/pubsub/PubSubOutput$Type;
      15: ifnonnull     22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  protected void afterComplete(io.netty.channel.ChannelHandlerContext, io.lettuce.core.protocol.RedisCommand<?, ?, ?>);
    Code:
       0: aload_2
       1: invokeinterface #14,  1           // InterfaceMethod io/lettuce/core/protocol/RedisCommand.getOutput:()Lio/lettuce/core/output/CommandOutput;
       6: instanceof    #4                  // class io/lettuce/core/pubsub/PubSubOutput
       9: ifeq          28
      12: aload_0
      13: getfield      #2                  // Field endpoint:Lio/lettuce/core/pubsub/PubSubEndpoint;
      16: aload_2
      17: invokeinterface #14,  1           // InterfaceMethod io/lettuce/core/protocol/RedisCommand.getOutput:()Lio/lettuce/core/output/CommandOutput;
      22: checkcast     #4                  // class io/lettuce/core/pubsub/PubSubOutput
      25: invokevirtual #10                 // Method io/lettuce/core/pubsub/PubSubEndpoint.notifyMessage:(Lio/lettuce/core/pubsub/PubSubOutput;)V
      28: return
}
