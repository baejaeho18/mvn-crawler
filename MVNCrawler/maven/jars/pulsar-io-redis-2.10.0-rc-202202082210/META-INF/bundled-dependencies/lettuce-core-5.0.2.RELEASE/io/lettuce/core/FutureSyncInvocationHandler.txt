Compiled from "FutureSyncInvocationHandler.java"
class io.lettuce.core.FutureSyncInvocationHandler extends io.lettuce.core.internal.AbstractInvocationHandler {
  private final io.lettuce.core.api.StatefulConnection<?, ?> connection;

  private final java.lang.Object asyncApi;

  private final io.lettuce.core.internal.AbstractInvocationHandler$MethodTranslator translator;

  io.lettuce.core.FutureSyncInvocationHandler(io.lettuce.core.api.StatefulConnection<?, ?>, java.lang.Object, java.lang.Class<?>[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/lettuce/core/internal/AbstractInvocationHandler."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field connection:Lio/lettuce/core/api/StatefulConnection;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field asyncApi:Ljava/lang/Object;
      14: aload_0
      15: aload_2
      16: invokevirtual #4                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: aload_3
      20: invokestatic  #5                  // Method io/lettuce/core/internal/AbstractInvocationHandler$MethodTranslator.of:(Ljava/lang/Class;[Ljava/lang/Class;)Lio/lettuce/core/internal/AbstractInvocationHandler$MethodTranslator;
      23: putfield      #6                  // Field translator:Lio/lettuce/core/internal/AbstractInvocationHandler$MethodTranslator;
      26: return

  protected java.lang.Object handleInvocation(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #6                  // Field translator:Lio/lettuce/core/internal/AbstractInvocationHandler$MethodTranslator;
       4: aload_2
       5: invokevirtual #7                  // Method io/lettuce/core/internal/AbstractInvocationHandler$MethodTranslator.get:(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
       8: astore        4
      10: aload         4
      12: aload_0
      13: getfield      #3                  // Field asyncApi:Ljava/lang/Object;
      16: aload_3
      17: invokevirtual #8                  // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      20: astore        5
      22: aload         5
      24: instanceof    #9                  // class io/lettuce/core/RedisFuture
      27: ifeq          88
      30: aload         5
      32: checkcast     #9                  // class io/lettuce/core/RedisFuture
      35: astore        6
      37: aload_2
      38: invokevirtual #10                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
      41: invokestatic  #11                 // Method isNonTxControlMethod:(Ljava/lang/String;)Z
      44: ifeq          59
      47: aload_0
      48: getfield      #2                  // Field connection:Lio/lettuce/core/api/StatefulConnection;
      51: invokestatic  #12                 // Method isTransactionActive:(Lio/lettuce/core/api/StatefulConnection;)Z
      54: ifeq          59
      57: aconst_null
      58: areturn
      59: aload         6
      61: aload_0
      62: getfield      #2                  // Field connection:Lio/lettuce/core/api/StatefulConnection;
      65: invokeinterface #13,  1           // InterfaceMethod io/lettuce/core/api/StatefulConnection.getTimeout:()Ljava/time/Duration;
      70: invokevirtual #14                 // Method java/time/Duration.toNanos:()J
      73: getstatic     #15                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      76: invokestatic  #16                 // Method io/lettuce/core/LettuceFutures.awaitOrCancel:(Lio/lettuce/core/RedisFuture;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      79: pop
      80: aload         6
      82: invokeinterface #17,  1           // InterfaceMethod io/lettuce/core/RedisFuture.get:()Ljava/lang/Object;
      87: areturn
      88: aload         5
      90: areturn
      91: astore        4
      93: aload         4
      95: invokevirtual #19                 // Method java/lang/reflect/InvocationTargetException.getTargetException:()Ljava/lang/Throwable;
      98: athrow
    Exception table:
       from    to  target type
           0    58    91   Class java/lang/reflect/InvocationTargetException
          59    87    91   Class java/lang/reflect/InvocationTargetException
          88    90    91   Class java/lang/reflect/InvocationTargetException

  private static boolean isTransactionActive(io.lettuce.core.api.StatefulConnection<?, ?>);
    Code:
       0: aload_0
       1: instanceof    #20                 // class io/lettuce/core/api/StatefulRedisConnection
       4: ifeq          23
       7: aload_0
       8: checkcast     #20                 // class io/lettuce/core/api/StatefulRedisConnection
      11: invokeinterface #21,  1           // InterfaceMethod io/lettuce/core/api/StatefulRedisConnection.isMulti:()Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  private static boolean isNonTxControlMethod(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #22                 // String exec
       3: invokevirtual #23                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifne          31
       9: aload_0
      10: ldc           #24                 // String multi
      12: invokevirtual #23                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      15: ifne          31
      18: aload_0
      19: ldc           #25                 // String discard
      21: invokevirtual #23                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      24: ifne          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn
}
