Compiled from "WildcardTypeInformation.java"
class io.lettuce.core.dynamic.support.WildcardTypeInformation<S> extends io.lettuce.core.dynamic.support.TypeDiscoverer<S> {
  private final java.lang.reflect.WildcardType type;

  protected io.lettuce.core.dynamic.support.WildcardTypeInformation(java.lang.reflect.WildcardType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method io/lettuce/core/dynamic/support/TypeDiscoverer."<init>":(Ljava/lang/reflect/Type;Ljava/util/Map;)V
       6: aload_0
       7: aload_1
       8: putfield      #2                  // Field type:Ljava/lang/reflect/WildcardType;
      11: return

  public boolean isAssignableFrom(io.lettuce.core.dynamic.support.TypeInformation<?>);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getLowerBounds:()Ljava/util/List;
       4: invokeinterface #4,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          44
      19: aload_2
      20: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #7                  // class io/lettuce/core/dynamic/support/TypeInformation
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokeinterface #8,  2            // InterfaceMethod io/lettuce/core/dynamic/support/TypeInformation.isAssignableFrom:(Lio/lettuce/core/dynamic/support/TypeInformation;)Z
      36: ifne          41
      39: iconst_0
      40: ireturn
      41: goto          10
      44: aload_0
      45: invokevirtual #9                  // Method getUpperBounds:()Ljava/util/List;
      48: invokeinterface #4,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      53: astore_2
      54: aload_2
      55: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      60: ifeq          88
      63: aload_2
      64: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      69: checkcast     #7                  // class io/lettuce/core/dynamic/support/TypeInformation
      72: astore_3
      73: aload_3
      74: aload_1
      75: invokeinterface #8,  2            // InterfaceMethod io/lettuce/core/dynamic/support/TypeInformation.isAssignableFrom:(Lio/lettuce/core/dynamic/support/TypeInformation;)Z
      80: ifne          85
      83: iconst_0
      84: ireturn
      85: goto          54
      88: iconst_1
      89: ireturn

  public java.util.List<io.lettuce.core.dynamic.support.TypeInformation<?>> getUpperBounds();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field type:Ljava/lang/reflect/WildcardType;
       5: invokeinterface #10,  1           // InterfaceMethod java/lang/reflect/WildcardType.getUpperBounds:()[Ljava/lang/reflect/Type;
      10: invokespecial #11                 // Method getBounds:([Ljava/lang/reflect/Type;)Ljava/util/List;
      13: areturn

  public java.util.List<io.lettuce.core.dynamic.support.TypeInformation<?>> getLowerBounds();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field type:Ljava/lang/reflect/WildcardType;
       5: invokeinterface #12,  1           // InterfaceMethod java/lang/reflect/WildcardType.getLowerBounds:()[Ljava/lang/reflect/Type;
      10: invokespecial #11                 // Method getBounds:([Ljava/lang/reflect/Type;)Ljava/util/List;
      13: areturn

  private java.util.List<io.lettuce.core.dynamic.support.TypeInformation<?>> getBounds(java.lang.reflect.Type[]);
    Code:
       0: new           #13                 // class java/util/ArrayList
       3: dup
       4: aload_1
       5: arraylength
       6: invokespecial #14                 // Method java/util/ArrayList."<init>":(I)V
       9: astore_2
      10: aload_1
      11: invokestatic  #15                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      14: aload_0
      15: invokedynamic #16,  0             // InvokeDynamic #0:apply:(Lio/lettuce/core/dynamic/support/WildcardTypeInformation;)Ljava/util/function/Function;
      20: invokeinterface #17,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      25: aload_2
      26: dup
      27: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      30: pop
      31: invokedynamic #19,  0             // InvokeDynamic #1:accept:(Ljava/util/List;)Ljava/util/function/Consumer;
      36: invokeinterface #20,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      41: aload_2
      42: areturn
}
