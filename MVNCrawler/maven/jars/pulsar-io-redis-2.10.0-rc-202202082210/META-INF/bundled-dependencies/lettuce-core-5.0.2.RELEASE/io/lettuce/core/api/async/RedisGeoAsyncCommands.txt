Compiled from "RedisGeoAsyncCommands.java"
public interface io.lettuce.core.api.async.RedisGeoAsyncCommands<K, V> {
  public abstract io.lettuce.core.RedisFuture<java.lang.Long> geoadd(K, double, double, V);

  public abstract io.lettuce.core.RedisFuture<java.lang.Long> geoadd(K, java.lang.Object...);

  public abstract io.lettuce.core.RedisFuture<java.util.List<io.lettuce.core.Value<java.lang.String>>> geohash(K, V...);

  public abstract io.lettuce.core.RedisFuture<java.util.Set<V>> georadius(K, double, double, double, io.lettuce.core.GeoArgs$Unit);

  public abstract io.lettuce.core.RedisFuture<java.util.List<io.lettuce.core.GeoWithin<V>>> georadius(K, double, double, double, io.lettuce.core.GeoArgs$Unit, io.lettuce.core.GeoArgs);

  public abstract io.lettuce.core.RedisFuture<java.lang.Long> georadius(K, double, double, double, io.lettuce.core.GeoArgs$Unit, io.lettuce.core.GeoRadiusStoreArgs<K>);

  public abstract io.lettuce.core.RedisFuture<java.util.Set<V>> georadiusbymember(K, V, double, io.lettuce.core.GeoArgs$Unit);

  public abstract io.lettuce.core.RedisFuture<java.util.List<io.lettuce.core.GeoWithin<V>>> georadiusbymember(K, V, double, io.lettuce.core.GeoArgs$Unit, io.lettuce.core.GeoArgs);

  public abstract io.lettuce.core.RedisFuture<java.lang.Long> georadiusbymember(K, V, double, io.lettuce.core.GeoArgs$Unit, io.lettuce.core.GeoRadiusStoreArgs<K>);

  public abstract io.lettuce.core.RedisFuture<java.util.List<io.lettuce.core.GeoCoordinates>> geopos(K, V...);

  public abstract io.lettuce.core.RedisFuture<java.lang.Double> geodist(K, V, V, io.lettuce.core.GeoArgs$Unit);
}
