Compiled from "DefaultCommandLatencyCollector.java"
interface io.lettuce.core.metrics.DefaultCommandLatencyCollector$PauseDetectorWrapper {
  public static final io.lettuce.core.metrics.DefaultCommandLatencyCollector$PauseDetectorWrapper NO_OP;

  public static io.lettuce.core.metrics.DefaultCommandLatencyCollector$PauseDetectorWrapper create();
    Code:
       0: invokestatic  #1                  // Method io/lettuce/core/metrics/DefaultCommandLatencyCollector.access$200:()Z
       3: ifeq          20
       6: invokestatic  #2                  // Method io/lettuce/core/metrics/DefaultCommandLatencyCollector.access$300:()Z
       9: ifeq          20
      12: new           #3                  // class io/lettuce/core/metrics/DefaultCommandLatencyCollector$DefaultPauseDetectorWrapper
      15: dup
      16: invokespecial #4                  // Method io/lettuce/core/metrics/DefaultCommandLatencyCollector$DefaultPauseDetectorWrapper."<init>":()V
      19: areturn
      20: getstatic     #5                  // Field NO_OP:Lio/lettuce/core/metrics/DefaultCommandLatencyCollector$PauseDetectorWrapper;
      23: areturn

  public abstract void retain();

  public abstract void release();

  static {};
    Code:
       0: new           #6                  // class io/lettuce/core/metrics/DefaultCommandLatencyCollector$PauseDetectorWrapper$1
       3: dup
       4: invokespecial #7                  // Method io/lettuce/core/metrics/DefaultCommandLatencyCollector$PauseDetectorWrapper$1."<init>":()V
       7: putstatic     #5                  // Field NO_OP:Lio/lettuce/core/metrics/DefaultCommandLatencyCollector$PauseDetectorWrapper;
      10: return
}
