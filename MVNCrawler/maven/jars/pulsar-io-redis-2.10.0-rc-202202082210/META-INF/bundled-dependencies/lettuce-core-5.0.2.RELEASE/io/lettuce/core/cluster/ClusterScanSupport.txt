Compiled from "ClusterScanSupport.java"
class io.lettuce.core.cluster.ClusterScanSupport {
  static final io.lettuce.core.cluster.ClusterScanSupport$ScanCursorMapper<io.lettuce.core.RedisFuture<io.lettuce.core.KeyScanCursor<?>>> futureKeyScanCursorMapper;

  static final io.lettuce.core.cluster.ClusterScanSupport$ScanCursorMapper<io.lettuce.core.RedisFuture<io.lettuce.core.StreamScanCursor>> futureStreamScanCursorMapper;

  static final io.lettuce.core.cluster.ClusterScanSupport$ScanCursorMapper<reactor.core.publisher.Mono<io.lettuce.core.KeyScanCursor<?>>> reactiveKeyScanCursorMapper;

  static final io.lettuce.core.cluster.ClusterScanSupport$ScanCursorMapper<reactor.core.publisher.Mono<io.lettuce.core.StreamScanCursor>> reactiveStreamScanCursorMapper;

  io.lettuce.core.cluster.ClusterScanSupport();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static io.lettuce.core.ScanCursor getContinuationCursor(io.lettuce.core.ScanCursor);
    Code:
       0: getstatic     #2                  // Field io/lettuce/core/ScanCursor.INITIAL:Lio/lettuce/core/ScanCursor;
       3: aload_0
       4: invokevirtual #3                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       7: ifeq          12
      10: aload_0
      11: areturn
      12: aload_0
      13: invokestatic  #4                  // Method assertClusterScanCursor:(Lio/lettuce/core/ScanCursor;)V
      16: aload_0
      17: checkcast     #5                  // class io/lettuce/core/cluster/ClusterScanSupport$ClusterScanCursor
      20: astore_1
      21: aload_1
      22: invokeinterface #6,  1            // InterfaceMethod io/lettuce/core/cluster/ClusterScanSupport$ClusterScanCursor.isScanOnCurrentNodeFinished:()Z
      27: ifeq          34
      30: getstatic     #2                  // Field io/lettuce/core/ScanCursor.INITIAL:Lio/lettuce/core/ScanCursor;
      33: areturn
      34: aload_0
      35: areturn

  static <K, V> java.util.List<java.lang.String> getNodeIds(io.lettuce.core.cluster.api.StatefulRedisClusterConnection<K, V>, io.lettuce.core.ScanCursor);
    Code:
       0: getstatic     #2                  // Field io/lettuce/core/ScanCursor.INITIAL:Lio/lettuce/core/ScanCursor;
       3: aload_1
       4: invokevirtual #3                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       7: ifeq          21
      10: aload_0
      11: invokestatic  #7                  // Method getNodeIds:(Lio/lettuce/core/cluster/api/StatefulRedisClusterConnection;)Ljava/util/List;
      14: astore_2
      15: aload_2
      16: invokestatic  #8                  // Method assertHasNodes:(Ljava/util/List;)V
      19: aload_2
      20: areturn
      21: aload_1
      22: invokestatic  #4                  // Method assertClusterScanCursor:(Lio/lettuce/core/ScanCursor;)V
      25: aload_1
      26: checkcast     #5                  // class io/lettuce/core/cluster/ClusterScanSupport$ClusterScanCursor
      29: astore_2
      30: aload_2
      31: invokeinterface #9,  1            // InterfaceMethod io/lettuce/core/cluster/ClusterScanSupport$ClusterScanCursor.getNodeIds:()Ljava/util/List;
      36: areturn

  static java.lang.String getCurrentNodeId(io.lettuce.core.ScanCursor, java.util.List<java.lang.String>);
    Code:
       0: getstatic     #2                  // Field io/lettuce/core/ScanCursor.INITIAL:Lio/lettuce/core/ScanCursor;
       3: aload_0
       4: invokevirtual #3                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       7: ifeq          25
      10: aload_1
      11: invokestatic  #8                  // Method assertHasNodes:(Ljava/util/List;)V
      14: aload_1
      15: iconst_0
      16: invokeinterface #10,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      21: checkcast     #11                 // class java/lang/String
      24: areturn
      25: aload_0
      26: invokestatic  #4                  // Method assertClusterScanCursor:(Lio/lettuce/core/ScanCursor;)V
      29: aload_1
      30: aload_0
      31: checkcast     #5                  // class io/lettuce/core/cluster/ClusterScanSupport$ClusterScanCursor
      34: invokestatic  #12                 // Method getNodeIdForNextScanIteration:(Ljava/util/List;Lio/lettuce/core/cluster/ClusterScanSupport$ClusterScanCursor;)Ljava/lang/String;
      37: areturn

  private static java.util.List<java.lang.String> getNodeIds(io.lettuce.core.cluster.api.StatefulRedisClusterConnection<?, ?>);
    Code:
       0: new           #13                 // class java/util/ArrayList
       3: dup
       4: invokespecial #14                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: new           #15                 // class io/lettuce/core/cluster/PartitionAccessor
      11: dup
      12: aload_0
      13: invokeinterface #16,  1           // InterfaceMethod io/lettuce/core/cluster/api/StatefulRedisClusterConnection.getPartitions:()Lio/lettuce/core/cluster/models/partitions/Partitions;
      18: invokespecial #17                 // Method io/lettuce/core/cluster/PartitionAccessor."<init>":(Ljava/util/Collection;)V
      21: astore_2
      22: aload_2
      23: invokevirtual #18                 // Method io/lettuce/core/cluster/PartitionAccessor.getMasters:()Ljava/util/List;
      26: invokeinterface #19,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      31: astore_3
      32: aload_3
      33: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          142
      41: aload_3
      42: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #22                 // class io/lettuce/core/cluster/models/partitions/RedisClusterNode
      50: astore        4
      52: aload_0
      53: invokeinterface #23,  1           // InterfaceMethod io/lettuce/core/cluster/api/StatefulRedisClusterConnection.getReadFrom:()Lio/lettuce/core/ReadFrom;
      58: ifnull        127
      61: aload_2
      62: aload         4
      64: invokevirtual #24                 // Method io/lettuce/core/cluster/PartitionAccessor.getReadCandidates:(Lio/lettuce/core/cluster/models/partitions/RedisClusterNode;)Ljava/util/List;
      67: astore        5
      69: aload_0
      70: invokeinterface #23,  1           // InterfaceMethod io/lettuce/core/cluster/api/StatefulRedisClusterConnection.getReadFrom:()Lio/lettuce/core/ReadFrom;
      75: new           #25                 // class io/lettuce/core/cluster/ClusterScanSupport$4
      78: dup
      79: aload         5
      81: invokespecial #26                 // Method io/lettuce/core/cluster/ClusterScanSupport$4."<init>":(Ljava/util/List;)V
      84: invokevirtual #27                 // Method io/lettuce/core/ReadFrom.select:(Lio/lettuce/core/ReadFrom$Nodes;)Ljava/util/List;
      87: astore        6
      89: aload         6
      91: invokeinterface #28,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      96: ifne          127
      99: aload         6
     101: iconst_0
     102: invokeinterface #10,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     107: checkcast     #22                 // class io/lettuce/core/cluster/models/partitions/RedisClusterNode
     110: astore        7
     112: aload_1
     113: aload         7
     115: invokevirtual #29                 // Method io/lettuce/core/cluster/models/partitions/RedisClusterNode.getNodeId:()Ljava/lang/String;
     118: invokeinterface #30,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     123: pop
     124: goto          32
     127: aload_1
     128: aload         4
     130: invokevirtual #29                 // Method io/lettuce/core/cluster/models/partitions/RedisClusterNode.getNodeId:()Ljava/lang/String;
     133: invokeinterface #30,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     138: pop
     139: goto          32
     142: aload_1
     143: areturn

  private static java.lang.String getNodeIdForNextScanIteration(java.util.List<java.lang.String>, io.lettuce.core.cluster.ClusterScanSupport$ClusterScanCursor);
    Code:
       0: aload_1
       1: invokeinterface #6,  1            // InterfaceMethod io/lettuce/core/cluster/ClusterScanSupport$ClusterScanCursor.isScanOnCurrentNodeFinished:()Z
       6: ifeq          54
       9: aload_1
      10: invokeinterface #31,  1           // InterfaceMethod io/lettuce/core/cluster/ClusterScanSupport$ClusterScanCursor.isFinished:()Z
      15: ifeq          28
      18: new           #32                 // class java/lang/IllegalStateException
      21: dup
      22: ldc           #33                 // String Cluster scan is finished
      24: invokespecial #34                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: aload_1
      30: invokeinterface #35,  1           // InterfaceMethod io/lettuce/core/cluster/ClusterScanSupport$ClusterScanCursor.getCurrentNodeId:()Ljava/lang/String;
      35: invokeinterface #36,  2           // InterfaceMethod java/util/List.indexOf:(Ljava/lang/Object;)I
      40: istore_2
      41: aload_0
      42: iload_2
      43: iconst_1
      44: iadd
      45: invokeinterface #10,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      50: checkcast     #11                 // class java/lang/String
      53: areturn
      54: aload_1
      55: invokeinterface #35,  1           // InterfaceMethod io/lettuce/core/cluster/ClusterScanSupport$ClusterScanCursor.getCurrentNodeId:()Ljava/lang/String;
      60: areturn

  private static void assertClusterScanCursor(io.lettuce.core.ScanCursor);
    Code:
       0: aload_0
       1: instanceof    #5                  // class io/lettuce/core/cluster/ClusterScanSupport$ClusterScanCursor
       4: ifne          17
       7: new           #37                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #38                 // String A scan in Redis Cluster mode requires to reuse the resulting cursor from the previous scan invocation
      13: invokespecial #39                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  private static void assertHasNodes(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: invokeinterface #28,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       6: ifeq          19
       9: new           #40                 // class io/lettuce/core/RedisException
      12: dup
      13: ldc           #41                 // String No available nodes for a scan
      15: invokespecial #42                 // Method io/lettuce/core/RedisException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: return

  static <K> io.lettuce.core.cluster.ClusterScanSupport$ScanCursorMapper<io.lettuce.core.RedisFuture<io.lettuce.core.KeyScanCursor<K>>> asyncClusterKeyScanCursorMapper();
    Code:
       0: getstatic     #43                 // Field futureKeyScanCursorMapper:Lio/lettuce/core/cluster/ClusterScanSupport$ScanCursorMapper;
       3: areturn

  static io.lettuce.core.cluster.ClusterScanSupport$ScanCursorMapper<io.lettuce.core.RedisFuture<io.lettuce.core.StreamScanCursor>> asyncClusterStreamScanCursorMapper();
    Code:
       0: getstatic     #44                 // Field futureStreamScanCursorMapper:Lio/lettuce/core/cluster/ClusterScanSupport$ScanCursorMapper;
       3: areturn

  static <K> io.lettuce.core.cluster.ClusterScanSupport$ScanCursorMapper<reactor.core.publisher.Mono<io.lettuce.core.KeyScanCursor<K>>> reactiveClusterKeyScanCursorMapper();
    Code:
       0: getstatic     #45                 // Field reactiveKeyScanCursorMapper:Lio/lettuce/core/cluster/ClusterScanSupport$ScanCursorMapper;
       3: areturn

  static io.lettuce.core.cluster.ClusterScanSupport$ScanCursorMapper<reactor.core.publisher.Mono<io.lettuce.core.StreamScanCursor>> reactiveClusterStreamScanCursorMapper();
    Code:
       0: getstatic     #46                 // Field reactiveStreamScanCursorMapper:Lio/lettuce/core/cluster/ClusterScanSupport$ScanCursorMapper;
       3: areturn

  private static reactor.core.publisher.Mono lambda$static$2(java.util.List, java.lang.String, reactor.core.publisher.Mono);
    Code:
       0: aload_2
       1: new           #47                 // class io/lettuce/core/cluster/ClusterScanSupport$3
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #48                 // Method io/lettuce/core/cluster/ClusterScanSupport$3."<init>":(Ljava/util/List;Ljava/lang/String;)V
      10: invokevirtual #49                 // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      13: areturn

  private static reactor.core.publisher.Mono lambda$static$1(java.util.List, java.lang.String, reactor.core.publisher.Mono);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokedynamic #50,  0             // InvokeDynamic #0:apply:(Ljava/util/List;Ljava/lang/String;)Ljava/util/function/Function;
       8: invokevirtual #49                 // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      11: areturn

  private static io.lettuce.core.KeyScanCursor lambda$null$0(java.util.List, java.lang.String, io.lettuce.core.KeyScanCursor);
    Code:
       0: new           #51                 // class io/lettuce/core/cluster/ClusterScanSupport$ClusterKeyScanCursor
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #52                 // Method io/lettuce/core/cluster/ClusterScanSupport$ClusterKeyScanCursor."<init>":(Ljava/util/List;Ljava/lang/String;Lio/lettuce/core/KeyScanCursor;)V
      10: areturn

  static {};
    Code:
       0: new           #53                 // class io/lettuce/core/cluster/ClusterScanSupport$1
       3: dup
       4: invokespecial #54                 // Method io/lettuce/core/cluster/ClusterScanSupport$1."<init>":()V
       7: putstatic     #43                 // Field futureKeyScanCursorMapper:Lio/lettuce/core/cluster/ClusterScanSupport$ScanCursorMapper;
      10: new           #55                 // class io/lettuce/core/cluster/ClusterScanSupport$2
      13: dup
      14: invokespecial #56                 // Method io/lettuce/core/cluster/ClusterScanSupport$2."<init>":()V
      17: putstatic     #44                 // Field futureStreamScanCursorMapper:Lio/lettuce/core/cluster/ClusterScanSupport$ScanCursorMapper;
      20: invokedynamic #57,  0             // InvokeDynamic #1:map:()Lio/lettuce/core/cluster/ClusterScanSupport$ScanCursorMapper;
      25: putstatic     #45                 // Field reactiveKeyScanCursorMapper:Lio/lettuce/core/cluster/ClusterScanSupport$ScanCursorMapper;
      28: invokedynamic #58,  0             // InvokeDynamic #2:map:()Lio/lettuce/core/cluster/ClusterScanSupport$ScanCursorMapper;
      33: putstatic     #46                 // Field reactiveStreamScanCursorMapper:Lio/lettuce/core/cluster/ClusterScanSupport$ScanCursorMapper;
      36: return
}
