Compiled from "ReconnectionHandler.java"
class io.lettuce.core.protocol.ReconnectionHandler {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private static final java.util.Set<java.lang.Class<?>> EXECUTION_EXCEPTION_TYPES;

  private final io.lettuce.core.ClientOptions clientOptions;

  private final io.netty.bootstrap.Bootstrap bootstrap;

  private final java.util.function.Supplier<java.net.SocketAddress> socketAddressSupplier;

  private final io.netty.util.Timer timer;

  private final java.util.concurrent.ExecutorService reconnectWorkers;

  private final io.lettuce.core.protocol.ConnectionFacade connectionFacade;

  private java.util.concurrent.TimeUnit timeoutUnit;

  private long timeout;

  private volatile io.netty.channel.ChannelFuture currentFuture;

  private volatile boolean reconnectSuspended;

  io.lettuce.core.protocol.ReconnectionHandler(io.lettuce.core.ClientOptions, io.netty.bootstrap.Bootstrap, java.util.function.Supplier<java.net.SocketAddress>, io.netty.util.Timer, java.util.concurrent.ExecutorService, io.lettuce.core.protocol.ConnectionFacade);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
       8: putfield      #3                  // Field timeoutUnit:Ljava/util/concurrent/TimeUnit;
      11: aload_0
      12: ldc2_w        #4                  // long 60l
      15: putfield      #6                  // Field timeout:J
      18: aload_3
      19: ldc           #7                  // String SocketAddressSupplier must not be null
      21: invokestatic  #8                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      24: aload_2
      25: ldc           #9                  // String Bootstrap must not be null
      27: invokestatic  #8                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      30: aload         4
      32: ldc           #10                 // String Timer must not be null
      34: invokestatic  #8                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      37: aload         5
      39: ldc           #11                 // String ExecutorService must not be null
      41: invokestatic  #8                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      44: aload         6
      46: ldc           #12                 // String ConnectionFacade must not be null
      48: invokestatic  #8                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      51: aload_0
      52: aload_3
      53: putfield      #13                 // Field socketAddressSupplier:Ljava/util/function/Supplier;
      56: aload_0
      57: aload_2
      58: putfield      #14                 // Field bootstrap:Lio/netty/bootstrap/Bootstrap;
      61: aload_0
      62: aload_1
      63: putfield      #15                 // Field clientOptions:Lio/lettuce/core/ClientOptions;
      66: aload_0
      67: aload         4
      69: putfield      #16                 // Field timer:Lio/netty/util/Timer;
      72: aload_0
      73: aload         5
      75: putfield      #17                 // Field reconnectWorkers:Ljava/util/concurrent/ExecutorService;
      78: aload_0
      79: aload         6
      81: putfield      #18                 // Field connectionFacade:Lio/lettuce/core/protocol/ConnectionFacade;
      84: return

  protected io.netty.channel.ChannelFuture reconnect();
    Code:
       0: aload_0
       1: getfield      #13                 // Field socketAddressSupplier:Ljava/util/function/Supplier;
       4: invokeinterface #19,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
       9: checkcast     #20                 // class java/net/SocketAddress
      12: astore_1
      13: getstatic     #21                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      16: ldc           #22                 // String Reconnecting to Redis at {}
      18: aload_1
      19: invokeinterface #23,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      24: aload_0
      25: getfield      #14                 // Field bootstrap:Lio/netty/bootstrap/Bootstrap;
      28: aload_1
      29: invokevirtual #24                 // Method io/netty/bootstrap/Bootstrap.connect:(Ljava/net/SocketAddress;)Lio/netty/channel/ChannelFuture;
      32: astore_2
      33: aload_2
      34: invokeinterface #25,  1           // InterfaceMethod io/netty/channel/ChannelFuture.channel:()Lio/netty/channel/Channel;
      39: invokeinterface #26,  1           // InterfaceMethod io/netty/channel/Channel.newPromise:()Lio/netty/channel/ChannelPromise;
      44: astore_3
      45: aload_3
      46: aload_0
      47: aload_2
      48: invokedynamic #27,  0             // InvokeDynamic #0:operationComplete:(Lio/lettuce/core/protocol/ReconnectionHandler;Lio/netty/channel/ChannelFuture;)Lio/netty/util/concurrent/GenericFutureListener;
      53: invokeinterface #28,  2           // InterfaceMethod io/netty/channel/ChannelPromise.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelPromise;
      58: pop
      59: aload_2
      60: aload_0
      61: aload_3
      62: aload_1
      63: invokedynamic #29,  0             // InvokeDynamic #1:operationComplete:(Lio/lettuce/core/protocol/ReconnectionHandler;Lio/netty/channel/ChannelPromise;Ljava/net/SocketAddress;)Lio/netty/util/concurrent/GenericFutureListener;
      68: invokeinterface #30,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      73: pop
      74: aload_0
      75: aload_3
      76: invokedynamic #31,  0             // InvokeDynamic #2:run:(Lio/lettuce/core/protocol/ReconnectionHandler;Lio/netty/channel/ChannelPromise;)Ljava/lang/Runnable;
      81: astore        4
      83: aload_0
      84: getfield      #16                 // Field timer:Lio/netty/util/Timer;
      87: aload_0
      88: aload_2
      89: aload_3
      90: aload         4
      92: invokedynamic #32,  0             // InvokeDynamic #3:run:(Lio/lettuce/core/protocol/ReconnectionHandler;Lio/netty/channel/ChannelFuture;Lio/netty/channel/ChannelPromise;Ljava/lang/Runnable;)Lio/netty/util/TimerTask;
      97: aload_0
      98: getfield      #6                  // Field timeout:J
     101: aload_0
     102: getfield      #3                  // Field timeoutUnit:Ljava/util/concurrent/TimeUnit;
     105: invokeinterface #33,  5           // InterfaceMethod io/netty/util/Timer.newTimeout:(Lio/netty/util/TimerTask;JLjava/util/concurrent/TimeUnit;)Lio/netty/util/Timeout;
     110: astore        5
     112: aload_3
     113: aload         5
     115: invokedynamic #34,  0             // InvokeDynamic #4:operationComplete:(Lio/netty/util/Timeout;)Lio/netty/util/concurrent/GenericFutureListener;
     120: invokeinterface #28,  2           // InterfaceMethod io/netty/channel/ChannelPromise.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelPromise;
     125: pop
     126: aload_0
     127: aload_3
     128: dup_x1
     129: putfield      #35                 // Field currentFuture:Lio/netty/channel/ChannelFuture;
     132: areturn

  private void close(io.netty.channel.Channel);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokeinterface #36,  1           // InterfaceMethod io/netty/channel/Channel.close:()Lio/netty/channel/ChannelFuture;
      10: pop
      11: return

  boolean isReconnectSuspended();
    Code:
       0: aload_0
       1: getfield      #37                 // Field reconnectSuspended:Z
       4: ireturn

  void setReconnectSuspended(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #37                 // Field reconnectSuspended:Z
       5: return

  long getTimeout();
    Code:
       0: aload_0
       1: getfield      #6                  // Field timeout:J
       4: lreturn

  void setTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #6                  // Field timeout:J
       5: return

  void prepareClose();
    Code:
       0: aload_0
       1: getfield      #35                 // Field currentFuture:Lio/netty/channel/ChannelFuture;
       4: astore_1
       5: aload_1
       6: ifnull        26
       9: aload_1
      10: invokeinterface #38,  1           // InterfaceMethod io/netty/channel/ChannelFuture.isDone:()Z
      15: ifne          26
      18: aload_1
      19: iconst_1
      20: invokeinterface #39,  2           // InterfaceMethod io/netty/channel/ChannelFuture.cancel:(Z)Z
      25: pop
      26: return

  public static boolean isExecutionException(java.lang.Throwable);
    Code:
       0: getstatic     #40                 // Field EXECUTION_EXCEPTION_TYPES:Ljava/util/Set;
       3: invokeinterface #41,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       8: astore_1
       9: aload_1
      10: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          44
      18: aload_1
      19: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #44                 // class java/lang/Class
      27: astore_2
      28: aload_2
      29: aload_0
      30: invokevirtual #45                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      33: invokevirtual #46                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      36: ifeq          41
      39: iconst_1
      40: ireturn
      41: goto          9
      44: iconst_0
      45: ireturn

  io.lettuce.core.ClientOptions getClientOptions();
    Code:
       0: aload_0
       1: getfield      #15                 // Field clientOptions:Lio/lettuce/core/ClientOptions;
       4: areturn

  private static void lambda$reconnect$5(io.netty.util.Timeout, io.netty.util.concurrent.Future) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokeinterface #47,  1           // InterfaceMethod io/netty/util/Timeout.cancel:()Z
       6: pop
       7: return

  private void lambda$reconnect$4(io.netty.channel.ChannelFuture, io.netty.channel.ChannelPromise, java.lang.Runnable, io.netty.util.Timeout) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #38,  1           // InterfaceMethod io/netty/channel/ChannelFuture.isDone:()Z
       6: ifeq          19
       9: aload_2
      10: invokeinterface #48,  1           // InterfaceMethod io/netty/channel/ChannelPromise.isDone:()Z
      15: ifeq          19
      18: return
      19: aload_0
      20: getfield      #17                 // Field reconnectWorkers:Ljava/util/concurrent/ExecutorService;
      23: invokeinterface #49,  1           // InterfaceMethod java/util/concurrent/ExecutorService.isShutdown:()Z
      28: ifeq          38
      31: aload_3
      32: invokeinterface #50,  1           // InterfaceMethod java/lang/Runnable.run:()V
      37: return
      38: aload_0
      39: getfield      #17                 // Field reconnectWorkers:Ljava/util/concurrent/ExecutorService;
      42: aload_3
      43: invokeinterface #51,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
      48: pop
      49: return

  private void lambda$reconnect$3(io.netty.channel.ChannelPromise);
    Code:
       0: aload_1
       1: new           #52                 // class java/util/concurrent/TimeoutException
       4: dup
       5: ldc           #53                 // String Reconnection attempt exceeded timeout of %d %s
       7: iconst_2
       8: anewarray     #54                 // class java/lang/Object
      11: dup
      12: iconst_0
      13: aload_0
      14: getfield      #6                  // Field timeout:J
      17: invokestatic  #55                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      20: aastore
      21: dup
      22: iconst_1
      23: aload_0
      24: getfield      #3                  // Field timeoutUnit:Ljava/util/concurrent/TimeUnit;
      27: aastore
      28: invokestatic  #56                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      31: invokespecial #57                 // Method java/util/concurrent/TimeoutException."<init>":(Ljava/lang/String;)V
      34: invokeinterface #58,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      39: pop
      40: return

  private void lambda$reconnect$2(io.netty.channel.ChannelPromise, java.net.SocketAddress, io.netty.channel.ChannelFuture) throws java.lang.Exception;
    Code:
       0: aload_3
       1: invokeinterface #59,  1           // InterfaceMethod io/netty/channel/ChannelFuture.cause:()Ljava/lang/Throwable;
       6: ifnull        23
       9: aload_1
      10: aload_3
      11: invokeinterface #59,  1           // InterfaceMethod io/netty/channel/ChannelFuture.cause:()Ljava/lang/Throwable;
      16: invokeinterface #58,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      21: pop
      22: return
      23: aload_3
      24: invokeinterface #25,  1           // InterfaceMethod io/netty/channel/ChannelFuture.channel:()Lio/netty/channel/Channel;
      29: invokeinterface #60,  1           // InterfaceMethod io/netty/channel/Channel.pipeline:()Lio/netty/channel/ChannelPipeline;
      34: astore        4
      36: aload         4
      38: ldc           #61                 // class io/lettuce/core/RedisChannelInitializer
      40: invokeinterface #62,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.get:(Ljava/lang/Class;)Lio/netty/channel/ChannelHandler;
      45: checkcast     #61                 // class io/lettuce/core/RedisChannelInitializer
      48: astore        5
      50: aload         5
      52: ifnonnull     72
      55: aload_1
      56: new           #63                 // class java/lang/IllegalStateException
      59: dup
      60: ldc           #64                 // String Reconnection attempt without a RedisChannelInitializer in the channel pipeline
      62: invokespecial #65                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      65: invokeinterface #58,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      70: pop
      71: return
      72: aload         5
      74: invokeinterface #66,  1           // InterfaceMethod io/lettuce/core/RedisChannelInitializer.channelInitialized:()Ljava/util/concurrent/CompletableFuture;
      79: aload_0
      80: aload_1
      81: aload_2
      82: aload_3
      83: invokedynamic #67,  0             // InvokeDynamic #5:accept:(Lio/lettuce/core/protocol/ReconnectionHandler;Lio/netty/channel/ChannelPromise;Ljava/net/SocketAddress;Lio/netty/channel/ChannelFuture;)Ljava/util/function/BiConsumer;
      88: invokevirtual #68                 // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
      91: pop
      92: return

  private void lambda$null$1(io.netty.channel.ChannelPromise, java.net.SocketAddress, io.netty.channel.ChannelFuture, java.lang.Boolean, java.lang.Throwable);
    Code:
       0: aload         5
       2: ifnull        79
       5: aload         5
       7: invokestatic  #69                 // Method isExecutionException:(Ljava/lang/Throwable;)Z
      10: ifeq          23
      13: aload_1
      14: aload         5
      16: invokeinterface #58,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      21: pop
      22: return
      23: aload_0
      24: getfield      #15                 // Field clientOptions:Lio/lettuce/core/ClientOptions;
      27: invokevirtual #70                 // Method io/lettuce/core/ClientOptions.isCancelCommandsOnReconnectFailure:()Z
      30: ifeq          42
      33: aload_0
      34: getfield      #18                 // Field connectionFacade:Lio/lettuce/core/protocol/ConnectionFacade;
      37: invokeinterface #71,  1           // InterfaceMethod io/lettuce/core/protocol/ConnectionFacade.reset:()V
      42: aload_0
      43: getfield      #15                 // Field clientOptions:Lio/lettuce/core/ClientOptions;
      46: invokevirtual #72                 // Method io/lettuce/core/ClientOptions.isSuspendReconnectOnProtocolFailure:()Z
      49: ifeq          69
      52: getstatic     #21                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      55: ldc           #73                 // String Disabling autoReconnect due to initialization failure
      57: aload         5
      59: invokeinterface #74,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      64: aload_0
      65: iconst_1
      66: invokevirtual #75                 // Method setReconnectSuspended:(Z)V
      69: aload_1
      70: aload         5
      72: invokeinterface #58,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      77: pop
      78: return
      79: getstatic     #21                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      82: invokeinterface #76,  1           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isDebugEnabled:()Z
      87: ifeq          113
      90: getstatic     #21                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      93: ldc           #77                 // String Reconnected to {}, Channel {}
      95: aload_2
      96: aload_3
      97: invokeinterface #25,  1           // InterfaceMethod io/netty/channel/ChannelFuture.channel:()Lio/netty/channel/Channel;
     102: invokestatic  #78                 // Method io/lettuce/core/protocol/ChannelLogDescriptor.logDescriptor:(Lio/netty/channel/Channel;)Ljava/lang/String;
     105: invokeinterface #79,  4           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     110: goto          124
     113: getstatic     #21                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
     116: ldc           #80                 // String Reconnected to {}
     118: aload_2
     119: invokeinterface #81,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.info:(Ljava/lang/String;Ljava/lang/Object;)V
     124: aload_1
     125: invokeinterface #82,  1           // InterfaceMethod io/netty/channel/ChannelPromise.trySuccess:()Z
     130: pop
     131: return

  private void lambda$reconnect$0(io.netty.channel.ChannelFuture, io.netty.channel.ChannelFuture) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokeinterface #59,  1           // InterfaceMethod io/netty/channel/ChannelFuture.cause:()Ljava/lang/Throwable;
       6: ifnull        27
       9: aload_1
      10: iconst_1
      11: invokeinterface #39,  2           // InterfaceMethod io/netty/channel/ChannelFuture.cancel:(Z)Z
      16: pop
      17: aload_0
      18: aload_2
      19: invokeinterface #25,  1           // InterfaceMethod io/netty/channel/ChannelFuture.channel:()Lio/netty/channel/Channel;
      24: invokespecial #83                 // Method close:(Lio/netty/channel/Channel;)V
      27: return

  static {};
    Code:
       0: ldc           #84                 // class io/lettuce/core/protocol/ReconnectionHandler
       2: invokestatic  #85                 // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
       5: putstatic     #21                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       8: iconst_4
       9: anewarray     #44                 // class java/lang/Class
      12: dup
      13: iconst_0
      14: ldc           #52                 // class java/util/concurrent/TimeoutException
      16: aastore
      17: dup
      18: iconst_1
      19: ldc           #86                 // class java/util/concurrent/CancellationException
      21: aastore
      22: dup
      23: iconst_2
      24: ldc           #87                 // class io/lettuce/core/RedisCommandTimeoutException
      26: aastore
      27: dup
      28: iconst_3
      29: ldc           #88                 // class java/net/ConnectException
      31: aastore
      32: invokestatic  #89                 // Method io/lettuce/core/internal/LettuceSets.unmodifiableSet:([Ljava/lang/Object;)Ljava/util/Set;
      35: putstatic     #40                 // Field EXECUTION_EXCEPTION_TYPES:Ljava/util/Set;
      38: return
}
