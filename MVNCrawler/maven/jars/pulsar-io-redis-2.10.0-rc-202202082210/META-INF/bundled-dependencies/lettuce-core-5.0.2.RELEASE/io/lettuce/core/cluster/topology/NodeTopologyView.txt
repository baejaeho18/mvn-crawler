Compiled from "NodeTopologyView.java"
class io.lettuce.core.cluster.topology.NodeTopologyView {
  private final boolean available;

  private final io.lettuce.core.RedisURI redisURI;

  private io.lettuce.core.cluster.models.partitions.Partitions partitions;

  private final int connectedClients;

  private final long latency;

  private final java.lang.String clusterNodes;

  private final java.lang.String clientList;

  io.lettuce.core.cluster.topology.NodeTopologyView(io.lettuce.core.RedisURI);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field available:Z
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field redisURI:Lio/lettuce/core/RedisURI;
      14: aload_0
      15: new           #4                  // class io/lettuce/core/cluster/models/partitions/Partitions
      18: dup
      19: invokespecial #5                  // Method io/lettuce/core/cluster/models/partitions/Partitions."<init>":()V
      22: putfield      #6                  // Field partitions:Lio/lettuce/core/cluster/models/partitions/Partitions;
      25: aload_0
      26: iconst_0
      27: putfield      #7                  // Field connectedClients:I
      30: aload_0
      31: aconst_null
      32: putfield      #8                  // Field clusterNodes:Ljava/lang/String;
      35: aload_0
      36: aconst_null
      37: putfield      #9                  // Field clientList:Ljava/lang/String;
      40: aload_0
      41: lconst_0
      42: putfield      #10                 // Field latency:J
      45: return

  io.lettuce.core.cluster.topology.NodeTopologyView(io.lettuce.core.RedisURI, java.lang.String, java.lang.String, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field available:Z
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field redisURI:Lio/lettuce/core/RedisURI;
      14: aload_0
      15: aload_2
      16: invokestatic  #11                 // Method io/lettuce/core/cluster/models/partitions/ClusterPartitionParser.parse:(Ljava/lang/String;)Lio/lettuce/core/cluster/models/partitions/Partitions;
      19: putfield      #6                  // Field partitions:Lio/lettuce/core/cluster/models/partitions/Partitions;
      22: aload_0
      23: aload_0
      24: aload_3
      25: invokespecial #12                 // Method getClients:(Ljava/lang/String;)I
      28: putfield      #7                  // Field connectedClients:I
      31: aload_0
      32: aload_2
      33: putfield      #8                  // Field clusterNodes:Ljava/lang/String;
      36: aload_0
      37: aload_3
      38: putfield      #9                  // Field clientList:Ljava/lang/String;
      41: aload_0
      42: lload         4
      44: putfield      #10                 // Field latency:J
      47: aload_0
      48: invokespecial #13                 // Method getOwnPartition:()Lio/lettuce/core/cluster/models/partitions/RedisClusterNode;
      51: aload_1
      52: invokevirtual #14                 // Method io/lettuce/core/cluster/models/partitions/RedisClusterNode.setUri:(Lio/lettuce/core/RedisURI;)V
      55: return

  static io.lettuce.core.cluster.topology.NodeTopologyView from(io.lettuce.core.RedisURI, io.lettuce.core.cluster.topology.Requests, io.lettuce.core.cluster.topology.Requests) throws java.util.concurrent.ExecutionException, java.lang.InterruptedException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #15                 // Method io/lettuce/core/cluster/topology/Requests.getRequest:(Lio/lettuce/core/RedisURI;)Lio/lettuce/core/cluster/topology/TimedAsyncCommand;
       5: astore_3
       6: aload_2
       7: aload_0
       8: invokevirtual #15                 // Method io/lettuce/core/cluster/topology/Requests.getRequest:(Lio/lettuce/core/RedisURI;)Lio/lettuce/core/cluster/topology/TimedAsyncCommand;
      11: astore        4
      13: aload_3
      14: invokestatic  #16                 // Method resultAvailable:(Lio/lettuce/core/RedisFuture;)Z
      17: ifeq          56
      20: aload         4
      22: invokestatic  #16                 // Method resultAvailable:(Lio/lettuce/core/RedisFuture;)Z
      25: ifeq          56
      28: new           #17                 // class io/lettuce/core/cluster/topology/NodeTopologyView
      31: dup
      32: aload_0
      33: aload_3
      34: invokevirtual #18                 // Method io/lettuce/core/cluster/topology/TimedAsyncCommand.get:()Ljava/lang/Object;
      37: checkcast     #19                 // class java/lang/String
      40: aload         4
      42: invokevirtual #18                 // Method io/lettuce/core/cluster/topology/TimedAsyncCommand.get:()Ljava/lang/Object;
      45: checkcast     #19                 // class java/lang/String
      48: aload_3
      49: invokevirtual #20                 // Method io/lettuce/core/cluster/topology/TimedAsyncCommand.duration:()J
      52: invokespecial #21                 // Method "<init>":(Lio/lettuce/core/RedisURI;Ljava/lang/String;Ljava/lang/String;J)V
      55: areturn
      56: new           #17                 // class io/lettuce/core/cluster/topology/NodeTopologyView
      59: dup
      60: aload_0
      61: invokespecial #22                 // Method "<init>":(Lio/lettuce/core/RedisURI;)V
      64: areturn

  static boolean resultAvailable(io.lettuce.core.RedisFuture<?>);
    Code:
       0: aload_0
       1: ifnull        24
       4: aload_0
       5: invokeinterface #23,  1           // InterfaceMethod io/lettuce/core/RedisFuture.isDone:()Z
      10: ifeq          24
      13: aload_0
      14: invokeinterface #24,  1           // InterfaceMethod io/lettuce/core/RedisFuture.isCancelled:()Z
      19: ifne          24
      22: iconst_1
      23: ireturn
      24: iconst_0
      25: ireturn

  private int getClients(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #25                 // Method java/lang/String.trim:()Ljava/lang/String;
       4: ldc           #26                 // String \\n
       6: invokevirtual #27                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       9: arraylength
      10: ireturn

  long getLatency();
    Code:
       0: aload_0
       1: getfield      #10                 // Field latency:J
       4: lreturn

  boolean isAvailable();
    Code:
       0: aload_0
       1: getfield      #2                  // Field available:Z
       4: ireturn

  io.lettuce.core.cluster.models.partitions.Partitions getPartitions();
    Code:
       0: aload_0
       1: getfield      #6                  // Field partitions:Lio/lettuce/core/cluster/models/partitions/Partitions;
       4: areturn

  int getConnectedClients();
    Code:
       0: aload_0
       1: getfield      #7                  // Field connectedClients:I
       4: ireturn

  java.lang.String getNodeId();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method getOwnPartition:()Lio/lettuce/core/cluster/models/partitions/RedisClusterNode;
       4: invokevirtual #28                 // Method io/lettuce/core/cluster/models/partitions/RedisClusterNode.getNodeId:()Ljava/lang/String;
       7: areturn

  io.lettuce.core.RedisURI getRedisURI();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method getOwnPartition:()Lio/lettuce/core/cluster/models/partitions/RedisClusterNode;
       4: invokevirtual #29                 // Method io/lettuce/core/cluster/models/partitions/RedisClusterNode.getUri:()Lio/lettuce/core/RedisURI;
       7: areturn

  private io.lettuce.core.cluster.models.partitions.RedisClusterNode getOwnPartition();
    Code:
       0: aload_0
       1: getfield      #6                  // Field partitions:Lio/lettuce/core/cluster/models/partitions/Partitions;
       4: invokevirtual #30                 // Method io/lettuce/core/cluster/models/partitions/Partitions.iterator:()Ljava/util/Iterator;
       7: astore_1
       8: aload_1
       9: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          42
      17: aload_1
      18: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #33                 // class io/lettuce/core/cluster/models/partitions/RedisClusterNode
      26: astore_2
      27: aload_2
      28: getstatic     #34                 // Field io/lettuce/core/cluster/models/partitions/RedisClusterNode$NodeFlag.MYSELF:Lio/lettuce/core/cluster/models/partitions/RedisClusterNode$NodeFlag;
      31: invokevirtual #35                 // Method io/lettuce/core/cluster/models/partitions/RedisClusterNode.is:(Lio/lettuce/core/cluster/models/partitions/RedisClusterNode$NodeFlag;)Z
      34: ifeq          39
      37: aload_2
      38: areturn
      39: goto          8
      42: new           #36                 // class java/lang/IllegalStateException
      45: dup
      46: ldc           #37                 // String Cannot determine own partition
      48: invokespecial #38                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      51: athrow

  java.lang.String getClientList();
    Code:
       0: aload_0
       1: getfield      #9                  // Field clientList:Ljava/lang/String;
       4: areturn

  java.lang.String getClusterNodes();
    Code:
       0: aload_0
       1: getfield      #8                  // Field clusterNodes:Ljava/lang/String;
       4: areturn

  void setPartitions(io.lettuce.core.cluster.models.partitions.Partitions);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field partitions:Lio/lettuce/core/cluster/models/partitions/Partitions;
       5: return
}
