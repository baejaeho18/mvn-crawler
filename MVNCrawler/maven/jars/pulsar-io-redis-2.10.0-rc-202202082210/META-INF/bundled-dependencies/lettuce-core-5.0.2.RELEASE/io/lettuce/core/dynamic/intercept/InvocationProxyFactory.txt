Compiled from "InvocationProxyFactory.java"
public class io.lettuce.core.dynamic.intercept.InvocationProxyFactory {
  private final java.util.List<io.lettuce.core.dynamic.intercept.MethodInterceptor> interceptors;

  private final java.util.List<java.lang.Class<?>> interfaces;

  public io.lettuce.core.dynamic.intercept.InvocationProxyFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field interceptors:Ljava/util/List;
      15: aload_0
      16: new           #2                  // class java/util/ArrayList
      19: dup
      20: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      23: putfield      #5                  // Field interfaces:Ljava/util/List;
      26: return

  public <T> T createProxy(java.lang.ClassLoader);
    Code:
       0: aload_1
       1: ldc           #6                  // String ClassLoader must not be null
       3: invokestatic  #7                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #5                  // Field interfaces:Ljava/util/List;
      10: iconst_0
      11: anewarray     #8                  // class java/lang/Class
      14: invokeinterface #9,  2            // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      19: checkcast     #10                 // class "[Ljava/lang/Class;"
      22: astore_2
      23: aload_1
      24: aload_2
      25: new           #11                 // class io/lettuce/core/dynamic/intercept/InvocationProxyFactory$InterceptorChainInvocationHandler
      28: dup
      29: aload_0
      30: getfield      #4                  // Field interceptors:Ljava/util/List;
      33: invokespecial #12                 // Method io/lettuce/core/dynamic/intercept/InvocationProxyFactory$InterceptorChainInvocationHandler."<init>":(Ljava/util/List;)V
      36: invokestatic  #13                 // Method java/lang/reflect/Proxy.newProxyInstance:(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;
      39: areturn

  public void addInterface(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #14                 // String Interface type must not be null
       3: invokestatic  #7                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokevirtual #15                 // Method java/lang/Class.isInterface:()Z
      10: ldc           #16                 // String Type must be an interface
      12: invokestatic  #17                 // Method io/lettuce/core/internal/LettuceAssert.isTrue:(ZLjava/lang/String;)V
      15: aload_0
      16: getfield      #5                  // Field interfaces:Ljava/util/List;
      19: aload_1
      20: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      25: pop
      26: return

  public void addInterceptor(io.lettuce.core.dynamic.intercept.MethodInterceptor);
    Code:
       0: aload_1
       1: ldc           #19                 // String MethodInterceptor must not be null
       3: invokestatic  #7                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #4                  // Field interceptors:Ljava/util/List;
      10: aload_1
      11: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      16: pop
      17: return
}
