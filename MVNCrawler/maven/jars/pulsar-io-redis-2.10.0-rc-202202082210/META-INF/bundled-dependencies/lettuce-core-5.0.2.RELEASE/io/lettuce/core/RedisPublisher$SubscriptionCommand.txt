Compiled from "RedisPublisher.java"
class io.lettuce.core.RedisPublisher$SubscriptionCommand<K, V, T> extends io.lettuce.core.protocol.CommandWrapper<K, V, T> implements io.lettuce.core.protocol.DemandAware$Sink {
  private final boolean dissolve;

  private final io.lettuce.core.RedisPublisher$RedisSubscription<T> subscription;

  private volatile boolean completed;

  private volatile io.lettuce.core.protocol.DemandAware$Source source;

  public io.lettuce.core.RedisPublisher$SubscriptionCommand(io.lettuce.core.protocol.RedisCommand<K, V, T>, io.lettuce.core.RedisPublisher$RedisSubscription<T>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method io/lettuce/core/protocol/CommandWrapper."<init>":(Lio/lettuce/core/protocol/RedisCommand;)V
       5: aload_0
       6: iconst_0
       7: putfield      #3                  // Field completed:Z
      10: aload_0
      11: aload_2
      12: putfield      #4                  // Field subscription:Lio/lettuce/core/RedisPublisher$RedisSubscription;
      15: aload_0
      16: iload_3
      17: putfield      #5                  // Field dissolve:Z
      20: return

  public boolean hasDemand();
    Code:
       0: aload_0
       1: getfield      #3                  // Field completed:Z
       4: ifne          35
       7: aload_0
       8: getfield      #4                  // Field subscription:Lio/lettuce/core/RedisPublisher$RedisSubscription;
      11: invokevirtual #6                  // Method io/lettuce/core/RedisPublisher$RedisSubscription.state:()Lio/lettuce/core/RedisPublisher$State;
      14: getstatic     #7                  // Field io/lettuce/core/RedisPublisher$State.COMPLETED:Lio/lettuce/core/RedisPublisher$State;
      17: if_acmpeq     35
      20: aload_0
      21: getfield      #4                  // Field subscription:Lio/lettuce/core/RedisPublisher$RedisSubscription;
      24: getfield      #8                  // Field io/lettuce/core/RedisPublisher$RedisSubscription.data:Ljava/util/Queue;
      27: invokeinterface #9,  1            // InterfaceMethod java/util/Queue.isEmpty:()Z
      32: ifeq          39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: ireturn

  public void complete();
    Code:
       0: aload_0
       1: getfield      #3                  // Field completed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: invokespecial #10                 // Method io/lettuce/core/protocol/CommandWrapper.complete:()V
      12: aload_0
      13: invokevirtual #11                 // Method getOutput:()Lio/lettuce/core/output/CommandOutput;
      16: ifnull        151
      19: aload_0
      20: invokevirtual #11                 // Method getOutput:()Lio/lettuce/core/output/CommandOutput;
      23: invokevirtual #12                 // Method io/lettuce/core/output/CommandOutput.get:()Ljava/lang/Object;
      26: astore_1
      27: aload_0
      28: invokevirtual #11                 // Method getOutput:()Lio/lettuce/core/output/CommandOutput;
      31: invokevirtual #13                 // Method io/lettuce/core/output/CommandOutput.hasError:()Z
      34: ifeq          66
      37: aload_0
      38: new           #14                 // class io/lettuce/core/RedisCommandExecutionException
      41: dup
      42: aload_0
      43: invokevirtual #11                 // Method getOutput:()Lio/lettuce/core/output/CommandOutput;
      46: invokevirtual #15                 // Method io/lettuce/core/output/CommandOutput.getError:()Ljava/lang/String;
      49: invokespecial #16                 // Method io/lettuce/core/RedisCommandExecutionException."<init>":(Ljava/lang/String;)V
      52: invokespecial #17                 // Method onError:(Ljava/lang/Throwable;)V
      55: aload_0
      56: iconst_1
      57: putfield      #3                  // Field completed:Z
      60: aload_0
      61: iconst_1
      62: putfield      #3                  // Field completed:Z
      65: return
      66: aload_0
      67: invokevirtual #11                 // Method getOutput:()Lio/lettuce/core/output/CommandOutput;
      70: instanceof    #18                 // class io/lettuce/core/output/StreamingOutput
      73: ifne          151
      76: aload_1
      77: ifnull        151
      80: aload_0
      81: getfield      #5                  // Field dissolve:Z
      84: ifeq          143
      87: aload_1
      88: instanceof    #19                 // class java/util/Collection
      91: ifeq          143
      94: aload_1
      95: checkcast     #19                 // class java/util/Collection
      98: astore_2
      99: aload_2
     100: invokeinterface #20,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     105: astore_3
     106: aload_3
     107: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     112: ifeq          140
     115: aload_3
     116: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     121: astore        4
     123: aload         4
     125: ifnull        137
     128: aload_0
     129: getfield      #4                  // Field subscription:Lio/lettuce/core/RedisPublisher$RedisSubscription;
     132: aload         4
     134: invokevirtual #23                 // Method io/lettuce/core/RedisPublisher$RedisSubscription.onNext:(Ljava/lang/Object;)V
     137: goto          106
     140: goto          151
     143: aload_0
     144: getfield      #4                  // Field subscription:Lio/lettuce/core/RedisPublisher$RedisSubscription;
     147: aload_1
     148: invokevirtual #23                 // Method io/lettuce/core/RedisPublisher$RedisSubscription.onNext:(Ljava/lang/Object;)V
     151: aload_0
     152: getfield      #4                  // Field subscription:Lio/lettuce/core/RedisPublisher$RedisSubscription;
     155: invokevirtual #24                 // Method io/lettuce/core/RedisPublisher$RedisSubscription.onAllDataRead:()V
     158: aload_0
     159: iconst_1
     160: putfield      #3                  // Field completed:Z
     163: goto          176
     166: astore        5
     168: aload_0
     169: iconst_1
     170: putfield      #3                  // Field completed:Z
     173: aload         5
     175: athrow
     176: return
    Exception table:
       from    to  target type
           8    60   166   any
          66   158   166   any
         166   168   166   any

  public void setSource(io.lettuce.core.protocol.DemandAware$Source);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field source:Lio/lettuce/core/protocol/DemandAware$Source;
       5: return

  public void removeSource();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #1                  // Field source:Lio/lettuce/core/protocol/DemandAware$Source;
       5: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #3                  // Field completed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: invokespecial #25                 // Method io/lettuce/core/protocol/CommandWrapper.cancel:()V
      12: aload_0
      13: iconst_1
      14: putfield      #3                  // Field completed:Z
      17: return

  public boolean completeExceptionally(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #3                  // Field completed:Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: aload_1
      11: invokespecial #26                 // Method io/lettuce/core/protocol/CommandWrapper.completeExceptionally:(Ljava/lang/Throwable;)Z
      14: istore_2
      15: aload_0
      16: aload_1
      17: invokespecial #17                 // Method onError:(Ljava/lang/Throwable;)V
      20: aload_0
      21: iconst_1
      22: putfield      #3                  // Field completed:Z
      25: iload_2
      26: ireturn

  private void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #4                  // Field subscription:Lio/lettuce/core/RedisPublisher$RedisSubscription;
       4: aload_1
       5: invokevirtual #27                 // Method io/lettuce/core/RedisPublisher$RedisSubscription.onError:(Ljava/lang/Throwable;)V
       8: return

  static io.lettuce.core.protocol.DemandAware$Source access$300(io.lettuce.core.RedisPublisher$SubscriptionCommand);
    Code:
       0: aload_0
       1: getfield      #1                  // Field source:Lio/lettuce/core/protocol/DemandAware$Source;
       4: areturn
}
