Compiled from "Executions.java"
public interface io.lettuce.core.cluster.api.sync.Executions<T> extends java.lang.Iterable<T> {
  public abstract java.util.Map<io.lettuce.core.cluster.models.partitions.RedisClusterNode, T> asMap();

  public abstract java.util.Collection<io.lettuce.core.cluster.models.partitions.RedisClusterNode> nodes();

  public abstract T get(io.lettuce.core.cluster.models.partitions.RedisClusterNode);

  public default java.util.Iterator<T> iterator();
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod asMap:()Ljava/util/Map;
       6: invokeinterface #2,  1            // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      11: invokeinterface #3,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      16: areturn

  public default java.util.Spliterator<T> spliterator();
    Code:
       0: aload_0
       1: invokeinterface #4,  1            // InterfaceMethod iterator:()Ljava/util/Iterator;
       6: aload_0
       7: invokeinterface #5,  1            // InterfaceMethod nodes:()Ljava/util/Collection;
      12: invokeinterface #6,  1            // InterfaceMethod java/util/Collection.size:()I
      17: i2l
      18: iconst_0
      19: invokestatic  #7                  // Method java/util/Spliterators.spliterator:(Ljava/util/Iterator;JI)Ljava/util/Spliterator;
      22: areturn

  public default java.util.stream.Stream<T> stream();
    Code:
       0: aload_0
       1: invokeinterface #8,  1            // InterfaceMethod spliterator:()Ljava/util/Spliterator;
       6: iconst_0
       7: invokestatic  #9                  // Method java/util/stream/StreamSupport.stream:(Ljava/util/Spliterator;Z)Ljava/util/stream/Stream;
      10: areturn
}
