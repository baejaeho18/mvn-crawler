Compiled from "Range.java"
public class io.lettuce.core.Range<T> {
  private io.lettuce.core.Range$Boundary<T> lower;

  private io.lettuce.core.Range$Boundary<T> upper;

  private io.lettuce.core.Range(io.lettuce.core.Range$Boundary<T>, io.lettuce.core.Range$Boundary<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Lower boundary must not be null
       7: invokestatic  #3                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_2
      11: ldc           #4                  // String Upper boundary must not be null
      13: invokestatic  #3                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_0
      17: aload_1
      18: putfield      #5                  // Field lower:Lio/lettuce/core/Range$Boundary;
      21: aload_0
      22: aload_2
      23: putfield      #6                  // Field upper:Lio/lettuce/core/Range$Boundary;
      26: return

  public static <T> io.lettuce.core.Range<T> create(T, T);
    Code:
       0: aload_0
       1: instanceof    #7                  // class io/lettuce/core/Range$Boundary
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #8                  // String Lower must not be a Boundary. Use #from(Boundary, Boundary) instead
      14: invokestatic  #9                  // Method io/lettuce/core/internal/LettuceAssert.isTrue:(ZLjava/lang/String;)V
      17: aload_1
      18: instanceof    #7                  // class io/lettuce/core/Range$Boundary
      21: ifne          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ldc           #10                 // String Upper must not be a Boundary. Use #from(Boundary, Boundary) instead
      31: invokestatic  #9                  // Method io/lettuce/core/internal/LettuceAssert.isTrue:(ZLjava/lang/String;)V
      34: new           #11                 // class io/lettuce/core/Range
      37: dup
      38: aload_0
      39: invokestatic  #12                 // Method io/lettuce/core/Range$Boundary.including:(Ljava/lang/Object;)Lio/lettuce/core/Range$Boundary;
      42: aload_1
      43: invokestatic  #12                 // Method io/lettuce/core/Range$Boundary.including:(Ljava/lang/Object;)Lio/lettuce/core/Range$Boundary;
      46: invokespecial #13                 // Method "<init>":(Lio/lettuce/core/Range$Boundary;Lio/lettuce/core/Range$Boundary;)V
      49: areturn

  public static <T> io.lettuce.core.Range<T> from(io.lettuce.core.Range$Boundary<T>, io.lettuce.core.Range$Boundary<T>);
    Code:
       0: new           #11                 // class io/lettuce/core/Range
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #13                 // Method "<init>":(Lio/lettuce/core/Range$Boundary;Lio/lettuce/core/Range$Boundary;)V
       9: areturn

  public static <T> io.lettuce.core.Range<T> unbounded();
    Code:
       0: new           #11                 // class io/lettuce/core/Range
       3: dup
       4: invokestatic  #14                 // Method io/lettuce/core/Range$Boundary.unbounded:()Lio/lettuce/core/Range$Boundary;
       7: invokestatic  #14                 // Method io/lettuce/core/Range$Boundary.unbounded:()Lio/lettuce/core/Range$Boundary;
      10: invokespecial #13                 // Method "<init>":(Lio/lettuce/core/Range$Boundary;Lio/lettuce/core/Range$Boundary;)V
      13: areturn

  public io.lettuce.core.Range<T> gte(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #12                 // Method io/lettuce/core/Range$Boundary.including:(Ljava/lang/Object;)Lio/lettuce/core/Range$Boundary;
       5: putfield      #5                  // Field lower:Lio/lettuce/core/Range$Boundary;
       8: aload_0
       9: areturn

  public io.lettuce.core.Range<T> gt(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #15                 // Method io/lettuce/core/Range$Boundary.excluding:(Ljava/lang/Object;)Lio/lettuce/core/Range$Boundary;
       5: putfield      #5                  // Field lower:Lio/lettuce/core/Range$Boundary;
       8: aload_0
       9: areturn

  public io.lettuce.core.Range<T> lte(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #12                 // Method io/lettuce/core/Range$Boundary.including:(Ljava/lang/Object;)Lio/lettuce/core/Range$Boundary;
       5: putfield      #6                  // Field upper:Lio/lettuce/core/Range$Boundary;
       8: aload_0
       9: areturn

  public io.lettuce.core.Range<T> lt(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #15                 // Method io/lettuce/core/Range$Boundary.excluding:(Ljava/lang/Object;)Lio/lettuce/core/Range$Boundary;
       5: putfield      #6                  // Field upper:Lio/lettuce/core/Range$Boundary;
       8: aload_0
       9: areturn

  public io.lettuce.core.Range$Boundary<T> getLower();
    Code:
       0: aload_0
       1: getfield      #5                  // Field lower:Lio/lettuce/core/Range$Boundary;
       4: areturn

  public io.lettuce.core.Range$Boundary<T> getUpper();
    Code:
       0: aload_0
       1: getfield      #6                  // Field upper:Lio/lettuce/core/Range$Boundary;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #16                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      13: invokevirtual #19                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      16: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #21                 // String  [
      21: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: pop
      25: aload_1
      26: aload_0
      27: getfield      #5                  // Field lower:Lio/lettuce/core/Range$Boundary;
      30: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      33: ldc           #23                 // String  to
      35: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: getfield      #6                  // Field upper:Lio/lettuce/core/Range$Boundary;
      42: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      45: ldc           #24                 // String ]
      47: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: pop
      51: aload_1
      52: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: areturn
}
