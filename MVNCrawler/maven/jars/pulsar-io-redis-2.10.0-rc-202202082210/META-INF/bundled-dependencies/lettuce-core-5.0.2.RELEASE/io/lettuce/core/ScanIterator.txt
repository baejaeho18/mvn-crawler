Compiled from "ScanIterator.java"
public abstract class io.lettuce.core.ScanIterator<T> implements java.util.Iterator<T> {
  private io.lettuce.core.ScanIterator();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static <K, V> io.lettuce.core.ScanIterator<K> scan(io.lettuce.core.api.sync.RedisKeyCommands<K, V>);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method java/util/Optional.empty:()Ljava/util/Optional;
       4: invokestatic  #4                  // Method scan:(Lio/lettuce/core/api/sync/RedisKeyCommands;Ljava/util/Optional;)Lio/lettuce/core/ScanIterator;
       7: areturn

  public static <K, V> io.lettuce.core.ScanIterator<K> scan(io.lettuce.core.api.sync.RedisKeyCommands<K, V>, io.lettuce.core.ScanArgs);
    Code:
       0: aload_1
       1: ldc           #5                  // String ScanArgs must not be null
       3: invokestatic  #6                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokestatic  #7                  // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      11: invokestatic  #4                  // Method scan:(Lio/lettuce/core/api/sync/RedisKeyCommands;Ljava/util/Optional;)Lio/lettuce/core/ScanIterator;
      14: areturn

  private static <K, V> io.lettuce.core.ScanIterator<K> scan(io.lettuce.core.api.sync.RedisKeyCommands<K, V>, java.util.Optional<io.lettuce.core.ScanArgs>);
    Code:
       0: aload_0
       1: ldc           #8                  // String RedisKeyCommands must not be null
       3: invokestatic  #6                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #9                  // class io/lettuce/core/ScanIterator$1
       9: dup
      10: aload_1
      11: aload_0
      12: invokespecial #10                 // Method io/lettuce/core/ScanIterator$1."<init>":(Ljava/util/Optional;Lio/lettuce/core/api/sync/RedisKeyCommands;)V
      15: areturn

  public static <K, V> io.lettuce.core.ScanIterator<io.lettuce.core.KeyValue<K, V>> hscan(io.lettuce.core.api.sync.RedisHashCommands<K, V>, K);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3                  // Method java/util/Optional.empty:()Ljava/util/Optional;
       5: invokestatic  #11                 // Method hscan:(Lio/lettuce/core/api/sync/RedisHashCommands;Ljava/lang/Object;Ljava/util/Optional;)Lio/lettuce/core/ScanIterator;
       8: areturn

  public static <K, V> io.lettuce.core.ScanIterator<io.lettuce.core.KeyValue<K, V>> hscan(io.lettuce.core.api.sync.RedisHashCommands<K, V>, K, io.lettuce.core.ScanArgs);
    Code:
       0: aload_2
       1: ldc           #5                  // String ScanArgs must not be null
       3: invokestatic  #6                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokestatic  #7                  // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      12: invokestatic  #11                 // Method hscan:(Lio/lettuce/core/api/sync/RedisHashCommands;Ljava/lang/Object;Ljava/util/Optional;)Lio/lettuce/core/ScanIterator;
      15: areturn

  private static <K, V> io.lettuce.core.ScanIterator<io.lettuce.core.KeyValue<K, V>> hscan(io.lettuce.core.api.sync.RedisHashCommands<K, V>, K, java.util.Optional<io.lettuce.core.ScanArgs>);
    Code:
       0: aload_0
       1: ldc           #8                  // String RedisKeyCommands must not be null
       3: invokestatic  #6                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #12                 // String Key must not be null
       9: invokestatic  #6                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: new           #13                 // class io/lettuce/core/ScanIterator$2
      15: dup
      16: aload_2
      17: aload_0
      18: aload_1
      19: invokespecial #14                 // Method io/lettuce/core/ScanIterator$2."<init>":(Ljava/util/Optional;Lio/lettuce/core/api/sync/RedisHashCommands;Ljava/lang/Object;)V
      22: areturn

  public static <K, V> io.lettuce.core.ScanIterator<V> sscan(io.lettuce.core.api.sync.RedisSetCommands<K, V>, K);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3                  // Method java/util/Optional.empty:()Ljava/util/Optional;
       5: invokestatic  #15                 // Method sscan:(Lio/lettuce/core/api/sync/RedisSetCommands;Ljava/lang/Object;Ljava/util/Optional;)Lio/lettuce/core/ScanIterator;
       8: areturn

  public static <K, V> io.lettuce.core.ScanIterator<V> sscan(io.lettuce.core.api.sync.RedisSetCommands<K, V>, K, io.lettuce.core.ScanArgs);
    Code:
       0: aload_2
       1: ldc           #5                  // String ScanArgs must not be null
       3: invokestatic  #6                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokestatic  #7                  // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      12: invokestatic  #15                 // Method sscan:(Lio/lettuce/core/api/sync/RedisSetCommands;Ljava/lang/Object;Ljava/util/Optional;)Lio/lettuce/core/ScanIterator;
      15: areturn

  private static <K, V> io.lettuce.core.ScanIterator<V> sscan(io.lettuce.core.api.sync.RedisSetCommands<K, V>, K, java.util.Optional<io.lettuce.core.ScanArgs>);
    Code:
       0: aload_0
       1: ldc           #8                  // String RedisKeyCommands must not be null
       3: invokestatic  #6                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #12                 // String Key must not be null
       9: invokestatic  #6                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: new           #16                 // class io/lettuce/core/ScanIterator$3
      15: dup
      16: aload_2
      17: aload_0
      18: aload_1
      19: invokespecial #17                 // Method io/lettuce/core/ScanIterator$3."<init>":(Ljava/util/Optional;Lio/lettuce/core/api/sync/RedisSetCommands;Ljava/lang/Object;)V
      22: areturn

  public static <K, V> io.lettuce.core.ScanIterator<io.lettuce.core.ScoredValue<V>> zscan(io.lettuce.core.api.sync.RedisSortedSetCommands<K, V>, K);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3                  // Method java/util/Optional.empty:()Ljava/util/Optional;
       5: invokestatic  #18                 // Method zscan:(Lio/lettuce/core/api/sync/RedisSortedSetCommands;Ljava/lang/Object;Ljava/util/Optional;)Lio/lettuce/core/ScanIterator;
       8: areturn

  public static <K, V> io.lettuce.core.ScanIterator<io.lettuce.core.ScoredValue<V>> zscan(io.lettuce.core.api.sync.RedisSortedSetCommands<K, V>, K, io.lettuce.core.ScanArgs);
    Code:
       0: aload_2
       1: ldc           #5                  // String ScanArgs must not be null
       3: invokestatic  #6                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokestatic  #7                  // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      12: invokestatic  #18                 // Method zscan:(Lio/lettuce/core/api/sync/RedisSortedSetCommands;Ljava/lang/Object;Ljava/util/Optional;)Lio/lettuce/core/ScanIterator;
      15: areturn

  private static <K, V> io.lettuce.core.ScanIterator<io.lettuce.core.ScoredValue<V>> zscan(io.lettuce.core.api.sync.RedisSortedSetCommands<K, V>, K, java.util.Optional<io.lettuce.core.ScanArgs>);
    Code:
       0: aload_0
       1: ldc           #8                  // String RedisKeyCommands must not be null
       3: invokestatic  #6                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #12                 // String Key must not be null
       9: invokestatic  #6                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: new           #19                 // class io/lettuce/core/ScanIterator$4
      15: dup
      16: aload_2
      17: aload_0
      18: aload_1
      19: invokespecial #20                 // Method io/lettuce/core/ScanIterator$4."<init>":(Ljava/util/Optional;Lio/lettuce/core/api/sync/RedisSortedSetCommands;Ljava/lang/Object;)V
      22: areturn

  public java.util.stream.Stream<T> stream();
    Code:
       0: aload_0
       1: lconst_0
       2: iconst_0
       3: invokestatic  #21                 // Method java/util/Spliterators.spliterator:(Ljava/util/Iterator;JI)Ljava/util/Spliterator;
       6: iconst_0
       7: invokestatic  #22                 // Method java/util/stream/StreamSupport.stream:(Ljava/util/Spliterator;Z)Ljava/util/stream/Stream;
      10: areturn

  io.lettuce.core.ScanIterator(io.lettuce.core.ScanIterator$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
