Compiled from "AbstractRedisReactiveCommands.java"
public abstract class io.lettuce.core.AbstractRedisReactiveCommands<K, V> implements io.lettuce.core.api.reactive.RedisHashReactiveCommands<K, V>, io.lettuce.core.api.reactive.RedisKeyReactiveCommands<K, V>, io.lettuce.core.api.reactive.RedisStringReactiveCommands<K, V>, io.lettuce.core.api.reactive.RedisListReactiveCommands<K, V>, io.lettuce.core.api.reactive.RedisSetReactiveCommands<K, V>, io.lettuce.core.api.reactive.RedisSortedSetReactiveCommands<K, V>, io.lettuce.core.api.reactive.RedisScriptingReactiveCommands<K, V>, io.lettuce.core.api.reactive.RedisServerReactiveCommands<K, V>, io.lettuce.core.api.reactive.RedisHLLReactiveCommands<K, V>, io.lettuce.core.api.reactive.BaseRedisReactiveCommands<K, V>, io.lettuce.core.api.reactive.RedisTransactionalReactiveCommands<K, V>, io.lettuce.core.api.reactive.RedisGeoReactiveCommands<K, V>, io.lettuce.core.cluster.api.reactive.RedisClusterReactiveCommands<K, V> {
  private final io.lettuce.core.api.StatefulConnection<K, V> connection;

  private final io.lettuce.core.codec.RedisCodec<K, V> codec;

  private final io.lettuce.core.RedisCommandBuilder<K, V> commandBuilder;

  public io.lettuce.core.AbstractRedisReactiveCommands(io.lettuce.core.api.StatefulConnection<K, V>, io.lettuce.core.codec.RedisCodec<K, V>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field connection:Lio/lettuce/core/api/StatefulConnection;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field codec:Lio/lettuce/core/codec/RedisCodec;
      14: aload_0
      15: new           #4                  // class io/lettuce/core/RedisCommandBuilder
      18: dup
      19: aload_2
      20: invokespecial #5                  // Method io/lettuce/core/RedisCommandBuilder."<init>":(Lio/lettuce/core/codec/RedisCodec;)V
      23: putfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
      26: return

  public reactor.core.publisher.Mono<java.lang.Long> append(K, V);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #7,  0              // InvokeDynamic #0:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.String> asking();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #10,  0             // InvokeDynamic #1:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      18: areturn

  public reactor.core.publisher.Mono<java.lang.String> auth(java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #11,  0             // InvokeDynamic #2:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/String;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.String> bgrewriteaof();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #12,  0             // InvokeDynamic #3:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      18: areturn

  public reactor.core.publisher.Mono<java.lang.String> bgsave();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #13,  0             // InvokeDynamic #4:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      18: areturn

  public reactor.core.publisher.Mono<java.lang.Long> bitcount(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #14,  0             // InvokeDynamic #5:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Long> bitcount(K, long, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: lload_2
       4: lload         4
       6: invokedynamic #15,  0             // InvokeDynamic #6:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;JJ)Ljava/util/function/Supplier;
      11: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      14: areturn

  public reactor.core.publisher.Flux<io.lettuce.core.Value<java.lang.Long>> bitfield(K, io.lettuce.core.BitFieldArgs);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #16,  0             // InvokeDynamic #7:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Lio/lettuce/core/BitFieldArgs;)Ljava/util/function/Supplier;
       9: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> bitopAnd(K, K...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #18,  0             // InvokeDynamic #8:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> bitopNot(K, K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #19,  0             // InvokeDynamic #9:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> bitopOr(K, K...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #20,  0             // InvokeDynamic #10:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> bitopXor(K, K...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #21,  0             // InvokeDynamic #11:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> bitpos(K, boolean);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: iload_2
       4: invokedynamic #22,  0             // InvokeDynamic #12:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Z)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> bitpos(K, boolean, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: iload_2
       4: lload_3
       5: invokedynamic #23,  0             // InvokeDynamic #13:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;ZJ)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  public reactor.core.publisher.Mono<java.lang.Long> bitpos(K, boolean, long, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: iload_2
       4: lload_3
       5: lload         5
       7: invokedynamic #24,  0             // InvokeDynamic #14:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;ZJJ)Ljava/util/function/Supplier;
      12: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      15: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.KeyValue<K, V>> blpop(long, K...);
    Code:
       0: aload_0
       1: aload_0
       2: lload_1
       3: aload_3
       4: invokedynamic #25,  0             // InvokeDynamic #15:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;J[Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.KeyValue<K, V>> brpop(long, K...);
    Code:
       0: aload_0
       1: aload_0
       2: lload_1
       3: aload_3
       4: invokedynamic #26,  0             // InvokeDynamic #16:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;J[Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<V> brpoplpush(long, K, K);
    Code:
       0: aload_0
       1: aload_0
       2: lload_1
       3: aload_3
       4: aload         4
       6: invokedynamic #27,  0             // InvokeDynamic #17:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;JLjava/lang/Object;Ljava/lang/Object;)Ljava/util/function/Supplier;
      11: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      14: areturn

  public reactor.core.publisher.Mono<K> clientGetname();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #28,  0             // InvokeDynamic #18:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      18: areturn

  public reactor.core.publisher.Mono<java.lang.String> clientKill(java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #29,  0             // InvokeDynamic #19:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/String;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Long> clientKill(io.lettuce.core.KillArgs);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #30,  0             // InvokeDynamic #20:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/KillArgs;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.String> clientList();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #31,  0             // InvokeDynamic #21:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      18: areturn

  public reactor.core.publisher.Mono<java.lang.String> clientPause(long);
    Code:
       0: aload_0
       1: aload_0
       2: lload_1
       3: invokedynamic #32,  0             // InvokeDynamic #22:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;J)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.String> clientSetname(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #33,  0             // InvokeDynamic #23:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #2                  // Field connection:Lio/lettuce/core/api/StatefulConnection;
       4: invokeinterface #34,  1           // InterfaceMethod io/lettuce/core/api/StatefulConnection.close:()V
       9: return

  public reactor.core.publisher.Mono<java.lang.String> clusterAddSlots(int...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #35,  0             // InvokeDynamic #24:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;[I)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.String> clusterBumpepoch();
    Code:
       0: aload_0
       1: aload_0
       2: invokedynamic #36,  0             // InvokeDynamic #25:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;)Ljava/util/function/Supplier;
       7: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      10: areturn

  public reactor.core.publisher.Mono<java.lang.Long> clusterCountFailureReports(java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #37,  0             // InvokeDynamic #26:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/String;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Long> clusterCountKeysInSlot(int);
    Code:
       0: aload_0
       1: aload_0
       2: iload_1
       3: invokedynamic #38,  0             // InvokeDynamic #27:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;I)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.String> clusterDelSlots(int...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #39,  0             // InvokeDynamic #28:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;[I)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.String> clusterFailover(boolean);
    Code:
       0: aload_0
       1: aload_0
       2: iload_1
       3: invokedynamic #40,  0             // InvokeDynamic #29:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Z)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.String> clusterFlushslots();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #41,  0             // InvokeDynamic #30:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      18: areturn

  public reactor.core.publisher.Mono<java.lang.String> clusterForget(java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #42,  0             // InvokeDynamic #31:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/String;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Flux<K> clusterGetKeysInSlot(int, int);
    Code:
       0: aload_0
       1: aload_0
       2: iload_1
       3: iload_2
       4: invokedynamic #43,  0             // InvokeDynamic #32:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;II)Ljava/util/function/Supplier;
       9: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.String> clusterInfo();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #44,  0             // InvokeDynamic #33:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      18: areturn

  public reactor.core.publisher.Mono<java.lang.Long> clusterKeyslot(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #45,  0             // InvokeDynamic #34:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.String> clusterMeet(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: iload_2
       4: invokedynamic #46,  0             // InvokeDynamic #35:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/String;I)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.String> clusterMyId();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #47,  0             // InvokeDynamic #36:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      18: areturn

  public reactor.core.publisher.Mono<java.lang.String> clusterNodes();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #48,  0             // InvokeDynamic #37:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      18: areturn

  public reactor.core.publisher.Mono<java.lang.String> clusterReplicate(java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #49,  0             // InvokeDynamic #38:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/String;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.String> clusterReset(boolean);
    Code:
       0: aload_0
       1: aload_0
       2: iload_1
       3: invokedynamic #50,  0             // InvokeDynamic #39:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Z)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.String> clusterSaveconfig();
    Code:
       0: aload_0
       1: aload_0
       2: invokedynamic #51,  0             // InvokeDynamic #40:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;)Ljava/util/function/Supplier;
       7: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      10: areturn

  public reactor.core.publisher.Mono<java.lang.String> clusterSetConfigEpoch(long);
    Code:
       0: aload_0
       1: aload_0
       2: lload_1
       3: invokedynamic #52,  0             // InvokeDynamic #41:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;J)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.String> clusterSetSlotImporting(int, java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: iload_1
       3: aload_2
       4: invokedynamic #53,  0             // InvokeDynamic #42:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;ILjava/lang/String;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.String> clusterSetSlotMigrating(int, java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: iload_1
       3: aload_2
       4: invokedynamic #54,  0             // InvokeDynamic #43:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;ILjava/lang/String;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.String> clusterSetSlotNode(int, java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: iload_1
       3: aload_2
       4: invokedynamic #55,  0             // InvokeDynamic #44:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;ILjava/lang/String;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.String> clusterSetSlotStable(int);
    Code:
       0: aload_0
       1: aload_0
       2: iload_1
       3: invokedynamic #56,  0             // InvokeDynamic #45:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;I)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Flux<java.lang.String> clusterSlaves(java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #57,  0             // InvokeDynamic #46:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/String;)Ljava/util/function/Supplier;
       8: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      11: areturn

  public reactor.core.publisher.Flux<java.lang.Object> clusterSlots();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #58,  0             // InvokeDynamic #47:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      18: areturn

  public reactor.core.publisher.Flux<java.lang.Object> command();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #59,  0             // InvokeDynamic #48:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      18: areturn

  public reactor.core.publisher.Mono<java.lang.Long> commandCount();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #60,  0             // InvokeDynamic #49:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      18: areturn

  public reactor.core.publisher.Flux<java.lang.Object> commandInfo(java.lang.String...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #61,  0             // InvokeDynamic #50:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;[Ljava/lang/String;)Ljava/util/function/Supplier;
       8: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      11: areturn

  public reactor.core.publisher.Flux<java.lang.Object> commandInfo(io.lettuce.core.protocol.CommandType...);
    Code:
       0: aload_1
       1: arraylength
       2: anewarray     #62                 // class java/lang/String
       5: astore_2
       6: iconst_0
       7: istore_3
       8: iload_3
       9: aload_1
      10: arraylength
      11: if_icmpge     29
      14: aload_2
      15: iload_3
      16: aload_1
      17: iload_3
      18: aaload
      19: invokevirtual #63                 // Method io/lettuce/core/protocol/CommandType.name:()Ljava/lang/String;
      22: aastore
      23: iinc          3, 1
      26: goto          8
      29: aload_0
      30: aload_2
      31: invokevirtual #64                 // Method commandInfo:([Ljava/lang/String;)Lreactor/core/publisher/Flux;
      34: areturn

  public reactor.core.publisher.Mono<java.util.Map<java.lang.String, java.lang.String>> configGet(java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #65,  0             // InvokeDynamic #51:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/String;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.String> configResetstat();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #66,  0             // InvokeDynamic #52:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      18: areturn

  public reactor.core.publisher.Mono<java.lang.String> configRewrite();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #67,  0             // InvokeDynamic #53:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      18: areturn

  public reactor.core.publisher.Mono<java.lang.String> configSet(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #68,  0             // InvokeDynamic #54:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public <T, R> reactor.core.publisher.Flux<R> createDissolvingFlux(java.util.function.Supplier<io.lettuce.core.protocol.RedisCommand<K, V, T>>);
    Code:
       0: new           #69                 // class io/lettuce/core/RedisPublisher
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #2                  // Field connection:Lio/lettuce/core/api/StatefulConnection;
       9: iconst_1
      10: invokespecial #70                 // Method io/lettuce/core/RedisPublisher."<init>":(Ljava/util/function/Supplier;Lio/lettuce/core/api/StatefulConnection;Z)V
      13: invokestatic  #71                 // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      16: areturn

  public <T> reactor.core.publisher.Flux<T> createFlux(java.util.function.Supplier<io.lettuce.core.protocol.RedisCommand<K, V, T>>);
    Code:
       0: new           #69                 // class io/lettuce/core/RedisPublisher
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #2                  // Field connection:Lio/lettuce/core/api/StatefulConnection;
       9: iconst_0
      10: invokespecial #70                 // Method io/lettuce/core/RedisPublisher."<init>":(Ljava/util/function/Supplier;Lio/lettuce/core/api/StatefulConnection;Z)V
      13: invokestatic  #71                 // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      16: areturn

  protected <T> reactor.core.publisher.Mono<T> createMono(io.lettuce.core.protocol.CommandType, io.lettuce.core.output.CommandOutput<K, V, T>, io.lettuce.core.protocol.CommandArgs<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokedynamic #72,  0             // InvokeDynamic #55:get:(Lio/lettuce/core/protocol/CommandType;Lio/lettuce/core/output/CommandOutput;Lio/lettuce/core/protocol/CommandArgs;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public <T> reactor.core.publisher.Mono<T> createMono(java.util.function.Supplier<io.lettuce.core.protocol.RedisCommand<K, V, T>>);
    Code:
       0: new           #69                 // class io/lettuce/core/RedisPublisher
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #2                  // Field connection:Lio/lettuce/core/api/StatefulConnection;
       9: iconst_0
      10: invokespecial #70                 // Method io/lettuce/core/RedisPublisher."<init>":(Ljava/util/function/Supplier;Lio/lettuce/core/api/StatefulConnection;Z)V
      13: invokestatic  #73                 // Method reactor/core/publisher/Mono.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
      16: areturn

  public reactor.core.publisher.Mono<java.lang.Long> dbsize();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #74,  0             // InvokeDynamic #56:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      18: areturn

  public reactor.core.publisher.Mono<java.lang.String> debugCrashAndRecover(java.lang.Long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #75,  0             // InvokeDynamic #57:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Long;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.String> debugHtstats(int);
    Code:
       0: aload_0
       1: aload_0
       2: iload_1
       3: invokedynamic #76,  0             // InvokeDynamic #58:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;I)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.String> debugObject(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #77,  0             // InvokeDynamic #59:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Void> debugOom();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #78,  0             // InvokeDynamic #60:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      18: invokevirtual #79                 // Method reactor/core/publisher/Mono.then:()Lreactor/core/publisher/Mono;
      21: areturn

  public reactor.core.publisher.Mono<java.lang.String> debugReload();
    Code:
       0: aload_0
       1: aload_0
       2: invokedynamic #80,  0             // InvokeDynamic #61:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;)Ljava/util/function/Supplier;
       7: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      10: areturn

  public reactor.core.publisher.Mono<java.lang.String> debugRestart(java.lang.Long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #81,  0             // InvokeDynamic #62:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Long;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.String> debugSdslen(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #82,  0             // InvokeDynamic #63:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Void> debugSegfault();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #83,  0             // InvokeDynamic #64:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #84                 // Method createFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      18: invokevirtual #85                 // Method reactor/core/publisher/Flux.then:()Lreactor/core/publisher/Mono;
      21: areturn

  public reactor.core.publisher.Mono<java.lang.Long> decr(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #86,  0             // InvokeDynamic #65:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Long> decrby(K, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: lload_2
       4: invokedynamic #87,  0             // InvokeDynamic #66:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;J)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> del(K...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #88,  0             // InvokeDynamic #67:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Long> del(java.lang.Iterable<K>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #89,  0             // InvokeDynamic #68:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Iterable;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public java.lang.String digest(V);
    Code:
       0: aload_0
       1: getfield      #3                  // Field codec:Lio/lettuce/core/codec/RedisCodec;
       4: aload_1
       5: invokeinterface #90,  2           // InterfaceMethod io/lettuce/core/codec/RedisCodec.encodeValue:(Ljava/lang/Object;)Ljava/nio/ByteBuffer;
      10: invokestatic  #91                 // Method io/lettuce/core/LettuceStrings.digest:(Ljava/nio/ByteBuffer;)Ljava/lang/String;
      13: areturn

  public reactor.core.publisher.Mono<java.lang.String> discard();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #92,  0             // InvokeDynamic #69:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      18: areturn

  public <T> reactor.core.publisher.Flux<T> dispatch(io.lettuce.core.protocol.ProtocolKeyword, io.lettuce.core.output.CommandOutput<K, V, ?>);
    Code:
       0: aload_1
       1: ldc           #93                 // String Command type must not be null
       3: invokestatic  #94                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #95                 // String CommandOutput type must not be null
       9: invokestatic  #94                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokedynamic #96,  0             // InvokeDynamic #70:get:(Lio/lettuce/core/protocol/ProtocolKeyword;Lio/lettuce/core/output/CommandOutput;)Ljava/util/function/Supplier;
      20: invokevirtual #84                 // Method createFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      23: areturn

  public <T> reactor.core.publisher.Flux<T> dispatch(io.lettuce.core.protocol.ProtocolKeyword, io.lettuce.core.output.CommandOutput<K, V, ?>, io.lettuce.core.protocol.CommandArgs<K, V>);
    Code:
       0: aload_1
       1: ldc           #93                 // String Command type must not be null
       3: invokestatic  #94                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #95                 // String CommandOutput type must not be null
       9: invokestatic  #94                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_3
      13: ldc           #97                 // String CommandArgs type must not be null
      15: invokestatic  #94                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_0
      19: aload_1
      20: aload_2
      21: aload_3
      22: invokedynamic #98,  0             // InvokeDynamic #71:get:(Lio/lettuce/core/protocol/ProtocolKeyword;Lio/lettuce/core/output/CommandOutput;Lio/lettuce/core/protocol/CommandArgs;)Ljava/util/function/Supplier;
      27: invokevirtual #84                 // Method createFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      30: areturn

  public reactor.core.publisher.Mono<byte[]> dump(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #99,  0             // InvokeDynamic #72:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<V> echo(V);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #100,  0            // InvokeDynamic #73:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public <T> reactor.core.publisher.Flux<T> eval(java.lang.String, io.lettuce.core.ScriptOutputType, K...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #101,  0            // InvokeDynamic #74:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/String;Lio/lettuce/core/ScriptOutputType;[Ljava/lang/Object;)Ljava/util/function/Supplier;
      10: invokevirtual #84                 // Method createFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      13: areturn

  public <T> reactor.core.publisher.Flux<T> eval(java.lang.String, io.lettuce.core.ScriptOutputType, K[], V...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: aload         4
       7: invokedynamic #102,  0            // InvokeDynamic #75:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/String;Lio/lettuce/core/ScriptOutputType;[Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/function/Supplier;
      12: invokevirtual #84                 // Method createFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      15: areturn

  public <T> reactor.core.publisher.Flux<T> evalsha(java.lang.String, io.lettuce.core.ScriptOutputType, K...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #103,  0            // InvokeDynamic #76:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/String;Lio/lettuce/core/ScriptOutputType;[Ljava/lang/Object;)Ljava/util/function/Supplier;
      10: invokevirtual #84                 // Method createFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      13: areturn

  public <T> reactor.core.publisher.Flux<T> evalsha(java.lang.String, io.lettuce.core.ScriptOutputType, K[], V...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: aload         4
       7: invokedynamic #104,  0            // InvokeDynamic #77:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/String;Lio/lettuce/core/ScriptOutputType;[Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/function/Supplier;
      12: invokevirtual #84                 // Method createFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      15: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.TransactionResult> exec();
    Code:
       0: aload_0
       1: getstatic     #105                // Field io/lettuce/core/protocol/CommandType.EXEC:Lio/lettuce/core/protocol/CommandType;
       4: aconst_null
       5: aconst_null
       6: invokevirtual #106                // Method createMono:(Lio/lettuce/core/protocol/CommandType;Lio/lettuce/core/output/CommandOutput;Lio/lettuce/core/protocol/CommandArgs;)Lreactor/core/publisher/Mono;
       9: areturn

  public reactor.core.publisher.Mono<java.lang.Boolean> exists(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #107,  0            // InvokeDynamic #78:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Long> exists(K...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #108,  0            // InvokeDynamic #79:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Long> exists(java.lang.Iterable<K>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #109,  0            // InvokeDynamic #80:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Iterable;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Boolean> expire(K, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: lload_2
       4: invokedynamic #110,  0            // InvokeDynamic #81:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;J)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Boolean> expireat(K, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: lload_2
       4: invokedynamic #111,  0            // InvokeDynamic #82:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;J)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Boolean> expireat(K, java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #112                // Method java/util/Date.getTime:()J
       6: ldc2_w        #113                // long 1000l
       9: ldiv
      10: invokevirtual #115                // Method expireat:(Ljava/lang/Object;J)Lreactor/core/publisher/Mono;
      13: areturn

  public void flushCommands();
    Code:
       0: aload_0
       1: getfield      #2                  // Field connection:Lio/lettuce/core/api/StatefulConnection;
       4: invokeinterface #116,  1          // InterfaceMethod io/lettuce/core/api/StatefulConnection.flushCommands:()V
       9: return

  public reactor.core.publisher.Mono<java.lang.String> flushall();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #117,  0            // InvokeDynamic #83:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      18: areturn

  public reactor.core.publisher.Mono<java.lang.String> flushallAsync();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #118,  0            // InvokeDynamic #84:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      18: areturn

  public reactor.core.publisher.Mono<java.lang.String> flushdb();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #119,  0            // InvokeDynamic #85:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      18: areturn

  public reactor.core.publisher.Mono<java.lang.String> flushdbAsync();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #120,  0            // InvokeDynamic #86:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      18: areturn

  public reactor.core.publisher.Mono<java.lang.Long> geoadd(K, double, double, V);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: dload_2
       4: dload         4
       6: aload         6
       8: invokedynamic #121,  0            // InvokeDynamic #87:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;DDLjava/lang/Object;)Ljava/util/function/Supplier;
      13: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      16: areturn

  public reactor.core.publisher.Mono<java.lang.Long> geoadd(K, java.lang.Object...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #122,  0            // InvokeDynamic #88:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Double> geodist(K, V, V, io.lettuce.core.GeoArgs$Unit);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: aload         4
       7: invokedynamic #123,  0            // InvokeDynamic #89:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lio/lettuce/core/GeoArgs$Unit;)Ljava/util/function/Supplier;
      12: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      15: areturn

  public reactor.core.publisher.Flux<io.lettuce.core.Value<java.lang.String>> geohash(K, V...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #124,  0            // InvokeDynamic #90:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      12: areturn

  public reactor.core.publisher.Flux<io.lettuce.core.Value<io.lettuce.core.GeoCoordinates>> geopos(K, V...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #125,  0            // InvokeDynamic #91:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      12: areturn

  public reactor.core.publisher.Flux<V> georadius(K, double, double, double, io.lettuce.core.GeoArgs$Unit);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: dload_2
       4: dload         4
       6: dload         6
       8: aload         8
      10: invokedynamic #126,  0            // InvokeDynamic #92:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;DDDLio/lettuce/core/GeoArgs$Unit;)Ljava/util/function/Supplier;
      15: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      18: areturn

  public reactor.core.publisher.Flux<io.lettuce.core.GeoWithin<V>> georadius(K, double, double, double, io.lettuce.core.GeoArgs$Unit, io.lettuce.core.GeoArgs);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: dload_2
       4: dload         4
       6: dload         6
       8: aload         8
      10: aload         9
      12: invokedynamic #127,  0            // InvokeDynamic #93:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;DDDLio/lettuce/core/GeoArgs$Unit;Lio/lettuce/core/GeoArgs;)Ljava/util/function/Supplier;
      17: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      20: areturn

  public reactor.core.publisher.Mono<java.lang.Long> georadius(K, double, double, double, io.lettuce.core.GeoArgs$Unit, io.lettuce.core.GeoRadiusStoreArgs<K>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: dload_2
       4: dload         4
       6: dload         6
       8: aload         8
      10: aload         9
      12: invokedynamic #128,  0            // InvokeDynamic #94:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;DDDLio/lettuce/core/GeoArgs$Unit;Lio/lettuce/core/GeoRadiusStoreArgs;)Ljava/util/function/Supplier;
      17: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      20: areturn

  protected reactor.core.publisher.Flux<V> georadius_ro(K, double, double, double, io.lettuce.core.GeoArgs$Unit);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: dload_2
       4: dload         4
       6: dload         6
       8: aload         8
      10: invokedynamic #129,  0            // InvokeDynamic #95:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;DDDLio/lettuce/core/GeoArgs$Unit;)Ljava/util/function/Supplier;
      15: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      18: areturn

  protected reactor.core.publisher.Flux<io.lettuce.core.GeoWithin<V>> georadius_ro(K, double, double, double, io.lettuce.core.GeoArgs$Unit, io.lettuce.core.GeoArgs);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: dload_2
       4: dload         4
       6: dload         6
       8: aload         8
      10: aload         9
      12: invokedynamic #130,  0            // InvokeDynamic #96:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;DDDLio/lettuce/core/GeoArgs$Unit;Lio/lettuce/core/GeoArgs;)Ljava/util/function/Supplier;
      17: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      20: areturn

  public reactor.core.publisher.Flux<V> georadiusbymember(K, V, double, io.lettuce.core.GeoArgs$Unit);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: dload_3
       5: aload         5
       7: invokedynamic #131,  0            // InvokeDynamic #97:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/Object;DLio/lettuce/core/GeoArgs$Unit;)Ljava/util/function/Supplier;
      12: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      15: areturn

  public reactor.core.publisher.Flux<io.lettuce.core.GeoWithin<V>> georadiusbymember(K, V, double, io.lettuce.core.GeoArgs$Unit, io.lettuce.core.GeoArgs);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: dload_3
       5: aload         5
       7: aload         6
       9: invokedynamic #132,  0            // InvokeDynamic #98:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/Object;DLio/lettuce/core/GeoArgs$Unit;Lio/lettuce/core/GeoArgs;)Ljava/util/function/Supplier;
      14: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      17: areturn

  public reactor.core.publisher.Mono<java.lang.Long> georadiusbymember(K, V, double, io.lettuce.core.GeoArgs$Unit, io.lettuce.core.GeoRadiusStoreArgs<K>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: dload_3
       5: aload         5
       7: aload         6
       9: invokedynamic #133,  0            // InvokeDynamic #99:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/Object;DLio/lettuce/core/GeoArgs$Unit;Lio/lettuce/core/GeoRadiusStoreArgs;)Ljava/util/function/Supplier;
      14: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      17: areturn

  protected reactor.core.publisher.Flux<V> georadiusbymember_ro(K, V, double, io.lettuce.core.GeoArgs$Unit);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: dload_3
       5: aload         5
       7: invokedynamic #134,  0            // InvokeDynamic #100:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/Object;DLio/lettuce/core/GeoArgs$Unit;)Ljava/util/function/Supplier;
      12: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      15: areturn

  protected reactor.core.publisher.Flux<io.lettuce.core.GeoWithin<V>> georadiusbymember_ro(K, V, double, io.lettuce.core.GeoArgs$Unit, io.lettuce.core.GeoArgs);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: dload_3
       5: aload         5
       7: aload         6
       9: invokedynamic #135,  0            // InvokeDynamic #101:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/Object;DLio/lettuce/core/GeoArgs$Unit;Lio/lettuce/core/GeoArgs;)Ljava/util/function/Supplier;
      14: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      17: areturn

  public reactor.core.publisher.Mono<V> get(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #136,  0            // InvokeDynamic #102:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public io.lettuce.core.api.StatefulConnection<K, V> getConnection();
    Code:
       0: aload_0
       1: getfield      #2                  // Field connection:Lio/lettuce/core/api/StatefulConnection;
       4: areturn

  public reactor.core.publisher.Mono<java.lang.Long> getbit(K, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: lload_2
       4: invokedynamic #137,  0            // InvokeDynamic #103:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;J)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<V> getrange(K, long, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: lload_2
       4: lload         4
       6: invokedynamic #138,  0            // InvokeDynamic #104:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;JJ)Ljava/util/function/Supplier;
      11: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      14: areturn

  public reactor.core.publisher.Mono<V> getset(K, V);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #139,  0            // InvokeDynamic #105:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> hdel(K, K...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #140,  0            // InvokeDynamic #106:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Boolean> hexists(K, K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #141,  0            // InvokeDynamic #107:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<V> hget(K, K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #142,  0            // InvokeDynamic #108:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.util.Map<K, V>> hgetall(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #143,  0            // InvokeDynamic #109:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Long> hgetall(io.lettuce.core.output.KeyValueStreamingChannel<K, V>, K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #144,  0            // InvokeDynamic #110:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/KeyValueStreamingChannel;Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> hincrby(K, K, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: lload_3
       5: invokedynamic #145,  0            // InvokeDynamic #111:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/Object;J)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  public reactor.core.publisher.Mono<java.lang.Double> hincrbyfloat(K, K, double);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: dload_3
       5: invokedynamic #146,  0            // InvokeDynamic #112:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/Object;D)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  public reactor.core.publisher.Flux<K> hkeys(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #147,  0            // InvokeDynamic #113:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Long> hkeys(io.lettuce.core.output.KeyStreamingChannel<K>, K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #148,  0            // InvokeDynamic #114:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/KeyStreamingChannel;Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> hlen(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #149,  0            // InvokeDynamic #115:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Flux<io.lettuce.core.KeyValue<K, V>> hmget(K, K...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #150,  0            // InvokeDynamic #116:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> hmget(io.lettuce.core.output.KeyValueStreamingChannel<K, V>, K, K...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #151,  0            // InvokeDynamic #117:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/KeyValueStreamingChannel;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  public reactor.core.publisher.Mono<java.lang.String> hmset(K, java.util.Map<K, V>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #152,  0            // InvokeDynamic #118:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/util/Map;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.MapScanCursor<K, V>> hscan(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #153,  0            // InvokeDynamic #119:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.MapScanCursor<K, V>> hscan(K, io.lettuce.core.ScanArgs);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #154,  0            // InvokeDynamic #120:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Lio/lettuce/core/ScanArgs;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.MapScanCursor<K, V>> hscan(K, io.lettuce.core.ScanCursor, io.lettuce.core.ScanArgs);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #155,  0            // InvokeDynamic #121:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Lio/lettuce/core/ScanCursor;Lio/lettuce/core/ScanArgs;)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.MapScanCursor<K, V>> hscan(K, io.lettuce.core.ScanCursor);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #156,  0            // InvokeDynamic #122:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Lio/lettuce/core/ScanCursor;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.StreamScanCursor> hscan(io.lettuce.core.output.KeyValueStreamingChannel<K, V>, K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #157,  0            // InvokeDynamic #123:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/KeyValueStreamingChannel;Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.StreamScanCursor> hscan(io.lettuce.core.output.KeyValueStreamingChannel<K, V>, K, io.lettuce.core.ScanArgs);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #158,  0            // InvokeDynamic #124:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/KeyValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/ScanArgs;)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.StreamScanCursor> hscan(io.lettuce.core.output.KeyValueStreamingChannel<K, V>, K, io.lettuce.core.ScanCursor, io.lettuce.core.ScanArgs);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: aload         4
       7: invokedynamic #159,  0            // InvokeDynamic #125:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/KeyValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/ScanCursor;Lio/lettuce/core/ScanArgs;)Ljava/util/function/Supplier;
      12: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      15: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.StreamScanCursor> hscan(io.lettuce.core.output.KeyValueStreamingChannel<K, V>, K, io.lettuce.core.ScanCursor);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #160,  0            // InvokeDynamic #126:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/KeyValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/ScanCursor;)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  public reactor.core.publisher.Mono<java.lang.Boolean> hset(K, K, V);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #161,  0            // InvokeDynamic #127:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  public reactor.core.publisher.Mono<java.lang.Boolean> hsetnx(K, K, V);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #162,  0            // InvokeDynamic #128:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  public reactor.core.publisher.Mono<java.lang.Long> hstrlen(K, K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #163,  0            // InvokeDynamic #129:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Flux<V> hvals(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #164,  0            // InvokeDynamic #130:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Long> hvals(io.lettuce.core.output.ValueStreamingChannel<V>, K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #165,  0            // InvokeDynamic #131:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> incr(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #166,  0            // InvokeDynamic #132:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Long> incrby(K, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: lload_2
       4: invokedynamic #167,  0            // InvokeDynamic #133:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;J)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Double> incrbyfloat(K, double);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: dload_2
       4: invokedynamic #168,  0            // InvokeDynamic #134:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;D)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.String> info();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #169,  0            // InvokeDynamic #135:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      18: areturn

  public reactor.core.publisher.Mono<java.lang.String> info(java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #170,  0            // InvokeDynamic #136:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/String;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #2                  // Field connection:Lio/lettuce/core/api/StatefulConnection;
       4: invokeinterface #171,  1          // InterfaceMethod io/lettuce/core/api/StatefulConnection.isOpen:()Z
       9: ireturn

  public reactor.core.publisher.Flux<K> keys(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #172,  0            // InvokeDynamic #137:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Long> keys(io.lettuce.core.output.KeyStreamingChannel<K>, K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #173,  0            // InvokeDynamic #138:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/KeyStreamingChannel;Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.util.Date> lastsave();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #174,  0            // InvokeDynamic #139:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      18: areturn

  public reactor.core.publisher.Mono<V> lindex(K, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: lload_2
       4: invokedynamic #175,  0            // InvokeDynamic #140:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;J)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> linsert(K, boolean, V, V);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: iload_2
       4: aload_3
       5: aload         4
       7: invokedynamic #176,  0            // InvokeDynamic #141:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;ZLjava/lang/Object;Ljava/lang/Object;)Ljava/util/function/Supplier;
      12: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      15: areturn

  public reactor.core.publisher.Mono<java.lang.Long> llen(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #177,  0            // InvokeDynamic #142:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<V> lpop(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #178,  0            // InvokeDynamic #143:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Long> lpush(K, V...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #179,  0            // InvokeDynamic #144:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> lpushx(K, V...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #180,  0            // InvokeDynamic #145:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Flux<V> lrange(K, long, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: lload_2
       4: lload         4
       6: invokedynamic #181,  0            // InvokeDynamic #146:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;JJ)Ljava/util/function/Supplier;
      11: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      14: areturn

  public reactor.core.publisher.Mono<java.lang.Long> lrange(io.lettuce.core.output.ValueStreamingChannel<V>, K, long, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: lload_3
       5: lload         5
       7: invokedynamic #182,  0            // InvokeDynamic #147:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;JJ)Ljava/util/function/Supplier;
      12: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      15: areturn

  public reactor.core.publisher.Mono<java.lang.Long> lrem(K, long, V);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: lload_2
       4: aload         4
       6: invokedynamic #183,  0            // InvokeDynamic #148:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;JLjava/lang/Object;)Ljava/util/function/Supplier;
      11: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      14: areturn

  public reactor.core.publisher.Mono<java.lang.String> lset(K, long, V);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: lload_2
       4: aload         4
       6: invokedynamic #184,  0            // InvokeDynamic #149:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;JLjava/lang/Object;)Ljava/util/function/Supplier;
      11: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      14: areturn

  public reactor.core.publisher.Mono<java.lang.String> ltrim(K, long, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: lload_2
       4: lload         4
       6: invokedynamic #185,  0            // InvokeDynamic #150:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;JJ)Ljava/util/function/Supplier;
      11: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      14: areturn

  public reactor.core.publisher.Flux<io.lettuce.core.KeyValue<K, V>> mget(K...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #186,  0            // InvokeDynamic #151:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      11: areturn

  public reactor.core.publisher.Flux<io.lettuce.core.KeyValue<K, V>> mget(java.lang.Iterable<K>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #187,  0            // InvokeDynamic #152:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Iterable;)Ljava/util/function/Supplier;
       8: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Long> mget(io.lettuce.core.output.KeyValueStreamingChannel<K, V>, K...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #188,  0            // InvokeDynamic #153:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/KeyValueStreamingChannel;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> mget(io.lettuce.core.output.ValueStreamingChannel<V>, java.lang.Iterable<K>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #189,  0            // InvokeDynamic #154:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Iterable;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> mget(io.lettuce.core.output.KeyValueStreamingChannel<K, V>, java.lang.Iterable<K>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #190,  0            // InvokeDynamic #155:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/KeyValueStreamingChannel;Ljava/lang/Iterable;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.String> migrate(java.lang.String, int, K, int, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: iload_2
       4: aload_3
       5: iload         4
       7: lload         5
       9: invokedynamic #191,  0            // InvokeDynamic #156:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/String;ILjava/lang/Object;IJ)Ljava/util/function/Supplier;
      14: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      17: areturn

  public reactor.core.publisher.Mono<java.lang.String> migrate(java.lang.String, int, int, long, io.lettuce.core.MigrateArgs<K>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: iload_2
       4: iload_3
       5: lload         4
       7: aload         6
       9: invokedynamic #192,  0            // InvokeDynamic #157:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/String;IIJLio/lettuce/core/MigrateArgs;)Ljava/util/function/Supplier;
      14: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      17: areturn

  public reactor.core.publisher.Mono<java.lang.Boolean> move(K, int);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: iload_2
       4: invokedynamic #193,  0            // InvokeDynamic #158:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;I)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.String> mset(java.util.Map<K, V>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #194,  0            // InvokeDynamic #159:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/util/Map;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Boolean> msetnx(java.util.Map<K, V>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #195,  0            // InvokeDynamic #160:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/util/Map;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.String> multi();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #196,  0            // InvokeDynamic #161:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      18: areturn

  public reactor.core.publisher.Mono<java.lang.String> objectEncoding(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #197,  0            // InvokeDynamic #162:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Long> objectIdletime(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #198,  0            // InvokeDynamic #163:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Long> objectRefcount(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #199,  0            // InvokeDynamic #164:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Boolean> persist(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #200,  0            // InvokeDynamic #165:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Boolean> pexpire(K, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: lload_2
       4: invokedynamic #201,  0            // InvokeDynamic #166:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;J)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Boolean> pexpireat(K, java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #112                // Method java/util/Date.getTime:()J
       6: invokevirtual #202                // Method pexpireat:(Ljava/lang/Object;J)Lreactor/core/publisher/Mono;
       9: areturn

  public reactor.core.publisher.Mono<java.lang.Boolean> pexpireat(K, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: lload_2
       4: invokedynamic #203,  0            // InvokeDynamic #167:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;J)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> pfadd(K, V...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #204,  0            // InvokeDynamic #168:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> pfadd(K, V, V...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #205,  0            // InvokeDynamic #169:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  public reactor.core.publisher.Mono<java.lang.Long> pfcount(K...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #206,  0            // InvokeDynamic #170:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Long> pfcount(K, K...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #207,  0            // InvokeDynamic #171:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.String> pfmerge(K, K...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #208,  0            // InvokeDynamic #172:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.String> pfmerge(K, K, K...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #209,  0            // InvokeDynamic #173:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  public reactor.core.publisher.Mono<java.lang.String> ping();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #210,  0            // InvokeDynamic #174:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      18: areturn

  public reactor.core.publisher.Mono<java.lang.String> psetex(K, long, V);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: lload_2
       4: aload         4
       6: invokedynamic #211,  0            // InvokeDynamic #175:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;JLjava/lang/Object;)Ljava/util/function/Supplier;
      11: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      14: areturn

  public reactor.core.publisher.Mono<java.lang.Long> pttl(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #212,  0            // InvokeDynamic #176:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Long> publish(K, V);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #213,  0            // InvokeDynamic #177:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Flux<K> pubsubChannels();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #214,  0            // InvokeDynamic #178:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      18: areturn

  public reactor.core.publisher.Flux<K> pubsubChannels(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #215,  0            // InvokeDynamic #179:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Long> pubsubNumpat();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #216,  0            // InvokeDynamic #180:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      18: areturn

  public reactor.core.publisher.Mono<java.util.Map<K, java.lang.Long>> pubsubNumsub(K...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #217,  0            // InvokeDynamic #181:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.String> quit();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #218,  0            // InvokeDynamic #182:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      18: areturn

  public reactor.core.publisher.Mono<V> randomkey();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #219,  0            // InvokeDynamic #183:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      18: areturn

  public reactor.core.publisher.Mono<java.lang.String> readOnly();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #220,  0            // InvokeDynamic #184:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      18: areturn

  public reactor.core.publisher.Mono<java.lang.String> readWrite();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #221,  0            // InvokeDynamic #185:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      18: areturn

  public reactor.core.publisher.Mono<java.lang.String> rename(K, K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #222,  0            // InvokeDynamic #186:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Boolean> renamenx(K, K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #223,  0            // InvokeDynamic #187:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public void reset();
    Code:
       0: aload_0
       1: invokevirtual #224                // Method getConnection:()Lio/lettuce/core/api/StatefulConnection;
       4: invokeinterface #225,  1          // InterfaceMethod io/lettuce/core/api/StatefulConnection.reset:()V
       9: return

  public reactor.core.publisher.Mono<java.lang.String> restore(K, long, byte[]);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: lload_2
       4: aload         4
       6: invokedynamic #226,  0            // InvokeDynamic #188:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;J[B)Ljava/util/function/Supplier;
      11: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      14: areturn

  public reactor.core.publisher.Flux<java.lang.Object> role();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #227,  0            // InvokeDynamic #189:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      18: areturn

  public reactor.core.publisher.Mono<V> rpop(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #228,  0            // InvokeDynamic #190:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<V> rpoplpush(K, K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #229,  0            // InvokeDynamic #191:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> rpush(K, V...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #230,  0            // InvokeDynamic #192:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> rpushx(K, V...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #231,  0            // InvokeDynamic #193:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> sadd(K, V...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #232,  0            // InvokeDynamic #194:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.String> save();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #233,  0            // InvokeDynamic #195:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      18: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.KeyScanCursor<K>> scan();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #234,  0            // InvokeDynamic #196:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      18: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.KeyScanCursor<K>> scan(io.lettuce.core.ScanArgs);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #235,  0            // InvokeDynamic #197:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/ScanArgs;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.KeyScanCursor<K>> scan(io.lettuce.core.ScanCursor, io.lettuce.core.ScanArgs);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #236,  0            // InvokeDynamic #198:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/ScanCursor;Lio/lettuce/core/ScanArgs;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.KeyScanCursor<K>> scan(io.lettuce.core.ScanCursor);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #237,  0            // InvokeDynamic #199:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/ScanCursor;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.StreamScanCursor> scan(io.lettuce.core.output.KeyStreamingChannel<K>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #238,  0            // InvokeDynamic #200:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/KeyStreamingChannel;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.StreamScanCursor> scan(io.lettuce.core.output.KeyStreamingChannel<K>, io.lettuce.core.ScanArgs);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #239,  0            // InvokeDynamic #201:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/KeyStreamingChannel;Lio/lettuce/core/ScanArgs;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.StreamScanCursor> scan(io.lettuce.core.output.KeyStreamingChannel<K>, io.lettuce.core.ScanCursor, io.lettuce.core.ScanArgs);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #240,  0            // InvokeDynamic #202:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/KeyStreamingChannel;Lio/lettuce/core/ScanCursor;Lio/lettuce/core/ScanArgs;)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.StreamScanCursor> scan(io.lettuce.core.output.KeyStreamingChannel<K>, io.lettuce.core.ScanCursor);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #241,  0            // InvokeDynamic #203:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/KeyStreamingChannel;Lio/lettuce/core/ScanCursor;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> scard(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #242,  0            // InvokeDynamic #204:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Flux<java.lang.Boolean> scriptExists(java.lang.String...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #243,  0            // InvokeDynamic #205:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;[Ljava/lang/String;)Ljava/util/function/Supplier;
       8: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.String> scriptFlush();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #244,  0            // InvokeDynamic #206:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      18: areturn

  public reactor.core.publisher.Mono<java.lang.String> scriptKill();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #245,  0            // InvokeDynamic #207:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      18: areturn

  public reactor.core.publisher.Mono<java.lang.String> scriptLoad(V);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #246,  0            // InvokeDynamic #208:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Flux<V> sdiff(K...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #247,  0            // InvokeDynamic #209:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Long> sdiff(io.lettuce.core.output.ValueStreamingChannel<V>, K...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #248,  0            // InvokeDynamic #210:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ValueStreamingChannel;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> sdiffstore(K, K...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #249,  0            // InvokeDynamic #211:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.String> select(int);
    Code:
       0: aload_0
       1: aload_0
       2: iload_1
       3: invokedynamic #250,  0            // InvokeDynamic #212:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;I)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.String> set(K, V);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #251,  0            // InvokeDynamic #213:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.String> set(K, V, io.lettuce.core.SetArgs);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #252,  0            // InvokeDynamic #214:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/Object;Lio/lettuce/core/SetArgs;)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  public void setAutoFlushCommands(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field connection:Lio/lettuce/core/api/StatefulConnection;
       4: iload_1
       5: invokeinterface #253,  2          // InterfaceMethod io/lettuce/core/api/StatefulConnection.setAutoFlushCommands:(Z)V
      10: return

  public void setTimeout(java.time.Duration);
    Code:
       0: aload_0
       1: getfield      #2                  // Field connection:Lio/lettuce/core/api/StatefulConnection;
       4: aload_1
       5: invokeinterface #254,  2          // InterfaceMethod io/lettuce/core/api/StatefulConnection.setTimeout:(Ljava/time/Duration;)V
      10: return

  public void setTimeout(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field connection:Lio/lettuce/core/api/StatefulConnection;
       4: lload_1
       5: aload_3
       6: invokeinterface #255,  4          // InterfaceMethod io/lettuce/core/api/StatefulConnection.setTimeout:(JLjava/util/concurrent/TimeUnit;)V
      11: return

  public reactor.core.publisher.Mono<java.lang.Long> setbit(K, long, int);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: lload_2
       4: iload         4
       6: invokedynamic #256,  0            // InvokeDynamic #215:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;JI)Ljava/util/function/Supplier;
      11: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      14: areturn

  public reactor.core.publisher.Mono<java.lang.String> setex(K, long, V);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: lload_2
       4: aload         4
       6: invokedynamic #257,  0            // InvokeDynamic #216:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;JLjava/lang/Object;)Ljava/util/function/Supplier;
      11: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      14: areturn

  public reactor.core.publisher.Mono<java.lang.Boolean> setnx(K, V);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #258,  0            // InvokeDynamic #217:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> setrange(K, long, V);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: lload_2
       4: aload         4
       6: invokedynamic #259,  0            // InvokeDynamic #218:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;JLjava/lang/Object;)Ljava/util/function/Supplier;
      11: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      14: areturn

  public reactor.core.publisher.Mono<java.lang.Void> shutdown(boolean);
    Code:
       0: aload_0
       1: aload_0
       2: iload_1
       3: invokedynamic #260,  0            // InvokeDynamic #219:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Z)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: invokevirtual #79                 // Method reactor/core/publisher/Mono.then:()Lreactor/core/publisher/Mono;
      14: areturn

  public reactor.core.publisher.Flux<V> sinter(K...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #261,  0            // InvokeDynamic #220:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Long> sinter(io.lettuce.core.output.ValueStreamingChannel<V>, K...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #262,  0            // InvokeDynamic #221:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ValueStreamingChannel;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> sinterstore(K, K...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #263,  0            // InvokeDynamic #222:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Boolean> sismember(K, V);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #264,  0            // InvokeDynamic #223:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.String> slaveof(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: iload_2
       4: invokedynamic #265,  0            // InvokeDynamic #224:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/String;I)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.String> slaveofNoOne();
    Code:
       0: aload_0
       1: aload_0
       2: invokedynamic #266,  0            // InvokeDynamic #225:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;)Ljava/util/function/Supplier;
       7: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      10: areturn

  public reactor.core.publisher.Flux<java.lang.Object> slowlogGet();
    Code:
       0: aload_0
       1: aload_0
       2: invokedynamic #267,  0            // InvokeDynamic #226:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;)Ljava/util/function/Supplier;
       7: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      10: areturn

  public reactor.core.publisher.Flux<java.lang.Object> slowlogGet(int);
    Code:
       0: aload_0
       1: aload_0
       2: iload_1
       3: invokedynamic #268,  0            // InvokeDynamic #227:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;I)Ljava/util/function/Supplier;
       8: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Long> slowlogLen();
    Code:
       0: aload_0
       1: aload_0
       2: invokedynamic #269,  0            // InvokeDynamic #228:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;)Ljava/util/function/Supplier;
       7: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      10: areturn

  public reactor.core.publisher.Mono<java.lang.String> slowlogReset();
    Code:
       0: aload_0
       1: aload_0
       2: invokedynamic #270,  0            // InvokeDynamic #229:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;)Ljava/util/function/Supplier;
       7: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      10: areturn

  public reactor.core.publisher.Flux<V> smembers(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #271,  0            // InvokeDynamic #230:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Long> smembers(io.lettuce.core.output.ValueStreamingChannel<V>, K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #272,  0            // InvokeDynamic #231:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Boolean> smove(K, K, V);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #273,  0            // InvokeDynamic #232:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  public reactor.core.publisher.Flux<V> sort(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #274,  0            // InvokeDynamic #233:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Long> sort(io.lettuce.core.output.ValueStreamingChannel<V>, K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #275,  0            // InvokeDynamic #234:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Flux<V> sort(K, io.lettuce.core.SortArgs);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #276,  0            // InvokeDynamic #235:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Lio/lettuce/core/SortArgs;)Ljava/util/function/Supplier;
       9: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> sort(io.lettuce.core.output.ValueStreamingChannel<V>, K, io.lettuce.core.SortArgs);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #277,  0            // InvokeDynamic #236:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/SortArgs;)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  public reactor.core.publisher.Mono<java.lang.Long> sortStore(K, io.lettuce.core.SortArgs, K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #278,  0            // InvokeDynamic #237:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Lio/lettuce/core/SortArgs;Ljava/lang/Object;)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  public reactor.core.publisher.Mono<V> spop(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #279,  0            // InvokeDynamic #238:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Flux<V> spop(K, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: lload_2
       4: invokedynamic #280,  0            // InvokeDynamic #239:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;J)Ljava/util/function/Supplier;
       9: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      12: areturn

  public reactor.core.publisher.Mono<V> srandmember(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #281,  0            // InvokeDynamic #240:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Flux<V> srandmember(K, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: lload_2
       4: invokedynamic #282,  0            // InvokeDynamic #241:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;J)Ljava/util/function/Supplier;
       9: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> srandmember(io.lettuce.core.output.ValueStreamingChannel<V>, K, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: lload_3
       5: invokedynamic #283,  0            // InvokeDynamic #242:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;J)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  public reactor.core.publisher.Mono<java.lang.Long> srem(K, V...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #284,  0            // InvokeDynamic #243:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.ValueScanCursor<V>> sscan(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #285,  0            // InvokeDynamic #244:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.ValueScanCursor<V>> sscan(K, io.lettuce.core.ScanArgs);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #286,  0            // InvokeDynamic #245:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Lio/lettuce/core/ScanArgs;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.ValueScanCursor<V>> sscan(K, io.lettuce.core.ScanCursor, io.lettuce.core.ScanArgs);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #287,  0            // InvokeDynamic #246:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Lio/lettuce/core/ScanCursor;Lio/lettuce/core/ScanArgs;)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.ValueScanCursor<V>> sscan(K, io.lettuce.core.ScanCursor);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #288,  0            // InvokeDynamic #247:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Lio/lettuce/core/ScanCursor;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.StreamScanCursor> sscan(io.lettuce.core.output.ValueStreamingChannel<V>, K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #289,  0            // InvokeDynamic #248:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.StreamScanCursor> sscan(io.lettuce.core.output.ValueStreamingChannel<V>, K, io.lettuce.core.ScanArgs);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #290,  0            // InvokeDynamic #249:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/ScanArgs;)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.StreamScanCursor> sscan(io.lettuce.core.output.ValueStreamingChannel<V>, K, io.lettuce.core.ScanCursor, io.lettuce.core.ScanArgs);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: aload         4
       7: invokedynamic #291,  0            // InvokeDynamic #250:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/ScanCursor;Lio/lettuce/core/ScanArgs;)Ljava/util/function/Supplier;
      12: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      15: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.StreamScanCursor> sscan(io.lettuce.core.output.ValueStreamingChannel<V>, K, io.lettuce.core.ScanCursor);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #292,  0            // InvokeDynamic #251:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/ScanCursor;)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  public reactor.core.publisher.Mono<java.lang.Long> strlen(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #293,  0            // InvokeDynamic #252:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Flux<V> sunion(K...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #294,  0            // InvokeDynamic #253:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Long> sunion(io.lettuce.core.output.ValueStreamingChannel<V>, K...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #295,  0            // InvokeDynamic #254:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ValueStreamingChannel;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> sunionstore(K, K...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #296,  0            // InvokeDynamic #255:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.String> swapdb(int, int);
    Code:
       0: aload_0
       1: aload_0
       2: iload_1
       3: iload_2
       4: invokedynamic #297,  0            // InvokeDynamic #256:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;II)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Flux<V> time();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #298,  0            // InvokeDynamic #257:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      18: areturn

  public reactor.core.publisher.Mono<java.lang.Long> touch(K...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #299,  0            // InvokeDynamic #258:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Long> touch(java.lang.Iterable<K>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #300,  0            // InvokeDynamic #259:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Iterable;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Long> ttl(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #301,  0            // InvokeDynamic #260:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.String> type(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #302,  0            // InvokeDynamic #261:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Long> unlink(K...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #303,  0            // InvokeDynamic #262:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Long> unlink(java.lang.Iterable<K>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #304,  0            // InvokeDynamic #263:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Iterable;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.String> unwatch();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       5: dup
       6: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #305,  0            // InvokeDynamic #264:get:(Lio/lettuce/core/RedisCommandBuilder;)Ljava/util/function/Supplier;
      15: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      18: areturn

  public reactor.core.publisher.Mono<java.lang.Long> waitForReplication(int, long);
    Code:
       0: aload_0
       1: aload_0
       2: iload_1
       3: lload_2
       4: invokedynamic #306,  0            // InvokeDynamic #265:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;IJ)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.String> watch(K...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #307,  0            // InvokeDynamic #266:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zadd(K, double, V);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: dload_2
       4: aload         4
       6: invokedynamic #308,  0            // InvokeDynamic #267:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;DLjava/lang/Object;)Ljava/util/function/Supplier;
      11: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      14: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zadd(K, java.lang.Object...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #309,  0            // InvokeDynamic #268:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zadd(K, io.lettuce.core.ScoredValue<V>...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #310,  0            // InvokeDynamic #269:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;[Lio/lettuce/core/ScoredValue;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zadd(K, io.lettuce.core.ZAddArgs, double, V);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: dload_3
       5: aload         5
       7: invokedynamic #311,  0            // InvokeDynamic #270:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Lio/lettuce/core/ZAddArgs;DLjava/lang/Object;)Ljava/util/function/Supplier;
      12: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      15: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zadd(K, io.lettuce.core.ZAddArgs, java.lang.Object...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #312,  0            // InvokeDynamic #271:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Lio/lettuce/core/ZAddArgs;[Ljava/lang/Object;)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zadd(K, io.lettuce.core.ZAddArgs, io.lettuce.core.ScoredValue<V>...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #313,  0            // InvokeDynamic #272:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Lio/lettuce/core/ZAddArgs;[Lio/lettuce/core/ScoredValue;)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  public reactor.core.publisher.Mono<java.lang.Double> zaddincr(K, double, V);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: dload_2
       4: aload         4
       6: invokedynamic #314,  0            // InvokeDynamic #273:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;DLjava/lang/Object;)Ljava/util/function/Supplier;
      11: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      14: areturn

  public reactor.core.publisher.Mono<java.lang.Double> zaddincr(K, io.lettuce.core.ZAddArgs, double, V);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: dload_3
       5: aload         5
       7: invokedynamic #315,  0            // InvokeDynamic #274:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Lio/lettuce/core/ZAddArgs;DLjava/lang/Object;)Ljava/util/function/Supplier;
      12: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      15: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zcard(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #316,  0            // InvokeDynamic #275:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zcount(K, double, double);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: dload_2
       4: dload         4
       6: invokedynamic #317,  0            // InvokeDynamic #276:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;DD)Ljava/util/function/Supplier;
      11: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      14: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zcount(K, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #318,  0            // InvokeDynamic #277:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zcount(K, io.lettuce.core.Range<? extends java.lang.Number>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #319,  0            // InvokeDynamic #278:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Lio/lettuce/core/Range;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Double> zincrby(K, double, K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: dload_2
       4: aload         4
       6: invokedynamic #320,  0            // InvokeDynamic #279:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;DLjava/lang/Object;)Ljava/util/function/Supplier;
      11: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      14: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zinterstore(K, K...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #321,  0            // InvokeDynamic #280:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zinterstore(K, io.lettuce.core.ZStoreArgs, K...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #322,  0            // InvokeDynamic #281:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Lio/lettuce/core/ZStoreArgs;[Ljava/lang/Object;)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zlexcount(K, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #323,  0            // InvokeDynamic #282:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zlexcount(K, io.lettuce.core.Range<? extends V>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #324,  0            // InvokeDynamic #283:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Lio/lettuce/core/Range;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Flux<V> zrange(K, long, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: lload_2
       4: lload         4
       6: invokedynamic #325,  0            // InvokeDynamic #284:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;JJ)Ljava/util/function/Supplier;
      11: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      14: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zrange(io.lettuce.core.output.ValueStreamingChannel<V>, K, long, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: lload_3
       5: lload         5
       7: invokedynamic #326,  0            // InvokeDynamic #285:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;JJ)Ljava/util/function/Supplier;
      12: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      15: areturn

  public reactor.core.publisher.Flux<io.lettuce.core.ScoredValue<V>> zrangeWithScores(K, long, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: lload_2
       4: lload         4
       6: invokedynamic #327,  0            // InvokeDynamic #286:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;JJ)Ljava/util/function/Supplier;
      11: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      14: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zrangeWithScores(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K, long, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: lload_3
       5: lload         5
       7: invokedynamic #328,  0            // InvokeDynamic #287:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;JJ)Ljava/util/function/Supplier;
      12: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      15: areturn

  public reactor.core.publisher.Flux<V> zrangebylex(K, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #329,  0            // InvokeDynamic #288:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/Supplier;
      10: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      13: areturn

  public reactor.core.publisher.Flux<V> zrangebylex(K, io.lettuce.core.Range<? extends V>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #330,  0            // InvokeDynamic #289:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Lio/lettuce/core/Range;)Ljava/util/function/Supplier;
       9: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      12: areturn

  public reactor.core.publisher.Flux<V> zrangebylex(K, java.lang.String, java.lang.String, long, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: lload         4
       7: lload         6
       9: invokedynamic #331,  0            // InvokeDynamic #290:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;JJ)Ljava/util/function/Supplier;
      14: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      17: areturn

  public reactor.core.publisher.Flux<V> zrangebylex(K, io.lettuce.core.Range<? extends V>, io.lettuce.core.Limit);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #332,  0            // InvokeDynamic #291:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Lio/lettuce/core/Range;Lio/lettuce/core/Limit;)Ljava/util/function/Supplier;
      10: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      13: areturn

  public reactor.core.publisher.Flux<V> zrangebyscore(K, double, double);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: dload_2
       4: dload         4
       6: invokedynamic #333,  0            // InvokeDynamic #292:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;DD)Ljava/util/function/Supplier;
      11: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      14: areturn

  public reactor.core.publisher.Flux<V> zrangebyscore(K, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #334,  0            // InvokeDynamic #293:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/Supplier;
      10: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      13: areturn

  public reactor.core.publisher.Flux<V> zrangebyscore(K, double, double, long, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: dload_2
       4: dload         4
       6: lload         6
       8: lload         8
      10: invokedynamic #335,  0            // InvokeDynamic #294:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;DDJJ)Ljava/util/function/Supplier;
      15: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      18: areturn

  public reactor.core.publisher.Flux<V> zrangebyscore(K, java.lang.String, java.lang.String, long, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: lload         4
       7: lload         6
       9: invokedynamic #336,  0            // InvokeDynamic #295:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;JJ)Ljava/util/function/Supplier;
      14: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      17: areturn

  public reactor.core.publisher.Flux<V> zrangebyscore(K, io.lettuce.core.Range<? extends java.lang.Number>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #337,  0            // InvokeDynamic #296:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Lio/lettuce/core/Range;)Ljava/util/function/Supplier;
       9: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      12: areturn

  public reactor.core.publisher.Flux<V> zrangebyscore(K, io.lettuce.core.Range<? extends java.lang.Number>, io.lettuce.core.Limit);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #338,  0            // InvokeDynamic #297:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Lio/lettuce/core/Range;Lio/lettuce/core/Limit;)Ljava/util/function/Supplier;
      10: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      13: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zrangebyscore(io.lettuce.core.output.ValueStreamingChannel<V>, K, double, double);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: dload_3
       5: dload         5
       7: invokedynamic #339,  0            // InvokeDynamic #298:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;DD)Ljava/util/function/Supplier;
      12: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      15: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zrangebyscore(io.lettuce.core.output.ValueStreamingChannel<V>, K, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: aload         4
       7: invokedynamic #340,  0            // InvokeDynamic #299:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/Supplier;
      12: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      15: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zrangebyscore(io.lettuce.core.output.ValueStreamingChannel<V>, K, double, double, long, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: dload_3
       5: dload         5
       7: lload         7
       9: lload         9
      11: invokedynamic #341,  0            // InvokeDynamic #300:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;DDJJ)Ljava/util/function/Supplier;
      16: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      19: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zrangebyscore(io.lettuce.core.output.ValueStreamingChannel<V>, K, io.lettuce.core.Range<? extends java.lang.Number>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #342,  0            // InvokeDynamic #301:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/Range;)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zrangebyscore(io.lettuce.core.output.ValueStreamingChannel<V>, K, java.lang.String, java.lang.String, long, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: aload         4
       7: lload         5
       9: lload         7
      11: invokedynamic #343,  0            // InvokeDynamic #302:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;JJ)Ljava/util/function/Supplier;
      16: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      19: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zrangebyscore(io.lettuce.core.output.ValueStreamingChannel<V>, K, io.lettuce.core.Range<? extends java.lang.Number>, io.lettuce.core.Limit);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: aload         4
       7: invokedynamic #344,  0            // InvokeDynamic #303:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/Range;Lio/lettuce/core/Limit;)Ljava/util/function/Supplier;
      12: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      15: areturn

  public reactor.core.publisher.Flux<io.lettuce.core.ScoredValue<V>> zrangebyscoreWithScores(K, double, double);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: dload_2
       4: dload         4
       6: invokedynamic #345,  0            // InvokeDynamic #304:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;DD)Ljava/util/function/Supplier;
      11: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      14: areturn

  public reactor.core.publisher.Flux<io.lettuce.core.ScoredValue<V>> zrangebyscoreWithScores(K, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #346,  0            // InvokeDynamic #305:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/Supplier;
      10: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      13: areturn

  public reactor.core.publisher.Flux<io.lettuce.core.ScoredValue<V>> zrangebyscoreWithScores(K, double, double, long, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: dload_2
       4: dload         4
       6: lload         6
       8: lload         8
      10: invokedynamic #347,  0            // InvokeDynamic #306:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;DDJJ)Ljava/util/function/Supplier;
      15: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      18: areturn

  public reactor.core.publisher.Flux<io.lettuce.core.ScoredValue<V>> zrangebyscoreWithScores(K, java.lang.String, java.lang.String, long, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: lload         4
       7: lload         6
       9: invokedynamic #348,  0            // InvokeDynamic #307:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;JJ)Ljava/util/function/Supplier;
      14: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      17: areturn

  public reactor.core.publisher.Flux<io.lettuce.core.ScoredValue<V>> zrangebyscoreWithScores(K, io.lettuce.core.Range<? extends java.lang.Number>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #349,  0            // InvokeDynamic #308:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Lio/lettuce/core/Range;)Ljava/util/function/Supplier;
       9: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      12: areturn

  public reactor.core.publisher.Flux<io.lettuce.core.ScoredValue<V>> zrangebyscoreWithScores(K, io.lettuce.core.Range<? extends java.lang.Number>, io.lettuce.core.Limit);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #350,  0            // InvokeDynamic #309:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Lio/lettuce/core/Range;Lio/lettuce/core/Limit;)Ljava/util/function/Supplier;
      10: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      13: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zrangebyscoreWithScores(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K, double, double);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: dload_3
       5: dload         5
       7: invokedynamic #351,  0            // InvokeDynamic #310:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;DD)Ljava/util/function/Supplier;
      12: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      15: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zrangebyscoreWithScores(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: aload         4
       7: invokedynamic #352,  0            // InvokeDynamic #311:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/Supplier;
      12: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      15: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zrangebyscoreWithScores(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K, io.lettuce.core.Range<? extends java.lang.Number>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #353,  0            // InvokeDynamic #312:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/Range;)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zrangebyscoreWithScores(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K, double, double, long, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: dload_3
       5: dload         5
       7: lload         7
       9: lload         9
      11: invokedynamic #354,  0            // InvokeDynamic #313:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;DDJJ)Ljava/util/function/Supplier;
      16: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      19: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zrangebyscoreWithScores(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K, java.lang.String, java.lang.String, long, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: aload         4
       7: lload         5
       9: lload         7
      11: invokedynamic #355,  0            // InvokeDynamic #314:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;JJ)Ljava/util/function/Supplier;
      16: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      19: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zrangebyscoreWithScores(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K, io.lettuce.core.Range<? extends java.lang.Number>, io.lettuce.core.Limit);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: aload         4
       7: invokedynamic #356,  0            // InvokeDynamic #315:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/Range;Lio/lettuce/core/Limit;)Ljava/util/function/Supplier;
      12: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      15: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zrank(K, V);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #357,  0            // InvokeDynamic #316:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zrem(K, V...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #358,  0            // InvokeDynamic #317:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zremrangebylex(K, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #359,  0            // InvokeDynamic #318:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zremrangebylex(K, io.lettuce.core.Range<? extends V>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #360,  0            // InvokeDynamic #319:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Lio/lettuce/core/Range;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zremrangebyrank(K, long, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: lload_2
       4: lload         4
       6: invokedynamic #361,  0            // InvokeDynamic #320:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;JJ)Ljava/util/function/Supplier;
      11: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      14: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zremrangebyscore(K, double, double);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: dload_2
       4: dload         4
       6: invokedynamic #362,  0            // InvokeDynamic #321:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;DD)Ljava/util/function/Supplier;
      11: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      14: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zremrangebyscore(K, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #363,  0            // InvokeDynamic #322:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zremrangebyscore(K, io.lettuce.core.Range<? extends java.lang.Number>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #364,  0            // InvokeDynamic #323:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Lio/lettuce/core/Range;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Flux<V> zrevrange(K, long, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: lload_2
       4: lload         4
       6: invokedynamic #365,  0            // InvokeDynamic #324:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;JJ)Ljava/util/function/Supplier;
      11: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      14: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zrevrange(io.lettuce.core.output.ValueStreamingChannel<V>, K, long, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: lload_3
       5: lload         5
       7: invokedynamic #366,  0            // InvokeDynamic #325:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;JJ)Ljava/util/function/Supplier;
      12: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      15: areturn

  public reactor.core.publisher.Flux<io.lettuce.core.ScoredValue<V>> zrevrangeWithScores(K, long, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: lload_2
       4: lload         4
       6: invokedynamic #367,  0            // InvokeDynamic #326:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;JJ)Ljava/util/function/Supplier;
      11: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      14: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zrevrangeWithScores(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K, long, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: lload_3
       5: lload         5
       7: invokedynamic #368,  0            // InvokeDynamic #327:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;JJ)Ljava/util/function/Supplier;
      12: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      15: areturn

  public reactor.core.publisher.Flux<V> zrevrangebylex(K, io.lettuce.core.Range<? extends V>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #369,  0            // InvokeDynamic #328:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Lio/lettuce/core/Range;)Ljava/util/function/Supplier;
       9: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      12: areturn

  public reactor.core.publisher.Flux<V> zrevrangebylex(K, io.lettuce.core.Range<? extends V>, io.lettuce.core.Limit);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #370,  0            // InvokeDynamic #329:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Lio/lettuce/core/Range;Lio/lettuce/core/Limit;)Ljava/util/function/Supplier;
      10: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      13: areturn

  public reactor.core.publisher.Flux<V> zrevrangebyscore(K, double, double);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: dload_2
       4: dload         4
       6: invokedynamic #371,  0            // InvokeDynamic #330:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;DD)Ljava/util/function/Supplier;
      11: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      14: areturn

  public reactor.core.publisher.Flux<V> zrevrangebyscore(K, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #372,  0            // InvokeDynamic #331:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/Supplier;
      10: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      13: areturn

  public reactor.core.publisher.Flux<V> zrevrangebyscore(K, io.lettuce.core.Range<? extends java.lang.Number>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #373,  0            // InvokeDynamic #332:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Lio/lettuce/core/Range;)Ljava/util/function/Supplier;
       9: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      12: areturn

  public reactor.core.publisher.Flux<V> zrevrangebyscore(K, double, double, long, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: dload_2
       4: dload         4
       6: lload         6
       8: lload         8
      10: invokedynamic #374,  0            // InvokeDynamic #333:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;DDJJ)Ljava/util/function/Supplier;
      15: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      18: areturn

  public reactor.core.publisher.Flux<V> zrevrangebyscore(K, java.lang.String, java.lang.String, long, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: lload         4
       7: lload         6
       9: invokedynamic #375,  0            // InvokeDynamic #334:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;JJ)Ljava/util/function/Supplier;
      14: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      17: areturn

  public reactor.core.publisher.Flux<V> zrevrangebyscore(K, io.lettuce.core.Range<? extends java.lang.Number>, io.lettuce.core.Limit);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #376,  0            // InvokeDynamic #335:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Lio/lettuce/core/Range;Lio/lettuce/core/Limit;)Ljava/util/function/Supplier;
      10: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      13: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zrevrangebyscore(io.lettuce.core.output.ValueStreamingChannel<V>, K, double, double);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: dload_3
       5: dload         5
       7: invokedynamic #377,  0            // InvokeDynamic #336:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;DD)Ljava/util/function/Supplier;
      12: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      15: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zrevrangebyscore(io.lettuce.core.output.ValueStreamingChannel<V>, K, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: aload         4
       7: invokedynamic #378,  0            // InvokeDynamic #337:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/Supplier;
      12: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      15: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zrevrangebyscore(io.lettuce.core.output.ValueStreamingChannel<V>, K, io.lettuce.core.Range<? extends java.lang.Number>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #379,  0            // InvokeDynamic #338:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/Range;)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zrevrangebyscore(io.lettuce.core.output.ValueStreamingChannel<V>, K, double, double, long, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: dload_3
       5: dload         5
       7: lload         7
       9: lload         9
      11: invokedynamic #380,  0            // InvokeDynamic #339:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;DDJJ)Ljava/util/function/Supplier;
      16: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      19: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zrevrangebyscore(io.lettuce.core.output.ValueStreamingChannel<V>, K, java.lang.String, java.lang.String, long, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: aload         4
       7: lload         5
       9: lload         7
      11: invokedynamic #381,  0            // InvokeDynamic #340:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;JJ)Ljava/util/function/Supplier;
      16: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      19: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zrevrangebyscore(io.lettuce.core.output.ValueStreamingChannel<V>, K, io.lettuce.core.Range<? extends java.lang.Number>, io.lettuce.core.Limit);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: aload         4
       7: invokedynamic #382,  0            // InvokeDynamic #341:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/Range;Lio/lettuce/core/Limit;)Ljava/util/function/Supplier;
      12: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      15: areturn

  public reactor.core.publisher.Flux<io.lettuce.core.ScoredValue<V>> zrevrangebyscoreWithScores(K, double, double);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: dload_2
       4: dload         4
       6: invokedynamic #383,  0            // InvokeDynamic #342:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;DD)Ljava/util/function/Supplier;
      11: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      14: areturn

  public reactor.core.publisher.Flux<io.lettuce.core.ScoredValue<V>> zrevrangebyscoreWithScores(K, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #384,  0            // InvokeDynamic #343:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/Supplier;
      10: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      13: areturn

  public reactor.core.publisher.Flux<io.lettuce.core.ScoredValue<V>> zrevrangebyscoreWithScores(K, io.lettuce.core.Range<? extends java.lang.Number>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #385,  0            // InvokeDynamic #344:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Lio/lettuce/core/Range;)Ljava/util/function/Supplier;
       9: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      12: areturn

  public reactor.core.publisher.Flux<io.lettuce.core.ScoredValue<V>> zrevrangebyscoreWithScores(K, double, double, long, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: dload_2
       4: dload         4
       6: lload         6
       8: lload         8
      10: invokedynamic #386,  0            // InvokeDynamic #345:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;DDJJ)Ljava/util/function/Supplier;
      15: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      18: areturn

  public reactor.core.publisher.Flux<io.lettuce.core.ScoredValue<V>> zrevrangebyscoreWithScores(K, java.lang.String, java.lang.String, long, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: lload         4
       7: lload         6
       9: invokedynamic #387,  0            // InvokeDynamic #346:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;JJ)Ljava/util/function/Supplier;
      14: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      17: areturn

  public reactor.core.publisher.Flux<io.lettuce.core.ScoredValue<V>> zrevrangebyscoreWithScores(K, io.lettuce.core.Range<? extends java.lang.Number>, io.lettuce.core.Limit);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #388,  0            // InvokeDynamic #347:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Lio/lettuce/core/Range;Lio/lettuce/core/Limit;)Ljava/util/function/Supplier;
      10: invokevirtual #17                 // Method createDissolvingFlux:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      13: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zrevrangebyscoreWithScores(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K, double, double);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: dload_3
       5: dload         5
       7: invokedynamic #389,  0            // InvokeDynamic #348:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;DD)Ljava/util/function/Supplier;
      12: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      15: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zrevrangebyscoreWithScores(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: aload         4
       7: invokedynamic #390,  0            // InvokeDynamic #349:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/Supplier;
      12: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      15: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zrevrangebyscoreWithScores(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K, io.lettuce.core.Range<? extends java.lang.Number>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #391,  0            // InvokeDynamic #350:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/Range;)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zrevrangebyscoreWithScores(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K, double, double, long, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: dload_3
       5: dload         5
       7: lload         7
       9: lload         9
      11: invokedynamic #392,  0            // InvokeDynamic #351:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;DDJJ)Ljava/util/function/Supplier;
      16: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      19: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zrevrangebyscoreWithScores(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K, java.lang.String, java.lang.String, long, long);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: aload         4
       7: lload         5
       9: lload         7
      11: invokedynamic #393,  0            // InvokeDynamic #352:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;JJ)Ljava/util/function/Supplier;
      16: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      19: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zrevrangebyscoreWithScores(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K, io.lettuce.core.Range<? extends java.lang.Number>, io.lettuce.core.Limit);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: aload         4
       7: invokedynamic #394,  0            // InvokeDynamic #353:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/Range;Lio/lettuce/core/Limit;)Ljava/util/function/Supplier;
      12: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      15: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zrevrank(K, V);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #395,  0            // InvokeDynamic #354:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.ScoredValueScanCursor<V>> zscan(K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #396,  0            // InvokeDynamic #355:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      11: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.ScoredValueScanCursor<V>> zscan(K, io.lettuce.core.ScanArgs);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #397,  0            // InvokeDynamic #356:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Lio/lettuce/core/ScanArgs;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.ScoredValueScanCursor<V>> zscan(K, io.lettuce.core.ScanCursor, io.lettuce.core.ScanArgs);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #398,  0            // InvokeDynamic #357:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Lio/lettuce/core/ScanCursor;Lio/lettuce/core/ScanArgs;)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.ScoredValueScanCursor<V>> zscan(K, io.lettuce.core.ScanCursor);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #399,  0            // InvokeDynamic #358:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Lio/lettuce/core/ScanCursor;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.StreamScanCursor> zscan(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #400,  0            // InvokeDynamic #359:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.StreamScanCursor> zscan(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K, io.lettuce.core.ScanArgs);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #401,  0            // InvokeDynamic #360:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/ScanArgs;)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.StreamScanCursor> zscan(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K, io.lettuce.core.ScanCursor, io.lettuce.core.ScanArgs);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: aload         4
       7: invokedynamic #402,  0            // InvokeDynamic #361:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/ScanCursor;Lio/lettuce/core/ScanArgs;)Ljava/util/function/Supplier;
      12: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      15: areturn

  public reactor.core.publisher.Mono<io.lettuce.core.StreamScanCursor> zscan(io.lettuce.core.output.ScoredValueStreamingChannel<V>, K, io.lettuce.core.ScanCursor);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #403,  0            // InvokeDynamic #362:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/ScanCursor;)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  public reactor.core.publisher.Mono<java.lang.Double> zscore(K, V);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #404,  0            // InvokeDynamic #363:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zunionstore(K, K...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #405,  0            // InvokeDynamic #364:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/function/Supplier;
       9: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  public reactor.core.publisher.Mono<java.lang.Long> zunionstore(K, io.lettuce.core.ZStoreArgs, K...);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokedynamic #406,  0            // InvokeDynamic #365:get:(Lio/lettuce/core/AbstractRedisReactiveCommands;Ljava/lang/Object;Lio/lettuce/core/ZStoreArgs;[Ljava/lang/Object;)Ljava/util/function/Supplier;
      10: invokevirtual #8                  // Method createMono:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      13: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zunionstore$326(java.lang.Object, io.lettuce.core.ZStoreArgs, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #407                // Method io/lettuce/core/RedisCommandBuilder.zunionstore:(Ljava/lang/Object;Lio/lettuce/core/ZStoreArgs;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zunionstore$325(java.lang.Object, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #408                // Method io/lettuce/core/RedisCommandBuilder.zunionstore:(Ljava/lang/Object;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zscore$324(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #409                // Method io/lettuce/core/RedisCommandBuilder.zscore:(Ljava/lang/Object;Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zscan$323(io.lettuce.core.output.ScoredValueStreamingChannel, java.lang.Object, io.lettuce.core.ScanCursor);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #410                // Method io/lettuce/core/RedisCommandBuilder.zscanStreaming:(Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/ScanCursor;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zscan$322(io.lettuce.core.output.ScoredValueStreamingChannel, java.lang.Object, io.lettuce.core.ScanCursor, io.lettuce.core.ScanArgs);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #411                // Method io/lettuce/core/RedisCommandBuilder.zscanStreaming:(Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/ScanCursor;Lio/lettuce/core/ScanArgs;)Lio/lettuce/core/protocol/Command;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zscan$321(io.lettuce.core.output.ScoredValueStreamingChannel, java.lang.Object, io.lettuce.core.ScanArgs);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #412                // Method io/lettuce/core/RedisCommandBuilder.zscanStreaming:(Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/ScanArgs;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zscan$320(io.lettuce.core.output.ScoredValueStreamingChannel, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #413                // Method io/lettuce/core/RedisCommandBuilder.zscanStreaming:(Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zscan$319(java.lang.Object, io.lettuce.core.ScanCursor);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #414                // Method io/lettuce/core/RedisCommandBuilder.zscan:(Ljava/lang/Object;Lio/lettuce/core/ScanCursor;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zscan$318(java.lang.Object, io.lettuce.core.ScanCursor, io.lettuce.core.ScanArgs);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #415                // Method io/lettuce/core/RedisCommandBuilder.zscan:(Ljava/lang/Object;Lio/lettuce/core/ScanCursor;Lio/lettuce/core/ScanArgs;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zscan$317(java.lang.Object, io.lettuce.core.ScanArgs);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #416                // Method io/lettuce/core/RedisCommandBuilder.zscan:(Ljava/lang/Object;Lio/lettuce/core/ScanArgs;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zscan$316(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #417                // Method io/lettuce/core/RedisCommandBuilder.zscan:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrevrank$315(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #418                // Method io/lettuce/core/RedisCommandBuilder.zrevrank:(Ljava/lang/Object;Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrevrangebyscoreWithScores$314(io.lettuce.core.output.ScoredValueStreamingChannel, java.lang.Object, io.lettuce.core.Range, io.lettuce.core.Limit);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #419                // Method io/lettuce/core/RedisCommandBuilder.zrevrangebyscoreWithScores:(Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/Range;Lio/lettuce/core/Limit;)Lio/lettuce/core/protocol/Command;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrevrangebyscoreWithScores$313(io.lettuce.core.output.ScoredValueStreamingChannel, java.lang.Object, java.lang.String, java.lang.String, long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: lload         5
      11: lload         7
      13: invokevirtual #420                // Method io/lettuce/core/RedisCommandBuilder.zrevrangebyscoreWithScores:(Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;JJ)Lio/lettuce/core/protocol/Command;
      16: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrevrangebyscoreWithScores$312(io.lettuce.core.output.ScoredValueStreamingChannel, java.lang.Object, double, double, long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: dload_3
       7: dload         5
       9: lload         7
      11: lload         9
      13: invokevirtual #421                // Method io/lettuce/core/RedisCommandBuilder.zrevrangebyscoreWithScores:(Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;DDJJ)Lio/lettuce/core/protocol/Command;
      16: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrevrangebyscoreWithScores$311(io.lettuce.core.output.ScoredValueStreamingChannel, java.lang.Object, io.lettuce.core.Range);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokestatic  #422                // Method io/lettuce/core/Limit.unlimited:()Lio/lettuce/core/Limit;
      10: invokevirtual #419                // Method io/lettuce/core/RedisCommandBuilder.zrevrangebyscoreWithScores:(Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/Range;Lio/lettuce/core/Limit;)Lio/lettuce/core/protocol/Command;
      13: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrevrangebyscoreWithScores$310(io.lettuce.core.output.ScoredValueStreamingChannel, java.lang.Object, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #423                // Method io/lettuce/core/RedisCommandBuilder.zrevrangebyscoreWithScores:(Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Lio/lettuce/core/protocol/Command;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrevrangebyscoreWithScores$309(io.lettuce.core.output.ScoredValueStreamingChannel, java.lang.Object, double, double);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: dload_3
       7: dload         5
       9: invokevirtual #424                // Method io/lettuce/core/RedisCommandBuilder.zrevrangebyscoreWithScores:(Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;DD)Lio/lettuce/core/protocol/Command;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrevrangebyscoreWithScores$308(java.lang.Object, io.lettuce.core.Range, io.lettuce.core.Limit);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #425                // Method io/lettuce/core/RedisCommandBuilder.zrevrangebyscoreWithScores:(Ljava/lang/Object;Lio/lettuce/core/Range;Lio/lettuce/core/Limit;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrevrangebyscoreWithScores$307(java.lang.Object, java.lang.String, java.lang.String, long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: lload         4
       9: lload         6
      11: invokevirtual #426                // Method io/lettuce/core/RedisCommandBuilder.zrevrangebyscoreWithScores:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;JJ)Lio/lettuce/core/protocol/Command;
      14: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrevrangebyscoreWithScores$306(java.lang.Object, double, double, long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: dload_2
       6: dload         4
       8: lload         6
      10: lload         8
      12: invokevirtual #427                // Method io/lettuce/core/RedisCommandBuilder.zrevrangebyscoreWithScores:(Ljava/lang/Object;DDJJ)Lio/lettuce/core/protocol/Command;
      15: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrevrangebyscoreWithScores$305(java.lang.Object, io.lettuce.core.Range);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokestatic  #422                // Method io/lettuce/core/Limit.unlimited:()Lio/lettuce/core/Limit;
       9: invokevirtual #425                // Method io/lettuce/core/RedisCommandBuilder.zrevrangebyscoreWithScores:(Ljava/lang/Object;Lio/lettuce/core/Range;Lio/lettuce/core/Limit;)Lio/lettuce/core/protocol/Command;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrevrangebyscoreWithScores$304(java.lang.Object, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #428                // Method io/lettuce/core/RedisCommandBuilder.zrevrangebyscoreWithScores:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrevrangebyscoreWithScores$303(java.lang.Object, double, double);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: dload_2
       6: dload         4
       8: invokevirtual #429                // Method io/lettuce/core/RedisCommandBuilder.zrevrangebyscoreWithScores:(Ljava/lang/Object;DD)Lio/lettuce/core/protocol/Command;
      11: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrevrangebyscore$302(io.lettuce.core.output.ValueStreamingChannel, java.lang.Object, io.lettuce.core.Range, io.lettuce.core.Limit);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #430                // Method io/lettuce/core/RedisCommandBuilder.zrevrangebyscore:(Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/Range;Lio/lettuce/core/Limit;)Lio/lettuce/core/protocol/Command;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrevrangebyscore$301(io.lettuce.core.output.ValueStreamingChannel, java.lang.Object, java.lang.String, java.lang.String, long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: lload         5
      11: lload         7
      13: invokevirtual #431                // Method io/lettuce/core/RedisCommandBuilder.zrevrangebyscore:(Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;JJ)Lio/lettuce/core/protocol/Command;
      16: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrevrangebyscore$300(io.lettuce.core.output.ValueStreamingChannel, java.lang.Object, double, double, long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: dload_3
       7: dload         5
       9: lload         7
      11: lload         9
      13: invokevirtual #432                // Method io/lettuce/core/RedisCommandBuilder.zrevrangebyscore:(Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;DDJJ)Lio/lettuce/core/protocol/Command;
      16: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrevrangebyscore$299(io.lettuce.core.output.ValueStreamingChannel, java.lang.Object, io.lettuce.core.Range);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokestatic  #422                // Method io/lettuce/core/Limit.unlimited:()Lio/lettuce/core/Limit;
      10: invokevirtual #430                // Method io/lettuce/core/RedisCommandBuilder.zrevrangebyscore:(Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/Range;Lio/lettuce/core/Limit;)Lio/lettuce/core/protocol/Command;
      13: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrevrangebyscore$298(io.lettuce.core.output.ValueStreamingChannel, java.lang.Object, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #433                // Method io/lettuce/core/RedisCommandBuilder.zrevrangebyscore:(Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Lio/lettuce/core/protocol/Command;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrevrangebyscore$297(io.lettuce.core.output.ValueStreamingChannel, java.lang.Object, double, double);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: dload_3
       7: dload         5
       9: invokevirtual #434                // Method io/lettuce/core/RedisCommandBuilder.zrevrangebyscore:(Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;DD)Lio/lettuce/core/protocol/Command;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrevrangebyscore$296(java.lang.Object, io.lettuce.core.Range, io.lettuce.core.Limit);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #435                // Method io/lettuce/core/RedisCommandBuilder.zrevrangebyscore:(Ljava/lang/Object;Lio/lettuce/core/Range;Lio/lettuce/core/Limit;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrevrangebyscore$295(java.lang.Object, java.lang.String, java.lang.String, long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: lload         4
       9: lload         6
      11: invokevirtual #436                // Method io/lettuce/core/RedisCommandBuilder.zrevrangebyscore:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;JJ)Lio/lettuce/core/protocol/Command;
      14: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrevrangebyscore$294(java.lang.Object, double, double, long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: dload_2
       6: dload         4
       8: lload         6
      10: lload         8
      12: invokevirtual #437                // Method io/lettuce/core/RedisCommandBuilder.zrevrangebyscore:(Ljava/lang/Object;DDJJ)Lio/lettuce/core/protocol/Command;
      15: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrevrangebyscore$293(java.lang.Object, io.lettuce.core.Range);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokestatic  #422                // Method io/lettuce/core/Limit.unlimited:()Lio/lettuce/core/Limit;
       9: invokevirtual #435                // Method io/lettuce/core/RedisCommandBuilder.zrevrangebyscore:(Ljava/lang/Object;Lio/lettuce/core/Range;Lio/lettuce/core/Limit;)Lio/lettuce/core/protocol/Command;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrevrangebyscore$292(java.lang.Object, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #438                // Method io/lettuce/core/RedisCommandBuilder.zrevrangebyscore:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrevrangebyscore$291(java.lang.Object, double, double);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: dload_2
       6: dload         4
       8: invokevirtual #439                // Method io/lettuce/core/RedisCommandBuilder.zrevrangebyscore:(Ljava/lang/Object;DD)Lio/lettuce/core/protocol/Command;
      11: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrevrangebylex$290(java.lang.Object, io.lettuce.core.Range, io.lettuce.core.Limit);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #440                // Method io/lettuce/core/RedisCommandBuilder.zrevrangebylex:(Ljava/lang/Object;Lio/lettuce/core/Range;Lio/lettuce/core/Limit;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrevrangebylex$289(java.lang.Object, io.lettuce.core.Range);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokestatic  #422                // Method io/lettuce/core/Limit.unlimited:()Lio/lettuce/core/Limit;
       9: invokevirtual #440                // Method io/lettuce/core/RedisCommandBuilder.zrevrangebylex:(Ljava/lang/Object;Lio/lettuce/core/Range;Lio/lettuce/core/Limit;)Lio/lettuce/core/protocol/Command;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrevrangeWithScores$288(io.lettuce.core.output.ScoredValueStreamingChannel, java.lang.Object, long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: lload_3
       7: lload         5
       9: invokevirtual #441                // Method io/lettuce/core/RedisCommandBuilder.zrevrangeWithScores:(Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;JJ)Lio/lettuce/core/protocol/Command;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrevrangeWithScores$287(java.lang.Object, long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: lload_2
       6: lload         4
       8: invokevirtual #442                // Method io/lettuce/core/RedisCommandBuilder.zrevrangeWithScores:(Ljava/lang/Object;JJ)Lio/lettuce/core/protocol/Command;
      11: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrevrange$286(io.lettuce.core.output.ValueStreamingChannel, java.lang.Object, long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: lload_3
       7: lload         5
       9: invokevirtual #443                // Method io/lettuce/core/RedisCommandBuilder.zrevrange:(Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;JJ)Lio/lettuce/core/protocol/Command;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrevrange$285(java.lang.Object, long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: lload_2
       6: lload         4
       8: invokevirtual #444                // Method io/lettuce/core/RedisCommandBuilder.zrevrange:(Ljava/lang/Object;JJ)Lio/lettuce/core/protocol/Command;
      11: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zremrangebyscore$284(java.lang.Object, io.lettuce.core.Range);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #445                // Method io/lettuce/core/RedisCommandBuilder.zremrangebyscore:(Ljava/lang/Object;Lio/lettuce/core/Range;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zremrangebyscore$283(java.lang.Object, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #446                // Method io/lettuce/core/RedisCommandBuilder.zremrangebyscore:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zremrangebyscore$282(java.lang.Object, double, double);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: dload_2
       6: dload         4
       8: invokevirtual #447                // Method io/lettuce/core/RedisCommandBuilder.zremrangebyscore:(Ljava/lang/Object;DD)Lio/lettuce/core/protocol/Command;
      11: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zremrangebyrank$281(java.lang.Object, long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: lload_2
       6: lload         4
       8: invokevirtual #448                // Method io/lettuce/core/RedisCommandBuilder.zremrangebyrank:(Ljava/lang/Object;JJ)Lio/lettuce/core/protocol/Command;
      11: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zremrangebylex$280(java.lang.Object, io.lettuce.core.Range);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #449                // Method io/lettuce/core/RedisCommandBuilder.zremrangebylex:(Ljava/lang/Object;Lio/lettuce/core/Range;)Lio/lettuce/core/protocol/RedisCommand;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zremrangebylex$279(java.lang.Object, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #450                // Method io/lettuce/core/RedisCommandBuilder.zremrangebylex:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Lio/lettuce/core/protocol/RedisCommand;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrem$278(java.lang.Object, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #451                // Method io/lettuce/core/RedisCommandBuilder.zrem:(Ljava/lang/Object;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrank$277(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #452                // Method io/lettuce/core/RedisCommandBuilder.zrank:(Ljava/lang/Object;Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrangebyscoreWithScores$276(io.lettuce.core.output.ScoredValueStreamingChannel, java.lang.Object, io.lettuce.core.Range, io.lettuce.core.Limit);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #453                // Method io/lettuce/core/RedisCommandBuilder.zrangebyscoreWithScores:(Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/Range;Lio/lettuce/core/Limit;)Lio/lettuce/core/protocol/Command;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrangebyscoreWithScores$275(io.lettuce.core.output.ScoredValueStreamingChannel, java.lang.Object, java.lang.String, java.lang.String, long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: lload         5
      11: lload         7
      13: invokevirtual #454                // Method io/lettuce/core/RedisCommandBuilder.zrangebyscoreWithScores:(Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;JJ)Lio/lettuce/core/protocol/Command;
      16: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrangebyscoreWithScores$274(io.lettuce.core.output.ScoredValueStreamingChannel, java.lang.Object, double, double, long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: dload_3
       7: dload         5
       9: lload         7
      11: lload         9
      13: invokevirtual #455                // Method io/lettuce/core/RedisCommandBuilder.zrangebyscoreWithScores:(Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;DDJJ)Lio/lettuce/core/protocol/Command;
      16: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrangebyscoreWithScores$273(io.lettuce.core.output.ScoredValueStreamingChannel, java.lang.Object, io.lettuce.core.Range);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokestatic  #422                // Method io/lettuce/core/Limit.unlimited:()Lio/lettuce/core/Limit;
      10: invokevirtual #453                // Method io/lettuce/core/RedisCommandBuilder.zrangebyscoreWithScores:(Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/Range;Lio/lettuce/core/Limit;)Lio/lettuce/core/protocol/Command;
      13: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrangebyscoreWithScores$272(io.lettuce.core.output.ScoredValueStreamingChannel, java.lang.Object, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #456                // Method io/lettuce/core/RedisCommandBuilder.zrangebyscoreWithScores:(Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Lio/lettuce/core/protocol/Command;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrangebyscoreWithScores$271(io.lettuce.core.output.ScoredValueStreamingChannel, java.lang.Object, double, double);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: dload_3
       7: dload         5
       9: invokevirtual #457                // Method io/lettuce/core/RedisCommandBuilder.zrangebyscoreWithScores:(Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;DD)Lio/lettuce/core/protocol/Command;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrangebyscoreWithScores$270(java.lang.Object, io.lettuce.core.Range, io.lettuce.core.Limit);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #458                // Method io/lettuce/core/RedisCommandBuilder.zrangebyscoreWithScores:(Ljava/lang/Object;Lio/lettuce/core/Range;Lio/lettuce/core/Limit;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrangebyscoreWithScores$269(java.lang.Object, io.lettuce.core.Range);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokestatic  #422                // Method io/lettuce/core/Limit.unlimited:()Lio/lettuce/core/Limit;
       9: invokevirtual #458                // Method io/lettuce/core/RedisCommandBuilder.zrangebyscoreWithScores:(Ljava/lang/Object;Lio/lettuce/core/Range;Lio/lettuce/core/Limit;)Lio/lettuce/core/protocol/Command;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrangebyscoreWithScores$268(java.lang.Object, java.lang.String, java.lang.String, long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: lload         4
       9: lload         6
      11: invokevirtual #459                // Method io/lettuce/core/RedisCommandBuilder.zrangebyscoreWithScores:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;JJ)Lio/lettuce/core/protocol/Command;
      14: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrangebyscoreWithScores$267(java.lang.Object, double, double, long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: dload_2
       6: dload         4
       8: lload         6
      10: lload         8
      12: invokevirtual #460                // Method io/lettuce/core/RedisCommandBuilder.zrangebyscoreWithScores:(Ljava/lang/Object;DDJJ)Lio/lettuce/core/protocol/Command;
      15: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrangebyscoreWithScores$266(java.lang.Object, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #461                // Method io/lettuce/core/RedisCommandBuilder.zrangebyscoreWithScores:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrangebyscoreWithScores$265(java.lang.Object, double, double);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: dload_2
       6: dload         4
       8: invokevirtual #462                // Method io/lettuce/core/RedisCommandBuilder.zrangebyscoreWithScores:(Ljava/lang/Object;DD)Lio/lettuce/core/protocol/Command;
      11: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrangebyscore$264(io.lettuce.core.output.ValueStreamingChannel, java.lang.Object, io.lettuce.core.Range, io.lettuce.core.Limit);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #463                // Method io/lettuce/core/RedisCommandBuilder.zrangebyscore:(Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/Range;Lio/lettuce/core/Limit;)Lio/lettuce/core/protocol/Command;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrangebyscore$263(io.lettuce.core.output.ValueStreamingChannel, java.lang.Object, java.lang.String, java.lang.String, long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: lload         5
      11: lload         7
      13: invokevirtual #464                // Method io/lettuce/core/RedisCommandBuilder.zrangebyscore:(Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;JJ)Lio/lettuce/core/protocol/Command;
      16: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrangebyscore$262(io.lettuce.core.output.ValueStreamingChannel, java.lang.Object, io.lettuce.core.Range);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokestatic  #422                // Method io/lettuce/core/Limit.unlimited:()Lio/lettuce/core/Limit;
      10: invokevirtual #463                // Method io/lettuce/core/RedisCommandBuilder.zrangebyscore:(Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/Range;Lio/lettuce/core/Limit;)Lio/lettuce/core/protocol/Command;
      13: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrangebyscore$261(io.lettuce.core.output.ValueStreamingChannel, java.lang.Object, double, double, long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: dload_3
       7: dload         5
       9: lload         7
      11: lload         9
      13: invokevirtual #465                // Method io/lettuce/core/RedisCommandBuilder.zrangebyscore:(Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;DDJJ)Lio/lettuce/core/protocol/Command;
      16: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrangebyscore$260(io.lettuce.core.output.ValueStreamingChannel, java.lang.Object, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #466                // Method io/lettuce/core/RedisCommandBuilder.zrangebyscore:(Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Lio/lettuce/core/protocol/Command;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrangebyscore$259(io.lettuce.core.output.ValueStreamingChannel, java.lang.Object, double, double);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: dload_3
       7: dload         5
       9: invokevirtual #467                // Method io/lettuce/core/RedisCommandBuilder.zrangebyscore:(Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;DD)Lio/lettuce/core/protocol/Command;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrangebyscore$258(java.lang.Object, io.lettuce.core.Range, io.lettuce.core.Limit);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #468                // Method io/lettuce/core/RedisCommandBuilder.zrangebyscore:(Ljava/lang/Object;Lio/lettuce/core/Range;Lio/lettuce/core/Limit;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrangebyscore$257(java.lang.Object, io.lettuce.core.Range);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokestatic  #422                // Method io/lettuce/core/Limit.unlimited:()Lio/lettuce/core/Limit;
       9: invokevirtual #468                // Method io/lettuce/core/RedisCommandBuilder.zrangebyscore:(Ljava/lang/Object;Lio/lettuce/core/Range;Lio/lettuce/core/Limit;)Lio/lettuce/core/protocol/Command;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrangebyscore$256(java.lang.Object, java.lang.String, java.lang.String, long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: lload         4
       9: lload         6
      11: invokevirtual #469                // Method io/lettuce/core/RedisCommandBuilder.zrangebyscore:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;JJ)Lio/lettuce/core/protocol/Command;
      14: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrangebyscore$255(java.lang.Object, double, double, long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: dload_2
       6: dload         4
       8: lload         6
      10: lload         8
      12: invokevirtual #470                // Method io/lettuce/core/RedisCommandBuilder.zrangebyscore:(Ljava/lang/Object;DDJJ)Lio/lettuce/core/protocol/Command;
      15: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrangebyscore$254(java.lang.Object, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #471                // Method io/lettuce/core/RedisCommandBuilder.zrangebyscore:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrangebyscore$253(java.lang.Object, double, double);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: dload_2
       6: dload         4
       8: invokevirtual #472                // Method io/lettuce/core/RedisCommandBuilder.zrangebyscore:(Ljava/lang/Object;DD)Lio/lettuce/core/protocol/Command;
      11: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrangebylex$252(java.lang.Object, io.lettuce.core.Range, io.lettuce.core.Limit);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #473                // Method io/lettuce/core/RedisCommandBuilder.zrangebylex:(Ljava/lang/Object;Lio/lettuce/core/Range;Lio/lettuce/core/Limit;)Lio/lettuce/core/protocol/RedisCommand;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrangebylex$251(java.lang.Object, java.lang.String, java.lang.String, long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: lload         4
       9: lload         6
      11: invokevirtual #474                // Method io/lettuce/core/RedisCommandBuilder.zrangebylex:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;JJ)Lio/lettuce/core/protocol/RedisCommand;
      14: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrangebylex$250(java.lang.Object, io.lettuce.core.Range);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokestatic  #422                // Method io/lettuce/core/Limit.unlimited:()Lio/lettuce/core/Limit;
       9: invokevirtual #473                // Method io/lettuce/core/RedisCommandBuilder.zrangebylex:(Ljava/lang/Object;Lio/lettuce/core/Range;Lio/lettuce/core/Limit;)Lio/lettuce/core/protocol/RedisCommand;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrangebylex$249(java.lang.Object, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #475                // Method io/lettuce/core/RedisCommandBuilder.zrangebylex:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Lio/lettuce/core/protocol/RedisCommand;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrangeWithScores$248(io.lettuce.core.output.ScoredValueStreamingChannel, java.lang.Object, long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: lload_3
       7: lload         5
       9: invokevirtual #476                // Method io/lettuce/core/RedisCommandBuilder.zrangeWithScores:(Lio/lettuce/core/output/ScoredValueStreamingChannel;Ljava/lang/Object;JJ)Lio/lettuce/core/protocol/Command;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrangeWithScores$247(java.lang.Object, long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: lload_2
       6: lload         4
       8: invokevirtual #477                // Method io/lettuce/core/RedisCommandBuilder.zrangeWithScores:(Ljava/lang/Object;JJ)Lio/lettuce/core/protocol/Command;
      11: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrange$246(io.lettuce.core.output.ValueStreamingChannel, java.lang.Object, long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: lload_3
       7: lload         5
       9: invokevirtual #478                // Method io/lettuce/core/RedisCommandBuilder.zrange:(Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;JJ)Lio/lettuce/core/protocol/Command;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zrange$245(java.lang.Object, long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: lload_2
       6: lload         4
       8: invokevirtual #479                // Method io/lettuce/core/RedisCommandBuilder.zrange:(Ljava/lang/Object;JJ)Lio/lettuce/core/protocol/Command;
      11: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zlexcount$244(java.lang.Object, io.lettuce.core.Range);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #480                // Method io/lettuce/core/RedisCommandBuilder.zlexcount:(Ljava/lang/Object;Lio/lettuce/core/Range;)Lio/lettuce/core/protocol/RedisCommand;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zlexcount$243(java.lang.Object, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #481                // Method io/lettuce/core/RedisCommandBuilder.zlexcount:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Lio/lettuce/core/protocol/RedisCommand;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zinterstore$242(java.lang.Object, io.lettuce.core.ZStoreArgs, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #482                // Method io/lettuce/core/RedisCommandBuilder.zinterstore:(Ljava/lang/Object;Lio/lettuce/core/ZStoreArgs;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zinterstore$241(java.lang.Object, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #483                // Method io/lettuce/core/RedisCommandBuilder.zinterstore:(Ljava/lang/Object;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zincrby$240(java.lang.Object, double, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: dload_2
       6: aload         4
       8: invokevirtual #484                // Method io/lettuce/core/RedisCommandBuilder.zincrby:(Ljava/lang/Object;DLjava/lang/Object;)Lio/lettuce/core/protocol/Command;
      11: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zcount$239(java.lang.Object, io.lettuce.core.Range);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #485                // Method io/lettuce/core/RedisCommandBuilder.zcount:(Ljava/lang/Object;Lio/lettuce/core/Range;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zcount$238(java.lang.Object, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #486                // Method io/lettuce/core/RedisCommandBuilder.zcount:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zcount$237(java.lang.Object, double, double);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: dload_2
       6: dload         4
       8: invokevirtual #487                // Method io/lettuce/core/RedisCommandBuilder.zcount:(Ljava/lang/Object;DD)Lio/lettuce/core/protocol/Command;
      11: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zcard$236(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #488                // Method io/lettuce/core/RedisCommandBuilder.zcard:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zaddincr$235(java.lang.Object, io.lettuce.core.ZAddArgs, double, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: dload_3
       7: aload         5
       9: invokevirtual #489                // Method io/lettuce/core/RedisCommandBuilder.zaddincr:(Ljava/lang/Object;Lio/lettuce/core/ZAddArgs;DLjava/lang/Object;)Lio/lettuce/core/protocol/Command;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zaddincr$234(java.lang.Object, double, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aconst_null
       6: dload_2
       7: aload         4
       9: invokevirtual #489                // Method io/lettuce/core/RedisCommandBuilder.zaddincr:(Ljava/lang/Object;Lio/lettuce/core/ZAddArgs;DLjava/lang/Object;)Lio/lettuce/core/protocol/Command;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zadd$233(java.lang.Object, io.lettuce.core.ZAddArgs, io.lettuce.core.ScoredValue[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: checkcast     #490                // class "[Ljava/lang/Object;"
      10: invokevirtual #491                // Method io/lettuce/core/RedisCommandBuilder.zadd:(Ljava/lang/Object;Lio/lettuce/core/ZAddArgs;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
      13: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zadd$232(java.lang.Object, io.lettuce.core.ZAddArgs, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #491                // Method io/lettuce/core/RedisCommandBuilder.zadd:(Ljava/lang/Object;Lio/lettuce/core/ZAddArgs;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zadd$231(java.lang.Object, io.lettuce.core.ZAddArgs, double, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: dload_3
       7: aload         5
       9: invokevirtual #492                // Method io/lettuce/core/RedisCommandBuilder.zadd:(Ljava/lang/Object;Lio/lettuce/core/ZAddArgs;DLjava/lang/Object;)Lio/lettuce/core/protocol/Command;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zadd$230(java.lang.Object, io.lettuce.core.ScoredValue[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aconst_null
       6: aload_2
       7: checkcast     #490                // class "[Ljava/lang/Object;"
      10: invokevirtual #491                // Method io/lettuce/core/RedisCommandBuilder.zadd:(Ljava/lang/Object;Lio/lettuce/core/ZAddArgs;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
      13: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zadd$229(java.lang.Object, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aconst_null
       6: aload_2
       7: invokevirtual #491                // Method io/lettuce/core/RedisCommandBuilder.zadd:(Ljava/lang/Object;Lio/lettuce/core/ZAddArgs;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$zadd$228(java.lang.Object, double, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aconst_null
       6: dload_2
       7: aload         4
       9: invokevirtual #492                // Method io/lettuce/core/RedisCommandBuilder.zadd:(Ljava/lang/Object;Lio/lettuce/core/ZAddArgs;DLjava/lang/Object;)Lio/lettuce/core/protocol/Command;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$watch$227(java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #493                // Method io/lettuce/core/RedisCommandBuilder.watch:([Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$waitForReplication$226(int, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: iload_1
       5: lload_2
       6: invokevirtual #494                // Method io/lettuce/core/RedisCommandBuilder.wait:(IJ)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$unlink$225(java.lang.Iterable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #495                // Method io/lettuce/core/RedisCommandBuilder.unlink:(Ljava/lang/Iterable;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$unlink$224(java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #496                // Method io/lettuce/core/RedisCommandBuilder.unlink:([Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$type$223(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #497                // Method io/lettuce/core/RedisCommandBuilder.type:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$ttl$222(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #498                // Method io/lettuce/core/RedisCommandBuilder.ttl:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$touch$221(java.lang.Iterable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #499                // Method io/lettuce/core/RedisCommandBuilder.touch:(Ljava/lang/Iterable;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$touch$220(java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #500                // Method io/lettuce/core/RedisCommandBuilder.touch:([Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$swapdb$219(int, int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: iload_1
       5: iload_2
       6: invokevirtual #501                // Method io/lettuce/core/RedisCommandBuilder.swapdb:(II)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$sunionstore$218(java.lang.Object, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #502                // Method io/lettuce/core/RedisCommandBuilder.sunionstore:(Ljava/lang/Object;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$sunion$217(io.lettuce.core.output.ValueStreamingChannel, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #503                // Method io/lettuce/core/RedisCommandBuilder.sunion:(Lio/lettuce/core/output/ValueStreamingChannel;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$sunion$216(java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #504                // Method io/lettuce/core/RedisCommandBuilder.sunion:([Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$strlen$215(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #505                // Method io/lettuce/core/RedisCommandBuilder.strlen:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$sscan$214(io.lettuce.core.output.ValueStreamingChannel, java.lang.Object, io.lettuce.core.ScanCursor);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #506                // Method io/lettuce/core/RedisCommandBuilder.sscanStreaming:(Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/ScanCursor;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$sscan$213(io.lettuce.core.output.ValueStreamingChannel, java.lang.Object, io.lettuce.core.ScanCursor, io.lettuce.core.ScanArgs);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #507                // Method io/lettuce/core/RedisCommandBuilder.sscanStreaming:(Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/ScanCursor;Lio/lettuce/core/ScanArgs;)Lio/lettuce/core/protocol/Command;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$sscan$212(io.lettuce.core.output.ValueStreamingChannel, java.lang.Object, io.lettuce.core.ScanArgs);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #508                // Method io/lettuce/core/RedisCommandBuilder.sscanStreaming:(Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/ScanArgs;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$sscan$211(io.lettuce.core.output.ValueStreamingChannel, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #509                // Method io/lettuce/core/RedisCommandBuilder.sscanStreaming:(Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$sscan$210(java.lang.Object, io.lettuce.core.ScanCursor);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #510                // Method io/lettuce/core/RedisCommandBuilder.sscan:(Ljava/lang/Object;Lio/lettuce/core/ScanCursor;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$sscan$209(java.lang.Object, io.lettuce.core.ScanCursor, io.lettuce.core.ScanArgs);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #511                // Method io/lettuce/core/RedisCommandBuilder.sscan:(Ljava/lang/Object;Lio/lettuce/core/ScanCursor;Lio/lettuce/core/ScanArgs;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$sscan$208(java.lang.Object, io.lettuce.core.ScanArgs);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #512                // Method io/lettuce/core/RedisCommandBuilder.sscan:(Ljava/lang/Object;Lio/lettuce/core/ScanArgs;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$sscan$207(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #513                // Method io/lettuce/core/RedisCommandBuilder.sscan:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$srem$206(java.lang.Object, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #514                // Method io/lettuce/core/RedisCommandBuilder.srem:(Ljava/lang/Object;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$srandmember$205(io.lettuce.core.output.ValueStreamingChannel, java.lang.Object, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: lload_3
       7: invokevirtual #515                // Method io/lettuce/core/RedisCommandBuilder.srandmember:(Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;J)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$srandmember$204(java.lang.Object, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: lload_2
       6: invokevirtual #516                // Method io/lettuce/core/RedisCommandBuilder.srandmember:(Ljava/lang/Object;J)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$srandmember$203(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #517                // Method io/lettuce/core/RedisCommandBuilder.srandmember:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$spop$202(java.lang.Object, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: lload_2
       6: invokevirtual #518                // Method io/lettuce/core/RedisCommandBuilder.spop:(Ljava/lang/Object;J)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$spop$201(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #519                // Method io/lettuce/core/RedisCommandBuilder.spop:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$sortStore$200(java.lang.Object, io.lettuce.core.SortArgs, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #520                // Method io/lettuce/core/RedisCommandBuilder.sortStore:(Ljava/lang/Object;Lio/lettuce/core/SortArgs;Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$sort$199(io.lettuce.core.output.ValueStreamingChannel, java.lang.Object, io.lettuce.core.SortArgs);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #521                // Method io/lettuce/core/RedisCommandBuilder.sort:(Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/SortArgs;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$sort$198(java.lang.Object, io.lettuce.core.SortArgs);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #522                // Method io/lettuce/core/RedisCommandBuilder.sort:(Ljava/lang/Object;Lio/lettuce/core/SortArgs;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$sort$197(io.lettuce.core.output.ValueStreamingChannel, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #523                // Method io/lettuce/core/RedisCommandBuilder.sort:(Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$sort$196(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #524                // Method io/lettuce/core/RedisCommandBuilder.sort:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$smove$195(java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #525                // Method io/lettuce/core/RedisCommandBuilder.smove:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$smembers$194(io.lettuce.core.output.ValueStreamingChannel, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #526                // Method io/lettuce/core/RedisCommandBuilder.smembers:(Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$smembers$193(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #527                // Method io/lettuce/core/RedisCommandBuilder.smembers:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$slowlogReset$192();
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: invokevirtual #528                // Method io/lettuce/core/RedisCommandBuilder.slowlogReset:()Lio/lettuce/core/protocol/Command;
       7: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$slowlogLen$191();
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: invokevirtual #529                // Method io/lettuce/core/RedisCommandBuilder.slowlogLen:()Lio/lettuce/core/protocol/Command;
       7: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$slowlogGet$190(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: iload_1
       5: invokevirtual #530                // Method io/lettuce/core/RedisCommandBuilder.slowlogGet:(I)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$slowlogGet$189();
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: invokevirtual #531                // Method io/lettuce/core/RedisCommandBuilder.slowlogGet:()Lio/lettuce/core/protocol/Command;
       7: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$slaveofNoOne$188();
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: invokevirtual #532                // Method io/lettuce/core/RedisCommandBuilder.slaveofNoOne:()Lio/lettuce/core/protocol/Command;
       7: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$slaveof$187(java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: iload_2
       6: invokevirtual #533                // Method io/lettuce/core/RedisCommandBuilder.slaveof:(Ljava/lang/String;I)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$sismember$186(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #534                // Method io/lettuce/core/RedisCommandBuilder.sismember:(Ljava/lang/Object;Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$sinterstore$185(java.lang.Object, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #535                // Method io/lettuce/core/RedisCommandBuilder.sinterstore:(Ljava/lang/Object;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$sinter$184(io.lettuce.core.output.ValueStreamingChannel, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #536                // Method io/lettuce/core/RedisCommandBuilder.sinter:(Lio/lettuce/core/output/ValueStreamingChannel;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$sinter$183(java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #537                // Method io/lettuce/core/RedisCommandBuilder.sinter:([Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$shutdown$182(boolean);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: iload_1
       5: invokevirtual #538                // Method io/lettuce/core/RedisCommandBuilder.shutdown:(Z)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$setrange$181(java.lang.Object, long, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: lload_2
       6: aload         4
       8: invokevirtual #539                // Method io/lettuce/core/RedisCommandBuilder.setrange:(Ljava/lang/Object;JLjava/lang/Object;)Lio/lettuce/core/protocol/Command;
      11: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$setnx$180(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #540                // Method io/lettuce/core/RedisCommandBuilder.setnx:(Ljava/lang/Object;Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$setex$179(java.lang.Object, long, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: lload_2
       6: aload         4
       8: invokevirtual #541                // Method io/lettuce/core/RedisCommandBuilder.setex:(Ljava/lang/Object;JLjava/lang/Object;)Lio/lettuce/core/protocol/Command;
      11: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$setbit$178(java.lang.Object, long, int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: lload_2
       6: iload         4
       8: invokevirtual #542                // Method io/lettuce/core/RedisCommandBuilder.setbit:(Ljava/lang/Object;JI)Lio/lettuce/core/protocol/Command;
      11: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$set$177(java.lang.Object, java.lang.Object, io.lettuce.core.SetArgs);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #543                // Method io/lettuce/core/RedisCommandBuilder.set:(Ljava/lang/Object;Ljava/lang/Object;Lio/lettuce/core/SetArgs;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$set$176(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #544                // Method io/lettuce/core/RedisCommandBuilder.set:(Ljava/lang/Object;Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$select$175(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: iload_1
       5: invokevirtual #545                // Method io/lettuce/core/RedisCommandBuilder.select:(I)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$sdiffstore$174(java.lang.Object, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #546                // Method io/lettuce/core/RedisCommandBuilder.sdiffstore:(Ljava/lang/Object;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$sdiff$173(io.lettuce.core.output.ValueStreamingChannel, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #547                // Method io/lettuce/core/RedisCommandBuilder.sdiff:(Lio/lettuce/core/output/ValueStreamingChannel;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$sdiff$172(java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #548                // Method io/lettuce/core/RedisCommandBuilder.sdiff:([Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$scriptLoad$171(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #549                // Method io/lettuce/core/RedisCommandBuilder.scriptLoad:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$scriptExists$170(java.lang.String[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #550                // Method io/lettuce/core/RedisCommandBuilder.scriptExists:([Ljava/lang/String;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$scard$169(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #551                // Method io/lettuce/core/RedisCommandBuilder.scard:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$scan$168(io.lettuce.core.output.KeyStreamingChannel, io.lettuce.core.ScanCursor);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #552                // Method io/lettuce/core/RedisCommandBuilder.scanStreaming:(Lio/lettuce/core/output/KeyStreamingChannel;Lio/lettuce/core/ScanCursor;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$scan$167(io.lettuce.core.output.KeyStreamingChannel, io.lettuce.core.ScanCursor, io.lettuce.core.ScanArgs);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #553                // Method io/lettuce/core/RedisCommandBuilder.scanStreaming:(Lio/lettuce/core/output/KeyStreamingChannel;Lio/lettuce/core/ScanCursor;Lio/lettuce/core/ScanArgs;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$scan$166(io.lettuce.core.output.KeyStreamingChannel, io.lettuce.core.ScanArgs);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #554                // Method io/lettuce/core/RedisCommandBuilder.scanStreaming:(Lio/lettuce/core/output/KeyStreamingChannel;Lio/lettuce/core/ScanArgs;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$scan$165(io.lettuce.core.output.KeyStreamingChannel);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #555                // Method io/lettuce/core/RedisCommandBuilder.scanStreaming:(Lio/lettuce/core/output/KeyStreamingChannel;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$scan$164(io.lettuce.core.ScanCursor);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #556                // Method io/lettuce/core/RedisCommandBuilder.scan:(Lio/lettuce/core/ScanCursor;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$scan$163(io.lettuce.core.ScanCursor, io.lettuce.core.ScanArgs);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #557                // Method io/lettuce/core/RedisCommandBuilder.scan:(Lio/lettuce/core/ScanCursor;Lio/lettuce/core/ScanArgs;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$scan$162(io.lettuce.core.ScanArgs);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #558                // Method io/lettuce/core/RedisCommandBuilder.scan:(Lio/lettuce/core/ScanArgs;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$sadd$161(java.lang.Object, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #559                // Method io/lettuce/core/RedisCommandBuilder.sadd:(Ljava/lang/Object;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$rpushx$160(java.lang.Object, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #560                // Method io/lettuce/core/RedisCommandBuilder.rpushx:(Ljava/lang/Object;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$rpush$159(java.lang.Object, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #561                // Method io/lettuce/core/RedisCommandBuilder.rpush:(Ljava/lang/Object;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$rpoplpush$158(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #562                // Method io/lettuce/core/RedisCommandBuilder.rpoplpush:(Ljava/lang/Object;Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$rpop$157(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #563                // Method io/lettuce/core/RedisCommandBuilder.rpop:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$restore$156(java.lang.Object, long, byte[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: lload_2
       6: aload         4
       8: invokevirtual #564                // Method io/lettuce/core/RedisCommandBuilder.restore:(Ljava/lang/Object;J[B)Lio/lettuce/core/protocol/Command;
      11: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$renamenx$155(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #565                // Method io/lettuce/core/RedisCommandBuilder.renamenx:(Ljava/lang/Object;Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$rename$154(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #566                // Method io/lettuce/core/RedisCommandBuilder.rename:(Ljava/lang/Object;Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$pubsubNumsub$153(java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #567                // Method io/lettuce/core/RedisCommandBuilder.pubsubNumsub:([Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$pubsubChannels$152(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #568                // Method io/lettuce/core/RedisCommandBuilder.pubsubChannels:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$publish$151(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #569                // Method io/lettuce/core/RedisCommandBuilder.publish:(Ljava/lang/Object;Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$pttl$150(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #570                // Method io/lettuce/core/RedisCommandBuilder.pttl:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$psetex$149(java.lang.Object, long, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: lload_2
       6: aload         4
       8: invokevirtual #571                // Method io/lettuce/core/RedisCommandBuilder.psetex:(Ljava/lang/Object;JLjava/lang/Object;)Lio/lettuce/core/protocol/Command;
      11: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$pfmerge$148(java.lang.Object, java.lang.Object, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #572                // Method io/lettuce/core/RedisCommandBuilder.pfmerge:(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$pfmerge$147(java.lang.Object, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #573                // Method io/lettuce/core/RedisCommandBuilder.pfmerge:(Ljava/lang/Object;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$pfcount$146(java.lang.Object, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #574                // Method io/lettuce/core/RedisCommandBuilder.pfcount:(Ljava/lang/Object;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$pfcount$145(java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #575                // Method io/lettuce/core/RedisCommandBuilder.pfcount:([Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$pfadd$144(java.lang.Object, java.lang.Object, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #576                // Method io/lettuce/core/RedisCommandBuilder.pfadd:(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$pfadd$143(java.lang.Object, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #577                // Method io/lettuce/core/RedisCommandBuilder.pfadd:(Ljava/lang/Object;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$pexpireat$142(java.lang.Object, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: lload_2
       6: invokevirtual #578                // Method io/lettuce/core/RedisCommandBuilder.pexpireat:(Ljava/lang/Object;J)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$pexpire$141(java.lang.Object, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: lload_2
       6: invokevirtual #579                // Method io/lettuce/core/RedisCommandBuilder.pexpire:(Ljava/lang/Object;J)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$persist$140(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #580                // Method io/lettuce/core/RedisCommandBuilder.persist:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$objectRefcount$139(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #581                // Method io/lettuce/core/RedisCommandBuilder.objectRefcount:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$objectIdletime$138(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #582                // Method io/lettuce/core/RedisCommandBuilder.objectIdletime:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$objectEncoding$137(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #583                // Method io/lettuce/core/RedisCommandBuilder.objectEncoding:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$msetnx$136(java.util.Map);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #584                // Method io/lettuce/core/RedisCommandBuilder.msetnx:(Ljava/util/Map;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$mset$135(java.util.Map);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #585                // Method io/lettuce/core/RedisCommandBuilder.mset:(Ljava/util/Map;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$move$134(java.lang.Object, int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: iload_2
       6: invokevirtual #586                // Method io/lettuce/core/RedisCommandBuilder.move:(Ljava/lang/Object;I)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$migrate$133(java.lang.String, int, int, long, io.lettuce.core.MigrateArgs);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: iload_2
       6: iload_3
       7: lload         4
       9: aload         6
      11: invokevirtual #587                // Method io/lettuce/core/RedisCommandBuilder.migrate:(Ljava/lang/String;IIJLio/lettuce/core/MigrateArgs;)Lio/lettuce/core/protocol/Command;
      14: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$migrate$132(java.lang.String, int, java.lang.Object, int, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: iload_2
       6: aload_3
       7: iload         4
       9: lload         5
      11: invokevirtual #588                // Method io/lettuce/core/RedisCommandBuilder.migrate:(Ljava/lang/String;ILjava/lang/Object;IJ)Lio/lettuce/core/protocol/Command;
      14: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$mget$131(io.lettuce.core.output.KeyValueStreamingChannel, java.lang.Iterable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #589                // Method io/lettuce/core/RedisCommandBuilder.mget:(Lio/lettuce/core/output/KeyValueStreamingChannel;Ljava/lang/Iterable;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$mget$130(io.lettuce.core.output.ValueStreamingChannel, java.lang.Iterable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #590                // Method io/lettuce/core/RedisCommandBuilder.mget:(Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Iterable;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$mget$129(io.lettuce.core.output.KeyValueStreamingChannel, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #591                // Method io/lettuce/core/RedisCommandBuilder.mget:(Lio/lettuce/core/output/KeyValueStreamingChannel;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$mget$128(java.lang.Iterable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #592                // Method io/lettuce/core/RedisCommandBuilder.mgetKeyValue:(Ljava/lang/Iterable;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$mget$127(java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #593                // Method io/lettuce/core/RedisCommandBuilder.mgetKeyValue:([Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$ltrim$126(java.lang.Object, long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: lload_2
       6: lload         4
       8: invokevirtual #594                // Method io/lettuce/core/RedisCommandBuilder.ltrim:(Ljava/lang/Object;JJ)Lio/lettuce/core/protocol/Command;
      11: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$lset$125(java.lang.Object, long, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: lload_2
       6: aload         4
       8: invokevirtual #595                // Method io/lettuce/core/RedisCommandBuilder.lset:(Ljava/lang/Object;JLjava/lang/Object;)Lio/lettuce/core/protocol/Command;
      11: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$lrem$124(java.lang.Object, long, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: lload_2
       6: aload         4
       8: invokevirtual #596                // Method io/lettuce/core/RedisCommandBuilder.lrem:(Ljava/lang/Object;JLjava/lang/Object;)Lio/lettuce/core/protocol/Command;
      11: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$lrange$123(io.lettuce.core.output.ValueStreamingChannel, java.lang.Object, long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: lload_3
       7: lload         5
       9: invokevirtual #597                // Method io/lettuce/core/RedisCommandBuilder.lrange:(Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;JJ)Lio/lettuce/core/protocol/Command;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$lrange$122(java.lang.Object, long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: lload_2
       6: lload         4
       8: invokevirtual #598                // Method io/lettuce/core/RedisCommandBuilder.lrange:(Ljava/lang/Object;JJ)Lio/lettuce/core/protocol/Command;
      11: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$lpushx$121(java.lang.Object, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #599                // Method io/lettuce/core/RedisCommandBuilder.lpushx:(Ljava/lang/Object;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$lpush$120(java.lang.Object, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #600                // Method io/lettuce/core/RedisCommandBuilder.lpush:(Ljava/lang/Object;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$lpop$119(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #601                // Method io/lettuce/core/RedisCommandBuilder.lpop:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$llen$118(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #602                // Method io/lettuce/core/RedisCommandBuilder.llen:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$linsert$117(java.lang.Object, boolean, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: iload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #603                // Method io/lettuce/core/RedisCommandBuilder.linsert:(Ljava/lang/Object;ZLjava/lang/Object;Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$lindex$116(java.lang.Object, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: lload_2
       6: invokevirtual #604                // Method io/lettuce/core/RedisCommandBuilder.lindex:(Ljava/lang/Object;J)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$keys$115(io.lettuce.core.output.KeyStreamingChannel, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #605                // Method io/lettuce/core/RedisCommandBuilder.keys:(Lio/lettuce/core/output/KeyStreamingChannel;Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$keys$114(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #606                // Method io/lettuce/core/RedisCommandBuilder.keys:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$info$113(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #607                // Method io/lettuce/core/RedisCommandBuilder.info:(Ljava/lang/String;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$incrbyfloat$112(java.lang.Object, double);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: dload_2
       6: invokevirtual #608                // Method io/lettuce/core/RedisCommandBuilder.incrbyfloat:(Ljava/lang/Object;D)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$incrby$111(java.lang.Object, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: lload_2
       6: invokevirtual #609                // Method io/lettuce/core/RedisCommandBuilder.incrby:(Ljava/lang/Object;J)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$incr$110(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #610                // Method io/lettuce/core/RedisCommandBuilder.incr:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$hvals$109(io.lettuce.core.output.ValueStreamingChannel, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #611                // Method io/lettuce/core/RedisCommandBuilder.hvals:(Lio/lettuce/core/output/ValueStreamingChannel;Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$hvals$108(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #612                // Method io/lettuce/core/RedisCommandBuilder.hvals:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$hstrlen$107(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #613                // Method io/lettuce/core/RedisCommandBuilder.hstrlen:(Ljava/lang/Object;Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$hsetnx$106(java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #614                // Method io/lettuce/core/RedisCommandBuilder.hsetnx:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$hset$105(java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #615                // Method io/lettuce/core/RedisCommandBuilder.hset:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$hscan$104(io.lettuce.core.output.KeyValueStreamingChannel, java.lang.Object, io.lettuce.core.ScanCursor);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #616                // Method io/lettuce/core/RedisCommandBuilder.hscanStreaming:(Lio/lettuce/core/output/KeyValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/ScanCursor;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$hscan$103(io.lettuce.core.output.KeyValueStreamingChannel, java.lang.Object, io.lettuce.core.ScanCursor, io.lettuce.core.ScanArgs);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #617                // Method io/lettuce/core/RedisCommandBuilder.hscanStreaming:(Lio/lettuce/core/output/KeyValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/ScanCursor;Lio/lettuce/core/ScanArgs;)Lio/lettuce/core/protocol/Command;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$hscan$102(io.lettuce.core.output.KeyValueStreamingChannel, java.lang.Object, io.lettuce.core.ScanArgs);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #618                // Method io/lettuce/core/RedisCommandBuilder.hscanStreaming:(Lio/lettuce/core/output/KeyValueStreamingChannel;Ljava/lang/Object;Lio/lettuce/core/ScanArgs;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$hscan$101(io.lettuce.core.output.KeyValueStreamingChannel, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #619                // Method io/lettuce/core/RedisCommandBuilder.hscanStreaming:(Lio/lettuce/core/output/KeyValueStreamingChannel;Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$hscan$100(java.lang.Object, io.lettuce.core.ScanCursor);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #620                // Method io/lettuce/core/RedisCommandBuilder.hscan:(Ljava/lang/Object;Lio/lettuce/core/ScanCursor;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$hscan$99(java.lang.Object, io.lettuce.core.ScanCursor, io.lettuce.core.ScanArgs);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #621                // Method io/lettuce/core/RedisCommandBuilder.hscan:(Ljava/lang/Object;Lio/lettuce/core/ScanCursor;Lio/lettuce/core/ScanArgs;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$hscan$98(java.lang.Object, io.lettuce.core.ScanArgs);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #622                // Method io/lettuce/core/RedisCommandBuilder.hscan:(Ljava/lang/Object;Lio/lettuce/core/ScanArgs;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$hscan$97(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #623                // Method io/lettuce/core/RedisCommandBuilder.hscan:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$hmset$96(java.lang.Object, java.util.Map);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #624                // Method io/lettuce/core/RedisCommandBuilder.hmset:(Ljava/lang/Object;Ljava/util/Map;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$hmget$95(io.lettuce.core.output.KeyValueStreamingChannel, java.lang.Object, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #625                // Method io/lettuce/core/RedisCommandBuilder.hmget:(Lio/lettuce/core/output/KeyValueStreamingChannel;Ljava/lang/Object;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$hmget$94(java.lang.Object, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #626                // Method io/lettuce/core/RedisCommandBuilder.hmgetKeyValue:(Ljava/lang/Object;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$hlen$93(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #627                // Method io/lettuce/core/RedisCommandBuilder.hlen:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$hkeys$92(io.lettuce.core.output.KeyStreamingChannel, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #628                // Method io/lettuce/core/RedisCommandBuilder.hkeys:(Lio/lettuce/core/output/KeyStreamingChannel;Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$hkeys$91(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #629                // Method io/lettuce/core/RedisCommandBuilder.hkeys:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$hincrbyfloat$90(java.lang.Object, java.lang.Object, double);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: dload_3
       7: invokevirtual #630                // Method io/lettuce/core/RedisCommandBuilder.hincrbyfloat:(Ljava/lang/Object;Ljava/lang/Object;D)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$hincrby$89(java.lang.Object, java.lang.Object, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: lload_3
       7: invokevirtual #631                // Method io/lettuce/core/RedisCommandBuilder.hincrby:(Ljava/lang/Object;Ljava/lang/Object;J)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$hgetall$88(io.lettuce.core.output.KeyValueStreamingChannel, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #632                // Method io/lettuce/core/RedisCommandBuilder.hgetall:(Lio/lettuce/core/output/KeyValueStreamingChannel;Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$hgetall$87(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #633                // Method io/lettuce/core/RedisCommandBuilder.hgetall:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$hget$86(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #634                // Method io/lettuce/core/RedisCommandBuilder.hget:(Ljava/lang/Object;Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$hexists$85(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #635                // Method io/lettuce/core/RedisCommandBuilder.hexists:(Ljava/lang/Object;Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$hdel$84(java.lang.Object, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #636                // Method io/lettuce/core/RedisCommandBuilder.hdel:(Ljava/lang/Object;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$getset$83(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #637                // Method io/lettuce/core/RedisCommandBuilder.getset:(Ljava/lang/Object;Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$getrange$82(java.lang.Object, long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: lload_2
       6: lload         4
       8: invokevirtual #638                // Method io/lettuce/core/RedisCommandBuilder.getrange:(Ljava/lang/Object;JJ)Lio/lettuce/core/protocol/Command;
      11: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$getbit$81(java.lang.Object, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: lload_2
       6: invokevirtual #639                // Method io/lettuce/core/RedisCommandBuilder.getbit:(Ljava/lang/Object;J)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$get$80(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #640                // Method io/lettuce/core/RedisCommandBuilder.get:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$georadiusbymember_ro$79(java.lang.Object, java.lang.Object, double, io.lettuce.core.GeoArgs$Unit, io.lettuce.core.GeoArgs);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: getstatic     #641                // Field io/lettuce/core/protocol/CommandType.GEORADIUSBYMEMBER_RO:Lio/lettuce/core/protocol/CommandType;
       7: aload_1
       8: aload_2
       9: dload_3
      10: aload         5
      12: invokevirtual #642                // Method io/lettuce/core/GeoArgs$Unit.name:()Ljava/lang/String;
      15: aload         6
      17: invokevirtual #643                // Method io/lettuce/core/RedisCommandBuilder.georadiusbymember:(Lio/lettuce/core/protocol/CommandType;Ljava/lang/Object;Ljava/lang/Object;DLjava/lang/String;Lio/lettuce/core/GeoArgs;)Lio/lettuce/core/protocol/Command;
      20: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$georadiusbymember_ro$78(java.lang.Object, java.lang.Object, double, io.lettuce.core.GeoArgs$Unit);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: getstatic     #641                // Field io/lettuce/core/protocol/CommandType.GEORADIUSBYMEMBER_RO:Lio/lettuce/core/protocol/CommandType;
       7: aload_1
       8: aload_2
       9: dload_3
      10: aload         5
      12: invokevirtual #642                // Method io/lettuce/core/GeoArgs$Unit.name:()Ljava/lang/String;
      15: invokevirtual #644                // Method io/lettuce/core/RedisCommandBuilder.georadiusbymember:(Lio/lettuce/core/protocol/CommandType;Ljava/lang/Object;Ljava/lang/Object;DLjava/lang/String;)Lio/lettuce/core/protocol/Command;
      18: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$georadiusbymember$77(java.lang.Object, java.lang.Object, double, io.lettuce.core.GeoArgs$Unit, io.lettuce.core.GeoRadiusStoreArgs);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: dload_3
       7: aload         5
       9: invokevirtual #642                // Method io/lettuce/core/GeoArgs$Unit.name:()Ljava/lang/String;
      12: aload         6
      14: invokevirtual #645                // Method io/lettuce/core/RedisCommandBuilder.georadiusbymember:(Ljava/lang/Object;Ljava/lang/Object;DLjava/lang/String;Lio/lettuce/core/GeoRadiusStoreArgs;)Lio/lettuce/core/protocol/Command;
      17: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$georadiusbymember$76(java.lang.Object, java.lang.Object, double, io.lettuce.core.GeoArgs$Unit, io.lettuce.core.GeoArgs);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: getstatic     #646                // Field io/lettuce/core/protocol/CommandType.GEORADIUSBYMEMBER:Lio/lettuce/core/protocol/CommandType;
       7: aload_1
       8: aload_2
       9: dload_3
      10: aload         5
      12: invokevirtual #642                // Method io/lettuce/core/GeoArgs$Unit.name:()Ljava/lang/String;
      15: aload         6
      17: invokevirtual #643                // Method io/lettuce/core/RedisCommandBuilder.georadiusbymember:(Lio/lettuce/core/protocol/CommandType;Ljava/lang/Object;Ljava/lang/Object;DLjava/lang/String;Lio/lettuce/core/GeoArgs;)Lio/lettuce/core/protocol/Command;
      20: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$georadiusbymember$75(java.lang.Object, java.lang.Object, double, io.lettuce.core.GeoArgs$Unit);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: getstatic     #646                // Field io/lettuce/core/protocol/CommandType.GEORADIUSBYMEMBER:Lio/lettuce/core/protocol/CommandType;
       7: aload_1
       8: aload_2
       9: dload_3
      10: aload         5
      12: invokevirtual #642                // Method io/lettuce/core/GeoArgs$Unit.name:()Ljava/lang/String;
      15: invokevirtual #644                // Method io/lettuce/core/RedisCommandBuilder.georadiusbymember:(Lio/lettuce/core/protocol/CommandType;Ljava/lang/Object;Ljava/lang/Object;DLjava/lang/String;)Lio/lettuce/core/protocol/Command;
      18: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$georadius_ro$74(java.lang.Object, double, double, double, io.lettuce.core.GeoArgs$Unit, io.lettuce.core.GeoArgs);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: getstatic     #647                // Field io/lettuce/core/protocol/CommandType.GEORADIUS_RO:Lio/lettuce/core/protocol/CommandType;
       7: aload_1
       8: dload_2
       9: dload         4
      11: dload         6
      13: aload         8
      15: invokevirtual #642                // Method io/lettuce/core/GeoArgs$Unit.name:()Ljava/lang/String;
      18: aload         9
      20: invokevirtual #648                // Method io/lettuce/core/RedisCommandBuilder.georadius:(Lio/lettuce/core/protocol/CommandType;Ljava/lang/Object;DDDLjava/lang/String;Lio/lettuce/core/GeoArgs;)Lio/lettuce/core/protocol/Command;
      23: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$georadius_ro$73(java.lang.Object, double, double, double, io.lettuce.core.GeoArgs$Unit);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: getstatic     #647                // Field io/lettuce/core/protocol/CommandType.GEORADIUS_RO:Lio/lettuce/core/protocol/CommandType;
       7: aload_1
       8: dload_2
       9: dload         4
      11: dload         6
      13: aload         8
      15: invokevirtual #642                // Method io/lettuce/core/GeoArgs$Unit.name:()Ljava/lang/String;
      18: invokevirtual #649                // Method io/lettuce/core/RedisCommandBuilder.georadius:(Lio/lettuce/core/protocol/CommandType;Ljava/lang/Object;DDDLjava/lang/String;)Lio/lettuce/core/protocol/Command;
      21: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$georadius$72(java.lang.Object, double, double, double, io.lettuce.core.GeoArgs$Unit, io.lettuce.core.GeoRadiusStoreArgs);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: dload_2
       6: dload         4
       8: dload         6
      10: aload         8
      12: invokevirtual #642                // Method io/lettuce/core/GeoArgs$Unit.name:()Ljava/lang/String;
      15: aload         9
      17: invokevirtual #650                // Method io/lettuce/core/RedisCommandBuilder.georadius:(Ljava/lang/Object;DDDLjava/lang/String;Lio/lettuce/core/GeoRadiusStoreArgs;)Lio/lettuce/core/protocol/Command;
      20: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$georadius$71(java.lang.Object, double, double, double, io.lettuce.core.GeoArgs$Unit, io.lettuce.core.GeoArgs);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: getstatic     #651                // Field io/lettuce/core/protocol/CommandType.GEORADIUS:Lio/lettuce/core/protocol/CommandType;
       7: aload_1
       8: dload_2
       9: dload         4
      11: dload         6
      13: aload         8
      15: invokevirtual #642                // Method io/lettuce/core/GeoArgs$Unit.name:()Ljava/lang/String;
      18: aload         9
      20: invokevirtual #648                // Method io/lettuce/core/RedisCommandBuilder.georadius:(Lio/lettuce/core/protocol/CommandType;Ljava/lang/Object;DDDLjava/lang/String;Lio/lettuce/core/GeoArgs;)Lio/lettuce/core/protocol/Command;
      23: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$georadius$70(java.lang.Object, double, double, double, io.lettuce.core.GeoArgs$Unit);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: getstatic     #651                // Field io/lettuce/core/protocol/CommandType.GEORADIUS:Lio/lettuce/core/protocol/CommandType;
       7: aload_1
       8: dload_2
       9: dload         4
      11: dload         6
      13: aload         8
      15: invokevirtual #642                // Method io/lettuce/core/GeoArgs$Unit.name:()Ljava/lang/String;
      18: invokevirtual #649                // Method io/lettuce/core/RedisCommandBuilder.georadius:(Lio/lettuce/core/protocol/CommandType;Ljava/lang/Object;DDDLjava/lang/String;)Lio/lettuce/core/protocol/Command;
      21: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$geopos$69(java.lang.Object, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #652                // Method io/lettuce/core/RedisCommandBuilder.geoposValues:(Ljava/lang/Object;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$geohash$68(java.lang.Object, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #653                // Method io/lettuce/core/RedisCommandBuilder.geohash:(Ljava/lang/Object;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$geodist$67(java.lang.Object, java.lang.Object, java.lang.Object, io.lettuce.core.GeoArgs$Unit);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #654                // Method io/lettuce/core/RedisCommandBuilder.geodist:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lio/lettuce/core/GeoArgs$Unit;)Lio/lettuce/core/protocol/Command;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$geoadd$66(java.lang.Object, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #655                // Method io/lettuce/core/RedisCommandBuilder.geoadd:(Ljava/lang/Object;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$geoadd$65(java.lang.Object, double, double, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: dload_2
       6: dload         4
       8: aload         6
      10: invokevirtual #656                // Method io/lettuce/core/RedisCommandBuilder.geoadd:(Ljava/lang/Object;DDLjava/lang/Object;)Lio/lettuce/core/protocol/Command;
      13: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$expireat$64(java.lang.Object, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: lload_2
       6: invokevirtual #657                // Method io/lettuce/core/RedisCommandBuilder.expireat:(Ljava/lang/Object;J)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$expire$63(java.lang.Object, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: lload_2
       6: invokevirtual #658                // Method io/lettuce/core/RedisCommandBuilder.expire:(Ljava/lang/Object;J)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$exists$62(java.lang.Iterable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #659                // Method io/lettuce/core/RedisCommandBuilder.exists:(Ljava/lang/Iterable;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$exists$61(java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #660                // Method io/lettuce/core/RedisCommandBuilder.exists:([Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$exists$60(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #661                // Method io/lettuce/core/RedisCommandBuilder.exists:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$evalsha$59(java.lang.String, io.lettuce.core.ScriptOutputType, java.lang.Object[], java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #662                // Method io/lettuce/core/RedisCommandBuilder.evalsha:(Ljava/lang/String;Lio/lettuce/core/ScriptOutputType;[Ljava/lang/Object;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$evalsha$58(java.lang.String, io.lettuce.core.ScriptOutputType, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #663                // Method io/lettuce/core/RedisCommandBuilder.evalsha:(Ljava/lang/String;Lio/lettuce/core/ScriptOutputType;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$eval$57(java.lang.String, io.lettuce.core.ScriptOutputType, java.lang.Object[], java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #664                // Method io/lettuce/core/RedisCommandBuilder.eval:(Ljava/lang/String;Lio/lettuce/core/ScriptOutputType;[Ljava/lang/Object;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$eval$56(java.lang.String, io.lettuce.core.ScriptOutputType, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #665                // Method io/lettuce/core/RedisCommandBuilder.eval:(Ljava/lang/String;Lio/lettuce/core/ScriptOutputType;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$echo$55(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #666                // Method io/lettuce/core/RedisCommandBuilder.echo:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$dump$54(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #667                // Method io/lettuce/core/RedisCommandBuilder.dump:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private static io.lettuce.core.protocol.RedisCommand lambda$dispatch$53(io.lettuce.core.protocol.ProtocolKeyword, io.lettuce.core.output.CommandOutput, io.lettuce.core.protocol.CommandArgs);
    Code:
       0: new           #668                // class io/lettuce/core/protocol/Command
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #669                // Method io/lettuce/core/protocol/Command."<init>":(Lio/lettuce/core/protocol/ProtocolKeyword;Lio/lettuce/core/output/CommandOutput;Lio/lettuce/core/protocol/CommandArgs;)V
      10: areturn

  private static io.lettuce.core.protocol.RedisCommand lambda$dispatch$52(io.lettuce.core.protocol.ProtocolKeyword, io.lettuce.core.output.CommandOutput);
    Code:
       0: new           #668                // class io/lettuce/core/protocol/Command
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #670                // Method io/lettuce/core/protocol/Command."<init>":(Lio/lettuce/core/protocol/ProtocolKeyword;Lio/lettuce/core/output/CommandOutput;)V
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$del$51(java.lang.Iterable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #671                // Method io/lettuce/core/RedisCommandBuilder.del:(Ljava/lang/Iterable;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$del$50(java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #672                // Method io/lettuce/core/RedisCommandBuilder.del:([Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$decrby$49(java.lang.Object, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: lload_2
       6: invokevirtual #673                // Method io/lettuce/core/RedisCommandBuilder.decrby:(Ljava/lang/Object;J)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$decr$48(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #674                // Method io/lettuce/core/RedisCommandBuilder.decr:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$debugSdslen$47(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #675                // Method io/lettuce/core/RedisCommandBuilder.debugSdslen:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$debugRestart$46(java.lang.Long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #676                // Method io/lettuce/core/RedisCommandBuilder.debugRestart:(Ljava/lang/Long;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$debugReload$45();
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: invokevirtual #677                // Method io/lettuce/core/RedisCommandBuilder.debugReload:()Lio/lettuce/core/protocol/Command;
       7: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$debugObject$44(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #678                // Method io/lettuce/core/RedisCommandBuilder.debugObject:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$debugHtstats$43(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: iload_1
       5: invokevirtual #679                // Method io/lettuce/core/RedisCommandBuilder.debugHtstats:(I)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$debugCrashAndRecover$42(java.lang.Long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #680                // Method io/lettuce/core/RedisCommandBuilder.debugCrashAndRecover:(Ljava/lang/Long;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private static io.lettuce.core.protocol.RedisCommand lambda$createMono$41(io.lettuce.core.protocol.CommandType, io.lettuce.core.output.CommandOutput, io.lettuce.core.protocol.CommandArgs);
    Code:
       0: new           #668                // class io/lettuce/core/protocol/Command
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #669                // Method io/lettuce/core/protocol/Command."<init>":(Lio/lettuce/core/protocol/ProtocolKeyword;Lio/lettuce/core/output/CommandOutput;Lio/lettuce/core/protocol/CommandArgs;)V
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$configSet$40(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #681                // Method io/lettuce/core/RedisCommandBuilder.configSet:(Ljava/lang/String;Ljava/lang/String;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$configGet$39(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #682                // Method io/lettuce/core/RedisCommandBuilder.configGet:(Ljava/lang/String;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$commandInfo$38(java.lang.String[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #683                // Method io/lettuce/core/RedisCommandBuilder.commandInfo:([Ljava/lang/String;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$clusterSlaves$37(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #684                // Method io/lettuce/core/RedisCommandBuilder.clusterSlaves:(Ljava/lang/String;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$clusterSetSlotStable$36(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: iload_1
       5: invokevirtual #685                // Method io/lettuce/core/RedisCommandBuilder.clusterSetSlotStable:(I)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$clusterSetSlotNode$35(int, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: iload_1
       5: aload_2
       6: invokevirtual #686                // Method io/lettuce/core/RedisCommandBuilder.clusterSetSlotNode:(ILjava/lang/String;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$clusterSetSlotMigrating$34(int, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: iload_1
       5: aload_2
       6: invokevirtual #687                // Method io/lettuce/core/RedisCommandBuilder.clusterSetSlotMigrating:(ILjava/lang/String;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$clusterSetSlotImporting$33(int, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: iload_1
       5: aload_2
       6: invokevirtual #688                // Method io/lettuce/core/RedisCommandBuilder.clusterSetSlotImporting:(ILjava/lang/String;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$clusterSetConfigEpoch$32(long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: lload_1
       5: invokevirtual #689                // Method io/lettuce/core/RedisCommandBuilder.clusterSetConfigEpoch:(J)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$clusterSaveconfig$31();
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: invokevirtual #690                // Method io/lettuce/core/RedisCommandBuilder.clusterSaveconfig:()Lio/lettuce/core/protocol/Command;
       7: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$clusterReset$30(boolean);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: iload_1
       5: invokevirtual #691                // Method io/lettuce/core/RedisCommandBuilder.clusterReset:(Z)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$clusterReplicate$29(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #692                // Method io/lettuce/core/RedisCommandBuilder.clusterReplicate:(Ljava/lang/String;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$clusterMeet$28(java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: iload_2
       6: invokevirtual #693                // Method io/lettuce/core/RedisCommandBuilder.clusterMeet:(Ljava/lang/String;I)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$clusterKeyslot$27(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #694                // Method io/lettuce/core/RedisCommandBuilder.clusterKeyslot:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$clusterGetKeysInSlot$26(int, int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: iload_1
       5: iload_2
       6: invokevirtual #695                // Method io/lettuce/core/RedisCommandBuilder.clusterGetKeysInSlot:(II)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$clusterForget$25(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #696                // Method io/lettuce/core/RedisCommandBuilder.clusterForget:(Ljava/lang/String;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$clusterFailover$24(boolean);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: iload_1
       5: invokevirtual #697                // Method io/lettuce/core/RedisCommandBuilder.clusterFailover:(Z)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$clusterDelSlots$23(int[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #698                // Method io/lettuce/core/RedisCommandBuilder.clusterDelslots:([I)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$clusterCountKeysInSlot$22(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: iload_1
       5: invokevirtual #699                // Method io/lettuce/core/RedisCommandBuilder.clusterCountKeysInSlot:(I)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$clusterCountFailureReports$21(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #700                // Method io/lettuce/core/RedisCommandBuilder.clusterCountFailureReports:(Ljava/lang/String;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$clusterBumpepoch$20();
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: invokevirtual #701                // Method io/lettuce/core/RedisCommandBuilder.clusterBumpepoch:()Lio/lettuce/core/protocol/Command;
       7: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$clusterAddSlots$19(int[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #702                // Method io/lettuce/core/RedisCommandBuilder.clusterAddslots:([I)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$clientSetname$18(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #703                // Method io/lettuce/core/RedisCommandBuilder.clientSetname:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$clientPause$17(long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: lload_1
       5: invokevirtual #704                // Method io/lettuce/core/RedisCommandBuilder.clientPause:(J)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$clientKill$16(io.lettuce.core.KillArgs);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #705                // Method io/lettuce/core/RedisCommandBuilder.clientKill:(Lio/lettuce/core/KillArgs;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$clientKill$15(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #706                // Method io/lettuce/core/RedisCommandBuilder.clientKill:(Ljava/lang/String;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$brpoplpush$14(long, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: lload_1
       5: aload_3
       6: aload         4
       8: invokevirtual #707                // Method io/lettuce/core/RedisCommandBuilder.brpoplpush:(JLjava/lang/Object;Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
      11: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$brpop$13(long, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: lload_1
       5: aload_3
       6: invokevirtual #708                // Method io/lettuce/core/RedisCommandBuilder.brpop:(J[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$blpop$12(long, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: lload_1
       5: aload_3
       6: invokevirtual #709                // Method io/lettuce/core/RedisCommandBuilder.blpop:(J[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$bitpos$11(java.lang.Object, boolean, long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: iload_2
       6: lload_3
       7: lload         5
       9: invokevirtual #710                // Method io/lettuce/core/RedisCommandBuilder.bitpos:(Ljava/lang/Object;ZJJ)Lio/lettuce/core/protocol/Command;
      12: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$bitpos$10(java.lang.Object, boolean, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: iload_2
       6: lload_3
       7: invokevirtual #711                // Method io/lettuce/core/RedisCommandBuilder.bitpos:(Ljava/lang/Object;ZJ)Lio/lettuce/core/protocol/Command;
      10: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$bitpos$9(java.lang.Object, boolean);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: iload_2
       6: invokevirtual #712                // Method io/lettuce/core/RedisCommandBuilder.bitpos:(Ljava/lang/Object;Z)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$bitopXor$8(java.lang.Object, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #713                // Method io/lettuce/core/RedisCommandBuilder.bitopXor:(Ljava/lang/Object;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$bitopOr$7(java.lang.Object, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #714                // Method io/lettuce/core/RedisCommandBuilder.bitopOr:(Ljava/lang/Object;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$bitopNot$6(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #715                // Method io/lettuce/core/RedisCommandBuilder.bitopNot:(Ljava/lang/Object;Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$bitopAnd$5(java.lang.Object, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #716                // Method io/lettuce/core/RedisCommandBuilder.bitopAnd:(Ljava/lang/Object;[Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$bitfield$4(java.lang.Object, io.lettuce.core.BitFieldArgs);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #717                // Method io/lettuce/core/RedisCommandBuilder.bitfieldValue:(Ljava/lang/Object;Lio/lettuce/core/BitFieldArgs;)Lio/lettuce/core/protocol/Command;
       9: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$bitcount$3(java.lang.Object, long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: lload_2
       6: lload         4
       8: invokevirtual #718                // Method io/lettuce/core/RedisCommandBuilder.bitcount:(Ljava/lang/Object;JJ)Lio/lettuce/core/protocol/Command;
      11: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$bitcount$2(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #719                // Method io/lettuce/core/RedisCommandBuilder.bitcount:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$auth$1(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: invokevirtual #720                // Method io/lettuce/core/RedisCommandBuilder.auth:(Ljava/lang/String;)Lio/lettuce/core/protocol/Command;
       8: areturn

  private io.lettuce.core.protocol.RedisCommand lambda$append$0(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandBuilder:Lio/lettuce/core/RedisCommandBuilder;
       4: aload_1
       5: aload_2
       6: invokevirtual #721                // Method io/lettuce/core/RedisCommandBuilder.append:(Ljava/lang/Object;Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: areturn
}
