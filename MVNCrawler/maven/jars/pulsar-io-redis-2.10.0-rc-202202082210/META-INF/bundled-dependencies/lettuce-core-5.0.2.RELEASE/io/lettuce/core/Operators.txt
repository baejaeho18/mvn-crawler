Compiled from "Operators.java"
class io.lettuce.core.Operators {
  private static final io.netty.util.internal.logging.InternalLogger LOG;

  private static final java.lang.String KEY_ON_OPERATOR_ERROR;

  private static final java.lang.reflect.Field onOperatorErrorHook;

  private static final java.util.function.Supplier queueSupplier;

  io.lettuce.core.Operators();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  private static java.lang.reflect.Field findOnOperatorErrorHookField();
    Code:
       0: invokedynamic #2,  0              // InvokeDynamic #0:run:()Ljava/security/PrivilegedExceptionAction;
       5: invokestatic  #3                  // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
       8: checkcast     #4                  // class java/lang/reflect/Field
      11: areturn
      12: astore_0
      13: aconst_null
      14: areturn
    Exception table:
       from    to  target type
           0    11    12   Class java/security/PrivilegedActionException

  private static java.util.function.Supplier<java.util.Queue<java.lang.Object>> getQueueSupplier();
    Code:
       0: invokedynamic #6,  0              // InvokeDynamic #1:run:()Ljava/security/PrivilegedExceptionAction;
       5: invokestatic  #3                  // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
       8: checkcast     #7                  // class java/util/function/Supplier
      11: areturn
      12: astore_0
      13: invokedynamic #8,  0              // InvokeDynamic #2:get:()Ljava/util/function/Supplier;
      18: areturn
    Exception table:
       from    to  target type
           0    11    12   Class java/security/PrivilegedActionException

  static long addCap(long, long);
    Code:
       0: lload_0
       1: lload_2
       2: ladd
       3: lstore        4
       5: lload         4
       7: lconst_0
       8: lcmp
       9: ifge          16
      12: ldc2_w        #10                 // long 9223372036854775807l
      15: lreturn
      16: lload         4
      18: lreturn

  public static <T> boolean request(java.util.concurrent.atomic.AtomicLongFieldUpdater<T>, T, long);
    Code:
       0: lload_2
       1: invokestatic  #12                 // Method validate:(J)Z
       4: ifeq          16
       7: aload_0
       8: aload_1
       9: lload_2
      10: invokestatic  #13                 // Method addCap:(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
      13: pop2
      14: iconst_1
      15: ireturn
      16: iconst_0
      17: ireturn

  static <T> long addCap(java.util.concurrent.atomic.AtomicLongFieldUpdater<T>, T, long);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.get:(Ljava/lang/Object;)J
       5: lstore        4
       7: lload         4
       9: ldc2_w        #10                 // long 9223372036854775807l
      12: lcmp
      13: ifne          20
      16: ldc2_w        #10                 // long 9223372036854775807l
      19: lreturn
      20: lload         4
      22: lload_2
      23: invokestatic  #15                 // Method addCap:(JJ)J
      26: lstore        6
      28: aload_0
      29: aload_1
      30: lload         4
      32: lload         6
      34: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.compareAndSet:(Ljava/lang/Object;JJ)Z
      37: ifeq          0
      40: lload         4
      42: lreturn

  static boolean validate(long);
    Code:
       0: lload_0
       1: lconst_0
       2: lcmp
       3: ifgt          12
       6: lload_0
       7: invokestatic  #17                 // Method reportBadRequest:(J)V
      10: iconst_0
      11: ireturn
      12: iconst_1
      13: ireturn

  static void reportBadRequest(long);
    Code:
       0: getstatic     #18                 // Field LOG:Lio/netty/util/internal/logging/InternalLogger;
       3: invokeinterface #19,  1           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isDebugEnabled:()Z
       8: ifeq          25
      11: getstatic     #18                 // Field LOG:Lio/netty/util/internal/logging/InternalLogger;
      14: ldc           #20                 // String Negative request
      16: lload_0
      17: invokestatic  #21                 // Method reactor/core/Exceptions.nullOrNegativeRequestException:(J)Ljava/lang/IllegalArgumentException;
      20: invokeinterface #22,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      25: return

  static java.lang.IllegalArgumentException nullOrNegativeRequestException(long);
    Code:
       0: new           #23                 // class java/lang/IllegalArgumentException
       3: dup
       4: new           #24                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #26                 // String Spec. Rule 3.9 - Cannot request a non strictly positive number:
      13: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: lload_0
      17: invokevirtual #28                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      20: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: areturn

  static java.lang.Throwable onOperatorError(org.reactivestreams.Subscription, java.lang.Throwable, java.lang.Object, reactor.util.context.Context);
    Code:
       0: aload_1
       1: invokestatic  #31                 // Method reactor/core/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
       4: aload_0
       5: ifnull        14
       8: aload_0
       9: invokeinterface #32,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      14: aload_1
      15: invokestatic  #33                 // Method reactor/core/Exceptions.unwrap:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      18: astore        4
      20: aload_3
      21: ldc           #35                 // String reactor.onOperatorError.local
      23: aconst_null
      24: invokeinterface #36,  3           // InterfaceMethod reactor/util/context/Context.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #37                 // class java/util/function/BiFunction
      32: astore        5
      34: aload         5
      36: ifnonnull     50
      39: getstatic     #38                 // Field onOperatorErrorHook:Ljava/lang/reflect/Field;
      42: ifnull        50
      45: invokestatic  #39                 // Method getOnOperatorErrorHook:()Ljava/util/function/BiFunction;
      48: astore        5
      50: aload         5
      52: ifnonnull     86
      55: aload_2
      56: ifnull        83
      59: aload_2
      60: aload         4
      62: if_acmpeq     83
      65: aload_2
      66: instanceof    #40                 // class java/lang/Throwable
      69: ifeq          83
      72: aload         4
      74: aload_2
      75: checkcast     #40                 // class java/lang/Throwable
      78: invokestatic  #41                 // Method reactor/core/Exceptions.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)Ljava/lang/Throwable;
      81: astore        4
      83: aload         4
      85: areturn
      86: aload         5
      88: aload_1
      89: aload_2
      90: invokeinterface #42,  3           // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      95: checkcast     #40                 // class java/lang/Throwable
      98: areturn

  static <T> java.util.Queue<T> newQueue();
    Code:
       0: getstatic     #43                 // Field queueSupplier:Ljava/util/function/Supplier;
       3: invokeinterface #44,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
       8: checkcast     #45                 // class java/util/Queue
      11: areturn

  private static java.util.function.BiFunction<? super java.lang.Throwable, java.lang.Object, ? extends java.lang.Throwable> getOnOperatorErrorHook();
    Code:
       0: getstatic     #38                 // Field onOperatorErrorHook:Ljava/lang/reflect/Field;
       3: ldc           #46                 // class reactor/core/publisher/Hooks
       5: invokevirtual #47                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #37                 // class java/util/function/BiFunction
      11: areturn
      12: astore_0
      13: aconst_null
      14: areturn
    Exception table:
       from    to  target type
           0    11    12   Class java/lang/ReflectiveOperationException

  private static java.util.function.Supplier lambda$getQueueSupplier$1() throws java.lang.Exception;
    Code:
       0: ldc           #49                 // class reactor/util/concurrent/Queues
       2: ldc           #50                 // String unbounded
       4: iconst_0
       5: anewarray     #51                 // class java/lang/Class
       8: invokevirtual #52                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      11: astore_0
      12: aload_0
      13: ldc           #49                 // class reactor/util/concurrent/Queues
      15: iconst_0
      16: anewarray     #53                 // class java/lang/Object
      19: invokevirtual #54                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #7                  // class java/util/function/Supplier
      25: areturn

  private static java.lang.reflect.Field lambda$findOnOperatorErrorHookField$0() throws java.lang.Exception;
    Code:
       0: ldc           #46                 // class reactor/core/publisher/Hooks
       2: ldc           #55                 // String onOperatorErrorHook
       4: invokevirtual #56                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
       7: astore_0
       8: aload_0
       9: invokevirtual #57                 // Method java/lang/reflect/Field.isAccessible:()Z
      12: ifne          20
      15: aload_0
      16: iconst_1
      17: invokevirtual #58                 // Method java/lang/reflect/Field.setAccessible:(Z)V
      20: aload_0
      21: areturn

  static {};
    Code:
       0: ldc           #34                 // class io/lettuce/core/Operators
       2: invokestatic  #59                 // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
       5: putstatic     #18                 // Field LOG:Lio/netty/util/internal/logging/InternalLogger;
       8: invokestatic  #60                 // Method findOnOperatorErrorHookField:()Ljava/lang/reflect/Field;
      11: putstatic     #38                 // Field onOperatorErrorHook:Ljava/lang/reflect/Field;
      14: invokestatic  #61                 // Method getQueueSupplier:()Ljava/util/function/Supplier;
      17: putstatic     #43                 // Field queueSupplier:Ljava/util/function/Supplier;
      20: return
}
