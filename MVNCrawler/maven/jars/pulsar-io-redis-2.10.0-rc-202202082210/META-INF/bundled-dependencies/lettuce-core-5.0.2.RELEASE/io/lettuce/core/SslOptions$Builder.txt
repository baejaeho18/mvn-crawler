Compiled from "SslOptions.java"
public class io.lettuce.core.SslOptions$Builder {
  private io.netty.handler.ssl.SslProvider sslProvider;

  private java.net.URL keystore;

  private char[] keystorePassword;

  private java.net.URL truststore;

  private char[] truststorePassword;

  private io.lettuce.core.SslOptions$Builder();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #8                  // Field io/lettuce/core/SslOptions.DEFAULT_SSL_PROVIDER:Lio/netty/handler/ssl/SslProvider;
       8: putfield      #6                  // Field sslProvider:Lio/netty/handler/ssl/SslProvider;
      11: aload_0
      12: iconst_0
      13: newarray       char
      15: putfield      #4                  // Field keystorePassword:[C
      18: aload_0
      19: iconst_0
      20: newarray       char
      22: putfield      #2                  // Field truststorePassword:[C
      25: return

  public io.lettuce.core.SslOptions$Builder jdkSslProvider();
    Code:
       0: aload_0
       1: getstatic     #9                  // Field io/netty/handler/ssl/SslProvider.JDK:Lio/netty/handler/ssl/SslProvider;
       4: invokespecial #10                 // Method sslProvider:(Lio/netty/handler/ssl/SslProvider;)Lio/lettuce/core/SslOptions$Builder;
       7: areturn

  public io.lettuce.core.SslOptions$Builder openSslProvider();
    Code:
       0: aload_0
       1: getstatic     #11                 // Field io/netty/handler/ssl/SslProvider.OPENSSL:Lio/netty/handler/ssl/SslProvider;
       4: invokespecial #10                 // Method sslProvider:(Lio/netty/handler/ssl/SslProvider;)Lio/lettuce/core/SslOptions$Builder;
       7: areturn

  private io.lettuce.core.SslOptions$Builder sslProvider(io.netty.handler.ssl.SslProvider);
    Code:
       0: aload_1
       1: getstatic     #11                 // Field io/netty/handler/ssl/SslProvider.OPENSSL:Lio/netty/handler/ssl/SslProvider;
       4: if_acmpne     23
       7: invokestatic  #12                 // Method io/netty/handler/ssl/OpenSsl.isAvailable:()Z
      10: ifne          23
      13: new           #13                 // class java/lang/IllegalStateException
      16: dup
      17: ldc           #14                 // String OpenSSL SSL Provider is not available
      19: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_0
      24: aload_1
      25: putfield      #6                  // Field sslProvider:Lio/netty/handler/ssl/SslProvider;
      28: aload_0
      29: areturn

  public io.lettuce.core.SslOptions$Builder keystore(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: newarray       char
       5: invokevirtual #16                 // Method keystore:(Ljava/io/File;[C)Lio/lettuce/core/SslOptions$Builder;
       8: areturn

  public io.lettuce.core.SslOptions$Builder keystore(java.io.File, char[]);
    Code:
       0: aload_1
       1: ldc           #17                 // String Keystore must not be null
       3: invokestatic  #18                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokevirtual #19                 // Method java/io/File.exists:()Z
      10: ldc           #20                 // String Keystore file %s does not exist
      12: iconst_1
      13: anewarray     #21                 // class java/lang/Object
      16: dup
      17: iconst_0
      18: aload_0
      19: getfield      #3                  // Field truststore:Ljava/net/URL;
      22: aastore
      23: invokestatic  #22                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      26: invokestatic  #23                 // Method io/lettuce/core/internal/LettuceAssert.isTrue:(ZLjava/lang/String;)V
      29: aload_1
      30: invokevirtual #24                 // Method java/io/File.isFile:()Z
      33: ldc           #25                 // String Keystore file %s is not a file
      35: iconst_1
      36: anewarray     #21                 // class java/lang/Object
      39: dup
      40: iconst_0
      41: aload_0
      42: getfield      #3                  // Field truststore:Ljava/net/URL;
      45: aastore
      46: invokestatic  #22                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      49: invokestatic  #23                 // Method io/lettuce/core/internal/LettuceAssert.isTrue:(ZLjava/lang/String;)V
      52: aload_0
      53: aload_1
      54: invokevirtual #26                 // Method java/io/File.toURI:()Ljava/net/URI;
      57: invokevirtual #27                 // Method java/net/URI.toURL:()Ljava/net/URL;
      60: aload_2
      61: invokevirtual #28                 // Method keystore:(Ljava/net/URL;[C)Lio/lettuce/core/SslOptions$Builder;
      64: areturn
      65: astore_3
      66: new           #30                 // class java/lang/IllegalArgumentException
      69: dup
      70: aload_3
      71: invokespecial #31                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
      74: athrow
    Exception table:
       from    to  target type
          52    64    65   Class java/net/MalformedURLException

  public io.lettuce.core.SslOptions$Builder keystore(java.net.URL);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: newarray       char
       5: invokevirtual #28                 // Method keystore:(Ljava/net/URL;[C)Lio/lettuce/core/SslOptions$Builder;
       8: areturn

  public io.lettuce.core.SslOptions$Builder keystore(java.net.URL, char[]);
    Code:
       0: aload_1
       1: ldc           #17                 // String Keystore must not be null
       3: invokestatic  #18                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #5                  // Field keystore:Ljava/net/URL;
      11: aload_2
      12: ifnull        28
      15: aload_0
      16: aload_2
      17: aload_2
      18: arraylength
      19: invokestatic  #32                 // Method java/util/Arrays.copyOf:([CI)[C
      22: putfield      #4                  // Field keystorePassword:[C
      25: goto          35
      28: aload_0
      29: iconst_0
      30: newarray       char
      32: putfield      #4                  // Field keystorePassword:[C
      35: aload_0
      36: areturn

  public io.lettuce.core.SslOptions$Builder truststore(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #33                 // String
       4: invokevirtual #34                 // Method truststore:(Ljava/io/File;Ljava/lang/String;)Lio/lettuce/core/SslOptions$Builder;
       7: areturn

  public io.lettuce.core.SslOptions$Builder truststore(java.io.File, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #35                 // String Truststore must not be null
       3: invokestatic  #18                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokevirtual #19                 // Method java/io/File.exists:()Z
      10: ldc           #36                 // String Truststore file %s does not exist
      12: iconst_1
      13: anewarray     #21                 // class java/lang/Object
      16: dup
      17: iconst_0
      18: aload_1
      19: aastore
      20: invokestatic  #22                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      23: invokestatic  #23                 // Method io/lettuce/core/internal/LettuceAssert.isTrue:(ZLjava/lang/String;)V
      26: aload_1
      27: invokevirtual #24                 // Method java/io/File.isFile:()Z
      30: ldc           #37                 // String Truststore file %s is not a file
      32: iconst_1
      33: anewarray     #21                 // class java/lang/Object
      36: dup
      37: iconst_0
      38: aload_1
      39: aastore
      40: invokestatic  #22                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      43: invokestatic  #23                 // Method io/lettuce/core/internal/LettuceAssert.isTrue:(ZLjava/lang/String;)V
      46: aload_0
      47: aload_1
      48: invokevirtual #26                 // Method java/io/File.toURI:()Ljava/net/URI;
      51: invokevirtual #27                 // Method java/net/URI.toURL:()Ljava/net/URL;
      54: aload_2
      55: invokevirtual #38                 // Method truststore:(Ljava/net/URL;Ljava/lang/String;)Lio/lettuce/core/SslOptions$Builder;
      58: areturn
      59: astore_3
      60: new           #30                 // class java/lang/IllegalArgumentException
      63: dup
      64: aload_3
      65: invokespecial #31                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
      68: athrow
    Exception table:
       from    to  target type
          46    58    59   Class java/net/MalformedURLException

  public io.lettuce.core.SslOptions$Builder truststore(java.net.URL);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #33                 // String
       4: invokevirtual #38                 // Method truststore:(Ljava/net/URL;Ljava/lang/String;)Lio/lettuce/core/SslOptions$Builder;
       7: areturn

  public io.lettuce.core.SslOptions$Builder truststore(java.net.URL, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #35                 // String Truststore must not be null
       3: invokestatic  #18                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #3                  // Field truststore:Ljava/net/URL;
      11: aload_2
      12: invokestatic  #39                 // Method io/lettuce/core/LettuceStrings.isNotEmpty:(Ljava/lang/CharSequence;)Z
      15: ifeq          29
      18: aload_0
      19: aload_2
      20: invokevirtual #40                 // Method java/lang/String.toCharArray:()[C
      23: putfield      #2                  // Field truststorePassword:[C
      26: goto          36
      29: aload_0
      30: iconst_0
      31: newarray       char
      33: putfield      #2                  // Field truststorePassword:[C
      36: aload_0
      37: areturn

  public io.lettuce.core.SslOptions build();
    Code:
       0: new           #41                 // class io/lettuce/core/SslOptions
       3: dup
       4: aload_0
       5: invokespecial #42                 // Method io/lettuce/core/SslOptions."<init>":(Lio/lettuce/core/SslOptions$Builder;)V
       8: areturn

  static io.netty.handler.ssl.SslProvider access$000(io.lettuce.core.SslOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #6                  // Field sslProvider:Lio/netty/handler/ssl/SslProvider;
       4: areturn

  static java.net.URL access$100(io.lettuce.core.SslOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #5                  // Field keystore:Ljava/net/URL;
       4: areturn

  static char[] access$200(io.lettuce.core.SslOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #4                  // Field keystorePassword:[C
       4: areturn

  static java.net.URL access$300(io.lettuce.core.SslOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #3                  // Field truststore:Ljava/net/URL;
       4: areturn

  static char[] access$400(io.lettuce.core.SslOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #2                  // Field truststorePassword:[C
       4: areturn

  io.lettuce.core.SslOptions$Builder(io.lettuce.core.SslOptions$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
