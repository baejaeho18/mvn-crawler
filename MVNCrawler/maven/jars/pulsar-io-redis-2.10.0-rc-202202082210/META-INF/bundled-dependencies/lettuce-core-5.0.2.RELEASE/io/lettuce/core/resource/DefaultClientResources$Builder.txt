Compiled from "DefaultClientResources.java"
public class io.lettuce.core.resource.DefaultClientResources$Builder {
  private int ioThreadPoolSize;

  private int computationThreadPoolSize;

  private io.netty.util.concurrent.EventExecutorGroup eventExecutorGroup;

  private io.lettuce.core.resource.EventLoopGroupProvider eventLoopGroupProvider;

  private io.netty.util.Timer timer;

  private io.lettuce.core.event.EventBus eventBus;

  private io.lettuce.core.metrics.CommandLatencyCollectorOptions commandLatencyCollectorOptions;

  private io.lettuce.core.metrics.CommandLatencyCollector commandLatencyCollector;

  private io.lettuce.core.event.EventPublisherOptions commandLatencyPublisherOptions;

  private io.lettuce.core.resource.DnsResolver dnsResolver;

  private java.util.function.Supplier<io.lettuce.core.resource.Delay> reconnectDelay;

  private io.lettuce.core.resource.NettyCustomizer nettyCustomizer;

  private io.lettuce.core.resource.DefaultClientResources$Builder();
    Code:
       0: aload_0
       1: invokespecial #14                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #15                 // Field io/lettuce/core/resource/DefaultClientResources.DEFAULT_IO_THREADS:I
       8: putfield      #12                 // Field ioThreadPoolSize:I
      11: aload_0
      12: getstatic     #16                 // Field io/lettuce/core/resource/DefaultClientResources.DEFAULT_COMPUTATION_THREADS:I
      15: putfield      #10                 // Field computationThreadPoolSize:I
      18: aload_0
      19: invokestatic  #17                 // Method io/lettuce/core/metrics/DefaultCommandLatencyCollectorOptions.create:()Lio/lettuce/core/metrics/DefaultCommandLatencyCollectorOptions;
      22: putfield      #6                  // Field commandLatencyCollectorOptions:Lio/lettuce/core/metrics/CommandLatencyCollectorOptions;
      25: aload_0
      26: invokestatic  #18                 // Method io/lettuce/core/event/DefaultEventPublisherOptions.create:()Lio/lettuce/core/event/DefaultEventPublisherOptions;
      29: putfield      #5                  // Field commandLatencyPublisherOptions:Lio/lettuce/core/event/EventPublisherOptions;
      32: aload_0
      33: getstatic     #19                 // Field io/lettuce/core/resource/DnsResolvers.UNRESOLVED:Lio/lettuce/core/resource/DnsResolvers;
      36: putfield      #4                  // Field dnsResolver:Lio/lettuce/core/resource/DnsResolver;
      39: aload_0
      40: getstatic     #20                 // Field io/lettuce/core/resource/DefaultClientResources.DEFAULT_RECONNECT_DELAY:Ljava/util/function/Supplier;
      43: putfield      #3                  // Field reconnectDelay:Ljava/util/function/Supplier;
      46: aload_0
      47: getstatic     #21                 // Field io/lettuce/core/resource/DefaultClientResources.DEFAULT_NETTY_CUSTOMIZER:Lio/lettuce/core/resource/NettyCustomizer;
      50: putfield      #2                  // Field nettyCustomizer:Lio/lettuce/core/resource/NettyCustomizer;
      53: return

  public io.lettuce.core.resource.DefaultClientResources$Builder ioThreadPoolSize(int);
    Code:
       0: iload_1
       1: ifle          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #22                 // String I/O thread pool size must be greater zero
      11: invokestatic  #23                 // Method io/lettuce/core/internal/LettuceAssert.isTrue:(ZLjava/lang/String;)V
      14: aload_0
      15: iload_1
      16: putfield      #12                 // Field ioThreadPoolSize:I
      19: aload_0
      20: areturn

  public io.lettuce.core.resource.DefaultClientResources$Builder eventLoopGroupProvider(io.lettuce.core.resource.EventLoopGroupProvider);
    Code:
       0: aload_1
       1: ldc           #24                 // String EventLoopGroupProvider must not be null
       3: invokestatic  #25                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #13                 // Field eventLoopGroupProvider:Lio/lettuce/core/resource/EventLoopGroupProvider;
      11: aload_0
      12: areturn

  public io.lettuce.core.resource.DefaultClientResources$Builder computationThreadPoolSize(int);
    Code:
       0: iload_1
       1: ifle          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #26                 // String Computation thread pool size must be greater zero
      11: invokestatic  #23                 // Method io/lettuce/core/internal/LettuceAssert.isTrue:(ZLjava/lang/String;)V
      14: aload_0
      15: iload_1
      16: putfield      #10                 // Field computationThreadPoolSize:I
      19: aload_0
      20: areturn

  public io.lettuce.core.resource.DefaultClientResources$Builder eventExecutorGroup(io.netty.util.concurrent.EventExecutorGroup);
    Code:
       0: aload_1
       1: ldc           #27                 // String EventExecutorGroup must not be null
       3: invokestatic  #25                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #11                 // Field eventExecutorGroup:Lio/netty/util/concurrent/EventExecutorGroup;
      11: aload_0
      12: areturn

  public io.lettuce.core.resource.DefaultClientResources$Builder timer(io.netty.util.Timer);
    Code:
       0: aload_1
       1: ldc           #28                 // String Timer must not be null
       3: invokestatic  #25                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #9                  // Field timer:Lio/netty/util/Timer;
      11: aload_0
      12: areturn

  public io.lettuce.core.resource.DefaultClientResources$Builder eventBus(io.lettuce.core.event.EventBus);
    Code:
       0: aload_1
       1: ldc           #29                 // String EventBus must not be null
       3: invokestatic  #25                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #8                  // Field eventBus:Lio/lettuce/core/event/EventBus;
      11: aload_0
      12: areturn

  public io.lettuce.core.resource.DefaultClientResources$Builder commandLatencyPublisherOptions(io.lettuce.core.event.EventPublisherOptions);
    Code:
       0: aload_1
       1: ldc           #30                 // String EventPublisherOptions must not be null
       3: invokestatic  #25                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #5                  // Field commandLatencyPublisherOptions:Lio/lettuce/core/event/EventPublisherOptions;
      11: aload_0
      12: areturn

  public io.lettuce.core.resource.DefaultClientResources$Builder commandLatencyCollectorOptions(io.lettuce.core.metrics.CommandLatencyCollectorOptions);
    Code:
       0: aload_1
       1: ldc           #31                 // String CommandLatencyCollectorOptions must not be null
       3: invokestatic  #25                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #6                  // Field commandLatencyCollectorOptions:Lio/lettuce/core/metrics/CommandLatencyCollectorOptions;
      11: aload_0
      12: areturn

  public io.lettuce.core.resource.DefaultClientResources$Builder commandLatencyCollector(io.lettuce.core.metrics.CommandLatencyCollector);
    Code:
       0: aload_1
       1: ldc           #32                 // String CommandLatencyCollector must not be null
       3: invokestatic  #25                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #7                  // Field commandLatencyCollector:Lio/lettuce/core/metrics/CommandLatencyCollector;
      11: aload_0
      12: areturn

  public io.lettuce.core.resource.DefaultClientResources$Builder dnsResolver(io.lettuce.core.resource.DnsResolver);
    Code:
       0: aload_1
       1: ldc           #33                 // String DnsResolver must not be null
       3: invokestatic  #25                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #4                  // Field dnsResolver:Lio/lettuce/core/resource/DnsResolver;
      11: aload_0
      12: areturn

  public io.lettuce.core.resource.DefaultClientResources$Builder reconnectDelay(io.lettuce.core.resource.Delay);
    Code:
       0: aload_1
       1: ldc           #34                 // String Delay must not be null
       3: invokestatic  #25                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: instanceof    #35                 // class io/lettuce/core/resource/Delay$StatefulDelay
      10: ifne          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ldc           #36                 // String Delay must be a stateless instance.
      20: invokestatic  #23                 // Method io/lettuce/core/internal/LettuceAssert.isTrue:(ZLjava/lang/String;)V
      23: aload_0
      24: aload_1
      25: invokedynamic #37,  0             // InvokeDynamic #0:get:(Lio/lettuce/core/resource/Delay;)Ljava/util/function/Supplier;
      30: invokevirtual #38                 // Method reconnectDelay:(Ljava/util/function/Supplier;)Lio/lettuce/core/resource/DefaultClientResources$Builder;
      33: areturn

  public io.lettuce.core.resource.DefaultClientResources$Builder reconnectDelay(java.util.function.Supplier<io.lettuce.core.resource.Delay>);
    Code:
       0: aload_1
       1: ldc           #34                 // String Delay must not be null
       3: invokestatic  #25                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #3                  // Field reconnectDelay:Ljava/util/function/Supplier;
      11: aload_0
      12: areturn

  public io.lettuce.core.resource.DefaultClientResources$Builder nettyCustomizer(io.lettuce.core.resource.NettyCustomizer);
    Code:
       0: aload_1
       1: ldc           #39                 // String NettyCustomizer must not be null
       3: invokestatic  #25                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #2                  // Field nettyCustomizer:Lio/lettuce/core/resource/NettyCustomizer;
      11: aload_0
      12: areturn

  public io.lettuce.core.resource.DefaultClientResources build();
    Code:
       0: new           #40                 // class io/lettuce/core/resource/DefaultClientResources
       3: dup
       4: aload_0
       5: invokespecial #41                 // Method io/lettuce/core/resource/DefaultClientResources."<init>":(Lio/lettuce/core/resource/DefaultClientResources$Builder;)V
       8: areturn

  private static io.lettuce.core.resource.Delay lambda$reconnectDelay$0(io.lettuce.core.resource.Delay);
    Code:
       0: aload_0
       1: areturn

  static io.lettuce.core.resource.EventLoopGroupProvider access$000(io.lettuce.core.resource.DefaultClientResources$Builder);
    Code:
       0: aload_0
       1: getfield      #13                 // Field eventLoopGroupProvider:Lio/lettuce/core/resource/EventLoopGroupProvider;
       4: areturn

  static int access$100(io.lettuce.core.resource.DefaultClientResources$Builder);
    Code:
       0: aload_0
       1: getfield      #12                 // Field ioThreadPoolSize:I
       4: ireturn

  static io.netty.util.concurrent.EventExecutorGroup access$200(io.lettuce.core.resource.DefaultClientResources$Builder);
    Code:
       0: aload_0
       1: getfield      #11                 // Field eventExecutorGroup:Lio/netty/util/concurrent/EventExecutorGroup;
       4: areturn

  static int access$300(io.lettuce.core.resource.DefaultClientResources$Builder);
    Code:
       0: aload_0
       1: getfield      #10                 // Field computationThreadPoolSize:I
       4: ireturn

  static io.netty.util.Timer access$400(io.lettuce.core.resource.DefaultClientResources$Builder);
    Code:
       0: aload_0
       1: getfield      #9                  // Field timer:Lio/netty/util/Timer;
       4: areturn

  static io.lettuce.core.event.EventBus access$500(io.lettuce.core.resource.DefaultClientResources$Builder);
    Code:
       0: aload_0
       1: getfield      #8                  // Field eventBus:Lio/lettuce/core/event/EventBus;
       4: areturn

  static io.lettuce.core.metrics.CommandLatencyCollector access$600(io.lettuce.core.resource.DefaultClientResources$Builder);
    Code:
       0: aload_0
       1: getfield      #7                  // Field commandLatencyCollector:Lio/lettuce/core/metrics/CommandLatencyCollector;
       4: areturn

  static io.lettuce.core.metrics.CommandLatencyCollectorOptions access$700(io.lettuce.core.resource.DefaultClientResources$Builder);
    Code:
       0: aload_0
       1: getfield      #6                  // Field commandLatencyCollectorOptions:Lio/lettuce/core/metrics/CommandLatencyCollectorOptions;
       4: areturn

  static io.lettuce.core.metrics.CommandLatencyCollectorOptions access$702(io.lettuce.core.resource.DefaultClientResources$Builder, io.lettuce.core.metrics.CommandLatencyCollectorOptions);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #6                  // Field commandLatencyCollectorOptions:Lio/lettuce/core/metrics/CommandLatencyCollectorOptions;
       6: areturn

  static io.lettuce.core.event.EventPublisherOptions access$800(io.lettuce.core.resource.DefaultClientResources$Builder);
    Code:
       0: aload_0
       1: getfield      #5                  // Field commandLatencyPublisherOptions:Lio/lettuce/core/event/EventPublisherOptions;
       4: areturn

  static io.lettuce.core.resource.DnsResolver access$900(io.lettuce.core.resource.DefaultClientResources$Builder);
    Code:
       0: aload_0
       1: getfield      #4                  // Field dnsResolver:Lio/lettuce/core/resource/DnsResolver;
       4: areturn

  static java.util.function.Supplier access$1000(io.lettuce.core.resource.DefaultClientResources$Builder);
    Code:
       0: aload_0
       1: getfield      #3                  // Field reconnectDelay:Ljava/util/function/Supplier;
       4: areturn

  static io.lettuce.core.resource.NettyCustomizer access$1100(io.lettuce.core.resource.DefaultClientResources$Builder);
    Code:
       0: aload_0
       1: getfield      #2                  // Field nettyCustomizer:Lio/lettuce/core/resource/NettyCustomizer;
       4: areturn

  io.lettuce.core.resource.DefaultClientResources$Builder(io.lettuce.core.resource.DefaultClientResources$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
