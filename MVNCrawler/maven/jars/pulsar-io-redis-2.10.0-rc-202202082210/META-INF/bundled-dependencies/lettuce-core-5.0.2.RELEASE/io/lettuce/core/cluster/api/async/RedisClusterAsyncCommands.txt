Compiled from "RedisClusterAsyncCommands.java"
public interface io.lettuce.core.cluster.api.async.RedisClusterAsyncCommands<K, V> extends io.lettuce.core.api.async.RedisHashAsyncCommands<K, V>, io.lettuce.core.api.async.RedisKeyAsyncCommands<K, V>, io.lettuce.core.api.async.RedisStringAsyncCommands<K, V>, io.lettuce.core.api.async.RedisListAsyncCommands<K, V>, io.lettuce.core.api.async.RedisSetAsyncCommands<K, V>, io.lettuce.core.api.async.RedisSortedSetAsyncCommands<K, V>, io.lettuce.core.api.async.RedisScriptingAsyncCommands<K, V>, io.lettuce.core.api.async.RedisServerAsyncCommands<K, V>, io.lettuce.core.api.async.RedisHLLAsyncCommands<K, V>, io.lettuce.core.api.async.RedisGeoAsyncCommands<K, V>, io.lettuce.core.api.async.BaseRedisAsyncCommands<K, V> {
  public abstract void setTimeout(java.time.Duration);

  public abstract void setTimeout(long, java.util.concurrent.TimeUnit);

  public abstract java.lang.String auth(java.lang.String);

  public abstract io.lettuce.core.RedisFuture<java.lang.String> clusterBumpepoch();

  public abstract io.lettuce.core.RedisFuture<java.lang.String> clusterMeet(java.lang.String, int);

  public abstract io.lettuce.core.RedisFuture<java.lang.String> clusterForget(java.lang.String);

  public abstract io.lettuce.core.RedisFuture<java.lang.String> clusterAddSlots(int...);

  public abstract io.lettuce.core.RedisFuture<java.lang.String> clusterDelSlots(int...);

  public abstract io.lettuce.core.RedisFuture<java.lang.String> clusterSetSlotNode(int, java.lang.String);

  public abstract io.lettuce.core.RedisFuture<java.lang.String> clusterSetSlotStable(int);

  public abstract io.lettuce.core.RedisFuture<java.lang.String> clusterSetSlotMigrating(int, java.lang.String);

  public abstract io.lettuce.core.RedisFuture<java.lang.String> clusterSetSlotImporting(int, java.lang.String);

  public abstract io.lettuce.core.RedisFuture<java.lang.String> clusterInfo();

  public abstract io.lettuce.core.RedisFuture<java.lang.String> clusterMyId();

  public abstract io.lettuce.core.RedisFuture<java.lang.String> clusterNodes();

  public abstract io.lettuce.core.RedisFuture<java.util.List<java.lang.String>> clusterSlaves(java.lang.String);

  public abstract io.lettuce.core.RedisFuture<java.util.List<K>> clusterGetKeysInSlot(int, int);

  public abstract io.lettuce.core.RedisFuture<java.lang.Long> clusterCountKeysInSlot(int);

  public abstract io.lettuce.core.RedisFuture<java.lang.Long> clusterCountFailureReports(java.lang.String);

  public abstract io.lettuce.core.RedisFuture<java.lang.Long> clusterKeyslot(K);

  public abstract io.lettuce.core.RedisFuture<java.lang.String> clusterSaveconfig();

  public abstract io.lettuce.core.RedisFuture<java.lang.String> clusterSetConfigEpoch(long);

  public abstract io.lettuce.core.RedisFuture<java.util.List<java.lang.Object>> clusterSlots();

  public abstract io.lettuce.core.RedisFuture<java.lang.String> asking();

  public abstract io.lettuce.core.RedisFuture<java.lang.String> clusterReplicate(java.lang.String);

  public abstract io.lettuce.core.RedisFuture<java.lang.String> clusterFailover(boolean);

  public abstract io.lettuce.core.RedisFuture<java.lang.String> clusterReset(boolean);

  public abstract io.lettuce.core.RedisFuture<java.lang.String> clusterFlushslots();

  public abstract io.lettuce.core.RedisFuture<java.lang.String> readOnly();

  public abstract io.lettuce.core.RedisFuture<java.lang.String> readWrite();

  public abstract io.lettuce.core.RedisFuture<java.lang.Long> del(K...);

  public abstract io.lettuce.core.RedisFuture<java.util.List<io.lettuce.core.KeyValue<K, V>>> mget(K...);

  public abstract io.lettuce.core.RedisFuture<java.lang.String> mset(java.util.Map<K, V>);

  public abstract io.lettuce.core.RedisFuture<java.lang.Boolean> msetnx(java.util.Map<K, V>);
}
