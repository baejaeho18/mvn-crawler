Compiled from "AbstractInvocationHandler.java"
public class io.lettuce.core.internal.AbstractInvocationHandler$MethodTranslator {
  private static final java.util.WeakHashMap<java.lang.Class<?>, io.lettuce.core.internal.AbstractInvocationHandler$MethodTranslator> TRANSLATOR_MAP;

  private final java.util.Map<java.lang.reflect.Method, java.lang.reflect.Method> map;

  private io.lettuce.core.internal.AbstractInvocationHandler$MethodTranslator(java.lang.Class<?>, java.lang.Class<?>...);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: aload_1
       7: aload_2
       8: invokespecial #2                  // Method createMethodMap:(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/util/Map;
      11: putfield      #3                  // Field map:Ljava/util/Map;
      14: return

  public static io.lettuce.core.internal.AbstractInvocationHandler$MethodTranslator of(java.lang.Class<?>, java.lang.Class<?>...);
    Code:
       0: getstatic     #4                  // Field TRANSLATOR_MAP:Ljava/util/WeakHashMap;
       3: dup
       4: astore_2
       5: monitorenter
       6: getstatic     #4                  // Field TRANSLATOR_MAP:Ljava/util/WeakHashMap;
       9: aload_0
      10: aload_1
      11: invokedynamic #5,  0              // InvokeDynamic #0:apply:([Ljava/lang/Class;)Ljava/util/function/Function;
      16: invokevirtual #6                  // Method java/util/WeakHashMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      19: checkcast     #7                  // class io/lettuce/core/internal/AbstractInvocationHandler$MethodTranslator
      22: aload_2
      23: monitorexit
      24: areturn
      25: astore_3
      26: aload_2
      27: monitorexit
      28: aload_3
      29: athrow
    Exception table:
       from    to  target type
           6    24    25   any
          25    28    25   any

  private java.util.Map<java.lang.reflect.Method, java.lang.reflect.Method> createMethodMap(java.lang.Class<?>, java.lang.Class<?>[]);
    Code:
       0: new           #8                  // class java/util/ArrayList
       3: dup
       4: invokespecial #9                  // Method java/util/ArrayList."<init>":()V
       7: astore        4
       9: aload_2
      10: astore        5
      12: aload         5
      14: arraylength
      15: istore        6
      17: iconst_0
      18: istore        7
      20: iload         7
      22: iload         6
      24: if_icmpge     54
      27: aload         5
      29: iload         7
      31: aaload
      32: astore        8
      34: aload         4
      36: aload_0
      37: aload         8
      39: invokespecial #10                 // Method getMethods:(Ljava/lang/Class;)Ljava/util/Collection;
      42: invokeinterface #11,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      47: pop
      48: iinc          7, 1
      51: goto          20
      54: new           #12                 // class java/util/HashMap
      57: dup
      58: aload         4
      60: invokeinterface #13,  1           // InterfaceMethod java/util/List.size:()I
      65: fconst_1
      66: invokespecial #14                 // Method java/util/HashMap."<init>":(IF)V
      69: astore_3
      70: aload         4
      72: invokeinterface #15,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      77: astore        5
      79: aload         5
      81: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      86: ifeq          132
      89: aload         5
      91: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      96: checkcast     #18                 // class java/lang/reflect/Method
      99: astore        6
     101: aload_3
     102: aload         6
     104: aload_1
     105: aload         6
     107: invokevirtual #19                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
     110: aload         6
     112: invokevirtual #20                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
     115: invokevirtual #21                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
     118: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     123: pop
     124: goto          129
     127: astore        7
     129: goto          79
     132: aload_3
     133: areturn
    Exception table:
       from    to  target type
         101   124   127   Class java/lang/NoSuchMethodException

  private java.util.Collection<? extends java.lang.reflect.Method> getMethods(java.lang.Class<?>);
    Code:
       0: new           #24                 // class java/util/HashSet
       3: dup
       4: invokespecial #25                 // Method java/util/HashSet."<init>":()V
       7: astore_2
       8: aload_1
       9: astore_3
      10: aload_3
      11: ifnull        109
      14: aload_3
      15: ldc           #26                 // class java/lang/Object
      17: if_acmpeq     109
      20: aload_2
      21: aload_0
      22: aload_1
      23: invokevirtual #27                 // Method java/lang/Class.getDeclaredMethods:()[Ljava/lang/reflect/Method;
      26: invokestatic  #28                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      29: invokespecial #29                 // Method filterPublicMethods:(Ljava/util/List;)Ljava/util/Collection;
      32: invokeinterface #30,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      37: pop
      38: aload_1
      39: invokevirtual #31                 // Method java/lang/Class.isInterface:()Z
      42: ifeq          101
      45: aload_1
      46: invokevirtual #32                 // Method java/lang/Class.getInterfaces:()[Ljava/lang/Class;
      49: astore        4
      51: aload         4
      53: astore        5
      55: aload         5
      57: arraylength
      58: istore        6
      60: iconst_0
      61: istore        7
      63: iload         7
      65: iload         6
      67: if_icmpge     96
      70: aload         5
      72: iload         7
      74: aaload
      75: astore        8
      77: aload_2
      78: aload_0
      79: aload         8
      81: invokespecial #10                 // Method getMethods:(Ljava/lang/Class;)Ljava/util/Collection;
      84: invokeinterface #30,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      89: pop
      90: iinc          7, 1
      93: goto          63
      96: aconst_null
      97: astore_3
      98: goto          10
     101: aload_3
     102: invokevirtual #33                 // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
     105: astore_3
     106: goto          10
     109: aload_2
     110: areturn

  private java.util.Collection<? extends java.lang.reflect.Method> filterPublicMethods(java.util.List<java.lang.reflect.Method>);
    Code:
       0: new           #8                  // class java/util/ArrayList
       3: dup
       4: aload_1
       5: invokeinterface #13,  1           // InterfaceMethod java/util/List.size:()I
      10: invokespecial #34                 // Method java/util/ArrayList."<init>":(I)V
      13: astore_2
      14: aload_1
      15: invokeinterface #15,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      20: astore_3
      21: aload_3
      22: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          64
      30: aload_3
      31: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #18                 // class java/lang/reflect/Method
      39: astore        4
      41: aload         4
      43: invokevirtual #35                 // Method java/lang/reflect/Method.getModifiers:()I
      46: invokestatic  #36                 // Method java/lang/reflect/Modifier.isPublic:(I)Z
      49: ifeq          61
      52: aload_2
      53: aload         4
      55: invokeinterface #37,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      60: pop
      61: goto          21
      64: aload_2
      65: areturn

  public java.lang.reflect.Method get(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: getfield      #3                  // Field map:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #38,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #18                 // class java/lang/reflect/Method
      13: astore_2
      14: aload_2
      15: ifnull        20
      18: aload_2
      19: areturn
      20: new           #39                 // class java/lang/IllegalStateException
      23: dup
      24: new           #40                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #42                 // String Cannot find source method
      33: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_1
      37: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      40: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokespecial #46                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      46: athrow

  private static io.lettuce.core.internal.AbstractInvocationHandler$MethodTranslator lambda$of$0(java.lang.Class[], java.lang.Class);
    Code:
       0: new           #7                  // class io/lettuce/core/internal/AbstractInvocationHandler$MethodTranslator
       3: dup
       4: aload_1
       5: aload_0
       6: invokespecial #47                 // Method "<init>":(Ljava/lang/Class;[Ljava/lang/Class;)V
       9: areturn

  static {};
    Code:
       0: new           #48                 // class java/util/WeakHashMap
       3: dup
       4: bipush        32
       6: invokespecial #49                 // Method java/util/WeakHashMap."<init>":(I)V
       9: putstatic     #4                  // Field TRANSLATOR_MAP:Ljava/util/WeakHashMap;
      12: return
}
