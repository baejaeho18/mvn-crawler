Compiled from "BatchTasks.java"
class io.lettuce.core.dynamic.BatchTasks implements java.lang.Iterable<io.lettuce.core.protocol.RedisCommand<?, ?, ?>> {
  public static final io.lettuce.core.dynamic.BatchTasks EMPTY;

  private final java.util.List<io.lettuce.core.protocol.RedisCommand<?, ?, ?>> futures;

  io.lettuce.core.dynamic.BatchTasks(java.util.List<io.lettuce.core.protocol.RedisCommand<?, ?, ?>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field futures:Ljava/util/List;
       9: return

  public java.util.Iterator<io.lettuce.core.protocol.RedisCommand<?, ?, ?>> iterator();
    Code:
       0: aload_0
       1: getfield      #2                  // Field futures:Ljava/util/List;
       4: invokeinterface #3,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: areturn

  public io.lettuce.core.protocol.RedisCommand<?, ?, ?>[] toArray();
    Code:
       0: aload_0
       1: getfield      #2                  // Field futures:Ljava/util/List;
       4: iconst_0
       5: anewarray     #4                  // class io/lettuce/core/protocol/RedisCommand
       8: invokeinterface #5,  2            // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      13: checkcast     #6                  // class "[Lio/lettuce/core/protocol/RedisCommand;"
      16: areturn

  static {};
    Code:
       0: new           #7                  // class io/lettuce/core/dynamic/BatchTasks
       3: dup
       4: invokestatic  #8                  // Method java/util/Collections.emptyList:()Ljava/util/List;
       7: invokespecial #9                  // Method "<init>":(Ljava/util/List;)V
      10: putstatic     #10                 // Field EMPTY:Lio/lettuce/core/dynamic/BatchTasks;
      13: return
}
