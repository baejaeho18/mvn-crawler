Compiled from "RedisHashCommands.java"
public interface io.lettuce.core.api.sync.RedisHashCommands<K, V> {
  public abstract java.lang.Long hdel(K, K...);

  public abstract java.lang.Boolean hexists(K, K);

  public abstract V hget(K, K);

  public abstract java.lang.Long hincrby(K, K, long);

  public abstract java.lang.Double hincrbyfloat(K, K, double);

  public abstract java.util.Map<K, V> hgetall(K);

  public abstract java.lang.Long hgetall(io.lettuce.core.output.KeyValueStreamingChannel<K, V>, K);

  public abstract java.util.List<K> hkeys(K);

  public abstract java.lang.Long hkeys(io.lettuce.core.output.KeyStreamingChannel<K>, K);

  public abstract java.lang.Long hlen(K);

  public abstract java.util.List<io.lettuce.core.KeyValue<K, V>> hmget(K, K...);

  public abstract java.lang.Long hmget(io.lettuce.core.output.KeyValueStreamingChannel<K, V>, K, K...);

  public abstract java.lang.String hmset(K, java.util.Map<K, V>);

  public abstract io.lettuce.core.MapScanCursor<K, V> hscan(K);

  public abstract io.lettuce.core.MapScanCursor<K, V> hscan(K, io.lettuce.core.ScanArgs);

  public abstract io.lettuce.core.MapScanCursor<K, V> hscan(K, io.lettuce.core.ScanCursor, io.lettuce.core.ScanArgs);

  public abstract io.lettuce.core.MapScanCursor<K, V> hscan(K, io.lettuce.core.ScanCursor);

  public abstract io.lettuce.core.StreamScanCursor hscan(io.lettuce.core.output.KeyValueStreamingChannel<K, V>, K);

  public abstract io.lettuce.core.StreamScanCursor hscan(io.lettuce.core.output.KeyValueStreamingChannel<K, V>, K, io.lettuce.core.ScanArgs);

  public abstract io.lettuce.core.StreamScanCursor hscan(io.lettuce.core.output.KeyValueStreamingChannel<K, V>, K, io.lettuce.core.ScanCursor, io.lettuce.core.ScanArgs);

  public abstract io.lettuce.core.StreamScanCursor hscan(io.lettuce.core.output.KeyValueStreamingChannel<K, V>, K, io.lettuce.core.ScanCursor);

  public abstract java.lang.Boolean hset(K, K, V);

  public abstract java.lang.Boolean hsetnx(K, K, V);

  public abstract java.lang.Long hstrlen(K, K);

  public abstract java.util.List<V> hvals(K);

  public abstract java.lang.Long hvals(io.lettuce.core.output.ValueStreamingChannel<V>, K);
}
