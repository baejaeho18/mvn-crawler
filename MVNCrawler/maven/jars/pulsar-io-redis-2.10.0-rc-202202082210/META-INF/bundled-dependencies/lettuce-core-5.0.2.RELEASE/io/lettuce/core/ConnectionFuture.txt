Compiled from "ConnectionFuture.java"
public interface io.lettuce.core.ConnectionFuture<T> extends java.util.concurrent.CompletionStage<T>, java.util.concurrent.Future<T> {
  public static <T> io.lettuce.core.ConnectionFuture<T> from(java.net.SocketAddress, java.util.concurrent.CompletableFuture<T>);
    Code:
       0: new           #1                  // class io/lettuce/core/DefaultConnectionFuture
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #2                  // Method io/lettuce/core/DefaultConnectionFuture."<init>":(Ljava/net/SocketAddress;Ljava/util/concurrent/CompletableFuture;)V
       9: areturn

  public abstract T get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException;

  public abstract java.net.SocketAddress getRemoteAddress();

  public abstract T join();

  public abstract <U> io.lettuce.core.ConnectionFuture<U> thenApply(java.util.function.Function<? super T, ? extends U>);

  public abstract <U> io.lettuce.core.ConnectionFuture<U> thenApplyAsync(java.util.function.Function<? super T, ? extends U>);

  public abstract <U> io.lettuce.core.ConnectionFuture<U> thenApplyAsync(java.util.function.Function<? super T, ? extends U>, java.util.concurrent.Executor);

  public abstract io.lettuce.core.ConnectionFuture<java.lang.Void> thenAccept(java.util.function.Consumer<? super T>);

  public abstract io.lettuce.core.ConnectionFuture<java.lang.Void> thenAcceptAsync(java.util.function.Consumer<? super T>);

  public abstract io.lettuce.core.ConnectionFuture<java.lang.Void> thenAcceptAsync(java.util.function.Consumer<? super T>, java.util.concurrent.Executor);

  public abstract io.lettuce.core.ConnectionFuture<java.lang.Void> thenRun(java.lang.Runnable);

  public abstract io.lettuce.core.ConnectionFuture<java.lang.Void> thenRunAsync(java.lang.Runnable);

  public abstract io.lettuce.core.ConnectionFuture<java.lang.Void> thenRunAsync(java.lang.Runnable, java.util.concurrent.Executor);

  public abstract <U, V> io.lettuce.core.ConnectionFuture<V> thenCombine(java.util.concurrent.CompletionStage<? extends U>, java.util.function.BiFunction<? super T, ? super U, ? extends V>);

  public abstract <U, V> io.lettuce.core.ConnectionFuture<V> thenCombineAsync(java.util.concurrent.CompletionStage<? extends U>, java.util.function.BiFunction<? super T, ? super U, ? extends V>);

  public abstract <U, V> io.lettuce.core.ConnectionFuture<V> thenCombineAsync(java.util.concurrent.CompletionStage<? extends U>, java.util.function.BiFunction<? super T, ? super U, ? extends V>, java.util.concurrent.Executor);

  public abstract <U> io.lettuce.core.ConnectionFuture<java.lang.Void> thenAcceptBoth(java.util.concurrent.CompletionStage<? extends U>, java.util.function.BiConsumer<? super T, ? super U>);

  public abstract <U> io.lettuce.core.ConnectionFuture<java.lang.Void> thenAcceptBothAsync(java.util.concurrent.CompletionStage<? extends U>, java.util.function.BiConsumer<? super T, ? super U>);

  public abstract <U> io.lettuce.core.ConnectionFuture<java.lang.Void> thenAcceptBothAsync(java.util.concurrent.CompletionStage<? extends U>, java.util.function.BiConsumer<? super T, ? super U>, java.util.concurrent.Executor);

  public abstract io.lettuce.core.ConnectionFuture<java.lang.Void> runAfterBoth(java.util.concurrent.CompletionStage<?>, java.lang.Runnable);

  public abstract io.lettuce.core.ConnectionFuture<java.lang.Void> runAfterBothAsync(java.util.concurrent.CompletionStage<?>, java.lang.Runnable);

  public abstract io.lettuce.core.ConnectionFuture<java.lang.Void> runAfterBothAsync(java.util.concurrent.CompletionStage<?>, java.lang.Runnable, java.util.concurrent.Executor);

  public abstract <U> io.lettuce.core.ConnectionFuture<U> applyToEither(java.util.concurrent.CompletionStage<? extends T>, java.util.function.Function<? super T, U>);

  public abstract <U> io.lettuce.core.ConnectionFuture<U> applyToEitherAsync(java.util.concurrent.CompletionStage<? extends T>, java.util.function.Function<? super T, U>);

  public abstract <U> io.lettuce.core.ConnectionFuture<U> applyToEitherAsync(java.util.concurrent.CompletionStage<? extends T>, java.util.function.Function<? super T, U>, java.util.concurrent.Executor);

  public abstract io.lettuce.core.ConnectionFuture<java.lang.Void> acceptEither(java.util.concurrent.CompletionStage<? extends T>, java.util.function.Consumer<? super T>);

  public abstract io.lettuce.core.ConnectionFuture<java.lang.Void> acceptEitherAsync(java.util.concurrent.CompletionStage<? extends T>, java.util.function.Consumer<? super T>);

  public abstract io.lettuce.core.ConnectionFuture<java.lang.Void> acceptEitherAsync(java.util.concurrent.CompletionStage<? extends T>, java.util.function.Consumer<? super T>, java.util.concurrent.Executor);

  public abstract io.lettuce.core.ConnectionFuture<java.lang.Void> runAfterEither(java.util.concurrent.CompletionStage<?>, java.lang.Runnable);

  public abstract io.lettuce.core.ConnectionFuture<java.lang.Void> runAfterEitherAsync(java.util.concurrent.CompletionStage<?>, java.lang.Runnable);

  public abstract io.lettuce.core.ConnectionFuture<java.lang.Void> runAfterEitherAsync(java.util.concurrent.CompletionStage<?>, java.lang.Runnable, java.util.concurrent.Executor);

  public abstract <U> io.lettuce.core.ConnectionFuture<U> thenCompose(java.util.function.Function<? super T, ? extends java.util.concurrent.CompletionStage<U>>);

  public abstract <U> io.lettuce.core.ConnectionFuture<U> thenComposeAsync(java.util.function.Function<? super T, ? extends java.util.concurrent.CompletionStage<U>>);

  public abstract <U> io.lettuce.core.ConnectionFuture<U> thenComposeAsync(java.util.function.Function<? super T, ? extends java.util.concurrent.CompletionStage<U>>, java.util.concurrent.Executor);

  public abstract io.lettuce.core.ConnectionFuture<T> exceptionally(java.util.function.Function<java.lang.Throwable, ? extends T>);

  public abstract io.lettuce.core.ConnectionFuture<T> whenComplete(java.util.function.BiConsumer<? super T, ? super java.lang.Throwable>);

  public abstract io.lettuce.core.ConnectionFuture<T> whenCompleteAsync(java.util.function.BiConsumer<? super T, ? super java.lang.Throwable>);

  public abstract io.lettuce.core.ConnectionFuture<T> whenCompleteAsync(java.util.function.BiConsumer<? super T, ? super java.lang.Throwable>, java.util.concurrent.Executor);

  public abstract <U> io.lettuce.core.ConnectionFuture<U> handle(java.util.function.BiFunction<? super T, java.lang.Throwable, ? extends U>);

  public abstract <U> io.lettuce.core.ConnectionFuture<U> handleAsync(java.util.function.BiFunction<? super T, java.lang.Throwable, ? extends U>);

  public abstract <U> io.lettuce.core.ConnectionFuture<U> handleAsync(java.util.function.BiFunction<? super T, java.lang.Throwable, ? extends U>, java.util.concurrent.Executor);

  public default java.util.concurrent.CompletionStage handleAsync(java.util.function.BiFunction, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #3,  3            // InterfaceMethod handleAsync:(Ljava/util/function/BiFunction;Ljava/util/concurrent/Executor;)Lio/lettuce/core/ConnectionFuture;
       8: areturn

  public default java.util.concurrent.CompletionStage handleAsync(java.util.function.BiFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #4,  2            // InterfaceMethod handleAsync:(Ljava/util/function/BiFunction;)Lio/lettuce/core/ConnectionFuture;
       7: areturn

  public default java.util.concurrent.CompletionStage handle(java.util.function.BiFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #5,  2            // InterfaceMethod handle:(Ljava/util/function/BiFunction;)Lio/lettuce/core/ConnectionFuture;
       7: areturn

  public default java.util.concurrent.CompletionStage whenCompleteAsync(java.util.function.BiConsumer, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #6,  3            // InterfaceMethod whenCompleteAsync:(Ljava/util/function/BiConsumer;Ljava/util/concurrent/Executor;)Lio/lettuce/core/ConnectionFuture;
       8: areturn

  public default java.util.concurrent.CompletionStage whenCompleteAsync(java.util.function.BiConsumer);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #7,  2            // InterfaceMethod whenCompleteAsync:(Ljava/util/function/BiConsumer;)Lio/lettuce/core/ConnectionFuture;
       7: areturn

  public default java.util.concurrent.CompletionStage whenComplete(java.util.function.BiConsumer);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #8,  2            // InterfaceMethod whenComplete:(Ljava/util/function/BiConsumer;)Lio/lettuce/core/ConnectionFuture;
       7: areturn

  public default java.util.concurrent.CompletionStage exceptionally(java.util.function.Function);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #9,  2            // InterfaceMethod exceptionally:(Ljava/util/function/Function;)Lio/lettuce/core/ConnectionFuture;
       7: areturn

  public default java.util.concurrent.CompletionStage thenComposeAsync(java.util.function.Function, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #10,  3           // InterfaceMethod thenComposeAsync:(Ljava/util/function/Function;Ljava/util/concurrent/Executor;)Lio/lettuce/core/ConnectionFuture;
       8: areturn

  public default java.util.concurrent.CompletionStage thenComposeAsync(java.util.function.Function);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #11,  2           // InterfaceMethod thenComposeAsync:(Ljava/util/function/Function;)Lio/lettuce/core/ConnectionFuture;
       7: areturn

  public default java.util.concurrent.CompletionStage thenCompose(java.util.function.Function);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #12,  2           // InterfaceMethod thenCompose:(Ljava/util/function/Function;)Lio/lettuce/core/ConnectionFuture;
       7: areturn

  public default java.util.concurrent.CompletionStage runAfterEitherAsync(java.util.concurrent.CompletionStage, java.lang.Runnable, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokeinterface #13,  4           // InterfaceMethod runAfterEitherAsync:(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)Lio/lettuce/core/ConnectionFuture;
       9: areturn

  public default java.util.concurrent.CompletionStage runAfterEitherAsync(java.util.concurrent.CompletionStage, java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #14,  3           // InterfaceMethod runAfterEitherAsync:(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;)Lio/lettuce/core/ConnectionFuture;
       8: areturn

  public default java.util.concurrent.CompletionStage runAfterEither(java.util.concurrent.CompletionStage, java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #15,  3           // InterfaceMethod runAfterEither:(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;)Lio/lettuce/core/ConnectionFuture;
       8: areturn

  public default java.util.concurrent.CompletionStage acceptEitherAsync(java.util.concurrent.CompletionStage, java.util.function.Consumer, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokeinterface #16,  4           // InterfaceMethod acceptEitherAsync:(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Consumer;Ljava/util/concurrent/Executor;)Lio/lettuce/core/ConnectionFuture;
       9: areturn

  public default java.util.concurrent.CompletionStage acceptEitherAsync(java.util.concurrent.CompletionStage, java.util.function.Consumer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #17,  3           // InterfaceMethod acceptEitherAsync:(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Consumer;)Lio/lettuce/core/ConnectionFuture;
       8: areturn

  public default java.util.concurrent.CompletionStage acceptEither(java.util.concurrent.CompletionStage, java.util.function.Consumer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #18,  3           // InterfaceMethod acceptEither:(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Consumer;)Lio/lettuce/core/ConnectionFuture;
       8: areturn

  public default java.util.concurrent.CompletionStage applyToEitherAsync(java.util.concurrent.CompletionStage, java.util.function.Function, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokeinterface #19,  4           // InterfaceMethod applyToEitherAsync:(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Function;Ljava/util/concurrent/Executor;)Lio/lettuce/core/ConnectionFuture;
       9: areturn

  public default java.util.concurrent.CompletionStage applyToEitherAsync(java.util.concurrent.CompletionStage, java.util.function.Function);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #20,  3           // InterfaceMethod applyToEitherAsync:(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Function;)Lio/lettuce/core/ConnectionFuture;
       8: areturn

  public default java.util.concurrent.CompletionStage applyToEither(java.util.concurrent.CompletionStage, java.util.function.Function);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #21,  3           // InterfaceMethod applyToEither:(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Function;)Lio/lettuce/core/ConnectionFuture;
       8: areturn

  public default java.util.concurrent.CompletionStage runAfterBothAsync(java.util.concurrent.CompletionStage, java.lang.Runnable, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokeinterface #22,  4           // InterfaceMethod runAfterBothAsync:(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)Lio/lettuce/core/ConnectionFuture;
       9: areturn

  public default java.util.concurrent.CompletionStage runAfterBothAsync(java.util.concurrent.CompletionStage, java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #23,  3           // InterfaceMethod runAfterBothAsync:(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;)Lio/lettuce/core/ConnectionFuture;
       8: areturn

  public default java.util.concurrent.CompletionStage runAfterBoth(java.util.concurrent.CompletionStage, java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #24,  3           // InterfaceMethod runAfterBoth:(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;)Lio/lettuce/core/ConnectionFuture;
       8: areturn

  public default java.util.concurrent.CompletionStage thenAcceptBothAsync(java.util.concurrent.CompletionStage, java.util.function.BiConsumer, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokeinterface #25,  4           // InterfaceMethod thenAcceptBothAsync:(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiConsumer;Ljava/util/concurrent/Executor;)Lio/lettuce/core/ConnectionFuture;
       9: areturn

  public default java.util.concurrent.CompletionStage thenAcceptBothAsync(java.util.concurrent.CompletionStage, java.util.function.BiConsumer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #26,  3           // InterfaceMethod thenAcceptBothAsync:(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiConsumer;)Lio/lettuce/core/ConnectionFuture;
       8: areturn

  public default java.util.concurrent.CompletionStage thenAcceptBoth(java.util.concurrent.CompletionStage, java.util.function.BiConsumer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #27,  3           // InterfaceMethod thenAcceptBoth:(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiConsumer;)Lio/lettuce/core/ConnectionFuture;
       8: areturn

  public default java.util.concurrent.CompletionStage thenCombineAsync(java.util.concurrent.CompletionStage, java.util.function.BiFunction, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokeinterface #28,  4           // InterfaceMethod thenCombineAsync:(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiFunction;Ljava/util/concurrent/Executor;)Lio/lettuce/core/ConnectionFuture;
       9: areturn

  public default java.util.concurrent.CompletionStage thenCombineAsync(java.util.concurrent.CompletionStage, java.util.function.BiFunction);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #29,  3           // InterfaceMethod thenCombineAsync:(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiFunction;)Lio/lettuce/core/ConnectionFuture;
       8: areturn

  public default java.util.concurrent.CompletionStage thenCombine(java.util.concurrent.CompletionStage, java.util.function.BiFunction);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #30,  3           // InterfaceMethod thenCombine:(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiFunction;)Lio/lettuce/core/ConnectionFuture;
       8: areturn

  public default java.util.concurrent.CompletionStage thenRunAsync(java.lang.Runnable, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #31,  3           // InterfaceMethod thenRunAsync:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)Lio/lettuce/core/ConnectionFuture;
       8: areturn

  public default java.util.concurrent.CompletionStage thenRunAsync(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #32,  2           // InterfaceMethod thenRunAsync:(Ljava/lang/Runnable;)Lio/lettuce/core/ConnectionFuture;
       7: areturn

  public default java.util.concurrent.CompletionStage thenRun(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #33,  2           // InterfaceMethod thenRun:(Ljava/lang/Runnable;)Lio/lettuce/core/ConnectionFuture;
       7: areturn

  public default java.util.concurrent.CompletionStage thenAcceptAsync(java.util.function.Consumer, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #34,  3           // InterfaceMethod thenAcceptAsync:(Ljava/util/function/Consumer;Ljava/util/concurrent/Executor;)Lio/lettuce/core/ConnectionFuture;
       8: areturn

  public default java.util.concurrent.CompletionStage thenAcceptAsync(java.util.function.Consumer);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #35,  2           // InterfaceMethod thenAcceptAsync:(Ljava/util/function/Consumer;)Lio/lettuce/core/ConnectionFuture;
       7: areturn

  public default java.util.concurrent.CompletionStage thenAccept(java.util.function.Consumer);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #36,  2           // InterfaceMethod thenAccept:(Ljava/util/function/Consumer;)Lio/lettuce/core/ConnectionFuture;
       7: areturn

  public default java.util.concurrent.CompletionStage thenApplyAsync(java.util.function.Function, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #37,  3           // InterfaceMethod thenApplyAsync:(Ljava/util/function/Function;Ljava/util/concurrent/Executor;)Lio/lettuce/core/ConnectionFuture;
       8: areturn

  public default java.util.concurrent.CompletionStage thenApplyAsync(java.util.function.Function);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #38,  2           // InterfaceMethod thenApplyAsync:(Ljava/util/function/Function;)Lio/lettuce/core/ConnectionFuture;
       7: areturn

  public default java.util.concurrent.CompletionStage thenApply(java.util.function.Function);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #39,  2           // InterfaceMethod thenApply:(Ljava/util/function/Function;)Lio/lettuce/core/ConnectionFuture;
       7: areturn
}
