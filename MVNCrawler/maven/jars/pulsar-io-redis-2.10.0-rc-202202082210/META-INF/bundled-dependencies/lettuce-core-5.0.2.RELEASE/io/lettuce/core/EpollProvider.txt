Compiled from "EpollProvider.java"
public class io.lettuce.core.EpollProvider {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private static final java.lang.String EPOLL_ENABLED_KEY;

  private static final boolean EPOLL_ENABLED;

  private static final boolean EPOLL_AVAILABLE;

  private static final io.lettuce.core.EpollProvider$EpollResources epollResources;

  public io.lettuce.core.EpollProvider();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean isAvailable();
    Code:
       0: getstatic     #2                  // Field EPOLL_AVAILABLE:Z
       3: ifeq          16
       6: getstatic     #3                  // Field EPOLL_ENABLED:Z
       9: ifeq          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  static void checkForEpollLibrary();
    Code:
       0: getstatic     #3                  // Field EPOLL_ENABLED:Z
       3: ldc           #4                  // String epoll use is disabled via System properties (%s)
       5: iconst_1
       6: anewarray     #5                  // class java/lang/Object
       9: dup
      10: iconst_0
      11: ldc           #7                  // String io.lettuce.core.epoll
      13: aastore
      14: invokestatic  #8                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      17: invokestatic  #9                  // Method io/lettuce/core/internal/LettuceAssert.assertState:(ZLjava/lang/String;)V
      20: invokestatic  #10                 // Method isAvailable:()Z
      23: ldc           #11                 // String netty-transport-native-epoll is not available. Make sure netty-transport-native-epoll library on the class path and supported by your operating system.
      25: invokestatic  #9                  // Method io/lettuce/core/internal/LettuceAssert.assertState:(ZLjava/lang/String;)V
      28: return

  public static boolean isEventLoopGroup(java.lang.Class<? extends io.netty.util.concurrent.EventExecutorGroup>);
    Code:
       0: getstatic     #12                 // Field epollResources:Lio/lettuce/core/EpollProvider$EpollResources;
       3: aload_0
       4: invokeinterface #13,  2           // InterfaceMethod io/lettuce/core/EpollProvider$EpollResources.isEventLoopGroup:(Ljava/lang/Class;)Z
       9: ireturn

  public static io.netty.channel.EventLoopGroup newEventLoopGroup(int, java.util.concurrent.ThreadFactory);
    Code:
       0: getstatic     #12                 // Field epollResources:Lio/lettuce/core/EpollProvider$EpollResources;
       3: iload_0
       4: aload_1
       5: invokeinterface #14,  3           // InterfaceMethod io/lettuce/core/EpollProvider$EpollResources.newEventLoopGroup:(ILjava/util/concurrent/ThreadFactory;)Lio/netty/channel/EventLoopGroup;
      10: areturn

  static java.lang.Class<? extends io.netty.channel.Channel> domainSocketChannelClass();
    Code:
       0: getstatic     #12                 // Field epollResources:Lio/lettuce/core/EpollProvider$EpollResources;
       3: invokeinterface #15,  1           // InterfaceMethod io/lettuce/core/EpollProvider$EpollResources.domainSocketChannelClass:()Ljava/lang/Class;
       8: areturn

  static java.lang.Class<? extends io.netty.channel.Channel> socketChannelClass();
    Code:
       0: getstatic     #12                 // Field epollResources:Lio/lettuce/core/EpollProvider$EpollResources;
       3: invokeinterface #16,  1           // InterfaceMethod io/lettuce/core/EpollProvider$EpollResources.socketChannelClass:()Ljava/lang/Class;
       8: areturn

  static java.lang.Class<? extends io.netty.channel.EventLoopGroup> eventLoopGroupClass();
    Code:
       0: getstatic     #12                 // Field epollResources:Lio/lettuce/core/EpollProvider$EpollResources;
       3: invokeinterface #17,  1           // InterfaceMethod io/lettuce/core/EpollProvider$EpollResources.eventLoopGroupClass:()Ljava/lang/Class;
       8: areturn

  static java.net.SocketAddress newSocketAddress(java.lang.String);
    Code:
       0: getstatic     #12                 // Field epollResources:Lio/lettuce/core/EpollProvider$EpollResources;
       3: aload_0
       4: invokeinterface #18,  2           // InterfaceMethod io/lettuce/core/EpollProvider$EpollResources.newSocketAddress:(Ljava/lang/String;)Ljava/net/SocketAddress;
       9: areturn

  static {};
    Code:
       0: ldc           #6                  // class io/lettuce/core/EpollProvider
       2: invokestatic  #19                 // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
       5: putstatic     #20                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       8: ldc           #7                  // String io.lettuce.core.epoll
      10: ldc           #21                 // String true
      12: invokestatic  #22                 // Method io/netty/util/internal/SystemPropertyUtil.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      15: invokestatic  #23                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      18: putstatic     #3                  // Field EPOLL_ENABLED:Z
      21: iconst_0
      22: istore_0
      23: ldc           #24                 // String io.netty.channel.epoll.Epoll
      25: invokestatic  #25                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      28: pop
      29: invokestatic  #26                 // Method io/netty/channel/epoll/Epoll.isAvailable:()Z
      32: istore_0
      33: goto          37
      36: astore_1
      37: iload_0
      38: putstatic     #2                  // Field EPOLL_AVAILABLE:Z
      41: getstatic     #2                  // Field EPOLL_AVAILABLE:Z
      44: ifeq          66
      47: getstatic     #20                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      50: ldc           #28                 // String Starting with epoll library
      52: invokeinterface #29,  2           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.info:(Ljava/lang/String;)V
      57: getstatic     #30                 // Field io/lettuce/core/EpollProvider$AvailableEpollResources.INSTANCE:Lio/lettuce/core/EpollProvider$AvailableEpollResources;
      60: putstatic     #12                 // Field epollResources:Lio/lettuce/core/EpollProvider$EpollResources;
      63: goto          82
      66: getstatic     #20                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      69: ldc           #31                 // String Starting without optional epoll library
      71: invokeinterface #29,  2           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.info:(Ljava/lang/String;)V
      76: getstatic     #32                 // Field io/lettuce/core/EpollProvider$UnavailableEpollResources.INSTANCE:Lio/lettuce/core/EpollProvider$UnavailableEpollResources;
      79: putstatic     #12                 // Field epollResources:Lio/lettuce/core/EpollProvider$EpollResources;
      82: return
    Exception table:
       from    to  target type
          23    33    36   Class java/lang/ClassNotFoundException
}
