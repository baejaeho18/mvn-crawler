Compiled from "BatchExecutableCommand.java"
class io.lettuce.core.dynamic.BatchExecutableCommand implements io.lettuce.core.dynamic.ExecutableCommand {
  private final io.lettuce.core.dynamic.CommandMethod commandMethod;

  private final io.lettuce.core.dynamic.CommandFactory commandFactory;

  private final io.lettuce.core.dynamic.Batcher batcher;

  private final io.lettuce.core.api.StatefulConnection<java.lang.Object, java.lang.Object> connection;

  private final io.lettuce.core.dynamic.parameter.ExecutionSpecificParameters parameters;

  private final boolean async;

  io.lettuce.core.dynamic.BatchExecutableCommand(io.lettuce.core.dynamic.CommandMethod, io.lettuce.core.dynamic.CommandFactory, io.lettuce.core.dynamic.Batcher, io.lettuce.core.api.StatefulConnection<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field commandMethod:Lio/lettuce/core/dynamic/CommandMethod;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field commandFactory:Lio/lettuce/core/dynamic/CommandFactory;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field batcher:Lio/lettuce/core/dynamic/Batcher;
      19: aload_0
      20: aload_1
      21: invokeinterface #5,  1            // InterfaceMethod io/lettuce/core/dynamic/CommandMethod.getParameters:()Lio/lettuce/core/dynamic/parameter/Parameters;
      26: checkcast     #6                  // class io/lettuce/core/dynamic/parameter/ExecutionSpecificParameters
      29: putfield      #7                  // Field parameters:Lio/lettuce/core/dynamic/parameter/ExecutionSpecificParameters;
      32: aload_0
      33: aload_1
      34: invokeinterface #8,  1            // InterfaceMethod io/lettuce/core/dynamic/CommandMethod.isFutureExecution:()Z
      39: putfield      #9                  // Field async:Z
      42: aload_0
      43: aload         4
      45: putfield      #10                 // Field connection:Lio/lettuce/core/api/StatefulConnection;
      48: return

  public java.lang.Object execute(java.lang.Object[]) throws java.util.concurrent.ExecutionException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field commandFactory:Lio/lettuce/core/dynamic/CommandFactory;
       4: aload_1
       5: invokeinterface #11,  2           // InterfaceMethod io/lettuce/core/dynamic/CommandFactory.createCommand:([Ljava/lang/Object;)Lio/lettuce/core/protocol/RedisCommand;
      10: astore_2
      11: aconst_null
      12: astore_3
      13: aload_0
      14: getfield      #7                  // Field parameters:Lio/lettuce/core/dynamic/parameter/ExecutionSpecificParameters;
      17: invokevirtual #12                 // Method io/lettuce/core/dynamic/parameter/ExecutionSpecificParameters.hasCommandBatchingIndex:()Z
      20: ifeq          36
      23: aload_1
      24: aload_0
      25: getfield      #7                  // Field parameters:Lio/lettuce/core/dynamic/parameter/ExecutionSpecificParameters;
      28: invokevirtual #13                 // Method io/lettuce/core/dynamic/parameter/ExecutionSpecificParameters.getCommandBatchingIndex:()I
      31: aaload
      32: checkcast     #14                 // class io/lettuce/core/dynamic/batch/CommandBatching
      35: astore_3
      36: new           #15                 // class io/lettuce/core/protocol/AsyncCommand
      39: dup
      40: aload_2
      41: invokespecial #16                 // Method io/lettuce/core/protocol/AsyncCommand."<init>":(Lio/lettuce/core/protocol/RedisCommand;)V
      44: astore        4
      46: aload_0
      47: getfield      #9                  // Field async:Z
      50: ifeq          69
      53: aload_0
      54: getfield      #4                  // Field batcher:Lio/lettuce/core/dynamic/Batcher;
      57: aload         4
      59: aload_3
      60: invokeinterface #17,  3           // InterfaceMethod io/lettuce/core/dynamic/Batcher.batch:(Lio/lettuce/core/protocol/RedisCommand;Lio/lettuce/core/dynamic/batch/CommandBatching;)Lio/lettuce/core/dynamic/BatchTasks;
      65: pop
      66: aload         4
      68: areturn
      69: aload_0
      70: getfield      #4                  // Field batcher:Lio/lettuce/core/dynamic/Batcher;
      73: aload         4
      75: aload_3
      76: invokeinterface #17,  3           // InterfaceMethod io/lettuce/core/dynamic/Batcher.batch:(Lio/lettuce/core/protocol/RedisCommand;Lio/lettuce/core/dynamic/batch/CommandBatching;)Lio/lettuce/core/dynamic/BatchTasks;
      81: astore        5
      83: aload         5
      85: aload_0
      86: getfield      #10                 // Field connection:Lio/lettuce/core/api/StatefulConnection;
      89: invokestatic  #18                 // Method synchronize:(Lio/lettuce/core/dynamic/BatchTasks;Lio/lettuce/core/api/StatefulConnection;)Ljava/lang/Object;
      92: areturn

  protected static java.lang.Object synchronize(io.lettuce.core.dynamic.BatchTasks, io.lettuce.core.api.StatefulConnection<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: getstatic     #19                 // Field io/lettuce/core/dynamic/BatchTasks.EMPTY:Lio/lettuce/core/dynamic/BatchTasks;
       4: if_acmpne     9
       7: aconst_null
       8: areturn
       9: aload_1
      10: invokeinterface #20,  1           // InterfaceMethod io/lettuce/core/api/StatefulConnection.getTimeout:()Ljava/time/Duration;
      15: astore_2
      16: aconst_null
      17: astore_3
      18: aconst_null
      19: astore        4
      21: aload_0
      22: invokevirtual #21                 // Method io/lettuce/core/dynamic/BatchTasks.iterator:()Ljava/util/Iterator;
      25: astore        5
      27: aload         5
      29: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          113
      37: aload         5
      39: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #24                 // class io/lettuce/core/protocol/RedisCommand
      47: astore        6
      49: aload_2
      50: iconst_1
      51: anewarray     #25                 // class java/util/concurrent/Future
      54: dup
      55: iconst_0
      56: aload         6
      58: checkcast     #26                 // class io/lettuce/core/RedisFuture
      61: aastore
      62: invokestatic  #27                 // Method io/lettuce/core/LettuceFutures.awaitAll:(Ljava/time/Duration;[Ljava/util/concurrent/Future;)Z
      65: pop
      66: goto          110
      69: astore        7
      71: aload_3
      72: ifnonnull     94
      75: new           #29                 // class java/util/ArrayList
      78: dup
      79: invokespecial #30                 // Method java/util/ArrayList."<init>":()V
      82: astore        4
      84: new           #31                 // class io/lettuce/core/dynamic/batch/BatchException
      87: dup
      88: aload         4
      90: invokespecial #32                 // Method io/lettuce/core/dynamic/batch/BatchException."<init>":(Ljava/util/List;)V
      93: astore_3
      94: aload         4
      96: aload         6
      98: invokeinterface #33,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     103: pop
     104: aload_3
     105: aload         7
     107: invokevirtual #34                 // Method io/lettuce/core/dynamic/batch/BatchException.addSuppressed:(Ljava/lang/Throwable;)V
     110: goto          27
     113: aload_3
     114: ifnull        119
     117: aload_3
     118: athrow
     119: aconst_null
     120: areturn
    Exception table:
       from    to  target type
          49    66    69   Class java/lang/Exception

  public io.lettuce.core.dynamic.CommandMethod getCommandMethod();
    Code:
       0: aload_0
       1: getfield      #2                  // Field commandMethod:Lio/lettuce/core/dynamic/CommandMethod;
       4: areturn
}
