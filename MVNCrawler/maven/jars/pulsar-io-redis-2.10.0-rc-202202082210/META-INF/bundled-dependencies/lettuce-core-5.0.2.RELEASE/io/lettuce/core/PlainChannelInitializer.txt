Compiled from "PlainChannelInitializer.java"
class io.lettuce.core.PlainChannelInitializer extends io.netty.channel.ChannelInitializer<io.netty.channel.Channel> implements io.lettuce.core.RedisChannelInitializer {
  static final java.util.function.Supplier<io.lettuce.core.protocol.AsyncCommand<?, ?, ?>> NO_PING;

  private final java.util.function.Supplier<java.util.List<io.netty.channel.ChannelHandler>> handlers;

  private final java.util.function.Supplier<io.lettuce.core.protocol.AsyncCommand<?, ?, ?>> pingCommandSupplier;

  private final io.lettuce.core.resource.ClientResources clientResources;

  private final java.time.Duration timeout;

  private volatile java.util.concurrent.CompletableFuture<java.lang.Boolean> initializedFuture;

  io.lettuce.core.PlainChannelInitializer(java.util.function.Supplier<io.lettuce.core.protocol.AsyncCommand<?, ?, ?>>, java.util.function.Supplier<java.util.List<io.netty.channel.ChannelHandler>>, io.lettuce.core.resource.ClientResources, java.time.Duration);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method io/netty/channel/ChannelInitializer."<init>":()V
       4: aload_0
       5: new           #6                  // class java/util/concurrent/CompletableFuture
       8: dup
       9: invokespecial #7                  // Method java/util/concurrent/CompletableFuture."<init>":()V
      12: putfield      #4                  // Field initializedFuture:Ljava/util/concurrent/CompletableFuture;
      15: aload_0
      16: aload_1
      17: putfield      #2                  // Field pingCommandSupplier:Ljava/util/function/Supplier;
      20: aload_0
      21: aload_2
      22: putfield      #8                  // Field handlers:Ljava/util/function/Supplier;
      25: aload_0
      26: aload_3
      27: putfield      #3                  // Field clientResources:Lio/lettuce/core/resource/ClientResources;
      30: aload_0
      31: aload         4
      33: putfield      #1                  // Field timeout:Ljava/time/Duration;
      36: return

  protected void initChannel(io.netty.channel.Channel) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #9,  1            // InterfaceMethod io/netty/channel/Channel.pipeline:()Lio/netty/channel/ChannelPipeline;
       6: ldc           #10                 // String channelActivator
       8: invokeinterface #11,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.get:(Ljava/lang/String;)Lio/netty/channel/ChannelHandler;
      13: ifnonnull     38
      16: aload_1
      17: invokeinterface #9,  1            // InterfaceMethod io/netty/channel/Channel.pipeline:()Lio/netty/channel/ChannelPipeline;
      22: ldc           #10                 // String channelActivator
      24: new           #12                 // class io/lettuce/core/PlainChannelInitializer$1
      27: dup
      28: aload_0
      29: invokespecial #13                 // Method io/lettuce/core/PlainChannelInitializer$1."<init>":(Lio/lettuce/core/PlainChannelInitializer;)V
      32: invokeinterface #14,  3           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:(Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      37: pop
      38: aload_0
      39: getfield      #8                  // Field handlers:Ljava/util/function/Supplier;
      42: invokeinterface #15,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      47: checkcast     #16                 // class java/util/List
      50: invokeinterface #17,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      55: astore_2
      56: aload_2
      57: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      62: ifeq          98
      65: aload_2
      66: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      71: checkcast     #20                 // class io/netty/channel/ChannelHandler
      74: astore_3
      75: aload_1
      76: invokeinterface #9,  1            // InterfaceMethod io/netty/channel/Channel.pipeline:()Lio/netty/channel/ChannelPipeline;
      81: iconst_1
      82: anewarray     #20                 // class io/netty/channel/ChannelHandler
      85: dup
      86: iconst_0
      87: aload_3
      88: aastore
      89: invokeinterface #21,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:([Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      94: pop
      95: goto          56
      98: aload_0
      99: getfield      #3                  // Field clientResources:Lio/lettuce/core/resource/ClientResources;
     102: invokeinterface #22,  1           // InterfaceMethod io/lettuce/core/resource/ClientResources.nettyCustomizer:()Lio/lettuce/core/resource/NettyCustomizer;
     107: aload_1
     108: invokeinterface #23,  2           // InterfaceMethod io/lettuce/core/resource/NettyCustomizer.afterChannelInitialized:(Lio/netty/channel/Channel;)V
     113: return

  static void pingBeforeActivate(io.lettuce.core.protocol.AsyncCommand<?, ?, ?>, java.util.concurrent.CompletableFuture<java.lang.Boolean>, io.netty.channel.ChannelHandlerContext, io.lettuce.core.resource.ClientResources, java.time.Duration) throws java.lang.Exception;
    Code:
       0: aload_2
       1: new           #24                 // class io/lettuce/core/ConnectionEvents$PingBeforeActivate
       4: dup
       5: aload_0
       6: invokespecial #25                 // Method io/lettuce/core/ConnectionEvents$PingBeforeActivate."<init>":(Lio/lettuce/core/protocol/RedisCommand;)V
       9: invokeinterface #26,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
      14: pop
      15: aload_0
      16: aload_1
      17: aload         4
      19: invokedynamic #27,  0             // InvokeDynamic #0:run:(Lio/lettuce/core/protocol/AsyncCommand;Ljava/util/concurrent/CompletableFuture;Ljava/time/Duration;)Ljava/lang/Runnable;
      24: astore        5
      26: aload_3
      27: invokeinterface #28,  1           // InterfaceMethod io/lettuce/core/resource/ClientResources.timer:()Lio/netty/util/Timer;
      32: aload_3
      33: aload         5
      35: invokedynamic #29,  0             // InvokeDynamic #1:run:(Lio/lettuce/core/resource/ClientResources;Ljava/lang/Runnable;)Lio/netty/util/TimerTask;
      40: aload         4
      42: invokevirtual #30                 // Method java/time/Duration.toNanos:()J
      45: getstatic     #31                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      48: invokeinterface #32,  5           // InterfaceMethod io/netty/util/Timer.newTimeout:(Lio/netty/util/TimerTask;JLjava/util/concurrent/TimeUnit;)Lio/netty/util/Timeout;
      53: astore        6
      55: aload_0
      56: aload         6
      58: aload_2
      59: aload_1
      60: invokedynamic #33,  0             // InvokeDynamic #2:accept:(Lio/netty/util/Timeout;Lio/netty/channel/ChannelHandlerContext;Ljava/util/concurrent/CompletableFuture;)Ljava/util/function/BiConsumer;
      65: invokevirtual #34                 // Method io/lettuce/core/protocol/AsyncCommand.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
      68: pop
      69: return

  public java.util.concurrent.CompletableFuture<java.lang.Boolean> channelInitialized();
    Code:
       0: aload_0
       1: getfield      #4                  // Field initializedFuture:Ljava/util/concurrent/CompletableFuture;
       4: areturn

  private static void lambda$pingBeforeActivate$3(io.netty.util.Timeout, io.netty.channel.ChannelHandlerContext, java.util.concurrent.CompletableFuture, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokeinterface #35,  1           // InterfaceMethod io/netty/util/Timeout.cancel:()Z
       6: pop
       7: aload         4
       9: ifnonnull     31
      12: aload_1
      13: invokeinterface #36,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelActive:()Lio/netty/channel/ChannelHandlerContext;
      18: pop
      19: aload_2
      20: iconst_1
      21: invokestatic  #37                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      24: invokevirtual #38                 // Method java/util/concurrent/CompletableFuture.complete:(Ljava/lang/Object;)Z
      27: pop
      28: goto          38
      31: aload_2
      32: aload         4
      34: invokevirtual #39                 // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
      37: pop
      38: return

  private static void lambda$pingBeforeActivate$2(io.lettuce.core.resource.ClientResources, java.lang.Runnable, io.netty.util.Timeout) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokeinterface #40,  1           // InterfaceMethod io/lettuce/core/resource/ClientResources.eventExecutorGroup:()Lio/netty/util/concurrent/EventExecutorGroup;
       6: invokeinterface #41,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutorGroup.isShuttingDown:()Z
      11: ifeq          21
      14: aload_1
      15: invokeinterface #42,  1           // InterfaceMethod java/lang/Runnable.run:()V
      20: return
      21: aload_0
      22: invokeinterface #40,  1           // InterfaceMethod io/lettuce/core/resource/ClientResources.eventExecutorGroup:()Lio/netty/util/concurrent/EventExecutorGroup;
      27: aload_1
      28: invokeinterface #43,  2           // InterfaceMethod io/netty/util/concurrent/EventExecutorGroup.submit:(Ljava/lang/Runnable;)Lio/netty/util/concurrent/Future;
      33: pop
      34: return

  private static void lambda$pingBeforeActivate$1(io.lettuce.core.protocol.AsyncCommand, java.util.concurrent.CompletableFuture, java.time.Duration);
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method io/lettuce/core/protocol/AsyncCommand.isDone:()Z
       4: ifne          14
       7: aload_1
       8: invokevirtual #45                 // Method java/util/concurrent/CompletableFuture.isDone:()Z
      11: ifeq          15
      14: return
      15: aload_1
      16: new           #46                 // class io/lettuce/core/RedisCommandTimeoutException
      19: dup
      20: ldc           #47                 // String Cannot initialize channel (PING before activate) within %s
      22: iconst_1
      23: anewarray     #48                 // class java/lang/Object
      26: dup
      27: iconst_0
      28: aload_2
      29: aastore
      30: invokestatic  #49                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      33: invokespecial #50                 // Method io/lettuce/core/RedisCommandTimeoutException."<init>":(Ljava/lang/String;)V
      36: invokevirtual #39                 // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
      39: pop
      40: return

  private static io.lettuce.core.protocol.AsyncCommand lambda$static$0();
    Code:
       0: aconst_null
       1: areturn

  static java.util.concurrent.CompletableFuture access$000(io.lettuce.core.PlainChannelInitializer);
    Code:
       0: aload_0
       1: getfield      #4                  // Field initializedFuture:Ljava/util/concurrent/CompletableFuture;
       4: areturn

  static io.lettuce.core.resource.ClientResources access$100(io.lettuce.core.PlainChannelInitializer);
    Code:
       0: aload_0
       1: getfield      #3                  // Field clientResources:Lio/lettuce/core/resource/ClientResources;
       4: areturn

  static java.util.concurrent.CompletableFuture access$002(io.lettuce.core.PlainChannelInitializer, java.util.concurrent.CompletableFuture);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #4                  // Field initializedFuture:Ljava/util/concurrent/CompletableFuture;
       6: areturn

  static java.util.function.Supplier access$200(io.lettuce.core.PlainChannelInitializer);
    Code:
       0: aload_0
       1: getfield      #2                  // Field pingCommandSupplier:Ljava/util/function/Supplier;
       4: areturn

  static java.time.Duration access$300(io.lettuce.core.PlainChannelInitializer);
    Code:
       0: aload_0
       1: getfield      #1                  // Field timeout:Ljava/time/Duration;
       4: areturn

  static {};
    Code:
       0: invokedynamic #51,  0             // InvokeDynamic #3:get:()Ljava/util/function/Supplier;
       5: putstatic     #52                 // Field NO_PING:Ljava/util/function/Supplier;
       8: return
}
