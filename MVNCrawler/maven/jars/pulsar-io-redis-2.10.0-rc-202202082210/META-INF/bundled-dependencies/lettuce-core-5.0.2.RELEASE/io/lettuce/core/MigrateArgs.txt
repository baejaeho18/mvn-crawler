Compiled from "MigrateArgs.java"
public class io.lettuce.core.MigrateArgs<K> implements io.lettuce.core.CompositeArgument {
  private boolean copy;

  private boolean replace;

  java.util.List<K> keys;

  public io.lettuce.core.MigrateArgs();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field copy:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field replace:Z
      14: aload_0
      15: new           #4                  // class java/util/ArrayList
      18: dup
      19: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      22: putfield      #6                  // Field keys:Ljava/util/List;
      25: return

  public io.lettuce.core.MigrateArgs<K> copy();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #2                  // Field copy:Z
       5: aload_0
       6: areturn

  public io.lettuce.core.MigrateArgs<K> replace();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #3                  // Field replace:Z
       5: aload_0
       6: areturn

  public io.lettuce.core.MigrateArgs<K> key(K);
    Code:
       0: aload_1
       1: ldc           #7                  // String Key must not be null
       3: invokestatic  #8                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #6                  // Field keys:Ljava/util/List;
      10: aload_1
      11: invokeinterface #9,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      16: pop
      17: aload_0
      18: areturn

  public final io.lettuce.core.MigrateArgs<K> keys(K...);
    Code:
       0: aload_1
       1: ldc           #10                 // String Keys must not be empty
       3: invokestatic  #11                 // Method io/lettuce/core/internal/LettuceAssert.notEmpty:([Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: astore_2
       8: aload_2
       9: arraylength
      10: istore_3
      11: iconst_0
      12: istore        4
      14: iload         4
      16: iload_3
      17: if_icmpge     44
      20: aload_2
      21: iload         4
      23: aaload
      24: astore        5
      26: aload_0
      27: getfield      #6                  // Field keys:Ljava/util/List;
      30: aload         5
      32: invokeinterface #9,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      37: pop
      38: iinc          4, 1
      41: goto          14
      44: aload_0
      45: areturn

  public io.lettuce.core.MigrateArgs<K> keys(java.lang.Iterable<K>);
    Code:
       0: aload_1
       1: ldc           #12                 // String Keys must not be null
       3: invokestatic  #8                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokeinterface #13,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      12: astore_2
      13: aload_2
      14: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          43
      22: aload_2
      23: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: astore_3
      29: aload_0
      30: getfield      #6                  // Field keys:Ljava/util/List;
      33: aload_3
      34: invokeinterface #9,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      39: pop
      40: goto          13
      43: aload_0
      44: areturn

  public <K, V> void build(io.lettuce.core.protocol.CommandArgs<K, V>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field copy:Z
       4: ifeq          15
       7: aload_1
       8: getstatic     #16                 // Field io/lettuce/core/protocol/CommandKeyword.COPY:Lio/lettuce/core/protocol/CommandKeyword;
      11: invokevirtual #17                 // Method io/lettuce/core/protocol/CommandArgs.add:(Lio/lettuce/core/protocol/CommandKeyword;)Lio/lettuce/core/protocol/CommandArgs;
      14: pop
      15: aload_0
      16: getfield      #3                  // Field replace:Z
      19: ifeq          30
      22: aload_1
      23: getstatic     #18                 // Field io/lettuce/core/protocol/CommandKeyword.REPLACE:Lio/lettuce/core/protocol/CommandKeyword;
      26: invokevirtual #17                 // Method io/lettuce/core/protocol/CommandArgs.add:(Lio/lettuce/core/protocol/CommandKeyword;)Lio/lettuce/core/protocol/CommandArgs;
      29: pop
      30: aload_0
      31: getfield      #6                  // Field keys:Ljava/util/List;
      34: invokeinterface #19,  1           // InterfaceMethod java/util/List.size:()I
      39: iconst_1
      40: if_icmple     60
      43: aload_1
      44: getstatic     #20                 // Field io/lettuce/core/protocol/CommandType.KEYS:Lio/lettuce/core/protocol/CommandType;
      47: invokevirtual #21                 // Method io/lettuce/core/protocol/CommandArgs.add:(Lio/lettuce/core/protocol/CommandType;)Lio/lettuce/core/protocol/CommandArgs;
      50: pop
      51: aload_1
      52: aload_0
      53: getfield      #6                  // Field keys:Ljava/util/List;
      56: invokevirtual #22                 // Method io/lettuce/core/protocol/CommandArgs.addKeys:(Ljava/lang/Iterable;)Lio/lettuce/core/protocol/CommandArgs;
      59: pop
      60: return
}
