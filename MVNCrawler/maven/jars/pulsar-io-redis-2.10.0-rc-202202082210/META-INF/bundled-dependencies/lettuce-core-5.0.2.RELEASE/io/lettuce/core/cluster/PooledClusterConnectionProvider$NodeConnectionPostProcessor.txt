Compiled from "PooledClusterConnectionProvider.java"
class io.lettuce.core.cluster.PooledClusterConnectionProvider$NodeConnectionPostProcessor implements io.lettuce.core.cluster.ClusterNodeConnectionFactory<K, V> {
  private final io.lettuce.core.cluster.ClusterNodeConnectionFactory<K, V> delegate;

  final io.lettuce.core.cluster.PooledClusterConnectionProvider this$0;

  public io.lettuce.core.cluster.PooledClusterConnectionProvider$NodeConnectionPostProcessor(io.lettuce.core.cluster.ClusterNodeConnectionFactory<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/lettuce/core/cluster/PooledClusterConnectionProvider;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field delegate:Lio/lettuce/core/cluster/ClusterNodeConnectionFactory;
      14: return

  public void setPartitions(io.lettuce.core.cluster.models.partitions.Partitions);
    Code:
       0: aload_0
       1: getfield      #3                  // Field delegate:Lio/lettuce/core/cluster/ClusterNodeConnectionFactory;
       4: aload_1
       5: invokeinterface #4,  2            // InterfaceMethod io/lettuce/core/cluster/ClusterNodeConnectionFactory.setPartitions:(Lio/lettuce/core/cluster/models/partitions/Partitions;)V
      10: return

  public io.lettuce.core.ConnectionFuture<io.lettuce.core.api.StatefulRedisConnection<K, V>> apply(io.lettuce.core.cluster.ClusterNodeConnectionFactory$ConnectionKey);
    Code:
       0: aload_1
       1: getfield      #5                  // Field io/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey.nodeId:Ljava/lang/String;
       4: ifnull        50
       7: aload_0
       8: getfield      #1                  // Field this$0:Lio/lettuce/core/cluster/PooledClusterConnectionProvider;
      11: invokevirtual #6                  // Method io/lettuce/core/cluster/PooledClusterConnectionProvider.getPartitions:()Lio/lettuce/core/cluster/models/partitions/Partitions;
      14: aload_1
      15: getfield      #5                  // Field io/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey.nodeId:Ljava/lang/String;
      18: invokevirtual #7                  // Method io/lettuce/core/cluster/models/partitions/Partitions.getPartitionByNodeId:(Ljava/lang/String;)Lio/lettuce/core/cluster/models/partitions/RedisClusterNode;
      21: ifnonnull     50
      24: new           #8                  // class java/lang/StringBuilder
      27: dup
      28: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #10                 // String node id
      33: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_1
      37: getfield      #5                  // Field io/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey.nodeId:Ljava/lang/String;
      40: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokestatic  #13                 // Method io/lettuce/core/cluster/PooledClusterConnectionProvider.access$000:(Ljava/lang/String;)Ljava/lang/RuntimeException;
      49: athrow
      50: aload_1
      51: getfield      #14                 // Field io/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey.host:Ljava/lang/String;
      54: ifnull        118
      57: aload_0
      58: getfield      #1                  // Field this$0:Lio/lettuce/core/cluster/PooledClusterConnectionProvider;
      61: invokevirtual #15                 // Method io/lettuce/core/cluster/PooledClusterConnectionProvider.validateClusterNodeMembership:()Z
      64: ifeq          118
      67: aload_0
      68: getfield      #1                  // Field this$0:Lio/lettuce/core/cluster/PooledClusterConnectionProvider;
      71: aload_1
      72: getfield      #14                 // Field io/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey.host:Ljava/lang/String;
      75: aload_1
      76: getfield      #16                 // Field io/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey.port:I
      79: invokevirtual #17                 // Method io/lettuce/core/cluster/PooledClusterConnectionProvider.getPartition:(Ljava/lang/String;I)Lio/lettuce/core/cluster/models/partitions/RedisClusterNode;
      82: ifnonnull     118
      85: new           #8                  // class java/lang/StringBuilder
      88: dup
      89: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      92: aload_1
      93: getfield      #14                 // Field io/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey.host:Ljava/lang/String;
      96: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: ldc           #18                 // String :
     101: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: aload_1
     105: getfield      #16                 // Field io/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey.port:I
     108: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     111: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     114: invokestatic  #13                 // Method io/lettuce/core/cluster/PooledClusterConnectionProvider.access$000:(Ljava/lang/String;)Ljava/lang/RuntimeException;
     117: athrow
     118: aload_0
     119: getfield      #3                  // Field delegate:Lio/lettuce/core/cluster/ClusterNodeConnectionFactory;
     122: aload_1
     123: invokeinterface #20,  2           // InterfaceMethod io/lettuce/core/cluster/ClusterNodeConnectionFactory.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     128: checkcast     #21                 // class io/lettuce/core/ConnectionFuture
     131: astore_2
     132: aload_2
     133: ldc           #22                 // String Connection is null. Check ConnectionKey because host and nodeId are null.
     135: invokestatic  #23                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
     138: aload_1
     139: getfield      #24                 // Field io/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey.intent:Lio/lettuce/core/cluster/ClusterConnectionProvider$Intent;
     142: getstatic     #25                 // Field io/lettuce/core/cluster/ClusterConnectionProvider$Intent.READ:Lio/lettuce/core/cluster/ClusterConnectionProvider$Intent;
     145: if_acmpne     160
     148: aload_2
     149: invokedynamic #26,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
     154: invokeinterface #27,  2           // InterfaceMethod io/lettuce/core/ConnectionFuture.thenCompose:(Ljava/util/function/Function;)Lio/lettuce/core/ConnectionFuture;
     159: astore_2
     160: aload_2
     161: aload_0
     162: invokedynamic #28,  0             // InvokeDynamic #1:apply:(Lio/lettuce/core/cluster/PooledClusterConnectionProvider$NodeConnectionPostProcessor;)Ljava/util/function/Function;
     167: invokeinterface #29,  2           // InterfaceMethod io/lettuce/core/ConnectionFuture.thenApply:(Ljava/util/function/Function;)Lio/lettuce/core/ConnectionFuture;
     172: astore_2
     173: aload_2
     174: areturn

  public java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #30                 // class io/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey
       5: invokevirtual #31                 // Method apply:(Lio/lettuce/core/cluster/ClusterNodeConnectionFactory$ConnectionKey;)Lio/lettuce/core/ConnectionFuture;
       8: areturn

  private io.lettuce.core.api.StatefulRedisConnection lambda$apply$3(io.lettuce.core.api.StatefulRedisConnection);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/lettuce/core/cluster/PooledClusterConnectionProvider;
       4: invokestatic  #32                 // Method io/lettuce/core/cluster/PooledClusterConnectionProvider.access$100:(Lio/lettuce/core/cluster/PooledClusterConnectionProvider;)Ljava/lang/Object;
       7: dup
       8: astore_2
       9: monitorenter
      10: aload_1
      11: aload_0
      12: getfield      #1                  // Field this$0:Lio/lettuce/core/cluster/PooledClusterConnectionProvider;
      15: invokestatic  #33                 // Method io/lettuce/core/cluster/PooledClusterConnectionProvider.access$200:(Lio/lettuce/core/cluster/PooledClusterConnectionProvider;)Z
      18: invokeinterface #34,  2           // InterfaceMethod io/lettuce/core/api/StatefulRedisConnection.setAutoFlushCommands:(Z)V
      23: aload_2
      24: monitorexit
      25: goto          33
      28: astore_3
      29: aload_2
      30: monitorexit
      31: aload_3
      32: athrow
      33: aload_1
      34: areturn
    Exception table:
       from    to  target type
          10    25    28   any
          28    31    28   any

  private static java.util.concurrent.CompletionStage lambda$apply$2(io.lettuce.core.api.StatefulRedisConnection);
    Code:
       0: aload_0
       1: invokeinterface #35,  1           // InterfaceMethod io/lettuce/core/api/StatefulRedisConnection.async:()Lio/lettuce/core/api/async/RedisAsyncCommands;
       6: invokeinterface #36,  1           // InterfaceMethod io/lettuce/core/api/async/RedisAsyncCommands.readOnly:()Lio/lettuce/core/RedisFuture;
      11: astore_1
      12: aload_1
      13: aload_0
      14: invokedynamic #37,  0             // InvokeDynamic #2:apply:(Lio/lettuce/core/api/StatefulRedisConnection;)Ljava/util/function/Function;
      19: invokeinterface #38,  2           // InterfaceMethod io/lettuce/core/RedisFuture.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletionStage;
      24: aload_0
      25: invokedynamic #39,  0             // InvokeDynamic #3:accept:(Lio/lettuce/core/api/StatefulRedisConnection;)Ljava/util/function/BiConsumer;
      30: invokeinterface #40,  2           // InterfaceMethod java/util/concurrent/CompletionStage.whenCompleteAsync:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletionStage;
      35: areturn

  private static void lambda$null$1(io.lettuce.core.api.StatefulRedisConnection, io.lettuce.core.api.StatefulRedisConnection, java.lang.Throwable);
    Code:
       0: aload_2
       1: ifnull        10
       4: aload_0
       5: invokeinterface #41,  1           // InterfaceMethod io/lettuce/core/api/StatefulRedisConnection.close:()V
      10: return

  private static io.lettuce.core.api.StatefulRedisConnection lambda$null$0(io.lettuce.core.api.StatefulRedisConnection, java.lang.String);
    Code:
       0: aload_0
       1: areturn
}
