Compiled from "ConnectionPoolSupport.java"
public abstract class io.lettuce.core.support.ConnectionPoolSupport {
  private io.lettuce.core.support.ConnectionPoolSupport();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static <T extends io.lettuce.core.api.StatefulConnection<?, ?>> org.apache.commons.pool2.impl.GenericObjectPool<T> createGenericObjectPool(java.util.function.Supplier<T>, org.apache.commons.pool2.impl.GenericObjectPoolConfig);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokestatic  #3                  // Method createGenericObjectPool:(Ljava/util/function/Supplier;Lorg/apache/commons/pool2/impl/GenericObjectPoolConfig;Z)Lorg/apache/commons/pool2/impl/GenericObjectPool;
       6: areturn

  public static <T extends io.lettuce.core.api.StatefulConnection<?, ?>> org.apache.commons.pool2.impl.GenericObjectPool<T> createGenericObjectPool(java.util.function.Supplier<T>, org.apache.commons.pool2.impl.GenericObjectPoolConfig, boolean);
    Code:
       0: aload_0
       1: ldc           #4                  // String Connection supplier must not be null
       3: invokestatic  #5                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #6                  // String GenericObjectPoolConfig must not be null
       9: invokestatic  #5                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: new           #7                  // class java/util/concurrent/atomic/AtomicReference
      15: dup
      16: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      19: astore_3
      20: new           #9                  // class io/lettuce/core/support/ConnectionPoolSupport$1
      23: dup
      24: new           #10                 // class io/lettuce/core/support/ConnectionPoolSupport$RedisPooledObjectFactory
      27: dup
      28: aload_0
      29: invokespecial #11                 // Method io/lettuce/core/support/ConnectionPoolSupport$RedisPooledObjectFactory."<init>":(Ljava/util/function/Supplier;)V
      32: aload_1
      33: iload_2
      34: invokespecial #12                 // Method io/lettuce/core/support/ConnectionPoolSupport$1."<init>":(Lorg/apache/commons/pool2/PooledObjectFactory;Lorg/apache/commons/pool2/impl/GenericObjectPoolConfig;Z)V
      37: astore        4
      39: aload_3
      40: aload         4
      42: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      45: aload         4
      47: areturn

  public static <T extends io.lettuce.core.api.StatefulConnection<?, ?>> org.apache.commons.pool2.impl.SoftReferenceObjectPool<T> createSoftReferenceObjectPool(java.util.function.Supplier<T>);
    Code:
       0: aload_0
       1: iconst_1
       2: invokestatic  #14                 // Method createSoftReferenceObjectPool:(Ljava/util/function/Supplier;Z)Lorg/apache/commons/pool2/impl/SoftReferenceObjectPool;
       5: areturn

  public static <T extends io.lettuce.core.api.StatefulConnection<?, ?>> org.apache.commons.pool2.impl.SoftReferenceObjectPool<T> createSoftReferenceObjectPool(java.util.function.Supplier<T>, boolean);
    Code:
       0: aload_0
       1: ldc           #4                  // String Connection supplier must not be null
       3: invokestatic  #5                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #7                  // class java/util/concurrent/atomic/AtomicReference
       9: dup
      10: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      13: astore_2
      14: new           #15                 // class io/lettuce/core/support/ConnectionPoolSupport$2
      17: dup
      18: new           #10                 // class io/lettuce/core/support/ConnectionPoolSupport$RedisPooledObjectFactory
      21: dup
      22: aload_0
      23: invokespecial #11                 // Method io/lettuce/core/support/ConnectionPoolSupport$RedisPooledObjectFactory."<init>":(Ljava/util/function/Supplier;)V
      26: iload_1
      27: invokespecial #16                 // Method io/lettuce/core/support/ConnectionPoolSupport$2."<init>":(Lorg/apache/commons/pool2/PooledObjectFactory;Z)V
      30: astore_3
      31: aload_2
      32: aload_3
      33: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      36: aload_3
      37: areturn

  private static <T> T wrapConnection(T, org.apache.commons.pool2.ObjectPool<T>);
    Code:
       0: new           #17                 // class io/lettuce/core/support/ConnectionPoolSupport$ReturnObjectOnCloseInvocationHandler
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #18                 // Method io/lettuce/core/support/ConnectionPoolSupport$ReturnObjectOnCloseInvocationHandler."<init>":(Ljava/lang/Object;Lorg/apache/commons/pool2/ObjectPool;)V
       9: astore_2
      10: aload_0
      11: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: invokevirtual #20                 // Method java/lang/Class.getInterfaces:()[Ljava/lang/Class;
      17: astore_3
      18: aload_3
      19: arraylength
      20: iconst_1
      21: iadd
      22: anewarray     #21                 // class java/lang/Class
      25: astore        4
      27: aload         4
      29: iconst_0
      30: ldc           #22                 // class io/lettuce/core/support/ConnectionPoolSupport$HasTargetConnection
      32: aastore
      33: aload_3
      34: iconst_0
      35: aload         4
      37: iconst_1
      38: aload_3
      39: arraylength
      40: invokestatic  #23                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      43: aload_0
      44: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      47: invokevirtual #24                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      50: aload         4
      52: aload_2
      53: invokestatic  #25                 // Method java/lang/reflect/Proxy.newProxyInstance:(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;
      56: astore        5
      58: aload_2
      59: aload         5
      61: invokevirtual #26                 // Method io/lettuce/core/support/ConnectionPoolSupport$ReturnObjectOnCloseInvocationHandler.setProxiedConnection:(Ljava/lang/Object;)V
      64: aload         5
      66: areturn

  static java.lang.Object access$000(java.lang.Object, org.apache.commons.pool2.ObjectPool);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method wrapConnection:(Ljava/lang/Object;Lorg/apache/commons/pool2/ObjectPool;)Ljava/lang/Object;
       5: areturn
}
