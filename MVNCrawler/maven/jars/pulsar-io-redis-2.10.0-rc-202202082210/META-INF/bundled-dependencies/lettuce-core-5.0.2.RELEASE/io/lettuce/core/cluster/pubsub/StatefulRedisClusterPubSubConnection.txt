Compiled from "StatefulRedisClusterPubSubConnection.java"
public interface io.lettuce.core.cluster.pubsub.StatefulRedisClusterPubSubConnection<K, V> extends io.lettuce.core.pubsub.StatefulRedisPubSubConnection<K, V> {
  public abstract io.lettuce.core.cluster.pubsub.api.sync.RedisClusterPubSubCommands<K, V> sync();

  public abstract io.lettuce.core.cluster.pubsub.api.async.RedisClusterPubSubAsyncCommands<K, V> async();

  public abstract io.lettuce.core.cluster.pubsub.api.reactive.RedisClusterPubSubReactiveCommands<K, V> reactive();

  public abstract io.lettuce.core.pubsub.StatefulRedisPubSubConnection<K, V> getConnection(java.lang.String);

  public abstract java.util.concurrent.CompletableFuture<io.lettuce.core.pubsub.StatefulRedisPubSubConnection<K, V>> getConnectionAsync(java.lang.String);

  public abstract io.lettuce.core.pubsub.StatefulRedisPubSubConnection<K, V> getConnection(java.lang.String, int);

  public abstract java.util.concurrent.CompletableFuture<io.lettuce.core.pubsub.StatefulRedisPubSubConnection<K, V>> getConnectionAsync(java.lang.String, int);

  public abstract io.lettuce.core.cluster.models.partitions.Partitions getPartitions();

  public abstract void setNodeMessagePropagation(boolean);

  public abstract void addListener(io.lettuce.core.cluster.pubsub.RedisClusterPubSubListener<K, V>);

  public abstract void removeListener(io.lettuce.core.cluster.pubsub.RedisClusterPubSubListener<K, V>);

  public default io.lettuce.core.pubsub.api.reactive.RedisPubSubReactiveCommands reactive();
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod reactive:()Lio/lettuce/core/cluster/pubsub/api/reactive/RedisClusterPubSubReactiveCommands;
       6: areturn

  public default io.lettuce.core.pubsub.api.async.RedisPubSubAsyncCommands async();
    Code:
       0: aload_0
       1: invokeinterface #2,  1            // InterfaceMethod async:()Lio/lettuce/core/cluster/pubsub/api/async/RedisClusterPubSubAsyncCommands;
       6: areturn

  public default io.lettuce.core.pubsub.api.sync.RedisPubSubCommands sync();
    Code:
       0: aload_0
       1: invokeinterface #3,  1            // InterfaceMethod sync:()Lio/lettuce/core/cluster/pubsub/api/sync/RedisClusterPubSubCommands;
       6: areturn

  public default io.lettuce.core.api.reactive.RedisReactiveCommands reactive();
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod reactive:()Lio/lettuce/core/cluster/pubsub/api/reactive/RedisClusterPubSubReactiveCommands;
       6: areturn

  public default io.lettuce.core.api.async.RedisAsyncCommands async();
    Code:
       0: aload_0
       1: invokeinterface #2,  1            // InterfaceMethod async:()Lio/lettuce/core/cluster/pubsub/api/async/RedisClusterPubSubAsyncCommands;
       6: areturn

  public default io.lettuce.core.api.sync.RedisCommands sync();
    Code:
       0: aload_0
       1: invokeinterface #3,  1            // InterfaceMethod sync:()Lio/lettuce/core/cluster/pubsub/api/sync/RedisClusterPubSubCommands;
       6: areturn
}
