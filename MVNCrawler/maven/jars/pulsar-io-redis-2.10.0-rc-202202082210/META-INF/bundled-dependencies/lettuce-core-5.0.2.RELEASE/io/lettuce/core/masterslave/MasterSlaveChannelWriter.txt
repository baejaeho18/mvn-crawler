Compiled from "MasterSlaveChannelWriter.java"
class io.lettuce.core.masterslave.MasterSlaveChannelWriter<K, V> implements io.lettuce.core.RedisChannelWriter {
  private io.lettuce.core.masterslave.MasterSlaveConnectionProvider<K, V> masterSlaveConnectionProvider;

  private boolean closed;

  public io.lettuce.core.masterslave.MasterSlaveChannelWriter(io.lettuce.core.masterslave.MasterSlaveConnectionProvider<K, V>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field closed:Z
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field masterSlaveConnectionProvider:Lio/lettuce/core/masterslave/MasterSlaveConnectionProvider;
      14: return

  public <K, V, T> io.lettuce.core.protocol.RedisCommand<K, V, T> write(io.lettuce.core.protocol.RedisCommand<K, V, T>);
    Code:
       0: aload_1
       1: ldc           #4                  // String Command must not be null
       3: invokestatic  #5                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #2                  // Field closed:Z
      10: ifeq          23
      13: new           #6                  // class io/lettuce/core/RedisException
      16: dup
      17: ldc           #7                  // String Connection is closed
      19: invokespecial #8                  // Method io/lettuce/core/RedisException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_1
      24: invokeinterface #9,  1            // InterfaceMethod io/lettuce/core/protocol/RedisCommand.getType:()Lio/lettuce/core/protocol/ProtocolKeyword;
      29: invokestatic  #10                 // Method getIntent:(Lio/lettuce/core/protocol/ProtocolKeyword;)Lio/lettuce/core/masterslave/MasterSlaveConnectionProvider$Intent;
      32: astore_2
      33: aload_0
      34: getfield      #3                  // Field masterSlaveConnectionProvider:Lio/lettuce/core/masterslave/MasterSlaveConnectionProvider;
      37: aload_2
      38: invokevirtual #11                 // Method io/lettuce/core/masterslave/MasterSlaveConnectionProvider.getConnection:(Lio/lettuce/core/masterslave/MasterSlaveConnectionProvider$Intent;)Lio/lettuce/core/api/StatefulRedisConnection;
      41: astore_3
      42: aload_3
      43: aload_1
      44: invokeinterface #12,  2           // InterfaceMethod io/lettuce/core/api/StatefulRedisConnection.dispatch:(Lio/lettuce/core/protocol/RedisCommand;)Lio/lettuce/core/protocol/RedisCommand;
      49: areturn

  public <K, V> java.util.Collection<io.lettuce.core.protocol.RedisCommand<K, V, ?>> write(java.util.Collection<? extends io.lettuce.core.protocol.RedisCommand<K, V, ?>>);
    Code:
       0: aload_1
       1: ldc           #13                 // String Commands must not be null
       3: invokestatic  #5                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #2                  // Field closed:Z
      10: ifeq          23
      13: new           #6                  // class io/lettuce/core/RedisException
      16: dup
      17: ldc           #7                  // String Connection is closed
      19: invokespecial #8                  // Method io/lettuce/core/RedisException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_1
      24: invokestatic  #14                 // Method getIntent:(Ljava/util/Collection;)Lio/lettuce/core/masterslave/MasterSlaveConnectionProvider$Intent;
      27: astore_2
      28: aload_0
      29: getfield      #3                  // Field masterSlaveConnectionProvider:Lio/lettuce/core/masterslave/MasterSlaveConnectionProvider;
      32: aload_2
      33: invokevirtual #11                 // Method io/lettuce/core/masterslave/MasterSlaveConnectionProvider.getConnection:(Lio/lettuce/core/masterslave/MasterSlaveConnectionProvider$Intent;)Lio/lettuce/core/api/StatefulRedisConnection;
      36: astore_3
      37: aload_3
      38: aload_1
      39: invokeinterface #15,  2           // InterfaceMethod io/lettuce/core/api/StatefulRedisConnection.dispatch:(Ljava/util/Collection;)Ljava/util/Collection;
      44: areturn

  static io.lettuce.core.masterslave.MasterSlaveConnectionProvider$Intent getIntent(java.util.Collection<? extends io.lettuce.core.protocol.RedisCommand<?, ?, ?>>);
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: getstatic     #16                 // Field io/lettuce/core/masterslave/MasterSlaveConnectionProvider$Intent.WRITE:Lio/lettuce/core/masterslave/MasterSlaveConnectionProvider$Intent;
       7: astore_3
       8: aload_0
       9: invokeinterface #17,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore        4
      16: aload         4
      18: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          82
      26: aload         4
      28: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #20                 // class io/lettuce/core/protocol/RedisCommand
      36: astore        5
      38: aload         5
      40: invokeinterface #9,  1            // InterfaceMethod io/lettuce/core/protocol/RedisCommand.getType:()Lio/lettuce/core/protocol/ProtocolKeyword;
      45: invokestatic  #10                 // Method getIntent:(Lio/lettuce/core/protocol/ProtocolKeyword;)Lio/lettuce/core/masterslave/MasterSlaveConnectionProvider$Intent;
      48: astore_3
      49: aload_3
      50: getstatic     #21                 // Field io/lettuce/core/masterslave/MasterSlaveConnectionProvider$Intent.READ:Lio/lettuce/core/masterslave/MasterSlaveConnectionProvider$Intent;
      53: if_acmpne     58
      56: iconst_1
      57: istore_2
      58: aload_3
      59: getstatic     #16                 // Field io/lettuce/core/masterslave/MasterSlaveConnectionProvider$Intent.WRITE:Lio/lettuce/core/masterslave/MasterSlaveConnectionProvider$Intent;
      62: if_acmpne     67
      65: iconst_1
      66: istore_1
      67: iload_2
      68: ifeq          79
      71: iload_1
      72: ifeq          79
      75: getstatic     #16                 // Field io/lettuce/core/masterslave/MasterSlaveConnectionProvider$Intent.WRITE:Lio/lettuce/core/masterslave/MasterSlaveConnectionProvider$Intent;
      78: areturn
      79: goto          16
      82: aload_3
      83: areturn

  private static io.lettuce.core.masterslave.MasterSlaveConnectionProvider$Intent getIntent(io.lettuce.core.protocol.ProtocolKeyword);
    Code:
       0: aload_0
       1: invokestatic  #22                 // Method io/lettuce/core/masterslave/ReadOnlyCommands.isReadOnlyCommand:(Lio/lettuce/core/protocol/ProtocolKeyword;)Z
       4: ifeq          13
       7: getstatic     #21                 // Field io/lettuce/core/masterslave/MasterSlaveConnectionProvider$Intent.READ:Lio/lettuce/core/masterslave/MasterSlaveConnectionProvider$Intent;
      10: goto          16
      13: getstatic     #16                 // Field io/lettuce/core/masterslave/MasterSlaveConnectionProvider$Intent.WRITE:Lio/lettuce/core/masterslave/MasterSlaveConnectionProvider$Intent;
      16: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #2                  // Field closed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #2                  // Field closed:Z
      13: aload_0
      14: getfield      #3                  // Field masterSlaveConnectionProvider:Lio/lettuce/core/masterslave/MasterSlaveConnectionProvider;
      17: ifnull        32
      20: aload_0
      21: getfield      #3                  // Field masterSlaveConnectionProvider:Lio/lettuce/core/masterslave/MasterSlaveConnectionProvider;
      24: invokevirtual #23                 // Method io/lettuce/core/masterslave/MasterSlaveConnectionProvider.close:()V
      27: aload_0
      28: aconst_null
      29: putfield      #3                  // Field masterSlaveConnectionProvider:Lio/lettuce/core/masterslave/MasterSlaveConnectionProvider;
      32: return

  public io.lettuce.core.masterslave.MasterSlaveConnectionProvider<K, V> getMasterSlaveConnectionProvider();
    Code:
       0: aload_0
       1: getfield      #3                  // Field masterSlaveConnectionProvider:Lio/lettuce/core/masterslave/MasterSlaveConnectionProvider;
       4: areturn

  public void setConnectionFacade(io.lettuce.core.protocol.ConnectionFacade);
    Code:
       0: return

  public void setAutoFlushCommands(boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field masterSlaveConnectionProvider:Lio/lettuce/core/masterslave/MasterSlaveConnectionProvider;
       4: iload_1
       5: invokevirtual #24                 // Method io/lettuce/core/masterslave/MasterSlaveConnectionProvider.setAutoFlushCommands:(Z)V
       8: return

  public void flushCommands();
    Code:
       0: aload_0
       1: getfield      #3                  // Field masterSlaveConnectionProvider:Lio/lettuce/core/masterslave/MasterSlaveConnectionProvider;
       4: invokevirtual #25                 // Method io/lettuce/core/masterslave/MasterSlaveConnectionProvider.flushCommands:()V
       7: return

  public void reset();
    Code:
       0: aload_0
       1: getfield      #3                  // Field masterSlaveConnectionProvider:Lio/lettuce/core/masterslave/MasterSlaveConnectionProvider;
       4: invokevirtual #26                 // Method io/lettuce/core/masterslave/MasterSlaveConnectionProvider.reset:()V
       7: return

  public void setReadFrom(io.lettuce.core.ReadFrom);
    Code:
       0: aload_0
       1: getfield      #3                  // Field masterSlaveConnectionProvider:Lio/lettuce/core/masterslave/MasterSlaveConnectionProvider;
       4: aload_1
       5: invokevirtual #27                 // Method io/lettuce/core/masterslave/MasterSlaveConnectionProvider.setReadFrom:(Lio/lettuce/core/ReadFrom;)V
       8: return

  public io.lettuce.core.ReadFrom getReadFrom();
    Code:
       0: aload_0
       1: getfield      #3                  // Field masterSlaveConnectionProvider:Lio/lettuce/core/masterslave/MasterSlaveConnectionProvider;
       4: invokevirtual #28                 // Method io/lettuce/core/masterslave/MasterSlaveConnectionProvider.getReadFrom:()Lio/lettuce/core/ReadFrom;
       7: areturn
}
