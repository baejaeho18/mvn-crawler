Compiled from "LettuceSets.java"
public final class io.lettuce.core.internal.LettuceSets {
  private io.lettuce.core.internal.LettuceSets();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <T> java.util.Set<T> newHashSet(java.util.Collection<? extends T>);
    Code:
       0: aload_0
       1: ldc           #2                  // String Collection must not be null
       3: invokestatic  #3                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #4                  // class java/util/HashSet
       9: dup
      10: aload_0
      11: invokeinterface #5,  1            // InterfaceMethod java/util/Collection.size:()I
      16: invokespecial #6                  // Method java/util/HashSet."<init>":(I)V
      19: astore_1
      20: aload_1
      21: aload_0
      22: invokevirtual #7                  // Method java/util/HashSet.addAll:(Ljava/util/Collection;)Z
      25: pop
      26: aload_1
      27: areturn

  public static <T> java.util.Set<T> newHashSet(java.lang.Iterable<? extends T>);
    Code:
       0: aload_0
       1: ldc           #8                  // String Iterable must not be null
       3: invokestatic  #3                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: instanceof    #9                  // class java/util/Collection
      10: ifeq          21
      13: aload_0
      14: checkcast     #9                  // class java/util/Collection
      17: invokestatic  #10                 // Method newHashSet:(Ljava/util/Collection;)Ljava/util/Set;
      20: areturn
      21: new           #4                  // class java/util/HashSet
      24: dup
      25: invokespecial #11                 // Method java/util/HashSet."<init>":()V
      28: astore_1
      29: aload_0
      30: invokeinterface #12,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      35: astore_2
      36: aload_2
      37: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      42: ifeq          63
      45: aload_2
      46: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      51: astore_3
      52: aload_1
      53: aload_3
      54: invokeinterface #15,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      59: pop
      60: goto          36
      63: aload_1
      64: areturn

  public static <T> java.util.Set<T> newHashSet(T...);
    Code:
       0: aload_0
       1: ldc           #16                 // String Elements must not be null
       3: invokestatic  #3                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #4                  // class java/util/HashSet
       9: dup
      10: aload_0
      11: arraylength
      12: invokespecial #6                  // Method java/util/HashSet."<init>":(I)V
      15: astore_1
      16: aload_1
      17: aload_0
      18: invokestatic  #17                 // Method java/util/Collections.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z
      21: pop
      22: aload_1
      23: areturn

  public static <T> java.util.Set<T> unmodifiableSet(T...);
    Code:
       0: aload_0
       1: invokestatic  #18                 // Method newHashSet:([Ljava/lang/Object;)Ljava/util/Set;
       4: invokestatic  #19                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
       7: areturn
}
