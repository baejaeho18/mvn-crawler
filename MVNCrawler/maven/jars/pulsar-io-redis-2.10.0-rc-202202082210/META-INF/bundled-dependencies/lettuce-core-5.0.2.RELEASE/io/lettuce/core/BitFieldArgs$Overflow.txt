Compiled from "BitFieldArgs.java"
class io.lettuce.core.BitFieldArgs$Overflow extends io.lettuce.core.BitFieldArgs$SubCommand {
  private final io.lettuce.core.BitFieldArgs$OverflowType overflowType;

  private io.lettuce.core.BitFieldArgs$Overflow(io.lettuce.core.BitFieldArgs$OverflowType);
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #2                  // Method io/lettuce/core/BitFieldArgs$SubCommand."<init>":(Lio/lettuce/core/BitFieldArgs$1;)V
       5: aload_1
       6: ldc           #3                  // String OverflowType must not be null
       8: invokestatic  #4                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      11: aload_0
      12: aload_1
      13: putfield      #5                  // Field overflowType:Lio/lettuce/core/BitFieldArgs$OverflowType;
      16: return

  <K, V> void build(io.lettuce.core.protocol.CommandArgs<K, V>);
    Code:
       0: aload_1
       1: ldc           #6                  // String OVERFLOW
       3: invokevirtual #7                  // Method io/lettuce/core/protocol/CommandArgs.add:(Ljava/lang/String;)Lio/lettuce/core/protocol/CommandArgs;
       6: aload_0
       7: getfield      #5                  // Field overflowType:Lio/lettuce/core/BitFieldArgs$OverflowType;
      10: invokevirtual #8                  // Method io/lettuce/core/protocol/CommandArgs.add:(Lio/lettuce/core/protocol/ProtocolKeyword;)Lio/lettuce/core/protocol/CommandArgs;
      13: pop
      14: return

  io.lettuce.core.BitFieldArgs$Overflow(io.lettuce.core.BitFieldArgs$OverflowType, io.lettuce.core.BitFieldArgs$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lio/lettuce/core/BitFieldArgs$OverflowType;)V
       5: return
}
