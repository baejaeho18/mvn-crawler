Compiled from "EqualJitterDelay.java"
class io.lettuce.core.resource.EqualJitterDelay extends io.lettuce.core.resource.ExponentialDelay {
  private final long base;

  private final java.util.concurrent.TimeUnit targetTimeUnit;

  io.lettuce.core.resource.EqualJitterDelay(java.time.Duration, java.time.Duration, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_2
       4: aload         5
       6: invokespecial #1                  // Method io/lettuce/core/resource/ExponentialDelay."<init>":(Ljava/time/Duration;Ljava/time/Duration;ILjava/util/concurrent/TimeUnit;)V
       9: aload_0
      10: lload_3
      11: putfield      #2                  // Field base:J
      14: aload_0
      15: aload         5
      17: putfield      #3                  // Field targetTimeUnit:Ljava/util/concurrent/TimeUnit;
      20: return

  public java.time.Duration createDelay(long);
    Code:
       0: lconst_0
       1: aload_0
       2: getfield      #2                  // Field base:J
       5: lload_1
       6: invokestatic  #4                  // Method calculatePowerOfTwo:(J)J
       9: lmul
      10: invokestatic  #5                  // Method randomBetween:(JJ)J
      13: lstore_3
      14: aload_0
      15: aload_0
      16: getfield      #3                  // Field targetTimeUnit:Ljava/util/concurrent/TimeUnit;
      19: lload_3
      20: invokevirtual #6                  // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      23: invokestatic  #7                  // Method java/time/Duration.ofNanos:(J)Ljava/time/Duration;
      26: invokevirtual #8                  // Method applyBounds:(Ljava/time/Duration;)Ljava/time/Duration;
      29: areturn
}
