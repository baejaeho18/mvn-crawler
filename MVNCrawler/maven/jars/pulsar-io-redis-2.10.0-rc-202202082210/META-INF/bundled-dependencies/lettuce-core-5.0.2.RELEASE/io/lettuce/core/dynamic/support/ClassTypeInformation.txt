Compiled from "ClassTypeInformation.java"
public class io.lettuce.core.dynamic.support.ClassTypeInformation<S> extends io.lettuce.core.dynamic.support.TypeDiscoverer<S> {
  public static final io.lettuce.core.dynamic.support.ClassTypeInformation<java.util.Collection> COLLECTION;

  public static final io.lettuce.core.dynamic.support.ClassTypeInformation<java.util.List> LIST;

  public static final io.lettuce.core.dynamic.support.ClassTypeInformation<java.util.Set> SET;

  public static final io.lettuce.core.dynamic.support.ClassTypeInformation<java.util.Map> MAP;

  public static final io.lettuce.core.dynamic.support.ClassTypeInformation<java.lang.Object> OBJECT;

  private static final java.util.Map<java.lang.Class<?>, java.lang.ref.Reference<io.lettuce.core.dynamic.support.ClassTypeInformation<?>>> CACHE;

  private final java.lang.Class<S> type;

  public static <S> io.lettuce.core.dynamic.support.ClassTypeInformation<S> from(java.lang.Class<S>);
    Code:
       0: aload_0
       1: ldc           #1                  // String Type must not be null!
       3: invokestatic  #2                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: getstatic     #3                  // Field CACHE:Ljava/util/Map;
       9: aload_0
      10: invokeinterface #4,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #5                  // class java/lang/ref/Reference
      18: astore_1
      19: aload_1
      20: ifnonnull     27
      23: aconst_null
      24: goto          34
      27: aload_1
      28: invokevirtual #6                  // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
      31: checkcast     #7                  // class io/lettuce/core/dynamic/support/TypeInformation
      34: astore_2
      35: aload_2
      36: ifnull        44
      39: aload_2
      40: checkcast     #8                  // class io/lettuce/core/dynamic/support/ClassTypeInformation
      43: areturn
      44: new           #8                  // class io/lettuce/core/dynamic/support/ClassTypeInformation
      47: dup
      48: aload_0
      49: invokespecial #9                  // Method "<init>":(Ljava/lang/Class;)V
      52: astore_3
      53: getstatic     #3                  // Field CACHE:Ljava/util/Map;
      56: aload_0
      57: new           #10                 // class java/lang/ref/WeakReference
      60: dup
      61: aload_3
      62: invokespecial #11                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      65: invokeinterface #12,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      70: pop
      71: aload_3
      72: areturn

  public static <S> io.lettuce.core.dynamic.support.TypeInformation<S> fromReturnTypeOf(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: ldc           #13                 // String Method must not be null!
       3: invokestatic  #2                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #8                  // class io/lettuce/core/dynamic/support/ClassTypeInformation
       9: dup
      10: aload_0
      11: invokevirtual #14                 // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
      14: invokespecial #9                  // Method "<init>":(Ljava/lang/Class;)V
      17: aload_0
      18: invokevirtual #15                 // Method java/lang/reflect/Method.getGenericReturnType:()Ljava/lang/reflect/Type;
      21: invokevirtual #16                 // Method createInfo:(Ljava/lang/reflect/Type;)Lio/lettuce/core/dynamic/support/TypeInformation;
      24: areturn

  public static <S> io.lettuce.core.dynamic.support.TypeInformation<S> fromMethodParameter(java.lang.reflect.Method, int);
    Code:
       0: aload_0
       1: ldc           #13                 // String Method must not be null!
       3: invokestatic  #2                  // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #8                  // class io/lettuce/core/dynamic/support/ClassTypeInformation
       9: dup
      10: aload_0
      11: invokevirtual #14                 // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
      14: invokespecial #9                  // Method "<init>":(Ljava/lang/Class;)V
      17: aload_0
      18: invokevirtual #17                 // Method java/lang/reflect/Method.getGenericParameterTypes:()[Ljava/lang/reflect/Type;
      21: iload_1
      22: aaload
      23: invokevirtual #16                 // Method createInfo:(Ljava/lang/reflect/Type;)Lio/lettuce/core/dynamic/support/TypeInformation;
      26: areturn

  io.lettuce.core.dynamic.support.ClassTypeInformation(java.lang.Class<S>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #18                 // Method getUserClass:(Ljava/lang/Class;)Ljava/lang/Class;
       5: aload_1
       6: invokestatic  #19                 // Method getTypeVariableMap:(Ljava/lang/Class;)Ljava/util/Map;
       9: invokespecial #20                 // Method io/lettuce/core/dynamic/support/TypeDiscoverer."<init>":(Ljava/lang/reflect/Type;Ljava/util/Map;)V
      12: aload_0
      13: aload_1
      14: putfield      #21                 // Field type:Ljava/lang/Class;
      17: return

  private static java.lang.Class<?> getUserClass(java.lang.Class<?>);
    Code:
       0: aload_0
       1: ifnull        33
       4: aload_0
       5: invokevirtual #22                 // Method java/lang/Class.getName:()Ljava/lang/String;
       8: ldc           #24                 // String $$
      10: invokevirtual #25                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      13: ifeq          33
      16: aload_0
      17: invokevirtual #26                 // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
      20: astore_1
      21: aload_1
      22: ifnull        33
      25: ldc           #27                 // class java/lang/Object
      27: aload_1
      28: if_acmpeq     33
      31: aload_1
      32: areturn
      33: aload_0
      34: areturn

  private static java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> getTypeVariableMap(java.lang.Class<?>);
    Code:
       0: aload_0
       1: new           #28                 // class java/util/HashSet
       4: dup
       5: invokespecial #29                 // Method java/util/HashSet."<init>":()V
       8: invokestatic  #30                 // Method getTypeVariableMap:(Ljava/lang/Class;Ljava/util/Collection;)Ljava/util/Map;
      11: areturn

  private static java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> getTypeVariableMap(java.lang.Class<?>, java.util.Collection<java.lang.reflect.Type>);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #31,  2           // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
       7: ifeq          14
      10: invokestatic  #32                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      13: areturn
      14: aload_1
      15: aload_0
      16: invokeinterface #33,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      21: pop
      22: aload_0
      23: invokestatic  #34                 // Method io/lettuce/core/dynamic/support/GenericTypeResolver.getTypeVariableMap:(Ljava/lang/Class;)Ljava/util/Map;
      26: astore_2
      27: new           #35                 // class java/util/HashMap
      30: dup
      31: aload_2
      32: invokeinterface #36,  1           // InterfaceMethod java/util/Map.size:()I
      37: invokespecial #37                 // Method java/util/HashMap."<init>":(I)V
      40: astore_3
      41: aload_2
      42: invokeinterface #38,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      47: invokeinterface #39,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      52: astore        4
      54: aload         4
      56: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      61: ifeq          135
      64: aload         4
      66: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      71: checkcast     #42                 // class java/util/Map$Entry
      74: astore        5
      76: aload         5
      78: invokeinterface #43,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      83: checkcast     #44                 // class java/lang/reflect/Type
      86: astore        6
      88: aload_3
      89: aload         5
      91: invokeinterface #45,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      96: aload         5
      98: invokeinterface #43,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     103: invokeinterface #12,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     108: pop
     109: aload         6
     111: instanceof    #46                 // class java/lang/Class
     114: ifeq          132
     117: aload_3
     118: aload         6
     120: checkcast     #46                 // class java/lang/Class
     123: aload_1
     124: invokestatic  #30                 // Method getTypeVariableMap:(Ljava/lang/Class;Ljava/util/Collection;)Ljava/util/Map;
     127: invokeinterface #47,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
     132: goto          54
     135: aload_3
     136: areturn

  public java.lang.Class<S> getType();
    Code:
       0: aload_0
       1: getfield      #21                 // Field type:Ljava/lang/Class;
       4: areturn

  public io.lettuce.core.dynamic.support.ClassTypeInformation<?> getRawTypeInformation();
    Code:
       0: aload_0
       1: areturn

  public boolean isAssignableFrom(io.lettuce.core.dynamic.support.TypeInformation<?>);
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method getType:()Ljava/lang/Class;
       4: aload_1
       5: invokeinterface #49,  1           // InterfaceMethod io/lettuce/core/dynamic/support/TypeInformation.getType:()Ljava/lang/Class;
      10: invokevirtual #50                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      13: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #21                 // Field type:Ljava/lang/Class;
       4: invokevirtual #22                 // Method java/lang/Class.getName:()Ljava/lang/String;
       7: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokespecial #51                 // Method io/lettuce/core/dynamic/support/TypeDiscoverer.hashCode:()I
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #52                 // Method io/lettuce/core/dynamic/support/TypeDiscoverer.equals:(Ljava/lang/Object;)Z
       5: ireturn

  public io.lettuce.core.dynamic.support.TypeInformation getTypeArgument(java.lang.Class, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #53                 // Method io/lettuce/core/dynamic/support/TypeDiscoverer.getTypeArgument:(Ljava/lang/Class;I)Lio/lettuce/core/dynamic/support/TypeInformation;
       6: areturn

  public java.util.List getTypeArguments();
    Code:
       0: aload_0
       1: invokespecial #54                 // Method io/lettuce/core/dynamic/support/TypeDiscoverer.getTypeArguments:()Ljava/util/List;
       4: areturn

  public io.lettuce.core.dynamic.support.TypeInformation getSuperTypeInformation(java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #55                 // Method io/lettuce/core/dynamic/support/TypeDiscoverer.getSuperTypeInformation:(Ljava/lang/Class;)Lio/lettuce/core/dynamic/support/TypeInformation;
       5: areturn

  public java.util.List getParameterTypes(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #56                 // Method io/lettuce/core/dynamic/support/TypeDiscoverer.getParameterTypes:(Ljava/lang/reflect/Method;)Ljava/util/List;
       5: areturn

  public io.lettuce.core.dynamic.support.TypeInformation getReturnType(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #57                 // Method io/lettuce/core/dynamic/support/TypeDiscoverer.getReturnType:(Ljava/lang/reflect/Method;)Lio/lettuce/core/dynamic/support/TypeInformation;
       5: areturn

  public boolean isCollectionLike();
    Code:
       0: aload_0
       1: invokespecial #58                 // Method io/lettuce/core/dynamic/support/TypeDiscoverer.isCollectionLike:()Z
       4: ireturn

  public io.lettuce.core.dynamic.support.TypeInformation getMapValueType();
    Code:
       0: aload_0
       1: invokespecial #59                 // Method io/lettuce/core/dynamic/support/TypeDiscoverer.getMapValueType:()Lio/lettuce/core/dynamic/support/TypeInformation;
       4: areturn

  public boolean isMap();
    Code:
       0: aload_0
       1: invokespecial #60                 // Method io/lettuce/core/dynamic/support/TypeDiscoverer.isMap:()Z
       4: ireturn

  public io.lettuce.core.dynamic.support.TypeInformation getActualType();
    Code:
       0: aload_0
       1: invokespecial #61                 // Method io/lettuce/core/dynamic/support/TypeDiscoverer.getActualType:()Lio/lettuce/core/dynamic/support/TypeInformation;
       4: areturn

  public java.lang.reflect.Type getGenericType();
    Code:
       0: aload_0
       1: invokespecial #62                 // Method io/lettuce/core/dynamic/support/TypeDiscoverer.getGenericType:()Ljava/lang/reflect/Type;
       4: areturn

  public java.util.List getParameterTypes(java.lang.reflect.Constructor);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #63                 // Method io/lettuce/core/dynamic/support/TypeDiscoverer.getParameterTypes:(Ljava/lang/reflect/Constructor;)Ljava/util/List;
       5: areturn

  public java.util.Map getTypeVariableMap();
    Code:
       0: aload_0
       1: invokespecial #64                 // Method io/lettuce/core/dynamic/support/TypeDiscoverer.getTypeVariableMap:()Ljava/util/Map;
       4: areturn

  static {};
    Code:
       0: new           #8                  // class io/lettuce/core/dynamic/support/ClassTypeInformation
       3: dup
       4: ldc           #65                 // class java/util/Collection
       6: invokespecial #9                  // Method "<init>":(Ljava/lang/Class;)V
       9: putstatic     #66                 // Field COLLECTION:Lio/lettuce/core/dynamic/support/ClassTypeInformation;
      12: new           #8                  // class io/lettuce/core/dynamic/support/ClassTypeInformation
      15: dup
      16: ldc           #67                 // class java/util/List
      18: invokespecial #9                  // Method "<init>":(Ljava/lang/Class;)V
      21: putstatic     #68                 // Field LIST:Lio/lettuce/core/dynamic/support/ClassTypeInformation;
      24: new           #8                  // class io/lettuce/core/dynamic/support/ClassTypeInformation
      27: dup
      28: ldc           #69                 // class java/util/Set
      30: invokespecial #9                  // Method "<init>":(Ljava/lang/Class;)V
      33: putstatic     #70                 // Field SET:Lio/lettuce/core/dynamic/support/ClassTypeInformation;
      36: new           #8                  // class io/lettuce/core/dynamic/support/ClassTypeInformation
      39: dup
      40: ldc           #71                 // class java/util/Map
      42: invokespecial #9                  // Method "<init>":(Ljava/lang/Class;)V
      45: putstatic     #72                 // Field MAP:Lio/lettuce/core/dynamic/support/ClassTypeInformation;
      48: new           #8                  // class io/lettuce/core/dynamic/support/ClassTypeInformation
      51: dup
      52: ldc           #27                 // class java/lang/Object
      54: invokespecial #9                  // Method "<init>":(Ljava/lang/Class;)V
      57: putstatic     #73                 // Field OBJECT:Lio/lettuce/core/dynamic/support/ClassTypeInformation;
      60: new           #74                 // class java/util/WeakHashMap
      63: dup
      64: invokespecial #75                 // Method java/util/WeakHashMap."<init>":()V
      67: invokestatic  #76                 // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      70: putstatic     #3                  // Field CACHE:Ljava/util/Map;
      73: iconst_5
      74: anewarray     #8                  // class io/lettuce/core/dynamic/support/ClassTypeInformation
      77: dup
      78: iconst_0
      79: getstatic     #66                 // Field COLLECTION:Lio/lettuce/core/dynamic/support/ClassTypeInformation;
      82: aastore
      83: dup
      84: iconst_1
      85: getstatic     #68                 // Field LIST:Lio/lettuce/core/dynamic/support/ClassTypeInformation;
      88: aastore
      89: dup
      90: iconst_2
      91: getstatic     #70                 // Field SET:Lio/lettuce/core/dynamic/support/ClassTypeInformation;
      94: aastore
      95: dup
      96: iconst_3
      97: getstatic     #72                 // Field MAP:Lio/lettuce/core/dynamic/support/ClassTypeInformation;
     100: aastore
     101: dup
     102: iconst_4
     103: getstatic     #73                 // Field OBJECT:Lio/lettuce/core/dynamic/support/ClassTypeInformation;
     106: aastore
     107: invokestatic  #77                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     110: invokeinterface #78,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     115: astore_0
     116: aload_0
     117: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     122: ifeq          159
     125: aload_0
     126: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     131: checkcast     #8                  // class io/lettuce/core/dynamic/support/ClassTypeInformation
     134: astore_1
     135: getstatic     #3                  // Field CACHE:Ljava/util/Map;
     138: aload_1
     139: invokevirtual #48                 // Method getType:()Ljava/lang/Class;
     142: new           #10                 // class java/lang/ref/WeakReference
     145: dup
     146: aload_1
     147: invokespecial #11                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
     150: invokeinterface #12,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     155: pop
     156: goto          116
     159: return
}
