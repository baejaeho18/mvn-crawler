Compiled from "RedisClusterPubSubReactiveCommandsImpl.java"
class io.lettuce.core.cluster.RedisClusterPubSubReactiveCommandsImpl$StaticPubSubReactiveNodeSelection<K, V> extends io.lettuce.core.cluster.AbstractNodeSelection<io.lettuce.core.pubsub.api.reactive.RedisPubSubReactiveCommands<K, V>, io.lettuce.core.cluster.pubsub.api.reactive.NodeSelectionPubSubReactiveCommands<K, V>, K, V> implements io.lettuce.core.cluster.pubsub.api.reactive.PubSubReactiveNodeSelection<K, V> {
  private final java.util.List<io.lettuce.core.cluster.models.partitions.RedisClusterNode> redisClusterNodes;

  private final io.lettuce.core.cluster.ClusterDistributionChannelWriter writer;

  public io.lettuce.core.cluster.RedisClusterPubSubReactiveCommandsImpl$StaticPubSubReactiveNodeSelection(io.lettuce.core.cluster.pubsub.StatefulRedisClusterPubSubConnection<K, V>, java.util.function.Predicate<io.lettuce.core.cluster.models.partitions.RedisClusterNode>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/lettuce/core/cluster/AbstractNodeSelection."<init>":()V
       4: aload_0
       5: aload_1
       6: invokeinterface #2,  1            // InterfaceMethod io/lettuce/core/cluster/pubsub/StatefulRedisClusterPubSubConnection.getPartitions:()Lio/lettuce/core/cluster/models/partitions/Partitions;
      11: invokevirtual #3                  // Method io/lettuce/core/cluster/models/partitions/Partitions.getPartitions:()Ljava/util/List;
      14: invokeinterface #4,  1            // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      19: aload_2
      20: invokeinterface #5,  2            // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      25: invokestatic  #6                  // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      28: invokeinterface #7,  2            // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      33: checkcast     #8                  // class java/util/List
      36: putfield      #9                  // Field redisClusterNodes:Ljava/util/List;
      39: aload_0
      40: aload_1
      41: checkcast     #10                 // class io/lettuce/core/cluster/StatefulRedisClusterPubSubConnectionImpl
      44: invokevirtual #11                 // Method io/lettuce/core/cluster/StatefulRedisClusterPubSubConnectionImpl.getClusterDistributionChannelWriter:()Lio/lettuce/core/cluster/ClusterDistributionChannelWriter;
      47: putfield      #12                 // Field writer:Lio/lettuce/core/cluster/ClusterDistributionChannelWriter;
      50: return

  protected java.util.concurrent.CompletableFuture<io.lettuce.core.pubsub.api.reactive.RedisPubSubReactiveCommands<K, V>> getApi(io.lettuce.core.cluster.models.partitions.RedisClusterNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #13                 // Method getConnection:(Lio/lettuce/core/cluster/models/partitions/RedisClusterNode;)Ljava/util/concurrent/CompletableFuture;
       5: invokedynamic #14,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      10: invokevirtual #15                 // Method java/util/concurrent/CompletableFuture.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      13: areturn

  protected java.util.List<io.lettuce.core.cluster.models.partitions.RedisClusterNode> nodes();
    Code:
       0: aload_0
       1: getfield      #9                  // Field redisClusterNodes:Ljava/util/List;
       4: areturn

  protected java.util.concurrent.CompletableFuture<io.lettuce.core.pubsub.StatefulRedisPubSubConnection<K, V>> getConnection(io.lettuce.core.cluster.models.partitions.RedisClusterNode);
    Code:
       0: aload_1
       1: invokevirtual #16                 // Method io/lettuce/core/cluster/models/partitions/RedisClusterNode.getUri:()Lio/lettuce/core/RedisURI;
       4: astore_2
       5: aload_0
       6: getfield      #12                 // Field writer:Lio/lettuce/core/cluster/ClusterDistributionChannelWriter;
       9: invokevirtual #17                 // Method io/lettuce/core/cluster/ClusterDistributionChannelWriter.getClusterConnectionProvider:()Lio/lettuce/core/cluster/ClusterConnectionProvider;
      12: checkcast     #18                 // class io/lettuce/core/cluster/AsyncClusterConnectionProvider
      15: astore_3
      16: aload_3
      17: getstatic     #19                 // Field io/lettuce/core/cluster/ClusterConnectionProvider$Intent.WRITE:Lio/lettuce/core/cluster/ClusterConnectionProvider$Intent;
      20: aload_2
      21: invokevirtual #20                 // Method io/lettuce/core/RedisURI.getHost:()Ljava/lang/String;
      24: aload_2
      25: invokevirtual #21                 // Method io/lettuce/core/RedisURI.getPort:()I
      28: invokeinterface #22,  4           // InterfaceMethod io/lettuce/core/cluster/AsyncClusterConnectionProvider.getConnectionAsync:(Lio/lettuce/core/cluster/ClusterConnectionProvider$Intent;Ljava/lang/String;I)Ljava/util/concurrent/CompletableFuture;
      33: invokedynamic #23,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      38: invokevirtual #15                 // Method java/util/concurrent/CompletableFuture.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      41: areturn

  private static io.lettuce.core.pubsub.StatefulRedisPubSubConnection lambda$getConnection$0(io.lettuce.core.api.StatefulRedisConnection);
    Code:
       0: aload_0
       1: checkcast     #24                 // class io/lettuce/core/pubsub/StatefulRedisPubSubConnection
       4: areturn
}
