Compiled from "BaseNodeSelectionAsyncCommands.java"
public interface io.lettuce.core.cluster.api.async.BaseNodeSelectionAsyncCommands<K, V> {
  public abstract io.lettuce.core.cluster.api.async.AsyncExecutions<java.lang.Long> publish(K, V);

  public abstract io.lettuce.core.cluster.api.async.AsyncExecutions<java.util.List<K>> pubsubChannels();

  public abstract io.lettuce.core.cluster.api.async.AsyncExecutions<java.util.List<K>> pubsubChannels(K);

  public abstract io.lettuce.core.cluster.api.async.AsyncExecutions<java.util.Map<K, java.lang.Long>> pubsubNumsub(K...);

  public abstract io.lettuce.core.cluster.api.async.AsyncExecutions<java.lang.Long> pubsubNumpat();

  public abstract io.lettuce.core.cluster.api.async.AsyncExecutions<V> echo(V);

  public abstract io.lettuce.core.cluster.api.async.AsyncExecutions<java.util.List<java.lang.Object>> role();

  public abstract io.lettuce.core.cluster.api.async.AsyncExecutions<java.lang.String> ping();

  public abstract io.lettuce.core.cluster.api.async.AsyncExecutions<java.lang.String> quit();

  public abstract io.lettuce.core.cluster.api.async.AsyncExecutions<java.lang.Long> waitForReplication(int, long);

  public abstract <T> io.lettuce.core.cluster.api.async.AsyncExecutions<T> dispatch(io.lettuce.core.protocol.ProtocolKeyword, io.lettuce.core.output.CommandOutput<K, V, T>);

  public abstract <T> io.lettuce.core.cluster.api.async.AsyncExecutions<T> dispatch(io.lettuce.core.protocol.ProtocolKeyword, io.lettuce.core.output.CommandOutput<K, V, T>, io.lettuce.core.protocol.CommandArgs<K, V>);
}
