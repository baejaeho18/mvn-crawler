Compiled from "SlotHash.java"
public class io.lettuce.core.cluster.SlotHash {
  public static final byte SUBKEY_START;

  public static final byte SUBKEY_END;

  public static final int SLOT_COUNT;

  private io.lettuce.core.cluster.SlotHash();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static final int getSlot(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method java/lang/String.getBytes:()[B
       4: invokestatic  #3                  // Method getSlot:([B)I
       7: ireturn

  public static int getSlot(byte[]);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
       4: invokestatic  #5                  // Method getSlot:(Ljava/nio/ByteBuffer;)I
       7: ireturn

  public static int getSlot(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method java/nio/ByteBuffer.limit:()I
       4: istore_1
       5: aload_0
       6: invokevirtual #7                  // Method java/nio/ByteBuffer.position:()I
       9: istore_2
      10: aload_0
      11: bipush        123
      13: invokestatic  #9                  // Method indexOf:(Ljava/nio/ByteBuffer;B)I
      16: istore_3
      17: iload_3
      18: iconst_m1
      19: if_icmpeq     60
      22: aload_0
      23: iload_3
      24: iconst_1
      25: iadd
      26: bipush        125
      28: invokestatic  #10                 // Method indexOf:(Ljava/nio/ByteBuffer;IB)I
      31: istore        4
      33: iload         4
      35: iconst_m1
      36: if_icmpeq     60
      39: iload         4
      41: iload_3
      42: iconst_1
      43: iadd
      44: if_icmpeq     60
      47: aload_0
      48: iload_3
      49: iconst_1
      50: iadd
      51: invokevirtual #11                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      54: iload         4
      56: invokevirtual #12                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      59: pop
      60: aload_0
      61: invokevirtual #13                 // Method java/nio/ByteBuffer.hasArray:()Z
      64: ifeq          106
      67: aload_0
      68: invokevirtual #14                 // Method java/nio/ByteBuffer.array:()[B
      71: aload_0
      72: invokevirtual #7                  // Method java/nio/ByteBuffer.position:()I
      75: aload_0
      76: invokevirtual #6                  // Method java/nio/ByteBuffer.limit:()I
      79: aload_0
      80: invokevirtual #7                  // Method java/nio/ByteBuffer.position:()I
      83: isub
      84: invokestatic  #15                 // Method io/lettuce/core/codec/CRC16.crc16:([BII)I
      87: sipush        16384
      90: irem
      91: istore        4
      93: aload_0
      94: iload_2
      95: invokevirtual #11                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      98: iload_1
      99: invokevirtual #12                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
     102: pop
     103: iload         4
     105: ireturn
     106: aload_0
     107: invokestatic  #16                 // Method io/lettuce/core/codec/CRC16.crc16:(Ljava/nio/ByteBuffer;)I
     110: sipush        16384
     113: irem
     114: istore        4
     116: aload_0
     117: iload_2
     118: invokevirtual #11                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     121: iload_1
     122: invokevirtual #12                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
     125: pop
     126: iload         4
     128: ireturn
     129: astore        5
     131: aload_0
     132: iload_2
     133: invokevirtual #11                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     136: iload_1
     137: invokevirtual #12                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
     140: pop
     141: aload         5
     143: athrow
    Exception table:
       from    to  target type
          60    93   129   any
         106   116   129   any
         129   131   129   any

  private static int indexOf(java.nio.ByteBuffer, byte);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #7                  // Method java/nio/ByteBuffer.position:()I
       5: iload_1
       6: invokestatic  #10                 // Method indexOf:(Ljava/nio/ByteBuffer;IB)I
       9: ireturn

  private static int indexOf(java.nio.ByteBuffer, int, byte);
    Code:
       0: iload_1
       1: istore_3
       2: iload_3
       3: aload_0
       4: invokevirtual #17                 // Method java/nio/ByteBuffer.remaining:()I
       7: if_icmpge     27
      10: aload_0
      11: iload_3
      12: invokevirtual #18                 // Method java/nio/ByteBuffer.get:(I)B
      15: iload_2
      16: if_icmpne     21
      19: iload_3
      20: ireturn
      21: iinc          3, 1
      24: goto          2
      27: iconst_m1
      28: ireturn

  static <K, V> java.util.Map<java.lang.Integer, java.util.List<K>> partition(io.lettuce.core.codec.RedisCodec<K, V>, java.lang.Iterable<K>);
    Code:
       0: new           #19                 // class java/util/HashMap
       3: dup
       4: invokespecial #20                 // Method java/util/HashMap."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #21,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          107
      24: aload_3
      25: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: astore        4
      32: aload_0
      33: aload         4
      35: invokeinterface #24,  2           // InterfaceMethod io/lettuce/core/codec/RedisCodec.encodeKey:(Ljava/lang/Object;)Ljava/nio/ByteBuffer;
      40: invokestatic  #5                  // Method getSlot:(Ljava/nio/ByteBuffer;)I
      43: istore        5
      45: aload_2
      46: iload         5
      48: invokestatic  #25                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      51: invokeinterface #26,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      56: ifne          78
      59: aload_2
      60: iload         5
      62: invokestatic  #25                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      65: new           #27                 // class java/util/ArrayList
      68: dup
      69: invokespecial #28                 // Method java/util/ArrayList."<init>":()V
      72: invokeinterface #29,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      77: pop
      78: aload_2
      79: iload         5
      81: invokestatic  #25                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      84: invokeinterface #30,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      89: checkcast     #31                 // class java/util/Collection
      92: astore        6
      94: aload         6
      96: aload         4
      98: invokeinterface #32,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     103: pop
     104: goto          15
     107: aload_2
     108: areturn

  static <K> java.util.Map<K, java.lang.Integer> getSlots(java.util.Map<java.lang.Integer, ? extends java.lang.Iterable<K>>);
    Code:
       0: new           #19                 // class java/util/HashMap
       3: dup
       4: invokespecial #20                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: invokeinterface #33,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      14: invokeinterface #34,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_2
      20: aload_2
      21: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          95
      29: aload_2
      30: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #35                 // class java/util/Map$Entry
      38: astore_3
      39: aload_3
      40: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      45: checkcast     #37                 // class java/lang/Iterable
      48: invokeinterface #21,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      53: astore        4
      55: aload         4
      57: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      62: ifeq          92
      65: aload         4
      67: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      72: astore        5
      74: aload_1
      75: aload         5
      77: aload_3
      78: invokeinterface #38,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      83: invokeinterface #29,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      88: pop
      89: goto          55
      92: goto          20
      95: aload_1
      96: areturn
}
