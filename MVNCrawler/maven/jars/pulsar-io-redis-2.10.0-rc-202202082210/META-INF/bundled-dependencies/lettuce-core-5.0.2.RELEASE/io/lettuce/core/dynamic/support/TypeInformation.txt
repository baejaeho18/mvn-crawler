Compiled from "TypeInformation.java"
public interface io.lettuce.core.dynamic.support.TypeInformation<S> {
  public abstract java.lang.reflect.Type getGenericType();

  public abstract java.util.List<io.lettuce.core.dynamic.support.TypeInformation<?>> getParameterTypes(java.lang.reflect.Constructor<?>);

  public abstract boolean isCollectionLike();

  public abstract io.lettuce.core.dynamic.support.TypeInformation<?> getComponentType();

  public abstract boolean isMap();

  public abstract io.lettuce.core.dynamic.support.TypeInformation<?> getMapValueType();

  public abstract java.lang.Class<S> getType();

  public abstract io.lettuce.core.dynamic.support.ClassTypeInformation<?> getRawTypeInformation();

  public abstract io.lettuce.core.dynamic.support.TypeInformation<?> getActualType();

  public abstract io.lettuce.core.dynamic.support.TypeInformation<?> getReturnType(java.lang.reflect.Method);

  public abstract java.util.List<io.lettuce.core.dynamic.support.TypeInformation<?>> getParameterTypes(java.lang.reflect.Method);

  public abstract io.lettuce.core.dynamic.support.TypeInformation<?> getSuperTypeInformation(java.lang.Class<?>);

  public abstract boolean isAssignableFrom(io.lettuce.core.dynamic.support.TypeInformation<?>);

  public abstract java.util.List<io.lettuce.core.dynamic.support.TypeInformation<?>> getTypeArguments();

  public abstract java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> getTypeVariableMap();
}
