Compiled from "ClusterNodeEndpoint.java"
class io.lettuce.core.cluster.ClusterNodeEndpoint extends io.lettuce.core.protocol.DefaultEndpoint {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private final io.lettuce.core.RedisChannelWriter clusterChannelWriter;

  public io.lettuce.core.cluster.ClusterNodeEndpoint(io.lettuce.core.ClientOptions, io.lettuce.core.resource.ClientResources, io.lettuce.core.RedisChannelWriter);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/lettuce/core/protocol/DefaultEndpoint."<init>":(Lio/lettuce/core/ClientOptions;)V
       5: aload_0
       6: aload_3
       7: putfield      #2                  // Field clusterChannelWriter:Lio/lettuce/core/RedisChannelWriter;
      10: return

  public void close();
    Code:
       0: getstatic     #3                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       3: ldc           #4                  // String {} close()
       5: aload_0
       6: invokevirtual #5                  // Method logPrefix:()Ljava/lang/String;
       9: invokeinterface #6,  3            // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      14: aload_0
      15: getfield      #2                  // Field clusterChannelWriter:Lio/lettuce/core/RedisChannelWriter;
      18: ifnull        38
      21: aload_0
      22: aload_0
      23: aload_0
      24: invokedynamic #7,  0              // InvokeDynamic #0:get:(Lio/lettuce/core/cluster/ClusterNodeEndpoint;)Ljava/util/function/Supplier;
      29: invokevirtual #8                  // Method doExclusive:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      32: checkcast     #9                  // class java/util/Collection
      35: invokevirtual #10                 // Method retriggerCommands:(Ljava/util/Collection;)V
      38: aload_0
      39: invokespecial #11                 // Method io/lettuce/core/protocol/DefaultEndpoint.close:()V
      42: return

  protected void retriggerCommands(java.util.Collection<io.lettuce.core.protocol.RedisCommand<?, ?, ?>>);
    Code:
       0: aload_1
       1: invokeinterface #12,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          70
      16: aload_2
      17: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #15                 // class io/lettuce/core/protocol/RedisCommand
      25: astore_3
      26: aload_3
      27: ifnull        7
      30: aload_3
      31: invokeinterface #16,  1           // InterfaceMethod io/lettuce/core/protocol/RedisCommand.isCancelled:()Z
      36: ifeq          42
      39: goto          7
      42: aload_0
      43: getfield      #2                  // Field clusterChannelWriter:Lio/lettuce/core/RedisChannelWriter;
      46: aload_3
      47: invokeinterface #17,  2           // InterfaceMethod io/lettuce/core/RedisChannelWriter.write:(Lio/lettuce/core/protocol/RedisCommand;)Lio/lettuce/core/protocol/RedisCommand;
      52: pop
      53: goto          67
      56: astore        4
      58: aload_3
      59: aload         4
      61: invokeinterface #19,  2           // InterfaceMethod io/lettuce/core/protocol/RedisCommand.completeExceptionally:(Ljava/lang/Throwable;)Z
      66: pop
      67: goto          7
      70: return
    Exception table:
       from    to  target type
          42    53    56   Class io/lettuce/core/RedisException

  static {};
    Code:
       0: ldc           #20                 // class io/lettuce/core/cluster/ClusterNodeEndpoint
       2: invokestatic  #21                 // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
       5: putstatic     #3                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       8: return
}
