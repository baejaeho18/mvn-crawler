Compiled from "ClusterTopologyRefreshOptions.java"
public class io.lettuce.core.cluster.ClusterTopologyRefreshOptions$Builder {
  private boolean periodicRefreshEnabled;

  private java.time.Duration refreshPeriod;

  private boolean closeStaleConnections;

  private boolean dynamicRefreshSources;

  private java.util.Set<io.lettuce.core.cluster.ClusterTopologyRefreshOptions$RefreshTrigger> adaptiveRefreshTriggers;

  private java.time.Duration adaptiveRefreshTimeout;

  private int refreshTriggersReconnectAttempts;

  private io.lettuce.core.cluster.ClusterTopologyRefreshOptions$Builder();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #9                  // Field periodicRefreshEnabled:Z
       9: aload_0
      10: getstatic     #11                 // Field io/lettuce/core/cluster/ClusterTopologyRefreshOptions.DEFAULT_REFRESH_PERIOD_DURATION:Ljava/time/Duration;
      13: putfield      #8                  // Field refreshPeriod:Ljava/time/Duration;
      16: aload_0
      17: iconst_1
      18: putfield      #7                  // Field closeStaleConnections:Z
      21: aload_0
      22: iconst_1
      23: putfield      #6                  // Field dynamicRefreshSources:Z
      26: aload_0
      27: new           #12                 // class java/util/HashSet
      30: dup
      31: getstatic     #13                 // Field io/lettuce/core/cluster/ClusterTopologyRefreshOptions.DEFAULT_ADAPTIVE_REFRESH_TRIGGERS:Ljava/util/Set;
      34: invokespecial #14                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      37: putfield      #5                  // Field adaptiveRefreshTriggers:Ljava/util/Set;
      40: aload_0
      41: getstatic     #15                 // Field io/lettuce/core/cluster/ClusterTopologyRefreshOptions.DEFAULT_ADAPTIVE_REFRESH_TIMEOUT_DURATION:Ljava/time/Duration;
      44: putfield      #4                  // Field adaptiveRefreshTimeout:Ljava/time/Duration;
      47: aload_0
      48: iconst_5
      49: putfield      #3                  // Field refreshTriggersReconnectAttempts:I
      52: return

  public io.lettuce.core.cluster.ClusterTopologyRefreshOptions$Builder enablePeriodicRefresh();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #16                 // Method enablePeriodicRefresh:(Z)Lio/lettuce/core/cluster/ClusterTopologyRefreshOptions$Builder;
       5: areturn

  public io.lettuce.core.cluster.ClusterTopologyRefreshOptions$Builder enablePeriodicRefresh(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field periodicRefreshEnabled:Z
       5: aload_0
       6: areturn

  public io.lettuce.core.cluster.ClusterTopologyRefreshOptions$Builder enablePeriodicRefresh(java.time.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method refreshPeriod:(Ljava/time/Duration;)Lio/lettuce/core/cluster/ClusterTopologyRefreshOptions$Builder;
       5: invokevirtual #18                 // Method enablePeriodicRefresh:()Lio/lettuce/core/cluster/ClusterTopologyRefreshOptions$Builder;
       8: areturn

  public io.lettuce.core.cluster.ClusterTopologyRefreshOptions$Builder enablePeriodicRefresh(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: invokevirtual #19                 // Method refreshPeriod:(JLjava/util/concurrent/TimeUnit;)Lio/lettuce/core/cluster/ClusterTopologyRefreshOptions$Builder;
       6: invokevirtual #18                 // Method enablePeriodicRefresh:()Lio/lettuce/core/cluster/ClusterTopologyRefreshOptions$Builder;
       9: areturn

  public io.lettuce.core.cluster.ClusterTopologyRefreshOptions$Builder refreshPeriod(java.time.Duration);
    Code:
       0: aload_1
       1: ldc           #20                 // String RefreshPeriod duration must not be null
       3: invokestatic  #21                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokevirtual #22                 // Method java/time/Duration.toNanos:()J
      10: lconst_0
      11: lcmp
      12: ifle          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ldc           #23                 // String RefreshPeriod must be greater 0
      22: invokestatic  #24                 // Method io/lettuce/core/internal/LettuceAssert.isTrue:(ZLjava/lang/String;)V
      25: aload_0
      26: aload_1
      27: putfield      #8                  // Field refreshPeriod:Ljava/time/Duration;
      30: aload_0
      31: areturn

  public io.lettuce.core.cluster.ClusterTopologyRefreshOptions$Builder refreshPeriod(long, java.util.concurrent.TimeUnit);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifle          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ldc           #23                 // String RefreshPeriod must be greater 0
      13: invokestatic  #24                 // Method io/lettuce/core/internal/LettuceAssert.isTrue:(ZLjava/lang/String;)V
      16: aload_3
      17: ldc           #25                 // String TimeUnit must not be null
      19: invokestatic  #21                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      22: aload_0
      23: aload_3
      24: lload_1
      25: invokevirtual #26                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      28: invokestatic  #27                 // Method java/time/Duration.ofNanos:(J)Ljava/time/Duration;
      31: invokevirtual #17                 // Method refreshPeriod:(Ljava/time/Duration;)Lio/lettuce/core/cluster/ClusterTopologyRefreshOptions$Builder;
      34: areturn

  public io.lettuce.core.cluster.ClusterTopologyRefreshOptions$Builder closeStaleConnections(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field closeStaleConnections:Z
       5: aload_0
       6: areturn

  public io.lettuce.core.cluster.ClusterTopologyRefreshOptions$Builder dynamicRefreshSources(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field dynamicRefreshSources:Z
       5: aload_0
       6: areturn

  public io.lettuce.core.cluster.ClusterTopologyRefreshOptions$Builder enableAdaptiveRefreshTrigger(io.lettuce.core.cluster.ClusterTopologyRefreshOptions$RefreshTrigger...);
    Code:
       0: aload_1
       1: ldc           #28                 // String RefreshTriggers must not be null
       3: invokestatic  #21                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #29                 // String RefreshTriggers must not contain null elements
       9: invokestatic  #30                 // Method io/lettuce/core/internal/LettuceAssert.noNullElements:([Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: getfield      #5                  // Field adaptiveRefreshTriggers:Ljava/util/Set;
      16: aload_1
      17: invokestatic  #31                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      20: invokeinterface #32,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      25: pop
      26: aload_0
      27: areturn

  public io.lettuce.core.cluster.ClusterTopologyRefreshOptions$Builder enableAllAdaptiveRefreshTriggers();
    Code:
       0: aload_0
       1: getfield      #5                  // Field adaptiveRefreshTriggers:Ljava/util/Set;
       4: ldc           #33                 // class io/lettuce/core/cluster/ClusterTopologyRefreshOptions$RefreshTrigger
       6: invokestatic  #34                 // Method java/util/EnumSet.allOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
       9: invokeinterface #32,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      14: pop
      15: aload_0
      16: areturn

  public io.lettuce.core.cluster.ClusterTopologyRefreshOptions$Builder adaptiveRefreshTriggersTimeout(java.time.Duration);
    Code:
       0: aload_0
       1: getfield      #8                  // Field refreshPeriod:Ljava/time/Duration;
       4: ldc           #35                 // String Adaptive refresh triggers timeout must not be null
       6: invokestatic  #21                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       9: aload_0
      10: getfield      #8                  // Field refreshPeriod:Ljava/time/Duration;
      13: invokevirtual #22                 // Method java/time/Duration.toNanos:()J
      16: lconst_0
      17: lcmp
      18: ifle          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ldc           #36                 // String Adaptive refresh triggers timeout must be greater 0
      28: invokestatic  #24                 // Method io/lettuce/core/internal/LettuceAssert.isTrue:(ZLjava/lang/String;)V
      31: aload_0
      32: aload_1
      33: putfield      #4                  // Field adaptiveRefreshTimeout:Ljava/time/Duration;
      36: aload_0
      37: areturn

  public io.lettuce.core.cluster.ClusterTopologyRefreshOptions$Builder adaptiveRefreshTriggersTimeout(long, java.util.concurrent.TimeUnit);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifle          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ldc           #37                 // String Triggers timeout must be greater 0
      13: invokestatic  #24                 // Method io/lettuce/core/internal/LettuceAssert.isTrue:(ZLjava/lang/String;)V
      16: aload_3
      17: ldc           #25                 // String TimeUnit must not be null
      19: invokestatic  #21                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      22: aload_0
      23: aload_3
      24: lload_1
      25: invokevirtual #26                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      28: invokestatic  #27                 // Method java/time/Duration.ofNanos:(J)Ljava/time/Duration;
      31: invokevirtual #38                 // Method adaptiveRefreshTriggersTimeout:(Ljava/time/Duration;)Lio/lettuce/core/cluster/ClusterTopologyRefreshOptions$Builder;
      34: areturn

  public io.lettuce.core.cluster.ClusterTopologyRefreshOptions$Builder refreshTriggersReconnectAttempts(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field refreshTriggersReconnectAttempts:I
       5: aload_0
       6: areturn

  public io.lettuce.core.cluster.ClusterTopologyRefreshOptions build();
    Code:
       0: new           #1                  // class io/lettuce/core/cluster/ClusterTopologyRefreshOptions
       3: dup
       4: aload_0
       5: invokespecial #39                 // Method io/lettuce/core/cluster/ClusterTopologyRefreshOptions."<init>":(Lio/lettuce/core/cluster/ClusterTopologyRefreshOptions$Builder;)V
       8: areturn

  static boolean access$000(io.lettuce.core.cluster.ClusterTopologyRefreshOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #9                  // Field periodicRefreshEnabled:Z
       4: ireturn

  static java.time.Duration access$100(io.lettuce.core.cluster.ClusterTopologyRefreshOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #8                  // Field refreshPeriod:Ljava/time/Duration;
       4: areturn

  static boolean access$200(io.lettuce.core.cluster.ClusterTopologyRefreshOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #7                  // Field closeStaleConnections:Z
       4: ireturn

  static boolean access$300(io.lettuce.core.cluster.ClusterTopologyRefreshOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #6                  // Field dynamicRefreshSources:Z
       4: ireturn

  static java.util.Set access$400(io.lettuce.core.cluster.ClusterTopologyRefreshOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #5                  // Field adaptiveRefreshTriggers:Ljava/util/Set;
       4: areturn

  static java.time.Duration access$500(io.lettuce.core.cluster.ClusterTopologyRefreshOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #4                  // Field adaptiveRefreshTimeout:Ljava/time/Duration;
       4: areturn

  static int access$600(io.lettuce.core.cluster.ClusterTopologyRefreshOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #3                  // Field refreshTriggersReconnectAttempts:I
       4: ireturn

  io.lettuce.core.cluster.ClusterTopologyRefreshOptions$Builder(io.lettuce.core.cluster.ClusterTopologyRefreshOptions$1);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method "<init>":()V
       4: return
}
