Compiled from "DefaultRedisCommandsMetadata.java"
class io.lettuce.core.dynamic.DefaultRedisCommandsMetadata implements io.lettuce.core.dynamic.RedisCommandsMetadata {
  private static final char PACKAGE_SEPARATOR;

  private final java.lang.Class<?> apiInterface;

  io.lettuce.core.dynamic.DefaultRedisCommandsMetadata(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field apiInterface:Ljava/lang/Class;
       9: return

  public java.lang.Class<?> getCommandsInterface();
    Code:
       0: aload_0
       1: getfield      #2                  // Field apiInterface:Ljava/lang/Class;
       4: areturn

  public java.util.Collection<java.lang.reflect.Method> getMethods();
    Code:
       0: new           #3                  // class java/util/HashSet
       3: dup
       4: invokespecial #4                  // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #5                  // Method getCommandsInterface:()Ljava/lang/Class;
      12: invokevirtual #6                  // Method java/lang/Class.getMethods:()[Ljava/lang/reflect/Method;
      15: astore_2
      16: aload_2
      17: arraylength
      18: istore_3
      19: iconst_0
      20: istore        4
      22: iload         4
      24: iload_3
      25: if_icmpge     69
      28: aload_2
      29: iload         4
      31: aaload
      32: astore        5
      34: aload         5
      36: aload_0
      37: invokevirtual #5                  // Method getCommandsInterface:()Ljava/lang/Class;
      40: invokestatic  #7                  // Method getMostSpecificMethod:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/reflect/Method;
      43: astore        5
      45: aload_0
      46: aload         5
      48: invokespecial #8                  // Method isQueryMethodCandidate:(Ljava/lang/reflect/Method;)Z
      51: ifeq          63
      54: aload_1
      55: aload         5
      57: invokeinterface #9,  2            // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      62: pop
      63: iinc          4, 1
      66: goto          22
      69: aload_1
      70: invokestatic  #10                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      73: areturn

  private boolean isQueryMethodCandidate(java.lang.reflect.Method);
    Code:
       0: aload_1
       1: invokevirtual #11                 // Method java/lang/reflect/Method.isBridge:()Z
       4: ifne          18
       7: aload_1
       8: invokevirtual #12                 // Method java/lang/reflect/Method.isDefault:()Z
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public <A extends java.lang.annotation.Annotation> A getAnnotation(java.lang.Class<A>);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getCommandsInterface:()Ljava/lang/Class;
       4: aload_1
       5: invokevirtual #13                 // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       8: areturn

  public boolean hasAnnotation(java.lang.Class<? extends java.lang.annotation.Annotation>);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getCommandsInterface:()Ljava/lang/Class;
       4: aload_1
       5: invokevirtual #13                 // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       8: ifnull        15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public static java.lang.reflect.Method getMostSpecificMethod(java.lang.reflect.Method, java.lang.Class<?>);
    Code:
       0: aload_0
       1: ifnull        41
       4: aload_0
       5: aload_1
       6: invokestatic  #14                 // Method isOverridable:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Z
       9: ifeq          41
      12: aload_1
      13: ifnull        41
      16: aload_1
      17: aload_0
      18: invokevirtual #15                 // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
      21: if_acmpeq     41
      24: aload_1
      25: aload_0
      26: invokevirtual #16                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
      29: aload_0
      30: invokevirtual #17                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      33: invokevirtual #18                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      36: areturn
      37: astore_2
      38: aload_0
      39: areturn
      40: astore_2
      41: aload_0
      42: areturn
    Exception table:
       from    to  target type
          24    36    37   Class java/lang/NoSuchMethodException
          24    36    40   Class java/lang/SecurityException
          37    39    40   Class java/lang/SecurityException

  private static boolean isOverridable(java.lang.reflect.Method, java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method java/lang/reflect/Method.getModifiers:()I
       4: invokestatic  #22                 // Method java/lang/reflect/Modifier.isPrivate:(I)Z
       7: ifeq          12
      10: iconst_0
      11: ireturn
      12: aload_0
      13: invokevirtual #21                 // Method java/lang/reflect/Method.getModifiers:()I
      16: invokestatic  #23                 // Method java/lang/reflect/Modifier.isPublic:(I)Z
      19: ifne          32
      22: aload_0
      23: invokevirtual #21                 // Method java/lang/reflect/Method.getModifiers:()I
      26: invokestatic  #24                 // Method java/lang/reflect/Modifier.isProtected:(I)Z
      29: ifeq          34
      32: iconst_1
      33: ireturn
      34: aload_0
      35: invokevirtual #15                 // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
      38: invokestatic  #25                 // Method getPackageName:(Ljava/lang/Class;)Ljava/lang/String;
      41: aload_1
      42: invokestatic  #25                 // Method getPackageName:(Ljava/lang/Class;)Ljava/lang/String;
      45: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      48: ireturn

  private static java.lang.String getPackageName(java.lang.Class<?>);
    Code:
       0: aload_0
       1: ldc           #27                 // String Class must not be null
       3: invokestatic  #28                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokevirtual #29                 // Method java/lang/Class.getName:()Ljava/lang/String;
      10: invokestatic  #30                 // Method getPackageName:(Ljava/lang/String;)Ljava/lang/String;
      13: areturn

  private static java.lang.String getPackageName(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #31                 // String Class name must not be null
       3: invokestatic  #28                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: bipush        46
       9: invokevirtual #33                 // Method java/lang/String.lastIndexOf:(I)I
      12: istore_1
      13: iload_1
      14: iconst_m1
      15: if_icmpeq     27
      18: aload_0
      19: iconst_0
      20: iload_1
      21: invokevirtual #34                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      24: goto          29
      27: ldc           #35                 // String
      29: areturn
}
