Compiled from "MasterSlaveConnectionProvider.java"
public class io.lettuce.core.masterslave.MasterSlaveConnectionProvider<K, V> {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private final boolean debugEnabled;

  private final java.util.Map<io.lettuce.core.masterslave.MasterSlaveConnectionProvider$ConnectionKey, io.lettuce.core.api.StatefulRedisConnection<K, V>> connections;

  private final io.lettuce.core.masterslave.MasterSlaveConnectionProvider<K, V>.ConnectionFactory<K, V> connectionFactory;

  private final io.lettuce.core.RedisURI initialRedisUri;

  private java.util.List<io.lettuce.core.models.role.RedisNodeDescription> knownNodes;

  private boolean autoFlushCommands;

  private final java.lang.Object stateLock;

  private io.lettuce.core.ReadFrom readFrom;

  io.lettuce.core.masterslave.MasterSlaveConnectionProvider(io.lettuce.core.RedisClient, io.lettuce.core.codec.RedisCodec<K, V>, io.lettuce.core.RedisURI, java.util.Map<io.lettuce.core.RedisURI, io.lettuce.core.api.StatefulRedisConnection<K, V>>);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #6                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       8: invokeinterface #7,  1            // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isDebugEnabled:()Z
      13: putfield      #8                  // Field debugEnabled:Z
      16: aload_0
      17: new           #9                  // class java/util/concurrent/ConcurrentHashMap
      20: dup
      21: invokespecial #10                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      24: putfield      #11                 // Field connections:Ljava/util/Map;
      27: aload_0
      28: new           #12                 // class java/util/ArrayList
      31: dup
      32: invokespecial #13                 // Method java/util/ArrayList."<init>":()V
      35: putfield      #4                  // Field knownNodes:Ljava/util/List;
      38: aload_0
      39: iconst_1
      40: putfield      #1                  // Field autoFlushCommands:Z
      43: aload_0
      44: new           #14                 // class java/lang/Object
      47: dup
      48: invokespecial #5                  // Method java/lang/Object."<init>":()V
      51: putfield      #2                  // Field stateLock:Ljava/lang/Object;
      54: aload_0
      55: aload_3
      56: putfield      #3                  // Field initialRedisUri:Lio/lettuce/core/RedisURI;
      59: aload_0
      60: new           #15                 // class io/lettuce/core/masterslave/MasterSlaveConnectionProvider$ConnectionFactory
      63: dup
      64: aload_0
      65: aload_1
      66: aload_2
      67: invokespecial #16                 // Method io/lettuce/core/masterslave/MasterSlaveConnectionProvider$ConnectionFactory."<init>":(Lio/lettuce/core/masterslave/MasterSlaveConnectionProvider;Lio/lettuce/core/RedisClient;Lio/lettuce/core/codec/RedisCodec;)V
      70: putfield      #17                 // Field connectionFactory:Lio/lettuce/core/masterslave/MasterSlaveConnectionProvider$ConnectionFactory;
      73: aload         4
      75: invokeinterface #18,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      80: invokeinterface #19,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      85: astore        5
      87: aload         5
      89: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      94: ifeq          143
      97: aload         5
      99: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     104: checkcast     #22                 // class java/util/Map$Entry
     107: astore        6
     109: aload_0
     110: getfield      #11                 // Field connections:Ljava/util/Map;
     113: aload_0
     114: aload         6
     116: invokeinterface #23,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     121: checkcast     #24                 // class io/lettuce/core/RedisURI
     124: invokespecial #25                 // Method toConnectionKey:(Lio/lettuce/core/RedisURI;)Lio/lettuce/core/masterslave/MasterSlaveConnectionProvider$ConnectionKey;
     127: aload         6
     129: invokeinterface #26,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     134: invokeinterface #27,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     139: pop
     140: goto          87
     143: return

  public io.lettuce.core.api.StatefulRedisConnection<K, V> getConnection(io.lettuce.core.masterslave.MasterSlaveConnectionProvider$Intent);
    Code:
       0: aload_0
       1: getfield      #8                  // Field debugEnabled:Z
       4: ifeq          39
       7: getstatic     #6                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      10: new           #28                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #30                 // String getConnection(
      19: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_1
      23: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      26: ldc           #33                 // String )
      28: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokeinterface #35,  2           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;)V
      39: aload_0
      40: getfield      #36                 // Field readFrom:Lio/lettuce/core/ReadFrom;
      43: ifnull        185
      46: aload_1
      47: getstatic     #37                 // Field io/lettuce/core/masterslave/MasterSlaveConnectionProvider$Intent.READ:Lio/lettuce/core/masterslave/MasterSlaveConnectionProvider$Intent;
      50: if_acmpne     185
      53: aload_0
      54: getfield      #36                 // Field readFrom:Lio/lettuce/core/ReadFrom;
      57: new           #38                 // class io/lettuce/core/masterslave/MasterSlaveConnectionProvider$1
      60: dup
      61: aload_0
      62: invokespecial #39                 // Method io/lettuce/core/masterslave/MasterSlaveConnectionProvider$1."<init>":(Lio/lettuce/core/masterslave/MasterSlaveConnectionProvider;)V
      65: invokevirtual #40                 // Method io/lettuce/core/ReadFrom.select:(Lio/lettuce/core/ReadFrom$Nodes;)Ljava/util/List;
      68: astore_2
      69: aload_2
      70: invokeinterface #41,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      75: ifeq          109
      78: new           #42                 // class io/lettuce/core/RedisException
      81: dup
      82: ldc           #43                 // String Cannot determine a node to read (Known nodes: %s) with setting %s
      84: iconst_2
      85: anewarray     #14                 // class java/lang/Object
      88: dup
      89: iconst_0
      90: aload_0
      91: getfield      #4                  // Field knownNodes:Ljava/util/List;
      94: aastore
      95: dup
      96: iconst_1
      97: aload_0
      98: getfield      #36                 // Field readFrom:Lio/lettuce/core/ReadFrom;
     101: aastore
     102: invokestatic  #44                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     105: invokespecial #45                 // Method io/lettuce/core/RedisException."<init>":(Ljava/lang/String;)V
     108: athrow
     109: aload_2
     110: invokeinterface #46,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     115: astore_3
     116: aload_3
     117: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     122: ifeq          160
     125: aload_3
     126: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     131: checkcast     #47                 // class io/lettuce/core/models/role/RedisNodeDescription
     134: astore        4
     136: aload_0
     137: aload         4
     139: invokevirtual #48                 // Method getConnection:(Lio/lettuce/core/models/role/RedisNodeDescription;)Lio/lettuce/core/api/StatefulRedisConnection;
     142: astore        5
     144: aload         5
     146: invokeinterface #49,  1           // InterfaceMethod io/lettuce/core/api/StatefulRedisConnection.isOpen:()Z
     151: ifne          157
     154: goto          116
     157: aload         5
     159: areturn
     160: aload_0
     161: aload_2
     162: iconst_0
     163: invokeinterface #50,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     168: checkcast     #47                 // class io/lettuce/core/models/role/RedisNodeDescription
     171: invokevirtual #48                 // Method getConnection:(Lio/lettuce/core/models/role/RedisNodeDescription;)Lio/lettuce/core/api/StatefulRedisConnection;
     174: areturn
     175: astore_3
     176: new           #42                 // class io/lettuce/core/RedisException
     179: dup
     180: aload_3
     181: invokespecial #52                 // Method io/lettuce/core/RedisException."<init>":(Ljava/lang/Throwable;)V
     184: athrow
     185: aload_0
     186: aload_0
     187: invokevirtual #53                 // Method getMaster:()Lio/lettuce/core/models/role/RedisNodeDescription;
     190: invokevirtual #48                 // Method getConnection:(Lio/lettuce/core/models/role/RedisNodeDescription;)Lio/lettuce/core/api/StatefulRedisConnection;
     193: areturn
    Exception table:
       from    to  target type
         109   159   175   Class java/lang/RuntimeException
         160   174   175   Class java/lang/RuntimeException

  protected io.lettuce.core.api.StatefulRedisConnection<K, V> getConnection(io.lettuce.core.models.role.RedisNodeDescription);
    Code:
       0: aload_0
       1: getfield      #11                 // Field connections:Ljava/util/Map;
       4: new           #54                 // class io/lettuce/core/masterslave/MasterSlaveConnectionProvider$ConnectionKey
       7: dup
       8: aload_1
       9: invokeinterface #55,  1           // InterfaceMethod io/lettuce/core/models/role/RedisNodeDescription.getUri:()Lio/lettuce/core/RedisURI;
      14: invokevirtual #56                 // Method io/lettuce/core/RedisURI.getHost:()Ljava/lang/String;
      17: aload_1
      18: invokeinterface #55,  1           // InterfaceMethod io/lettuce/core/models/role/RedisNodeDescription.getUri:()Lio/lettuce/core/RedisURI;
      23: invokevirtual #57                 // Method io/lettuce/core/RedisURI.getPort:()I
      26: invokespecial #58                 // Method io/lettuce/core/masterslave/MasterSlaveConnectionProvider$ConnectionKey."<init>":(Ljava/lang/String;I)V
      29: aload_0
      30: getfield      #17                 // Field connectionFactory:Lio/lettuce/core/masterslave/MasterSlaveConnectionProvider$ConnectionFactory;
      33: invokeinterface #59,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      38: checkcast     #60                 // class io/lettuce/core/api/StatefulRedisConnection
      41: areturn

  protected long getConnectionCount();
    Code:
       0: aload_0
       1: getfield      #11                 // Field connections:Ljava/util/Map;
       4: invokeinterface #61,  1           // InterfaceMethod java/util/Map.size:()I
       9: i2l
      10: lreturn

  private java.util.Set<io.lettuce.core.masterslave.MasterSlaveConnectionProvider$ConnectionKey> getStaleConnectionKeys();
    Code:
       0: new           #62                 // class java/util/HashMap
       3: dup
       4: aload_0
       5: getfield      #11                 // Field connections:Ljava/util/Map;
       8: invokespecial #63                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      11: astore_1
      12: new           #64                 // class java/util/HashSet
      15: dup
      16: invokespecial #65                 // Method java/util/HashSet."<init>":()V
      19: astore_2
      20: aload_1
      21: invokeinterface #66,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      26: invokeinterface #19,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      31: astore_3
      32: aload_3
      33: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          95
      41: aload_3
      42: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #54                 // class io/lettuce/core/masterslave/MasterSlaveConnectionProvider$ConnectionKey
      50: astore        4
      52: aload         4
      54: invokestatic  #67                 // Method io/lettuce/core/masterslave/MasterSlaveConnectionProvider$ConnectionKey.access$100:(Lio/lettuce/core/masterslave/MasterSlaveConnectionProvider$ConnectionKey;)Ljava/lang/String;
      57: ifnull        83
      60: aload_0
      61: getfield      #4                  // Field knownNodes:Ljava/util/List;
      64: aload         4
      66: invokestatic  #67                 // Method io/lettuce/core/masterslave/MasterSlaveConnectionProvider$ConnectionKey.access$100:(Lio/lettuce/core/masterslave/MasterSlaveConnectionProvider$ConnectionKey;)Ljava/lang/String;
      69: aload         4
      71: invokestatic  #68                 // Method io/lettuce/core/masterslave/MasterSlaveConnectionProvider$ConnectionKey.access$200:(Lio/lettuce/core/masterslave/MasterSlaveConnectionProvider$ConnectionKey;)I
      74: invokestatic  #69                 // Method io/lettuce/core/masterslave/MasterSlaveUtils.findNodeByHostAndPort:(Ljava/util/Collection;Ljava/lang/String;I)Lio/lettuce/core/models/role/RedisNodeDescription;
      77: ifnull        83
      80: goto          32
      83: aload_2
      84: aload         4
      86: invokeinterface #70,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      91: pop
      92: goto          32
      95: aload_2
      96: areturn

  public void closeStaleConnections();
    Code:
       0: getstatic     #6                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       3: ldc           #71                 // String closeStaleConnections() count before expiring: {}
       5: aload_0
       6: invokevirtual #72                 // Method getConnectionCount:()J
       9: invokestatic  #73                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      12: invokeinterface #74,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      17: aload_0
      18: invokespecial #75                 // Method getStaleConnectionKeys:()Ljava/util/Set;
      21: astore_1
      22: aload_1
      23: invokeinterface #19,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      28: astore_2
      29: aload_2
      30: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          89
      38: aload_2
      39: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #54                 // class io/lettuce/core/masterslave/MasterSlaveConnectionProvider$ConnectionKey
      47: astore_3
      48: aload_0
      49: getfield      #11                 // Field connections:Ljava/util/Map;
      52: aload_3
      53: invokeinterface #76,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      58: checkcast     #60                 // class io/lettuce/core/api/StatefulRedisConnection
      61: astore        4
      63: aload         4
      65: ifnull        86
      68: aload_0
      69: getfield      #11                 // Field connections:Ljava/util/Map;
      72: aload_3
      73: invokeinterface #77,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: aload         4
      81: invokeinterface #78,  1           // InterfaceMethod io/lettuce/core/api/StatefulRedisConnection.close:()V
      86: goto          29
      89: getstatic     #6                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      92: ldc           #79                 // String closeStaleConnections() count after expiring: {}
      94: aload_0
      95: invokevirtual #72                 // Method getConnectionCount:()J
      98: invokestatic  #73                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     101: invokeinterface #74,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     106: return

  public void reset();
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method allConnections:()Ljava/util/Collection;
       4: invokedynamic #81,  0             // InvokeDynamic #0:accept:()Ljava/util/function/Consumer;
       9: invokeinterface #82,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      14: return

  public void close();
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method allConnections:()Ljava/util/Collection;
       4: astore_1
       5: aload_0
       6: getfield      #11                 // Field connections:Ljava/util/Map;
       9: invokeinterface #83,  1           // InterfaceMethod java/util/Map.clear:()V
      14: aload_1
      15: invokedynamic #84,  0             // InvokeDynamic #1:accept:()Ljava/util/function/Consumer;
      20: invokeinterface #82,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      25: return

  public void flushCommands();
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method allConnections:()Ljava/util/Collection;
       4: invokedynamic #85,  0             // InvokeDynamic #2:accept:()Ljava/util/function/Consumer;
       9: invokeinterface #82,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      14: return

  public void setAutoFlushCommands(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field stateLock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_2
       8: monitorexit
       9: goto          17
      12: astore_3
      13: aload_2
      14: monitorexit
      15: aload_3
      16: athrow
      17: aload_0
      18: invokevirtual #80                 // Method allConnections:()Ljava/util/Collection;
      21: iload_1
      22: invokedynamic #86,  0             // InvokeDynamic #3:accept:(Z)Ljava/util/function/Consumer;
      27: invokeinterface #82,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      32: return
    Exception table:
       from    to  target type
           7     9    12   any
          12    15    12   any

  protected java.util.Collection<io.lettuce.core.api.StatefulRedisConnection<K, V>> allConnections();
    Code:
       0: aload_0
       1: getfield      #11                 // Field connections:Ljava/util/Map;
       4: invokeinterface #87,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokestatic  #88                 // Method io/lettuce/core/internal/LettuceSets.newHashSet:(Ljava/util/Collection;)Ljava/util/Set;
      12: astore_1
      13: aload_1
      14: areturn

  public void setKnownNodes(java.util.Collection<io.lettuce.core.models.role.RedisNodeDescription>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field stateLock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #4                  // Field knownNodes:Ljava/util/List;
      11: invokeinterface #89,  1           // InterfaceMethod java/util/List.clear:()V
      16: aload_0
      17: getfield      #4                  // Field knownNodes:Ljava/util/List;
      20: aload_1
      21: invokeinterface #90,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      26: pop
      27: aload_0
      28: invokevirtual #91                 // Method closeStaleConnections:()V
      31: aload_2
      32: monitorexit
      33: goto          41
      36: astore_3
      37: aload_2
      38: monitorexit
      39: aload_3
      40: athrow
      41: return
    Exception table:
       from    to  target type
           7    33    36   any
          36    39    36   any

  public io.lettuce.core.ReadFrom getReadFrom();
    Code:
       0: aload_0
       1: getfield      #36                 // Field readFrom:Lio/lettuce/core/ReadFrom;
       4: areturn

  public void setReadFrom(io.lettuce.core.ReadFrom);
    Code:
       0: aload_0
       1: getfield      #2                  // Field stateLock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: aload_1
       9: putfield      #36                 // Field readFrom:Lio/lettuce/core/ReadFrom;
      12: aload_2
      13: monitorexit
      14: goto          22
      17: astore_3
      18: aload_2
      19: monitorexit
      20: aload_3
      21: athrow
      22: return
    Exception table:
       from    to  target type
           7    14    17   any
          17    20    17   any

  public io.lettuce.core.models.role.RedisNodeDescription getMaster();
    Code:
       0: aload_0
       1: getfield      #4                  // Field knownNodes:Ljava/util/List;
       4: invokeinterface #46,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          46
      19: aload_1
      20: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #47                 // class io/lettuce/core/models/role/RedisNodeDescription
      28: astore_2
      29: aload_2
      30: invokeinterface #92,  1           // InterfaceMethod io/lettuce/core/models/role/RedisNodeDescription.getRole:()Lio/lettuce/core/models/role/RedisInstance$Role;
      35: getstatic     #93                 // Field io/lettuce/core/models/role/RedisInstance$Role.MASTER:Lio/lettuce/core/models/role/RedisInstance$Role;
      38: if_acmpne     43
      41: aload_2
      42: areturn
      43: goto          10
      46: new           #42                 // class io/lettuce/core/RedisException
      49: dup
      50: ldc           #94                 // String Master is currently unknown: %s
      52: iconst_1
      53: anewarray     #14                 // class java/lang/Object
      56: dup
      57: iconst_0
      58: aload_0
      59: getfield      #4                  // Field knownNodes:Ljava/util/List;
      62: aastore
      63: invokestatic  #44                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      66: invokespecial #45                 // Method io/lettuce/core/RedisException."<init>":(Ljava/lang/String;)V
      69: athrow

  private io.lettuce.core.masterslave.MasterSlaveConnectionProvider$ConnectionKey toConnectionKey(io.lettuce.core.RedisURI);
    Code:
       0: new           #54                 // class io/lettuce/core/masterslave/MasterSlaveConnectionProvider$ConnectionKey
       3: dup
       4: aload_1
       5: invokevirtual #56                 // Method io/lettuce/core/RedisURI.getHost:()Ljava/lang/String;
       8: aload_1
       9: invokevirtual #57                 // Method io/lettuce/core/RedisURI.getPort:()I
      12: invokespecial #58                 // Method io/lettuce/core/masterslave/MasterSlaveConnectionProvider$ConnectionKey."<init>":(Ljava/lang/String;I)V
      15: areturn

  private static void lambda$setAutoFlushCommands$0(boolean, io.lettuce.core.api.StatefulRedisConnection);
    Code:
       0: aload_1
       1: iload_0
       2: invokeinterface #95,  2           // InterfaceMethod io/lettuce/core/api/StatefulRedisConnection.setAutoFlushCommands:(Z)V
       7: return

  static java.util.List access$000(io.lettuce.core.masterslave.MasterSlaveConnectionProvider);
    Code:
       0: aload_0
       1: getfield      #4                  // Field knownNodes:Ljava/util/List;
       4: areturn

  static io.lettuce.core.RedisURI access$300(io.lettuce.core.masterslave.MasterSlaveConnectionProvider);
    Code:
       0: aload_0
       1: getfield      #3                  // Field initialRedisUri:Lio/lettuce/core/RedisURI;
       4: areturn

  static java.lang.Object access$400(io.lettuce.core.masterslave.MasterSlaveConnectionProvider);
    Code:
       0: aload_0
       1: getfield      #2                  // Field stateLock:Ljava/lang/Object;
       4: areturn

  static boolean access$500(io.lettuce.core.masterslave.MasterSlaveConnectionProvider);
    Code:
       0: aload_0
       1: getfield      #1                  // Field autoFlushCommands:Z
       4: ireturn

  static {};
    Code:
       0: ldc           #96                 // class io/lettuce/core/masterslave/MasterSlaveConnectionProvider
       2: invokestatic  #97                 // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
       5: putstatic     #6                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       8: return
}
