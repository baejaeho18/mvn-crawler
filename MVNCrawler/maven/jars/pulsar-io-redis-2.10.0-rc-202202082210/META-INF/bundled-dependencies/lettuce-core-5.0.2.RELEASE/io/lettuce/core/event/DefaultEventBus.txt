Compiled from "DefaultEventBus.java"
public class io.lettuce.core.event.DefaultEventBus implements io.lettuce.core.event.EventBus {
  private final reactor.core.publisher.TopicProcessor<io.lettuce.core.event.Event> bus;

  private final reactor.core.scheduler.Scheduler scheduler;

  public io.lettuce.core.event.DefaultEventBus(reactor.core.scheduler.Scheduler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method reactor/core/publisher/TopicProcessor.create:()Lreactor/core/publisher/TopicProcessor;
       8: putfield      #3                  // Field bus:Lreactor/core/publisher/TopicProcessor;
      11: aload_0
      12: aload_1
      13: putfield      #4                  // Field scheduler:Lreactor/core/scheduler/Scheduler;
      16: return

  public reactor.core.publisher.Flux<io.lettuce.core.event.Event> get();
    Code:
       0: aload_0
       1: getfield      #3                  // Field bus:Lreactor/core/publisher/TopicProcessor;
       4: invokevirtual #5                  // Method reactor/core/publisher/TopicProcessor.onBackpressureDrop:()Lreactor/core/publisher/Flux;
       7: aload_0
       8: getfield      #4                  // Field scheduler:Lreactor/core/scheduler/Scheduler;
      11: invokevirtual #6                  // Method reactor/core/publisher/Flux.publishOn:(Lreactor/core/scheduler/Scheduler;)Lreactor/core/publisher/Flux;
      14: areturn

  public void publish(io.lettuce.core.event.Event);
    Code:
       0: aload_0
       1: getfield      #3                  // Field bus:Lreactor/core/publisher/TopicProcessor;
       4: aload_1
       5: invokevirtual #7                  // Method reactor/core/publisher/TopicProcessor.onNext:(Ljava/lang/Object;)V
       8: return
}
