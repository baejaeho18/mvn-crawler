Compiled from "RedisClusterPubSubCommands.java"
public interface io.lettuce.core.cluster.pubsub.api.sync.RedisClusterPubSubCommands<K, V> extends io.lettuce.core.pubsub.api.sync.RedisPubSubCommands<K, V> {
  public abstract io.lettuce.core.cluster.pubsub.StatefulRedisClusterPubSubConnection<K, V> getStatefulConnection();

  public default io.lettuce.core.cluster.pubsub.api.sync.PubSubNodeSelection<K, V> masters();
    Code:
       0: aload_0
       1: invokedynamic #1,  0              // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
       6: invokeinterface #2,  2            // InterfaceMethod nodes:(Ljava/util/function/Predicate;)Lio/lettuce/core/cluster/pubsub/api/sync/PubSubNodeSelection;
      11: areturn

  public default io.lettuce.core.cluster.pubsub.api.sync.PubSubNodeSelection<K, V> slaves();
    Code:
       0: aload_0
       1: invokedynamic #3,  0              // InvokeDynamic #1:test:()Ljava/util/function/Predicate;
       6: invokeinterface #2,  2            // InterfaceMethod nodes:(Ljava/util/function/Predicate;)Lio/lettuce/core/cluster/pubsub/api/sync/PubSubNodeSelection;
      11: areturn

  public default io.lettuce.core.cluster.pubsub.api.sync.PubSubNodeSelection<K, V> slaves(java.util.function.Predicate<io.lettuce.core.cluster.models.partitions.RedisClusterNode>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #4,  0              // InvokeDynamic #2:test:(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;
       7: invokeinterface #2,  2            // InterfaceMethod nodes:(Ljava/util/function/Predicate;)Lio/lettuce/core/cluster/pubsub/api/sync/PubSubNodeSelection;
      12: areturn

  public default io.lettuce.core.cluster.pubsub.api.sync.PubSubNodeSelection<K, V> all();
    Code:
       0: aload_0
       1: invokedynamic #5,  0              // InvokeDynamic #3:test:()Ljava/util/function/Predicate;
       6: invokeinterface #2,  2            // InterfaceMethod nodes:(Ljava/util/function/Predicate;)Lio/lettuce/core/cluster/pubsub/api/sync/PubSubNodeSelection;
      11: areturn

  public abstract io.lettuce.core.cluster.pubsub.api.sync.PubSubNodeSelection<K, V> nodes(java.util.function.Predicate<io.lettuce.core.cluster.models.partitions.RedisClusterNode>);

  public default io.lettuce.core.pubsub.StatefulRedisPubSubConnection getStatefulConnection();
    Code:
       0: aload_0
       1: invokeinterface #6,  1            // InterfaceMethod getStatefulConnection:()Lio/lettuce/core/cluster/pubsub/StatefulRedisClusterPubSubConnection;
       6: areturn

  public default io.lettuce.core.api.StatefulRedisConnection getStatefulConnection();
    Code:
       0: aload_0
       1: invokeinterface #6,  1            // InterfaceMethod getStatefulConnection:()Lio/lettuce/core/cluster/pubsub/StatefulRedisClusterPubSubConnection;
       6: areturn

  private static boolean lambda$all$3(io.lettuce.core.cluster.models.partitions.RedisClusterNode);
    Code:
       0: iconst_1
       1: ireturn

  private static boolean lambda$slaves$2(java.util.function.Predicate, io.lettuce.core.cluster.models.partitions.RedisClusterNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #7,  2            // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
       7: ifeq          24
      10: aload_1
      11: getstatic     #8                  // Field io/lettuce/core/cluster/models/partitions/RedisClusterNode$NodeFlag.SLAVE:Lio/lettuce/core/cluster/models/partitions/RedisClusterNode$NodeFlag;
      14: invokevirtual #9                  // Method io/lettuce/core/cluster/models/partitions/RedisClusterNode.is:(Lio/lettuce/core/cluster/models/partitions/RedisClusterNode$NodeFlag;)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  private static boolean lambda$slaves$1(io.lettuce.core.cluster.models.partitions.RedisClusterNode);
    Code:
       0: aload_0
       1: getstatic     #8                  // Field io/lettuce/core/cluster/models/partitions/RedisClusterNode$NodeFlag.SLAVE:Lio/lettuce/core/cluster/models/partitions/RedisClusterNode$NodeFlag;
       4: invokevirtual #9                  // Method io/lettuce/core/cluster/models/partitions/RedisClusterNode.is:(Lio/lettuce/core/cluster/models/partitions/RedisClusterNode$NodeFlag;)Z
       7: ireturn

  private static boolean lambda$masters$0(io.lettuce.core.cluster.models.partitions.RedisClusterNode);
    Code:
       0: aload_0
       1: getstatic     #10                 // Field io/lettuce/core/cluster/models/partitions/RedisClusterNode$NodeFlag.MASTER:Lio/lettuce/core/cluster/models/partitions/RedisClusterNode$NodeFlag;
       4: invokevirtual #9                  // Method io/lettuce/core/cluster/models/partitions/RedisClusterNode.is:(Lio/lettuce/core/cluster/models/partitions/RedisClusterNode$NodeFlag;)Z
       7: ireturn
}
