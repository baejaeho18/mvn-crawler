Compiled from "RedisChannelHandler.java"
public abstract class io.lettuce.core.RedisChannelHandler<K, V> implements java.io.Closeable, io.lettuce.core.protocol.ConnectionFacade {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private java.time.Duration timeout;

  private io.lettuce.core.CloseEvents closeEvents;

  private final io.lettuce.core.RedisChannelWriter channelWriter;

  private final boolean debugEnabled;

  private volatile boolean closed;

  private volatile boolean active;

  private volatile io.lettuce.core.ClientOptions clientOptions;

  public io.lettuce.core.RedisChannelHandler(io.lettuce.core.RedisChannelWriter, java.time.Duration);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class io/lettuce/core/CloseEvents
       8: dup
       9: invokespecial #3                  // Method io/lettuce/core/CloseEvents."<init>":()V
      12: putfield      #4                  // Field closeEvents:Lio/lettuce/core/CloseEvents;
      15: aload_0
      16: getstatic     #5                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      19: invokeinterface #6,  1            // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isDebugEnabled:()Z
      24: putfield      #7                  // Field debugEnabled:Z
      27: aload_0
      28: iconst_1
      29: putfield      #8                  // Field active:Z
      32: aload_0
      33: aload_1
      34: putfield      #9                  // Field channelWriter:Lio/lettuce/core/RedisChannelWriter;
      37: aload_1
      38: aload_0
      39: invokeinterface #10,  2           // InterfaceMethod io/lettuce/core/RedisChannelWriter.setConnectionFacade:(Lio/lettuce/core/protocol/ConnectionFacade;)V
      44: aload_0
      45: aload_2
      46: invokevirtual #11                 // Method setTimeout:(Ljava/time/Duration;)V
      49: return

  public void setTimeout(java.time.Duration);
    Code:
       0: aload_1
       1: ldc           #12                 // String Timeout duration must not be null
       3: invokestatic  #13                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokevirtual #14                 // Method java/time/Duration.isNegative:()Z
      10: ifne          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ldc           #15                 // String Timeout duration must be greater or equal to zero
      20: invokestatic  #16                 // Method io/lettuce/core/internal/LettuceAssert.isTrue:(ZLjava/lang/String;)V
      23: aload_0
      24: aload_1
      25: putfield      #17                 // Field timeout:Ljava/time/Duration;
      28: return

  public void setTimeout(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: aload_3
       2: lload_1
       3: invokevirtual #18                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
       6: invokestatic  #19                 // Method java/time/Duration.ofNanos:(J)Ljava/time/Duration;
       9: invokevirtual #11                 // Method setTimeout:(Ljava/time/Duration;)V
      12: return

  public synchronized void close();
    Code:
       0: aload_0
       1: getfield      #7                  // Field debugEnabled:Z
       4: ifeq          17
       7: getstatic     #5                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      10: ldc           #20                 // String close()
      12: invokeinterface #21,  2           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;)V
      17: aload_0
      18: getfield      #22                 // Field closed:Z
      21: ifeq          35
      24: getstatic     #5                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      27: ldc           #23                 // String Connection is already closed
      29: invokeinterface #24,  2           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;)V
      34: return
      35: aload_0
      36: getfield      #22                 // Field closed:Z
      39: ifne          80
      42: aload_0
      43: iconst_0
      44: putfield      #8                  // Field active:Z
      47: aload_0
      48: iconst_1
      49: putfield      #22                 // Field closed:Z
      52: aload_0
      53: getfield      #9                  // Field channelWriter:Lio/lettuce/core/RedisChannelWriter;
      56: invokeinterface #25,  1           // InterfaceMethod io/lettuce/core/RedisChannelWriter.close:()V
      61: aload_0
      62: getfield      #4                  // Field closeEvents:Lio/lettuce/core/CloseEvents;
      65: aload_0
      66: invokevirtual #26                 // Method io/lettuce/core/CloseEvents.fireEventClosed:(Ljava/lang/Object;)V
      69: aload_0
      70: new           #2                  // class io/lettuce/core/CloseEvents
      73: dup
      74: invokespecial #3                  // Method io/lettuce/core/CloseEvents."<init>":()V
      77: putfield      #4                  // Field closeEvents:Lio/lettuce/core/CloseEvents;
      80: return

  protected <T> io.lettuce.core.protocol.RedisCommand<K, V, T> dispatch(io.lettuce.core.protocol.RedisCommand<K, V, T>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field debugEnabled:Z
       4: ifeq          18
       7: getstatic     #5                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      10: ldc           #27                 // String dispatching command {}
      12: aload_1
      13: invokeinterface #28,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      18: aload_0
      19: getfield      #9                  // Field channelWriter:Lio/lettuce/core/RedisChannelWriter;
      22: aload_1
      23: invokeinterface #29,  2           // InterfaceMethod io/lettuce/core/RedisChannelWriter.write:(Lio/lettuce/core/protocol/RedisCommand;)Lio/lettuce/core/protocol/RedisCommand;
      28: areturn

  protected java.util.Collection<io.lettuce.core.protocol.RedisCommand<K, V, ?>> dispatch(java.util.Collection<? extends io.lettuce.core.protocol.RedisCommand<K, V, ?>>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field debugEnabled:Z
       4: ifeq          18
       7: getstatic     #5                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      10: ldc           #30                 // String dispatching commands {}
      12: aload_1
      13: invokeinterface #28,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      18: aload_0
      19: getfield      #9                  // Field channelWriter:Lio/lettuce/core/RedisChannelWriter;
      22: aload_1
      23: invokeinterface #31,  2           // InterfaceMethod io/lettuce/core/RedisChannelWriter.write:(Ljava/util/Collection;)Ljava/util/Collection;
      28: areturn

  public void registerCloseables(java.util.Collection<java.io.Closeable>, java.io.Closeable...);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #32                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       5: invokeinterface #33,  2           // InterfaceMethod java/util/Collection.addAll:(Ljava/util/Collection;)Z
      10: pop
      11: aload_0
      12: aload_0
      13: aload_2
      14: aload_1
      15: invokedynamic #34,  0             // InvokeDynamic #0:resourceClosed:(Lio/lettuce/core/RedisChannelHandler;[Ljava/io/Closeable;Ljava/util/Collection;)Lio/lettuce/core/CloseEvents$CloseListener;
      20: invokevirtual #35                 // Method addListener:(Lio/lettuce/core/CloseEvents$CloseListener;)V
      23: return

  protected void addListener(io.lettuce.core.CloseEvents$CloseListener);
    Code:
       0: aload_0
       1: getfield      #4                  // Field closeEvents:Lio/lettuce/core/CloseEvents;
       4: aload_1
       5: invokevirtual #36                 // Method io/lettuce/core/CloseEvents.addListener:(Lio/lettuce/core/CloseEvents$CloseListener;)V
       8: return

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #22                 // Field closed:Z
       4: ireturn

  public void activated();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #8                  // Field active:Z
       5: aload_0
       6: iconst_0
       7: putfield      #22                 // Field closed:Z
      10: return

  public void deactivated();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #8                  // Field active:Z
       5: return

  public io.lettuce.core.RedisChannelWriter getChannelWriter();
    Code:
       0: aload_0
       1: getfield      #9                  // Field channelWriter:Lio/lettuce/core/RedisChannelWriter;
       4: areturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #8                  // Field active:Z
       4: ireturn

  public void reset();
    Code:
       0: aload_0
       1: getfield      #9                  // Field channelWriter:Lio/lettuce/core/RedisChannelWriter;
       4: invokeinterface #37,  1           // InterfaceMethod io/lettuce/core/RedisChannelWriter.reset:()V
       9: return

  public io.lettuce.core.ClientOptions getOptions();
    Code:
       0: aload_0
       1: getfield      #38                 // Field clientOptions:Lio/lettuce/core/ClientOptions;
       4: areturn

  public void setOptions(io.lettuce.core.ClientOptions);
    Code:
       0: aload_1
       1: ldc           #39                 // String ClientOptions must not be null
       3: invokestatic  #13                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #38                 // Field clientOptions:Lio/lettuce/core/ClientOptions;
      11: return

  public java.time.Duration getTimeout();
    Code:
       0: aload_0
       1: getfield      #17                 // Field timeout:Ljava/time/Duration;
       4: areturn

  protected <T> T syncHandler(java.lang.Object, java.lang.Class<?>...);
    Code:
       0: new           #40                 // class io/lettuce/core/FutureSyncInvocationHandler
       3: dup
       4: aload_0
       5: checkcast     #41                 // class io/lettuce/core/api/StatefulConnection
       8: aload_1
       9: aload_2
      10: invokespecial #42                 // Method io/lettuce/core/FutureSyncInvocationHandler."<init>":(Lio/lettuce/core/api/StatefulConnection;Ljava/lang/Object;[Ljava/lang/Class;)V
      13: astore_3
      14: ldc           #43                 // class io/lettuce/core/AbstractRedisClient
      16: invokevirtual #44                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      19: aload_2
      20: aload_3
      21: invokestatic  #45                 // Method java/lang/reflect/Proxy.newProxyInstance:(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;
      24: areturn

  public void setAutoFlushCommands(boolean);
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method getChannelWriter:()Lio/lettuce/core/RedisChannelWriter;
       4: iload_1
       5: invokeinterface #47,  2           // InterfaceMethod io/lettuce/core/RedisChannelWriter.setAutoFlushCommands:(Z)V
      10: return

  public void flushCommands();
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method getChannelWriter:()Lio/lettuce/core/RedisChannelWriter;
       4: invokeinterface #48,  1           // InterfaceMethod io/lettuce/core/RedisChannelWriter.flushCommands:()V
       9: return

  private void lambda$registerCloseables$0(java.io.Closeable[], java.util.Collection, java.lang.Object);
    Code:
       0: aload_1
       1: astore        4
       3: aload         4
       5: arraylength
       6: istore        5
       8: iconst_0
       9: istore        6
      11: iload         6
      13: iload         5
      15: if_icmpge     74
      18: aload         4
      20: iload         6
      22: aaload
      23: astore        7
      25: aload         7
      27: aload_0
      28: if_acmpne     34
      31: goto          68
      34: aload         7
      36: invokeinterface #49,  1           // InterfaceMethod java/io/Closeable.close:()V
      41: goto          68
      44: astore        8
      46: aload_0
      47: getfield      #7                  // Field debugEnabled:Z
      50: ifeq          68
      53: getstatic     #5                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      56: aload         8
      58: invokevirtual #51                 // Method java/io/IOException.toString:()Ljava/lang/String;
      61: aload         8
      63: invokeinterface #52,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      68: iinc          6, 1
      71: goto          11
      74: aload_2
      75: aload_1
      76: invokestatic  #32                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      79: invokeinterface #53,  2           // InterfaceMethod java/util/Collection.removeAll:(Ljava/util/Collection;)Z
      84: pop
      85: return
    Exception table:
       from    to  target type
          34    41    44   Class java/io/IOException

  static {};
    Code:
       0: ldc           #54                 // class io/lettuce/core/RedisChannelHandler
       2: invokestatic  #55                 // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
       5: putstatic     #5                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       8: return
}
