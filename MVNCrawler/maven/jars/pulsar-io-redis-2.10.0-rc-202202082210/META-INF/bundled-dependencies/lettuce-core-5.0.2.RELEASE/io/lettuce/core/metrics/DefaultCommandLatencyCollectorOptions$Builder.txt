Compiled from "DefaultCommandLatencyCollectorOptions.java"
public class io.lettuce.core.metrics.DefaultCommandLatencyCollectorOptions$Builder {
  private java.util.concurrent.TimeUnit targetUnit;

  private double[] targetPercentiles;

  private boolean resetLatenciesAfterEvent;

  private boolean localDistinction;

  private boolean enabled;

  private io.lettuce.core.metrics.DefaultCommandLatencyCollectorOptions$Builder();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #9                  // Field io/lettuce/core/metrics/DefaultCommandLatencyCollectorOptions.DEFAULT_TARGET_UNIT:Ljava/util/concurrent/TimeUnit;
       8: putfield      #7                  // Field targetUnit:Ljava/util/concurrent/TimeUnit;
      11: aload_0
      12: getstatic     #10                 // Field io/lettuce/core/metrics/DefaultCommandLatencyCollectorOptions.DEFAULT_TARGET_PERCENTILES:[D
      15: putfield      #6                  // Field targetPercentiles:[D
      18: aload_0
      19: iconst_1
      20: putfield      #5                  // Field resetLatenciesAfterEvent:Z
      23: aload_0
      24: iconst_0
      25: putfield      #4                  // Field localDistinction:Z
      28: aload_0
      29: iconst_1
      30: putfield      #3                  // Field enabled:Z
      33: return

  public io.lettuce.core.metrics.DefaultCommandLatencyCollectorOptions$Builder disable();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #3                  // Field enabled:Z
       5: aload_0
       6: areturn

  public io.lettuce.core.metrics.DefaultCommandLatencyCollectorOptions$Builder targetUnit(java.util.concurrent.TimeUnit);
    Code:
       0: aload_1
       1: ldc           #11                 // String TargetUnit must not be null
       3: invokestatic  #12                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #7                  // Field targetUnit:Ljava/util/concurrent/TimeUnit;
      11: aload_0
      12: areturn

  public io.lettuce.core.metrics.DefaultCommandLatencyCollectorOptions$Builder targetPercentiles(double[]);
    Code:
       0: aload_1
       1: ldc           #13                 // String TargetPercentiles must not be null
       3: invokestatic  #12                 // Method io/lettuce/core/internal/LettuceAssert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #6                  // Field targetPercentiles:[D
      11: aload_0
      12: areturn

  public io.lettuce.core.metrics.DefaultCommandLatencyCollectorOptions$Builder resetLatenciesAfterEvent(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field resetLatenciesAfterEvent:Z
       5: aload_0
       6: areturn

  public io.lettuce.core.metrics.DefaultCommandLatencyCollectorOptions$Builder localDistinction(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field localDistinction:Z
       5: aload_0
       6: areturn

  public io.lettuce.core.metrics.DefaultCommandLatencyCollectorOptions build();
    Code:
       0: new           #1                  // class io/lettuce/core/metrics/DefaultCommandLatencyCollectorOptions
       3: dup
       4: aload_0
       5: invokespecial #14                 // Method io/lettuce/core/metrics/DefaultCommandLatencyCollectorOptions."<init>":(Lio/lettuce/core/metrics/DefaultCommandLatencyCollectorOptions$Builder;)V
       8: areturn

  static java.util.concurrent.TimeUnit access$000(io.lettuce.core.metrics.DefaultCommandLatencyCollectorOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #7                  // Field targetUnit:Ljava/util/concurrent/TimeUnit;
       4: areturn

  static double[] access$100(io.lettuce.core.metrics.DefaultCommandLatencyCollectorOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #6                  // Field targetPercentiles:[D
       4: areturn

  static boolean access$200(io.lettuce.core.metrics.DefaultCommandLatencyCollectorOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #5                  // Field resetLatenciesAfterEvent:Z
       4: ireturn

  static boolean access$300(io.lettuce.core.metrics.DefaultCommandLatencyCollectorOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #4                  // Field localDistinction:Z
       4: ireturn

  static boolean access$400(io.lettuce.core.metrics.DefaultCommandLatencyCollectorOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #3                  // Field enabled:Z
       4: ireturn

  io.lettuce.core.metrics.DefaultCommandLatencyCollectorOptions$Builder(io.lettuce.core.metrics.DefaultCommandLatencyCollectorOptions$1);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method "<init>":()V
       4: return
}
