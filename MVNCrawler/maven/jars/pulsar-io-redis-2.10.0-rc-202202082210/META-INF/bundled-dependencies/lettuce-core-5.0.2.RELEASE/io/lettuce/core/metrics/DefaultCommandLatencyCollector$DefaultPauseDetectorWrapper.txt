Compiled from "DefaultCommandLatencyCollector.java"
class io.lettuce.core.metrics.DefaultCommandLatencyCollector$DefaultPauseDetectorWrapper implements io.lettuce.core.metrics.DefaultCommandLatencyCollector$PauseDetectorWrapper {
  private static final java.util.concurrent.atomic.AtomicLong instanceCounter;

  private final java.util.concurrent.atomic.AtomicLong counter;

  private volatile org.LatencyUtils.PauseDetector pauseDetector;

  io.lettuce.core.metrics.DefaultCommandLatencyCollector$DefaultPauseDetectorWrapper();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      12: putfield      #5                  // Field counter:Ljava/util/concurrent/atomic/AtomicLong;
      15: return

  org.LatencyUtils.PauseDetector getPauseDetector();
    Code:
       0: aload_0
       1: getfield      #1                  // Field pauseDetector:Lorg/LatencyUtils/PauseDetector;
       4: ifnonnull     26
       7: lconst_1
       8: invokestatic  #6                  // Method java/lang/Thread.sleep:(J)V
      11: goto          0
      14: astore_1
      15: invokestatic  #8                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      18: invokevirtual #9                  // Method java/lang/Thread.interrupt:()V
      21: aload_0
      22: getfield      #1                  // Field pauseDetector:Lorg/LatencyUtils/PauseDetector;
      25: areturn
      26: aload_0
      27: getfield      #1                  // Field pauseDetector:Lorg/LatencyUtils/PauseDetector;
      30: areturn
    Exception table:
       from    to  target type
           7    11    14   Class java/lang/InterruptedException

  public void retain();
    Code:
       0: aload_0
       1: getfield      #5                  // Field counter:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       7: lconst_1
       8: lcmp
       9: ifne          85
      12: getstatic     #11                 // Field instanceCounter:Ljava/util/concurrent/atomic/AtomicLong;
      15: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
      18: lconst_0
      19: lcmp
      20: ifle          39
      23: aload_0
      24: invokevirtual #13                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: invokestatic  #14                 // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
      30: astore_1
      31: aload_1
      32: ldc           #15                 // String Initialized PauseDetectorWrapper more than once.
      34: invokeinterface #16,  2           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.info:(Ljava/lang/String;)V
      39: aload_0
      40: new           #17                 // class org/LatencyUtils/SimplePauseDetector
      43: dup
      44: getstatic     #18                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      47: ldc2_w        #19                 // long 10l
      50: invokevirtual #21                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      53: getstatic     #18                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      56: ldc2_w        #19                 // long 10l
      59: invokevirtual #21                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      62: iconst_3
      63: invokespecial #22                 // Method org/LatencyUtils/SimplePauseDetector."<init>":(JJI)V
      66: putfield      #1                  // Field pauseDetector:Lorg/LatencyUtils/PauseDetector;
      69: invokestatic  #23                 // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      72: new           #24                 // class io/lettuce/core/metrics/DefaultCommandLatencyCollector$DefaultPauseDetectorWrapper$1
      75: dup
      76: aload_0
      77: ldc           #25                 // String ShutdownHook for SimplePauseDetector
      79: invokespecial #26                 // Method io/lettuce/core/metrics/DefaultCommandLatencyCollector$DefaultPauseDetectorWrapper$1."<init>":(Lio/lettuce/core/metrics/DefaultCommandLatencyCollector$DefaultPauseDetectorWrapper;Ljava/lang/String;)V
      82: invokevirtual #27                 // Method java/lang/Runtime.addShutdownHook:(Ljava/lang/Thread;)V
      85: return

  public void release();
    Code:
       0: aload_0
       1: getfield      #5                  // Field counter:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicLong.decrementAndGet:()J
       7: lconst_0
       8: lcmp
       9: ifne          31
      12: getstatic     #11                 // Field instanceCounter:Ljava/util/concurrent/atomic/AtomicLong;
      15: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicLong.decrementAndGet:()J
      18: pop2
      19: aload_0
      20: getfield      #1                  // Field pauseDetector:Lorg/LatencyUtils/PauseDetector;
      23: invokevirtual #29                 // Method org/LatencyUtils/PauseDetector.shutdown:()V
      26: aload_0
      27: aconst_null
      28: putfield      #1                  // Field pauseDetector:Lorg/LatencyUtils/PauseDetector;
      31: return

  static org.LatencyUtils.PauseDetector access$400(io.lettuce.core.metrics.DefaultCommandLatencyCollector$DefaultPauseDetectorWrapper);
    Code:
       0: aload_0
       1: getfield      #1                  // Field pauseDetector:Lorg/LatencyUtils/PauseDetector;
       4: areturn

  static {};
    Code:
       0: new           #3                  // class java/util/concurrent/atomic/AtomicLong
       3: dup
       4: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
       7: putstatic     #11                 // Field instanceCounter:Ljava/util/concurrent/atomic/AtomicLong;
      10: return
}
