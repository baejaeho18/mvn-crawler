Compiled from "BatchExecutableCommandLookupStrategy.java"
class io.lettuce.core.dynamic.BatchExecutableCommandLookupStrategy extends io.lettuce.core.dynamic.ExecutableCommandLookupStrategySupport {
  private final java.util.Set<java.lang.Class<?>> SYNCHRONOUS_RETURN_TYPES;

  private final io.lettuce.core.dynamic.Batcher batcher;

  private final io.lettuce.core.api.StatefulConnection<java.lang.Object, java.lang.Object> connection;

  public io.lettuce.core.dynamic.BatchExecutableCommandLookupStrategy(java.util.List<io.lettuce.core.codec.RedisCodec<?, ?>>, io.lettuce.core.dynamic.output.CommandOutputFactoryResolver, io.lettuce.core.dynamic.CommandMethodVerifier, io.lettuce.core.dynamic.Batcher, io.lettuce.core.api.StatefulConnection<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #3                  // Method io/lettuce/core/dynamic/ExecutableCommandLookupStrategySupport."<init>":(Ljava/util/List;Lio/lettuce/core/dynamic/output/CommandOutputFactoryResolver;Lio/lettuce/core/dynamic/CommandMethodVerifier;)V
       7: aload_0
       8: new           #4                  // class java/util/HashSet
      11: dup
      12: iconst_2
      13: anewarray     #5                  // class java/lang/Class
      16: dup
      17: iconst_0
      18: ldc           #6                  // class java/lang/Void
      20: aastore
      21: dup
      22: iconst_1
      23: getstatic     #7                  // Field java/lang/Void.TYPE:Ljava/lang/Class;
      26: aastore
      27: invokestatic  #8                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      30: invokespecial #9                  // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      33: putfield      #10                 // Field SYNCHRONOUS_RETURN_TYPES:Ljava/util/Set;
      36: aload_0
      37: aload         4
      39: putfield      #2                  // Field batcher:Lio/lettuce/core/dynamic/Batcher;
      42: aload_0
      43: aload         5
      45: putfield      #1                  // Field connection:Lio/lettuce/core/api/StatefulConnection;
      48: return

  public static boolean supports(io.lettuce.core.dynamic.CommandMethod);
    Code:
       0: aload_0
       1: invokeinterface #11,  1           // InterfaceMethod io/lettuce/core/dynamic/CommandMethod.isBatchExecution:()Z
       6: ifne          16
       9: aload_0
      10: invokestatic  #12                 // Method isForceFlush:(Lio/lettuce/core/dynamic/CommandMethod;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  private static boolean isForceFlush(io.lettuce.core.dynamic.CommandMethod);
    Code:
       0: aload_0
       1: invokeinterface #13,  1           // InterfaceMethod io/lettuce/core/dynamic/CommandMethod.getName:()Ljava/lang/String;
       6: ldc           #14                 // String flush
       8: invokevirtual #15                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      11: ifeq          35
      14: aload_0
      15: invokeinterface #16,  1           // InterfaceMethod io/lettuce/core/dynamic/CommandMethod.getMethod:()Ljava/lang/reflect/Method;
      20: invokevirtual #17                 // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
      23: ldc           #18                 // class io/lettuce/core/dynamic/batch/BatchExecutor
      25: invokevirtual #19                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      28: ifeq          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ireturn

  public io.lettuce.core.dynamic.ExecutableCommand resolveCommandMethod(io.lettuce.core.dynamic.CommandMethod, io.lettuce.core.dynamic.RedisCommandsMetadata);
    Code:
       0: aload_1
       1: invokeinterface #20,  1           // InterfaceMethod io/lettuce/core/dynamic/CommandMethod.isReactiveExecution:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ldc           #21                 // String Command method %s not supported by this command lookup strategy
      16: iconst_1
      17: anewarray     #22                 // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_1
      23: aastore
      24: invokestatic  #23                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      27: invokestatic  #24                 // Method io/lettuce/core/internal/LettuceAssert.isTrue:(ZLjava/lang/String;)V
      30: aload_1
      31: invokeinterface #25,  1           // InterfaceMethod io/lettuce/core/dynamic/CommandMethod.getParameters:()Lio/lettuce/core/dynamic/parameter/Parameters;
      36: checkcast     #26                 // class io/lettuce/core/dynamic/parameter/ExecutionSpecificParameters
      39: astore_3
      40: aload_3
      41: invokevirtual #27                 // Method io/lettuce/core/dynamic/parameter/ExecutionSpecificParameters.hasTimeoutIndex:()Z
      44: ifeq          68
      47: new           #28                 // class java/lang/IllegalArgumentException
      50: dup
      51: ldc           #29                 // String Timeout and batching is not supported, offending command method %s
      53: iconst_1
      54: anewarray     #22                 // class java/lang/Object
      57: dup
      58: iconst_0
      59: aload_1
      60: aastore
      61: invokestatic  #23                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      64: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: aload_1
      69: invokestatic  #12                 // Method isForceFlush:(Lio/lettuce/core/dynamic/CommandMethod;)Z
      72: ifeq          85
      75: new           #31                 // class io/lettuce/core/dynamic/BatchExecutableCommandLookupStrategy$1
      78: dup
      79: aload_0
      80: aload_1
      81: invokespecial #32                 // Method io/lettuce/core/dynamic/BatchExecutableCommandLookupStrategy$1."<init>":(Lio/lettuce/core/dynamic/BatchExecutableCommandLookupStrategy;Lio/lettuce/core/dynamic/CommandMethod;)V
      84: areturn
      85: aload_1
      86: invokeinterface #33,  1           // InterfaceMethod io/lettuce/core/dynamic/CommandMethod.isFutureExecution:()Z
      91: ifne          115
      94: aload_0
      95: getfield      #10                 // Field SYNCHRONOUS_RETURN_TYPES:Ljava/util/Set;
      98: aload_1
      99: invokeinterface #34,  1           // InterfaceMethod io/lettuce/core/dynamic/CommandMethod.getReturnType:()Lio/lettuce/core/dynamic/support/ResolvableType;
     104: invokevirtual #35                 // Method io/lettuce/core/dynamic/support/ResolvableType.getRawClass:()Ljava/lang/Class;
     107: invokeinterface #36,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     112: ifeq          142
     115: aload_0
     116: aload_1
     117: aload_2
     118: invokespecial #37                 // Method io/lettuce/core/dynamic/ExecutableCommandLookupStrategySupport.resolveCommandFactory:(Lio/lettuce/core/dynamic/CommandMethod;Lio/lettuce/core/dynamic/RedisCommandsMetadata;)Lio/lettuce/core/dynamic/CommandFactory;
     121: astore        4
     123: new           #38                 // class io/lettuce/core/dynamic/BatchExecutableCommand
     126: dup
     127: aload_1
     128: aload         4
     130: aload_0
     131: getfield      #2                  // Field batcher:Lio/lettuce/core/dynamic/Batcher;
     134: aload_0
     135: getfield      #1                  // Field connection:Lio/lettuce/core/api/StatefulConnection;
     138: invokespecial #39                 // Method io/lettuce/core/dynamic/BatchExecutableCommand."<init>":(Lio/lettuce/core/dynamic/CommandMethod;Lio/lettuce/core/dynamic/CommandFactory;Lio/lettuce/core/dynamic/Batcher;Lio/lettuce/core/api/StatefulConnection;)V
     141: areturn
     142: new           #28                 // class java/lang/IllegalArgumentException
     145: dup
     146: ldc           #40                 // String Batching command method %s must declare either a Future or void return type
     148: iconst_1
     149: anewarray     #22                 // class java/lang/Object
     152: dup
     153: iconst_0
     154: aload_1
     155: aastore
     156: invokestatic  #23                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     159: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     162: athrow

  static io.lettuce.core.dynamic.Batcher access$000(io.lettuce.core.dynamic.BatchExecutableCommandLookupStrategy);
    Code:
       0: aload_0
       1: getfield      #2                  // Field batcher:Lio/lettuce/core/dynamic/Batcher;
       4: areturn

  static io.lettuce.core.api.StatefulConnection access$100(io.lettuce.core.dynamic.BatchExecutableCommandLookupStrategy);
    Code:
       0: aload_0
       1: getfield      #1                  // Field connection:Lio/lettuce/core/api/StatefulConnection;
       4: areturn
}
