Compiled from "DefaultCommandLatencyCollector.java"
public class io.lettuce.core.metrics.DefaultCommandLatencyCollector implements io.lettuce.core.metrics.CommandLatencyCollector {
  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<io.lettuce.core.metrics.DefaultCommandLatencyCollector, io.lettuce.core.metrics.DefaultCommandLatencyCollector$PauseDetectorWrapper> PAUSE_DETECTOR_UPDATER;

  private static final boolean LATENCY_UTILS_AVAILABLE;

  private static final boolean HDR_UTILS_AVAILABLE;

  private static final io.lettuce.core.metrics.DefaultCommandLatencyCollector$PauseDetectorWrapper GLOBAL_PAUSE_DETECTOR;

  private static final long MIN_LATENCY;

  private static final long MAX_LATENCY;

  private final io.lettuce.core.metrics.CommandLatencyCollectorOptions options;

  private volatile io.lettuce.core.metrics.DefaultCommandLatencyCollector$PauseDetectorWrapper pauseDetectorWrapper;

  private final java.util.concurrent.atomic.AtomicReference<java.util.Map<io.lettuce.core.metrics.CommandLatencyId, io.lettuce.core.metrics.DefaultCommandLatencyCollector$Latencies>> latencyMetricsRef;

  private volatile boolean stopped;

  private final java.util.function.Function<io.lettuce.core.metrics.CommandLatencyId, io.lettuce.core.metrics.DefaultCommandLatencyCollector$Latencies> createLatencies;

  public io.lettuce.core.metrics.DefaultCommandLatencyCollector(io.lettuce.core.metrics.CommandLatencyCollectorOptions);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokestatic  #5                  // Method createNewLatencyMap:()Ljava/util/concurrent/ConcurrentHashMap;
      12: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      15: putfield      #7                  // Field latencyMetricsRef:Ljava/util/concurrent/atomic/AtomicReference;
      18: aload_0
      19: aload_1
      20: putfield      #8                  // Field options:Lio/lettuce/core/metrics/CommandLatencyCollectorOptions;
      23: aload_0
      24: aload_0
      25: aload_1
      26: invokedynamic #9,  0              // InvokeDynamic #0:apply:(Lio/lettuce/core/metrics/DefaultCommandLatencyCollector;Lio/lettuce/core/metrics/CommandLatencyCollectorOptions;)Ljava/util/function/Function;
      31: putfield      #10                 // Field createLatencies:Ljava/util/function/Function;
      34: return

  public void recordCommandLatency(java.net.SocketAddress, java.net.SocketAddress, io.lettuce.core.protocol.ProtocolKeyword, long, long);
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method isEnabled:()Z
       4: ifne          8
       7: return
       8: aload_0
       9: getfield      #7                  // Field latencyMetricsRef:Ljava/util/concurrent/atomic/AtomicReference;
      12: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      15: checkcast     #13                 // class java/util/Map
      18: aload_0
      19: aload_1
      20: aload_2
      21: aload_3
      22: invokespecial #14                 // Method createId:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lio/lettuce/core/protocol/ProtocolKeyword;)Lio/lettuce/core/metrics/CommandLatencyId;
      25: aload_0
      26: getfield      #10                 // Field createLatencies:Ljava/util/function/Function;
      29: invokeinterface #15,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      34: checkcast     #16                 // class io/lettuce/core/metrics/DefaultCommandLatencyCollector$Latencies
      37: astore        8
      39: aload         8
      41: invokestatic  #17                 // Method io/lettuce/core/metrics/DefaultCommandLatencyCollector$Latencies.access$000:(Lio/lettuce/core/metrics/DefaultCommandLatencyCollector$Latencies;)Lorg/LatencyUtils/LatencyStats;
      44: aload_0
      45: lload         4
      47: invokespecial #18                 // Method rangify:(J)J
      50: invokevirtual #19                 // Method org/LatencyUtils/LatencyStats.recordLatency:(J)V
      53: aload         8
      55: invokestatic  #20                 // Method io/lettuce/core/metrics/DefaultCommandLatencyCollector$Latencies.access$100:(Lio/lettuce/core/metrics/DefaultCommandLatencyCollector$Latencies;)Lorg/LatencyUtils/LatencyStats;
      58: aload_0
      59: lload         6
      61: invokespecial #18                 // Method rangify:(J)J
      64: invokevirtual #19                 // Method org/LatencyUtils/LatencyStats.recordLatency:(J)V
      67: return

  private io.lettuce.core.metrics.CommandLatencyId createId(java.net.SocketAddress, java.net.SocketAddress, io.lettuce.core.protocol.ProtocolKeyword);
    Code:
       0: aload_0
       1: getfield      #8                  // Field options:Lio/lettuce/core/metrics/CommandLatencyCollectorOptions;
       4: invokeinterface #21,  1           // InterfaceMethod io/lettuce/core/metrics/CommandLatencyCollectorOptions.localDistinction:()Z
       9: ifeq          16
      12: aload_1
      13: goto          19
      16: getstatic     #22                 // Field io/netty/channel/local/LocalAddress.ANY:Lio/netty/channel/local/LocalAddress;
      19: aload_2
      20: aload_3
      21: invokestatic  #23                 // Method io/lettuce/core/metrics/CommandLatencyId.create:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lio/lettuce/core/protocol/ProtocolKeyword;)Lio/lettuce/core/metrics/CommandLatencyId;
      24: areturn

  private long rangify(long);
    Code:
       0: ldc2_w        #25                 // long 1000l
       3: getstatic     #27                 // Field MAX_LATENCY:J
       6: lload_1
       7: invokestatic  #28                 // Method java/lang/Math.min:(JJ)J
      10: invokestatic  #29                 // Method java/lang/Math.max:(JJ)J
      13: lreturn

  public boolean isEnabled();
    Code:
       0: aload_0
       1: getfield      #8                  // Field options:Lio/lettuce/core/metrics/CommandLatencyCollectorOptions;
       4: invokeinterface #30,  1           // InterfaceMethod io/lettuce/core/metrics/CommandLatencyCollectorOptions.isEnabled:()Z
       9: ifeq          23
      12: aload_0
      13: getfield      #31                 // Field stopped:Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public void shutdown();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #31                 // Field stopped:Z
       5: getstatic     #32                 // Field PAUSE_DETECTOR_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       8: aload_0
       9: invokevirtual #33                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #34                 // class io/lettuce/core/metrics/DefaultCommandLatencyCollector$PauseDetectorWrapper
      15: astore_1
      16: aload_1
      17: ifnull        38
      20: getstatic     #32                 // Field PAUSE_DETECTOR_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      23: aload_0
      24: aload_1
      25: aconst_null
      26: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      29: ifeq          38
      32: aload_1
      33: invokeinterface #36,  1           // InterfaceMethod io/lettuce/core/metrics/DefaultCommandLatencyCollector$PauseDetectorWrapper.release:()V
      38: aload_0
      39: getfield      #7                  // Field latencyMetricsRef:Ljava/util/concurrent/atomic/AtomicReference;
      42: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      45: checkcast     #13                 // class java/util/Map
      48: astore_2
      49: aload_0
      50: getfield      #7                  // Field latencyMetricsRef:Ljava/util/concurrent/atomic/AtomicReference;
      53: aload_2
      54: invokestatic  #37                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      57: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      60: ifeq          79
      63: aload_2
      64: invokeinterface #39,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      69: invokedynamic #40,  0             // InvokeDynamic #1:accept:()Ljava/util/function/Consumer;
      74: invokeinterface #41,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      79: return

  public java.util.Map<io.lettuce.core.metrics.CommandLatencyId, io.lettuce.core.metrics.CommandMetrics> retrieveMetrics();
    Code:
       0: aload_0
       1: getfield      #7                  // Field latencyMetricsRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #13                 // class java/util/Map
      10: astore_1
      11: aload_0
      12: getfield      #8                  // Field options:Lio/lettuce/core/metrics/CommandLatencyCollectorOptions;
      15: invokeinterface #42,  1           // InterfaceMethod io/lettuce/core/metrics/CommandLatencyCollectorOptions.resetLatenciesAfterEvent:()Z
      20: ifeq          54
      23: aload_1
      24: astore_2
      25: aload_0
      26: getfield      #7                  // Field latencyMetricsRef:Ljava/util/concurrent/atomic/AtomicReference;
      29: invokestatic  #5                  // Method createNewLatencyMap:()Ljava/util/concurrent/ConcurrentHashMap;
      32: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      35: aload_2
      36: invokeinterface #39,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      41: invokedynamic #40,  0             // InvokeDynamic #1:accept:()Ljava/util/function/Consumer;
      46: invokeinterface #41,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      51: goto          63
      54: new           #44                 // class java/util/HashMap
      57: dup
      58: aload_1
      59: invokespecial #45                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      62: astore_2
      63: aload_0
      64: aload_2
      65: invokespecial #46                 // Method getMetrics:(Ljava/util/Map;)Ljava/util/Map;
      68: areturn

  private java.util.Map<io.lettuce.core.metrics.CommandLatencyId, io.lettuce.core.metrics.CommandMetrics> getMetrics(java.util.Map<io.lettuce.core.metrics.CommandLatencyId, io.lettuce.core.metrics.DefaultCommandLatencyCollector$Latencies>);
    Code:
       0: new           #47                 // class java/util/TreeMap
       3: dup
       4: invokespecial #48                 // Method java/util/TreeMap."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #49,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      14: invokeinterface #50,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_3
      20: aload_3
      21: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          151
      29: aload_3
      30: invokeinterface #52,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #53                 // class java/util/Map$Entry
      38: astore        4
      40: aload         4
      42: invokeinterface #54,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      47: checkcast     #16                 // class io/lettuce/core/metrics/DefaultCommandLatencyCollector$Latencies
      50: astore        5
      52: aload         5
      54: invokevirtual #55                 // Method io/lettuce/core/metrics/DefaultCommandLatencyCollector$Latencies.getFirstResponseHistogram:()Lorg/HdrHistogram/Histogram;
      57: astore        6
      59: aload         5
      61: invokevirtual #56                 // Method io/lettuce/core/metrics/DefaultCommandLatencyCollector$Latencies.getCompletionHistogram:()Lorg/HdrHistogram/Histogram;
      64: astore        7
      66: aload         6
      68: invokevirtual #57                 // Method org/HdrHistogram/Histogram.getTotalCount:()J
      71: lconst_0
      72: lcmp
      73: ifne          89
      76: aload         7
      78: invokevirtual #57                 // Method org/HdrHistogram/Histogram.getTotalCount:()J
      81: lconst_0
      82: lcmp
      83: ifne          89
      86: goto          20
      89: aload_0
      90: aload         6
      92: invokespecial #58                 // Method getMetric:(Lorg/HdrHistogram/Histogram;)Lio/lettuce/core/metrics/CommandMetrics$CommandLatency;
      95: astore        8
      97: aload_0
      98: aload         7
     100: invokespecial #58                 // Method getMetric:(Lorg/HdrHistogram/Histogram;)Lio/lettuce/core/metrics/CommandMetrics$CommandLatency;
     103: astore        9
     105: new           #59                 // class io/lettuce/core/metrics/CommandMetrics
     108: dup
     109: aload         6
     111: invokevirtual #57                 // Method org/HdrHistogram/Histogram.getTotalCount:()J
     114: aload_0
     115: getfield      #8                  // Field options:Lio/lettuce/core/metrics/CommandLatencyCollectorOptions;
     118: invokeinterface #60,  1           // InterfaceMethod io/lettuce/core/metrics/CommandLatencyCollectorOptions.targetUnit:()Ljava/util/concurrent/TimeUnit;
     123: aload         8
     125: aload         9
     127: invokespecial #61                 // Method io/lettuce/core/metrics/CommandMetrics."<init>":(JLjava/util/concurrent/TimeUnit;Lio/lettuce/core/metrics/CommandMetrics$CommandLatency;Lio/lettuce/core/metrics/CommandMetrics$CommandLatency;)V
     130: astore        10
     132: aload_2
     133: aload         4
     135: invokeinterface #62,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     140: aload         10
     142: invokeinterface #63,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     147: pop
     148: goto          20
     151: aload_2
     152: areturn

  private io.lettuce.core.metrics.CommandMetrics$CommandLatency getMetric(org.HdrHistogram.Histogram);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #64                 // Method getPercentiles:(Lorg/HdrHistogram/Histogram;)Ljava/util/Map;
       5: astore_2
       6: aload_0
       7: getfield      #8                  // Field options:Lio/lettuce/core/metrics/CommandLatencyCollectorOptions;
      10: invokeinterface #60,  1           // InterfaceMethod io/lettuce/core/metrics/CommandLatencyCollectorOptions.targetUnit:()Ljava/util/concurrent/TimeUnit;
      15: astore_3
      16: new           #65                 // class io/lettuce/core/metrics/CommandMetrics$CommandLatency
      19: dup
      20: aload_3
      21: aload_1
      22: invokevirtual #66                 // Method org/HdrHistogram/Histogram.getMinValue:()J
      25: getstatic     #67                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      28: invokevirtual #68                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      31: aload_3
      32: aload_1
      33: invokevirtual #69                 // Method org/HdrHistogram/Histogram.getMaxValue:()J
      36: getstatic     #67                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      39: invokevirtual #68                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      42: aload_2
      43: invokespecial #70                 // Method io/lettuce/core/metrics/CommandMetrics$CommandLatency."<init>":(JJLjava/util/Map;)V
      46: areturn

  private java.util.Map<java.lang.Double, java.lang.Long> getPercentiles(org.HdrHistogram.Histogram);
    Code:
       0: new           #47                 // class java/util/TreeMap
       3: dup
       4: invokespecial #48                 // Method java/util/TreeMap."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #8                  // Field options:Lio/lettuce/core/metrics/CommandLatencyCollectorOptions;
      12: invokeinterface #71,  1           // InterfaceMethod io/lettuce/core/metrics/CommandLatencyCollectorOptions.targetPercentiles:()[D
      17: astore_3
      18: aload_3
      19: arraylength
      20: istore        4
      22: iconst_0
      23: istore        5
      25: iload         5
      27: iload         4
      29: if_icmpge     80
      32: aload_3
      33: iload         5
      35: daload
      36: dstore        6
      38: aload_2
      39: dload         6
      41: invokestatic  #72                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      44: aload_0
      45: getfield      #8                  // Field options:Lio/lettuce/core/metrics/CommandLatencyCollectorOptions;
      48: invokeinterface #60,  1           // InterfaceMethod io/lettuce/core/metrics/CommandLatencyCollectorOptions.targetUnit:()Ljava/util/concurrent/TimeUnit;
      53: aload_1
      54: dload         6
      56: invokevirtual #73                 // Method org/HdrHistogram/Histogram.getValueAtPercentile:(D)J
      59: getstatic     #67                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      62: invokevirtual #68                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      65: invokestatic  #74                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      68: invokeinterface #63,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      73: pop
      74: iinc          5, 1
      77: goto          25
      80: aload_2
      81: areturn

  public static boolean isAvailable();
    Code:
       0: getstatic     #1                  // Field LATENCY_UTILS_AVAILABLE:Z
       3: ifeq          16
       6: getstatic     #2                  // Field HDR_UTILS_AVAILABLE:Z
       9: ifeq          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  private static java.util.concurrent.ConcurrentHashMap<io.lettuce.core.metrics.CommandLatencyId, io.lettuce.core.metrics.DefaultCommandLatencyCollector$Latencies> createNewLatencyMap();
    Code:
       0: new           #75                 // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: invokestatic  #76                 // Method io/lettuce/core/protocol/CommandType.values:()[Lio/lettuce/core/protocol/CommandType;
       7: arraylength
       8: invokespecial #77                 // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      11: areturn

  public static io.lettuce.core.metrics.CommandLatencyCollector disabled();
    Code:
       0: new           #78                 // class io/lettuce/core/metrics/DefaultCommandLatencyCollector$1
       3: dup
       4: invokespecial #79                 // Method io/lettuce/core/metrics/DefaultCommandLatencyCollector$1."<init>":()V
       7: areturn

  public java.lang.Object retrieveMetrics();
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method retrieveMetrics:()Ljava/util/Map;
       4: areturn

  private io.lettuce.core.metrics.DefaultCommandLatencyCollector$Latencies lambda$new$0(io.lettuce.core.metrics.CommandLatencyCollectorOptions, io.lettuce.core.metrics.CommandLatencyId);
    Code:
       0: getstatic     #32                 // Field PAUSE_DETECTOR_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: invokevirtual #33                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: ifnonnull     39
      10: getstatic     #32                 // Field PAUSE_DETECTOR_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      13: aload_0
      14: aconst_null
      15: getstatic     #81                 // Field GLOBAL_PAUSE_DETECTOR:Lio/lettuce/core/metrics/DefaultCommandLatencyCollector$PauseDetectorWrapper;
      18: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      21: ifeq          39
      24: getstatic     #32                 // Field PAUSE_DETECTOR_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      27: aload_0
      28: invokevirtual #33                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.get:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #34                 // class io/lettuce/core/metrics/DefaultCommandLatencyCollector$PauseDetectorWrapper
      34: invokeinterface #82,  1           // InterfaceMethod io/lettuce/core/metrics/DefaultCommandLatencyCollector$PauseDetectorWrapper.retain:()V
      39: getstatic     #32                 // Field PAUSE_DETECTOR_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      42: aload_0
      43: invokevirtual #33                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.get:(Ljava/lang/Object;)Ljava/lang/Object;
      46: checkcast     #83                 // class io/lettuce/core/metrics/DefaultCommandLatencyCollector$DefaultPauseDetectorWrapper
      49: invokevirtual #84                 // Method io/lettuce/core/metrics/DefaultCommandLatencyCollector$DefaultPauseDetectorWrapper.getPauseDetector:()Lorg/LatencyUtils/PauseDetector;
      52: astore_3
      53: aload_1
      54: invokeinterface #42,  1           // InterfaceMethod io/lettuce/core/metrics/CommandLatencyCollectorOptions.resetLatenciesAfterEvent:()Z
      59: ifeq          71
      62: new           #16                 // class io/lettuce/core/metrics/DefaultCommandLatencyCollector$Latencies
      65: dup
      66: aload_3
      67: invokespecial #85                 // Method io/lettuce/core/metrics/DefaultCommandLatencyCollector$Latencies."<init>":(Lorg/LatencyUtils/PauseDetector;)V
      70: areturn
      71: new           #86                 // class io/lettuce/core/metrics/DefaultCommandLatencyCollector$CummulativeLatencies
      74: dup
      75: aload_3
      76: invokespecial #87                 // Method io/lettuce/core/metrics/DefaultCommandLatencyCollector$CummulativeLatencies."<init>":(Lorg/LatencyUtils/PauseDetector;)V
      79: areturn

  static boolean access$200();
    Code:
       0: getstatic     #2                  // Field HDR_UTILS_AVAILABLE:Z
       3: ireturn

  static boolean access$300();
    Code:
       0: getstatic     #1                  // Field LATENCY_UTILS_AVAILABLE:Z
       3: ireturn

  static {};
    Code:
       0: ldc           #24                 // class io/lettuce/core/metrics/DefaultCommandLatencyCollector
       2: ldc           #34                 // class io/lettuce/core/metrics/DefaultCommandLatencyCollector$PauseDetectorWrapper
       4: ldc           #88                 // String pauseDetectorWrapper
       6: invokestatic  #89                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       9: putstatic     #32                 // Field PAUSE_DETECTOR_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      12: ldc           #90                 // String org.LatencyUtils.PauseDetector
      14: invokestatic  #91                 // Method io/lettuce/core/internal/LettuceClassUtils.isPresent:(Ljava/lang/String;)Z
      17: putstatic     #1                  // Field LATENCY_UTILS_AVAILABLE:Z
      20: ldc           #92                 // String org.HdrHistogram.Histogram
      22: invokestatic  #91                 // Method io/lettuce/core/internal/LettuceClassUtils.isPresent:(Ljava/lang/String;)Z
      25: putstatic     #2                  // Field HDR_UTILS_AVAILABLE:Z
      28: invokestatic  #93                 // InterfaceMethod io/lettuce/core/metrics/DefaultCommandLatencyCollector$PauseDetectorWrapper.create:()Lio/lettuce/core/metrics/DefaultCommandLatencyCollector$PauseDetectorWrapper;
      31: putstatic     #81                 // Field GLOBAL_PAUSE_DETECTOR:Lio/lettuce/core/metrics/DefaultCommandLatencyCollector$PauseDetectorWrapper;
      34: getstatic     #94                 // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
      37: ldc2_w        #95                 // long 5l
      40: invokevirtual #97                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      43: putstatic     #27                 // Field MAX_LATENCY:J
      46: return
}
