Compiled from "ClusterClientOptions.java"
public class io.lettuce.core.cluster.ClusterClientOptions$Builder extends io.lettuce.core.ClientOptions$Builder {
  private boolean closeStaleConnections;

  private boolean validateClusterNodeMembership;

  private int maxRedirects;

  private io.lettuce.core.cluster.ClusterTopologyRefreshOptions topologyRefreshOptions;

  protected io.lettuce.core.cluster.ClusterClientOptions$Builder();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method io/lettuce/core/ClientOptions$Builder."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field closeStaleConnections:Z
       9: aload_0
      10: iconst_1
      11: putfield      #5                  // Field validateClusterNodeMembership:Z
      14: aload_0
      15: iconst_5
      16: putfield      #4                  // Field maxRedirects:I
      19: aload_0
      20: aconst_null
      21: putfield      #3                  // Field topologyRefreshOptions:Lio/lettuce/core/cluster/ClusterTopologyRefreshOptions;
      24: return

  public io.lettuce.core.cluster.ClusterClientOptions$Builder validateClusterNodeMembership(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field validateClusterNodeMembership:Z
       5: aload_0
       6: areturn

  public io.lettuce.core.cluster.ClusterClientOptions$Builder maxRedirects(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field maxRedirects:I
       5: aload_0
       6: areturn

  public io.lettuce.core.cluster.ClusterClientOptions$Builder topologyRefreshOptions(io.lettuce.core.cluster.ClusterTopologyRefreshOptions);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field topologyRefreshOptions:Lio/lettuce/core/cluster/ClusterTopologyRefreshOptions;
       5: aload_0
       6: areturn

  public io.lettuce.core.cluster.ClusterClientOptions$Builder pingBeforeActivateConnection(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #7                  // Method io/lettuce/core/ClientOptions$Builder.pingBeforeActivateConnection:(Z)Lio/lettuce/core/ClientOptions$Builder;
       5: pop
       6: aload_0
       7: areturn

  public io.lettuce.core.cluster.ClusterClientOptions$Builder autoReconnect(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #8                  // Method io/lettuce/core/ClientOptions$Builder.autoReconnect:(Z)Lio/lettuce/core/ClientOptions$Builder;
       5: pop
       6: aload_0
       7: areturn

  public io.lettuce.core.cluster.ClusterClientOptions$Builder suspendReconnectOnProtocolFailure(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #9                  // Method io/lettuce/core/ClientOptions$Builder.suspendReconnectOnProtocolFailure:(Z)Lio/lettuce/core/ClientOptions$Builder;
       5: pop
       6: aload_0
       7: areturn

  public io.lettuce.core.cluster.ClusterClientOptions$Builder cancelCommandsOnReconnectFailure(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #10                 // Method io/lettuce/core/ClientOptions$Builder.cancelCommandsOnReconnectFailure:(Z)Lio/lettuce/core/ClientOptions$Builder;
       5: pop
       6: aload_0
       7: areturn

  public io.lettuce.core.cluster.ClusterClientOptions$Builder requestQueueSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #11                 // Method io/lettuce/core/ClientOptions$Builder.requestQueueSize:(I)Lio/lettuce/core/ClientOptions$Builder;
       5: pop
       6: aload_0
       7: areturn

  public io.lettuce.core.cluster.ClusterClientOptions$Builder disconnectedBehavior(io.lettuce.core.ClientOptions$DisconnectedBehavior);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #12                 // Method io/lettuce/core/ClientOptions$Builder.disconnectedBehavior:(Lio/lettuce/core/ClientOptions$DisconnectedBehavior;)Lio/lettuce/core/ClientOptions$Builder;
       5: pop
       6: aload_0
       7: areturn

  public io.lettuce.core.cluster.ClusterClientOptions$Builder socketOptions(io.lettuce.core.SocketOptions);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #13                 // Method io/lettuce/core/ClientOptions$Builder.socketOptions:(Lio/lettuce/core/SocketOptions;)Lio/lettuce/core/ClientOptions$Builder;
       5: pop
       6: aload_0
       7: areturn

  public io.lettuce.core.cluster.ClusterClientOptions$Builder sslOptions(io.lettuce.core.SslOptions);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method io/lettuce/core/ClientOptions$Builder.sslOptions:(Lio/lettuce/core/SslOptions;)Lio/lettuce/core/ClientOptions$Builder;
       5: pop
       6: aload_0
       7: areturn

  public io.lettuce.core.cluster.ClusterClientOptions build();
    Code:
       0: new           #1                  // class io/lettuce/core/cluster/ClusterClientOptions
       3: dup
       4: aload_0
       5: invokespecial #15                 // Method io/lettuce/core/cluster/ClusterClientOptions."<init>":(Lio/lettuce/core/cluster/ClusterClientOptions$Builder;)V
       8: areturn

  public io.lettuce.core.ClientOptions build();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method build:()Lio/lettuce/core/cluster/ClusterClientOptions;
       4: areturn

  public io.lettuce.core.ClientOptions$Builder sslOptions(io.lettuce.core.SslOptions);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method sslOptions:(Lio/lettuce/core/SslOptions;)Lio/lettuce/core/cluster/ClusterClientOptions$Builder;
       5: areturn

  public io.lettuce.core.ClientOptions$Builder socketOptions(io.lettuce.core.SocketOptions);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method socketOptions:(Lio/lettuce/core/SocketOptions;)Lio/lettuce/core/cluster/ClusterClientOptions$Builder;
       5: areturn

  public io.lettuce.core.ClientOptions$Builder disconnectedBehavior(io.lettuce.core.ClientOptions$DisconnectedBehavior);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method disconnectedBehavior:(Lio/lettuce/core/ClientOptions$DisconnectedBehavior;)Lio/lettuce/core/cluster/ClusterClientOptions$Builder;
       5: areturn

  public io.lettuce.core.ClientOptions$Builder requestQueueSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #20                 // Method requestQueueSize:(I)Lio/lettuce/core/cluster/ClusterClientOptions$Builder;
       5: areturn

  public io.lettuce.core.ClientOptions$Builder cancelCommandsOnReconnectFailure(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #21                 // Method cancelCommandsOnReconnectFailure:(Z)Lio/lettuce/core/cluster/ClusterClientOptions$Builder;
       5: areturn

  public io.lettuce.core.ClientOptions$Builder suspendReconnectOnProtocolFailure(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #22                 // Method suspendReconnectOnProtocolFailure:(Z)Lio/lettuce/core/cluster/ClusterClientOptions$Builder;
       5: areturn

  public io.lettuce.core.ClientOptions$Builder autoReconnect(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #23                 // Method autoReconnect:(Z)Lio/lettuce/core/cluster/ClusterClientOptions$Builder;
       5: areturn

  public io.lettuce.core.ClientOptions$Builder pingBeforeActivateConnection(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #24                 // Method pingBeforeActivateConnection:(Z)Lio/lettuce/core/cluster/ClusterClientOptions$Builder;
       5: areturn

  static boolean access$000(io.lettuce.core.cluster.ClusterClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #5                  // Field validateClusterNodeMembership:Z
       4: ireturn

  static int access$100(io.lettuce.core.cluster.ClusterClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #4                  // Field maxRedirects:I
       4: ireturn

  static io.lettuce.core.cluster.ClusterTopologyRefreshOptions access$200(io.lettuce.core.cluster.ClusterClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #3                  // Field topologyRefreshOptions:Lio/lettuce/core/cluster/ClusterTopologyRefreshOptions;
       4: areturn

  static boolean access$300(io.lettuce.core.cluster.ClusterClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #2                  // Field closeStaleConnections:Z
       4: ireturn
}
