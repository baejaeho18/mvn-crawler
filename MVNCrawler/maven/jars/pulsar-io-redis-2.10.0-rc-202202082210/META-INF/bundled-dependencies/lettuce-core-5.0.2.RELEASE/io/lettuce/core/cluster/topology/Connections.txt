Compiled from "Connections.java"
class io.lettuce.core.cluster.topology.Connections {
  private final java.util.Map<io.lettuce.core.RedisURI, io.lettuce.core.api.StatefulRedisConnection<java.lang.String, java.lang.String>> connections;

  private volatile boolean closed;

  public io.lettuce.core.cluster.topology.Connections();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field closed:Z
       9: aload_0
      10: new           #3                  // class java/util/TreeMap
      13: dup
      14: getstatic     #4                  // Field io/lettuce/core/cluster/topology/TopologyComparators$RedisURIComparator.INSTANCE:Lio/lettuce/core/cluster/topology/TopologyComparators$RedisURIComparator;
      17: invokespecial #5                  // Method java/util/TreeMap."<init>":(Ljava/util/Comparator;)V
      20: putfield      #6                  // Field connections:Ljava/util/Map;
      23: return

  private io.lettuce.core.cluster.topology.Connections(java.util.Map<io.lettuce.core.RedisURI, io.lettuce.core.api.StatefulRedisConnection<java.lang.String, java.lang.String>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field closed:Z
       9: aload_0
      10: aload_1
      11: putfield      #6                  // Field connections:Ljava/util/Map;
      14: return

  public void addConnection(io.lettuce.core.RedisURI, io.lettuce.core.api.StatefulRedisConnection<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field closed:Z
       4: ifeq          14
       7: aload_2
       8: invokeinterface #7,  1            // InterfaceMethod io/lettuce/core/api/StatefulRedisConnection.close:()V
      13: return
      14: aload_0
      15: getfield      #6                  // Field connections:Ljava/util/Map;
      18: dup
      19: astore_3
      20: monitorenter
      21: aload_0
      22: getfield      #2                  // Field closed:Z
      25: ifeq          37
      28: aload_2
      29: invokeinterface #7,  1            // InterfaceMethod io/lettuce/core/api/StatefulRedisConnection.close:()V
      34: aload_3
      35: monitorexit
      36: return
      37: aload_0
      38: getfield      #6                  // Field connections:Ljava/util/Map;
      41: aload_1
      42: aload_2
      43: invokeinterface #8,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      48: pop
      49: aload_3
      50: monitorexit
      51: goto          61
      54: astore        4
      56: aload_3
      57: monitorexit
      58: aload         4
      60: athrow
      61: return
    Exception table:
       from    to  target type
          21    36    54   any
          37    51    54   any
          54    58    54   any

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #6                  // Field connections:Ljava/util/Map;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #6                  // Field connections:Ljava/util/Map;
      11: invokeinterface #9,  1            // InterfaceMethod java/util/Map.isEmpty:()Z
      16: aload_1
      17: monitorexit
      18: ireturn
      19: astore_2
      20: aload_1
      21: monitorexit
      22: aload_2
      23: athrow
    Exception table:
       from    to  target type
           7    18    19   any
          19    22    19   any

  public io.lettuce.core.cluster.topology.Requests requestTopology();
    Code:
       0: new           #10                 // class io/lettuce/core/cluster/topology/Requests
       3: dup
       4: invokespecial #11                 // Method io/lettuce/core/cluster/topology/Requests."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #6                  // Field connections:Ljava/util/Map;
      12: invokeinterface #12,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      17: invokeinterface #13,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          130
      32: aload_2
      33: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #16                 // class java/util/Map$Entry
      41: astore_3
      42: new           #17                 // class io/lettuce/core/protocol/CommandArgs
      45: dup
      46: getstatic     #18                 // Field io/lettuce/core/codec/StringCodec.UTF8:Lio/lettuce/core/codec/StringCodec;
      49: invokespecial #19                 // Method io/lettuce/core/protocol/CommandArgs."<init>":(Lio/lettuce/core/codec/RedisCodec;)V
      52: getstatic     #20                 // Field io/lettuce/core/protocol/CommandKeyword.NODES:Lio/lettuce/core/protocol/CommandKeyword;
      55: invokevirtual #21                 // Method io/lettuce/core/protocol/CommandArgs.add:(Lio/lettuce/core/protocol/CommandKeyword;)Lio/lettuce/core/protocol/CommandArgs;
      58: astore        4
      60: new           #22                 // class io/lettuce/core/protocol/Command
      63: dup
      64: getstatic     #23                 // Field io/lettuce/core/protocol/CommandType.CLUSTER:Lio/lettuce/core/protocol/CommandType;
      67: new           #24                 // class io/lettuce/core/output/StatusOutput
      70: dup
      71: getstatic     #18                 // Field io/lettuce/core/codec/StringCodec.UTF8:Lio/lettuce/core/codec/StringCodec;
      74: invokespecial #25                 // Method io/lettuce/core/output/StatusOutput."<init>":(Lio/lettuce/core/codec/RedisCodec;)V
      77: aload         4
      79: invokespecial #26                 // Method io/lettuce/core/protocol/Command."<init>":(Lio/lettuce/core/protocol/ProtocolKeyword;Lio/lettuce/core/output/CommandOutput;Lio/lettuce/core/protocol/CommandArgs;)V
      82: astore        5
      84: new           #27                 // class io/lettuce/core/cluster/topology/TimedAsyncCommand
      87: dup
      88: aload         5
      90: invokespecial #28                 // Method io/lettuce/core/cluster/topology/TimedAsyncCommand."<init>":(Lio/lettuce/core/protocol/RedisCommand;)V
      93: astore        6
      95: aload_3
      96: invokeinterface #29,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     101: checkcast     #30                 // class io/lettuce/core/api/StatefulRedisConnection
     104: aload         6
     106: invokeinterface #31,  2           // InterfaceMethod io/lettuce/core/api/StatefulRedisConnection.dispatch:(Lio/lettuce/core/protocol/RedisCommand;)Lio/lettuce/core/protocol/RedisCommand;
     111: pop
     112: aload_1
     113: aload_3
     114: invokeinterface #32,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     119: checkcast     #33                 // class io/lettuce/core/RedisURI
     122: aload         6
     124: invokevirtual #34                 // Method io/lettuce/core/cluster/topology/Requests.addRequest:(Lio/lettuce/core/RedisURI;Lio/lettuce/core/cluster/topology/TimedAsyncCommand;)V
     127: goto          23
     130: aload_1
     131: areturn

  public io.lettuce.core.cluster.topology.Requests requestClients();
    Code:
       0: new           #10                 // class io/lettuce/core/cluster/topology/Requests
       3: dup
       4: invokespecial #11                 // Method io/lettuce/core/cluster/topology/Requests."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #6                  // Field connections:Ljava/util/Map;
      12: invokeinterface #12,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      17: invokeinterface #13,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          130
      32: aload_2
      33: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #16                 // class java/util/Map$Entry
      41: astore_3
      42: new           #17                 // class io/lettuce/core/protocol/CommandArgs
      45: dup
      46: getstatic     #18                 // Field io/lettuce/core/codec/StringCodec.UTF8:Lio/lettuce/core/codec/StringCodec;
      49: invokespecial #19                 // Method io/lettuce/core/protocol/CommandArgs."<init>":(Lio/lettuce/core/codec/RedisCodec;)V
      52: getstatic     #35                 // Field io/lettuce/core/protocol/CommandKeyword.LIST:Lio/lettuce/core/protocol/CommandKeyword;
      55: invokevirtual #21                 // Method io/lettuce/core/protocol/CommandArgs.add:(Lio/lettuce/core/protocol/CommandKeyword;)Lio/lettuce/core/protocol/CommandArgs;
      58: astore        4
      60: new           #22                 // class io/lettuce/core/protocol/Command
      63: dup
      64: getstatic     #36                 // Field io/lettuce/core/protocol/CommandType.CLIENT:Lio/lettuce/core/protocol/CommandType;
      67: new           #24                 // class io/lettuce/core/output/StatusOutput
      70: dup
      71: getstatic     #18                 // Field io/lettuce/core/codec/StringCodec.UTF8:Lio/lettuce/core/codec/StringCodec;
      74: invokespecial #25                 // Method io/lettuce/core/output/StatusOutput."<init>":(Lio/lettuce/core/codec/RedisCodec;)V
      77: aload         4
      79: invokespecial #26                 // Method io/lettuce/core/protocol/Command."<init>":(Lio/lettuce/core/protocol/ProtocolKeyword;Lio/lettuce/core/output/CommandOutput;Lio/lettuce/core/protocol/CommandArgs;)V
      82: astore        5
      84: new           #27                 // class io/lettuce/core/cluster/topology/TimedAsyncCommand
      87: dup
      88: aload         5
      90: invokespecial #28                 // Method io/lettuce/core/cluster/topology/TimedAsyncCommand."<init>":(Lio/lettuce/core/protocol/RedisCommand;)V
      93: astore        6
      95: aload_3
      96: invokeinterface #29,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     101: checkcast     #30                 // class io/lettuce/core/api/StatefulRedisConnection
     104: aload         6
     106: invokeinterface #31,  2           // InterfaceMethod io/lettuce/core/api/StatefulRedisConnection.dispatch:(Lio/lettuce/core/protocol/RedisCommand;)Lio/lettuce/core/protocol/RedisCommand;
     111: pop
     112: aload_1
     113: aload_3
     114: invokeinterface #32,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     119: checkcast     #33                 // class io/lettuce/core/RedisURI
     122: aload         6
     124: invokevirtual #34                 // Method io/lettuce/core/cluster/topology/Requests.addRequest:(Lio/lettuce/core/RedisURI;Lio/lettuce/core/cluster/topology/TimedAsyncCommand;)V
     127: goto          23
     130: aload_1
     131: areturn

  public void close();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #2                  // Field closed:Z
       5: aload_0
       6: invokespecial #37                 // Method hasConnections:()Z
       9: ifeq          53
      12: aload_0
      13: invokespecial #38                 // Method drainConnections:()Ljava/util/Collection;
      16: invokeinterface #39,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      21: astore_1
      22: aload_1
      23: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          50
      31: aload_1
      32: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #30                 // class io/lettuce/core/api/StatefulRedisConnection
      40: astore_2
      41: aload_2
      42: invokeinterface #7,  1            // InterfaceMethod io/lettuce/core/api/StatefulRedisConnection.close:()V
      47: goto          22
      50: goto          5
      53: return

  private boolean hasConnections();
    Code:
       0: aload_0
       1: getfield      #6                  // Field connections:Ljava/util/Map;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #6                  // Field connections:Ljava/util/Map;
      11: invokeinterface #9,  1            // InterfaceMethod java/util/Map.isEmpty:()Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: aload_1
      25: monitorexit
      26: ireturn
      27: astore_2
      28: aload_1
      29: monitorexit
      30: aload_2
      31: athrow
    Exception table:
       from    to  target type
           7    26    27   any
          27    30    27   any

  private java.util.Collection<io.lettuce.core.api.StatefulRedisConnection<java.lang.String, java.lang.String>> drainConnections();
    Code:
       0: aload_0
       1: getfield      #6                  // Field connections:Ljava/util/Map;
       4: dup
       5: astore_1
       6: monitorenter
       7: new           #40                 // class java/util/HashMap
      10: dup
      11: aload_0
      12: getfield      #6                  // Field connections:Ljava/util/Map;
      15: invokespecial #41                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      18: astore_2
      19: aload_2
      20: aload_0
      21: invokedynamic #42,  0             // InvokeDynamic #0:accept:(Lio/lettuce/core/cluster/topology/Connections;)Ljava/util/function/BiConsumer;
      26: invokeinterface #43,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      31: aload_1
      32: monitorexit
      33: goto          41
      36: astore_3
      37: aload_1
      38: monitorexit
      39: aload_3
      40: athrow
      41: aload_0
      42: getfield      #6                  // Field connections:Ljava/util/Map;
      45: invokeinterface #44,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      50: areturn
    Exception table:
       from    to  target type
           7    33    36   any
          36    39    36   any

  public io.lettuce.core.cluster.topology.Connections mergeWith(io.lettuce.core.cluster.topology.Connections);
    Code:
       0: new           #3                  // class java/util/TreeMap
       3: dup
       4: getstatic     #4                  // Field io/lettuce/core/cluster/topology/TopologyComparators$RedisURIComparator.INSTANCE:Lio/lettuce/core/cluster/topology/TopologyComparators$RedisURIComparator;
       7: invokespecial #5                  // Method java/util/TreeMap."<init>":(Ljava/util/Comparator;)V
      10: astore_2
      11: aload_0
      12: iconst_1
      13: putfield      #2                  // Field closed:Z
      16: aload_1
      17: iconst_1
      18: putfield      #2                  // Field closed:Z
      21: aload_0
      22: getfield      #6                  // Field connections:Ljava/util/Map;
      25: dup
      26: astore_3
      27: monitorenter
      28: aload_1
      29: getfield      #6                  // Field connections:Ljava/util/Map;
      32: dup
      33: astore        4
      35: monitorenter
      36: aload_2
      37: aload_0
      38: getfield      #6                  // Field connections:Ljava/util/Map;
      41: invokeinterface #45,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      46: aload_2
      47: aload_1
      48: getfield      #6                  // Field connections:Ljava/util/Map;
      51: invokeinterface #45,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      56: aload         4
      58: monitorexit
      59: goto          70
      62: astore        5
      64: aload         4
      66: monitorexit
      67: aload         5
      69: athrow
      70: aload_3
      71: monitorexit
      72: goto          82
      75: astore        6
      77: aload_3
      78: monitorexit
      79: aload         6
      81: athrow
      82: new           #46                 // class io/lettuce/core/cluster/topology/Connections
      85: dup
      86: aload_2
      87: invokespecial #47                 // Method "<init>":(Ljava/util/Map;)V
      90: areturn
    Exception table:
       from    to  target type
          36    59    62   any
          62    67    62   any
          28    72    75   any
          75    79    75   any

  private void lambda$drainConnections$0(io.lettuce.core.RedisURI, io.lettuce.core.api.StatefulRedisConnection);
    Code:
       0: aload_0
       1: getfield      #6                  // Field connections:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #48,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return
}
