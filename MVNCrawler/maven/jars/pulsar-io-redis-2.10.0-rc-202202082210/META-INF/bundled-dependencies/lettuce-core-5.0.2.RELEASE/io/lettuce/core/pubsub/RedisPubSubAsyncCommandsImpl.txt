Compiled from "RedisPubSubAsyncCommandsImpl.java"
public class io.lettuce.core.pubsub.RedisPubSubAsyncCommandsImpl<K, V> extends io.lettuce.core.RedisAsyncCommandsImpl<K, V> implements io.lettuce.core.pubsub.api.async.RedisPubSubAsyncCommands<K, V> {
  private final io.lettuce.core.pubsub.PubSubCommandBuilder<K, V> commandBuilder;

  public io.lettuce.core.pubsub.RedisPubSubAsyncCommandsImpl(io.lettuce.core.pubsub.StatefulRedisPubSubConnection<K, V>, io.lettuce.core.codec.RedisCodec<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method io/lettuce/core/RedisAsyncCommandsImpl."<init>":(Lio/lettuce/core/api/StatefulRedisConnection;Lio/lettuce/core/codec/RedisCodec;)V
       6: aload_0
       7: new           #2                  // class io/lettuce/core/pubsub/PubSubCommandBuilder
      10: dup
      11: aload_2
      12: invokespecial #3                  // Method io/lettuce/core/pubsub/PubSubCommandBuilder."<init>":(Lio/lettuce/core/codec/RedisCodec;)V
      15: putfield      #4                  // Field commandBuilder:Lio/lettuce/core/pubsub/PubSubCommandBuilder;
      18: return

  public io.lettuce.core.RedisFuture<java.lang.Void> psubscribe(K...);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field commandBuilder:Lio/lettuce/core/pubsub/PubSubCommandBuilder;
       5: aload_1
       6: invokevirtual #5                  // Method io/lettuce/core/pubsub/PubSubCommandBuilder.psubscribe:([Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: invokevirtual #6                  // Method dispatch:(Lio/lettuce/core/protocol/RedisCommand;)Lio/lettuce/core/protocol/AsyncCommand;
      12: areturn

  public io.lettuce.core.RedisFuture<java.lang.Void> punsubscribe(K...);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field commandBuilder:Lio/lettuce/core/pubsub/PubSubCommandBuilder;
       5: aload_1
       6: invokevirtual #7                  // Method io/lettuce/core/pubsub/PubSubCommandBuilder.punsubscribe:([Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: invokevirtual #6                  // Method dispatch:(Lio/lettuce/core/protocol/RedisCommand;)Lio/lettuce/core/protocol/AsyncCommand;
      12: areturn

  public io.lettuce.core.RedisFuture<java.lang.Void> subscribe(K...);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field commandBuilder:Lio/lettuce/core/pubsub/PubSubCommandBuilder;
       5: aload_1
       6: invokevirtual #8                  // Method io/lettuce/core/pubsub/PubSubCommandBuilder.subscribe:([Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: invokevirtual #6                  // Method dispatch:(Lio/lettuce/core/protocol/RedisCommand;)Lio/lettuce/core/protocol/AsyncCommand;
      12: areturn

  public io.lettuce.core.RedisFuture<java.lang.Void> unsubscribe(K...);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field commandBuilder:Lio/lettuce/core/pubsub/PubSubCommandBuilder;
       5: aload_1
       6: invokevirtual #9                  // Method io/lettuce/core/pubsub/PubSubCommandBuilder.unsubscribe:([Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: invokevirtual #6                  // Method dispatch:(Lio/lettuce/core/protocol/RedisCommand;)Lio/lettuce/core/protocol/AsyncCommand;
      12: areturn

  public io.lettuce.core.RedisFuture<java.lang.Long> publish(K, V);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field commandBuilder:Lio/lettuce/core/pubsub/PubSubCommandBuilder;
       5: aload_1
       6: aload_2
       7: invokevirtual #10                 // Method io/lettuce/core/pubsub/PubSubCommandBuilder.publish:(Ljava/lang/Object;Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
      10: invokevirtual #6                  // Method dispatch:(Lio/lettuce/core/protocol/RedisCommand;)Lio/lettuce/core/protocol/AsyncCommand;
      13: areturn

  public io.lettuce.core.RedisFuture<java.util.List<K>> pubsubChannels(K);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field commandBuilder:Lio/lettuce/core/pubsub/PubSubCommandBuilder;
       5: aload_1
       6: invokevirtual #11                 // Method io/lettuce/core/pubsub/PubSubCommandBuilder.pubsubChannels:(Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: invokevirtual #6                  // Method dispatch:(Lio/lettuce/core/protocol/RedisCommand;)Lio/lettuce/core/protocol/AsyncCommand;
      12: areturn

  public io.lettuce.core.RedisFuture<java.util.Map<K, java.lang.Long>> pubsubNumsub(K...);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field commandBuilder:Lio/lettuce/core/pubsub/PubSubCommandBuilder;
       5: aload_1
       6: invokevirtual #12                 // Method io/lettuce/core/pubsub/PubSubCommandBuilder.pubsubNumsub:([Ljava/lang/Object;)Lio/lettuce/core/protocol/Command;
       9: invokevirtual #6                  // Method dispatch:(Lio/lettuce/core/protocol/RedisCommand;)Lio/lettuce/core/protocol/AsyncCommand;
      12: areturn

  public io.lettuce.core.pubsub.StatefulRedisPubSubConnection<K, V> getStatefulConnection();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method io/lettuce/core/RedisAsyncCommandsImpl.getStatefulConnection:()Lio/lettuce/core/api/StatefulRedisConnection;
       4: checkcast     #14                 // class io/lettuce/core/pubsub/StatefulRedisPubSubConnection
       7: areturn

  public io.lettuce.core.api.StatefulRedisConnection getStatefulConnection();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method getStatefulConnection:()Lio/lettuce/core/pubsub/StatefulRedisPubSubConnection;
       4: areturn
}
