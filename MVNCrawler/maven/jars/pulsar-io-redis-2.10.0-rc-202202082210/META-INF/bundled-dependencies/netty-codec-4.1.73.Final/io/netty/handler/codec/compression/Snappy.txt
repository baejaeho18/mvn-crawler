Compiled from "Snappy.java"
public final class io.netty.handler.codec.compression.Snappy {
  private static final int MAX_HT_SIZE;

  private static final int MIN_COMPRESSIBLE_BYTES;

  private static final int PREAMBLE_NOT_FULL;

  private static final int NOT_ENOUGH_INPUT;

  private static final int LITERAL;

  private static final int COPY_1_BYTE_OFFSET;

  private static final int COPY_2_BYTE_OFFSET;

  private static final int COPY_4_BYTE_OFFSET;

  private io.netty.handler.codec.compression.Snappy$State state;

  private byte tag;

  private int written;

  public io.netty.handler.codec.compression.Snappy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field io/netty/handler/codec/compression/Snappy$State.READING_PREAMBLE:Lio/netty/handler/codec/compression/Snappy$State;
       8: putfield      #3                  // Field state:Lio/netty/handler/codec/compression/Snappy$State;
      11: return

  public void reset();
    Code:
       0: aload_0
       1: getstatic     #2                  // Field io/netty/handler/codec/compression/Snappy$State.READING_PREAMBLE:Lio/netty/handler/codec/compression/Snappy$State;
       4: putfield      #3                  // Field state:Lio/netty/handler/codec/compression/Snappy$State;
       7: aload_0
       8: iconst_0
       9: putfield      #4                  // Field tag:B
      12: aload_0
      13: iconst_0
      14: putfield      #5                  // Field written:I
      17: return

  public void encode(io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf, int);
    Code:
       0: iconst_0
       1: istore        4
       3: iload_3
       4: iload         4
       6: bipush        7
       8: imul
       9: iushr
      10: istore        5
      12: iload         5
      14: bipush        -128
      16: iand
      17: ifeq          37
      20: aload_2
      21: iload         5
      23: bipush        127
      25: iand
      26: sipush        128
      29: ior
      30: invokevirtual #6                  // Method io/netty/buffer/ByteBuf.writeByte:(I)Lio/netty/buffer/ByteBuf;
      33: pop
      34: goto          47
      37: aload_2
      38: iload         5
      40: invokevirtual #6                  // Method io/netty/buffer/ByteBuf.writeByte:(I)Lio/netty/buffer/ByteBuf;
      43: pop
      44: goto          53
      47: iinc          4, 1
      50: goto          3
      53: aload_1
      54: invokevirtual #7                  // Method io/netty/buffer/ByteBuf.readerIndex:()I
      57: istore        4
      59: iload         4
      61: istore        5
      63: iload_3
      64: invokestatic  #8                  // Method getHashTable:(I)[S
      67: astore        6
      69: aload         6
      71: arraylength
      72: invokestatic  #9                  // Method java/lang/Integer.numberOfLeadingZeros:(I)I
      75: iconst_1
      76: iadd
      77: istore        7
      79: iload         4
      81: istore        8
      83: iload_3
      84: iload         4
      86: isub
      87: bipush        15
      89: if_icmplt     371
      92: aload_1
      93: iinc          4, 1
      96: iload         4
      98: iload         7
     100: invokestatic  #11                 // Method hash:(Lio/netty/buffer/ByteBuf;II)I
     103: istore        9
     105: bipush        32
     107: istore        10
     109: iload         4
     111: istore        12
     113: iload         12
     115: istore        4
     117: iload         9
     119: istore        13
     121: iload         10
     123: iinc          10, 1
     126: iconst_5
     127: ishr
     128: istore        14
     130: iload         4
     132: iload         14
     134: iadd
     135: istore        12
     137: iload         12
     139: iload_3
     140: iconst_4
     141: isub
     142: if_icmple     148
     145: goto          371
     148: aload_1
     149: iload         12
     151: iload         7
     153: invokestatic  #11                 // Method hash:(Lio/netty/buffer/ByteBuf;II)I
     156: istore        9
     158: iload         5
     160: aload         6
     162: iload         13
     164: saload
     165: iadd
     166: istore        11
     168: aload         6
     170: iload         13
     172: iload         4
     174: iload         5
     176: isub
     177: i2s
     178: sastore
     179: aload_1
     180: iload         4
     182: invokevirtual #12                 // Method io/netty/buffer/ByteBuf.getInt:(I)I
     185: aload_1
     186: iload         11
     188: invokevirtual #12                 // Method io/netty/buffer/ByteBuf.getInt:(I)I
     191: if_icmpne     113
     194: aload_1
     195: aload_2
     196: iload         4
     198: iload         8
     200: isub
     201: invokestatic  #13                 // Method encodeLiteral:(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;I)V
     204: iload         4
     206: istore        14
     208: iconst_4
     209: aload_1
     210: iload         11
     212: iconst_4
     213: iadd
     214: iload         4
     216: iconst_4
     217: iadd
     218: iload_3
     219: invokestatic  #14                 // Method findMatchingLength:(Lio/netty/buffer/ByteBuf;III)I
     222: iadd
     223: istore        15
     225: iload         4
     227: iload         15
     229: iadd
     230: istore        4
     232: iload         14
     234: iload         11
     236: isub
     237: istore        16
     239: aload_2
     240: iload         16
     242: iload         15
     244: invokestatic  #15                 // Method encodeCopy:(Lio/netty/buffer/ByteBuf;II)V
     247: aload_1
     248: aload_1
     249: invokevirtual #7                  // Method io/netty/buffer/ByteBuf.readerIndex:()I
     252: iload         15
     254: iadd
     255: invokevirtual #16                 // Method io/netty/buffer/ByteBuf.readerIndex:(I)Lio/netty/buffer/ByteBuf;
     258: pop
     259: iload         4
     261: iconst_1
     262: isub
     263: istore        13
     265: iload         4
     267: istore        8
     269: iload         4
     271: iload_3
     272: iconst_4
     273: isub
     274: if_icmplt     280
     277: goto          371
     280: aload_1
     281: iload         13
     283: iload         7
     285: invokestatic  #11                 // Method hash:(Lio/netty/buffer/ByteBuf;II)I
     288: istore        17
     290: aload         6
     292: iload         17
     294: iload         4
     296: iload         5
     298: isub
     299: iconst_1
     300: isub
     301: i2s
     302: sastore
     303: aload_1
     304: iload         13
     306: iconst_1
     307: iadd
     308: iload         7
     310: invokestatic  #11                 // Method hash:(Lio/netty/buffer/ByteBuf;II)I
     313: istore        18
     315: iload         5
     317: aload         6
     319: iload         18
     321: saload
     322: iadd
     323: istore        11
     325: aload         6
     327: iload         18
     329: iload         4
     331: iload         5
     333: isub
     334: i2s
     335: sastore
     336: aload_1
     337: iload         13
     339: iconst_1
     340: iadd
     341: invokevirtual #12                 // Method io/netty/buffer/ByteBuf.getInt:(I)I
     344: aload_1
     345: iload         11
     347: invokevirtual #12                 // Method io/netty/buffer/ByteBuf.getInt:(I)I
     350: if_icmpeq     204
     353: aload_1
     354: iload         13
     356: iconst_2
     357: iadd
     358: iload         7
     360: invokestatic  #11                 // Method hash:(Lio/netty/buffer/ByteBuf;II)I
     363: istore        9
     365: iinc          4, 1
     368: goto          105
     371: iload         8
     373: iload_3
     374: if_icmpge     386
     377: aload_1
     378: aload_2
     379: iload_3
     380: iload         8
     382: isub
     383: invokestatic  #13                 // Method encodeLiteral:(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;I)V
     386: return

  private static int hash(io.netty.buffer.ByteBuf, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #12                 // Method io/netty/buffer/ByteBuf.getInt:(I)I
       5: ldc           #17                 // int 506832829
       7: imul
       8: iload_2
       9: iushr
      10: ireturn

  private static short[] getHashTable(int);
    Code:
       0: sipush        256
       3: istore_1
       4: iload_1
       5: sipush        16384
       8: if_icmpge     23
      11: iload_1
      12: iload_0
      13: if_icmpge     23
      16: iload_1
      17: iconst_1
      18: ishl
      19: istore_1
      20: goto          4
      23: iload_1
      24: newarray       short
      26: areturn

  private static int findMatchingLength(io.netty.buffer.ByteBuf, int, int, int);
    Code:
       0: iconst_0
       1: istore        4
       3: iload_2
       4: iload_3
       5: iconst_4
       6: isub
       7: if_icmpgt     35
      10: aload_0
      11: iload_2
      12: invokevirtual #12                 // Method io/netty/buffer/ByteBuf.getInt:(I)I
      15: aload_0
      16: iload_1
      17: iload         4
      19: iadd
      20: invokevirtual #12                 // Method io/netty/buffer/ByteBuf.getInt:(I)I
      23: if_icmpne     35
      26: iinc          2, 4
      29: iinc          4, 4
      32: goto          3
      35: iload_2
      36: iload_3
      37: if_icmpge     65
      40: aload_0
      41: iload_1
      42: iload         4
      44: iadd
      45: invokevirtual #18                 // Method io/netty/buffer/ByteBuf.getByte:(I)B
      48: aload_0
      49: iload_2
      50: invokevirtual #18                 // Method io/netty/buffer/ByteBuf.getByte:(I)B
      53: if_icmpne     65
      56: iinc          2, 1
      59: iinc          4, 1
      62: goto          35
      65: iload         4
      67: ireturn

  private static int bitsToEncode(int);
    Code:
       0: iload_0
       1: invokestatic  #19                 // Method java/lang/Integer.highestOneBit:(I)I
       4: istore_1
       5: iconst_0
       6: istore_2
       7: iload_1
       8: iconst_1
       9: ishr
      10: dup
      11: istore_1
      12: ifeq          21
      15: iinc          2, 1
      18: goto          7
      21: iload_2
      22: ireturn

  static void encodeLiteral(io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf, int);
    Code:
       0: iload_2
       1: bipush        61
       3: if_icmpge     19
       6: aload_1
       7: iload_2
       8: iconst_1
       9: isub
      10: iconst_2
      11: ishl
      12: invokevirtual #6                  // Method io/netty/buffer/ByteBuf.writeByte:(I)Lio/netty/buffer/ByteBuf;
      15: pop
      16: goto          80
      19: iload_2
      20: iconst_1
      21: isub
      22: invokestatic  #20                 // Method bitsToEncode:(I)I
      25: istore_3
      26: iconst_1
      27: iload_3
      28: bipush        8
      30: idiv
      31: iadd
      32: istore        4
      34: aload_1
      35: bipush        59
      37: iload         4
      39: iadd
      40: iconst_2
      41: ishl
      42: invokevirtual #6                  // Method io/netty/buffer/ByteBuf.writeByte:(I)Lio/netty/buffer/ByteBuf;
      45: pop
      46: iconst_0
      47: istore        5
      49: iload         5
      51: iload         4
      53: if_icmpge     80
      56: aload_1
      57: iload_2
      58: iconst_1
      59: isub
      60: iload         5
      62: bipush        8
      64: imul
      65: ishr
      66: sipush        255
      69: iand
      70: invokevirtual #6                  // Method io/netty/buffer/ByteBuf.writeByte:(I)Lio/netty/buffer/ByteBuf;
      73: pop
      74: iinc          5, 1
      77: goto          49
      80: aload_1
      81: aload_0
      82: iload_2
      83: invokevirtual #21                 // Method io/netty/buffer/ByteBuf.writeBytes:(Lio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf;
      86: pop
      87: return

  private static void encodeCopyWithOffset(io.netty.buffer.ByteBuf, int, int);
    Code:
       0: iload_2
       1: bipush        12
       3: if_icmpge     45
       6: iload_1
       7: sipush        2048
      10: if_icmpge     45
      13: aload_0
      14: iconst_1
      15: iload_2
      16: iconst_4
      17: isub
      18: iconst_2
      19: ishl
      20: ior
      21: iload_1
      22: bipush        8
      24: ishr
      25: iconst_5
      26: ishl
      27: ior
      28: invokevirtual #6                  // Method io/netty/buffer/ByteBuf.writeByte:(I)Lio/netty/buffer/ByteBuf;
      31: pop
      32: aload_0
      33: iload_1
      34: sipush        255
      37: iand
      38: invokevirtual #6                  // Method io/netty/buffer/ByteBuf.writeByte:(I)Lio/netty/buffer/ByteBuf;
      41: pop
      42: goto          80
      45: aload_0
      46: iconst_2
      47: iload_2
      48: iconst_1
      49: isub
      50: iconst_2
      51: ishl
      52: ior
      53: invokevirtual #6                  // Method io/netty/buffer/ByteBuf.writeByte:(I)Lio/netty/buffer/ByteBuf;
      56: pop
      57: aload_0
      58: iload_1
      59: sipush        255
      62: iand
      63: invokevirtual #6                  // Method io/netty/buffer/ByteBuf.writeByte:(I)Lio/netty/buffer/ByteBuf;
      66: pop
      67: aload_0
      68: iload_1
      69: bipush        8
      71: ishr
      72: sipush        255
      75: iand
      76: invokevirtual #6                  // Method io/netty/buffer/ByteBuf.writeByte:(I)Lio/netty/buffer/ByteBuf;
      79: pop
      80: return

  private static void encodeCopy(io.netty.buffer.ByteBuf, int, int);
    Code:
       0: iload_2
       1: bipush        68
       3: if_icmplt     19
       6: aload_0
       7: iload_1
       8: bipush        64
      10: invokestatic  #22                 // Method encodeCopyWithOffset:(Lio/netty/buffer/ByteBuf;II)V
      13: iinc          2, -64
      16: goto          0
      19: iload_2
      20: bipush        64
      22: if_icmple     35
      25: aload_0
      26: iload_1
      27: bipush        60
      29: invokestatic  #22                 // Method encodeCopyWithOffset:(Lio/netty/buffer/ByteBuf;II)V
      32: iinc          2, -60
      35: aload_0
      36: iload_1
      37: iload_2
      38: invokestatic  #22                 // Method encodeCopyWithOffset:(Lio/netty/buffer/ByteBuf;II)V
      41: return

  public void decode(io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf);
    Code:
       0: aload_1
       1: invokevirtual #23                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
       4: ifeq          352
       7: getstatic     #24                 // Field io/netty/handler/codec/compression/Snappy$1.$SwitchMap$io$netty$handler$codec$compression$Snappy$State:[I
      10: aload_0
      11: getfield      #3                  // Field state:Lio/netty/handler/codec/compression/Snappy$State;
      14: invokevirtual #25                 // Method io/netty/handler/codec/compression/Snappy$State.ordinal:()I
      17: iaload
      18: tableswitch   { // 1 to 4
                     1: 48
                     2: 77
                     3: 148
                     4: 187
               default: 349
          }
      48: aload_1
      49: invokestatic  #26                 // Method readPreamble:(Lio/netty/buffer/ByteBuf;)I
      52: istore_3
      53: iload_3
      54: iconst_m1
      55: if_icmpne     59
      58: return
      59: iload_3
      60: ifne          64
      63: return
      64: aload_2
      65: iload_3
      66: invokevirtual #27                 // Method io/netty/buffer/ByteBuf.ensureWritable:(I)Lio/netty/buffer/ByteBuf;
      69: pop
      70: aload_0
      71: getstatic     #28                 // Field io/netty/handler/codec/compression/Snappy$State.READING_TAG:Lio/netty/handler/codec/compression/Snappy$State;
      74: putfield      #3                  // Field state:Lio/netty/handler/codec/compression/Snappy$State;
      77: aload_1
      78: invokevirtual #23                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
      81: ifne          85
      84: return
      85: aload_0
      86: aload_1
      87: invokevirtual #29                 // Method io/netty/buffer/ByteBuf.readByte:()B
      90: putfield      #4                  // Field tag:B
      93: aload_0
      94: getfield      #4                  // Field tag:B
      97: iconst_3
      98: iand
      99: tableswitch   { // 0 to 3
                     0: 128
                     1: 138
                     2: 138
                     3: 138
               default: 145
          }
     128: aload_0
     129: getstatic     #30                 // Field io/netty/handler/codec/compression/Snappy$State.READING_LITERAL:Lio/netty/handler/codec/compression/Snappy$State;
     132: putfield      #3                  // Field state:Lio/netty/handler/codec/compression/Snappy$State;
     135: goto          145
     138: aload_0
     139: getstatic     #31                 // Field io/netty/handler/codec/compression/Snappy$State.READING_COPY:Lio/netty/handler/codec/compression/Snappy$State;
     142: putfield      #3                  // Field state:Lio/netty/handler/codec/compression/Snappy$State;
     145: goto          349
     148: aload_0
     149: getfield      #4                  // Field tag:B
     152: aload_1
     153: aload_2
     154: invokestatic  #32                 // Method decodeLiteral:(BLio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)I
     157: istore        4
     159: iload         4
     161: iconst_m1
     162: if_icmpeq     186
     165: aload_0
     166: getstatic     #28                 // Field io/netty/handler/codec/compression/Snappy$State.READING_TAG:Lio/netty/handler/codec/compression/Snappy$State;
     169: putfield      #3                  // Field state:Lio/netty/handler/codec/compression/Snappy$State;
     172: aload_0
     173: dup
     174: getfield      #5                  // Field written:I
     177: iload         4
     179: iadd
     180: putfield      #5                  // Field written:I
     183: goto          349
     186: return
     187: aload_0
     188: getfield      #4                  // Field tag:B
     191: iconst_3
     192: iand
     193: tableswitch   { // 1 to 3
                     1: 220
                     2: 263
                     3: 306
               default: 349
          }
     220: aload_0
     221: getfield      #4                  // Field tag:B
     224: aload_1
     225: aload_2
     226: aload_0
     227: getfield      #5                  // Field written:I
     230: invokestatic  #33                 // Method decodeCopyWith1ByteOffset:(BLio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;I)I
     233: istore        5
     235: iload         5
     237: iconst_m1
     238: if_icmpeq     262
     241: aload_0
     242: getstatic     #28                 // Field io/netty/handler/codec/compression/Snappy$State.READING_TAG:Lio/netty/handler/codec/compression/Snappy$State;
     245: putfield      #3                  // Field state:Lio/netty/handler/codec/compression/Snappy$State;
     248: aload_0
     249: dup
     250: getfield      #5                  // Field written:I
     253: iload         5
     255: iadd
     256: putfield      #5                  // Field written:I
     259: goto          349
     262: return
     263: aload_0
     264: getfield      #4                  // Field tag:B
     267: aload_1
     268: aload_2
     269: aload_0
     270: getfield      #5                  // Field written:I
     273: invokestatic  #34                 // Method decodeCopyWith2ByteOffset:(BLio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;I)I
     276: istore        5
     278: iload         5
     280: iconst_m1
     281: if_icmpeq     305
     284: aload_0
     285: getstatic     #28                 // Field io/netty/handler/codec/compression/Snappy$State.READING_TAG:Lio/netty/handler/codec/compression/Snappy$State;
     288: putfield      #3                  // Field state:Lio/netty/handler/codec/compression/Snappy$State;
     291: aload_0
     292: dup
     293: getfield      #5                  // Field written:I
     296: iload         5
     298: iadd
     299: putfield      #5                  // Field written:I
     302: goto          349
     305: return
     306: aload_0
     307: getfield      #4                  // Field tag:B
     310: aload_1
     311: aload_2
     312: aload_0
     313: getfield      #5                  // Field written:I
     316: invokestatic  #35                 // Method decodeCopyWith4ByteOffset:(BLio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;I)I
     319: istore        5
     321: iload         5
     323: iconst_m1
     324: if_icmpeq     348
     327: aload_0
     328: getstatic     #28                 // Field io/netty/handler/codec/compression/Snappy$State.READING_TAG:Lio/netty/handler/codec/compression/Snappy$State;
     331: putfield      #3                  // Field state:Lio/netty/handler/codec/compression/Snappy$State;
     334: aload_0
     335: dup
     336: getfield      #5                  // Field written:I
     339: iload         5
     341: iadd
     342: putfield      #5                  // Field written:I
     345: goto          349
     348: return
     349: goto          0
     352: return

  private static int readPreamble(io.netty.buffer.ByteBuf);
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: aload_0
       5: invokevirtual #23                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
       8: ifeq          59
      11: aload_0
      12: invokevirtual #36                 // Method io/netty/buffer/ByteBuf.readUnsignedByte:()S
      15: istore_3
      16: iload_1
      17: iload_3
      18: bipush        127
      20: iand
      21: iload_2
      22: iinc          2, 1
      25: bipush        7
      27: imul
      28: ishl
      29: ior
      30: istore_1
      31: iload_3
      32: sipush        128
      35: iand
      36: ifne          41
      39: iload_1
      40: ireturn
      41: iload_2
      42: iconst_4
      43: if_icmplt     56
      46: new           #37                 // class io/netty/handler/codec/compression/DecompressionException
      49: dup
      50: ldc           #38                 // String Preamble is greater than 4 bytes
      52: invokespecial #39                 // Method io/netty/handler/codec/compression/DecompressionException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: goto          4
      59: iconst_0
      60: ireturn

  int getPreamble(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:Lio/netty/handler/codec/compression/Snappy$State;
       4: getstatic     #2                  // Field io/netty/handler/codec/compression/Snappy$State.READING_PREAMBLE:Lio/netty/handler/codec/compression/Snappy$State;
       7: if_acmpne     39
      10: aload_1
      11: invokevirtual #7                  // Method io/netty/buffer/ByteBuf.readerIndex:()I
      14: istore_2
      15: aload_1
      16: invokestatic  #26                 // Method readPreamble:(Lio/netty/buffer/ByteBuf;)I
      19: istore_3
      20: aload_1
      21: iload_2
      22: invokevirtual #16                 // Method io/netty/buffer/ByteBuf.readerIndex:(I)Lio/netty/buffer/ByteBuf;
      25: pop
      26: iload_3
      27: ireturn
      28: astore        4
      30: aload_1
      31: iload_2
      32: invokevirtual #16                 // Method io/netty/buffer/ByteBuf.readerIndex:(I)Lio/netty/buffer/ByteBuf;
      35: pop
      36: aload         4
      38: athrow
      39: iconst_0
      40: ireturn
    Exception table:
       from    to  target type
          15    20    28   any
          28    30    28   any

  static int decodeLiteral(byte, io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf);
    Code:
       0: aload_1
       1: invokevirtual #40                 // Method io/netty/buffer/ByteBuf.markReaderIndex:()Lio/netty/buffer/ByteBuf;
       4: pop
       5: iload_0
       6: iconst_2
       7: ishr
       8: bipush        63
      10: iand
      11: tableswitch   { // 60 to 63
                    60: 40
                    61: 57
                    62: 75
                    63: 93
               default: 111
          }
      40: aload_1
      41: invokevirtual #23                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
      44: ifne          49
      47: iconst_m1
      48: ireturn
      49: aload_1
      50: invokevirtual #36                 // Method io/netty/buffer/ByteBuf.readUnsignedByte:()S
      53: istore_3
      54: goto          118
      57: aload_1
      58: invokevirtual #41                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      61: iconst_2
      62: if_icmpge     67
      65: iconst_m1
      66: ireturn
      67: aload_1
      68: invokevirtual #42                 // Method io/netty/buffer/ByteBuf.readUnsignedShortLE:()I
      71: istore_3
      72: goto          118
      75: aload_1
      76: invokevirtual #41                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      79: iconst_3
      80: if_icmpge     85
      83: iconst_m1
      84: ireturn
      85: aload_1
      86: invokevirtual #43                 // Method io/netty/buffer/ByteBuf.readUnsignedMediumLE:()I
      89: istore_3
      90: goto          118
      93: aload_1
      94: invokevirtual #41                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      97: iconst_4
      98: if_icmpge     103
     101: iconst_m1
     102: ireturn
     103: aload_1
     104: invokevirtual #44                 // Method io/netty/buffer/ByteBuf.readIntLE:()I
     107: istore_3
     108: goto          118
     111: iload_0
     112: iconst_2
     113: ishr
     114: bipush        63
     116: iand
     117: istore_3
     118: iinc          3, 1
     121: aload_1
     122: invokevirtual #41                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
     125: iload_3
     126: if_icmpge     136
     129: aload_1
     130: invokevirtual #45                 // Method io/netty/buffer/ByteBuf.resetReaderIndex:()Lio/netty/buffer/ByteBuf;
     133: pop
     134: iconst_m1
     135: ireturn
     136: aload_2
     137: aload_1
     138: iload_3
     139: invokevirtual #21                 // Method io/netty/buffer/ByteBuf.writeBytes:(Lio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf;
     142: pop
     143: iload_3
     144: ireturn

  private static int decodeCopyWith1ByteOffset(byte, io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf, int);
    Code:
       0: aload_1
       1: invokevirtual #23                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
       4: ifne          9
       7: iconst_m1
       8: ireturn
       9: aload_2
      10: invokevirtual #46                 // Method io/netty/buffer/ByteBuf.writerIndex:()I
      13: istore        4
      15: iconst_4
      16: iload_0
      17: bipush        28
      19: iand
      20: iconst_2
      21: ishr
      22: iadd
      23: istore        5
      25: iload_0
      26: sipush        224
      29: iand
      30: bipush        8
      32: ishl
      33: iconst_5
      34: ishr
      35: aload_1
      36: invokevirtual #36                 // Method io/netty/buffer/ByteBuf.readUnsignedByte:()S
      39: ior
      40: istore        6
      42: iload         6
      44: iload_3
      45: invokestatic  #47                 // Method validateOffset:(II)V
      48: aload_2
      49: invokevirtual #40                 // Method io/netty/buffer/ByteBuf.markReaderIndex:()Lio/netty/buffer/ByteBuf;
      52: pop
      53: iload         6
      55: iload         5
      57: if_icmpge     128
      60: iload         5
      62: iload         6
      64: idiv
      65: istore        7
      67: iload         7
      69: ifle          96
      72: aload_2
      73: iload         4
      75: iload         6
      77: isub
      78: invokevirtual #16                 // Method io/netty/buffer/ByteBuf.readerIndex:(I)Lio/netty/buffer/ByteBuf;
      81: pop
      82: aload_2
      83: aload_2
      84: iload         6
      86: invokevirtual #48                 // Method io/netty/buffer/ByteBuf.readBytes:(Lio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf;
      89: pop
      90: iinc          7, -1
      93: goto          67
      96: iload         5
      98: iload         6
     100: irem
     101: ifeq          125
     104: aload_2
     105: iload         4
     107: iload         6
     109: isub
     110: invokevirtual #16                 // Method io/netty/buffer/ByteBuf.readerIndex:(I)Lio/netty/buffer/ByteBuf;
     113: pop
     114: aload_2
     115: aload_2
     116: iload         5
     118: iload         6
     120: irem
     121: invokevirtual #48                 // Method io/netty/buffer/ByteBuf.readBytes:(Lio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf;
     124: pop
     125: goto          146
     128: aload_2
     129: iload         4
     131: iload         6
     133: isub
     134: invokevirtual #16                 // Method io/netty/buffer/ByteBuf.readerIndex:(I)Lio/netty/buffer/ByteBuf;
     137: pop
     138: aload_2
     139: aload_2
     140: iload         5
     142: invokevirtual #48                 // Method io/netty/buffer/ByteBuf.readBytes:(Lio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf;
     145: pop
     146: aload_2
     147: invokevirtual #45                 // Method io/netty/buffer/ByteBuf.resetReaderIndex:()Lio/netty/buffer/ByteBuf;
     150: pop
     151: iload         5
     153: ireturn

  private static int decodeCopyWith2ByteOffset(byte, io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf, int);
    Code:
       0: aload_1
       1: invokevirtual #41                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
       4: iconst_2
       5: if_icmpge     10
       8: iconst_m1
       9: ireturn
      10: aload_2
      11: invokevirtual #46                 // Method io/netty/buffer/ByteBuf.writerIndex:()I
      14: istore        4
      16: iconst_1
      17: iload_0
      18: iconst_2
      19: ishr
      20: bipush        63
      22: iand
      23: iadd
      24: istore        5
      26: aload_1
      27: invokevirtual #42                 // Method io/netty/buffer/ByteBuf.readUnsignedShortLE:()I
      30: istore        6
      32: iload         6
      34: iload_3
      35: invokestatic  #47                 // Method validateOffset:(II)V
      38: aload_2
      39: invokevirtual #40                 // Method io/netty/buffer/ByteBuf.markReaderIndex:()Lio/netty/buffer/ByteBuf;
      42: pop
      43: iload         6
      45: iload         5
      47: if_icmpge     118
      50: iload         5
      52: iload         6
      54: idiv
      55: istore        7
      57: iload         7
      59: ifle          86
      62: aload_2
      63: iload         4
      65: iload         6
      67: isub
      68: invokevirtual #16                 // Method io/netty/buffer/ByteBuf.readerIndex:(I)Lio/netty/buffer/ByteBuf;
      71: pop
      72: aload_2
      73: aload_2
      74: iload         6
      76: invokevirtual #48                 // Method io/netty/buffer/ByteBuf.readBytes:(Lio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf;
      79: pop
      80: iinc          7, -1
      83: goto          57
      86: iload         5
      88: iload         6
      90: irem
      91: ifeq          115
      94: aload_2
      95: iload         4
      97: iload         6
      99: isub
     100: invokevirtual #16                 // Method io/netty/buffer/ByteBuf.readerIndex:(I)Lio/netty/buffer/ByteBuf;
     103: pop
     104: aload_2
     105: aload_2
     106: iload         5
     108: iload         6
     110: irem
     111: invokevirtual #48                 // Method io/netty/buffer/ByteBuf.readBytes:(Lio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf;
     114: pop
     115: goto          136
     118: aload_2
     119: iload         4
     121: iload         6
     123: isub
     124: invokevirtual #16                 // Method io/netty/buffer/ByteBuf.readerIndex:(I)Lio/netty/buffer/ByteBuf;
     127: pop
     128: aload_2
     129: aload_2
     130: iload         5
     132: invokevirtual #48                 // Method io/netty/buffer/ByteBuf.readBytes:(Lio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf;
     135: pop
     136: aload_2
     137: invokevirtual #45                 // Method io/netty/buffer/ByteBuf.resetReaderIndex:()Lio/netty/buffer/ByteBuf;
     140: pop
     141: iload         5
     143: ireturn

  private static int decodeCopyWith4ByteOffset(byte, io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf, int);
    Code:
       0: aload_1
       1: invokevirtual #41                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
       4: iconst_4
       5: if_icmpge     10
       8: iconst_m1
       9: ireturn
      10: aload_2
      11: invokevirtual #46                 // Method io/netty/buffer/ByteBuf.writerIndex:()I
      14: istore        4
      16: iconst_1
      17: iload_0
      18: iconst_2
      19: ishr
      20: bipush        63
      22: iand
      23: iadd
      24: istore        5
      26: aload_1
      27: invokevirtual #44                 // Method io/netty/buffer/ByteBuf.readIntLE:()I
      30: istore        6
      32: iload         6
      34: iload_3
      35: invokestatic  #47                 // Method validateOffset:(II)V
      38: aload_2
      39: invokevirtual #40                 // Method io/netty/buffer/ByteBuf.markReaderIndex:()Lio/netty/buffer/ByteBuf;
      42: pop
      43: iload         6
      45: iload         5
      47: if_icmpge     118
      50: iload         5
      52: iload         6
      54: idiv
      55: istore        7
      57: iload         7
      59: ifle          86
      62: aload_2
      63: iload         4
      65: iload         6
      67: isub
      68: invokevirtual #16                 // Method io/netty/buffer/ByteBuf.readerIndex:(I)Lio/netty/buffer/ByteBuf;
      71: pop
      72: aload_2
      73: aload_2
      74: iload         6
      76: invokevirtual #48                 // Method io/netty/buffer/ByteBuf.readBytes:(Lio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf;
      79: pop
      80: iinc          7, -1
      83: goto          57
      86: iload         5
      88: iload         6
      90: irem
      91: ifeq          115
      94: aload_2
      95: iload         4
      97: iload         6
      99: isub
     100: invokevirtual #16                 // Method io/netty/buffer/ByteBuf.readerIndex:(I)Lio/netty/buffer/ByteBuf;
     103: pop
     104: aload_2
     105: aload_2
     106: iload         5
     108: iload         6
     110: irem
     111: invokevirtual #48                 // Method io/netty/buffer/ByteBuf.readBytes:(Lio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf;
     114: pop
     115: goto          136
     118: aload_2
     119: iload         4
     121: iload         6
     123: isub
     124: invokevirtual #16                 // Method io/netty/buffer/ByteBuf.readerIndex:(I)Lio/netty/buffer/ByteBuf;
     127: pop
     128: aload_2
     129: aload_2
     130: iload         5
     132: invokevirtual #48                 // Method io/netty/buffer/ByteBuf.readBytes:(Lio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf;
     135: pop
     136: aload_2
     137: invokevirtual #45                 // Method io/netty/buffer/ByteBuf.resetReaderIndex:()Lio/netty/buffer/ByteBuf;
     140: pop
     141: iload         5
     143: ireturn

  private static void validateOffset(int, int);
    Code:
       0: iload_0
       1: ifne          14
       4: new           #37                 // class io/netty/handler/codec/compression/DecompressionException
       7: dup
       8: ldc           #49                 // String Offset is less than minimum permissible value
      10: invokespecial #39                 // Method io/netty/handler/codec/compression/DecompressionException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_0
      15: ifge          28
      18: new           #37                 // class io/netty/handler/codec/compression/DecompressionException
      21: dup
      22: ldc           #50                 // String Offset is greater than maximum value supported by this implementation
      24: invokespecial #39                 // Method io/netty/handler/codec/compression/DecompressionException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: iload_0
      29: iload_1
      30: if_icmple     43
      33: new           #37                 // class io/netty/handler/codec/compression/DecompressionException
      36: dup
      37: ldc           #51                 // String Offset exceeds size of chunk
      39: invokespecial #39                 // Method io/netty/handler/codec/compression/DecompressionException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: return

  static int calculateChecksum(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #7                  // Method io/netty/buffer/ByteBuf.readerIndex:()I
       5: aload_0
       6: invokevirtual #41                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
       9: invokestatic  #52                 // Method calculateChecksum:(Lio/netty/buffer/ByteBuf;II)I
      12: ireturn

  static int calculateChecksum(io.netty.buffer.ByteBuf, int, int);
    Code:
       0: new           #53                 // class io/netty/handler/codec/compression/Crc32c
       3: dup
       4: invokespecial #54                 // Method io/netty/handler/codec/compression/Crc32c."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_0
      10: iload_1
      11: iload_2
      12: invokevirtual #55                 // Method io/netty/handler/codec/compression/Crc32c.update:(Lio/netty/buffer/ByteBuf;II)V
      15: aload_3
      16: invokevirtual #56                 // Method io/netty/handler/codec/compression/Crc32c.getValue:()J
      19: invokestatic  #57                 // Method maskChecksum:(J)I
      22: istore        4
      24: aload_3
      25: invokevirtual #58                 // Method io/netty/handler/codec/compression/Crc32c.reset:()V
      28: iload         4
      30: ireturn
      31: astore        5
      33: aload_3
      34: invokevirtual #58                 // Method io/netty/handler/codec/compression/Crc32c.reset:()V
      37: aload         5
      39: athrow
    Exception table:
       from    to  target type
           8    24    31   any
          31    33    31   any

  static void validateChecksum(int, io.netty.buffer.ByteBuf);
    Code:
       0: iload_0
       1: aload_1
       2: aload_1
       3: invokevirtual #7                  // Method io/netty/buffer/ByteBuf.readerIndex:()I
       6: aload_1
       7: invokevirtual #41                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      10: invokestatic  #59                 // Method validateChecksum:(ILio/netty/buffer/ByteBuf;II)V
      13: return

  static void validateChecksum(int, io.netty.buffer.ByteBuf, int, int);
    Code:
       0: aload_1
       1: iload_2
       2: iload_3
       3: invokestatic  #52                 // Method calculateChecksum:(Lio/netty/buffer/ByteBuf;II)I
       6: istore        4
       8: iload         4
      10: iload_0
      11: if_icmpeq     62
      14: new           #37                 // class io/netty/handler/codec/compression/DecompressionException
      17: dup
      18: new           #60                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #62                 // String mismatching checksum:
      27: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: iload         4
      32: invokestatic  #64                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      35: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #65                 // String  (expected:
      40: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: iload_0
      44: invokestatic  #64                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      47: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: bipush        41
      52: invokevirtual #66                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      55: invokevirtual #67                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: invokespecial #39                 // Method io/netty/handler/codec/compression/DecompressionException."<init>":(Ljava/lang/String;)V
      61: athrow
      62: return

  static int maskChecksum(long);
    Code:
       0: lload_0
       1: bipush        15
       3: lshr
       4: lload_0
       5: bipush        17
       7: lshl
       8: lor
       9: ldc2_w        #68                 // long -1568478504l
      12: ladd
      13: l2i
      14: ireturn
}
