Compiled from "ZlibDecoder.java"
public abstract class io.netty.handler.codec.compression.ZlibDecoder extends io.netty.handler.codec.ByteToMessageDecoder {
  protected final int maxAllocation;

  public io.netty.handler.codec.compression.ZlibDecoder();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #1                  // Method "<init>":(I)V
       5: return

  public io.netty.handler.codec.compression.ZlibDecoder(int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method io/netty/handler/codec/ByteToMessageDecoder."<init>":()V
       4: aload_0
       5: iload_1
       6: ldc           #3                  // String maxAllocation
       8: invokestatic  #4                  // Method io/netty/util/internal/ObjectUtil.checkPositiveOrZero:(ILjava/lang/String;)I
      11: putfield      #5                  // Field maxAllocation:I
      14: return

  public abstract boolean isClosed();

  protected io.netty.buffer.ByteBuf prepareDecompressBuffer(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, int);
    Code:
       0: aload_2
       1: ifnonnull     48
       4: aload_0
       5: getfield      #5                  // Field maxAllocation:I
       8: ifne          24
      11: aload_1
      12: invokeinterface #6,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.alloc:()Lio/netty/buffer/ByteBufAllocator;
      17: iload_3
      18: invokeinterface #7,  2            // InterfaceMethod io/netty/buffer/ByteBufAllocator.heapBuffer:(I)Lio/netty/buffer/ByteBuf;
      23: areturn
      24: aload_1
      25: invokeinterface #6,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.alloc:()Lio/netty/buffer/ByteBufAllocator;
      30: iload_3
      31: aload_0
      32: getfield      #5                  // Field maxAllocation:I
      35: invokestatic  #8                  // Method java/lang/Math.min:(II)I
      38: aload_0
      39: getfield      #5                  // Field maxAllocation:I
      42: invokeinterface #9,  3            // InterfaceMethod io/netty/buffer/ByteBufAllocator.heapBuffer:(II)Lio/netty/buffer/ByteBuf;
      47: areturn
      48: aload_2
      49: iload_3
      50: iconst_1
      51: invokevirtual #10                 // Method io/netty/buffer/ByteBuf.ensureWritable:(IZ)I
      54: iconst_1
      55: if_icmpne     105
      58: aload_0
      59: aload_2
      60: invokevirtual #11                 // Method io/netty/buffer/ByteBuf.duplicate:()Lio/netty/buffer/ByteBuf;
      63: invokevirtual #12                 // Method decompressionBufferExhausted:(Lio/netty/buffer/ByteBuf;)V
      66: aload_2
      67: aload_2
      68: invokevirtual #13                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      71: invokevirtual #14                 // Method io/netty/buffer/ByteBuf.skipBytes:(I)Lio/netty/buffer/ByteBuf;
      74: pop
      75: new           #15                 // class io/netty/handler/codec/compression/DecompressionException
      78: dup
      79: new           #16                 // class java/lang/StringBuilder
      82: dup
      83: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      86: ldc           #18                 // String Decompression buffer has reached maximum size:
      88: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: aload_2
      92: invokevirtual #20                 // Method io/netty/buffer/ByteBuf.maxCapacity:()I
      95: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      98: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: invokespecial #23                 // Method io/netty/handler/codec/compression/DecompressionException."<init>":(Ljava/lang/String;)V
     104: athrow
     105: aload_2
     106: areturn

  protected void decompressionBufferExhausted(io.netty.buffer.ByteBuf);
    Code:
       0: return
}
