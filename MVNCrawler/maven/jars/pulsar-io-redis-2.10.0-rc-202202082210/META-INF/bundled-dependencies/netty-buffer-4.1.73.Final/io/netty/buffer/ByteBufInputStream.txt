Compiled from "ByteBufInputStream.java"
public class io.netty.buffer.ByteBufInputStream extends java.io.InputStream implements java.io.DataInput {
  private final io.netty.buffer.ByteBuf buffer;

  private final int startIndex;

  private final int endIndex;

  private boolean closed;

  private final boolean releaseOnClose;

  private java.lang.StringBuilder lineBuf;

  public io.netty.buffer.ByteBufInputStream(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokevirtual #1                  // Method io/netty/buffer/ByteBuf.readableBytes:()I
       6: invokespecial #2                  // Method "<init>":(Lio/netty/buffer/ByteBuf;I)V
       9: return

  public io.netty.buffer.ByteBufInputStream(io.netty.buffer.ByteBuf, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_0
       4: invokespecial #3                  // Method "<init>":(Lio/netty/buffer/ByteBuf;IZ)V
       7: return

  public io.netty.buffer.ByteBufInputStream(io.netty.buffer.ByteBuf, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokevirtual #1                  // Method io/netty/buffer/ByteBuf.readableBytes:()I
       6: iload_2
       7: invokespecial #3                  // Method "<init>":(Lio/netty/buffer/ByteBuf;IZ)V
      10: return

  public io.netty.buffer.ByteBufInputStream(io.netty.buffer.ByteBuf, int, boolean);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/io/InputStream."<init>":()V
       4: aload_1
       5: ldc           #5                  // String buffer
       7: invokestatic  #6                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      10: pop
      11: iload_2
      12: ifge          31
      15: iload_3
      16: ifeq          24
      19: aload_1
      20: invokevirtual #7                  // Method io/netty/buffer/ByteBuf.release:()Z
      23: pop
      24: iload_2
      25: ldc           #8                  // String length
      27: invokestatic  #9                  // Method io/netty/util/internal/ObjectUtil.checkPositiveOrZero:(ILjava/lang/String;)I
      30: pop
      31: iload_2
      32: aload_1
      33: invokevirtual #1                  // Method io/netty/buffer/ByteBuf.readableBytes:()I
      36: if_icmple     87
      39: iload_3
      40: ifeq          48
      43: aload_1
      44: invokevirtual #7                  // Method io/netty/buffer/ByteBuf.release:()Z
      47: pop
      48: new           #10                 // class java/lang/IndexOutOfBoundsException
      51: dup
      52: new           #11                 // class java/lang/StringBuilder
      55: dup
      56: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      59: ldc           #13                 // String Too many bytes to be read - Needs
      61: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: iload_2
      65: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      68: ldc           #16                 // String , maximum is
      70: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_1
      74: invokevirtual #1                  // Method io/netty/buffer/ByteBuf.readableBytes:()I
      77: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      80: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      83: invokespecial #18                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      86: athrow
      87: aload_0
      88: iload_3
      89: putfield      #19                 // Field releaseOnClose:Z
      92: aload_0
      93: aload_1
      94: putfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
      97: aload_0
      98: aload_1
      99: invokevirtual #21                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
     102: putfield      #22                 // Field startIndex:I
     105: aload_0
     106: aload_0
     107: getfield      #22                 // Field startIndex:I
     110: iload_2
     111: iadd
     112: putfield      #23                 // Field endIndex:I
     115: aload_1
     116: invokevirtual #24                 // Method io/netty/buffer/ByteBuf.markReaderIndex:()Lio/netty/buffer/ByteBuf;
     119: pop
     120: return

  public int readBytes();
    Code:
       0: aload_0
       1: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
       4: invokevirtual #21                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
       7: aload_0
       8: getfield      #22                 // Field startIndex:I
      11: isub
      12: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method java/io/InputStream.close:()V
       4: aload_0
       5: getfield      #19                 // Field releaseOnClose:Z
       8: ifeq          64
      11: aload_0
      12: getfield      #26                 // Field closed:Z
      15: ifne          64
      18: aload_0
      19: iconst_1
      20: putfield      #26                 // Field closed:Z
      23: aload_0
      24: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
      27: invokevirtual #7                  // Method io/netty/buffer/ByteBuf.release:()Z
      30: pop
      31: goto          64
      34: astore_1
      35: aload_0
      36: getfield      #19                 // Field releaseOnClose:Z
      39: ifeq          62
      42: aload_0
      43: getfield      #26                 // Field closed:Z
      46: ifne          62
      49: aload_0
      50: iconst_1
      51: putfield      #26                 // Field closed:Z
      54: aload_0
      55: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
      58: invokevirtual #7                  // Method io/netty/buffer/ByteBuf.release:()Z
      61: pop
      62: aload_1
      63: athrow
      64: return
    Exception table:
       from    to  target type
           0     4    34   any

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field endIndex:I
       4: aload_0
       5: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
       8: invokevirtual #21                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
      11: isub
      12: ireturn

  public void mark(int);
    Code:
       0: aload_0
       1: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
       4: invokevirtual #24                 // Method io/netty/buffer/ByteBuf.markReaderIndex:()Lio/netty/buffer/ByteBuf;
       7: pop
       8: return

  public boolean markSupported();
    Code:
       0: iconst_1
       1: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method available:()I
       4: istore_1
       5: iload_1
       6: ifne          11
       9: iconst_m1
      10: ireturn
      11: aload_0
      12: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
      15: invokevirtual #28                 // Method io/netty/buffer/ByteBuf.readByte:()B
      18: sipush        255
      21: iand
      22: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method available:()I
       4: istore        4
       6: iload         4
       8: ifne          13
      11: iconst_m1
      12: ireturn
      13: iload         4
      15: iload_3
      16: invokestatic  #29                 // Method java/lang/Math.min:(II)I
      19: istore_3
      20: aload_0
      21: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
      24: aload_1
      25: iload_2
      26: iload_3
      27: invokevirtual #30                 // Method io/netty/buffer/ByteBuf.readBytes:([BII)Lio/netty/buffer/ByteBuf;
      30: pop
      31: iload_3
      32: ireturn

  public void reset() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
       4: invokevirtual #31                 // Method io/netty/buffer/ByteBuf.resetReaderIndex:()Lio/netty/buffer/ByteBuf;
       7: pop
       8: return

  public long skip(long) throws java.io.IOException;
    Code:
       0: lload_1
       1: ldc2_w        #33                 // long 2147483647l
       4: lcmp
       5: ifle          16
       8: aload_0
       9: ldc           #35                 // int 2147483647
      11: invokevirtual #36                 // Method skipBytes:(I)I
      14: i2l
      15: lreturn
      16: aload_0
      17: lload_1
      18: l2i
      19: invokevirtual #36                 // Method skipBytes:(I)I
      22: i2l
      23: lreturn

  public boolean readBoolean() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #37                 // Method checkAvailable:(I)V
       5: aload_0
       6: invokevirtual #38                 // Method read:()I
       9: ifeq          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public byte readByte() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method available:()I
       4: istore_1
       5: iload_1
       6: ifne          17
       9: new           #39                 // class java/io/EOFException
      12: dup
      13: invokespecial #40                 // Method java/io/EOFException."<init>":()V
      16: athrow
      17: aload_0
      18: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
      21: invokevirtual #28                 // Method io/netty/buffer/ByteBuf.readByte:()B
      24: ireturn

  public char readChar() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method readShort:()S
       4: i2c
       5: ireturn

  public double readDouble() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method readLong:()J
       4: invokestatic  #43                 // Method java/lang/Double.longBitsToDouble:(J)D
       7: dreturn

  public float readFloat() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method readInt:()I
       4: invokestatic  #45                 // Method java/lang/Float.intBitsToFloat:(I)F
       7: freturn

  public void readFully(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #46                 // Method readFully:([BII)V
       8: return

  public void readFully(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_3
       2: invokespecial #37                 // Method checkAvailable:(I)V
       5: aload_0
       6: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
       9: aload_1
      10: iload_2
      11: iload_3
      12: invokevirtual #30                 // Method io/netty/buffer/ByteBuf.readBytes:([BII)Lio/netty/buffer/ByteBuf;
      15: pop
      16: return

  public int readInt() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_4
       2: invokespecial #37                 // Method checkAvailable:(I)V
       5: aload_0
       6: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
       9: invokevirtual #47                 // Method io/netty/buffer/ByteBuf.readInt:()I
      12: ireturn

  public java.lang.String readLine() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method available:()I
       4: istore_1
       5: iload_1
       6: ifne          11
       9: aconst_null
      10: areturn
      11: aload_0
      12: getfield      #48                 // Field lineBuf:Ljava/lang/StringBuilder;
      15: ifnull        26
      18: aload_0
      19: getfield      #48                 // Field lineBuf:Ljava/lang/StringBuilder;
      22: iconst_0
      23: invokevirtual #49                 // Method java/lang/StringBuilder.setLength:(I)V
      26: aload_0
      27: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
      30: invokevirtual #50                 // Method io/netty/buffer/ByteBuf.readUnsignedByte:()S
      33: istore_2
      34: iinc          1, -1
      37: iload_2
      38: lookupswitch  { // 2
                    10: 64
                    13: 67
               default: 106
          }
      64: goto          138
      67: iload_1
      68: ifle          138
      71: aload_0
      72: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
      75: aload_0
      76: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
      79: invokevirtual #21                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
      82: invokevirtual #51                 // Method io/netty/buffer/ByteBuf.getUnsignedByte:(I)S
      85: i2c
      86: bipush        10
      88: if_icmpne     138
      91: aload_0
      92: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
      95: iconst_1
      96: invokevirtual #52                 // Method io/netty/buffer/ByteBuf.skipBytes:(I)Lio/netty/buffer/ByteBuf;
      99: pop
     100: iinc          1, -1
     103: goto          138
     106: aload_0
     107: getfield      #48                 // Field lineBuf:Ljava/lang/StringBuilder;
     110: ifnonnull     124
     113: aload_0
     114: new           #11                 // class java/lang/StringBuilder
     117: dup
     118: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
     121: putfield      #48                 // Field lineBuf:Ljava/lang/StringBuilder;
     124: aload_0
     125: getfield      #48                 // Field lineBuf:Ljava/lang/StringBuilder;
     128: iload_2
     129: i2c
     130: invokevirtual #53                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     133: pop
     134: iload_1
     135: ifgt          26
     138: aload_0
     139: getfield      #48                 // Field lineBuf:Ljava/lang/StringBuilder;
     142: ifnull        165
     145: aload_0
     146: getfield      #48                 // Field lineBuf:Ljava/lang/StringBuilder;
     149: invokevirtual #54                 // Method java/lang/StringBuilder.length:()I
     152: ifle          165
     155: aload_0
     156: getfield      #48                 // Field lineBuf:Ljava/lang/StringBuilder;
     159: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     162: goto          167
     165: ldc           #56                 // String
     167: areturn

  public long readLong() throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        8
       3: invokespecial #37                 // Method checkAvailable:(I)V
       6: aload_0
       7: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
      10: invokevirtual #57                 // Method io/netty/buffer/ByteBuf.readLong:()J
      13: lreturn

  public short readShort() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_2
       2: invokespecial #37                 // Method checkAvailable:(I)V
       5: aload_0
       6: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
       9: invokevirtual #58                 // Method io/netty/buffer/ByteBuf.readShort:()S
      12: ireturn

  public java.lang.String readUTF() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #59                 // Method java/io/DataInputStream.readUTF:(Ljava/io/DataInput;)Ljava/lang/String;
       4: areturn

  public int readUnsignedByte() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #60                 // Method readByte:()B
       4: sipush        255
       7: iand
       8: ireturn

  public int readUnsignedShort() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method readShort:()S
       4: ldc           #61                 // int 65535
       6: iand
       7: ireturn

  public int skipBytes(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method available:()I
       4: iload_1
       5: invokestatic  #29                 // Method java/lang/Math.min:(II)I
       8: istore_2
       9: aload_0
      10: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
      13: iload_2
      14: invokevirtual #52                 // Method io/netty/buffer/ByteBuf.skipBytes:(I)Lio/netty/buffer/ByteBuf;
      17: pop
      18: iload_2
      19: ireturn

  private void checkAvailable(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: ifge          14
       4: new           #10                 // class java/lang/IndexOutOfBoundsException
       7: dup
       8: ldc           #62                 // String fieldSize cannot be a negative number
      10: invokespecial #18                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_1
      15: aload_0
      16: invokevirtual #27                 // Method available:()I
      19: if_icmple     61
      22: new           #39                 // class java/io/EOFException
      25: dup
      26: new           #11                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #63                 // String fieldSize is too long! Length is
      35: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: iload_1
      39: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      42: ldc           #64                 // String , but maximum is
      44: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_0
      48: invokevirtual #27                 // Method available:()I
      51: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      54: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokespecial #65                 // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: return
}
