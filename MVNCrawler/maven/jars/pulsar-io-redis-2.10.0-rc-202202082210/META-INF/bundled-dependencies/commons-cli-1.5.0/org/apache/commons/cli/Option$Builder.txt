Compiled from "Option.java"
public final class org.apache.commons.cli.Option$Builder {
  private java.lang.String option;

  private java.lang.String description;

  private java.lang.String longOption;

  private java.lang.String argName;

  private boolean required;

  private boolean optionalArg;

  private int argCount;

  private java.lang.Class<?> type;

  private char valueSeparator;

  private org.apache.commons.cli.Option$Builder(java.lang.String) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokespecial #12                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #7                  // Field argCount:I
       9: aload_0
      10: ldc           #13                 // class java/lang/String
      12: putfield      #3                  // Field type:Ljava/lang/Class;
      15: aload_0
      16: aload_1
      17: invokevirtual #14                 // Method option:(Ljava/lang/String;)Lorg/apache/commons/cli/Option$Builder;
      20: pop
      21: return

  public org.apache.commons.cli.Option$Builder argName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field argName:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.commons.cli.Option build();
    Code:
       0: aload_0
       1: getfield      #6                  // Field option:Ljava/lang/String;
       4: ifnonnull     24
       7: aload_0
       8: getfield      #8                  // Field longOption:Ljava/lang/String;
      11: ifnonnull     24
      14: new           #15                 // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #16                 // String Either opt or longOpt must be specified
      20: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: new           #1                  // class org/apache/commons/cli/Option
      27: dup
      28: aload_0
      29: aconst_null
      30: invokespecial #18                 // Method org/apache/commons/cli/Option."<init>":(Lorg/apache/commons/cli/Option$Builder;Lorg/apache/commons/cli/Option$1;)V
      33: areturn

  public org.apache.commons.cli.Option$Builder desc(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field description:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.commons.cli.Option$Builder hasArg();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #19                 // Method hasArg:(Z)Lorg/apache/commons/cli/Option$Builder;
       5: areturn

  public org.apache.commons.cli.Option$Builder hasArg(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: ifeq          9
       5: iconst_1
       6: goto          10
       9: iconst_m1
      10: putfield      #7                  // Field argCount:I
      13: aload_0
      14: areturn

  public org.apache.commons.cli.Option$Builder hasArgs();
    Code:
       0: aload_0
       1: bipush        -2
       3: putfield      #7                  // Field argCount:I
       6: aload_0
       7: areturn

  public org.apache.commons.cli.Option$Builder longOpt(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field longOption:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.commons.cli.Option$Builder numberOfArgs(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field argCount:I
       5: aload_0
       6: areturn

  public org.apache.commons.cli.Option$Builder option(java.lang.String) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #20                 // Method org/apache/commons/cli/OptionValidator.validate:(Ljava/lang/String;)Ljava/lang/String;
       5: putfield      #6                  // Field option:Ljava/lang/String;
       8: aload_0
       9: areturn

  public org.apache.commons.cli.Option$Builder optionalArg(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field optionalArg:Z
       5: aload_0
       6: areturn

  public org.apache.commons.cli.Option$Builder required();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #21                 // Method required:(Z)Lorg/apache/commons/cli/Option$Builder;
       5: areturn

  public org.apache.commons.cli.Option$Builder required(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field required:Z
       5: aload_0
       6: areturn

  public org.apache.commons.cli.Option$Builder type(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field type:Ljava/lang/Class;
       5: aload_0
       6: areturn

  public org.apache.commons.cli.Option$Builder valueSeparator();
    Code:
       0: aload_0
       1: bipush        61
       3: invokevirtual #22                 // Method valueSeparator:(C)Lorg/apache/commons/cli/Option$Builder;
       6: areturn

  public org.apache.commons.cli.Option$Builder valueSeparator(char);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field valueSeparator:C
       5: aload_0
       6: areturn

  org.apache.commons.cli.Option$Builder(java.lang.String, org.apache.commons.cli.Option$1) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #11                 // Method "<init>":(Ljava/lang/String;)V
       5: return

  static java.lang.String access$200(org.apache.commons.cli.Option$Builder);
    Code:
       0: aload_0
       1: getfield      #10                 // Field argName:Ljava/lang/String;
       4: areturn

  static java.lang.String access$300(org.apache.commons.cli.Option$Builder);
    Code:
       0: aload_0
       1: getfield      #9                  // Field description:Ljava/lang/String;
       4: areturn

  static java.lang.String access$400(org.apache.commons.cli.Option$Builder);
    Code:
       0: aload_0
       1: getfield      #8                  // Field longOption:Ljava/lang/String;
       4: areturn

  static int access$500(org.apache.commons.cli.Option$Builder);
    Code:
       0: aload_0
       1: getfield      #7                  // Field argCount:I
       4: ireturn

  static java.lang.String access$600(org.apache.commons.cli.Option$Builder);
    Code:
       0: aload_0
       1: getfield      #6                  // Field option:Ljava/lang/String;
       4: areturn

  static boolean access$700(org.apache.commons.cli.Option$Builder);
    Code:
       0: aload_0
       1: getfield      #5                  // Field optionalArg:Z
       4: ireturn

  static boolean access$800(org.apache.commons.cli.Option$Builder);
    Code:
       0: aload_0
       1: getfield      #4                  // Field required:Z
       4: ireturn

  static java.lang.Class access$900(org.apache.commons.cli.Option$Builder);
    Code:
       0: aload_0
       1: getfield      #3                  // Field type:Ljava/lang/Class;
       4: areturn

  static char access$1000(org.apache.commons.cli.Option$Builder);
    Code:
       0: aload_0
       1: getfield      #2                  // Field valueSeparator:C
       4: ireturn
}
