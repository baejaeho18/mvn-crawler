Compiled from "FailoverAppender.java"
public final class org.apache.logging.log4j.core.appender.FailoverAppender extends org.apache.logging.log4j.core.appender.AbstractAppender {
  private static final int DEFAULT_INTERVAL_SECONDS;

  private final java.lang.String primaryRef;

  private final java.lang.String[] failovers;

  private final org.apache.logging.log4j.core.config.Configuration config;

  private org.apache.logging.log4j.core.config.AppenderControl primary;

  private final java.util.List<org.apache.logging.log4j.core.config.AppenderControl> failoverAppenders;

  private final long intervalNanos;

  private volatile long nextCheckNanos;

  private org.apache.logging.log4j.core.appender.FailoverAppender(java.lang.String, org.apache.logging.log4j.core.Filter, java.lang.String, java.lang.String[], int, org.apache.logging.log4j.core.config.Configuration, boolean, org.apache.logging.log4j.core.config.Property[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: iload         7
       6: aload         8
       8: invokespecial #1                  // Method org/apache/logging/log4j/core/appender/AbstractAppender."<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/Filter;Lorg/apache/logging/log4j/core/Layout;Z[Lorg/apache/logging/log4j/core/config/Property;)V
      11: aload_0
      12: new           #2                  // class java/util/ArrayList
      15: dup
      16: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      19: putfield      #4                  // Field failoverAppenders:Ljava/util/List;
      22: aload_0
      23: aload_3
      24: putfield      #5                  // Field primaryRef:Ljava/lang/String;
      27: aload_0
      28: aload         4
      30: putfield      #6                  // Field failovers:[Ljava/lang/String;
      33: aload_0
      34: aload         6
      36: putfield      #7                  // Field config:Lorg/apache/logging/log4j/core/config/Configuration;
      39: aload_0
      40: getstatic     #8                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      43: iload         5
      45: i2l
      46: invokevirtual #9                  // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      49: putfield      #10                 // Field intervalNanos:J
      52: return

  public void start();
    Code:
       0: aload_0
       1: getfield      #7                  // Field config:Lorg/apache/logging/log4j/core/config/Configuration;
       4: invokeinterface #11,  1           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.getAppenders:()Ljava/util/Map;
       9: astore_1
      10: iconst_0
      11: istore_2
      12: aload_1
      13: aload_0
      14: getfield      #5                  // Field primaryRef:Ljava/lang/String;
      17: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #13                 // class org/apache/logging/log4j/core/Appender
      25: astore_3
      26: aload_3
      27: ifnull        47
      30: aload_0
      31: new           #14                 // class org/apache/logging/log4j/core/config/AppenderControl
      34: dup
      35: aload_3
      36: aconst_null
      37: aconst_null
      38: invokespecial #15                 // Method org/apache/logging/log4j/core/config/AppenderControl."<init>":(Lorg/apache/logging/log4j/core/Appender;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/core/Filter;)V
      41: putfield      #16                 // Field primary:Lorg/apache/logging/log4j/core/config/AppenderControl;
      44: goto          80
      47: getstatic     #17                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      50: new           #18                 // class java/lang/StringBuilder
      53: dup
      54: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      57: ldc           #20                 // String Unable to locate primary Appender
      59: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_0
      63: getfield      #5                  // Field primaryRef:Ljava/lang/String;
      66: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: invokeinterface #23,  2           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
      77: iinc          2, 1
      80: aload_0
      81: getfield      #6                  // Field failovers:[Ljava/lang/String;
      84: astore        4
      86: aload         4
      88: arraylength
      89: istore        5
      91: iconst_0
      92: istore        6
      94: iload         6
      96: iload         5
      98: if_icmpge     189
     101: aload         4
     103: iload         6
     105: aaload
     106: astore        7
     108: aload_1
     109: aload         7
     111: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     116: checkcast     #13                 // class org/apache/logging/log4j/core/Appender
     119: astore        8
     121: aload         8
     123: ifnull        150
     126: aload_0
     127: getfield      #4                  // Field failoverAppenders:Ljava/util/List;
     130: new           #14                 // class org/apache/logging/log4j/core/config/AppenderControl
     133: dup
     134: aload         8
     136: aconst_null
     137: aconst_null
     138: invokespecial #15                 // Method org/apache/logging/log4j/core/config/AppenderControl."<init>":(Lorg/apache/logging/log4j/core/Appender;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/core/Filter;)V
     141: invokeinterface #24,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     146: pop
     147: goto          183
     150: getstatic     #17                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
     153: new           #18                 // class java/lang/StringBuilder
     156: dup
     157: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
     160: ldc           #25                 // String Failover appender
     162: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     165: aload         7
     167: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: ldc           #26                 // String  is not configured
     172: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     175: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     178: invokeinterface #23,  2           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
     183: iinc          6, 1
     186: goto          94
     189: aload_0
     190: getfield      #4                  // Field failoverAppenders:Ljava/util/List;
     193: invokeinterface #27,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     198: ifeq          214
     201: getstatic     #17                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
     204: ldc           #28                 // String No failover appenders are available
     206: invokeinterface #23,  2           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
     211: iinc          2, 1
     214: iload_2
     215: ifne          222
     218: aload_0
     219: invokespecial #29                 // Method org/apache/logging/log4j/core/appender/AbstractAppender.start:()V
     222: return

  public void append(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method isStarted:()Z
       4: ifne          39
       7: aload_0
       8: new           #18                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #31                 // String FailoverAppender
      17: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_0
      21: invokevirtual #32                 // Method getName:()Ljava/lang/String;
      24: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: ldc           #33                 // String  did not start successfully
      29: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokevirtual #34                 // Method error:(Ljava/lang/String;)V
      38: return
      39: aload_0
      40: getfield      #35                 // Field nextCheckNanos:J
      43: lstore_2
      44: lload_2
      45: lconst_0
      46: lcmp
      47: ifeq          60
      50: invokestatic  #36                 // Method java/lang/System.nanoTime:()J
      53: lload_2
      54: lsub
      55: lconst_0
      56: lcmp
      57: ifle          68
      60: aload_0
      61: aload_1
      62: invokespecial #37                 // Method callAppender:(Lorg/apache/logging/log4j/core/LogEvent;)V
      65: goto          74
      68: aload_0
      69: aload_1
      70: aconst_null
      71: invokespecial #38                 // Method failover:(Lorg/apache/logging/log4j/core/LogEvent;Ljava/lang/Exception;)V
      74: return

  private void callAppender(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: getfield      #16                 // Field primary:Lorg/apache/logging/log4j/core/config/AppenderControl;
       4: aload_1
       5: invokevirtual #39                 // Method org/apache/logging/log4j/core/config/AppenderControl.callAppender:(Lorg/apache/logging/log4j/core/LogEvent;)V
       8: aload_0
       9: lconst_0
      10: putfield      #35                 // Field nextCheckNanos:J
      13: goto          35
      16: astore_2
      17: aload_0
      18: invokestatic  #36                 // Method java/lang/System.nanoTime:()J
      21: aload_0
      22: getfield      #10                 // Field intervalNanos:J
      25: ladd
      26: putfield      #35                 // Field nextCheckNanos:J
      29: aload_0
      30: aload_1
      31: aload_2
      32: invokespecial #38                 // Method failover:(Lorg/apache/logging/log4j/core/LogEvent;Ljava/lang/Exception;)V
      35: return
    Exception table:
       from    to  target type
           0    13    16   Class java/lang/Exception

  private void failover(org.apache.logging.log4j.core.LogEvent, java.lang.Exception);
    Code:
       0: aload_2
       1: ifnull        29
       4: aload_2
       5: instanceof    #41                 // class org/apache/logging/log4j/LoggingException
       8: ifeq          18
      11: aload_2
      12: checkcast     #41                 // class org/apache/logging/log4j/LoggingException
      15: goto          30
      18: new           #41                 // class org/apache/logging/log4j/LoggingException
      21: dup
      22: aload_2
      23: invokespecial #42                 // Method org/apache/logging/log4j/LoggingException."<init>":(Ljava/lang/Throwable;)V
      26: goto          30
      29: aconst_null
      30: astore_3
      31: iconst_0
      32: istore        4
      34: aconst_null
      35: astore        5
      37: aload_0
      38: getfield      #4                  // Field failoverAppenders:Ljava/util/List;
      41: invokeinterface #43,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      46: astore        6
      48: aload         6
      50: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      55: ifeq          96
      58: aload         6
      60: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      65: checkcast     #14                 // class org/apache/logging/log4j/core/config/AppenderControl
      68: astore        7
      70: aload         7
      72: aload_1
      73: invokevirtual #39                 // Method org/apache/logging/log4j/core/config/AppenderControl.callAppender:(Lorg/apache/logging/log4j/core/LogEvent;)V
      76: iconst_1
      77: istore        4
      79: goto          96
      82: astore        8
      84: aload         5
      86: ifnonnull     93
      89: aload         8
      91: astore        5
      93: goto          48
      96: iload         4
      98: ifne          126
     101: aload_0
     102: invokevirtual #46                 // Method ignoreExceptions:()Z
     105: ifne          126
     108: aload_3
     109: ifnull        114
     112: aload_3
     113: athrow
     114: new           #41                 // class org/apache/logging/log4j/LoggingException
     117: dup
     118: ldc           #47                 // String Unable to write to failover appenders
     120: aload         5
     122: invokespecial #48                 // Method org/apache/logging/log4j/LoggingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     125: athrow
     126: return
    Exception table:
       from    to  target type
          70    79    82   Class java/lang/Exception

  public java.lang.String toString();
    Code:
       0: new           #18                 // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: invokevirtual #32                 // Method getName:()Ljava/lang/String;
       8: invokespecial #49                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      11: astore_1
      12: aload_1
      13: ldc           #50                 // String  primary=
      15: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: aload_0
      19: getfield      #16                 // Field primary:Lorg/apache/logging/log4j/core/config/AppenderControl;
      22: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      25: ldc           #52                 // String , failover={
      27: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: pop
      31: iconst_1
      32: istore_2
      33: aload_0
      34: getfield      #6                  // Field failovers:[Ljava/lang/String;
      37: astore_3
      38: aload_3
      39: arraylength
      40: istore        4
      42: iconst_0
      43: istore        5
      45: iload         5
      47: iload         4
      49: if_icmpge     84
      52: aload_3
      53: iload         5
      55: aaload
      56: astore        6
      58: iload_2
      59: ifne          69
      62: aload_1
      63: ldc           #53                 // String ,
      65: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: pop
      69: aload_1
      70: aload         6
      72: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: pop
      76: iconst_0
      77: istore_2
      78: iinc          5, 1
      81: goto          45
      84: aload_1
      85: bipush        125
      87: invokevirtual #54                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      90: pop
      91: aload_1
      92: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      95: areturn

  public static org.apache.logging.log4j.core.appender.FailoverAppender createAppender(java.lang.String, java.lang.String, java.lang.String[], java.lang.String, org.apache.logging.log4j.core.config.Configuration, org.apache.logging.log4j.core.Filter, java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     16
       4: getstatic     #17                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       7: ldc           #55                 // String A name for the Appender must be specified
       9: invokeinterface #23,  2           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
      14: aconst_null
      15: areturn
      16: aload_1
      17: ifnonnull     32
      20: getstatic     #17                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      23: ldc           #56                 // String A primary Appender must be specified
      25: invokeinterface #23,  2           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
      30: aconst_null
      31: areturn
      32: aload_2
      33: ifnull        41
      36: aload_2
      37: arraylength
      38: ifne          53
      41: getstatic     #17                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      44: ldc           #57                 // String At least one failover Appender must be specified
      46: invokeinterface #23,  2           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
      51: aconst_null
      52: areturn
      53: aload_3
      54: bipush        60
      56: invokestatic  #59                 // Method parseInt:(Ljava/lang/String;I)I
      59: istore        7
      61: iload         7
      63: iflt          77
      66: iload         7
      68: sipush        1000
      71: imul
      72: istore        8
      74: goto          113
      77: getstatic     #17                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      80: new           #18                 // class java/lang/StringBuilder
      83: dup
      84: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      87: ldc           #61                 // String Interval
      89: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: aload_3
      93: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: ldc           #62                 // String  is less than zero. Using default
      98: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     104: invokeinterface #63,  2           // InterfaceMethod org/apache/logging/log4j/Logger.warn:(Ljava/lang/String;)V
     109: ldc           #64                 // int 60000
     111: istore        8
     113: aload         6
     115: iconst_1
     116: invokestatic  #65                 // Method org/apache/logging/log4j/core/util/Booleans.parseBoolean:(Ljava/lang/String;Z)Z
     119: istore        9
     121: new           #58                 // class org/apache/logging/log4j/core/appender/FailoverAppender
     124: dup
     125: aload_0
     126: aload         5
     128: aload_1
     129: aload_2
     130: iload         8
     132: aload         4
     134: iload         9
     136: aconst_null
     137: invokespecial #66                 // Method "<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/Filter;Ljava/lang/String;[Ljava/lang/String;ILorg/apache/logging/log4j/core/config/Configuration;Z[Lorg/apache/logging/log4j/core/config/Property;)V
     140: areturn
}
