Compiled from "PosixViewAttributeAction.java"
class org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction$1 extends java.nio.file.SimpleFileVisitor<java.nio.file.Path> {
  final java.util.List val$conditions;

  final java.nio.file.Path val$basePath;

  final org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction this$0;

  org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction$1(org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction, java.util.List, java.nio.file.Path);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/logging/log4j/core/appender/rolling/action/PosixViewAttributeAction;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$conditions:Ljava/util/List;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$basePath:Ljava/nio/file/Path;
      15: aload_0
      16: invokespecial #4                  // Method java/nio/file/SimpleFileVisitor."<init>":()V
      19: return

  public java.nio.file.FileVisitResult visitFile(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$conditions:Ljava/util/List;
       4: invokeinterface #5,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          82
      19: aload_3
      20: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #8                  // class org/apache/logging/log4j/core/appender/rolling/action/PathCondition
      28: astore        4
      30: aload_0
      31: getfield      #3                  // Field val$basePath:Ljava/nio/file/Path;
      34: aload_1
      35: invokeinterface #9,  2            // InterfaceMethod java/nio/file/Path.relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
      40: astore        5
      42: aload         4
      44: aload_0
      45: getfield      #3                  // Field val$basePath:Ljava/nio/file/Path;
      48: aload         5
      50: aload_2
      51: invokeinterface #10,  4           // InterfaceMethod org/apache/logging/log4j/core/appender/rolling/action/PathCondition.accept:(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Z
      56: ifne          79
      59: getstatic     #11                 // Field org/apache/logging/log4j/core/appender/rolling/action/AbstractAction.LOGGER:Lorg/apache/logging/log4j/Logger;
      62: ldc           #12                 // String Not defining posix attribute base={}, relative={}
      64: aload_0
      65: getfield      #3                  // Field val$basePath:Ljava/nio/file/Path;
      68: aload         5
      70: invokeinterface #13,  4           // InterfaceMethod org/apache/logging/log4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      75: getstatic     #14                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;
      78: areturn
      79: goto          10
      82: aload_1
      83: aload_0
      84: getfield      #1                  // Field this$0:Lorg/apache/logging/log4j/core/appender/rolling/action/PosixViewAttributeAction;
      87: invokestatic  #15                 // Method org/apache/logging/log4j/core/appender/rolling/action/PosixViewAttributeAction.access$100:(Lorg/apache/logging/log4j/core/appender/rolling/action/PosixViewAttributeAction;)Ljava/util/Set;
      90: aload_0
      91: getfield      #1                  // Field this$0:Lorg/apache/logging/log4j/core/appender/rolling/action/PosixViewAttributeAction;
      94: invokestatic  #16                 // Method org/apache/logging/log4j/core/appender/rolling/action/PosixViewAttributeAction.access$200:(Lorg/apache/logging/log4j/core/appender/rolling/action/PosixViewAttributeAction;)Ljava/lang/String;
      97: aload_0
      98: getfield      #1                  // Field this$0:Lorg/apache/logging/log4j/core/appender/rolling/action/PosixViewAttributeAction;
     101: invokestatic  #17                 // Method org/apache/logging/log4j/core/appender/rolling/action/PosixViewAttributeAction.access$300:(Lorg/apache/logging/log4j/core/appender/rolling/action/PosixViewAttributeAction;)Ljava/lang/String;
     104: invokestatic  #18                 // Method org/apache/logging/log4j/core/util/FileUtils.defineFilePosixAttributeView:(Ljava/nio/file/Path;Ljava/util/Set;Ljava/lang/String;Ljava/lang/String;)V
     107: getstatic     #14                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;
     110: areturn

  public java.nio.file.FileVisitResult visitFile(java.lang.Object, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #19                 // class java/nio/file/Path
       5: aload_2
       6: invokevirtual #20                 // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
       9: areturn
}
