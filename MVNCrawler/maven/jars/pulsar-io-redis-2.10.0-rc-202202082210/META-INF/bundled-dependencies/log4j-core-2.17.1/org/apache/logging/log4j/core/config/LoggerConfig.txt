Compiled from "LoggerConfig.java"
public class org.apache.logging.log4j.core.config.LoggerConfig extends org.apache.logging.log4j.core.filter.AbstractFilterable implements org.apache.logging.log4j.core.impl.LocationAware {
  public static final java.lang.String ROOT;

  private static org.apache.logging.log4j.core.impl.LogEventFactory LOG_EVENT_FACTORY;

  private java.util.List<org.apache.logging.log4j.core.config.AppenderRef> appenderRefs;

  private final org.apache.logging.log4j.core.config.AppenderControlArraySet appenders;

  private final java.lang.String name;

  private org.apache.logging.log4j.core.impl.LogEventFactory logEventFactory;

  private org.apache.logging.log4j.Level level;

  private boolean additive;

  private boolean includeLocation;

  private org.apache.logging.log4j.core.config.LoggerConfig parent;

  private java.util.Map<org.apache.logging.log4j.core.config.Property, java.lang.Boolean> propertiesMap;

  private final java.util.List<org.apache.logging.log4j.core.config.Property> properties;

  private final boolean propertiesRequireLookup;

  private final org.apache.logging.log4j.core.config.Configuration config;

  private final org.apache.logging.log4j.core.config.ReliabilityStrategy reliabilityStrategy;

  public org.apache.logging.log4j.core.config.LoggerConfig();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/logging/log4j/core/filter/AbstractFilterable."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field appenderRefs:Ljava/util/List;
      15: aload_0
      16: new           #5                  // class org/apache/logging/log4j/core/config/AppenderControlArraySet
      19: dup
      20: invokespecial #6                  // Method org/apache/logging/log4j/core/config/AppenderControlArraySet."<init>":()V
      23: putfield      #7                  // Field appenders:Lorg/apache/logging/log4j/core/config/AppenderControlArraySet;
      26: aload_0
      27: iconst_1
      28: putfield      #8                  // Field additive:Z
      31: aload_0
      32: iconst_1
      33: putfield      #9                  // Field includeLocation:Z
      36: aload_0
      37: getstatic     #10                 // Field LOG_EVENT_FACTORY:Lorg/apache/logging/log4j/core/impl/LogEventFactory;
      40: putfield      #11                 // Field logEventFactory:Lorg/apache/logging/log4j/core/impl/LogEventFactory;
      43: aload_0
      44: getstatic     #12                 // Field org/apache/logging/log4j/Level.ERROR:Lorg/apache/logging/log4j/Level;
      47: putfield      #13                 // Field level:Lorg/apache/logging/log4j/Level;
      50: aload_0
      51: ldc           #15                 // String
      53: putfield      #16                 // Field name:Ljava/lang/String;
      56: aload_0
      57: aconst_null
      58: putfield      #17                 // Field properties:Ljava/util/List;
      61: aload_0
      62: iconst_0
      63: putfield      #18                 // Field propertiesRequireLookup:Z
      66: aload_0
      67: aconst_null
      68: putfield      #19                 // Field config:Lorg/apache/logging/log4j/core/config/Configuration;
      71: aload_0
      72: new           #20                 // class org/apache/logging/log4j/core/config/DefaultReliabilityStrategy
      75: dup
      76: aload_0
      77: invokespecial #21                 // Method org/apache/logging/log4j/core/config/DefaultReliabilityStrategy."<init>":(Lorg/apache/logging/log4j/core/config/LoggerConfig;)V
      80: putfield      #22                 // Field reliabilityStrategy:Lorg/apache/logging/log4j/core/config/ReliabilityStrategy;
      83: return

  public org.apache.logging.log4j.core.config.LoggerConfig(java.lang.String, org.apache.logging.log4j.Level, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/logging/log4j/core/filter/AbstractFilterable."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field appenderRefs:Ljava/util/List;
      15: aload_0
      16: new           #5                  // class org/apache/logging/log4j/core/config/AppenderControlArraySet
      19: dup
      20: invokespecial #6                  // Method org/apache/logging/log4j/core/config/AppenderControlArraySet."<init>":()V
      23: putfield      #7                  // Field appenders:Lorg/apache/logging/log4j/core/config/AppenderControlArraySet;
      26: aload_0
      27: iconst_1
      28: putfield      #8                  // Field additive:Z
      31: aload_0
      32: iconst_1
      33: putfield      #9                  // Field includeLocation:Z
      36: aload_0
      37: getstatic     #10                 // Field LOG_EVENT_FACTORY:Lorg/apache/logging/log4j/core/impl/LogEventFactory;
      40: putfield      #11                 // Field logEventFactory:Lorg/apache/logging/log4j/core/impl/LogEventFactory;
      43: aload_0
      44: aload_1
      45: putfield      #16                 // Field name:Ljava/lang/String;
      48: aload_0
      49: aload_2
      50: putfield      #13                 // Field level:Lorg/apache/logging/log4j/Level;
      53: aload_0
      54: iload_3
      55: putfield      #8                  // Field additive:Z
      58: aload_0
      59: aconst_null
      60: putfield      #17                 // Field properties:Ljava/util/List;
      63: aload_0
      64: iconst_0
      65: putfield      #18                 // Field propertiesRequireLookup:Z
      68: aload_0
      69: aconst_null
      70: putfield      #19                 // Field config:Lorg/apache/logging/log4j/core/config/Configuration;
      73: aload_0
      74: new           #20                 // class org/apache/logging/log4j/core/config/DefaultReliabilityStrategy
      77: dup
      78: aload_0
      79: invokespecial #21                 // Method org/apache/logging/log4j/core/config/DefaultReliabilityStrategy."<init>":(Lorg/apache/logging/log4j/core/config/LoggerConfig;)V
      82: putfield      #22                 // Field reliabilityStrategy:Lorg/apache/logging/log4j/core/config/ReliabilityStrategy;
      85: return

  protected org.apache.logging.log4j.core.config.LoggerConfig(java.lang.String, java.util.List<org.apache.logging.log4j.core.config.AppenderRef>, org.apache.logging.log4j.core.Filter, org.apache.logging.log4j.Level, boolean, org.apache.logging.log4j.core.config.Property[], org.apache.logging.log4j.core.config.Configuration, boolean);
    Code:
       0: aload_0
       1: aload_3
       2: invokespecial #23                 // Method org/apache/logging/log4j/core/filter/AbstractFilterable."<init>":(Lorg/apache/logging/log4j/core/Filter;)V
       5: aload_0
       6: new           #2                  // class java/util/ArrayList
       9: dup
      10: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      13: putfield      #4                  // Field appenderRefs:Ljava/util/List;
      16: aload_0
      17: new           #5                  // class org/apache/logging/log4j/core/config/AppenderControlArraySet
      20: dup
      21: invokespecial #6                  // Method org/apache/logging/log4j/core/config/AppenderControlArraySet."<init>":()V
      24: putfield      #7                  // Field appenders:Lorg/apache/logging/log4j/core/config/AppenderControlArraySet;
      27: aload_0
      28: iconst_1
      29: putfield      #8                  // Field additive:Z
      32: aload_0
      33: iconst_1
      34: putfield      #9                  // Field includeLocation:Z
      37: aload_0
      38: getstatic     #10                 // Field LOG_EVENT_FACTORY:Lorg/apache/logging/log4j/core/impl/LogEventFactory;
      41: putfield      #11                 // Field logEventFactory:Lorg/apache/logging/log4j/core/impl/LogEventFactory;
      44: aload_0
      45: aload_1
      46: putfield      #16                 // Field name:Ljava/lang/String;
      49: aload_0
      50: aload_2
      51: putfield      #4                  // Field appenderRefs:Ljava/util/List;
      54: aload_0
      55: aload         4
      57: putfield      #13                 // Field level:Lorg/apache/logging/log4j/Level;
      60: aload_0
      61: iload         5
      63: putfield      #8                  // Field additive:Z
      66: aload_0
      67: iload         8
      69: putfield      #9                  // Field includeLocation:Z
      72: aload_0
      73: aload         7
      75: putfield      #19                 // Field config:Lorg/apache/logging/log4j/core/config/Configuration;
      78: aload         6
      80: ifnull        110
      83: aload         6
      85: arraylength
      86: ifle          110
      89: aload_0
      90: aload         6
      92: aload         6
      94: arraylength
      95: invokestatic  #24                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      98: invokestatic  #25                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     101: invokestatic  #26                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
     104: putfield      #17                 // Field properties:Ljava/util/List;
     107: goto          115
     110: aload_0
     111: aconst_null
     112: putfield      #17                 // Field properties:Ljava/util/List;
     115: aload_0
     116: aload         6
     118: invokestatic  #27                 // Method containsPropertyRequiringLookup:([Lorg/apache/logging/log4j/core/config/Property;)Z
     121: putfield      #18                 // Field propertiesRequireLookup:Z
     124: aload_0
     125: aload         7
     127: aload_0
     128: invokeinterface #28,  2           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.getReliabilityStrategy:(Lorg/apache/logging/log4j/core/config/LoggerConfig;)Lorg/apache/logging/log4j/core/config/ReliabilityStrategy;
     133: putfield      #22                 // Field reliabilityStrategy:Lorg/apache/logging/log4j/core/config/ReliabilityStrategy;
     136: return

  private static boolean containsPropertyRequiringLookup(org.apache.logging.log4j.core.config.Property[]);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: iconst_0
       7: istore_1
       8: iload_1
       9: aload_0
      10: arraylength
      11: if_icmpge     31
      14: aload_0
      15: iload_1
      16: aaload
      17: invokevirtual #29                 // Method org/apache/logging/log4j/core/config/Property.isValueNeedsLookup:()Z
      20: ifeq          25
      23: iconst_1
      24: ireturn
      25: iinc          1, 1
      28: goto          8
      31: iconst_0
      32: ireturn

  public org.apache.logging.log4j.core.Filter getFilter();
    Code:
       0: aload_0
       1: invokespecial #30                 // Method org/apache/logging/log4j/core/filter/AbstractFilterable.getFilter:()Lorg/apache/logging/log4j/core/Filter;
       4: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #16                 // Field name:Ljava/lang/String;
       4: areturn

  public void setParent(org.apache.logging.log4j.core.config.LoggerConfig);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field parent:Lorg/apache/logging/log4j/core/config/LoggerConfig;
       5: return

  public org.apache.logging.log4j.core.config.LoggerConfig getParent();
    Code:
       0: aload_0
       1: getfield      #31                 // Field parent:Lorg/apache/logging/log4j/core/config/LoggerConfig;
       4: areturn

  public void addAppender(org.apache.logging.log4j.core.Appender, org.apache.logging.log4j.Level, org.apache.logging.log4j.core.Filter);
    Code:
       0: aload_0
       1: getfield      #7                  // Field appenders:Lorg/apache/logging/log4j/core/config/AppenderControlArraySet;
       4: new           #32                 // class org/apache/logging/log4j/core/config/AppenderControl
       7: dup
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokespecial #33                 // Method org/apache/logging/log4j/core/config/AppenderControl."<init>":(Lorg/apache/logging/log4j/core/Appender;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/core/Filter;)V
      14: invokevirtual #34                 // Method org/apache/logging/log4j/core/config/AppenderControlArraySet.add:(Lorg/apache/logging/log4j/core/config/AppenderControl;)Z
      17: pop
      18: return

  public void removeAppender(java.lang.String);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #7                  // Field appenders:Lorg/apache/logging/log4j/core/config/AppenderControlArraySet;
       6: aload_1
       7: invokevirtual #35                 // Method org/apache/logging/log4j/core/config/AppenderControlArraySet.remove:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/config/AppenderControl;
      10: dup
      11: astore_2
      12: ifnull        23
      15: aload_0
      16: aload_2
      17: invokespecial #36                 // Method cleanupFilter:(Lorg/apache/logging/log4j/core/config/AppenderControl;)V
      20: goto          2
      23: return

  public java.util.Map<java.lang.String, org.apache.logging.log4j.core.Appender> getAppenders();
    Code:
       0: aload_0
       1: getfield      #7                  // Field appenders:Lorg/apache/logging/log4j/core/config/AppenderControlArraySet;
       4: invokevirtual #37                 // Method org/apache/logging/log4j/core/config/AppenderControlArraySet.asMap:()Ljava/util/Map;
       7: areturn

  protected void clearAppenders();
    Code:
       0: aload_0
       1: getfield      #7                  // Field appenders:Lorg/apache/logging/log4j/core/config/AppenderControlArraySet;
       4: invokevirtual #38                 // Method org/apache/logging/log4j/core/config/AppenderControlArraySet.clear:()[Lorg/apache/logging/log4j/core/config/AppenderControl;
       7: astore_1
       8: aload_1
       9: astore_2
      10: aload_2
      11: arraylength
      12: istore_3
      13: iconst_0
      14: istore        4
      16: iload         4
      18: iload_3
      19: if_icmpge     40
      22: aload_2
      23: iload         4
      25: aaload
      26: astore        5
      28: aload_0
      29: aload         5
      31: invokespecial #36                 // Method cleanupFilter:(Lorg/apache/logging/log4j/core/config/AppenderControl;)V
      34: iinc          4, 1
      37: goto          16
      40: aload_0
      41: getfield      #7                  // Field appenders:Lorg/apache/logging/log4j/core/config/AppenderControlArraySet;
      44: invokevirtual #39                 // Method org/apache/logging/log4j/core/config/AppenderControlArraySet.isEmpty:()Z
      47: ifeq          0
      50: return

  private void cleanupFilter(org.apache.logging.log4j.core.config.AppenderControl);
    Code:
       0: aload_1
       1: invokevirtual #40                 // Method org/apache/logging/log4j/core/config/AppenderControl.getFilter:()Lorg/apache/logging/log4j/core/Filter;
       4: astore_2
       5: aload_2
       6: ifnull        20
       9: aload_1
      10: aload_2
      11: invokevirtual #41                 // Method org/apache/logging/log4j/core/config/AppenderControl.removeFilter:(Lorg/apache/logging/log4j/core/Filter;)V
      14: aload_2
      15: invokeinterface #42,  1           // InterfaceMethod org/apache/logging/log4j/core/Filter.stop:()V
      20: return

  public java.util.List<org.apache.logging.log4j.core.config.AppenderRef> getAppenderRefs();
    Code:
       0: aload_0
       1: getfield      #4                  // Field appenderRefs:Ljava/util/List;
       4: areturn

  public void setLevel(org.apache.logging.log4j.Level);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field level:Lorg/apache/logging/log4j/Level;
       5: return

  public org.apache.logging.log4j.Level getLevel();
    Code:
       0: aload_0
       1: getfield      #13                 // Field level:Lorg/apache/logging/log4j/Level;
       4: ifnonnull     30
       7: aload_0
       8: getfield      #31                 // Field parent:Lorg/apache/logging/log4j/core/config/LoggerConfig;
      11: ifnonnull     20
      14: getstatic     #12                 // Field org/apache/logging/log4j/Level.ERROR:Lorg/apache/logging/log4j/Level;
      17: goto          34
      20: aload_0
      21: getfield      #31                 // Field parent:Lorg/apache/logging/log4j/core/config/LoggerConfig;
      24: invokevirtual #43                 // Method getLevel:()Lorg/apache/logging/log4j/Level;
      27: goto          34
      30: aload_0
      31: getfield      #13                 // Field level:Lorg/apache/logging/log4j/Level;
      34: areturn

  public org.apache.logging.log4j.core.impl.LogEventFactory getLogEventFactory();
    Code:
       0: aload_0
       1: getfield      #11                 // Field logEventFactory:Lorg/apache/logging/log4j/core/impl/LogEventFactory;
       4: areturn

  public void setLogEventFactory(org.apache.logging.log4j.core.impl.LogEventFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field logEventFactory:Lorg/apache/logging/log4j/core/impl/LogEventFactory;
       5: return

  public boolean isAdditive();
    Code:
       0: aload_0
       1: getfield      #8                  // Field additive:Z
       4: ireturn

  public void setAdditive(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field additive:Z
       5: return

  public boolean isIncludeLocation();
    Code:
       0: aload_0
       1: getfield      #9                  // Field includeLocation:Z
       4: ireturn

  public java.util.Map<org.apache.logging.log4j.core.config.Property, java.lang.Boolean> getProperties();
    Code:
       0: aload_0
       1: getfield      #17                 // Field properties:Ljava/util/List;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #44                 // Field propertiesMap:Ljava/util/Map;
      13: ifnonnull     100
      16: new           #45                 // class java/util/HashMap
      19: dup
      20: aload_0
      21: getfield      #17                 // Field properties:Ljava/util/List;
      24: invokeinterface #46,  1           // InterfaceMethod java/util/List.size:()I
      29: iconst_2
      30: imul
      31: invokespecial #47                 // Method java/util/HashMap."<init>":(I)V
      34: astore_1
      35: iconst_0
      36: istore_2
      37: iload_2
      38: aload_0
      39: getfield      #17                 // Field properties:Ljava/util/List;
      42: invokeinterface #46,  1           // InterfaceMethod java/util/List.size:()I
      47: if_icmpge     92
      50: aload_1
      51: aload_0
      52: getfield      #17                 // Field properties:Ljava/util/List;
      55: iload_2
      56: invokeinterface #48,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      61: aload_0
      62: getfield      #17                 // Field properties:Ljava/util/List;
      65: iload_2
      66: invokeinterface #48,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      71: checkcast     #49                 // class org/apache/logging/log4j/core/config/Property
      74: invokevirtual #29                 // Method org/apache/logging/log4j/core/config/Property.isValueNeedsLookup:()Z
      77: invokestatic  #50                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      80: invokeinterface #51,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      85: pop
      86: iinc          2, 1
      89: goto          37
      92: aload_0
      93: aload_1
      94: invokestatic  #52                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      97: putfield      #44                 // Field propertiesMap:Ljava/util/Map;
     100: aload_0
     101: getfield      #44                 // Field propertiesMap:Ljava/util/Map;
     104: areturn

  public java.util.List<org.apache.logging.log4j.core.config.Property> getPropertyList();
    Code:
       0: aload_0
       1: getfield      #17                 // Field properties:Ljava/util/List;
       4: areturn

  public boolean isPropertiesRequireLookup();
    Code:
       0: aload_0
       1: getfield      #18                 // Field propertiesRequireLookup:Z
       4: ireturn

  public void log(java.lang.String, java.lang.String, org.apache.logging.log4j.Marker, org.apache.logging.log4j.Level, org.apache.logging.log4j.message.Message, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokespecial #53                 // Method getProperties:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)Ljava/util/List;
      13: astore        7
      15: aload_0
      16: getfield      #11                 // Field logEventFactory:Lorg/apache/logging/log4j/core/impl/LogEventFactory;
      19: aload_1
      20: aload_3
      21: aload_2
      22: aload_0
      23: aload_2
      24: invokespecial #54                 // Method location:(Ljava/lang/String;)Ljava/lang/StackTraceElement;
      27: aload         4
      29: aload         5
      31: aload         7
      33: aload         6
      35: invokeinterface #55,  9           // InterfaceMethod org/apache/logging/log4j/core/impl/LogEventFactory.createEvent:(Ljava/lang/String;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;Ljava/lang/StackTraceElement;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/message/Message;Ljava/util/List;Ljava/lang/Throwable;)Lorg/apache/logging/log4j/core/LogEvent;
      40: astore        8
      42: aload_0
      43: aload         8
      45: getstatic     #56                 // Field org/apache/logging/log4j/core/config/LoggerConfig$LoggerConfigPredicate.ALL:Lorg/apache/logging/log4j/core/config/LoggerConfig$LoggerConfigPredicate;
      48: invokevirtual #57                 // Method log:(Lorg/apache/logging/log4j/core/LogEvent;Lorg/apache/logging/log4j/core/config/LoggerConfig$LoggerConfigPredicate;)V
      51: aload         8
      53: invokestatic  #58                 // Method org/apache/logging/log4j/core/impl/ReusableLogEventFactory.release:(Lorg/apache/logging/log4j/core/LogEvent;)V
      56: goto          69
      59: astore        9
      61: aload         8
      63: invokestatic  #58                 // Method org/apache/logging/log4j/core/impl/ReusableLogEventFactory.release:(Lorg/apache/logging/log4j/core/LogEvent;)V
      66: aload         9
      68: athrow
      69: return
    Exception table:
       from    to  target type
          42    51    59   any
          59    61    59   any

  private java.lang.StackTraceElement location(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method requiresLocation:()Z
       4: ifeq          14
       7: aload_1
       8: invokestatic  #60                 // Method org/apache/logging/log4j/util/StackLocatorUtil.calcLocation:(Ljava/lang/String;)Ljava/lang/StackTraceElement;
      11: goto          15
      14: aconst_null
      15: areturn

  public void log(java.lang.String, java.lang.String, java.lang.StackTraceElement, org.apache.logging.log4j.Marker, org.apache.logging.log4j.Level, org.apache.logging.log4j.message.Message, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload         4
       5: aload         5
       7: aload         6
       9: aload         7
      11: invokespecial #53                 // Method getProperties:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)Ljava/util/List;
      14: astore        8
      16: aload_0
      17: getfield      #11                 // Field logEventFactory:Lorg/apache/logging/log4j/core/impl/LogEventFactory;
      20: aload_1
      21: aload         4
      23: aload_2
      24: aload_3
      25: aload         5
      27: aload         6
      29: aload         8
      31: aload         7
      33: invokeinterface #55,  9           // InterfaceMethod org/apache/logging/log4j/core/impl/LogEventFactory.createEvent:(Ljava/lang/String;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;Ljava/lang/StackTraceElement;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/message/Message;Ljava/util/List;Ljava/lang/Throwable;)Lorg/apache/logging/log4j/core/LogEvent;
      38: astore        9
      40: aload_0
      41: aload         9
      43: getstatic     #56                 // Field org/apache/logging/log4j/core/config/LoggerConfig$LoggerConfigPredicate.ALL:Lorg/apache/logging/log4j/core/config/LoggerConfig$LoggerConfigPredicate;
      46: invokevirtual #57                 // Method log:(Lorg/apache/logging/log4j/core/LogEvent;Lorg/apache/logging/log4j/core/config/LoggerConfig$LoggerConfigPredicate;)V
      49: aload         9
      51: invokestatic  #58                 // Method org/apache/logging/log4j/core/impl/ReusableLogEventFactory.release:(Lorg/apache/logging/log4j/core/LogEvent;)V
      54: goto          67
      57: astore        10
      59: aload         9
      61: invokestatic  #58                 // Method org/apache/logging/log4j/core/impl/ReusableLogEventFactory.release:(Lorg/apache/logging/log4j/core/LogEvent;)V
      64: aload         10
      66: athrow
      67: return
    Exception table:
       from    to  target type
          40    49    57   any
          57    59    57   any

  private java.util.List<org.apache.logging.log4j.core.config.Property> getProperties(java.lang.String, java.lang.String, org.apache.logging.log4j.Marker, org.apache.logging.log4j.Level, org.apache.logging.log4j.message.Message, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #17                 // Field properties:Ljava/util/List;
       4: astore        7
       6: aload         7
       8: ifnull        18
      11: aload_0
      12: getfield      #18                 // Field propertiesRequireLookup:Z
      15: ifne          21
      18: aload         7
      20: areturn
      21: aload_0
      22: aload_1
      23: aload_2
      24: aload_3
      25: aload         4
      27: aload         5
      29: aload         6
      31: aload         7
      33: invokespecial #61                 // Method getPropertiesWithLookups:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;Ljava/util/List;)Ljava/util/List;
      36: areturn

  private java.util.List<org.apache.logging.log4j.core.config.Property> getPropertiesWithLookups(java.lang.String, java.lang.String, org.apache.logging.log4j.Marker, org.apache.logging.log4j.Level, org.apache.logging.log4j.message.Message, java.lang.Throwable, java.util.List<org.apache.logging.log4j.core.config.Property>);
    Code:
       0: new           #2                  // class java/util/ArrayList
       3: dup
       4: aload         7
       6: invokeinterface #46,  1           // InterfaceMethod java/util/List.size:()I
      11: invokespecial #62                 // Method java/util/ArrayList."<init>":(I)V
      14: astore        8
      16: invokestatic  #63                 // Method org/apache/logging/log4j/core/impl/Log4jLogEvent.newBuilder:()Lorg/apache/logging/log4j/core/impl/Log4jLogEvent$Builder;
      19: aload         5
      21: invokevirtual #64                 // Method org/apache/logging/log4j/core/impl/Log4jLogEvent$Builder.setMessage:(Lorg/apache/logging/log4j/message/Message;)Lorg/apache/logging/log4j/core/impl/Log4jLogEvent$Builder;
      24: aload_3
      25: invokevirtual #65                 // Method org/apache/logging/log4j/core/impl/Log4jLogEvent$Builder.setMarker:(Lorg/apache/logging/log4j/Marker;)Lorg/apache/logging/log4j/core/impl/Log4jLogEvent$Builder;
      28: aload         4
      30: invokevirtual #66                 // Method org/apache/logging/log4j/core/impl/Log4jLogEvent$Builder.setLevel:(Lorg/apache/logging/log4j/Level;)Lorg/apache/logging/log4j/core/impl/Log4jLogEvent$Builder;
      33: aload_1
      34: invokevirtual #67                 // Method org/apache/logging/log4j/core/impl/Log4jLogEvent$Builder.setLoggerName:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/impl/Log4jLogEvent$Builder;
      37: aload_2
      38: invokevirtual #68                 // Method org/apache/logging/log4j/core/impl/Log4jLogEvent$Builder.setLoggerFqcn:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/impl/Log4jLogEvent$Builder;
      41: aload         6
      43: invokevirtual #69                 // Method org/apache/logging/log4j/core/impl/Log4jLogEvent$Builder.setThrown:(Ljava/lang/Throwable;)Lorg/apache/logging/log4j/core/impl/Log4jLogEvent$Builder;
      46: invokevirtual #70                 // Method org/apache/logging/log4j/core/impl/Log4jLogEvent$Builder.build:()Lorg/apache/logging/log4j/core/impl/Log4jLogEvent;
      49: astore        9
      51: iconst_0
      52: istore        10
      54: iload         10
      56: aload         7
      58: invokeinterface #46,  1           // InterfaceMethod java/util/List.size:()I
      63: if_icmpge     141
      66: aload         7
      68: iload         10
      70: invokeinterface #48,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      75: checkcast     #49                 // class org/apache/logging/log4j/core/config/Property
      78: astore        11
      80: aload         11
      82: invokevirtual #29                 // Method org/apache/logging/log4j/core/config/Property.isValueNeedsLookup:()Z
      85: ifeq          110
      88: aload_0
      89: getfield      #19                 // Field config:Lorg/apache/logging/log4j/core/config/Configuration;
      92: invokeinterface #71,  1           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.getStrSubstitutor:()Lorg/apache/logging/log4j/core/lookup/StrSubstitutor;
      97: aload         9
      99: aload         11
     101: invokevirtual #72                 // Method org/apache/logging/log4j/core/config/Property.getValue:()Ljava/lang/String;
     104: invokevirtual #73                 // Method org/apache/logging/log4j/core/lookup/StrSubstitutor.replace:(Lorg/apache/logging/log4j/core/LogEvent;Ljava/lang/String;)Ljava/lang/String;
     107: goto          115
     110: aload         11
     112: invokevirtual #72                 // Method org/apache/logging/log4j/core/config/Property.getValue:()Ljava/lang/String;
     115: astore        12
     117: aload         8
     119: aload         11
     121: invokevirtual #74                 // Method org/apache/logging/log4j/core/config/Property.getName:()Ljava/lang/String;
     124: aload         12
     126: invokestatic  #75                 // Method org/apache/logging/log4j/core/config/Property.createProperty:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/logging/log4j/core/config/Property;
     129: invokeinterface #76,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     134: pop
     135: iinc          10, 1
     138: goto          54
     141: aload         8
     143: areturn

  public void log(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #56                 // Field org/apache/logging/log4j/core/config/LoggerConfig$LoggerConfigPredicate.ALL:Lorg/apache/logging/log4j/core/config/LoggerConfig$LoggerConfigPredicate;
       5: invokevirtual #57                 // Method log:(Lorg/apache/logging/log4j/core/LogEvent;Lorg/apache/logging/log4j/core/config/LoggerConfig$LoggerConfigPredicate;)V
       8: return

  protected void log(org.apache.logging.log4j.core.LogEvent, org.apache.logging.log4j.core.config.LoggerConfig$LoggerConfigPredicate);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #77                 // Method isFiltered:(Lorg/apache/logging/log4j/core/LogEvent;)Z
       5: ifne          14
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #78                 // Method processLogEvent:(Lorg/apache/logging/log4j/core/LogEvent;Lorg/apache/logging/log4j/core/config/LoggerConfig$LoggerConfigPredicate;)V
      14: return

  public org.apache.logging.log4j.core.config.ReliabilityStrategy getReliabilityStrategy();
    Code:
       0: aload_0
       1: getfield      #22                 // Field reliabilityStrategy:Lorg/apache/logging/log4j/core/config/ReliabilityStrategy;
       4: areturn

  private void processLogEvent(org.apache.logging.log4j.core.LogEvent, org.apache.logging.log4j.core.config.LoggerConfig$LoggerConfigPredicate);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #79                 // Method isIncludeLocation:()Z
       5: invokeinterface #80,  2           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.setIncludeLocation:(Z)V
      10: aload_2
      11: aload_0
      12: invokevirtual #81                 // Method org/apache/logging/log4j/core/config/LoggerConfig$LoggerConfigPredicate.allow:(Lorg/apache/logging/log4j/core/config/LoggerConfig;)Z
      15: ifeq          23
      18: aload_0
      19: aload_1
      20: invokevirtual #82                 // Method callAppenders:(Lorg/apache/logging/log4j/core/LogEvent;)V
      23: aload_0
      24: aload_1
      25: aload_2
      26: invokespecial #83                 // Method logParent:(Lorg/apache/logging/log4j/core/LogEvent;Lorg/apache/logging/log4j/core/config/LoggerConfig$LoggerConfigPredicate;)V
      29: return

  public boolean requiresLocation();
    Code:
       0: aload_0
       1: getfield      #9                  // Field includeLocation:Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #7                  // Field appenders:Lorg/apache/logging/log4j/core/config/AppenderControlArraySet;
      13: invokevirtual #84                 // Method org/apache/logging/log4j/core/config/AppenderControlArraySet.get:()[Lorg/apache/logging/log4j/core/config/AppenderControl;
      16: astore_1
      17: aload_0
      18: astore_2
      19: aload_2
      20: ifnull        108
      23: aload_1
      24: astore_3
      25: aload_3
      26: arraylength
      27: istore        4
      29: iconst_0
      30: istore        5
      32: iload         5
      34: iload         4
      36: if_icmpge     81
      39: aload_3
      40: iload         5
      42: aaload
      43: astore        6
      45: aload         6
      47: invokevirtual #85                 // Method org/apache/logging/log4j/core/config/AppenderControl.getAppender:()Lorg/apache/logging/log4j/core/Appender;
      50: astore        7
      52: aload         7
      54: instanceof    #86                 // class org/apache/logging/log4j/core/impl/LocationAware
      57: ifeq          75
      60: aload         7
      62: checkcast     #86                 // class org/apache/logging/log4j/core/impl/LocationAware
      65: invokeinterface #87,  1           // InterfaceMethod org/apache/logging/log4j/core/impl/LocationAware.requiresLocation:()Z
      70: ifeq          75
      73: iconst_1
      74: ireturn
      75: iinc          5, 1
      78: goto          32
      81: aload_2
      82: getfield      #8                  // Field additive:Z
      85: ifeq          108
      88: aload_2
      89: getfield      #31                 // Field parent:Lorg/apache/logging/log4j/core/config/LoggerConfig;
      92: astore_2
      93: aload_2
      94: ifnull        19
      97: aload_2
      98: getfield      #7                  // Field appenders:Lorg/apache/logging/log4j/core/config/AppenderControlArraySet;
     101: invokevirtual #84                 // Method org/apache/logging/log4j/core/config/AppenderControlArraySet.get:()[Lorg/apache/logging/log4j/core/config/AppenderControl;
     104: astore_1
     105: goto          19
     108: iconst_0
     109: ireturn

  private void logParent(org.apache.logging.log4j.core.LogEvent, org.apache.logging.log4j.core.config.LoggerConfig$LoggerConfigPredicate);
    Code:
       0: aload_0
       1: getfield      #8                  // Field additive:Z
       4: ifeq          23
       7: aload_0
       8: getfield      #31                 // Field parent:Lorg/apache/logging/log4j/core/config/LoggerConfig;
      11: ifnull        23
      14: aload_0
      15: getfield      #31                 // Field parent:Lorg/apache/logging/log4j/core/config/LoggerConfig;
      18: aload_1
      19: aload_2
      20: invokevirtual #57                 // Method log:(Lorg/apache/logging/log4j/core/LogEvent;Lorg/apache/logging/log4j/core/config/LoggerConfig$LoggerConfigPredicate;)V
      23: return

  protected void callAppenders(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: getfield      #7                  // Field appenders:Lorg/apache/logging/log4j/core/config/AppenderControlArraySet;
       4: invokevirtual #84                 // Method org/apache/logging/log4j/core/config/AppenderControlArraySet.get:()[Lorg/apache/logging/log4j/core/config/AppenderControl;
       7: astore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: aload_2
      12: arraylength
      13: if_icmpge     29
      16: aload_2
      17: iload_3
      18: aaload
      19: aload_1
      20: invokevirtual #88                 // Method org/apache/logging/log4j/core/config/AppenderControl.callAppender:(Lorg/apache/logging/log4j/core/LogEvent;)V
      23: iinc          3, 1
      26: goto          10
      29: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #16                 // Field name:Ljava/lang/String;
       4: invokestatic  #89                 // Method org/apache/logging/log4j/util/Strings.isEmpty:(Ljava/lang/CharSequence;)Z
       7: ifeq          15
      10: ldc           #91                 // String root
      12: goto          19
      15: aload_0
      16: getfield      #16                 // Field name:Ljava/lang/String;
      19: areturn

  public static org.apache.logging.log4j.core.config.LoggerConfig createLogger(java.lang.String, org.apache.logging.log4j.Level, java.lang.String, java.lang.String, org.apache.logging.log4j.core.config.AppenderRef[], org.apache.logging.log4j.core.config.Property[], org.apache.logging.log4j.core.config.Configuration, org.apache.logging.log4j.core.Filter);
    Code:
       0: aload_2
       1: ifnonnull     16
       4: getstatic     #92                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       7: ldc           #93                 // String Loggers cannot be configured without a name
       9: invokeinterface #94,  2           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
      14: aconst_null
      15: areturn
      16: aload         4
      18: invokestatic  #25                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      21: astore        8
      23: aload_2
      24: ldc           #91                 // String root
      26: invokevirtual #95                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      29: ifeq          37
      32: ldc           #15                 // String
      34: goto          38
      37: aload_2
      38: astore        9
      40: aload_0
      41: iconst_1
      42: invokestatic  #96                 // Method org/apache/logging/log4j/core/util/Booleans.parseBoolean:(Ljava/lang/String;Z)Z
      45: istore        10
      47: new           #90                 // class org/apache/logging/log4j/core/config/LoggerConfig
      50: dup
      51: aload         9
      53: aload         8
      55: aload         7
      57: aload_1
      58: iload         10
      60: aload         5
      62: aload         6
      64: aload_3
      65: aload         6
      67: invokestatic  #97                 // Method includeLocation:(Ljava/lang/String;Lorg/apache/logging/log4j/core/config/Configuration;)Z
      70: invokespecial #98                 // Method "<init>":(Ljava/lang/String;Ljava/util/List;Lorg/apache/logging/log4j/core/Filter;Lorg/apache/logging/log4j/Level;Z[Lorg/apache/logging/log4j/core/config/Property;Lorg/apache/logging/log4j/core/config/Configuration;Z)V
      73: areturn

  public static org.apache.logging.log4j.core.config.LoggerConfig createLogger(boolean, org.apache.logging.log4j.Level, java.lang.String, java.lang.String, org.apache.logging.log4j.core.config.AppenderRef[], org.apache.logging.log4j.core.config.Property[], org.apache.logging.log4j.core.config.Configuration, org.apache.logging.log4j.core.Filter);
    Code:
       0: aload_2
       1: ldc           #91                 // String root
       3: invokevirtual #95                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          14
       9: ldc           #15                 // String
      11: goto          15
      14: aload_2
      15: astore        8
      17: new           #90                 // class org/apache/logging/log4j/core/config/LoggerConfig
      20: dup
      21: aload         8
      23: aload         4
      25: invokestatic  #25                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      28: aload         7
      30: aload_1
      31: iload_0
      32: aload         5
      34: aload         6
      36: aload_3
      37: aload         6
      39: invokestatic  #97                 // Method includeLocation:(Ljava/lang/String;Lorg/apache/logging/log4j/core/config/Configuration;)Z
      42: invokespecial #98                 // Method "<init>":(Ljava/lang/String;Ljava/util/List;Lorg/apache/logging/log4j/core/Filter;Lorg/apache/logging/log4j/Level;Z[Lorg/apache/logging/log4j/core/config/Property;Lorg/apache/logging/log4j/core/config/Configuration;Z)V
      45: areturn

  protected static boolean includeLocation(java.lang.String);
    Code:
       0: aload_0
       1: aconst_null
       2: invokestatic  #97                 // Method includeLocation:(Ljava/lang/String;Lorg/apache/logging/log4j/core/config/Configuration;)Z
       5: ireturn

  protected static boolean includeLocation(java.lang.String, org.apache.logging.log4j.core.config.Configuration);
    Code:
       0: aload_0
       1: ifnonnull     46
       4: aconst_null
       5: astore_2
       6: aload_1
       7: ifnull        17
      10: aload_1
      11: invokeinterface #99,  1           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.getLoggerContext:()Lorg/apache/logging/log4j/core/LoggerContext;
      16: astore_2
      17: aload_2
      18: ifnull        34
      21: aload_2
      22: instanceof    #100                // class org/apache/logging/log4j/core/async/AsyncLoggerContext
      25: ifne          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn
      34: invokestatic  #101                // Method org/apache/logging/log4j/core/async/AsyncLoggerContextSelector.isSelected:()Z
      37: ifne          44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: ireturn
      46: aload_0
      47: invokestatic  #102                // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      50: ireturn

  protected final boolean hasAppenders();
    Code:
       0: aload_0
       1: getfield      #7                  // Field appenders:Lorg/apache/logging/log4j/core/config/AppenderControlArraySet;
       4: invokevirtual #39                 // Method org/apache/logging/log4j/core/config/AppenderControlArraySet.isEmpty:()Z
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  static {};
    Code:
       0: aconst_null
       1: putstatic     #10                 // Field LOG_EVENT_FACTORY:Lorg/apache/logging/log4j/core/impl/LogEventFactory;
       4: invokestatic  #103                // Method org/apache/logging/log4j/util/PropertiesUtil.getProperties:()Lorg/apache/logging/log4j/util/PropertiesUtil;
       7: ldc           #105                // String Log4jLogEventFactory
       9: invokevirtual #106                // Method org/apache/logging/log4j/util/PropertiesUtil.getStringProperty:(Ljava/lang/String;)Ljava/lang/String;
      12: astore_0
      13: aload_0
      14: ifnull        61
      17: aload_0
      18: invokestatic  #107                // Method org/apache/logging/log4j/core/util/Loader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
      21: astore_1
      22: aload_1
      23: ifnull        45
      26: ldc           #108                // class org/apache/logging/log4j/core/impl/LogEventFactory
      28: aload_1
      29: invokevirtual #109                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      32: ifeq          45
      35: aload_1
      36: invokevirtual #110                // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      39: checkcast     #108                // class org/apache/logging/log4j/core/impl/LogEventFactory
      42: putstatic     #10                 // Field LOG_EVENT_FACTORY:Lorg/apache/logging/log4j/core/impl/LogEventFactory;
      45: goto          61
      48: astore_1
      49: getstatic     #92                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      52: ldc           #112                // String Unable to create LogEventFactory {}
      54: aload_0
      55: aload_1
      56: invokeinterface #113,  4          // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      61: getstatic     #10                 // Field LOG_EVENT_FACTORY:Lorg/apache/logging/log4j/core/impl/LogEventFactory;
      64: ifnonnull     93
      67: getstatic     #114                // Field org/apache/logging/log4j/core/util/Constants.ENABLE_THREADLOCALS:Z
      70: ifeq          83
      73: new           #115                // class org/apache/logging/log4j/core/impl/ReusableLogEventFactory
      76: dup
      77: invokespecial #116                // Method org/apache/logging/log4j/core/impl/ReusableLogEventFactory."<init>":()V
      80: goto          90
      83: new           #117                // class org/apache/logging/log4j/core/impl/DefaultLogEventFactory
      86: dup
      87: invokespecial #118                // Method org/apache/logging/log4j/core/impl/DefaultLogEventFactory."<init>":()V
      90: putstatic     #10                 // Field LOG_EVENT_FACTORY:Lorg/apache/logging/log4j/core/impl/LogEventFactory;
      93: return
    Exception table:
       from    to  target type
          17    45    48   Class java/lang/Exception
}
