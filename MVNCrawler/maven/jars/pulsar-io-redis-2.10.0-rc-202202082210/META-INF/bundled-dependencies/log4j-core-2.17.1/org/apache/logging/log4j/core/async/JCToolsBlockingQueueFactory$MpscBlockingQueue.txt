Compiled from "JCToolsBlockingQueueFactory.java"
final class org.apache.logging.log4j.core.async.JCToolsBlockingQueueFactory$MpscBlockingQueue<E> extends org.jctools.queues.MpscArrayQueue<E> implements java.util.concurrent.BlockingQueue<E> {
  private final org.apache.logging.log4j.core.async.JCToolsBlockingQueueFactory$WaitStrategy waitStrategy;

  org.apache.logging.log4j.core.async.JCToolsBlockingQueueFactory$MpscBlockingQueue(int, org.apache.logging.log4j.core.async.JCToolsBlockingQueueFactory$WaitStrategy);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method org/jctools/queues/MpscArrayQueue."<init>":(I)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field waitStrategy:Lorg/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$WaitStrategy;
      10: return

  public int drainTo(java.util.Collection<? super E>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #3                  // Method capacity:()I
       6: invokevirtual #4                  // Method drainTo:(Ljava/util/Collection;I)I
       9: ireturn

  public int drainTo(java.util.Collection<? super E>, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #5,  0              // InvokeDynamic #0:accept:(Ljava/util/Collection;)Lorg/jctools/queues/MessagePassingQueue$Consumer;
       7: iload_2
       8: invokevirtual #6                  // Method drain:(Lorg/jctools/queues/MessagePassingQueue$Consumer;I)I
      11: ireturn

  public boolean offer(E, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: iconst_0
       1: istore        5
       3: invokestatic  #7                  // Method java/lang/System.nanoTime:()J
       6: aload         4
       8: lload_2
       9: invokevirtual #8                  // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      12: ladd
      13: lstore        6
      15: aload_0
      16: aload_1
      17: invokevirtual #9                  // Method offer:(Ljava/lang/Object;)Z
      20: ifeq          25
      23: iconst_1
      24: ireturn
      25: invokestatic  #7                  // Method java/lang/System.nanoTime:()J
      28: lload         6
      30: lsub
      31: lconst_0
      32: lcmp
      33: ifle          38
      36: iconst_0
      37: ireturn
      38: aload_0
      39: getfield      #2                  // Field waitStrategy:Lorg/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$WaitStrategy;
      42: iload         5
      44: invokestatic  #10                 // Method org/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$WaitStrategy.access$000:(Lorg/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$WaitStrategy;I)I
      47: istore        5
      49: invokestatic  #11                 // Method java/lang/Thread.interrupted:()Z
      52: ifeq          15
      55: new           #12                 // class java/lang/InterruptedException
      58: dup
      59: invokespecial #13                 // Method java/lang/InterruptedException."<init>":()V
      62: athrow

  public E poll(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: iconst_0
       1: istore        4
       3: invokestatic  #7                  // Method java/lang/System.nanoTime:()J
       6: aload_3
       7: lload_1
       8: invokevirtual #8                  // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      11: ladd
      12: lstore        5
      14: aload_0
      15: invokevirtual #14                 // Method poll:()Ljava/lang/Object;
      18: astore        7
      20: aload         7
      22: ifnull        28
      25: aload         7
      27: areturn
      28: invokestatic  #7                  // Method java/lang/System.nanoTime:()J
      31: lload         5
      33: lsub
      34: lconst_0
      35: lcmp
      36: ifle          41
      39: aconst_null
      40: areturn
      41: aload_0
      42: getfield      #2                  // Field waitStrategy:Lorg/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$WaitStrategy;
      45: iload         4
      47: invokestatic  #10                 // Method org/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$WaitStrategy.access$000:(Lorg/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$WaitStrategy;I)I
      50: istore        4
      52: invokestatic  #11                 // Method java/lang/Thread.interrupted:()Z
      55: ifeq          14
      58: new           #12                 // class java/lang/InterruptedException
      61: dup
      62: invokespecial #13                 // Method java/lang/InterruptedException."<init>":()V
      65: athrow

  public void put(E) throws java.lang.InterruptedException;
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: aload_1
       4: invokevirtual #9                  // Method offer:(Ljava/lang/Object;)Z
       7: ifeq          11
      10: return
      11: aload_0
      12: getfield      #2                  // Field waitStrategy:Lorg/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$WaitStrategy;
      15: iload_2
      16: invokestatic  #10                 // Method org/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$WaitStrategy.access$000:(Lorg/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$WaitStrategy;I)I
      19: istore_2
      20: invokestatic  #11                 // Method java/lang/Thread.interrupted:()Z
      23: ifeq          2
      26: new           #12                 // class java/lang/InterruptedException
      29: dup
      30: invokespecial #13                 // Method java/lang/InterruptedException."<init>":()V
      33: athrow

  public boolean offer(E);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #3                  // Method capacity:()I
       6: bipush        32
       8: isub
       9: invokevirtual #15                 // Method offerIfBelowThreshold:(Ljava/lang/Object;I)Z
      12: ireturn

  public int remainingCapacity();
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method capacity:()I
       4: aload_0
       5: invokevirtual #16                 // Method size:()I
       8: isub
       9: ireturn

  public E take() throws java.lang.InterruptedException;
    Code:
       0: bipush        100
       2: istore_1
       3: aload_0
       4: invokevirtual #17                 // Method relaxedPoll:()Ljava/lang/Object;
       7: astore_2
       8: aload_2
       9: ifnull        14
      12: aload_2
      13: areturn
      14: aload_0
      15: getfield      #2                  // Field waitStrategy:Lorg/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$WaitStrategy;
      18: iload_1
      19: invokestatic  #10                 // Method org/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$WaitStrategy.access$000:(Lorg/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$WaitStrategy;I)I
      22: istore_1
      23: invokestatic  #11                 // Method java/lang/Thread.interrupted:()Z
      26: ifeq          3
      29: new           #12                 // class java/lang/InterruptedException
      32: dup
      33: invokespecial #13                 // Method java/lang/InterruptedException."<init>":()V
      36: athrow

  private static void lambda$drainTo$0(java.util.Collection, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #18,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
       7: pop
       8: return
}
