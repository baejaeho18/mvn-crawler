Compiled from "AbstractAppender.java"
public abstract class org.apache.logging.log4j.core.appender.AbstractAppender$Builder<B extends org.apache.logging.log4j.core.appender.AbstractAppender$Builder<B>> extends org.apache.logging.log4j.core.filter.AbstractFilterable$Builder<B> {
  private boolean ignoreExceptions;

  private org.apache.logging.log4j.core.Layout<? extends java.io.Serializable> layout;

  private java.lang.String name;

  private org.apache.logging.log4j.core.config.Configuration configuration;

  public org.apache.logging.log4j.core.appender.AbstractAppender$Builder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/logging/log4j/core/filter/AbstractFilterable$Builder."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field ignoreExceptions:Z
       9: return

  public org.apache.logging.log4j.core.config.Configuration getConfiguration();
    Code:
       0: aload_0
       1: getfield      #3                  // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
       4: areturn

  public org.apache.logging.log4j.core.Layout<? extends java.io.Serializable> getLayout();
    Code:
       0: aload_0
       1: getfield      #4                  // Field layout:Lorg/apache/logging/log4j/core/Layout;
       4: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field name:Ljava/lang/String;
       4: areturn

  public org.apache.logging.log4j.core.Layout<? extends java.io.Serializable> getOrCreateLayout();
    Code:
       0: aload_0
       1: getfield      #4                  // Field layout:Lorg/apache/logging/log4j/core/Layout;
       4: ifnonnull     11
       7: invokestatic  #6                  // Method org/apache/logging/log4j/core/layout/PatternLayout.createDefaultLayout:()Lorg/apache/logging/log4j/core/layout/PatternLayout;
      10: areturn
      11: aload_0
      12: getfield      #4                  // Field layout:Lorg/apache/logging/log4j/core/Layout;
      15: areturn

  public org.apache.logging.log4j.core.Layout<? extends java.io.Serializable> getOrCreateLayout(java.nio.charset.Charset);
    Code:
       0: aload_0
       1: getfield      #4                  // Field layout:Lorg/apache/logging/log4j/core/Layout;
       4: ifnonnull     18
       7: invokestatic  #7                  // Method org/apache/logging/log4j/core/layout/PatternLayout.newBuilder:()Lorg/apache/logging/log4j/core/layout/PatternLayout$Builder;
      10: aload_1
      11: invokevirtual #8                  // Method org/apache/logging/log4j/core/layout/PatternLayout$Builder.withCharset:(Ljava/nio/charset/Charset;)Lorg/apache/logging/log4j/core/layout/PatternLayout$Builder;
      14: invokevirtual #9                  // Method org/apache/logging/log4j/core/layout/PatternLayout$Builder.build:()Lorg/apache/logging/log4j/core/layout/PatternLayout;
      17: areturn
      18: aload_0
      19: getfield      #4                  // Field layout:Lorg/apache/logging/log4j/core/Layout;
      22: areturn

  public boolean isIgnoreExceptions();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ignoreExceptions:Z
       4: ireturn

  public B setConfiguration(org.apache.logging.log4j.core.config.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
       5: aload_0
       6: invokevirtual #10                 // Method asBuilder:()Lorg/apache/logging/log4j/core/filter/AbstractFilterable$Builder;
       9: checkcast     #11                 // class org/apache/logging/log4j/core/appender/AbstractAppender$Builder
      12: areturn

  public B setIgnoreExceptions(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field ignoreExceptions:Z
       5: aload_0
       6: invokevirtual #10                 // Method asBuilder:()Lorg/apache/logging/log4j/core/filter/AbstractFilterable$Builder;
       9: checkcast     #11                 // class org/apache/logging/log4j/core/appender/AbstractAppender$Builder
      12: areturn

  public B setLayout(org.apache.logging.log4j.core.Layout<? extends java.io.Serializable>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field layout:Lorg/apache/logging/log4j/core/Layout;
       5: aload_0
       6: invokevirtual #10                 // Method asBuilder:()Lorg/apache/logging/log4j/core/filter/AbstractFilterable$Builder;
       9: checkcast     #11                 // class org/apache/logging/log4j/core/appender/AbstractAppender$Builder
      12: areturn

  public B setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field name:Ljava/lang/String;
       5: aload_0
       6: invokevirtual #10                 // Method asBuilder:()Lorg/apache/logging/log4j/core/filter/AbstractFilterable$Builder;
       9: checkcast     #11                 // class org/apache/logging/log4j/core/appender/AbstractAppender$Builder
      12: areturn

  public B withConfiguration(org.apache.logging.log4j.core.config.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
       5: aload_0
       6: invokevirtual #10                 // Method asBuilder:()Lorg/apache/logging/log4j/core/filter/AbstractFilterable$Builder;
       9: checkcast     #11                 // class org/apache/logging/log4j/core/appender/AbstractAppender$Builder
      12: areturn

  public B withIgnoreExceptions(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #12                 // Method setIgnoreExceptions:(Z)Lorg/apache/logging/log4j/core/appender/AbstractAppender$Builder;
       5: areturn

  public B withLayout(org.apache.logging.log4j.core.Layout<? extends java.io.Serializable>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #13                 // Method setLayout:(Lorg/apache/logging/log4j/core/Layout;)Lorg/apache/logging/log4j/core/appender/AbstractAppender$Builder;
       5: areturn

  public B withName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method setName:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/appender/AbstractAppender$Builder;
       5: areturn
}
