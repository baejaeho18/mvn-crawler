Compiled from "AsyncAppender.java"
public final class org.apache.logging.log4j.core.appender.AsyncAppender extends org.apache.logging.log4j.core.appender.AbstractAppender {
  private static final int DEFAULT_QUEUE_SIZE;

  private final java.util.concurrent.BlockingQueue<org.apache.logging.log4j.core.LogEvent> queue;

  private final int queueSize;

  private final boolean blocking;

  private final long shutdownTimeout;

  private final org.apache.logging.log4j.core.config.Configuration config;

  private final org.apache.logging.log4j.core.config.AppenderRef[] appenderRefs;

  private final java.lang.String errorRef;

  private final boolean includeLocation;

  private org.apache.logging.log4j.core.config.AppenderControl errorAppender;

  private org.apache.logging.log4j.core.appender.AsyncAppenderEventDispatcher dispatcher;

  private org.apache.logging.log4j.core.async.AsyncQueueFullPolicy asyncQueueFullPolicy;

  private org.apache.logging.log4j.core.appender.AsyncAppender(java.lang.String, org.apache.logging.log4j.core.Filter, org.apache.logging.log4j.core.config.AppenderRef[], java.lang.String, int, boolean, boolean, long, org.apache.logging.log4j.core.config.Configuration, boolean, org.apache.logging.log4j.core.async.BlockingQueueFactory<org.apache.logging.log4j.core.LogEvent>, org.apache.logging.log4j.core.config.Property[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: iload         7
       6: aload         13
       8: invokespecial #2                  // Method org/apache/logging/log4j/core/appender/AbstractAppender."<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/Filter;Lorg/apache/logging/log4j/core/Layout;Z[Lorg/apache/logging/log4j/core/config/Property;)V
      11: aload_0
      12: aload         12
      14: iload         5
      16: invokeinterface #3,  2            // InterfaceMethod org/apache/logging/log4j/core/async/BlockingQueueFactory.create:(I)Ljava/util/concurrent/BlockingQueue;
      21: putfield      #4                  // Field queue:Ljava/util/concurrent/BlockingQueue;
      24: aload_0
      25: iload         5
      27: putfield      #5                  // Field queueSize:I
      30: aload_0
      31: iload         6
      33: putfield      #6                  // Field blocking:Z
      36: aload_0
      37: lload         8
      39: putfield      #7                  // Field shutdownTimeout:J
      42: aload_0
      43: aload         10
      45: putfield      #8                  // Field config:Lorg/apache/logging/log4j/core/config/Configuration;
      48: aload_0
      49: aload_3
      50: putfield      #9                  // Field appenderRefs:[Lorg/apache/logging/log4j/core/config/AppenderRef;
      53: aload_0
      54: aload         4
      56: putfield      #10                 // Field errorRef:Ljava/lang/String;
      59: aload_0
      60: iload         11
      62: putfield      #11                 // Field includeLocation:Z
      65: return

  public void start();
    Code:
       0: aload_0
       1: getfield      #8                  // Field config:Lorg/apache/logging/log4j/core/config/Configuration;
       4: invokeinterface #12,  1           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.getAppenders:()Ljava/util/Map;
       9: astore_1
      10: new           #13                 // class java/util/ArrayList
      13: dup
      14: invokespecial #14                 // Method java/util/ArrayList."<init>":()V
      17: astore_2
      18: aload_0
      19: getfield      #9                  // Field appenderRefs:[Lorg/apache/logging/log4j/core/config/AppenderRef;
      22: astore_3
      23: aload_3
      24: arraylength
      25: istore        4
      27: iconst_0
      28: istore        5
      30: iload         5
      32: iload         4
      34: if_icmpge     111
      37: aload_3
      38: iload         5
      40: aaload
      41: astore        6
      43: aload_1
      44: aload         6
      46: invokevirtual #15                 // Method org/apache/logging/log4j/core/config/AppenderRef.getRef:()Ljava/lang/String;
      49: invokeinterface #16,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      54: checkcast     #17                 // class org/apache/logging/log4j/core/Appender
      57: astore        7
      59: aload         7
      61: ifnull        93
      64: aload_2
      65: new           #18                 // class org/apache/logging/log4j/core/config/AppenderControl
      68: dup
      69: aload         7
      71: aload         6
      73: invokevirtual #19                 // Method org/apache/logging/log4j/core/config/AppenderRef.getLevel:()Lorg/apache/logging/log4j/Level;
      76: aload         6
      78: invokevirtual #20                 // Method org/apache/logging/log4j/core/config/AppenderRef.getFilter:()Lorg/apache/logging/log4j/core/Filter;
      81: invokespecial #21                 // Method org/apache/logging/log4j/core/config/AppenderControl."<init>":(Lorg/apache/logging/log4j/core/Appender;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/core/Filter;)V
      84: invokeinterface #22,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      89: pop
      90: goto          105
      93: getstatic     #23                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      96: ldc           #24                 // String No appender named {} was configured
      98: aload         6
     100: invokeinterface #25,  3           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
     105: iinc          5, 1
     108: goto          30
     111: aload_0
     112: getfield      #10                 // Field errorRef:Ljava/lang/String;
     115: ifnull        167
     118: aload_1
     119: aload_0
     120: getfield      #10                 // Field errorRef:Ljava/lang/String;
     123: invokeinterface #16,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     128: checkcast     #17                 // class org/apache/logging/log4j/core/Appender
     131: astore_3
     132: aload_3
     133: ifnull        153
     136: aload_0
     137: new           #18                 // class org/apache/logging/log4j/core/config/AppenderControl
     140: dup
     141: aload_3
     142: aconst_null
     143: aconst_null
     144: invokespecial #21                 // Method org/apache/logging/log4j/core/config/AppenderControl."<init>":(Lorg/apache/logging/log4j/core/Appender;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/core/Filter;)V
     147: putfield      #26                 // Field errorAppender:Lorg/apache/logging/log4j/core/config/AppenderControl;
     150: goto          167
     153: getstatic     #23                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
     156: ldc           #27                 // String Unable to set up error Appender. No appender named {} was configured
     158: aload_0
     159: getfield      #10                 // Field errorRef:Ljava/lang/String;
     162: invokeinterface #25,  3           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
     167: aload_2
     168: invokeinterface #28,  1           // InterfaceMethod java/util/List.size:()I
     173: ifle          203
     176: aload_0
     177: new           #29                 // class org/apache/logging/log4j/core/appender/AsyncAppenderEventDispatcher
     180: dup
     181: aload_0
     182: invokevirtual #30                 // Method getName:()Ljava/lang/String;
     185: aload_0
     186: getfield      #26                 // Field errorAppender:Lorg/apache/logging/log4j/core/config/AppenderControl;
     189: aload_2
     190: aload_0
     191: getfield      #4                  // Field queue:Ljava/util/concurrent/BlockingQueue;
     194: invokespecial #31                 // Method org/apache/logging/log4j/core/appender/AsyncAppenderEventDispatcher."<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/config/AppenderControl;Ljava/util/List;Ljava/util/concurrent/BlockingQueue;)V
     197: putfield      #32                 // Field dispatcher:Lorg/apache/logging/log4j/core/appender/AsyncAppenderEventDispatcher;
     200: goto          240
     203: aload_0
     204: getfield      #10                 // Field errorRef:Ljava/lang/String;
     207: ifnonnull     240
     210: new           #33                 // class org/apache/logging/log4j/core/config/ConfigurationException
     213: dup
     214: new           #34                 // class java/lang/StringBuilder
     217: dup
     218: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
     221: ldc           #36                 // String No appenders are available for AsyncAppender
     223: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     226: aload_0
     227: invokevirtual #30                 // Method getName:()Ljava/lang/String;
     230: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     233: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     236: invokespecial #39                 // Method org/apache/logging/log4j/core/config/ConfigurationException."<init>":(Ljava/lang/String;)V
     239: athrow
     240: aload_0
     241: invokestatic  #40                 // Method org/apache/logging/log4j/core/async/AsyncQueueFullPolicyFactory.create:()Lorg/apache/logging/log4j/core/async/AsyncQueueFullPolicy;
     244: putfield      #41                 // Field asyncQueueFullPolicy:Lorg/apache/logging/log4j/core/async/AsyncQueueFullPolicy;
     247: aload_0
     248: getfield      #32                 // Field dispatcher:Lorg/apache/logging/log4j/core/appender/AsyncAppenderEventDispatcher;
     251: invokevirtual #42                 // Method org/apache/logging/log4j/core/appender/AsyncAppenderEventDispatcher.start:()V
     254: aload_0
     255: invokespecial #43                 // Method org/apache/logging/log4j/core/appender/AbstractAppender.start:()V
     258: return

  public boolean stop(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method setStopping:()V
       4: aload_0
       5: lload_1
       6: aload_3
       7: iconst_0
       8: invokespecial #45                 // Method org/apache/logging/log4j/core/appender/AbstractAppender.stop:(JLjava/util/concurrent/TimeUnit;Z)Z
      11: pop
      12: getstatic     #23                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      15: ldc           #46                 // String AsyncAppender stopping. Queue still has {} events.
      17: aload_0
      18: getfield      #4                  // Field queue:Ljava/util/concurrent/BlockingQueue;
      21: invokeinterface #47,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.size:()I
      26: invokestatic  #48                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      29: invokeinterface #49,  3           // InterfaceMethod org/apache/logging/log4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      34: aload_0
      35: getfield      #32                 // Field dispatcher:Lorg/apache/logging/log4j/core/appender/AsyncAppenderEventDispatcher;
      38: aload_0
      39: getfield      #7                  // Field shutdownTimeout:J
      42: invokevirtual #50                 // Method org/apache/logging/log4j/core/appender/AsyncAppenderEventDispatcher.stop:(J)V
      45: goto          70
      48: astore        4
      50: invokestatic  #52                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      53: invokevirtual #53                 // Method java/lang/Thread.interrupt:()V
      56: getstatic     #23                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      59: ldc           #54                 // String Interrupted while stopping AsyncAppender {}
      61: aload_0
      62: invokevirtual #30                 // Method getName:()Ljava/lang/String;
      65: invokeinterface #55,  3           // InterfaceMethod org/apache/logging/log4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      70: getstatic     #23                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      73: ldc           #56                 // String AsyncAppender stopped. Queue has {} events.
      75: aload_0
      76: getfield      #4                  // Field queue:Ljava/util/concurrent/BlockingQueue;
      79: invokeinterface #47,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.size:()I
      84: invokestatic  #48                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      87: invokeinterface #49,  3           // InterfaceMethod org/apache/logging/log4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      92: aload_0
      93: getfield      #41                 // Field asyncQueueFullPolicy:Lorg/apache/logging/log4j/core/async/AsyncQueueFullPolicy;
      96: invokestatic  #57                 // Method org/apache/logging/log4j/core/async/DiscardingAsyncQueueFullPolicy.getDiscardCount:(Lorg/apache/logging/log4j/core/async/AsyncQueueFullPolicy;)J
      99: lconst_0
     100: lcmp
     101: ifle          128
     104: getstatic     #23                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
     107: ldc           #58                 // String AsyncAppender: {} discarded {} events.
     109: aload_0
     110: getfield      #41                 // Field asyncQueueFullPolicy:Lorg/apache/logging/log4j/core/async/AsyncQueueFullPolicy;
     113: aload_0
     114: getfield      #41                 // Field asyncQueueFullPolicy:Lorg/apache/logging/log4j/core/async/AsyncQueueFullPolicy;
     117: invokestatic  #57                 // Method org/apache/logging/log4j/core/async/DiscardingAsyncQueueFullPolicy.getDiscardCount:(Lorg/apache/logging/log4j/core/async/AsyncQueueFullPolicy;)J
     120: invokestatic  #59                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     123: invokeinterface #60,  4           // InterfaceMethod org/apache/logging/log4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     128: aload_0
     129: invokevirtual #61                 // Method setStopped:()V
     132: iconst_1
     133: ireturn
    Exception table:
       from    to  target type
          34    45    48   Class java/lang/InterruptedException

  public void append(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method isStarted:()Z
       4: ifne          42
       7: new           #63                 // class java/lang/IllegalStateException
      10: dup
      11: new           #34                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #64                 // String AsyncAppender
      20: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: invokevirtual #30                 // Method getName:()Ljava/lang/String;
      27: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #65                 // String  is not active
      32: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #66                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_1
      43: aload_0
      44: getfield      #11                 // Field includeLocation:Z
      47: invokestatic  #67                 // Method org/apache/logging/log4j/core/impl/Log4jLogEvent.createMemento:(Lorg/apache/logging/log4j/core/LogEvent;Z)Lorg/apache/logging/log4j/core/impl/Log4jLogEvent;
      50: astore_2
      51: aload_1
      52: invokeinterface #68,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getMessage:()Lorg/apache/logging/log4j/message/Message;
      57: invokestatic  #69                 // Method org/apache/logging/log4j/core/async/InternalAsyncUtil.makeMessageImmutable:(Lorg/apache/logging/log4j/message/Message;)Lorg/apache/logging/log4j/message/Message;
      60: pop
      61: aload_0
      62: aload_2
      63: invokespecial #70                 // Method transfer:(Lorg/apache/logging/log4j/core/LogEvent;)Z
      66: ifne          161
      69: aload_0
      70: getfield      #6                  // Field blocking:Z
      73: ifeq          124
      76: invokestatic  #71                 // Method org/apache/logging/log4j/spi/AbstractLogger.getRecursionDepth:()I
      79: iconst_1
      80: if_icmple     94
      83: invokestatic  #72                 // Method org/apache/logging/log4j/core/async/AsyncQueueFullMessageUtil.logWarningToStatusLogger:()V
      86: aload_0
      87: aload_1
      88: invokevirtual #73                 // Method logMessageInCurrentThread:(Lorg/apache/logging/log4j/core/LogEvent;)V
      91: goto          161
      94: aload_0
      95: getfield      #41                 // Field asyncQueueFullPolicy:Lorg/apache/logging/log4j/core/async/AsyncQueueFullPolicy;
      98: aload_0
      99: getfield      #32                 // Field dispatcher:Lorg/apache/logging/log4j/core/appender/AsyncAppenderEventDispatcher;
     102: invokevirtual #74                 // Method org/apache/logging/log4j/core/appender/AsyncAppenderEventDispatcher.getId:()J
     105: aload_2
     106: invokevirtual #75                 // Method org/apache/logging/log4j/core/impl/Log4jLogEvent.getLevel:()Lorg/apache/logging/log4j/Level;
     109: invokeinterface #76,  4           // InterfaceMethod org/apache/logging/log4j/core/async/AsyncQueueFullPolicy.getRoute:(JLorg/apache/logging/log4j/Level;)Lorg/apache/logging/log4j/core/async/EventRoute;
     114: astore_3
     115: aload_3
     116: aload_0
     117: aload_2
     118: invokevirtual #77                 // Method org/apache/logging/log4j/core/async/EventRoute.logMessage:(Lorg/apache/logging/log4j/core/appender/AsyncAppender;Lorg/apache/logging/log4j/core/LogEvent;)V
     121: goto          161
     124: aload_0
     125: new           #34                 // class java/lang/StringBuilder
     128: dup
     129: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
     132: ldc           #78                 // String Appender
     134: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: aload_0
     138: invokevirtual #30                 // Method getName:()Ljava/lang/String;
     141: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: ldc           #79                 // String  is unable to write primary appenders. queue is full
     146: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     152: invokevirtual #80                 // Method error:(Ljava/lang/String;)V
     155: aload_0
     156: iconst_0
     157: aload_2
     158: invokespecial #81                 // Method logToErrorAppenderIfNecessary:(ZLorg/apache/logging/log4j/core/LogEvent;)V
     161: return

  private boolean transfer(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: getfield      #4                  // Field queue:Ljava/util/concurrent/BlockingQueue;
       4: instanceof    #82                 // class java/util/concurrent/TransferQueue
       7: ifeq          26
      10: aload_0
      11: getfield      #4                  // Field queue:Ljava/util/concurrent/BlockingQueue;
      14: checkcast     #82                 // class java/util/concurrent/TransferQueue
      17: aload_1
      18: invokeinterface #83,  2           // InterfaceMethod java/util/concurrent/TransferQueue.tryTransfer:(Ljava/lang/Object;)Z
      23: goto          36
      26: aload_0
      27: getfield      #4                  // Field queue:Ljava/util/concurrent/BlockingQueue;
      30: aload_1
      31: invokeinterface #84,  2           // InterfaceMethod java/util/concurrent/BlockingQueue.offer:(Ljava/lang/Object;)Z
      36: ireturn

  public void logMessageInCurrentThread(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #4                  // Field queue:Ljava/util/concurrent/BlockingQueue;
       5: invokeinterface #85,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.isEmpty:()Z
      10: invokeinterface #86,  2           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.setEndOfBatch:(Z)V
      15: aload_0
      16: getfield      #32                 // Field dispatcher:Lorg/apache/logging/log4j/core/appender/AsyncAppenderEventDispatcher;
      19: aload_1
      20: invokevirtual #87                 // Method org/apache/logging/log4j/core/appender/AsyncAppenderEventDispatcher.dispatch:(Lorg/apache/logging/log4j/core/LogEvent;)V
      23: return

  public void logMessageInBackgroundThread(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: getfield      #4                  // Field queue:Ljava/util/concurrent/BlockingQueue;
       4: aload_1
       5: invokeinterface #88,  2           // InterfaceMethod java/util/concurrent/BlockingQueue.put:(Ljava/lang/Object;)V
      10: goto          26
      13: astore_2
      14: aload_0
      15: aload_1
      16: invokespecial #89                 // Method handleInterruptedException:(Lorg/apache/logging/log4j/core/LogEvent;)Z
      19: istore_3
      20: aload_0
      21: iload_3
      22: aload_1
      23: invokespecial #81                 // Method logToErrorAppenderIfNecessary:(ZLorg/apache/logging/log4j/core/LogEvent;)V
      26: return
    Exception table:
       from    to  target type
           0    10    13   Class java/lang/InterruptedException

  private boolean handleInterruptedException(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: getfield      #4                  // Field queue:Ljava/util/concurrent/BlockingQueue;
       4: aload_1
       5: invokeinterface #84,  2           // InterfaceMethod java/util/concurrent/BlockingQueue.offer:(Ljava/lang/Object;)Z
      10: istore_2
      11: iload_2
      12: ifne          29
      15: getstatic     #23                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      18: ldc           #90                 // String Interrupted while waiting for a free slot in the AsyncAppender LogEvent-queue {}
      20: aload_0
      21: invokevirtual #30                 // Method getName:()Ljava/lang/String;
      24: invokeinterface #55,  3           // InterfaceMethod org/apache/logging/log4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      29: invokestatic  #52                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      32: invokevirtual #53                 // Method java/lang/Thread.interrupt:()V
      35: iload_2
      36: ireturn

  private void logToErrorAppenderIfNecessary(boolean, org.apache.logging.log4j.core.LogEvent);
    Code:
       0: iload_1
       1: ifne          19
       4: aload_0
       5: getfield      #26                 // Field errorAppender:Lorg/apache/logging/log4j/core/config/AppenderControl;
       8: ifnull        19
      11: aload_0
      12: getfield      #26                 // Field errorAppender:Lorg/apache/logging/log4j/core/config/AppenderControl;
      15: aload_2
      16: invokevirtual #91                 // Method org/apache/logging/log4j/core/config/AppenderControl.callAppender:(Lorg/apache/logging/log4j/core/LogEvent;)V
      19: return

  public static org.apache.logging.log4j.core.appender.AsyncAppender createAppender(org.apache.logging.log4j.core.config.AppenderRef[], java.lang.String, boolean, long, int, java.lang.String, boolean, org.apache.logging.log4j.core.Filter, org.apache.logging.log4j.core.config.Configuration, boolean);
    Code:
       0: aload         6
       2: ifnonnull     17
       5: getstatic     #23                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       8: ldc           #92                 // String No name provided for AsyncAppender
      10: invokeinterface #93,  2           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
      15: aconst_null
      16: areturn
      17: aload_0
      18: ifnonnull     33
      21: getstatic     #23                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      24: ldc           #94                 // String No appender references provided to AsyncAppender {}
      26: aload         6
      28: invokeinterface #25,  3           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
      33: new           #95                 // class org/apache/logging/log4j/core/appender/AsyncAppender
      36: dup
      37: aload         6
      39: aload         8
      41: aload_0
      42: aload_1
      43: iload         5
      45: iload_2
      46: iload         10
      48: lload_3
      49: aload         9
      51: iload         7
      53: new           #96                 // class org/apache/logging/log4j/core/async/ArrayBlockingQueueFactory
      56: dup
      57: invokespecial #97                 // Method org/apache/logging/log4j/core/async/ArrayBlockingQueueFactory."<init>":()V
      60: aconst_null
      61: invokespecial #1                  // Method "<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/Filter;[Lorg/apache/logging/log4j/core/config/AppenderRef;Ljava/lang/String;IZZJLorg/apache/logging/log4j/core/config/Configuration;ZLorg/apache/logging/log4j/core/async/BlockingQueueFactory;[Lorg/apache/logging/log4j/core/config/Property;)V
      64: areturn

  public static org.apache.logging.log4j.core.appender.AsyncAppender$Builder newBuilder();
    Code:
       0: new           #98                 // class org/apache/logging/log4j/core/appender/AsyncAppender$Builder
       3: dup
       4: invokespecial #99                 // Method org/apache/logging/log4j/core/appender/AsyncAppender$Builder."<init>":()V
       7: areturn

  public java.lang.String[] getAppenderRefStrings();
    Code:
       0: aload_0
       1: getfield      #9                  // Field appenderRefs:[Lorg/apache/logging/log4j/core/config/AppenderRef;
       4: arraylength
       5: anewarray     #100                // class java/lang/String
       8: astore_1
       9: iconst_0
      10: istore_2
      11: iload_2
      12: aload_1
      13: arraylength
      14: if_icmpge     35
      17: aload_1
      18: iload_2
      19: aload_0
      20: getfield      #9                  // Field appenderRefs:[Lorg/apache/logging/log4j/core/config/AppenderRef;
      23: iload_2
      24: aaload
      25: invokevirtual #15                 // Method org/apache/logging/log4j/core/config/AppenderRef.getRef:()Ljava/lang/String;
      28: aastore
      29: iinc          2, 1
      32: goto          11
      35: aload_1
      36: areturn

  public boolean isIncludeLocation();
    Code:
       0: aload_0
       1: getfield      #11                 // Field includeLocation:Z
       4: ireturn

  public boolean isBlocking();
    Code:
       0: aload_0
       1: getfield      #6                  // Field blocking:Z
       4: ireturn

  public java.lang.String getErrorRef();
    Code:
       0: aload_0
       1: getfield      #10                 // Field errorRef:Ljava/lang/String;
       4: areturn

  public int getQueueCapacity();
    Code:
       0: aload_0
       1: getfield      #5                  // Field queueSize:I
       4: ireturn

  public int getQueueRemainingCapacity();
    Code:
       0: aload_0
       1: getfield      #4                  // Field queue:Ljava/util/concurrent/BlockingQueue;
       4: invokeinterface #101,  1          // InterfaceMethod java/util/concurrent/BlockingQueue.remainingCapacity:()I
       9: ireturn

  public int getQueueSize();
    Code:
       0: aload_0
       1: getfield      #4                  // Field queue:Ljava/util/concurrent/BlockingQueue;
       4: invokeinterface #47,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.size:()I
       9: ireturn

  org.apache.logging.log4j.core.appender.AsyncAppender(java.lang.String, org.apache.logging.log4j.core.Filter, org.apache.logging.log4j.core.config.AppenderRef[], java.lang.String, int, boolean, boolean, long, org.apache.logging.log4j.core.config.Configuration, boolean, org.apache.logging.log4j.core.async.BlockingQueueFactory, org.apache.logging.log4j.core.config.Property[], org.apache.logging.log4j.core.appender.AsyncAppender$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: iload         5
       8: iload         6
      10: iload         7
      12: lload         8
      14: aload         10
      16: iload         11
      18: aload         12
      20: aload         13
      22: invokespecial #1                  // Method "<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/Filter;[Lorg/apache/logging/log4j/core/config/AppenderRef;Ljava/lang/String;IZZJLorg/apache/logging/log4j/core/config/Configuration;ZLorg/apache/logging/log4j/core/async/BlockingQueueFactory;[Lorg/apache/logging/log4j/core/config/Property;)V
      25: return
}
