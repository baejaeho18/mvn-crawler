Compiled from "DeletingVisitor.java"
public class org.apache.logging.log4j.core.appender.rolling.action.DeletingVisitor extends java.nio.file.SimpleFileVisitor<java.nio.file.Path> {
  private static final org.apache.logging.log4j.Logger LOGGER;

  private final java.nio.file.Path basePath;

  private final boolean testMode;

  private final java.util.List<? extends org.apache.logging.log4j.core.appender.rolling.action.PathCondition> pathConditions;

  public org.apache.logging.log4j.core.appender.rolling.action.DeletingVisitor(java.nio.file.Path, java.util.List<? extends org.apache.logging.log4j.core.appender.rolling.action.PathCondition>, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/nio/file/SimpleFileVisitor."<init>":()V
       4: aload_0
       5: iload_3
       6: putfield      #2                  // Field testMode:Z
       9: aload_0
      10: aload_1
      11: ldc           #3                  // String basePath
      13: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      16: checkcast     #5                  // class java/nio/file/Path
      19: putfield      #6                  // Field basePath:Ljava/nio/file/Path;
      22: aload_0
      23: aload_2
      24: ldc           #7                  // String pathConditions
      26: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      29: checkcast     #8                  // class java/util/List
      32: putfield      #9                  // Field pathConditions:Ljava/util/List;
      35: aload_2
      36: invokeinterface #10,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      41: astore        4
      43: aload         4
      45: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      50: ifeq          75
      53: aload         4
      55: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      60: checkcast     #13                 // class org/apache/logging/log4j/core/appender/rolling/action/PathCondition
      63: astore        5
      65: aload         5
      67: invokeinterface #14,  1           // InterfaceMethod org/apache/logging/log4j/core/appender/rolling/action/PathCondition.beforeFileTreeWalk:()V
      72: goto          43
      75: return

  public java.nio.file.FileVisitResult visitFile(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field pathConditions:Ljava/util/List;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          82
      19: aload_3
      20: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #13                 // class org/apache/logging/log4j/core/appender/rolling/action/PathCondition
      28: astore        4
      30: aload_0
      31: getfield      #6                  // Field basePath:Ljava/nio/file/Path;
      34: aload_1
      35: invokeinterface #15,  2           // InterfaceMethod java/nio/file/Path.relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
      40: astore        5
      42: aload         4
      44: aload_0
      45: getfield      #6                  // Field basePath:Ljava/nio/file/Path;
      48: aload         5
      50: aload_2
      51: invokeinterface #16,  4           // InterfaceMethod org/apache/logging/log4j/core/appender/rolling/action/PathCondition.accept:(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Z
      56: ifne          79
      59: getstatic     #17                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      62: ldc           #18                 // String Not deleting base={}, relative={}
      64: aload_0
      65: getfield      #6                  // Field basePath:Ljava/nio/file/Path;
      68: aload         5
      70: invokeinterface #19,  4           // InterfaceMethod org/apache/logging/log4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      75: getstatic     #20                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;
      78: areturn
      79: goto          10
      82: aload_0
      83: invokevirtual #21                 // Method isTestMode:()Z
      86: ifeq          103
      89: getstatic     #17                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      92: ldc           #22                 // String Deleting {} (TEST MODE: file not actually deleted)
      94: aload_1
      95: invokeinterface #23,  3           // InterfaceMethod org/apache/logging/log4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
     100: goto          108
     103: aload_0
     104: aload_1
     105: invokevirtual #24                 // Method delete:(Ljava/nio/file/Path;)V
     108: getstatic     #20                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;
     111: areturn

  public java.nio.file.FileVisitResult visitFileFailed(java.nio.file.Path, java.io.IOException) throws java.io.IOException;
    Code:
       0: aload_2
       1: instanceof    #25                 // class java/nio/file/NoSuchFileException
       4: ifeq          23
       7: getstatic     #17                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      10: ldc           #26                 // String File {} could not be accessed, it has likely already been deleted
      12: aload_1
      13: aload_2
      14: invokeinterface #27,  4           // InterfaceMethod org/apache/logging/log4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      19: getstatic     #20                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;
      22: areturn
      23: aload_0
      24: aload_1
      25: aload_2
      26: invokespecial #28                 // Method java/nio/file/SimpleFileVisitor.visitFileFailed:(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;
      29: areturn

  protected void delete(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: getstatic     #17                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       3: ldc           #29                 // String Deleting {}
       5: aload_1
       6: invokeinterface #30,  3           // InterfaceMethod org/apache/logging/log4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_1
      12: invokestatic  #31                 // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z
      15: pop
      16: return

  public boolean isTestMode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field testMode:Z
       4: ireturn

  public java.nio.file.FileVisitResult visitFileFailed(java.lang.Object, java.io.IOException) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #5                  // class java/nio/file/Path
       5: aload_2
       6: invokevirtual #32                 // Method visitFileFailed:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;
       9: areturn

  public java.nio.file.FileVisitResult visitFile(java.lang.Object, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #5                  // class java/nio/file/Path
       5: aload_2
       6: invokevirtual #33                 // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
       9: areturn

  static {};
    Code:
       0: invokestatic  #34                 // Method org/apache/logging/log4j/status/StatusLogger.getLogger:()Lorg/apache/logging/log4j/status/StatusLogger;
       3: putstatic     #17                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       6: return
}
