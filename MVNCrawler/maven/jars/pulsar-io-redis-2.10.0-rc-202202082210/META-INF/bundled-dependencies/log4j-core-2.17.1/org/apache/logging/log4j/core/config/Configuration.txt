Compiled from "Configuration.java"
public interface org.apache.logging.log4j.core.config.Configuration extends org.apache.logging.log4j.core.filter.Filterable {
  public static final java.lang.String CONTEXT_PROPERTIES;

  public abstract java.lang.String getName();

  public abstract org.apache.logging.log4j.core.config.LoggerConfig getLoggerConfig(java.lang.String);

  public abstract <T extends org.apache.logging.log4j.core.Appender> T getAppender(java.lang.String);

  public abstract java.util.Map<java.lang.String, org.apache.logging.log4j.core.Appender> getAppenders();

  public abstract void addAppender(org.apache.logging.log4j.core.Appender);

  public abstract java.util.Map<java.lang.String, org.apache.logging.log4j.core.config.LoggerConfig> getLoggers();

  public abstract void addLoggerAppender(org.apache.logging.log4j.core.Logger, org.apache.logging.log4j.core.Appender);

  public abstract void addLoggerFilter(org.apache.logging.log4j.core.Logger, org.apache.logging.log4j.core.Filter);

  public abstract void setLoggerAdditive(org.apache.logging.log4j.core.Logger, boolean);

  public abstract void addLogger(java.lang.String, org.apache.logging.log4j.core.config.LoggerConfig);

  public abstract void removeLogger(java.lang.String);

  public abstract java.util.List<java.lang.String> getPluginPackages();

  public abstract java.util.Map<java.lang.String, java.lang.String> getProperties();

  public abstract org.apache.logging.log4j.core.config.LoggerConfig getRootLogger();

  public abstract void addListener(org.apache.logging.log4j.core.config.ConfigurationListener);

  public abstract void removeListener(org.apache.logging.log4j.core.config.ConfigurationListener);

  public abstract org.apache.logging.log4j.core.lookup.StrSubstitutor getStrSubstitutor();

  public default org.apache.logging.log4j.core.lookup.StrSubstitutor getConfigurationStrSubstitutor();
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod getStrSubstitutor:()Lorg/apache/logging/log4j/core/lookup/StrSubstitutor;
       6: astore_1
       7: aload_1
       8: ifnonnull     19
      11: new           #2                  // class org/apache/logging/log4j/core/lookup/ConfigurationStrSubstitutor
      14: dup
      15: invokespecial #3                  // Method org/apache/logging/log4j/core/lookup/ConfigurationStrSubstitutor."<init>":()V
      18: areturn
      19: new           #2                  // class org/apache/logging/log4j/core/lookup/ConfigurationStrSubstitutor
      22: dup
      23: aload_1
      24: invokespecial #4                  // Method org/apache/logging/log4j/core/lookup/ConfigurationStrSubstitutor."<init>":(Lorg/apache/logging/log4j/core/lookup/StrSubstitutor;)V
      27: areturn

  public abstract void createConfiguration(org.apache.logging.log4j.core.config.Node, org.apache.logging.log4j.core.LogEvent);

  public abstract <T> T getComponent(java.lang.String);

  public abstract void addComponent(java.lang.String, java.lang.Object);

  public abstract void setAdvertiser(org.apache.logging.log4j.core.net.Advertiser);

  public abstract org.apache.logging.log4j.core.net.Advertiser getAdvertiser();

  public abstract boolean isShutdownHookEnabled();

  public abstract long getShutdownTimeoutMillis();

  public abstract org.apache.logging.log4j.core.config.ConfigurationScheduler getScheduler();

  public abstract org.apache.logging.log4j.core.config.ConfigurationSource getConfigurationSource();

  public abstract java.util.List<org.apache.logging.log4j.core.config.CustomLevelConfig> getCustomLevels();

  public abstract org.apache.logging.log4j.core.script.ScriptManager getScriptManager();

  public abstract org.apache.logging.log4j.core.async.AsyncLoggerConfigDelegate getAsyncLoggerConfigDelegate();

  public abstract org.apache.logging.log4j.core.util.WatchManager getWatchManager();

  public abstract org.apache.logging.log4j.core.config.ReliabilityStrategy getReliabilityStrategy(org.apache.logging.log4j.core.config.LoggerConfig);

  public abstract org.apache.logging.log4j.core.util.NanoClock getNanoClock();

  public abstract void setNanoClock(org.apache.logging.log4j.core.util.NanoClock);

  public abstract org.apache.logging.log4j.core.LoggerContext getLoggerContext();
}
