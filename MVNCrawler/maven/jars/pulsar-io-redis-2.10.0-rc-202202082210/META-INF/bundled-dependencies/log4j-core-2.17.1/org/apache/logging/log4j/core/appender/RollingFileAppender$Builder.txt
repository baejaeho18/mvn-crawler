Compiled from "RollingFileAppender.java"
public class org.apache.logging.log4j.core.appender.RollingFileAppender$Builder<B extends org.apache.logging.log4j.core.appender.RollingFileAppender$Builder<B>> extends org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender$Builder<B> implements org.apache.logging.log4j.core.util.Builder<org.apache.logging.log4j.core.appender.RollingFileAppender> {
  private java.lang.String fileName;

  private java.lang.String filePattern;

  private boolean append;

  private boolean locking;

  private org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy policy;

  private org.apache.logging.log4j.core.appender.rolling.RolloverStrategy strategy;

  private boolean advertise;

  private java.lang.String advertiseUri;

  private boolean createOnDemand;

  private java.lang.String filePermissions;

  private java.lang.String fileOwner;

  private java.lang.String fileGroup;

  public org.apache.logging.log4j.core.appender.RollingFileAppender$Builder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/logging/log4j/core/appender/AbstractOutputStreamAppender$Builder."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field append:Z
       9: return

  public org.apache.logging.log4j.core.appender.RollingFileAppender build();
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method isBufferedIo:()Z
       4: istore_1
       5: aload_0
       6: invokevirtual #4                  // Method getBufferSize:()I
       9: istore_2
      10: aload_0
      11: invokevirtual #5                  // Method getName:()Ljava/lang/String;
      14: ifnonnull     33
      17: invokestatic  #6                  // Method org/apache/logging/log4j/core/appender/RollingFileAppender.access$000:()Lorg/apache/logging/log4j/Logger;
      20: ldc           #7                  // String RollingFileAppender \'{}\': No name provided.
      22: aload_0
      23: invokevirtual #5                  // Method getName:()Ljava/lang/String;
      26: invokeinterface #8,  3            // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
      31: aconst_null
      32: areturn
      33: iload_1
      34: ifne          59
      37: iload_2
      38: ifle          59
      41: invokestatic  #9                  // Method org/apache/logging/log4j/core/appender/RollingFileAppender.access$100:()Lorg/apache/logging/log4j/Logger;
      44: ldc           #10                 // String RollingFileAppender \'{}\': The bufferSize is set to {} but bufferedIO is not true
      46: aload_0
      47: invokevirtual #5                  // Method getName:()Ljava/lang/String;
      50: iload_2
      51: invokestatic  #11                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      54: invokeinterface #12,  4           // InterfaceMethod org/apache/logging/log4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      59: aload_0
      60: getfield      #13                 // Field filePattern:Ljava/lang/String;
      63: ifnonnull     82
      66: invokestatic  #14                 // Method org/apache/logging/log4j/core/appender/RollingFileAppender.access$200:()Lorg/apache/logging/log4j/Logger;
      69: ldc           #15                 // String RollingFileAppender \'{}\': No file name pattern provided.
      71: aload_0
      72: invokevirtual #5                  // Method getName:()Ljava/lang/String;
      75: invokeinterface #8,  3            // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
      80: aconst_null
      81: areturn
      82: aload_0
      83: getfield      #16                 // Field policy:Lorg/apache/logging/log4j/core/appender/rolling/TriggeringPolicy;
      86: ifnonnull     105
      89: invokestatic  #17                 // Method org/apache/logging/log4j/core/appender/RollingFileAppender.access$300:()Lorg/apache/logging/log4j/Logger;
      92: ldc           #18                 // String RollingFileAppender \'{}\': No TriggeringPolicy provided.
      94: aload_0
      95: invokevirtual #5                  // Method getName:()Ljava/lang/String;
      98: invokeinterface #8,  3            // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
     103: aconst_null
     104: areturn
     105: aload_0
     106: getfield      #19                 // Field strategy:Lorg/apache/logging/log4j/core/appender/rolling/RolloverStrategy;
     109: ifnonnull     173
     112: aload_0
     113: getfield      #20                 // Field fileName:Ljava/lang/String;
     116: ifnull        146
     119: aload_0
     120: invokestatic  #21                 // Method org/apache/logging/log4j/core/appender/rolling/DefaultRolloverStrategy.newBuilder:()Lorg/apache/logging/log4j/core/appender/rolling/DefaultRolloverStrategy$Builder;
     123: iconst_m1
     124: invokestatic  #23                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
     127: invokevirtual #24                 // Method org/apache/logging/log4j/core/appender/rolling/DefaultRolloverStrategy$Builder.withCompressionLevelStr:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/appender/rolling/DefaultRolloverStrategy$Builder;
     130: aload_0
     131: invokevirtual #25                 // Method getConfiguration:()Lorg/apache/logging/log4j/core/config/Configuration;
     134: invokevirtual #26                 // Method org/apache/logging/log4j/core/appender/rolling/DefaultRolloverStrategy$Builder.withConfig:(Lorg/apache/logging/log4j/core/config/Configuration;)Lorg/apache/logging/log4j/core/appender/rolling/DefaultRolloverStrategy$Builder;
     137: invokevirtual #27                 // Method org/apache/logging/log4j/core/appender/rolling/DefaultRolloverStrategy$Builder.build:()Lorg/apache/logging/log4j/core/appender/rolling/DefaultRolloverStrategy;
     140: putfield      #19                 // Field strategy:Lorg/apache/logging/log4j/core/appender/rolling/RolloverStrategy;
     143: goto          211
     146: aload_0
     147: invokestatic  #28                 // Method org/apache/logging/log4j/core/appender/rolling/DirectWriteRolloverStrategy.newBuilder:()Lorg/apache/logging/log4j/core/appender/rolling/DirectWriteRolloverStrategy$Builder;
     150: iconst_m1
     151: invokestatic  #23                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
     154: invokevirtual #29                 // Method org/apache/logging/log4j/core/appender/rolling/DirectWriteRolloverStrategy$Builder.withCompressionLevelStr:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/appender/rolling/DirectWriteRolloverStrategy$Builder;
     157: aload_0
     158: invokevirtual #25                 // Method getConfiguration:()Lorg/apache/logging/log4j/core/config/Configuration;
     161: invokevirtual #30                 // Method org/apache/logging/log4j/core/appender/rolling/DirectWriteRolloverStrategy$Builder.withConfig:(Lorg/apache/logging/log4j/core/config/Configuration;)Lorg/apache/logging/log4j/core/appender/rolling/DirectWriteRolloverStrategy$Builder;
     164: invokevirtual #31                 // Method org/apache/logging/log4j/core/appender/rolling/DirectWriteRolloverStrategy$Builder.build:()Lorg/apache/logging/log4j/core/appender/rolling/DirectWriteRolloverStrategy;
     167: putfield      #19                 // Field strategy:Lorg/apache/logging/log4j/core/appender/rolling/RolloverStrategy;
     170: goto          211
     173: aload_0
     174: getfield      #20                 // Field fileName:Ljava/lang/String;
     177: ifnonnull     211
     180: aload_0
     181: getfield      #19                 // Field strategy:Lorg/apache/logging/log4j/core/appender/rolling/RolloverStrategy;
     184: instanceof    #32                 // class org/apache/logging/log4j/core/appender/rolling/DirectFileRolloverStrategy
     187: ifne          211
     190: invokestatic  #33                 // Method org/apache/logging/log4j/core/appender/RollingFileAppender.access$400:()Lorg/apache/logging/log4j/Logger;
     193: ldc           #34                 // String RollingFileAppender \'{}\': When no file name is provided a {} must be configured
     195: aload_0
     196: invokevirtual #5                  // Method getName:()Ljava/lang/String;
     199: ldc           #32                 // class org/apache/logging/log4j/core/appender/rolling/DirectFileRolloverStrategy
     201: invokevirtual #35                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
     204: invokeinterface #36,  4           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     209: aconst_null
     210: areturn
     211: aload_0
     212: invokevirtual #37                 // Method getOrCreateLayout:()Lorg/apache/logging/log4j/core/Layout;
     215: astore_3
     216: aload_0
     217: getfield      #20                 // Field fileName:Ljava/lang/String;
     220: aload_0
     221: getfield      #13                 // Field filePattern:Ljava/lang/String;
     224: aload_0
     225: getfield      #2                  // Field append:Z
     228: iload_1
     229: aload_0
     230: getfield      #16                 // Field policy:Lorg/apache/logging/log4j/core/appender/rolling/TriggeringPolicy;
     233: aload_0
     234: getfield      #19                 // Field strategy:Lorg/apache/logging/log4j/core/appender/rolling/RolloverStrategy;
     237: aload_0
     238: getfield      #38                 // Field advertiseUri:Ljava/lang/String;
     241: aload_3
     242: iload_2
     243: aload_0
     244: invokevirtual #39                 // Method isImmediateFlush:()Z
     247: aload_0
     248: getfield      #40                 // Field createOnDemand:Z
     251: aload_0
     252: getfield      #41                 // Field filePermissions:Ljava/lang/String;
     255: aload_0
     256: getfield      #42                 // Field fileOwner:Ljava/lang/String;
     259: aload_0
     260: getfield      #43                 // Field fileGroup:Ljava/lang/String;
     263: aload_0
     264: invokevirtual #25                 // Method getConfiguration:()Lorg/apache/logging/log4j/core/config/Configuration;
     267: invokestatic  #44                 // Method org/apache/logging/log4j/core/appender/rolling/RollingFileManager.getFileManager:(Ljava/lang/String;Ljava/lang/String;ZZLorg/apache/logging/log4j/core/appender/rolling/TriggeringPolicy;Lorg/apache/logging/log4j/core/appender/rolling/RolloverStrategy;Ljava/lang/String;Lorg/apache/logging/log4j/core/Layout;IZZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/logging/log4j/core/config/Configuration;)Lorg/apache/logging/log4j/core/appender/rolling/RollingFileManager;
     270: astore        4
     272: aload         4
     274: ifnonnull     279
     277: aconst_null
     278: areturn
     279: aload         4
     281: invokevirtual #45                 // Method org/apache/logging/log4j/core/appender/rolling/RollingFileManager.initialize:()V
     284: new           #46                 // class org/apache/logging/log4j/core/appender/RollingFileAppender
     287: dup
     288: aload_0
     289: invokevirtual #5                  // Method getName:()Ljava/lang/String;
     292: aload_3
     293: aload_0
     294: invokevirtual #47                 // Method getFilter:()Lorg/apache/logging/log4j/core/Filter;
     297: aload         4
     299: aload_0
     300: getfield      #20                 // Field fileName:Ljava/lang/String;
     303: aload_0
     304: getfield      #13                 // Field filePattern:Ljava/lang/String;
     307: aload_0
     308: invokevirtual #48                 // Method isIgnoreExceptions:()Z
     311: iload_1
     312: ifeq          322
     315: aload_0
     316: invokevirtual #39                 // Method isImmediateFlush:()Z
     319: ifeq          326
     322: iconst_1
     323: goto          327
     326: iconst_0
     327: aload_0
     328: getfield      #49                 // Field advertise:Z
     331: ifeq          346
     334: aload_0
     335: invokevirtual #25                 // Method getConfiguration:()Lorg/apache/logging/log4j/core/config/Configuration;
     338: invokeinterface #50,  1           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.getAdvertiser:()Lorg/apache/logging/log4j/core/net/Advertiser;
     343: goto          347
     346: aconst_null
     347: aload_0
     348: invokevirtual #51                 // Method getPropertyArray:()[Lorg/apache/logging/log4j/core/config/Property;
     351: aconst_null
     352: invokespecial #52                 // Method org/apache/logging/log4j/core/appender/RollingFileAppender."<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/Layout;Lorg/apache/logging/log4j/core/Filter;Lorg/apache/logging/log4j/core/appender/rolling/RollingFileManager;Ljava/lang/String;Ljava/lang/String;ZZLorg/apache/logging/log4j/core/net/Advertiser;[Lorg/apache/logging/log4j/core/config/Property;Lorg/apache/logging/log4j/core/appender/RollingFileAppender$1;)V
     355: areturn

  public java.lang.String getAdvertiseUri();
    Code:
       0: aload_0
       1: getfield      #38                 // Field advertiseUri:Ljava/lang/String;
       4: areturn

  public java.lang.String getFileName();
    Code:
       0: aload_0
       1: getfield      #20                 // Field fileName:Ljava/lang/String;
       4: areturn

  public boolean isAdvertise();
    Code:
       0: aload_0
       1: getfield      #49                 // Field advertise:Z
       4: ireturn

  public boolean isAppend();
    Code:
       0: aload_0
       1: getfield      #2                  // Field append:Z
       4: ireturn

  public boolean isCreateOnDemand();
    Code:
       0: aload_0
       1: getfield      #40                 // Field createOnDemand:Z
       4: ireturn

  public boolean isLocking();
    Code:
       0: aload_0
       1: getfield      #53                 // Field locking:Z
       4: ireturn

  public java.lang.String getFilePermissions();
    Code:
       0: aload_0
       1: getfield      #41                 // Field filePermissions:Ljava/lang/String;
       4: areturn

  public java.lang.String getFileOwner();
    Code:
       0: aload_0
       1: getfield      #42                 // Field fileOwner:Ljava/lang/String;
       4: areturn

  public java.lang.String getFileGroup();
    Code:
       0: aload_0
       1: getfield      #43                 // Field fileGroup:Ljava/lang/String;
       4: areturn

  public B withAdvertise(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #49                 // Field advertise:Z
       5: aload_0
       6: invokevirtual #54                 // Method asBuilder:()Lorg/apache/logging/log4j/core/filter/AbstractFilterable$Builder;
       9: checkcast     #55                 // class org/apache/logging/log4j/core/appender/RollingFileAppender$Builder
      12: areturn

  public B withAdvertiseUri(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #38                 // Field advertiseUri:Ljava/lang/String;
       5: aload_0
       6: invokevirtual #54                 // Method asBuilder:()Lorg/apache/logging/log4j/core/filter/AbstractFilterable$Builder;
       9: checkcast     #55                 // class org/apache/logging/log4j/core/appender/RollingFileAppender$Builder
      12: areturn

  public B withAppend(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field append:Z
       5: aload_0
       6: invokevirtual #54                 // Method asBuilder:()Lorg/apache/logging/log4j/core/filter/AbstractFilterable$Builder;
       9: checkcast     #55                 // class org/apache/logging/log4j/core/appender/RollingFileAppender$Builder
      12: areturn

  public B withFileName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field fileName:Ljava/lang/String;
       5: aload_0
       6: invokevirtual #54                 // Method asBuilder:()Lorg/apache/logging/log4j/core/filter/AbstractFilterable$Builder;
       9: checkcast     #55                 // class org/apache/logging/log4j/core/appender/RollingFileAppender$Builder
      12: areturn

  public B withCreateOnDemand(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #40                 // Field createOnDemand:Z
       5: aload_0
       6: invokevirtual #54                 // Method asBuilder:()Lorg/apache/logging/log4j/core/filter/AbstractFilterable$Builder;
       9: checkcast     #55                 // class org/apache/logging/log4j/core/appender/RollingFileAppender$Builder
      12: areturn

  public B withLocking(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #53                 // Field locking:Z
       5: aload_0
       6: invokevirtual #54                 // Method asBuilder:()Lorg/apache/logging/log4j/core/filter/AbstractFilterable$Builder;
       9: checkcast     #55                 // class org/apache/logging/log4j/core/appender/RollingFileAppender$Builder
      12: areturn

  public java.lang.String getFilePattern();
    Code:
       0: aload_0
       1: getfield      #13                 // Field filePattern:Ljava/lang/String;
       4: areturn

  public org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy getPolicy();
    Code:
       0: aload_0
       1: getfield      #16                 // Field policy:Lorg/apache/logging/log4j/core/appender/rolling/TriggeringPolicy;
       4: areturn

  public org.apache.logging.log4j.core.appender.rolling.RolloverStrategy getStrategy();
    Code:
       0: aload_0
       1: getfield      #19                 // Field strategy:Lorg/apache/logging/log4j/core/appender/rolling/RolloverStrategy;
       4: areturn

  public B withFilePattern(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field filePattern:Ljava/lang/String;
       5: aload_0
       6: invokevirtual #54                 // Method asBuilder:()Lorg/apache/logging/log4j/core/filter/AbstractFilterable$Builder;
       9: checkcast     #55                 // class org/apache/logging/log4j/core/appender/RollingFileAppender$Builder
      12: areturn

  public B withPolicy(org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field policy:Lorg/apache/logging/log4j/core/appender/rolling/TriggeringPolicy;
       5: aload_0
       6: invokevirtual #54                 // Method asBuilder:()Lorg/apache/logging/log4j/core/filter/AbstractFilterable$Builder;
       9: checkcast     #55                 // class org/apache/logging/log4j/core/appender/RollingFileAppender$Builder
      12: areturn

  public B withStrategy(org.apache.logging.log4j.core.appender.rolling.RolloverStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field strategy:Lorg/apache/logging/log4j/core/appender/rolling/RolloverStrategy;
       5: aload_0
       6: invokevirtual #54                 // Method asBuilder:()Lorg/apache/logging/log4j/core/filter/AbstractFilterable$Builder;
       9: checkcast     #55                 // class org/apache/logging/log4j/core/appender/RollingFileAppender$Builder
      12: areturn

  public B withFilePermissions(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #41                 // Field filePermissions:Ljava/lang/String;
       5: aload_0
       6: invokevirtual #54                 // Method asBuilder:()Lorg/apache/logging/log4j/core/filter/AbstractFilterable$Builder;
       9: checkcast     #55                 // class org/apache/logging/log4j/core/appender/RollingFileAppender$Builder
      12: areturn

  public B withFileOwner(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #42                 // Field fileOwner:Ljava/lang/String;
       5: aload_0
       6: invokevirtual #54                 // Method asBuilder:()Lorg/apache/logging/log4j/core/filter/AbstractFilterable$Builder;
       9: checkcast     #55                 // class org/apache/logging/log4j/core/appender/RollingFileAppender$Builder
      12: areturn

  public B withFileGroup(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #43                 // Field fileGroup:Ljava/lang/String;
       5: aload_0
       6: invokevirtual #54                 // Method asBuilder:()Lorg/apache/logging/log4j/core/filter/AbstractFilterable$Builder;
       9: checkcast     #55                 // class org/apache/logging/log4j/core/appender/RollingFileAppender$Builder
      12: areturn

  public java.lang.Object build();
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method build:()Lorg/apache/logging/log4j/core/appender/RollingFileAppender;
       4: areturn
}
