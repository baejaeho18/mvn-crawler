Compiled from "AsyncLoggerConfigDisruptor.java"
class org.apache.logging.log4j.core.async.AsyncLoggerConfigDisruptor$Log4jEventWrapperHandler implements com.lmax.disruptor.SequenceReportingEventHandler<org.apache.logging.log4j.core.async.AsyncLoggerConfigDisruptor$Log4jEventWrapper> {
  private static final int NOTIFY_PROGRESS_THRESHOLD;

  private com.lmax.disruptor.Sequence sequenceCallback;

  private int counter;

  private org.apache.logging.log4j.core.async.AsyncLoggerConfigDisruptor$Log4jEventWrapperHandler();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public void setSequenceCallback(com.lmax.disruptor.Sequence);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field sequenceCallback:Lcom/lmax/disruptor/Sequence;
       5: return

  public void onEvent(org.apache.logging.log4j.core.async.AsyncLoggerConfigDisruptor$Log4jEventWrapper, long, boolean) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokestatic  #4                  // Method org/apache/logging/log4j/core/async/AsyncLoggerConfigDisruptor$Log4jEventWrapper.access$000:(Lorg/apache/logging/log4j/core/async/AsyncLoggerConfigDisruptor$Log4jEventWrapper;)Lorg/apache/logging/log4j/core/LogEvent;
       4: iload         4
       6: invokeinterface #5,  2            // InterfaceMethod org/apache/logging/log4j/core/LogEvent.setEndOfBatch:(Z)V
      11: aload_1
      12: invokestatic  #6                  // Method org/apache/logging/log4j/core/async/AsyncLoggerConfigDisruptor$Log4jEventWrapper.access$100:(Lorg/apache/logging/log4j/core/async/AsyncLoggerConfigDisruptor$Log4jEventWrapper;)Lorg/apache/logging/log4j/core/async/AsyncLoggerConfig;
      15: aload_1
      16: invokestatic  #4                  // Method org/apache/logging/log4j/core/async/AsyncLoggerConfigDisruptor$Log4jEventWrapper.access$000:(Lorg/apache/logging/log4j/core/async/AsyncLoggerConfigDisruptor$Log4jEventWrapper;)Lorg/apache/logging/log4j/core/LogEvent;
      19: invokevirtual #7                  // Method org/apache/logging/log4j/core/async/AsyncLoggerConfig.logToAsyncLoggerConfigsOnCurrentThread:(Lorg/apache/logging/log4j/core/LogEvent;)V
      22: aload_1
      23: invokevirtual #8                  // Method org/apache/logging/log4j/core/async/AsyncLoggerConfigDisruptor$Log4jEventWrapper.clear:()V
      26: aload_0
      27: lload_2
      28: invokespecial #9                  // Method notifyIntermediateProgress:(J)V
      31: return

  private void notifyIntermediateProgress(long);
    Code:
       0: aload_0
       1: dup
       2: getfield      #10                 // Field counter:I
       5: iconst_1
       6: iadd
       7: dup_x1
       8: putfield      #10                 // Field counter:I
      11: bipush        50
      13: if_icmple     29
      16: aload_0
      17: getfield      #3                  // Field sequenceCallback:Lcom/lmax/disruptor/Sequence;
      20: lload_1
      21: invokevirtual #12                 // Method com/lmax/disruptor/Sequence.set:(J)V
      24: aload_0
      25: iconst_0
      26: putfield      #10                 // Field counter:I
      29: return

  public void onEvent(java.lang.Object, long, boolean) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #13                 // class org/apache/logging/log4j/core/async/AsyncLoggerConfigDisruptor$Log4jEventWrapper
       5: lload_2
       6: iload         4
       8: invokevirtual #14                 // Method onEvent:(Lorg/apache/logging/log4j/core/async/AsyncLoggerConfigDisruptor$Log4jEventWrapper;JZ)V
      11: return

  org.apache.logging.log4j.core.async.AsyncLoggerConfigDisruptor$Log4jEventWrapperHandler(org.apache.logging.log4j.core.async.AsyncLoggerConfigDisruptor$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
