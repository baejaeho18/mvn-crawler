Compiled from "AbstractStringLayout.java"
public abstract class org.apache.logging.log4j.core.layout.AbstractStringLayout$Builder<B extends org.apache.logging.log4j.core.layout.AbstractStringLayout$Builder<B>> extends org.apache.logging.log4j.core.layout.AbstractLayout$Builder<B> {
  private java.nio.charset.Charset charset;

  private org.apache.logging.log4j.core.layout.AbstractStringLayout$Serializer footerSerializer;

  private org.apache.logging.log4j.core.layout.AbstractStringLayout$Serializer headerSerializer;

  public org.apache.logging.log4j.core.layout.AbstractStringLayout$Builder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/logging/log4j/core/layout/AbstractLayout$Builder."<init>":()V
       4: return

  public java.nio.charset.Charset getCharset();
    Code:
       0: aload_0
       1: getfield      #2                  // Field charset:Ljava/nio/charset/Charset;
       4: areturn

  public org.apache.logging.log4j.core.layout.AbstractStringLayout$Serializer getFooterSerializer();
    Code:
       0: aload_0
       1: getfield      #3                  // Field footerSerializer:Lorg/apache/logging/log4j/core/layout/AbstractStringLayout$Serializer;
       4: areturn

  public org.apache.logging.log4j.core.layout.AbstractStringLayout$Serializer getHeaderSerializer();
    Code:
       0: aload_0
       1: getfield      #4                  // Field headerSerializer:Lorg/apache/logging/log4j/core/layout/AbstractStringLayout$Serializer;
       4: areturn

  public B setCharset(java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field charset:Ljava/nio/charset/Charset;
       5: aload_0
       6: invokevirtual #5                  // Method asBuilder:()Lorg/apache/logging/log4j/core/layout/AbstractLayout$Builder;
       9: checkcast     #6                  // class org/apache/logging/log4j/core/layout/AbstractStringLayout$Builder
      12: areturn

  public B setFooterSerializer(org.apache.logging.log4j.core.layout.AbstractStringLayout$Serializer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field footerSerializer:Lorg/apache/logging/log4j/core/layout/AbstractStringLayout$Serializer;
       5: aload_0
       6: invokevirtual #5                  // Method asBuilder:()Lorg/apache/logging/log4j/core/layout/AbstractLayout$Builder;
       9: checkcast     #6                  // class org/apache/logging/log4j/core/layout/AbstractStringLayout$Builder
      12: areturn

  public B setHeaderSerializer(org.apache.logging.log4j.core.layout.AbstractStringLayout$Serializer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field headerSerializer:Lorg/apache/logging/log4j/core/layout/AbstractStringLayout$Serializer;
       5: aload_0
       6: invokevirtual #5                  // Method asBuilder:()Lorg/apache/logging/log4j/core/layout/AbstractLayout$Builder;
       9: checkcast     #6                  // class org/apache/logging/log4j/core/layout/AbstractStringLayout$Builder
      12: areturn
}
