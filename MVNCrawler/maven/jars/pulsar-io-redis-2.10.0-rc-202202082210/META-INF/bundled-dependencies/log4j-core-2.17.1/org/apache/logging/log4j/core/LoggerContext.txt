Compiled from "LoggerContext.java"
public class org.apache.logging.log4j.core.LoggerContext extends org.apache.logging.log4j.core.AbstractLifeCycle implements org.apache.logging.log4j.spi.LoggerContext,java.lang.AutoCloseable,org.apache.logging.log4j.spi.Terminable,org.apache.logging.log4j.core.config.ConfigurationListener,org.apache.logging.log4j.spi.LoggerContextShutdownEnabled {
  public static final java.lang.String PROPERTY_CONFIG;

  private static final org.apache.logging.log4j.core.config.Configuration NULL_CONFIGURATION;

  private final org.apache.logging.log4j.spi.LoggerRegistry<org.apache.logging.log4j.core.Logger> loggerRegistry;

  private final java.util.concurrent.CopyOnWriteArrayList<java.beans.PropertyChangeListener> propertyChangeListeners;

  private volatile java.util.List<org.apache.logging.log4j.spi.LoggerContextShutdownAware> listeners;

  private volatile org.apache.logging.log4j.core.config.Configuration configuration;

  private static final java.lang.String EXTERNAL_CONTEXT_KEY;

  private java.util.concurrent.ConcurrentMap<java.lang.String, java.lang.Object> externalMap;

  private java.lang.String contextName;

  private volatile java.net.URI configLocation;

  private org.apache.logging.log4j.core.util.Cancellable shutdownCallback;

  private final java.util.concurrent.locks.Lock configLock;

  public org.apache.logging.log4j.core.LoggerContext(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aconst_null
       4: checkcast     #1                  // class java/net/URI
       7: invokespecial #2                  // Method "<init>":(Ljava/lang/String;Ljava/lang/Object;Ljava/net/URI;)V
      10: return

  public org.apache.logging.log4j.core.LoggerContext(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: checkcast     #1                  // class java/net/URI
       7: invokespecial #2                  // Method "<init>":(Ljava/lang/String;Ljava/lang/Object;Ljava/net/URI;)V
      10: return

  public org.apache.logging.log4j.core.LoggerContext(java.lang.String, java.lang.Object, java.net.URI);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/apache/logging/log4j/core/AbstractLifeCycle."<init>":()V
       4: aload_0
       5: new           #4                  // class org/apache/logging/log4j/spi/LoggerRegistry
       8: dup
       9: invokespecial #5                  // Method org/apache/logging/log4j/spi/LoggerRegistry."<init>":()V
      12: putfield      #6                  // Field loggerRegistry:Lorg/apache/logging/log4j/spi/LoggerRegistry;
      15: aload_0
      16: new           #7                  // class java/util/concurrent/CopyOnWriteArrayList
      19: dup
      20: invokespecial #8                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      23: putfield      #9                  // Field propertyChangeListeners:Ljava/util/concurrent/CopyOnWriteArrayList;
      26: aload_0
      27: new           #10                 // class org/apache/logging/log4j/core/config/DefaultConfiguration
      30: dup
      31: invokespecial #11                 // Method org/apache/logging/log4j/core/config/DefaultConfiguration."<init>":()V
      34: putfield      #12                 // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
      37: aload_0
      38: new           #13                 // class java/util/concurrent/ConcurrentHashMap
      41: dup
      42: invokespecial #14                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      45: putfield      #15                 // Field externalMap:Ljava/util/concurrent/ConcurrentMap;
      48: aload_0
      49: new           #16                 // class java/util/concurrent/locks/ReentrantLock
      52: dup
      53: invokespecial #17                 // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      56: putfield      #18                 // Field configLock:Ljava/util/concurrent/locks/Lock;
      59: aload_0
      60: aload_1
      61: putfield      #19                 // Field contextName:Ljava/lang/String;
      64: aload_2
      65: ifnonnull     83
      68: aload_0
      69: getfield      #15                 // Field externalMap:Ljava/util/concurrent/ConcurrentMap;
      72: ldc           #21                 // String __EXTERNAL_CONTEXT_KEY__
      74: invokeinterface #22,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      79: pop
      80: goto          96
      83: aload_0
      84: getfield      #15                 // Field externalMap:Ljava/util/concurrent/ConcurrentMap;
      87: ldc           #21                 // String __EXTERNAL_CONTEXT_KEY__
      89: aload_2
      90: invokeinterface #23,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      95: pop
      96: aload_0
      97: aload_3
      98: putfield      #24                 // Field configLocation:Ljava/net/URI;
     101: new           #25                 // class java/lang/Thread
     104: dup
     105: new           #26                 // class org/apache/logging/log4j/core/LoggerContext$ThreadContextDataTask
     108: dup
     109: aload_0
     110: aconst_null
     111: invokespecial #27                 // Method org/apache/logging/log4j/core/LoggerContext$ThreadContextDataTask."<init>":(Lorg/apache/logging/log4j/core/LoggerContext;Lorg/apache/logging/log4j/core/LoggerContext$1;)V
     114: ldc           #28                 // String Thread Context Data Task
     116: invokespecial #29                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
     119: astore        4
     121: aload         4
     123: iconst_1
     124: invokevirtual #30                 // Method java/lang/Thread.setDaemon:(Z)V
     127: aload         4
     129: invokevirtual #31                 // Method java/lang/Thread.start:()V
     132: return

  public org.apache.logging.log4j.core.LoggerContext(java.lang.String, java.lang.Object, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/apache/logging/log4j/core/AbstractLifeCycle."<init>":()V
       4: aload_0
       5: new           #4                  // class org/apache/logging/log4j/spi/LoggerRegistry
       8: dup
       9: invokespecial #5                  // Method org/apache/logging/log4j/spi/LoggerRegistry."<init>":()V
      12: putfield      #6                  // Field loggerRegistry:Lorg/apache/logging/log4j/spi/LoggerRegistry;
      15: aload_0
      16: new           #7                  // class java/util/concurrent/CopyOnWriteArrayList
      19: dup
      20: invokespecial #8                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      23: putfield      #9                  // Field propertyChangeListeners:Ljava/util/concurrent/CopyOnWriteArrayList;
      26: aload_0
      27: new           #10                 // class org/apache/logging/log4j/core/config/DefaultConfiguration
      30: dup
      31: invokespecial #11                 // Method org/apache/logging/log4j/core/config/DefaultConfiguration."<init>":()V
      34: putfield      #12                 // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
      37: aload_0
      38: new           #13                 // class java/util/concurrent/ConcurrentHashMap
      41: dup
      42: invokespecial #14                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      45: putfield      #15                 // Field externalMap:Ljava/util/concurrent/ConcurrentMap;
      48: aload_0
      49: new           #16                 // class java/util/concurrent/locks/ReentrantLock
      52: dup
      53: invokespecial #17                 // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      56: putfield      #18                 // Field configLock:Ljava/util/concurrent/locks/Lock;
      59: aload_0
      60: aload_1
      61: putfield      #19                 // Field contextName:Ljava/lang/String;
      64: aload_2
      65: ifnonnull     83
      68: aload_0
      69: getfield      #15                 // Field externalMap:Ljava/util/concurrent/ConcurrentMap;
      72: ldc           #21                 // String __EXTERNAL_CONTEXT_KEY__
      74: invokeinterface #22,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      79: pop
      80: goto          96
      83: aload_0
      84: getfield      #15                 // Field externalMap:Ljava/util/concurrent/ConcurrentMap;
      87: ldc           #21                 // String __EXTERNAL_CONTEXT_KEY__
      89: aload_2
      90: invokeinterface #23,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      95: pop
      96: aload_3
      97: ifnull        130
     100: new           #32                 // class java/io/File
     103: dup
     104: aload_3
     105: invokespecial #33                 // Method java/io/File."<init>":(Ljava/lang/String;)V
     108: invokevirtual #34                 // Method java/io/File.toURI:()Ljava/net/URI;
     111: astore        4
     113: goto          121
     116: astore        5
     118: aconst_null
     119: astore        4
     121: aload_0
     122: aload         4
     124: putfield      #24                 // Field configLocation:Ljava/net/URI;
     127: goto          135
     130: aload_0
     131: aconst_null
     132: putfield      #24                 // Field configLocation:Ljava/net/URI;
     135: new           #25                 // class java/lang/Thread
     138: dup
     139: new           #26                 // class org/apache/logging/log4j/core/LoggerContext$ThreadContextDataTask
     142: dup
     143: aload_0
     144: aconst_null
     145: invokespecial #27                 // Method org/apache/logging/log4j/core/LoggerContext$ThreadContextDataTask."<init>":(Lorg/apache/logging/log4j/core/LoggerContext;Lorg/apache/logging/log4j/core/LoggerContext$1;)V
     148: ldc           #28                 // String Thread Context Data Task
     150: invokespecial #29                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
     153: astore        4
     155: aload         4
     157: iconst_1
     158: invokevirtual #30                 // Method java/lang/Thread.setDaemon:(Z)V
     161: aload         4
     163: invokevirtual #31                 // Method java/lang/Thread.start:()V
     166: return
    Exception table:
       from    to  target type
         100   113   116   Class java/lang/Exception

  public void addShutdownListener(org.apache.logging.log4j.spi.LoggerContextShutdownAware);
    Code:
       0: aload_0
       1: getfield      #36                 // Field listeners:Ljava/util/List;
       4: ifnonnull     39
       7: aload_0
       8: dup
       9: astore_2
      10: monitorenter
      11: aload_0
      12: getfield      #36                 // Field listeners:Ljava/util/List;
      15: ifnonnull     29
      18: aload_0
      19: new           #7                  // class java/util/concurrent/CopyOnWriteArrayList
      22: dup
      23: invokespecial #8                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      26: putfield      #36                 // Field listeners:Ljava/util/List;
      29: aload_2
      30: monitorexit
      31: goto          39
      34: astore_3
      35: aload_2
      36: monitorexit
      37: aload_3
      38: athrow
      39: aload_0
      40: getfield      #36                 // Field listeners:Ljava/util/List;
      43: aload_1
      44: invokeinterface #37,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      49: pop
      50: return
    Exception table:
       from    to  target type
          11    31    34   any
          34    37    34   any

  public java.util.List<org.apache.logging.log4j.spi.LoggerContextShutdownAware> getListeners();
    Code:
       0: aload_0
       1: getfield      #36                 // Field listeners:Ljava/util/List;
       4: areturn

  public static org.apache.logging.log4j.core.LoggerContext getContext();
    Code:
       0: invokestatic  #38                 // Method org/apache/logging/log4j/LogManager.getContext:()Lorg/apache/logging/log4j/spi/LoggerContext;
       3: checkcast     #20                 // class org/apache/logging/log4j/core/LoggerContext
       6: areturn

  public static org.apache.logging.log4j.core.LoggerContext getContext(boolean);
    Code:
       0: iload_0
       1: invokestatic  #39                 // Method org/apache/logging/log4j/LogManager.getContext:(Z)Lorg/apache/logging/log4j/spi/LoggerContext;
       4: checkcast     #20                 // class org/apache/logging/log4j/core/LoggerContext
       7: areturn

  public static org.apache.logging.log4j.core.LoggerContext getContext(java.lang.ClassLoader, boolean, java.net.URI);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #40                 // Method org/apache/logging/log4j/LogManager.getContext:(Ljava/lang/ClassLoader;ZLjava/net/URI;)Lorg/apache/logging/log4j/spi/LoggerContext;
       6: checkcast     #20                 // class org/apache/logging/log4j/core/LoggerContext
       9: areturn

  public void start();
    Code:
       0: getstatic     #41                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       3: ldc           #42                 // String Starting LoggerContext[name={}, {}]...
       5: aload_0
       6: invokevirtual #43                 // Method getName:()Ljava/lang/String;
       9: aload_0
      10: invokeinterface #44,  4           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      15: invokestatic  #45                 // Method org/apache/logging/log4j/util/PropertiesUtil.getProperties:()Lorg/apache/logging/log4j/util/PropertiesUtil;
      18: ldc           #46                 // String log4j.LoggerContext.stacktrace.on.start
      20: iconst_0
      21: invokevirtual #47                 // Method org/apache/logging/log4j/util/PropertiesUtil.getBooleanProperty:(Ljava/lang/String;Z)Z
      24: ifeq          46
      27: getstatic     #41                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      30: ldc           #48                 // String Stack trace to locate invoker
      32: new           #35                 // class java/lang/Exception
      35: dup
      36: ldc           #49                 // String Not a real error, showing stack trace to locate invoker
      38: invokespecial #50                 // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
      41: invokeinterface #51,  3           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      46: aload_0
      47: getfield      #18                 // Field configLock:Ljava/util/concurrent/locks/Lock;
      50: invokeinterface #52,  1           // InterfaceMethod java/util/concurrent/locks/Lock.tryLock:()Z
      55: ifeq          124
      58: aload_0
      59: invokevirtual #53                 // Method isInitialized:()Z
      62: ifne          72
      65: aload_0
      66: invokevirtual #54                 // Method isStopped:()Z
      69: ifeq          100
      72: aload_0
      73: invokevirtual #55                 // Method setStarting:()V
      76: aload_0
      77: invokevirtual #56                 // Method reconfigure:()V
      80: aload_0
      81: getfield      #12                 // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
      84: invokeinterface #57,  1           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.isShutdownHookEnabled:()Z
      89: ifeq          96
      92: aload_0
      93: invokespecial #58                 // Method setUpShutdownHook:()V
      96: aload_0
      97: invokevirtual #59                 // Method setStarted:()V
     100: aload_0
     101: getfield      #18                 // Field configLock:Ljava/util/concurrent/locks/Lock;
     104: invokeinterface #60,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     109: goto          124
     112: astore_1
     113: aload_0
     114: getfield      #18                 // Field configLock:Ljava/util/concurrent/locks/Lock;
     117: invokeinterface #60,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     122: aload_1
     123: athrow
     124: getstatic     #41                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
     127: ldc           #61                 // String LoggerContext[name={}, {}] started OK.
     129: aload_0
     130: invokevirtual #43                 // Method getName:()Ljava/lang/String;
     133: aload_0
     134: invokeinterface #44,  4           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     139: return
    Exception table:
       from    to  target type
          58   100   112   any

  public void start(org.apache.logging.log4j.core.config.Configuration);
    Code:
       0: getstatic     #41                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       3: ldc           #62                 // String Starting LoggerContext[name={}, {}] with configuration {}...
       5: aload_0
       6: invokevirtual #43                 // Method getName:()Ljava/lang/String;
       9: aload_0
      10: aload_1
      11: invokeinterface #63,  5           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      16: aload_0
      17: getfield      #18                 // Field configLock:Ljava/util/concurrent/locks/Lock;
      20: invokeinterface #52,  1           // InterfaceMethod java/util/concurrent/locks/Lock.tryLock:()Z
      25: ifeq          86
      28: aload_0
      29: invokevirtual #53                 // Method isInitialized:()Z
      32: ifne          42
      35: aload_0
      36: invokevirtual #54                 // Method isStopped:()Z
      39: ifeq          62
      42: aload_0
      43: getfield      #12                 // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
      46: invokeinterface #57,  1           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.isShutdownHookEnabled:()Z
      51: ifeq          58
      54: aload_0
      55: invokespecial #58                 // Method setUpShutdownHook:()V
      58: aload_0
      59: invokevirtual #59                 // Method setStarted:()V
      62: aload_0
      63: getfield      #18                 // Field configLock:Ljava/util/concurrent/locks/Lock;
      66: invokeinterface #60,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      71: goto          86
      74: astore_2
      75: aload_0
      76: getfield      #18                 // Field configLock:Ljava/util/concurrent/locks/Lock;
      79: invokeinterface #60,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      84: aload_2
      85: athrow
      86: aload_0
      87: aload_1
      88: invokevirtual #64                 // Method setConfiguration:(Lorg/apache/logging/log4j/core/config/Configuration;)Lorg/apache/logging/log4j/core/config/Configuration;
      91: pop
      92: getstatic     #41                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      95: ldc           #65                 // String LoggerContext[name={}, {}] started OK with configuration {}.
      97: aload_0
      98: invokevirtual #43                 // Method getName:()Ljava/lang/String;
     101: aload_0
     102: aload_1
     103: invokeinterface #63,  5           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
     108: return
    Exception table:
       from    to  target type
          28    62    74   any

  private void setUpShutdownHook();
    Code:
       0: aload_0
       1: getfield      #66                 // Field shutdownCallback:Lorg/apache/logging/log4j/core/util/Cancellable;
       4: ifnonnull     93
       7: invokestatic  #67                 // Method org/apache/logging/log4j/LogManager.getFactory:()Lorg/apache/logging/log4j/spi/LoggerContextFactory;
      10: astore_1
      11: aload_1
      12: instanceof    #68                 // class org/apache/logging/log4j/core/util/ShutdownCallbackRegistry
      15: ifeq          93
      18: getstatic     #41                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      21: getstatic     #69                 // Field org/apache/logging/log4j/core/util/ShutdownCallbackRegistry.SHUTDOWN_HOOK_MARKER:Lorg/apache/logging/log4j/Marker;
      24: ldc           #70                 // String Shutdown hook enabled. Registering a new one.
      26: invokeinterface #71,  3           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Lorg/apache/logging/log4j/Marker;Ljava/lang/String;)V
      31: aload_0
      32: getfield      #12                 // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
      35: invokeinterface #72,  1           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.getShutdownTimeoutMillis:()J
      40: lstore_2
      41: aload_0
      42: aload_1
      43: checkcast     #68                 // class org/apache/logging/log4j/core/util/ShutdownCallbackRegistry
      46: new           #73                 // class org/apache/logging/log4j/core/LoggerContext$1
      49: dup
      50: aload_0
      51: lload_2
      52: invokespecial #74                 // Method org/apache/logging/log4j/core/LoggerContext$1."<init>":(Lorg/apache/logging/log4j/core/LoggerContext;J)V
      55: invokeinterface #75,  2           // InterfaceMethod org/apache/logging/log4j/core/util/ShutdownCallbackRegistry.addShutdownCallback:(Ljava/lang/Runnable;)Lorg/apache/logging/log4j/core/util/Cancellable;
      60: putfield      #66                 // Field shutdownCallback:Lorg/apache/logging/log4j/core/util/Cancellable;
      63: goto          93
      66: astore_2
      67: new           #76                 // class java/lang/IllegalStateException
      70: dup
      71: ldc           #77                 // String Unable to register Log4j shutdown hook because JVM is shutting down.
      73: aload_2
      74: invokespecial #78                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      77: athrow
      78: astore_2
      79: getstatic     #41                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      82: getstatic     #69                 // Field org/apache/logging/log4j/core/util/ShutdownCallbackRegistry.SHUTDOWN_HOOK_MARKER:Lorg/apache/logging/log4j/Marker;
      85: ldc           #80                 // String Unable to register shutdown hook due to security restrictions
      87: aload_2
      88: invokeinterface #81,  4           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Lorg/apache/logging/log4j/Marker;Ljava/lang/String;Ljava/lang/Throwable;)V
      93: return
    Exception table:
       from    to  target type
          31    63    66   Class java/lang/IllegalStateException
          31    63    78   Class java/lang/SecurityException

  public void close();
    Code:
       0: aload_0
       1: invokevirtual #82                 // Method stop:()V
       4: return

  public void terminate();
    Code:
       0: aload_0
       1: invokevirtual #82                 // Method stop:()V
       4: return

  public boolean stop(long, java.util.concurrent.TimeUnit);
    Code:
       0: getstatic     #41                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       3: ldc           #83                 // String Stopping LoggerContext[name={}, {}]...
       5: aload_0
       6: invokevirtual #43                 // Method getName:()Ljava/lang/String;
       9: aload_0
      10: invokeinterface #44,  4           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      15: aload_0
      16: getfield      #18                 // Field configLock:Ljava/util/concurrent/locks/Lock;
      19: invokeinterface #84,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      24: aload_0
      25: invokevirtual #54                 // Method isStopped:()Z
      28: ifeq          50
      31: iconst_1
      32: istore        4
      34: aload_0
      35: getfield      #18                 // Field configLock:Ljava/util/concurrent/locks/Lock;
      38: invokeinterface #60,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      43: aload_0
      44: invokevirtual #85                 // Method setStopped:()V
      47: iload         4
      49: ireturn
      50: aload_0
      51: invokevirtual #86                 // Method setStopping:()V
      54: aload_0
      55: invokevirtual #43                 // Method getName:()Ljava/lang/String;
      58: invokestatic  #87                 // Method org/apache/logging/log4j/core/jmx/Server.unregisterLoggerContext:(Ljava/lang/String;)V
      61: goto          78
      64: astore        4
      66: getstatic     #41                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      69: ldc           #89                 // String Unable to unregister MBeans
      71: aload         4
      73: invokeinterface #90,  3           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      78: aload_0
      79: getfield      #66                 // Field shutdownCallback:Lorg/apache/logging/log4j/core/util/Cancellable;
      82: ifnull        99
      85: aload_0
      86: getfield      #66                 // Field shutdownCallback:Lorg/apache/logging/log4j/core/util/Cancellable;
      89: invokeinterface #91,  1           // InterfaceMethod org/apache/logging/log4j/core/util/Cancellable.cancel:()V
      94: aload_0
      95: aconst_null
      96: putfield      #66                 // Field shutdownCallback:Lorg/apache/logging/log4j/core/util/Cancellable;
      99: aload_0
     100: getfield      #12                 // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
     103: astore        4
     105: aload_0
     106: getstatic     #92                 // Field NULL_CONFIGURATION:Lorg/apache/logging/log4j/core/config/Configuration;
     109: putfield      #12                 // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
     112: aload_0
     113: invokevirtual #93                 // Method updateLoggers:()V
     116: aload         4
     118: instanceof    #94                 // class org/apache/logging/log4j/core/LifeCycle2
     121: ifeq          140
     124: aload         4
     126: checkcast     #94                 // class org/apache/logging/log4j/core/LifeCycle2
     129: lload_1
     130: aload_3
     131: invokeinterface #95,  4           // InterfaceMethod org/apache/logging/log4j/core/LifeCycle2.stop:(JLjava/util/concurrent/TimeUnit;)Z
     136: pop
     137: goto          147
     140: aload         4
     142: invokeinterface #96,  1           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.stop:()V
     147: aload_0
     148: getfield      #15                 // Field externalMap:Ljava/util/concurrent/ConcurrentMap;
     151: invokeinterface #97,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
     156: invokestatic  #67                 // Method org/apache/logging/log4j/LogManager.getFactory:()Lorg/apache/logging/log4j/spi/LoggerContextFactory;
     159: aload_0
     160: invokeinterface #98,  2           // InterfaceMethod org/apache/logging/log4j/spi/LoggerContextFactory.removeContext:(Lorg/apache/logging/log4j/spi/LoggerContext;)V
     165: aload_0
     166: getfield      #18                 // Field configLock:Ljava/util/concurrent/locks/Lock;
     169: invokeinterface #60,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     174: aload_0
     175: invokevirtual #85                 // Method setStopped:()V
     178: goto          199
     181: astore        5
     183: aload_0
     184: getfield      #18                 // Field configLock:Ljava/util/concurrent/locks/Lock;
     187: invokeinterface #60,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     192: aload_0
     193: invokevirtual #85                 // Method setStopped:()V
     196: aload         5
     198: athrow
     199: aload_0
     200: getfield      #36                 // Field listeners:Ljava/util/List;
     203: ifnull        255
     206: aload_0
     207: getfield      #36                 // Field listeners:Ljava/util/List;
     210: invokeinterface #99,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     215: astore        4
     217: aload         4
     219: invokeinterface #100,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     224: ifeq          255
     227: aload         4
     229: invokeinterface #101,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     234: checkcast     #102                // class org/apache/logging/log4j/spi/LoggerContextShutdownAware
     237: astore        5
     239: aload         5
     241: aload_0
     242: invokeinterface #103,  2          // InterfaceMethod org/apache/logging/log4j/spi/LoggerContextShutdownAware.contextShutdown:(Lorg/apache/logging/log4j/spi/LoggerContext;)V
     247: goto          252
     250: astore        6
     252: goto          217
     255: getstatic     #41                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
     258: ldc           #104                // String Stopped LoggerContext[name={}, {}] with status {}
     260: aload_0
     261: invokevirtual #43                 // Method getName:()Ljava/lang/String;
     264: aload_0
     265: iconst_1
     266: invokestatic  #105                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     269: invokeinterface #63,  5           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
     274: iconst_1
     275: ireturn
    Exception table:
       from    to  target type
          54    61    64   Class java/lang/LinkageError
          54    61    64   Class java/lang/Exception
          24    34   181   any
          50   165   181   any
         181   183   181   any
         239   247   250   Class java/lang/Exception

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #19                 // Field contextName:Ljava/lang/String;
       4: areturn

  public org.apache.logging.log4j.core.Logger getRootLogger();
    Code:
       0: aload_0
       1: ldc           #107                // String
       3: invokevirtual #108                // Method getLogger:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/Logger;
       6: areturn

  public void setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #109                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #110                // class java/lang/String
       8: putfield      #19                 // Field contextName:Ljava/lang/String;
      11: return

  public java.lang.Object getObject(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #15                 // Field externalMap:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #111,  2          // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public java.lang.Object putObject(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #15                 // Field externalMap:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: invokeinterface #23,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object putObjectIfAbsent(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #15                 // Field externalMap:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: invokeinterface #112,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object removeObject(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #15                 // Field externalMap:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #22,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public boolean removeObject(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #15                 // Field externalMap:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: invokeinterface #113,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      11: ireturn

  public void setExternalContext(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        20
       4: aload_0
       5: getfield      #15                 // Field externalMap:Ljava/util/concurrent/ConcurrentMap;
       8: ldc           #21                 // String __EXTERNAL_CONTEXT_KEY__
      10: aload_1
      11: invokeinterface #23,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: goto          32
      20: aload_0
      21: getfield      #15                 // Field externalMap:Ljava/util/concurrent/ConcurrentMap;
      24: ldc           #21                 // String __EXTERNAL_CONTEXT_KEY__
      26: invokeinterface #22,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      31: pop
      32: return

  public java.lang.Object getExternalContext();
    Code:
       0: aload_0
       1: getfield      #15                 // Field externalMap:Ljava/util/concurrent/ConcurrentMap;
       4: ldc           #21                 // String __EXTERNAL_CONTEXT_KEY__
       6: invokeinterface #111,  2          // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public org.apache.logging.log4j.core.Logger getLogger(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #114                // Method getLogger:(Ljava/lang/String;Lorg/apache/logging/log4j/message/MessageFactory;)Lorg/apache/logging/log4j/core/Logger;
       6: areturn

  public java.util.Collection<org.apache.logging.log4j.core.Logger> getLoggers();
    Code:
       0: aload_0
       1: getfield      #6                  // Field loggerRegistry:Lorg/apache/logging/log4j/spi/LoggerRegistry;
       4: invokevirtual #115                // Method org/apache/logging/log4j/spi/LoggerRegistry.getLoggers:()Ljava/util/Collection;
       7: areturn

  public org.apache.logging.log4j.core.Logger getLogger(java.lang.String, org.apache.logging.log4j.message.MessageFactory);
    Code:
       0: aload_0
       1: getfield      #6                  // Field loggerRegistry:Lorg/apache/logging/log4j/spi/LoggerRegistry;
       4: aload_1
       5: aload_2
       6: invokevirtual #116                // Method org/apache/logging/log4j/spi/LoggerRegistry.getLogger:(Ljava/lang/String;Lorg/apache/logging/log4j/message/MessageFactory;)Lorg/apache/logging/log4j/spi/ExtendedLogger;
       9: checkcast     #117                // class org/apache/logging/log4j/core/Logger
      12: astore_3
      13: aload_3
      14: ifnull        24
      17: aload_3
      18: aload_2
      19: invokestatic  #118                // Method org/apache/logging/log4j/spi/AbstractLogger.checkMessageFactory:(Lorg/apache/logging/log4j/spi/ExtendedLogger;Lorg/apache/logging/log4j/message/MessageFactory;)V
      22: aload_3
      23: areturn
      24: aload_0
      25: aload_0
      26: aload_1
      27: aload_2
      28: invokevirtual #119                // Method newInstance:(Lorg/apache/logging/log4j/core/LoggerContext;Ljava/lang/String;Lorg/apache/logging/log4j/message/MessageFactory;)Lorg/apache/logging/log4j/core/Logger;
      31: astore_3
      32: aload_0
      33: getfield      #6                  // Field loggerRegistry:Lorg/apache/logging/log4j/spi/LoggerRegistry;
      36: aload_1
      37: aload_2
      38: aload_3
      39: invokevirtual #120                // Method org/apache/logging/log4j/spi/LoggerRegistry.putIfAbsent:(Ljava/lang/String;Lorg/apache/logging/log4j/message/MessageFactory;Lorg/apache/logging/log4j/spi/ExtendedLogger;)V
      42: aload_0
      43: getfield      #6                  // Field loggerRegistry:Lorg/apache/logging/log4j/spi/LoggerRegistry;
      46: aload_1
      47: aload_2
      48: invokevirtual #116                // Method org/apache/logging/log4j/spi/LoggerRegistry.getLogger:(Ljava/lang/String;Lorg/apache/logging/log4j/message/MessageFactory;)Lorg/apache/logging/log4j/spi/ExtendedLogger;
      51: checkcast     #117                // class org/apache/logging/log4j/core/Logger
      54: areturn

  public boolean hasLogger(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field loggerRegistry:Lorg/apache/logging/log4j/spi/LoggerRegistry;
       4: aload_1
       5: invokevirtual #121                // Method org/apache/logging/log4j/spi/LoggerRegistry.hasLogger:(Ljava/lang/String;)Z
       8: ireturn

  public boolean hasLogger(java.lang.String, org.apache.logging.log4j.message.MessageFactory);
    Code:
       0: aload_0
       1: getfield      #6                  // Field loggerRegistry:Lorg/apache/logging/log4j/spi/LoggerRegistry;
       4: aload_1
       5: aload_2
       6: invokevirtual #122                // Method org/apache/logging/log4j/spi/LoggerRegistry.hasLogger:(Ljava/lang/String;Lorg/apache/logging/log4j/message/MessageFactory;)Z
       9: ireturn

  public boolean hasLogger(java.lang.String, java.lang.Class<? extends org.apache.logging.log4j.message.MessageFactory>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field loggerRegistry:Lorg/apache/logging/log4j/spi/LoggerRegistry;
       4: aload_1
       5: aload_2
       6: invokevirtual #123                // Method org/apache/logging/log4j/spi/LoggerRegistry.hasLogger:(Ljava/lang/String;Ljava/lang/Class;)Z
       9: ireturn

  public org.apache.logging.log4j.core.config.Configuration getConfiguration();
    Code:
       0: aload_0
       1: getfield      #12                 // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
       4: areturn

  public void addFilter(org.apache.logging.log4j.core.Filter);
    Code:
       0: aload_0
       1: getfield      #12                 // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
       4: aload_1
       5: invokeinterface #124,  2          // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.addFilter:(Lorg/apache/logging/log4j/core/Filter;)V
      10: return

  public void removeFilter(org.apache.logging.log4j.core.Filter);
    Code:
       0: aload_0
       1: getfield      #12                 // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
       4: aload_1
       5: invokeinterface #125,  2          // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.removeFilter:(Lorg/apache/logging/log4j/core/Filter;)V
      10: return

  public org.apache.logging.log4j.core.config.Configuration setConfiguration(org.apache.logging.log4j.core.config.Configuration);
    Code:
       0: aload_1
       1: ifnonnull     23
       4: getstatic     #41                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       7: ldc           #126                // String No configuration found for context \'{}\'.
       9: aload_0
      10: getfield      #19                 // Field contextName:Ljava/lang/String;
      13: invokeinterface #127,  3          // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
      18: aload_0
      19: getfield      #12                 // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
      22: areturn
      23: aload_0
      24: getfield      #18                 // Field configLock:Ljava/util/concurrent/locks/Lock;
      27: invokeinterface #84,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      32: aload_0
      33: getfield      #12                 // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
      36: astore_2
      37: aload_1
      38: aload_0
      39: invokeinterface #128,  2          // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.addListener:(Lorg/apache/logging/log4j/core/config/ConfigurationListener;)V
      44: aload_1
      45: ldc           #130                // String ContextProperties
      47: invokeinterface #131,  2          // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.getComponent:(Ljava/lang/String;)Ljava/lang/Object;
      52: checkcast     #132                // class java/util/concurrent/ConcurrentMap
      55: astore_3
      56: aload_3
      57: ldc           #133                // String hostName
      59: invokedynamic #134,  0            // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      64: invokeinterface #135,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      69: pop
      70: goto          101
      73: astore        4
      75: getstatic     #41                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      78: ldc           #136                // String Ignoring {}, setting hostName to \'unknown\'
      80: aload         4
      82: invokevirtual #137                // Method java/lang/Exception.toString:()Ljava/lang/String;
      85: invokeinterface #138,  3          // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      90: aload_3
      91: ldc           #133                // String hostName
      93: ldc           #139                // String unknown
      95: invokeinterface #112,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     100: pop
     101: aload_3
     102: ldc           #140                // String contextName
     104: aload_0
     105: getfield      #19                 // Field contextName:Ljava/lang/String;
     108: invokeinterface #112,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     113: pop
     114: aload_1
     115: invokeinterface #141,  1          // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.start:()V
     120: aload_0
     121: aload_1
     122: putfield      #12                 // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
     125: aload_0
     126: invokevirtual #93                 // Method updateLoggers:()V
     129: aload_2
     130: ifnull        146
     133: aload_2
     134: aload_0
     135: invokeinterface #142,  2          // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.removeListener:(Lorg/apache/logging/log4j/core/config/ConfigurationListener;)V
     140: aload_2
     141: invokeinterface #96,  1           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.stop:()V
     146: aload_0
     147: new           #143                // class java/beans/PropertyChangeEvent
     150: dup
     151: aload_0
     152: ldc           #144                // String config
     154: aload_2
     155: aload_1
     156: invokespecial #145                // Method java/beans/PropertyChangeEvent."<init>":(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     159: invokespecial #146                // Method firePropertyChangeEvent:(Ljava/beans/PropertyChangeEvent;)V
     162: invokestatic  #147                // Method org/apache/logging/log4j/core/jmx/Server.reregisterMBeansAfterReconfigure:()V
     165: goto          182
     168: astore        4
     170: getstatic     #41                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
     173: ldc           #148                // String Could not reconfigure JMX
     175: aload         4
     177: invokeinterface #90,  3           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     182: aload_0
     183: getfield      #12                 // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
     186: invokeinterface #149,  1          // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.getNanoClock:()Lorg/apache/logging/log4j/core/util/NanoClock;
     191: invokestatic  #150                // Method org/apache/logging/log4j/core/impl/Log4jLogEvent.setNanoClock:(Lorg/apache/logging/log4j/core/util/NanoClock;)V
     194: aload_2
     195: astore        4
     197: aload_0
     198: getfield      #18                 // Field configLock:Ljava/util/concurrent/locks/Lock;
     201: invokeinterface #60,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     206: aload         4
     208: areturn
     209: astore        5
     211: aload_0
     212: getfield      #18                 // Field configLock:Ljava/util/concurrent/locks/Lock;
     215: invokeinterface #60,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     220: aload         5
     222: athrow
    Exception table:
       from    to  target type
          56    70    73   Class java/lang/Exception
         162   165   168   Class java/lang/LinkageError
         162   165   168   Class java/lang/Exception
          32   197   209   any
         209   211   209   any

  private void firePropertyChangeEvent(java.beans.PropertyChangeEvent);
    Code:
       0: aload_0
       1: getfield      #9                  // Field propertyChangeListeners:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: invokevirtual #151                // Method java/util/concurrent/CopyOnWriteArrayList.iterator:()Ljava/util/Iterator;
       7: astore_2
       8: aload_2
       9: invokeinterface #100,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          37
      17: aload_2
      18: invokeinterface #101,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #152                // class java/beans/PropertyChangeListener
      26: astore_3
      27: aload_3
      28: aload_1
      29: invokeinterface #153,  2          // InterfaceMethod java/beans/PropertyChangeListener.propertyChange:(Ljava/beans/PropertyChangeEvent;)V
      34: goto          8
      37: return

  public void addPropertyChangeListener(java.beans.PropertyChangeListener);
    Code:
       0: aload_0
       1: getfield      #9                  // Field propertyChangeListeners:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: aload_1
       5: ldc           #154                // String listener
       7: invokestatic  #155                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      10: invokevirtual #156                // Method java/util/concurrent/CopyOnWriteArrayList.add:(Ljava/lang/Object;)Z
      13: pop
      14: return

  public void removePropertyChangeListener(java.beans.PropertyChangeListener);
    Code:
       0: aload_0
       1: getfield      #9                  // Field propertyChangeListeners:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: aload_1
       5: invokevirtual #157                // Method java/util/concurrent/CopyOnWriteArrayList.remove:(Ljava/lang/Object;)Z
       8: pop
       9: return

  public java.net.URI getConfigLocation();
    Code:
       0: aload_0
       1: getfield      #24                 // Field configLocation:Ljava/net/URI;
       4: areturn

  public void setConfigLocation(java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field configLocation:Ljava/net/URI;
       5: aload_0
       6: aload_1
       7: invokespecial #158                // Method reconfigure:(Ljava/net/URI;)V
      10: return

  private void reconfigure(java.net.URI);
    Code:
       0: aload_0
       1: getfield      #15                 // Field externalMap:Ljava/util/concurrent/ConcurrentMap;
       4: ldc           #21                 // String __EXTERNAL_CONTEXT_KEY__
       6: invokeinterface #111,  2          // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: astore_2
      12: ldc           #159                // class java/lang/ClassLoader
      14: aload_2
      15: invokevirtual #160                // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      18: ifeq          28
      21: aload_2
      22: checkcast     #159                // class java/lang/ClassLoader
      25: goto          29
      28: aconst_null
      29: astore_3
      30: getstatic     #41                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      33: ldc           #161                // String Reconfiguration started for context[name={}] at URI {} ({}) with optional ClassLoader: {}
      35: aload_0
      36: getfield      #19                 // Field contextName:Ljava/lang/String;
      39: aload_1
      40: aload_0
      41: aload_3
      42: invokeinterface #162,  6          // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      47: invokestatic  #163                // Method org/apache/logging/log4j/core/config/ConfigurationFactory.getInstance:()Lorg/apache/logging/log4j/core/config/ConfigurationFactory;
      50: aload_0
      51: aload_0
      52: getfield      #19                 // Field contextName:Ljava/lang/String;
      55: aload_1
      56: aload_3
      57: invokevirtual #164                // Method org/apache/logging/log4j/core/config/ConfigurationFactory.getConfiguration:(Lorg/apache/logging/log4j/core/LoggerContext;Ljava/lang/String;Ljava/net/URI;Ljava/lang/ClassLoader;)Lorg/apache/logging/log4j/core/config/Configuration;
      60: astore        4
      62: aload         4
      64: ifnonnull     86
      67: getstatic     #41                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      70: ldc           #165                // String Reconfiguration failed: No configuration found for \'{}\' at \'{}\' in \'{}\'
      72: aload_0
      73: getfield      #19                 // Field contextName:Ljava/lang/String;
      76: aload_1
      77: aload_3
      78: invokeinterface #166,  5          // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      83: goto          137
      86: aload_0
      87: aload         4
      89: invokevirtual #64                 // Method setConfiguration:(Lorg/apache/logging/log4j/core/config/Configuration;)Lorg/apache/logging/log4j/core/config/Configuration;
      92: pop
      93: aload_0
      94: getfield      #12                 // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
      97: ifnonnull     105
     100: ldc           #167                // String ?
     102: goto          117
     105: aload_0
     106: getfield      #12                 // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
     109: invokeinterface #168,  1          // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.getConfigurationSource:()Lorg/apache/logging/log4j/core/config/ConfigurationSource;
     114: invokestatic  #169                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     117: astore        5
     119: getstatic     #41                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
     122: ldc           #170                // String Reconfiguration complete for context[name={}] at URI {} ({}) with optional ClassLoader: {}
     124: aload_0
     125: getfield      #19                 // Field contextName:Ljava/lang/String;
     128: aload         5
     130: aload_0
     131: aload_3
     132: invokeinterface #162,  6          // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
     137: return

  public void reconfigure();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #24                 // Field configLocation:Ljava/net/URI;
       5: invokespecial #158                // Method reconfigure:(Ljava/net/URI;)V
       8: return

  public void reconfigure(org.apache.logging.log4j.core.config.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #64                 // Method setConfiguration:(Lorg/apache/logging/log4j/core/config/Configuration;)Lorg/apache/logging/log4j/core/config/Configuration;
       5: pop
       6: aload_1
       7: invokeinterface #168,  1          // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.getConfigurationSource:()Lorg/apache/logging/log4j/core/config/ConfigurationSource;
      12: astore_2
      13: aload_2
      14: ifnull        31
      17: aload_2
      18: invokevirtual #171                // Method org/apache/logging/log4j/core/config/ConfigurationSource.getURI:()Ljava/net/URI;
      21: astore_3
      22: aload_3
      23: ifnull        31
      26: aload_0
      27: aload_3
      28: putfield      #24                 // Field configLocation:Ljava/net/URI;
      31: return

  public void updateLoggers();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #12                 // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
       5: invokevirtual #172                // Method updateLoggers:(Lorg/apache/logging/log4j/core/config/Configuration;)V
       8: return

  public void updateLoggers(org.apache.logging.log4j.core.config.Configuration);
    Code:
       0: aload_0
       1: getfield      #12                 // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
       4: astore_2
       5: aload_0
       6: getfield      #6                  // Field loggerRegistry:Lorg/apache/logging/log4j/spi/LoggerRegistry;
       9: invokevirtual #115                // Method org/apache/logging/log4j/spi/LoggerRegistry.getLoggers:()Ljava/util/Collection;
      12: invokeinterface #173,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      17: astore_3
      18: aload_3
      19: invokeinterface #100,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          47
      27: aload_3
      28: invokeinterface #101,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #117                // class org/apache/logging/log4j/core/Logger
      36: astore        4
      38: aload         4
      40: aload_1
      41: invokevirtual #174                // Method org/apache/logging/log4j/core/Logger.updateConfiguration:(Lorg/apache/logging/log4j/core/config/Configuration;)V
      44: goto          18
      47: aload_0
      48: new           #143                // class java/beans/PropertyChangeEvent
      51: dup
      52: aload_0
      53: ldc           #144                // String config
      55: aload_2
      56: aload_1
      57: invokespecial #145                // Method java/beans/PropertyChangeEvent."<init>":(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      60: invokespecial #146                // Method firePropertyChangeEvent:(Ljava/beans/PropertyChangeEvent;)V
      63: return

  public synchronized void onChange(org.apache.logging.log4j.core.config.Reconfigurable);
    Code:
       0: invokestatic  #175                // Method java/lang/System.currentTimeMillis:()J
       3: lstore_2
       4: getstatic     #41                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       7: ldc           #176                // String Reconfiguration started for context {} ({})
       9: aload_0
      10: getfield      #19                 // Field contextName:Ljava/lang/String;
      13: aload_0
      14: invokeinterface #44,  4           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      19: aload_0
      20: invokespecial #177                // Method initApiModule:()V
      23: aload_1
      24: invokeinterface #178,  1          // InterfaceMethod org/apache/logging/log4j/core/config/Reconfigurable.reconfigure:()Lorg/apache/logging/log4j/core/config/Configuration;
      29: astore        4
      31: aload         4
      33: ifnull        69
      36: aload_0
      37: aload         4
      39: invokevirtual #64                 // Method setConfiguration:(Lorg/apache/logging/log4j/core/config/Configuration;)Lorg/apache/logging/log4j/core/config/Configuration;
      42: pop
      43: getstatic     #41                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      46: ldc           #179                // String Reconfiguration completed for {} ({}) in {} milliseconds.
      48: aload_0
      49: getfield      #19                 // Field contextName:Ljava/lang/String;
      52: aload_0
      53: invokestatic  #175                // Method java/lang/System.currentTimeMillis:()J
      56: lload_2
      57: lsub
      58: invokestatic  #180                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      61: invokeinterface #63,  5           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      66: goto          92
      69: getstatic     #41                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      72: ldc           #181                // String Reconfiguration failed for {} ({}) in {} milliseconds.
      74: aload_0
      75: getfield      #19                 // Field contextName:Ljava/lang/String;
      78: aload_0
      79: invokestatic  #175                // Method java/lang/System.currentTimeMillis:()J
      82: lload_2
      83: lsub
      84: invokestatic  #180                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      87: invokeinterface #63,  5           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      92: return

  private void initApiModule();
    Code:
       0: invokestatic  #182                // Method org/apache/logging/log4j/spi/ThreadContextMapFactory.init:()V
       3: return

  protected org.apache.logging.log4j.core.Logger newInstance(org.apache.logging.log4j.core.LoggerContext, java.lang.String, org.apache.logging.log4j.message.MessageFactory);
    Code:
       0: new           #117                // class org/apache/logging/log4j/core/Logger
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokespecial #183                // Method org/apache/logging/log4j/core/Logger."<init>":(Lorg/apache/logging/log4j/core/LoggerContext;Ljava/lang/String;Lorg/apache/logging/log4j/message/MessageFactory;)V
      10: areturn

  public org.apache.logging.log4j.spi.ExtendedLogger getLogger(java.lang.String, org.apache.logging.log4j.message.MessageFactory);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #114                // Method getLogger:(Ljava/lang/String;Lorg/apache/logging/log4j/message/MessageFactory;)Lorg/apache/logging/log4j/core/Logger;
       6: areturn

  public org.apache.logging.log4j.spi.ExtendedLogger getLogger(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #108                // Method getLogger:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/Logger;
       5: areturn

  private static java.lang.String lambda$setConfiguration$0(java.lang.String);
    Code:
       0: invokestatic  #184                // Method org/apache/logging/log4j/core/util/NetUtils.getLocalHostname:()Ljava/lang/String;
       3: areturn

  static {};
    Code:
       0: ldc           #185                // class org/apache/logging/log4j/core/util/ExecutorServices
       2: invokevirtual #186                // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #187                // Method org/apache/logging/log4j/core/util/Loader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
       8: pop
       9: goto          24
      12: astore_0
      13: getstatic     #41                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      16: ldc           #188                // String Failed to preload ExecutorServices class.
      18: aload_0
      19: invokeinterface #90,  3           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      24: new           #189                // class org/apache/logging/log4j/core/config/NullConfiguration
      27: dup
      28: invokespecial #190                // Method org/apache/logging/log4j/core/config/NullConfiguration."<init>":()V
      31: putstatic     #92                 // Field NULL_CONFIGURATION:Lorg/apache/logging/log4j/core/config/Configuration;
      34: return
    Exception table:
       from    to  target type
           0     9    12   Class java/lang/Exception
}
