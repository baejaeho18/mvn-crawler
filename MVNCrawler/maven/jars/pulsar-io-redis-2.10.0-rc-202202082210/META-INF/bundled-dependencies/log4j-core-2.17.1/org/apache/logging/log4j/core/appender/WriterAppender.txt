Compiled from "WriterAppender.java"
public final class org.apache.logging.log4j.core.appender.WriterAppender extends org.apache.logging.log4j.core.appender.AbstractWriterAppender<org.apache.logging.log4j.core.appender.WriterManager> {
  private static org.apache.logging.log4j.core.appender.WriterAppender$WriterManagerFactory factory;

  public static org.apache.logging.log4j.core.appender.WriterAppender createAppender(org.apache.logging.log4j.core.StringLayout, org.apache.logging.log4j.core.Filter, java.io.Writer, java.lang.String, boolean, boolean);
    Code:
       0: aload_3
       1: ifnonnull     16
       4: getstatic     #3                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       7: ldc           #4                  // String No name provided for WriterAppender
       9: invokeinterface #5,  2            // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
      14: aconst_null
      15: areturn
      16: aload_0
      17: ifnonnull     24
      20: invokestatic  #6                  // Method org/apache/logging/log4j/core/layout/PatternLayout.createDefaultLayout:()Lorg/apache/logging/log4j/core/layout/PatternLayout;
      23: astore_0
      24: new           #7                  // class org/apache/logging/log4j/core/appender/WriterAppender
      27: dup
      28: aload_3
      29: aload_0
      30: aload_1
      31: aload_2
      32: iload         4
      34: aload_0
      35: invokestatic  #2                  // Method getManager:(Ljava/io/Writer;ZLorg/apache/logging/log4j/core/StringLayout;)Lorg/apache/logging/log4j/core/appender/WriterManager;
      38: iload         5
      40: aconst_null
      41: invokespecial #1                  // Method "<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/StringLayout;Lorg/apache/logging/log4j/core/Filter;Lorg/apache/logging/log4j/core/appender/WriterManager;Z[Lorg/apache/logging/log4j/core/config/Property;)V
      44: areturn

  private static org.apache.logging.log4j.core.appender.WriterManager getManager(java.io.Writer, boolean, org.apache.logging.log4j.core.StringLayout);
    Code:
       0: new           #8                  // class org/apache/logging/log4j/core/util/CloseShieldWriter
       3: dup
       4: aload_0
       5: invokespecial #9                  // Method org/apache/logging/log4j/core/util/CloseShieldWriter."<init>":(Ljava/io/Writer;)V
       8: astore_3
       9: new           #10                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      16: aload_0
      17: invokevirtual #12                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokevirtual #13                 // Method java/lang/Class.getName:()Ljava/lang/String;
      23: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #15                 // String @
      28: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: invokevirtual #16                 // Method java/lang/Object.hashCode:()I
      35: invokestatic  #17                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      38: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: bipush        46
      43: invokevirtual #18                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      46: iload_1
      47: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      50: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: astore        4
      55: aload         4
      57: new           #21                 // class org/apache/logging/log4j/core/appender/WriterAppender$FactoryData
      60: dup
      61: aload_3
      62: aload         4
      64: aload_2
      65: invokespecial #22                 // Method org/apache/logging/log4j/core/appender/WriterAppender$FactoryData."<init>":(Ljava/io/Writer;Ljava/lang/String;Lorg/apache/logging/log4j/core/StringLayout;)V
      68: getstatic     #23                 // Field factory:Lorg/apache/logging/log4j/core/appender/WriterAppender$WriterManagerFactory;
      71: invokestatic  #24                 // Method org/apache/logging/log4j/core/appender/WriterManager.getManager:(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/logging/log4j/core/appender/ManagerFactory;)Lorg/apache/logging/log4j/core/appender/WriterManager;
      74: areturn

  public static <B extends org.apache.logging.log4j.core.appender.WriterAppender$Builder<B>> B newBuilder();
    Code:
       0: new           #25                 // class org/apache/logging/log4j/core/appender/WriterAppender$Builder
       3: dup
       4: invokespecial #26                 // Method org/apache/logging/log4j/core/appender/WriterAppender$Builder."<init>":()V
       7: invokevirtual #27                 // Method org/apache/logging/log4j/core/appender/WriterAppender$Builder.asBuilder:()Lorg/apache/logging/log4j/core/filter/AbstractFilterable$Builder;
      10: checkcast     #25                 // class org/apache/logging/log4j/core/appender/WriterAppender$Builder
      13: areturn

  private org.apache.logging.log4j.core.appender.WriterAppender(java.lang.String, org.apache.logging.log4j.core.StringLayout, org.apache.logging.log4j.core.Filter, org.apache.logging.log4j.core.appender.WriterManager, boolean, org.apache.logging.log4j.core.config.Property[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         5
       6: iconst_1
       7: aload         6
       9: aload         4
      11: invokespecial #28                 // Method org/apache/logging/log4j/core/appender/AbstractWriterAppender."<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/StringLayout;Lorg/apache/logging/log4j/core/Filter;ZZ[Lorg/apache/logging/log4j/core/config/Property;Lorg/apache/logging/log4j/core/appender/WriterManager;)V
      14: return

  static org.apache.logging.log4j.core.appender.WriterManager access$000(java.io.Writer, boolean, org.apache.logging.log4j.core.StringLayout);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #2                  // Method getManager:(Ljava/io/Writer;ZLorg/apache/logging/log4j/core/StringLayout;)Lorg/apache/logging/log4j/core/appender/WriterManager;
       6: areturn

  org.apache.logging.log4j.core.appender.WriterAppender(java.lang.String, org.apache.logging.log4j.core.StringLayout, org.apache.logging.log4j.core.Filter, org.apache.logging.log4j.core.appender.WriterManager, boolean, org.apache.logging.log4j.core.config.Property[], org.apache.logging.log4j.core.appender.WriterAppender$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: iload         5
       8: aload         6
      10: invokespecial #1                  // Method "<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/StringLayout;Lorg/apache/logging/log4j/core/Filter;Lorg/apache/logging/log4j/core/appender/WriterManager;Z[Lorg/apache/logging/log4j/core/config/Property;)V
      13: return

  static {};
    Code:
       0: new           #29                 // class org/apache/logging/log4j/core/appender/WriterAppender$WriterManagerFactory
       3: dup
       4: aconst_null
       5: invokespecial #30                 // Method org/apache/logging/log4j/core/appender/WriterAppender$WriterManagerFactory."<init>":(Lorg/apache/logging/log4j/core/appender/WriterAppender$1;)V
       8: putstatic     #23                 // Field factory:Lorg/apache/logging/log4j/core/appender/WriterAppender$WriterManagerFactory;
      11: return
}
