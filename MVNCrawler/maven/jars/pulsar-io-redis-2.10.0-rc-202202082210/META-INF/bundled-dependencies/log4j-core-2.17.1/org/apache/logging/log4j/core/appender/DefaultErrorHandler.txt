Compiled from "DefaultErrorHandler.java"
public class org.apache.logging.log4j.core.appender.DefaultErrorHandler implements org.apache.logging.log4j.core.ErrorHandler {
  private static final org.apache.logging.log4j.Logger LOGGER;

  private static final int MAX_EXCEPTION_COUNT;

  private static final long EXCEPTION_INTERVAL_NANOS;

  private int exceptionCount;

  private long lastExceptionInstantNanos;

  private final org.apache.logging.log4j.core.Appender appender;

  public org.apache.logging.log4j.core.appender.DefaultErrorHandler(org.apache.logging.log4j.core.Appender);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field exceptionCount:I
       9: aload_0
      10: invokestatic  #3                  // Method java/lang/System.nanoTime:()J
      13: getstatic     #4                  // Field EXCEPTION_INTERVAL_NANOS:J
      16: lsub
      17: lconst_1
      18: lsub
      19: putfield      #5                  // Field lastExceptionInstantNanos:J
      22: aload_0
      23: aload_1
      24: ldc           #6                  // String appender
      26: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      29: checkcast     #8                  // class org/apache/logging/log4j/core/Appender
      32: putfield      #9                  // Field appender:Lorg/apache/logging/log4j/core/Appender;
      35: return

  public void error(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method acquirePermit:()Z
       4: istore_2
       5: iload_2
       6: ifeq          18
       9: getstatic     #11                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      12: aload_1
      13: invokeinterface #12,  2           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
      18: return

  public void error(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method acquirePermit:()Z
       4: istore_3
       5: iload_3
       6: ifeq          19
       9: getstatic     #11                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      12: aload_1
      13: aload_2
      14: invokeinterface #13,  3           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      19: aload_0
      20: getfield      #9                  // Field appender:Lorg/apache/logging/log4j/core/Appender;
      23: invokeinterface #14,  1           // InterfaceMethod org/apache/logging/log4j/core/Appender.ignoreExceptions:()Z
      28: ifne          52
      31: aload_2
      32: ifnull        52
      35: aload_2
      36: instanceof    #15                 // class org/apache/logging/log4j/core/appender/AppenderLoggingException
      39: ifne          52
      42: new           #15                 // class org/apache/logging/log4j/core/appender/AppenderLoggingException
      45: dup
      46: aload_1
      47: aload_2
      48: invokespecial #16                 // Method org/apache/logging/log4j/core/appender/AppenderLoggingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      51: athrow
      52: return

  public void error(java.lang.String, org.apache.logging.log4j.core.LogEvent, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method acquirePermit:()Z
       4: istore        4
       6: iload         4
       8: ifeq          21
      11: getstatic     #11                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      14: aload_1
      15: aload_3
      16: invokeinterface #13,  3           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      21: aload_0
      22: getfield      #9                  // Field appender:Lorg/apache/logging/log4j/core/Appender;
      25: invokeinterface #14,  1           // InterfaceMethod org/apache/logging/log4j/core/Appender.ignoreExceptions:()Z
      30: ifne          54
      33: aload_3
      34: ifnull        54
      37: aload_3
      38: instanceof    #15                 // class org/apache/logging/log4j/core/appender/AppenderLoggingException
      41: ifne          54
      44: new           #15                 // class org/apache/logging/log4j/core/appender/AppenderLoggingException
      47: dup
      48: aload_1
      49: aload_3
      50: invokespecial #16                 // Method org/apache/logging/log4j/core/appender/AppenderLoggingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      53: athrow
      54: return

  private boolean acquirePermit();
    Code:
       0: invokestatic  #3                  // Method java/lang/System.nanoTime:()J
       3: lstore_1
       4: aload_0
       5: dup
       6: astore_3
       7: monitorenter
       8: lload_1
       9: aload_0
      10: getfield      #5                  // Field lastExceptionInstantNanos:J
      13: lsub
      14: getstatic     #4                  // Field EXCEPTION_INTERVAL_NANOS:J
      17: lcmp
      18: ifle          30
      21: aload_0
      22: lload_1
      23: putfield      #5                  // Field lastExceptionInstantNanos:J
      26: iconst_1
      27: aload_3
      28: monitorexit
      29: ireturn
      30: aload_0
      31: getfield      #2                  // Field exceptionCount:I
      34: iconst_3
      35: if_icmpge     57
      38: aload_0
      39: dup
      40: getfield      #2                  // Field exceptionCount:I
      43: iconst_1
      44: iadd
      45: putfield      #2                  // Field exceptionCount:I
      48: aload_0
      49: lload_1
      50: putfield      #5                  // Field lastExceptionInstantNanos:J
      53: iconst_1
      54: aload_3
      55: monitorexit
      56: ireturn
      57: iconst_0
      58: aload_3
      59: monitorexit
      60: ireturn
      61: astore        4
      63: aload_3
      64: monitorexit
      65: aload         4
      67: athrow
    Exception table:
       from    to  target type
           8    29    61   any
          30    56    61   any
          57    60    61   any
          61    65    61   any

  public org.apache.logging.log4j.core.Appender getAppender();
    Code:
       0: aload_0
       1: getfield      #9                  // Field appender:Lorg/apache/logging/log4j/core/Appender;
       4: areturn

  static {};
    Code:
       0: invokestatic  #18                 // Method org/apache/logging/log4j/status/StatusLogger.getLogger:()Lorg/apache/logging/log4j/status/StatusLogger;
       3: putstatic     #11                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       6: getstatic     #19                 // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
       9: ldc2_w        #20                 // long 5l
      12: invokevirtual #22                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      15: putstatic     #4                  // Field EXCEPTION_INTERVAL_NANOS:J
      18: return
}
