Compiled from "RequiredValidator.java"
public class org.apache.logging.log4j.core.config.plugins.validation.validators.RequiredValidator implements org.apache.logging.log4j.core.config.plugins.validation.ConstraintValidator<org.apache.logging.log4j.core.config.plugins.validation.constraints.Required> {
  private static final org.apache.logging.log4j.Logger LOGGER;

  private org.apache.logging.log4j.core.config.plugins.validation.constraints.Required annotation;

  public org.apache.logging.log4j.core.config.plugins.validation.validators.RequiredValidator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void initialize(org.apache.logging.log4j.core.config.plugins.validation.constraints.Required);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field annotation:Lorg/apache/logging/log4j/core/config/plugins/validation/constraints/Required;
       5: return

  public boolean isValid(java.lang.String, java.lang.Object);
    Code:
       0: aload_2
       1: invokestatic  #3                  // Method org/apache/logging/log4j/core/util/Assert.isNonEmpty:(Ljava/lang/Object;)Z
       4: ifne          15
       7: aload_0
       8: aload_1
       9: invokespecial #4                  // Method err:(Ljava/lang/String;)Z
      12: ifeq          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  private boolean err(java.lang.String);
    Code:
       0: getstatic     #5                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       3: new           #6                  // class java/lang/StringBuilder
       6: dup
       7: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      10: aload_0
      11: getfield      #2                  // Field annotation:Lorg/apache/logging/log4j/core/config/plugins/validation/constraints/Required;
      14: invokeinterface #8,  1            // InterfaceMethod org/apache/logging/log4j/core/config/plugins/validation/constraints/Required.message:()Ljava/lang/String;
      19: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #10                 // String :
      24: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_1
      28: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokeinterface #12,  2           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
      39: iconst_0
      40: ireturn

  public void initialize(java.lang.annotation.Annotation);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #13                 // class org/apache/logging/log4j/core/config/plugins/validation/constraints/Required
       5: invokevirtual #14                 // Method initialize:(Lorg/apache/logging/log4j/core/config/plugins/validation/constraints/Required;)V
       8: return

  static {};
    Code:
       0: invokestatic  #15                 // Method org/apache/logging/log4j/status/StatusLogger.getLogger:()Lorg/apache/logging/log4j/status/StatusLogger;
       3: putstatic     #5                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       6: return
}
