Compiled from "AsyncLoggerConfigDisruptor.java"
public class org.apache.logging.log4j.core.async.AsyncLoggerConfigDisruptor$Log4jEventWrapper {
  private org.apache.logging.log4j.core.async.AsyncLoggerConfig loggerConfig;

  private org.apache.logging.log4j.core.LogEvent event;

  public org.apache.logging.log4j.core.async.AsyncLoggerConfigDisruptor$Log4jEventWrapper();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: return

  public org.apache.logging.log4j.core.async.AsyncLoggerConfigDisruptor$Log4jEventWrapper(org.apache.logging.log4j.core.impl.MutableLogEvent);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field event:Lorg/apache/logging/log4j/core/LogEvent;
       9: return

  public void clear();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #1                  // Field loggerConfig:Lorg/apache/logging/log4j/core/async/AsyncLoggerConfig;
       5: aload_0
       6: getfield      #2                  // Field event:Lorg/apache/logging/log4j/core/LogEvent;
       9: instanceof    #4                  // class org/apache/logging/log4j/core/impl/MutableLogEvent
      12: ifeq          28
      15: aload_0
      16: getfield      #2                  // Field event:Lorg/apache/logging/log4j/core/LogEvent;
      19: checkcast     #4                  // class org/apache/logging/log4j/core/impl/MutableLogEvent
      22: invokevirtual #5                  // Method org/apache/logging/log4j/core/impl/MutableLogEvent.clear:()V
      25: goto          33
      28: aload_0
      29: aconst_null
      30: putfield      #2                  // Field event:Lorg/apache/logging/log4j/core/LogEvent;
      33: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field event:Lorg/apache/logging/log4j/core/LogEvent;
       4: invokestatic  #6                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
       7: areturn

  static org.apache.logging.log4j.core.LogEvent access$000(org.apache.logging.log4j.core.async.AsyncLoggerConfigDisruptor$Log4jEventWrapper);
    Code:
       0: aload_0
       1: getfield      #2                  // Field event:Lorg/apache/logging/log4j/core/LogEvent;
       4: areturn

  static org.apache.logging.log4j.core.async.AsyncLoggerConfig access$100(org.apache.logging.log4j.core.async.AsyncLoggerConfigDisruptor$Log4jEventWrapper);
    Code:
       0: aload_0
       1: getfield      #1                  // Field loggerConfig:Lorg/apache/logging/log4j/core/async/AsyncLoggerConfig;
       4: areturn

  static org.apache.logging.log4j.core.async.AsyncLoggerConfig access$102(org.apache.logging.log4j.core.async.AsyncLoggerConfigDisruptor$Log4jEventWrapper, org.apache.logging.log4j.core.async.AsyncLoggerConfig);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #1                  // Field loggerConfig:Lorg/apache/logging/log4j/core/async/AsyncLoggerConfig;
       6: areturn

  static org.apache.logging.log4j.core.LogEvent access$002(org.apache.logging.log4j.core.async.AsyncLoggerConfigDisruptor$Log4jEventWrapper, org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field event:Lorg/apache/logging/log4j/core/LogEvent;
       6: areturn
}
