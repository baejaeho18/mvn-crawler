Compiled from "AbstractLayout.java"
public abstract class org.apache.logging.log4j.core.layout.AbstractLayout<T extends java.io.Serializable> implements org.apache.logging.log4j.core.Layout<T> {
  protected static final org.apache.logging.log4j.Logger LOGGER;

  protected final org.apache.logging.log4j.core.config.Configuration configuration;

  protected long eventCount;

  protected final byte[] footer;

  protected final byte[] header;

  public org.apache.logging.log4j.core.layout.AbstractLayout(byte[], byte[]);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: aload_2
       4: invokespecial #1                  // Method "<init>":(Lorg/apache/logging/log4j/core/config/Configuration;[B[B)V
       7: return

  public org.apache.logging.log4j.core.layout.AbstractLayout(org.apache.logging.log4j.core.config.Configuration, byte[], byte[]);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field header:[B
      14: aload_0
      15: aload_3
      16: putfield      #5                  // Field footer:[B
      19: return

  public org.apache.logging.log4j.core.config.Configuration getConfiguration();
    Code:
       0: aload_0
       1: getfield      #3                  // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
       4: areturn

  public java.util.Map<java.lang.String, java.lang.String> getContentFormat();
    Code:
       0: new           #6                  // class java/util/HashMap
       3: dup
       4: invokespecial #7                  // Method java/util/HashMap."<init>":()V
       7: areturn

  public byte[] getFooter();
    Code:
       0: aload_0
       1: getfield      #5                  // Field footer:[B
       4: areturn

  public byte[] getHeader();
    Code:
       0: aload_0
       1: getfield      #4                  // Field header:[B
       4: areturn

  protected void markEvent();
    Code:
       0: aload_0
       1: dup
       2: getfield      #8                  // Field eventCount:J
       5: lconst_1
       6: ladd
       7: putfield      #8                  // Field eventCount:J
      10: return

  public void encode(org.apache.logging.log4j.core.LogEvent, org.apache.logging.log4j.core.layout.ByteBufferDestination);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method toByteArray:(Lorg/apache/logging/log4j/core/LogEvent;)[B
       5: astore_3
       6: aload_2
       7: aload_3
       8: iconst_0
       9: aload_3
      10: arraylength
      11: invokeinterface #10,  4           // InterfaceMethod org/apache/logging/log4j/core/layout/ByteBufferDestination.writeBytes:([BII)V
      16: return

  public void encode(java.lang.Object, org.apache.logging.log4j.core.layout.ByteBufferDestination);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #11                 // class org/apache/logging/log4j/core/LogEvent
       5: aload_2
       6: invokevirtual #12                 // Method encode:(Lorg/apache/logging/log4j/core/LogEvent;Lorg/apache/logging/log4j/core/layout/ByteBufferDestination;)V
       9: return

  static {};
    Code:
       0: invokestatic  #13                 // Method org/apache/logging/log4j/status/StatusLogger.getLogger:()Lorg/apache/logging/log4j/status/StatusLogger;
       3: putstatic     #14                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       6: return
}
