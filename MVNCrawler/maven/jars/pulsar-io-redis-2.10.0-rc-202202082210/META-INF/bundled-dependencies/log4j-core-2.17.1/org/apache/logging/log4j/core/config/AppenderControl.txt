Compiled from "AppenderControl.java"
public class org.apache.logging.log4j.core.config.AppenderControl extends org.apache.logging.log4j.core.filter.AbstractFilterable {
  static final org.apache.logging.log4j.core.config.AppenderControl[] EMPTY_ARRAY;

  private final java.lang.ThreadLocal<org.apache.logging.log4j.core.config.AppenderControl> recursive;

  private final org.apache.logging.log4j.core.Appender appender;

  private final org.apache.logging.log4j.Level level;

  private final int intLevel;

  private final java.lang.String appenderName;

  public org.apache.logging.log4j.core.config.AppenderControl(org.apache.logging.log4j.core.Appender, org.apache.logging.log4j.Level, org.apache.logging.log4j.core.Filter);
    Code:
       0: aload_0
       1: aload_3
       2: invokespecial #1                  // Method org/apache/logging/log4j/core/filter/AbstractFilterable."<init>":(Lorg/apache/logging/log4j/core/Filter;)V
       5: aload_0
       6: new           #2                  // class java/lang/ThreadLocal
       9: dup
      10: invokespecial #3                  // Method java/lang/ThreadLocal."<init>":()V
      13: putfield      #4                  // Field recursive:Ljava/lang/ThreadLocal;
      16: aload_0
      17: aload_1
      18: putfield      #5                  // Field appender:Lorg/apache/logging/log4j/core/Appender;
      21: aload_0
      22: aload_1
      23: invokeinterface #6,  1            // InterfaceMethod org/apache/logging/log4j/core/Appender.getName:()Ljava/lang/String;
      28: putfield      #7                  // Field appenderName:Ljava/lang/String;
      31: aload_0
      32: aload_2
      33: putfield      #8                  // Field level:Lorg/apache/logging/log4j/Level;
      36: aload_0
      37: aload_2
      38: ifnonnull     50
      41: getstatic     #9                  // Field org/apache/logging/log4j/Level.ALL:Lorg/apache/logging/log4j/Level;
      44: invokevirtual #10                 // Method org/apache/logging/log4j/Level.intLevel:()I
      47: goto          54
      50: aload_2
      51: invokevirtual #10                 // Method org/apache/logging/log4j/Level.intLevel:()I
      54: putfield      #11                 // Field intLevel:I
      57: aload_0
      58: invokevirtual #12                 // Method start:()V
      61: return

  public java.lang.String getAppenderName();
    Code:
       0: aload_0
       1: getfield      #7                  // Field appenderName:Ljava/lang/String;
       4: areturn

  public org.apache.logging.log4j.core.Appender getAppender();
    Code:
       0: aload_0
       1: getfield      #5                  // Field appender:Lorg/apache/logging/log4j/core/Appender;
       4: areturn

  public void callAppender(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #13                 // Method shouldSkip:(Lorg/apache/logging/log4j/core/LogEvent;)Z
       5: ifeq          9
       8: return
       9: aload_0
      10: aload_1
      11: invokespecial #14                 // Method callAppenderPreventRecursion:(Lorg/apache/logging/log4j/core/LogEvent;)V
      14: return

  private boolean shouldSkip(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method isFilteredByAppenderControl:(Lorg/apache/logging/log4j/core/LogEvent;)Z
       5: ifne          23
       8: aload_0
       9: aload_1
      10: invokespecial #16                 // Method isFilteredByLevel:(Lorg/apache/logging/log4j/core/LogEvent;)Z
      13: ifne          23
      16: aload_0
      17: invokespecial #17                 // Method isRecursiveCall:()Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  private boolean isFilteredByAppenderControl(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getFilter:()Lorg/apache/logging/log4j/core/Filter;
       4: astore_2
       5: aload_2
       6: ifnull        26
       9: getstatic     #19                 // Field org/apache/logging/log4j/core/Filter$Result.DENY:Lorg/apache/logging/log4j/core/Filter$Result;
      12: aload_2
      13: aload_1
      14: invokeinterface #20,  2           // InterfaceMethod org/apache/logging/log4j/core/Filter.filter:(Lorg/apache/logging/log4j/core/LogEvent;)Lorg/apache/logging/log4j/core/Filter$Result;
      19: if_acmpne     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  private boolean isFilteredByLevel(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: getfield      #8                  // Field level:Lorg/apache/logging/log4j/Level;
       4: ifnull        27
       7: aload_0
       8: getfield      #11                 // Field intLevel:I
      11: aload_1
      12: invokeinterface #21,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getLevel:()Lorg/apache/logging/log4j/Level;
      17: invokevirtual #10                 // Method org/apache/logging/log4j/Level.intLevel:()I
      20: if_icmpge     27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  private boolean isRecursiveCall();
    Code:
       0: aload_0
       1: getfield      #4                  // Field recursive:Ljava/lang/ThreadLocal;
       4: invokevirtual #22                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: ifnull        19
      10: aload_0
      11: ldc           #23                 // String Recursive call to appender
      13: invokespecial #24                 // Method appenderErrorHandlerMessage:(Ljava/lang/String;)Ljava/lang/String;
      16: pop
      17: iconst_1
      18: ireturn
      19: iconst_0
      20: ireturn

  private java.lang.String appenderErrorHandlerMessage(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #25                 // Method createErrorMsg:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_2
       6: aload_0
       7: getfield      #5                  // Field appender:Lorg/apache/logging/log4j/core/Appender;
      10: invokeinterface #26,  1           // InterfaceMethod org/apache/logging/log4j/core/Appender.getHandler:()Lorg/apache/logging/log4j/core/ErrorHandler;
      15: aload_2
      16: invokeinterface #27,  2           // InterfaceMethod org/apache/logging/log4j/core/ErrorHandler.error:(Ljava/lang/String;)V
      21: aload_2
      22: areturn

  private void callAppenderPreventRecursion(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: getfield      #4                  // Field recursive:Ljava/lang/ThreadLocal;
       4: aload_0
       5: invokevirtual #28                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
       8: aload_0
       9: aload_1
      10: invokespecial #29                 // Method callAppender0:(Lorg/apache/logging/log4j/core/LogEvent;)V
      13: aload_0
      14: getfield      #4                  // Field recursive:Ljava/lang/ThreadLocal;
      17: aconst_null
      18: invokevirtual #28                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      21: goto          35
      24: astore_2
      25: aload_0
      26: getfield      #4                  // Field recursive:Ljava/lang/ThreadLocal;
      29: aconst_null
      30: invokevirtual #28                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      33: aload_2
      34: athrow
      35: return
    Exception table:
       from    to  target type
           0    13    24   any

  private void callAppender0(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: invokespecial #30                 // Method ensureAppenderStarted:()V
       4: aload_0
       5: aload_1
       6: invokespecial #31                 // Method isFilteredByAppender:(Lorg/apache/logging/log4j/core/LogEvent;)Z
       9: ifne          17
      12: aload_0
      13: aload_1
      14: invokespecial #32                 // Method tryCallAppender:(Lorg/apache/logging/log4j/core/LogEvent;)V
      17: return

  private void ensureAppenderStarted();
    Code:
       0: aload_0
       1: getfield      #5                  // Field appender:Lorg/apache/logging/log4j/core/Appender;
       4: invokeinterface #33,  1           // InterfaceMethod org/apache/logging/log4j/core/Appender.isStarted:()Z
       9: ifne          18
      12: aload_0
      13: ldc           #34                 // String Attempted to append to non-started appender
      15: invokespecial #35                 // Method handleError:(Ljava/lang/String;)V
      18: return

  private void handleError(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #24                 // Method appenderErrorHandlerMessage:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_2
       6: aload_0
       7: getfield      #5                  // Field appender:Lorg/apache/logging/log4j/core/Appender;
      10: invokeinterface #36,  1           // InterfaceMethod org/apache/logging/log4j/core/Appender.ignoreExceptions:()Z
      15: ifne          27
      18: new           #37                 // class org/apache/logging/log4j/core/appender/AppenderLoggingException
      21: dup
      22: aload_2
      23: invokespecial #38                 // Method org/apache/logging/log4j/core/appender/AppenderLoggingException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: return

  private java.lang.String createErrorMsg(java.lang.String);
    Code:
       0: new           #39                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_1
       8: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: aload_0
      12: getfield      #5                  // Field appender:Lorg/apache/logging/log4j/core/Appender;
      15: invokeinterface #6,  1            // InterfaceMethod org/apache/logging/log4j/core/Appender.getName:()Ljava/lang/String;
      20: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: areturn

  private boolean isFilteredByAppender(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: getfield      #5                  // Field appender:Lorg/apache/logging/log4j/core/Appender;
       4: instanceof    #43                 // class org/apache/logging/log4j/core/filter/Filterable
       7: ifeq          30
      10: aload_0
      11: getfield      #5                  // Field appender:Lorg/apache/logging/log4j/core/Appender;
      14: checkcast     #43                 // class org/apache/logging/log4j/core/filter/Filterable
      17: aload_1
      18: invokeinterface #44,  2           // InterfaceMethod org/apache/logging/log4j/core/filter/Filterable.isFiltered:(Lorg/apache/logging/log4j/core/LogEvent;)Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  private void tryCallAppender(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: getfield      #5                  // Field appender:Lorg/apache/logging/log4j/core/Appender;
       4: aload_1
       5: invokeinterface #45,  2           // InterfaceMethod org/apache/logging/log4j/core/Appender.append:(Lorg/apache/logging/log4j/core/LogEvent;)V
      10: goto          37
      13: astore_2
      14: aload_0
      15: aload_1
      16: aload_2
      17: invokespecial #47                 // Method handleAppenderError:(Lorg/apache/logging/log4j/core/LogEvent;Ljava/lang/RuntimeException;)V
      20: goto          37
      23: astore_2
      24: aload_0
      25: aload_1
      26: new           #37                 // class org/apache/logging/log4j/core/appender/AppenderLoggingException
      29: dup
      30: aload_2
      31: invokespecial #49                 // Method org/apache/logging/log4j/core/appender/AppenderLoggingException."<init>":(Ljava/lang/Throwable;)V
      34: invokespecial #47                 // Method handleAppenderError:(Lorg/apache/logging/log4j/core/LogEvent;Ljava/lang/RuntimeException;)V
      37: return
    Exception table:
       from    to  target type
           0    10    13   Class java/lang/RuntimeException
           0    10    23   Class java/lang/Throwable

  private void handleAppenderError(org.apache.logging.log4j.core.LogEvent, java.lang.RuntimeException);
    Code:
       0: aload_0
       1: getfield      #5                  // Field appender:Lorg/apache/logging/log4j/core/Appender;
       4: invokeinterface #26,  1           // InterfaceMethod org/apache/logging/log4j/core/Appender.getHandler:()Lorg/apache/logging/log4j/core/ErrorHandler;
       9: aload_0
      10: ldc           #50                 // String An exception occurred processing Appender
      12: invokespecial #25                 // Method createErrorMsg:(Ljava/lang/String;)Ljava/lang/String;
      15: aload_1
      16: aload_2
      17: invokeinterface #51,  4           // InterfaceMethod org/apache/logging/log4j/core/ErrorHandler.error:(Ljava/lang/String;Lorg/apache/logging/log4j/core/LogEvent;Ljava/lang/Throwable;)V
      22: aload_0
      23: getfield      #5                  // Field appender:Lorg/apache/logging/log4j/core/Appender;
      26: invokeinterface #36,  1           // InterfaceMethod org/apache/logging/log4j/core/Appender.ignoreExceptions:()Z
      31: ifne          36
      34: aload_2
      35: athrow
      36: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #52                 // class org/apache/logging/log4j/core/config/AppenderControl
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #52                 // class org/apache/logging/log4j/core/config/AppenderControl
      20: astore_2
      21: aload_0
      22: getfield      #7                  // Field appenderName:Ljava/lang/String;
      25: aload_2
      26: getfield      #7                  // Field appenderName:Ljava/lang/String;
      29: invokestatic  #53                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      32: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #7                  // Field appenderName:Ljava/lang/String;
       4: invokevirtual #54                 // Method java/lang/String.hashCode:()I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: new           #39                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokespecial #55                 // Method java/lang/Object.toString:()Ljava/lang/String;
      11: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #56                 // String [appender=
      16: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #5                  // Field appender:Lorg/apache/logging/log4j/core/Appender;
      23: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      26: ldc           #58                 // String , appenderName=
      28: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: getfield      #7                  // Field appenderName:Ljava/lang/String;
      35: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #59                 // String , level=
      40: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_0
      44: getfield      #8                  // Field level:Lorg/apache/logging/log4j/Level;
      47: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      50: ldc           #60                 // String , intLevel=
      52: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_0
      56: getfield      #11                 // Field intLevel:I
      59: invokevirtual #61                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      62: ldc           #62                 // String , recursive=
      64: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: aload_0
      68: getfield      #4                  // Field recursive:Ljava/lang/ThreadLocal;
      71: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      74: ldc           #63                 // String , filter=
      76: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_0
      80: invokevirtual #18                 // Method getFilter:()Lorg/apache/logging/log4j/core/Filter;
      83: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      86: ldc           #64                 // String ]
      88: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: areturn

  static {};
    Code:
       0: iconst_0
       1: anewarray     #52                 // class org/apache/logging/log4j/core/config/AppenderControl
       4: putstatic     #65                 // Field EMPTY_ARRAY:[Lorg/apache/logging/log4j/core/config/AppenderControl;
       7: return
}
