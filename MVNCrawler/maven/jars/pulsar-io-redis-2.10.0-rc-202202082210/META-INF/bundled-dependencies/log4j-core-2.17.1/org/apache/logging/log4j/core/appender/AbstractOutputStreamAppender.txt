Compiled from "AbstractOutputStreamAppender.java"
public abstract class org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender<M extends org.apache.logging.log4j.core.appender.OutputStreamManager> extends org.apache.logging.log4j.core.appender.AbstractAppender {
  private final boolean immediateFlush;

  private final M manager;

  protected org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender(java.lang.String, org.apache.logging.log4j.core.Layout<? extends java.io.Serializable>, org.apache.logging.log4j.core.Filter, boolean, boolean, M);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: aload_2
       4: iload         4
       6: getstatic     #1                  // Field org/apache/logging/log4j/core/config/Property.EMPTY_ARRAY:[Lorg/apache/logging/log4j/core/config/Property;
       9: invokespecial #2                  // Method org/apache/logging/log4j/core/appender/AbstractAppender."<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/Filter;Lorg/apache/logging/log4j/core/Layout;Z[Lorg/apache/logging/log4j/core/config/Property;)V
      12: aload_0
      13: aload         6
      15: putfield      #3                  // Field manager:Lorg/apache/logging/log4j/core/appender/OutputStreamManager;
      18: aload_0
      19: iload         5
      21: putfield      #4                  // Field immediateFlush:Z
      24: return

  protected org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender(java.lang.String, org.apache.logging.log4j.core.Layout<? extends java.io.Serializable>, org.apache.logging.log4j.core.Filter, boolean, boolean, org.apache.logging.log4j.core.config.Property[], M);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: aload_2
       4: iload         4
       6: aload         6
       8: invokespecial #2                  // Method org/apache/logging/log4j/core/appender/AbstractAppender."<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/Filter;Lorg/apache/logging/log4j/core/Layout;Z[Lorg/apache/logging/log4j/core/config/Property;)V
      11: aload_0
      12: aload         7
      14: putfield      #3                  // Field manager:Lorg/apache/logging/log4j/core/appender/OutputStreamManager;
      17: aload_0
      18: iload         5
      20: putfield      #4                  // Field immediateFlush:Z
      23: return

  public boolean getImmediateFlush();
    Code:
       0: aload_0
       1: getfield      #4                  // Field immediateFlush:Z
       4: ireturn

  public M getManager();
    Code:
       0: aload_0
       1: getfield      #3                  // Field manager:Lorg/apache/logging/log4j/core/appender/OutputStreamManager;
       4: areturn

  public void start();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getLayout:()Lorg/apache/logging/log4j/core/Layout;
       4: ifnonnull     42
       7: getstatic     #6                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      10: new           #7                  // class java/lang/StringBuilder
      13: dup
      14: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #9                  // String No layout set for the appender named [
      19: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: invokevirtual #11                 // Method getName:()Ljava/lang/String;
      26: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #12                 // String ].
      31: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokeinterface #14,  2           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
      42: aload_0
      43: getfield      #3                  // Field manager:Lorg/apache/logging/log4j/core/appender/OutputStreamManager;
      46: ifnonnull     84
      49: getstatic     #6                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      52: new           #7                  // class java/lang/StringBuilder
      55: dup
      56: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      59: ldc           #15                 // String No OutputStreamManager set for the appender named [
      61: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload_0
      65: invokevirtual #11                 // Method getName:()Ljava/lang/String;
      68: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: ldc           #12                 // String ].
      73: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: invokeinterface #14,  2           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
      84: aload_0
      85: invokespecial #16                 // Method org/apache/logging/log4j/core/appender/AbstractAppender.start:()V
      88: return

  public boolean stop(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: iconst_1
       4: invokevirtual #17                 // Method stop:(JLjava/util/concurrent/TimeUnit;Z)Z
       7: ireturn

  protected boolean stop(long, java.util.concurrent.TimeUnit, boolean);
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: iload         4
       5: invokespecial #18                 // Method org/apache/logging/log4j/core/appender/AbstractAppender.stop:(JLjava/util/concurrent/TimeUnit;Z)Z
       8: istore        5
      10: iload         5
      12: aload_0
      13: getfield      #3                  // Field manager:Lorg/apache/logging/log4j/core/appender/OutputStreamManager;
      16: lload_1
      17: aload_3
      18: invokevirtual #19                 // Method org/apache/logging/log4j/core/appender/OutputStreamManager.stop:(JLjava/util/concurrent/TimeUnit;)Z
      21: iand
      22: istore        5
      24: iload         4
      26: ifeq          33
      29: aload_0
      30: invokevirtual #20                 // Method setStopped:()V
      33: getstatic     #6                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      36: ldc           #21                 // String Appender {} stopped with status {}
      38: aload_0
      39: invokevirtual #11                 // Method getName:()Ljava/lang/String;
      42: iload         5
      44: invokestatic  #22                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      47: invokeinterface #23,  4           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      52: iload         5
      54: ireturn

  public void append(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #24                 // Method tryAppend:(Lorg/apache/logging/log4j/core/LogEvent;)V
       5: goto          54
       8: astore_2
       9: aload_0
      10: new           #7                  // class java/lang/StringBuilder
      13: dup
      14: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #26                 // String Unable to write to stream
      19: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #3                  // Field manager:Lorg/apache/logging/log4j/core/appender/OutputStreamManager;
      26: invokevirtual #27                 // Method org/apache/logging/log4j/core/appender/OutputStreamManager.getName:()Ljava/lang/String;
      29: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #28                 // String  for appender
      34: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_0
      38: invokevirtual #11                 // Method getName:()Ljava/lang/String;
      41: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: aload_1
      48: aload_2
      49: invokevirtual #29                 // Method error:(Ljava/lang/String;Lorg/apache/logging/log4j/core/LogEvent;Ljava/lang/Throwable;)V
      52: aload_2
      53: athrow
      54: return
    Exception table:
       from    to  target type
           0     5     8   Class org/apache/logging/log4j/core/appender/AppenderLoggingException

  private void tryAppend(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: getstatic     #30                 // Field org/apache/logging/log4j/core/util/Constants.ENABLE_DIRECT_ENCODERS:Z
       3: ifeq          14
       6: aload_0
       7: aload_1
       8: invokevirtual #31                 // Method directEncodeEvent:(Lorg/apache/logging/log4j/core/LogEvent;)V
      11: goto          19
      14: aload_0
      15: aload_1
      16: invokevirtual #32                 // Method writeByteArrayToManager:(Lorg/apache/logging/log4j/core/LogEvent;)V
      19: return

  protected void directEncodeEvent(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getLayout:()Lorg/apache/logging/log4j/core/Layout;
       4: aload_1
       5: aload_0
       6: getfield      #3                  // Field manager:Lorg/apache/logging/log4j/core/appender/OutputStreamManager;
       9: invokeinterface #33,  3           // InterfaceMethod org/apache/logging/log4j/core/Layout.encode:(Ljava/lang/Object;Lorg/apache/logging/log4j/core/layout/ByteBufferDestination;)V
      14: aload_0
      15: getfield      #4                  // Field immediateFlush:Z
      18: ifne          30
      21: aload_1
      22: invokeinterface #34,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.isEndOfBatch:()Z
      27: ifeq          37
      30: aload_0
      31: getfield      #3                  // Field manager:Lorg/apache/logging/log4j/core/appender/OutputStreamManager;
      34: invokevirtual #35                 // Method org/apache/logging/log4j/core/appender/OutputStreamManager.flush:()V
      37: return

  protected void writeByteArrayToManager(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getLayout:()Lorg/apache/logging/log4j/core/Layout;
       4: aload_1
       5: invokeinterface #36,  2           // InterfaceMethod org/apache/logging/log4j/core/Layout.toByteArray:(Lorg/apache/logging/log4j/core/LogEvent;)[B
      10: astore_2
      11: aload_2
      12: ifnull        49
      15: aload_2
      16: arraylength
      17: ifle          49
      20: aload_0
      21: getfield      #3                  // Field manager:Lorg/apache/logging/log4j/core/appender/OutputStreamManager;
      24: aload_2
      25: aload_0
      26: getfield      #4                  // Field immediateFlush:Z
      29: ifne          41
      32: aload_1
      33: invokeinterface #34,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.isEndOfBatch:()Z
      38: ifeq          45
      41: iconst_1
      42: goto          46
      45: iconst_0
      46: invokevirtual #37                 // Method org/apache/logging/log4j/core/appender/OutputStreamManager.write:([BZ)V
      49: return
}
