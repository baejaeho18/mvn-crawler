Compiled from "ScriptPatternSelector.java"
public class org.apache.logging.log4j.core.layout.ScriptPatternSelector$Builder implements org.apache.logging.log4j.core.util.Builder<org.apache.logging.log4j.core.layout.ScriptPatternSelector> {
  private org.apache.logging.log4j.core.script.AbstractScript script;

  private org.apache.logging.log4j.core.layout.PatternMatch[] properties;

  private java.lang.String defaultPattern;

  private boolean alwaysWriteExceptions;

  private boolean disableAnsi;

  private boolean noConsoleNoAnsi;

  private org.apache.logging.log4j.core.config.Configuration configuration;

  private org.apache.logging.log4j.core.layout.ScriptPatternSelector$Builder();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #3                  // Field alwaysWriteExceptions:Z
       9: return

  public org.apache.logging.log4j.core.layout.ScriptPatternSelector build();
    Code:
       0: aload_0
       1: getfield      #4                  // Field script:Lorg/apache/logging/log4j/core/script/AbstractScript;
       4: ifnonnull     19
       7: invokestatic  #5                  // Method org/apache/logging/log4j/core/layout/ScriptPatternSelector.access$000:()Lorg/apache/logging/log4j/Logger;
      10: ldc           #6                  // String A Script, ScriptFile or ScriptRef element must be provided for this ScriptFilter
      12: invokeinterface #7,  2            // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
      17: aconst_null
      18: areturn
      19: aload_0
      20: getfield      #4                  // Field script:Lorg/apache/logging/log4j/core/script/AbstractScript;
      23: instanceof    #8                  // class org/apache/logging/log4j/core/script/ScriptRef
      26: ifeq          70
      29: aload_0
      30: getfield      #9                  // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
      33: invokeinterface #10,  1           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.getScriptManager:()Lorg/apache/logging/log4j/core/script/ScriptManager;
      38: aload_0
      39: getfield      #4                  // Field script:Lorg/apache/logging/log4j/core/script/AbstractScript;
      42: invokevirtual #11                 // Method org/apache/logging/log4j/core/script/AbstractScript.getName:()Ljava/lang/String;
      45: invokevirtual #12                 // Method org/apache/logging/log4j/core/script/ScriptManager.getScript:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/script/AbstractScript;
      48: ifnonnull     70
      51: invokestatic  #5                  // Method org/apache/logging/log4j/core/layout/ScriptPatternSelector.access$000:()Lorg/apache/logging/log4j/Logger;
      54: ldc           #13                 // String No script with name {} has been declared.
      56: aload_0
      57: getfield      #4                  // Field script:Lorg/apache/logging/log4j/core/script/AbstractScript;
      60: invokevirtual #11                 // Method org/apache/logging/log4j/core/script/AbstractScript.getName:()Ljava/lang/String;
      63: invokeinterface #14,  3           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
      68: aconst_null
      69: areturn
      70: aload_0
      71: getfield      #15                 // Field defaultPattern:Ljava/lang/String;
      74: ifnonnull     83
      77: aload_0
      78: ldc           #17                 // String %m%n
      80: putfield      #15                 // Field defaultPattern:Ljava/lang/String;
      83: aload_0
      84: getfield      #18                 // Field properties:[Lorg/apache/logging/log4j/core/layout/PatternMatch;
      87: ifnull        98
      90: aload_0
      91: getfield      #18                 // Field properties:[Lorg/apache/logging/log4j/core/layout/PatternMatch;
      94: arraylength
      95: ifne          110
      98: invokestatic  #5                  // Method org/apache/logging/log4j/core/layout/ScriptPatternSelector.access$000:()Lorg/apache/logging/log4j/Logger;
     101: ldc           #19                 // String No marker patterns were provided
     103: invokeinterface #20,  2           // InterfaceMethod org/apache/logging/log4j/Logger.warn:(Ljava/lang/String;)V
     108: aconst_null
     109: areturn
     110: new           #21                 // class org/apache/logging/log4j/core/layout/ScriptPatternSelector
     113: dup
     114: aload_0
     115: getfield      #4                  // Field script:Lorg/apache/logging/log4j/core/script/AbstractScript;
     118: aload_0
     119: getfield      #18                 // Field properties:[Lorg/apache/logging/log4j/core/layout/PatternMatch;
     122: aload_0
     123: getfield      #15                 // Field defaultPattern:Ljava/lang/String;
     126: aload_0
     127: getfield      #3                  // Field alwaysWriteExceptions:Z
     130: aload_0
     131: getfield      #22                 // Field disableAnsi:Z
     134: aload_0
     135: getfield      #23                 // Field noConsoleNoAnsi:Z
     138: aload_0
     139: getfield      #9                  // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
     142: invokespecial #24                 // Method org/apache/logging/log4j/core/layout/ScriptPatternSelector."<init>":(Lorg/apache/logging/log4j/core/script/AbstractScript;[Lorg/apache/logging/log4j/core/layout/PatternMatch;Ljava/lang/String;ZZZLorg/apache/logging/log4j/core/config/Configuration;)V
     145: areturn

  public org.apache.logging.log4j.core.layout.ScriptPatternSelector$Builder setScript(org.apache.logging.log4j.core.script.AbstractScript);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field script:Lorg/apache/logging/log4j/core/script/AbstractScript;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.layout.ScriptPatternSelector$Builder setProperties(org.apache.logging.log4j.core.layout.PatternMatch[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field properties:[Lorg/apache/logging/log4j/core/layout/PatternMatch;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.layout.ScriptPatternSelector$Builder setDefaultPattern(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field defaultPattern:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.layout.ScriptPatternSelector$Builder setAlwaysWriteExceptions(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field alwaysWriteExceptions:Z
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.layout.ScriptPatternSelector$Builder setDisableAnsi(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #22                 // Field disableAnsi:Z
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.layout.ScriptPatternSelector$Builder setNoConsoleNoAnsi(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #23                 // Field noConsoleNoAnsi:Z
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.layout.ScriptPatternSelector$Builder setConfiguration(org.apache.logging.log4j.core.config.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
       5: aload_0
       6: areturn

  public java.lang.Object build();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method build:()Lorg/apache/logging/log4j/core/layout/ScriptPatternSelector;
       4: areturn

  org.apache.logging.log4j.core.layout.ScriptPatternSelector$Builder(org.apache.logging.log4j.core.layout.ScriptPatternSelector$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
