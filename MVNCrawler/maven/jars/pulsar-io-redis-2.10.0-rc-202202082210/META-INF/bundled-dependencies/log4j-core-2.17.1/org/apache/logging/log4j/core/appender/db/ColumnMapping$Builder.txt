Compiled from "ColumnMapping.java"
public class org.apache.logging.log4j.core.appender.db.ColumnMapping$Builder implements org.apache.logging.log4j.core.util.Builder<org.apache.logging.log4j.core.appender.db.ColumnMapping> {
  private org.apache.logging.log4j.core.config.Configuration configuration;

  private org.apache.logging.log4j.core.StringLayout layout;

  private java.lang.String literal;

  private java.lang.String name;

  private java.lang.String parameter;

  private java.lang.String pattern;

  private java.lang.String source;

  private java.lang.Class<?> type;

  public org.apache.logging.log4j.core.appender.db.ColumnMapping$Builder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #2                  // class java/lang/String
       7: putfield      #3                  // Field type:Ljava/lang/Class;
      10: return

  public org.apache.logging.log4j.core.appender.db.ColumnMapping build();
    Code:
       0: aload_0
       1: getfield      #4                  // Field pattern:Ljava/lang/String;
       4: ifnull        35
       7: aload_0
       8: invokestatic  #5                  // Method org/apache/logging/log4j/core/layout/PatternLayout.newBuilder:()Lorg/apache/logging/log4j/core/layout/PatternLayout$Builder;
      11: aload_0
      12: getfield      #4                  // Field pattern:Ljava/lang/String;
      15: invokevirtual #6                  // Method org/apache/logging/log4j/core/layout/PatternLayout$Builder.withPattern:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/layout/PatternLayout$Builder;
      18: aload_0
      19: getfield      #7                  // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
      22: invokevirtual #8                  // Method org/apache/logging/log4j/core/layout/PatternLayout$Builder.withConfiguration:(Lorg/apache/logging/log4j/core/config/Configuration;)Lorg/apache/logging/log4j/core/layout/PatternLayout$Builder;
      25: iconst_0
      26: invokevirtual #9                  // Method org/apache/logging/log4j/core/layout/PatternLayout$Builder.withAlwaysWriteExceptions:(Z)Lorg/apache/logging/log4j/core/layout/PatternLayout$Builder;
      29: invokevirtual #10                 // Method org/apache/logging/log4j/core/layout/PatternLayout$Builder.build:()Lorg/apache/logging/log4j/core/layout/PatternLayout;
      32: putfield      #11                 // Field layout:Lorg/apache/logging/log4j/core/StringLayout;
      35: aload_0
      36: getfield      #11                 // Field layout:Lorg/apache/logging/log4j/core/StringLayout;
      39: ifnull        114
      42: aload_0
      43: getfield      #12                 // Field literal:Ljava/lang/String;
      46: ifnull        114
      49: ldc           #13                 // class java/util/Date
      51: aload_0
      52: getfield      #3                  // Field type:Ljava/lang/Class;
      55: invokevirtual #14                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      58: ifne          114
      61: ldc           #15                 // class org/apache/logging/log4j/util/ReadOnlyStringMap
      63: aload_0
      64: getfield      #3                  // Field type:Ljava/lang/Class;
      67: invokevirtual #14                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      70: ifne          114
      73: ldc           #16                 // class org/apache/logging/log4j/spi/ThreadContextMap
      75: aload_0
      76: getfield      #3                  // Field type:Ljava/lang/Class;
      79: invokevirtual #14                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      82: ifne          114
      85: ldc           #17                 // class org/apache/logging/log4j/spi/ThreadContextStack
      87: aload_0
      88: getfield      #3                  // Field type:Ljava/lang/Class;
      91: invokevirtual #14                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      94: ifne          114
      97: invokestatic  #18                 // Method org/apache/logging/log4j/core/appender/db/ColumnMapping.access$000:()Lorg/apache/logging/log4j/Logger;
     100: ldc           #19                 // String No \'layout\' or \'literal\' value specified and type ({}) is not compatible with ThreadContextMap, ThreadContextStack, or java.util.Date for the mapping
     102: aload_0
     103: getfield      #3                  // Field type:Ljava/lang/Class;
     106: aload_0
     107: invokeinterface #20,  4           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     112: aconst_null
     113: areturn
     114: aload_0
     115: getfield      #12                 // Field literal:Ljava/lang/String;
     118: ifnull        141
     121: aload_0
     122: getfield      #21                 // Field parameter:Ljava/lang/String;
     125: ifnull        141
     128: invokestatic  #18                 // Method org/apache/logging/log4j/core/appender/db/ColumnMapping.access$000:()Lorg/apache/logging/log4j/Logger;
     131: ldc           #22                 // String Only one of \'literal\' or \'parameter\' can be set on the column mapping {}
     133: aload_0
     134: invokeinterface #23,  3           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
     139: aconst_null
     140: areturn
     141: new           #24                 // class org/apache/logging/log4j/core/appender/db/ColumnMapping
     144: dup
     145: aload_0
     146: getfield      #25                 // Field name:Ljava/lang/String;
     149: aload_0
     150: getfield      #26                 // Field source:Ljava/lang/String;
     153: aload_0
     154: getfield      #11                 // Field layout:Lorg/apache/logging/log4j/core/StringLayout;
     157: aload_0
     158: getfield      #12                 // Field literal:Ljava/lang/String;
     161: aload_0
     162: getfield      #21                 // Field parameter:Ljava/lang/String;
     165: aload_0
     166: getfield      #3                  // Field type:Ljava/lang/Class;
     169: aconst_null
     170: invokespecial #27                 // Method org/apache/logging/log4j/core/appender/db/ColumnMapping."<init>":(Ljava/lang/String;Ljava/lang/String;Lorg/apache/logging/log4j/core/StringLayout;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;Lorg/apache/logging/log4j/core/appender/db/ColumnMapping$1;)V
     173: areturn

  public org.apache.logging.log4j.core.appender.db.ColumnMapping$Builder setConfiguration(org.apache.logging.log4j.core.config.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.appender.db.ColumnMapping$Builder setLayout(org.apache.logging.log4j.core.StringLayout);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field layout:Lorg/apache/logging/log4j/core/StringLayout;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.appender.db.ColumnMapping$Builder setLiteral(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field literal:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.appender.db.ColumnMapping$Builder setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field name:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.appender.db.ColumnMapping$Builder setParameter(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field parameter:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.appender.db.ColumnMapping$Builder setPattern(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field pattern:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.appender.db.ColumnMapping$Builder setSource(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field source:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.appender.db.ColumnMapping$Builder setType(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field type:Ljava/lang/Class;
       5: aload_0
       6: areturn

  public java.lang.String toString();
    Code:
       0: new           #28                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #30                 // String Builder [name=
       9: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #25                 // Field name:Ljava/lang/String;
      16: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #32                 // String , source=
      21: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #26                 // Field source:Ljava/lang/String;
      28: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #33                 // String , literal=
      33: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #12                 // Field literal:Ljava/lang/String;
      40: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: ldc           #34                 // String , parameter=
      45: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #21                 // Field parameter:Ljava/lang/String;
      52: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #35                 // String , pattern=
      57: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #4                  // Field pattern:Ljava/lang/String;
      64: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: ldc           #36                 // String , type=
      69: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: getfield      #3                  // Field type:Ljava/lang/Class;
      76: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      79: ldc           #38                 // String , layout=
      81: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: getfield      #11                 // Field layout:Lorg/apache/logging/log4j/core/StringLayout;
      88: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      91: ldc           #39                 // String ]
      93: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: areturn

  public java.lang.Object build();
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method build:()Lorg/apache/logging/log4j/core/appender/db/ColumnMapping;
       4: areturn
}
