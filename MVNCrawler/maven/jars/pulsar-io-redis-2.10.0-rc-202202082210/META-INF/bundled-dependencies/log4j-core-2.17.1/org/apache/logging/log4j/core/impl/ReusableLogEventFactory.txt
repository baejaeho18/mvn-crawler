Compiled from "ReusableLogEventFactory.java"
public class org.apache.logging.log4j.core.impl.ReusableLogEventFactory implements org.apache.logging.log4j.core.impl.LogEventFactory,org.apache.logging.log4j.core.impl.LocationAwareLogEventFactory {
  private static final org.apache.logging.log4j.core.async.ThreadNameCachingStrategy THREAD_NAME_CACHING_STRATEGY;

  private static final org.apache.logging.log4j.core.util.Clock CLOCK;

  private static final java.lang.ThreadLocal<org.apache.logging.log4j.core.impl.MutableLogEvent> mutableLogEventThreadLocal;

  private final org.apache.logging.log4j.core.ContextDataInjector injector;

  public org.apache.logging.log4j.core.impl.ReusableLogEventFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method org/apache/logging/log4j/core/impl/ContextDataInjectorFactory.createInjector:()Lorg/apache/logging/log4j/core/ContextDataInjector;
       8: putfield      #3                  // Field injector:Lorg/apache/logging/log4j/core/ContextDataInjector;
      11: return

  public org.apache.logging.log4j.core.LogEvent createEvent(java.lang.String, org.apache.logging.log4j.Marker, java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.message.Message, java.util.List<org.apache.logging.log4j.core.config.Property>, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aconst_null
       5: aload         4
       7: aload         5
       9: aload         6
      11: aload         7
      13: invokevirtual #4                  // Method createEvent:(Ljava/lang/String;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;Ljava/lang/StackTraceElement;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/message/Message;Ljava/util/List;Ljava/lang/Throwable;)Lorg/apache/logging/log4j/core/LogEvent;
      16: areturn

  public org.apache.logging.log4j.core.LogEvent createEvent(java.lang.String, org.apache.logging.log4j.Marker, java.lang.String, java.lang.StackTraceElement, org.apache.logging.log4j.Level, org.apache.logging.log4j.message.Message, java.util.List<org.apache.logging.log4j.core.config.Property>, java.lang.Throwable);
    Code:
       0: invokestatic  #5                  // Method getOrCreateMutableLogEvent:()Lorg/apache/logging/log4j/core/impl/MutableLogEvent;
       3: astore        9
       5: aload         9
       7: iconst_1
       8: putfield      #6                  // Field org/apache/logging/log4j/core/impl/MutableLogEvent.reserved:Z
      11: aload         9
      13: aload_1
      14: invokevirtual #7                  // Method org/apache/logging/log4j/core/impl/MutableLogEvent.setLoggerName:(Ljava/lang/String;)V
      17: aload         9
      19: aload_2
      20: invokevirtual #8                  // Method org/apache/logging/log4j/core/impl/MutableLogEvent.setMarker:(Lorg/apache/logging/log4j/Marker;)V
      23: aload         9
      25: aload_3
      26: invokevirtual #9                  // Method org/apache/logging/log4j/core/impl/MutableLogEvent.setLoggerFqcn:(Ljava/lang/String;)V
      29: aload         9
      31: aload         5
      33: ifnonnull     42
      36: getstatic     #10                 // Field org/apache/logging/log4j/Level.OFF:Lorg/apache/logging/log4j/Level;
      39: goto          44
      42: aload         5
      44: invokevirtual #11                 // Method org/apache/logging/log4j/core/impl/MutableLogEvent.setLevel:(Lorg/apache/logging/log4j/Level;)V
      47: aload         9
      49: aload         6
      51: invokevirtual #12                 // Method org/apache/logging/log4j/core/impl/MutableLogEvent.setMessage:(Lorg/apache/logging/log4j/message/Message;)V
      54: aload         9
      56: getstatic     #13                 // Field CLOCK:Lorg/apache/logging/log4j/core/util/Clock;
      59: invokestatic  #14                 // Method org/apache/logging/log4j/core/impl/Log4jLogEvent.getNanoClock:()Lorg/apache/logging/log4j/core/util/NanoClock;
      62: invokevirtual #15                 // Method org/apache/logging/log4j/core/impl/MutableLogEvent.initTime:(Lorg/apache/logging/log4j/core/util/Clock;Lorg/apache/logging/log4j/core/util/NanoClock;)V
      65: aload         9
      67: aload         8
      69: invokevirtual #16                 // Method org/apache/logging/log4j/core/impl/MutableLogEvent.setThrown:(Ljava/lang/Throwable;)V
      72: aload         9
      74: aload         4
      76: invokevirtual #17                 // Method org/apache/logging/log4j/core/impl/MutableLogEvent.setSource:(Ljava/lang/StackTraceElement;)V
      79: aload         9
      81: aload_0
      82: getfield      #3                  // Field injector:Lorg/apache/logging/log4j/core/ContextDataInjector;
      85: aload         7
      87: aload         9
      89: invokevirtual #18                 // Method org/apache/logging/log4j/core/impl/MutableLogEvent.getContextData:()Lorg/apache/logging/log4j/util/ReadOnlyStringMap;
      92: checkcast     #19                 // class org/apache/logging/log4j/util/StringMap
      95: invokeinterface #20,  3           // InterfaceMethod org/apache/logging/log4j/core/ContextDataInjector.injectContextData:(Ljava/util/List;Lorg/apache/logging/log4j/util/StringMap;)Lorg/apache/logging/log4j/util/StringMap;
     100: invokevirtual #21                 // Method org/apache/logging/log4j/core/impl/MutableLogEvent.setContextData:(Lorg/apache/logging/log4j/util/StringMap;)V
     103: aload         9
     105: invokestatic  #22                 // Method org/apache/logging/log4j/ThreadContext.getDepth:()I
     108: ifne          117
     111: getstatic     #23                 // Field org/apache/logging/log4j/ThreadContext.EMPTY_STACK:Lorg/apache/logging/log4j/spi/ThreadContextStack;
     114: goto          120
     117: invokestatic  #24                 // Method org/apache/logging/log4j/ThreadContext.cloneStack:()Lorg/apache/logging/log4j/ThreadContext$ContextStack;
     120: invokevirtual #25                 // Method org/apache/logging/log4j/core/impl/MutableLogEvent.setContextStack:(Lorg/apache/logging/log4j/ThreadContext$ContextStack;)V
     123: getstatic     #26                 // Field THREAD_NAME_CACHING_STRATEGY:Lorg/apache/logging/log4j/core/async/ThreadNameCachingStrategy;
     126: getstatic     #27                 // Field org/apache/logging/log4j/core/async/ThreadNameCachingStrategy.UNCACHED:Lorg/apache/logging/log4j/core/async/ThreadNameCachingStrategy;
     129: if_acmpne     154
     132: aload         9
     134: invokestatic  #28                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     137: invokevirtual #29                 // Method java/lang/Thread.getName:()Ljava/lang/String;
     140: invokevirtual #30                 // Method org/apache/logging/log4j/core/impl/MutableLogEvent.setThreadName:(Ljava/lang/String;)V
     143: aload         9
     145: invokestatic  #28                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     148: invokevirtual #31                 // Method java/lang/Thread.getPriority:()I
     151: invokevirtual #32                 // Method org/apache/logging/log4j/core/impl/MutableLogEvent.setThreadPriority:(I)V
     154: aload         9
     156: areturn

  private static org.apache.logging.log4j.core.impl.MutableLogEvent getOrCreateMutableLogEvent();
    Code:
       0: getstatic     #33                 // Field mutableLogEventThreadLocal:Ljava/lang/ThreadLocal;
       3: invokevirtual #34                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #35                 // class org/apache/logging/log4j/core/impl/MutableLogEvent
       9: astore_0
      10: aload_0
      11: ifnull        21
      14: aload_0
      15: getfield      #6                  // Field org/apache/logging/log4j/core/impl/MutableLogEvent.reserved:Z
      18: ifeq          28
      21: aload_0
      22: invokestatic  #36                 // Method createInstance:(Lorg/apache/logging/log4j/core/impl/MutableLogEvent;)Lorg/apache/logging/log4j/core/impl/MutableLogEvent;
      25: goto          29
      28: aload_0
      29: areturn

  private static org.apache.logging.log4j.core.impl.MutableLogEvent createInstance(org.apache.logging.log4j.core.impl.MutableLogEvent);
    Code:
       0: new           #35                 // class org/apache/logging/log4j/core/impl/MutableLogEvent
       3: dup
       4: invokespecial #37                 // Method org/apache/logging/log4j/core/impl/MutableLogEvent."<init>":()V
       7: astore_1
       8: aload_1
       9: invokestatic  #28                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      12: invokevirtual #38                 // Method java/lang/Thread.getId:()J
      15: invokevirtual #39                 // Method org/apache/logging/log4j/core/impl/MutableLogEvent.setThreadId:(J)V
      18: aload_1
      19: invokestatic  #28                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      22: invokevirtual #29                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      25: invokevirtual #30                 // Method org/apache/logging/log4j/core/impl/MutableLogEvent.setThreadName:(Ljava/lang/String;)V
      28: aload_1
      29: invokestatic  #28                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      32: invokevirtual #31                 // Method java/lang/Thread.getPriority:()I
      35: invokevirtual #32                 // Method org/apache/logging/log4j/core/impl/MutableLogEvent.setThreadPriority:(I)V
      38: aload_0
      39: ifnonnull     49
      42: getstatic     #33                 // Field mutableLogEventThreadLocal:Ljava/lang/ThreadLocal;
      45: aload_1
      46: invokevirtual #40                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      49: aload_1
      50: areturn

  public static void release(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: instanceof    #35                 // class org/apache/logging/log4j/core/impl/MutableLogEvent
       4: ifeq          21
       7: aload_0
       8: checkcast     #35                 // class org/apache/logging/log4j/core/impl/MutableLogEvent
      11: astore_1
      12: aload_1
      13: invokevirtual #41                 // Method org/apache/logging/log4j/core/impl/MutableLogEvent.clear:()V
      16: aload_1
      17: iconst_0
      18: putfield      #6                  // Field org/apache/logging/log4j/core/impl/MutableLogEvent.reserved:Z
      21: return

  static {};
    Code:
       0: invokestatic  #42                 // Method org/apache/logging/log4j/core/async/ThreadNameCachingStrategy.create:()Lorg/apache/logging/log4j/core/async/ThreadNameCachingStrategy;
       3: putstatic     #26                 // Field THREAD_NAME_CACHING_STRATEGY:Lorg/apache/logging/log4j/core/async/ThreadNameCachingStrategy;
       6: invokestatic  #43                 // Method org/apache/logging/log4j/core/util/ClockFactory.getClock:()Lorg/apache/logging/log4j/core/util/Clock;
       9: putstatic     #13                 // Field CLOCK:Lorg/apache/logging/log4j/core/util/Clock;
      12: new           #44                 // class java/lang/ThreadLocal
      15: dup
      16: invokespecial #45                 // Method java/lang/ThreadLocal."<init>":()V
      19: putstatic     #33                 // Field mutableLogEventThreadLocal:Ljava/lang/ThreadLocal;
      22: return
}
