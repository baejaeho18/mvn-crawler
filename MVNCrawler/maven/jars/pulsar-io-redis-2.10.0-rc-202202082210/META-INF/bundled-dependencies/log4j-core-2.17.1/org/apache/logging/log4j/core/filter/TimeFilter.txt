Compiled from "TimeFilter.java"
public final class org.apache.logging.log4j.core.filter.TimeFilter extends org.apache.logging.log4j.core.filter.AbstractFilter {
  private static final org.apache.logging.log4j.core.util.Clock CLOCK;

  private static final java.time.format.DateTimeFormatter FORMATTER;

  private static final long HOUR_MS;

  private static final long DAY_MS;

  private volatile long start;

  private final java.time.LocalTime startTime;

  private volatile long end;

  private final java.time.LocalTime endTime;

  private final long duration;

  private final java.time.ZoneId timeZone;

  org.apache.logging.log4j.core.filter.TimeFilter(java.time.LocalTime, java.time.LocalTime, java.time.ZoneId, org.apache.logging.log4j.core.Filter$Result, org.apache.logging.log4j.core.Filter$Result, java.time.LocalDate);
    Code:
       0: aload_0
       1: aload         4
       3: aload         5
       5: invokespecial #2                  // Method org/apache/logging/log4j/core/filter/AbstractFilter."<init>":(Lorg/apache/logging/log4j/core/Filter$Result;Lorg/apache/logging/log4j/core/Filter$Result;)V
       8: aload_0
       9: aload_1
      10: putfield      #3                  // Field startTime:Ljava/time/LocalTime;
      13: aload_0
      14: aload_2
      15: putfield      #4                  // Field endTime:Ljava/time/LocalTime;
      18: aload_0
      19: aload_3
      20: putfield      #5                  // Field timeZone:Ljava/time/ZoneId;
      23: aload_0
      24: aload         6
      26: aload_0
      27: getfield      #3                  // Field startTime:Ljava/time/LocalTime;
      30: aload_3
      31: invokestatic  #6                  // Method java/time/ZonedDateTime.of:(Ljava/time/LocalDate;Ljava/time/LocalTime;Ljava/time/ZoneId;)Ljava/time/ZonedDateTime;
      34: invokevirtual #7                  // Method java/time/ZonedDateTime.withEarlierOffsetAtOverlap:()Ljava/time/ZonedDateTime;
      37: invokevirtual #8                  // Method java/time/ZonedDateTime.toInstant:()Ljava/time/Instant;
      40: invokevirtual #9                  // Method java/time/Instant.toEpochMilli:()J
      43: putfield      #10                 // Field start:J
      46: aload         6
      48: aload_0
      49: getfield      #4                  // Field endTime:Ljava/time/LocalTime;
      52: aload_3
      53: invokestatic  #6                  // Method java/time/ZonedDateTime.of:(Ljava/time/LocalDate;Ljava/time/LocalTime;Ljava/time/ZoneId;)Ljava/time/ZonedDateTime;
      56: invokevirtual #7                  // Method java/time/ZonedDateTime.withEarlierOffsetAtOverlap:()Ljava/time/ZonedDateTime;
      59: invokevirtual #8                  // Method java/time/ZonedDateTime.toInstant:()Ljava/time/Instant;
      62: invokevirtual #9                  // Method java/time/Instant.toEpochMilli:()J
      65: lstore        7
      67: aload_2
      68: aload_1
      69: invokevirtual #11                 // Method java/time/LocalTime.isBefore:(Ljava/time/LocalTime;)Z
      72: ifeq          83
      75: lload         7
      77: ldc2_w        #12                 // long 86400000l
      80: ladd
      81: lstore        7
      83: aload_0
      84: aload_0
      85: getfield      #3                  // Field startTime:Ljava/time/LocalTime;
      88: aload_0
      89: getfield      #4                  // Field endTime:Ljava/time/LocalTime;
      92: invokevirtual #11                 // Method java/time/LocalTime.isBefore:(Ljava/time/LocalTime;)Z
      95: ifeq          115
      98: aload_0
      99: getfield      #3                  // Field startTime:Ljava/time/LocalTime;
     102: aload_0
     103: getfield      #4                  // Field endTime:Ljava/time/LocalTime;
     106: invokestatic  #14                 // Method java/time/Duration.between:(Ljava/time/temporal/Temporal;Ljava/time/temporal/Temporal;)Ljava/time/Duration;
     109: invokevirtual #15                 // Method java/time/Duration.toMillis:()J
     112: goto          135
     115: aload_0
     116: getfield      #3                  // Field startTime:Ljava/time/LocalTime;
     119: aload_0
     120: getfield      #4                  // Field endTime:Ljava/time/LocalTime;
     123: invokestatic  #14                 // Method java/time/Duration.between:(Ljava/time/temporal/Temporal;Ljava/time/temporal/Temporal;)Ljava/time/Duration;
     126: ldc2_w        #16                 // long 24l
     129: invokevirtual #18                 // Method java/time/Duration.plusHours:(J)Ljava/time/Duration;
     132: invokevirtual #15                 // Method java/time/Duration.toMillis:()J
     135: putfield      #19                 // Field duration:J
     138: lload         7
     140: aload_0
     141: getfield      #10                 // Field start:J
     144: lsub
     145: aload_0
     146: getfield      #19                 // Field duration:J
     149: lsub
     150: lstore        9
     152: lload         9
     154: lconst_0
     155: lcmp
     156: ifeq          166
     159: lload         7
     161: lload         9
     163: lsub
     164: lstore        7
     166: aload_0
     167: lload         7
     169: putfield      #20                 // Field end:J
     172: return

  private org.apache.logging.log4j.core.filter.TimeFilter(java.time.LocalTime, java.time.LocalTime, java.time.ZoneId, org.apache.logging.log4j.core.Filter$Result, org.apache.logging.log4j.core.Filter$Result);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload_3
       9: invokestatic  #21                 // Method java/time/LocalDate.now:(Ljava/time/ZoneId;)Ljava/time/LocalDate;
      12: invokespecial #22                 // Method "<init>":(Ljava/time/LocalTime;Ljava/time/LocalTime;Ljava/time/ZoneId;Lorg/apache/logging/log4j/core/Filter$Result;Lorg/apache/logging/log4j/core/Filter$Result;Ljava/time/LocalDate;)V
      15: return

  private synchronized void adjustTimes(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #20                 // Field end:J
       5: lcmp
       6: ifgt          10
       9: return
      10: lload_1
      11: invokestatic  #23                 // Method java/time/Instant.ofEpochMilli:(J)Ljava/time/Instant;
      14: aload_0
      15: getfield      #5                  // Field timeZone:Ljava/time/ZoneId;
      18: invokevirtual #24                 // Method java/time/Instant.atZone:(Ljava/time/ZoneId;)Ljava/time/ZonedDateTime;
      21: invokevirtual #25                 // Method java/time/ZonedDateTime.toLocalDate:()Ljava/time/LocalDate;
      24: astore_3
      25: aload_0
      26: aload_3
      27: aload_0
      28: getfield      #3                  // Field startTime:Ljava/time/LocalTime;
      31: aload_0
      32: getfield      #5                  // Field timeZone:Ljava/time/ZoneId;
      35: invokestatic  #6                  // Method java/time/ZonedDateTime.of:(Ljava/time/LocalDate;Ljava/time/LocalTime;Ljava/time/ZoneId;)Ljava/time/ZonedDateTime;
      38: invokevirtual #7                  // Method java/time/ZonedDateTime.withEarlierOffsetAtOverlap:()Ljava/time/ZonedDateTime;
      41: invokevirtual #8                  // Method java/time/ZonedDateTime.toInstant:()Ljava/time/Instant;
      44: invokevirtual #9                  // Method java/time/Instant.toEpochMilli:()J
      47: putfield      #10                 // Field start:J
      50: aload_3
      51: aload_0
      52: getfield      #4                  // Field endTime:Ljava/time/LocalTime;
      55: aload_0
      56: getfield      #5                  // Field timeZone:Ljava/time/ZoneId;
      59: invokestatic  #6                  // Method java/time/ZonedDateTime.of:(Ljava/time/LocalDate;Ljava/time/LocalTime;Ljava/time/ZoneId;)Ljava/time/ZonedDateTime;
      62: invokevirtual #7                  // Method java/time/ZonedDateTime.withEarlierOffsetAtOverlap:()Ljava/time/ZonedDateTime;
      65: invokevirtual #8                  // Method java/time/ZonedDateTime.toInstant:()Ljava/time/Instant;
      68: invokevirtual #9                  // Method java/time/Instant.toEpochMilli:()J
      71: lstore        4
      73: aload_0
      74: getfield      #4                  // Field endTime:Ljava/time/LocalTime;
      77: aload_0
      78: getfield      #3                  // Field startTime:Ljava/time/LocalTime;
      81: invokevirtual #11                 // Method java/time/LocalTime.isBefore:(Ljava/time/LocalTime;)Z
      84: ifeq          95
      87: lload         4
      89: ldc2_w        #12                 // long 86400000l
      92: ladd
      93: lstore        4
      95: lload         4
      97: aload_0
      98: getfield      #10                 // Field start:J
     101: lsub
     102: aload_0
     103: getfield      #19                 // Field duration:J
     106: lsub
     107: lstore        6
     109: lload         6
     111: lconst_0
     112: lcmp
     113: ifeq          123
     116: lload         4
     118: lload         6
     120: lsub
     121: lstore        4
     123: aload_0
     124: lload         4
     126: putfield      #20                 // Field end:J
     129: return

  org.apache.logging.log4j.core.Filter$Result filter(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #20                 // Field end:J
       5: lcmp
       6: ifle          14
       9: aload_0
      10: lload_1
      11: invokespecial #26                 // Method adjustTimes:(J)V
      14: lload_1
      15: aload_0
      16: getfield      #10                 // Field start:J
      19: lcmp
      20: iflt          39
      23: lload_1
      24: aload_0
      25: getfield      #20                 // Field end:J
      28: lcmp
      29: ifgt          39
      32: aload_0
      33: getfield      #27                 // Field onMatch:Lorg/apache/logging/log4j/core/Filter$Result;
      36: goto          43
      39: aload_0
      40: getfield      #28                 // Field onMismatch:Lorg/apache/logging/log4j/core/Filter$Result;
      43: areturn

  public org.apache.logging.log4j.core.Filter$Result filter(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #29,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getTimeMillis:()J
       7: invokevirtual #30                 // Method filter:(J)Lorg/apache/logging/log4j/core/Filter$Result;
      10: areturn

  private org.apache.logging.log4j.core.Filter$Result filter();
    Code:
       0: aload_0
       1: getstatic     #31                 // Field CLOCK:Lorg/apache/logging/log4j/core/util/Clock;
       4: invokeinterface #32,  1           // InterfaceMethod org/apache/logging/log4j/core/util/Clock.currentTimeMillis:()J
       9: invokevirtual #30                 // Method filter:(J)Lorg/apache/logging/log4j/core/Filter$Result;
      12: areturn

  public org.apache.logging.log4j.core.Filter$Result filter(org.apache.logging.log4j.core.Logger, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokespecial #33                 // Method filter:()Lorg/apache/logging/log4j/core/Filter$Result;
       4: areturn

  public org.apache.logging.log4j.core.Filter$Result filter(org.apache.logging.log4j.core.Logger, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokespecial #33                 // Method filter:()Lorg/apache/logging/log4j/core/Filter$Result;
       4: areturn

  public org.apache.logging.log4j.core.Filter$Result filter(org.apache.logging.log4j.core.Logger, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: invokespecial #33                 // Method filter:()Lorg/apache/logging/log4j/core/Filter$Result;
       4: areturn

  public org.apache.logging.log4j.core.Filter$Result filter(org.apache.logging.log4j.core.Logger, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #33                 // Method filter:()Lorg/apache/logging/log4j/core/Filter$Result;
       4: areturn

  public org.apache.logging.log4j.core.Filter$Result filter(org.apache.logging.log4j.core.Logger, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #33                 // Method filter:()Lorg/apache/logging/log4j/core/Filter$Result;
       4: areturn

  public org.apache.logging.log4j.core.Filter$Result filter(org.apache.logging.log4j.core.Logger, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #33                 // Method filter:()Lorg/apache/logging/log4j/core/Filter$Result;
       4: areturn

  public org.apache.logging.log4j.core.Filter$Result filter(org.apache.logging.log4j.core.Logger, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #33                 // Method filter:()Lorg/apache/logging/log4j/core/Filter$Result;
       4: areturn

  public org.apache.logging.log4j.core.Filter$Result filter(org.apache.logging.log4j.core.Logger, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #33                 // Method filter:()Lorg/apache/logging/log4j/core/Filter$Result;
       4: areturn

  public org.apache.logging.log4j.core.Filter$Result filter(org.apache.logging.log4j.core.Logger, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #33                 // Method filter:()Lorg/apache/logging/log4j/core/Filter$Result;
       4: areturn

  public org.apache.logging.log4j.core.Filter$Result filter(org.apache.logging.log4j.core.Logger, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #33                 // Method filter:()Lorg/apache/logging/log4j/core/Filter$Result;
       4: areturn

  public org.apache.logging.log4j.core.Filter$Result filter(org.apache.logging.log4j.core.Logger, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #33                 // Method filter:()Lorg/apache/logging/log4j/core/Filter$Result;
       4: areturn

  public org.apache.logging.log4j.core.Filter$Result filter(org.apache.logging.log4j.core.Logger, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #33                 // Method filter:()Lorg/apache/logging/log4j/core/Filter$Result;
       4: areturn

  public org.apache.logging.log4j.core.Filter$Result filter(org.apache.logging.log4j.core.Logger, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #33                 // Method filter:()Lorg/apache/logging/log4j/core/Filter$Result;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #34                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #36                 // String start=
      11: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_0
      15: getfield      #10                 // Field start:J
      18: invokevirtual #38                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      21: pop
      22: aload_1
      23: ldc           #39                 // String , end=
      25: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: getfield      #20                 // Field end:J
      32: invokevirtual #38                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      35: pop
      36: aload_1
      37: ldc           #40                 // String , timezone=
      39: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_0
      43: getfield      #5                  // Field timeZone:Ljava/time/ZoneId;
      46: invokevirtual #41                 // Method java/time/ZoneId.toString:()Ljava/lang/String;
      49: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: pop
      53: aload_1
      54: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: areturn

  public static org.apache.logging.log4j.core.filter.TimeFilter createFilter(java.lang.String, java.lang.String, java.lang.String, org.apache.logging.log4j.core.Filter$Result, org.apache.logging.log4j.core.Filter$Result);
    Code:
       0: aload_0
       1: getstatic     #43                 // Field java/time/LocalTime.MIN:Ljava/time/LocalTime;
       4: invokestatic  #44                 // Method parseTimestamp:(Ljava/lang/String;Ljava/time/LocalTime;)Ljava/time/LocalTime;
       7: astore        5
       9: aload_1
      10: getstatic     #45                 // Field java/time/LocalTime.MAX:Ljava/time/LocalTime;
      13: invokestatic  #44                 // Method parseTimestamp:(Ljava/lang/String;Ljava/time/LocalTime;)Ljava/time/LocalTime;
      16: astore        6
      18: aload_2
      19: ifnonnull     28
      22: invokestatic  #46                 // Method java/time/ZoneId.systemDefault:()Ljava/time/ZoneId;
      25: goto          32
      28: aload_2
      29: invokestatic  #47                 // Method java/time/ZoneId.of:(Ljava/lang/String;)Ljava/time/ZoneId;
      32: astore        7
      34: aload_3
      35: ifnonnull     44
      38: getstatic     #48                 // Field org/apache/logging/log4j/core/Filter$Result.NEUTRAL:Lorg/apache/logging/log4j/core/Filter$Result;
      41: goto          45
      44: aload_3
      45: astore        8
      47: aload         4
      49: ifnonnull     58
      52: getstatic     #49                 // Field org/apache/logging/log4j/core/Filter$Result.DENY:Lorg/apache/logging/log4j/core/Filter$Result;
      55: goto          60
      58: aload         4
      60: astore        9
      62: new           #1                  // class org/apache/logging/log4j/core/filter/TimeFilter
      65: dup
      66: aload         5
      68: aload         6
      70: aload         7
      72: aload         8
      74: aload         9
      76: invokespecial #50                 // Method "<init>":(Ljava/time/LocalTime;Ljava/time/LocalTime;Ljava/time/ZoneId;Lorg/apache/logging/log4j/core/Filter$Result;Lorg/apache/logging/log4j/core/Filter$Result;)V
      79: areturn

  private static java.time.LocalTime parseTimestamp(java.lang.String, java.time.LocalTime);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aload_1
       5: areturn
       6: aload_0
       7: getstatic     #51                 // Field FORMATTER:Ljava/time/format/DateTimeFormatter;
      10: invokestatic  #52                 // Method java/time/LocalTime.parse:(Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/LocalTime;
      13: areturn
      14: astore_2
      15: getstatic     #54                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      18: ldc           #55                 // String Error parsing TimeFilter timestamp value {}
      20: aload_0
      21: aload_2
      22: invokeinterface #56,  4           // InterfaceMethod org/apache/logging/log4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      27: aload_1
      28: areturn
    Exception table:
       from    to  target type
           6    13    14   Class java/lang/Exception

  static {};
    Code:
       0: invokestatic  #57                 // Method org/apache/logging/log4j/core/util/ClockFactory.getClock:()Lorg/apache/logging/log4j/core/util/Clock;
       3: putstatic     #31                 // Field CLOCK:Lorg/apache/logging/log4j/core/util/Clock;
       6: ldc           #58                 // String HH:mm:ss
       8: invokestatic  #59                 // Method java/time/format/DateTimeFormatter.ofPattern:(Ljava/lang/String;)Ljava/time/format/DateTimeFormatter;
      11: putstatic     #51                 // Field FORMATTER:Ljava/time/format/DateTimeFormatter;
      14: return
}
