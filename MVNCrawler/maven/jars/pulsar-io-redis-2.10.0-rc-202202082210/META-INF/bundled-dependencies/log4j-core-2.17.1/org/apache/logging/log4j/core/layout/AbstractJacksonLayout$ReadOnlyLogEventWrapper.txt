Compiled from "AbstractJacksonLayout.java"
class org.apache.logging.log4j.core.layout.AbstractJacksonLayout$ReadOnlyLogEventWrapper implements org.apache.logging.log4j.core.LogEvent {
  private final org.apache.logging.log4j.core.LogEvent event;

  public org.apache.logging.log4j.core.layout.AbstractJacksonLayout$ReadOnlyLogEventWrapper(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field event:Lorg/apache/logging/log4j/core/LogEvent;
       9: return

  public org.apache.logging.log4j.core.LogEvent toImmutable();
    Code:
       0: aload_0
       1: getfield      #2                  // Field event:Lorg/apache/logging/log4j/core/LogEvent;
       4: invokeinterface #3,  1            // InterfaceMethod org/apache/logging/log4j/core/LogEvent.toImmutable:()Lorg/apache/logging/log4j/core/LogEvent;
       9: areturn

  public java.util.Map<java.lang.String, java.lang.String> getContextMap();
    Code:
       0: aload_0
       1: getfield      #2                  // Field event:Lorg/apache/logging/log4j/core/LogEvent;
       4: invokeinterface #4,  1            // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getContextMap:()Ljava/util/Map;
       9: areturn

  public org.apache.logging.log4j.util.ReadOnlyStringMap getContextData();
    Code:
       0: aload_0
       1: getfield      #2                  // Field event:Lorg/apache/logging/log4j/core/LogEvent;
       4: invokeinterface #5,  1            // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getContextData:()Lorg/apache/logging/log4j/util/ReadOnlyStringMap;
       9: areturn

  public org.apache.logging.log4j.ThreadContext$ContextStack getContextStack();
    Code:
       0: aload_0
       1: getfield      #2                  // Field event:Lorg/apache/logging/log4j/core/LogEvent;
       4: invokeinterface #6,  1            // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getContextStack:()Lorg/apache/logging/log4j/ThreadContext$ContextStack;
       9: areturn

  public java.lang.String getLoggerFqcn();
    Code:
       0: aload_0
       1: getfield      #2                  // Field event:Lorg/apache/logging/log4j/core/LogEvent;
       4: invokeinterface #7,  1            // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getLoggerFqcn:()Ljava/lang/String;
       9: areturn

  public org.apache.logging.log4j.Level getLevel();
    Code:
       0: aload_0
       1: getfield      #2                  // Field event:Lorg/apache/logging/log4j/core/LogEvent;
       4: invokeinterface #8,  1            // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getLevel:()Lorg/apache/logging/log4j/Level;
       9: areturn

  public java.lang.String getLoggerName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field event:Lorg/apache/logging/log4j/core/LogEvent;
       4: invokeinterface #9,  1            // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getLoggerName:()Ljava/lang/String;
       9: areturn

  public org.apache.logging.log4j.Marker getMarker();
    Code:
       0: aload_0
       1: getfield      #2                  // Field event:Lorg/apache/logging/log4j/core/LogEvent;
       4: invokeinterface #10,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getMarker:()Lorg/apache/logging/log4j/Marker;
       9: areturn

  public org.apache.logging.log4j.message.Message getMessage();
    Code:
       0: aload_0
       1: getfield      #2                  // Field event:Lorg/apache/logging/log4j/core/LogEvent;
       4: invokeinterface #11,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getMessage:()Lorg/apache/logging/log4j/message/Message;
       9: areturn

  public long getTimeMillis();
    Code:
       0: aload_0
       1: getfield      #2                  // Field event:Lorg/apache/logging/log4j/core/LogEvent;
       4: invokeinterface #12,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getTimeMillis:()J
       9: lreturn

  public org.apache.logging.log4j.core.time.Instant getInstant();
    Code:
       0: aload_0
       1: getfield      #2                  // Field event:Lorg/apache/logging/log4j/core/LogEvent;
       4: invokeinterface #13,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getInstant:()Lorg/apache/logging/log4j/core/time/Instant;
       9: areturn

  public java.lang.StackTraceElement getSource();
    Code:
       0: aload_0
       1: getfield      #2                  // Field event:Lorg/apache/logging/log4j/core/LogEvent;
       4: invokeinterface #14,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getSource:()Ljava/lang/StackTraceElement;
       9: areturn

  public java.lang.String getThreadName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field event:Lorg/apache/logging/log4j/core/LogEvent;
       4: invokeinterface #15,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getThreadName:()Ljava/lang/String;
       9: areturn

  public long getThreadId();
    Code:
       0: aload_0
       1: getfield      #2                  // Field event:Lorg/apache/logging/log4j/core/LogEvent;
       4: invokeinterface #16,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getThreadId:()J
       9: lreturn

  public int getThreadPriority();
    Code:
       0: aload_0
       1: getfield      #2                  // Field event:Lorg/apache/logging/log4j/core/LogEvent;
       4: invokeinterface #17,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getThreadPriority:()I
       9: ireturn

  public java.lang.Throwable getThrown();
    Code:
       0: aload_0
       1: getfield      #2                  // Field event:Lorg/apache/logging/log4j/core/LogEvent;
       4: invokeinterface #18,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getThrown:()Ljava/lang/Throwable;
       9: areturn

  public org.apache.logging.log4j.core.impl.ThrowableProxy getThrownProxy();
    Code:
       0: aload_0
       1: getfield      #2                  // Field event:Lorg/apache/logging/log4j/core/LogEvent;
       4: invokeinterface #19,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getThrownProxy:()Lorg/apache/logging/log4j/core/impl/ThrowableProxy;
       9: areturn

  public boolean isEndOfBatch();
    Code:
       0: aload_0
       1: getfield      #2                  // Field event:Lorg/apache/logging/log4j/core/LogEvent;
       4: invokeinterface #20,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.isEndOfBatch:()Z
       9: ireturn

  public boolean isIncludeLocation();
    Code:
       0: aload_0
       1: getfield      #2                  // Field event:Lorg/apache/logging/log4j/core/LogEvent;
       4: invokeinterface #21,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.isIncludeLocation:()Z
       9: ireturn

  public void setEndOfBatch(boolean);
    Code:
       0: return

  public void setIncludeLocation(boolean);
    Code:
       0: return

  public long getNanoTime();
    Code:
       0: aload_0
       1: getfield      #2                  // Field event:Lorg/apache/logging/log4j/core/LogEvent;
       4: invokeinterface #22,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getNanoTime:()J
       9: lreturn
}
