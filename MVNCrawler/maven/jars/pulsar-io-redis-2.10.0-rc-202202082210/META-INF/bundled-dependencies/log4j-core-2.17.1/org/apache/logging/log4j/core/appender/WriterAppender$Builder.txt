Compiled from "WriterAppender.java"
public class org.apache.logging.log4j.core.appender.WriterAppender$Builder<B extends org.apache.logging.log4j.core.appender.WriterAppender$Builder<B>> extends org.apache.logging.log4j.core.appender.AbstractAppender$Builder<B> implements org.apache.logging.log4j.core.util.Builder<org.apache.logging.log4j.core.appender.WriterAppender> {
  private boolean follow;

  private java.io.Writer target;

  public org.apache.logging.log4j.core.appender.WriterAppender$Builder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/logging/log4j/core/appender/AbstractAppender$Builder."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field follow:Z
       9: return

  public org.apache.logging.log4j.core.appender.WriterAppender build();
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getLayout:()Lorg/apache/logging/log4j/core/Layout;
       4: checkcast     #4                  // class org/apache/logging/log4j/core/StringLayout
       7: astore_1
       8: aload_1
       9: ifnull        16
      12: aload_1
      13: goto          19
      16: invokestatic  #5                  // Method org/apache/logging/log4j/core/layout/PatternLayout.createDefaultLayout:()Lorg/apache/logging/log4j/core/layout/PatternLayout;
      19: astore_2
      20: new           #6                  // class org/apache/logging/log4j/core/appender/WriterAppender
      23: dup
      24: aload_0
      25: invokevirtual #7                  // Method getName:()Ljava/lang/String;
      28: aload_2
      29: aload_0
      30: invokevirtual #8                  // Method getFilter:()Lorg/apache/logging/log4j/core/Filter;
      33: aload_0
      34: getfield      #9                  // Field target:Ljava/io/Writer;
      37: aload_0
      38: getfield      #2                  // Field follow:Z
      41: aload_2
      42: invokestatic  #10                 // Method org/apache/logging/log4j/core/appender/WriterAppender.access$000:(Ljava/io/Writer;ZLorg/apache/logging/log4j/core/StringLayout;)Lorg/apache/logging/log4j/core/appender/WriterManager;
      45: aload_0
      46: invokevirtual #11                 // Method isIgnoreExceptions:()Z
      49: aload_0
      50: invokevirtual #12                 // Method getPropertyArray:()[Lorg/apache/logging/log4j/core/config/Property;
      53: aconst_null
      54: invokespecial #13                 // Method org/apache/logging/log4j/core/appender/WriterAppender."<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/StringLayout;Lorg/apache/logging/log4j/core/Filter;Lorg/apache/logging/log4j/core/appender/WriterManager;Z[Lorg/apache/logging/log4j/core/config/Property;Lorg/apache/logging/log4j/core/appender/WriterAppender$1;)V
      57: areturn

  public B setFollow(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field follow:Z
       5: aload_0
       6: invokevirtual #14                 // Method asBuilder:()Lorg/apache/logging/log4j/core/filter/AbstractFilterable$Builder;
       9: checkcast     #15                 // class org/apache/logging/log4j/core/appender/WriterAppender$Builder
      12: areturn

  public B setTarget(java.io.Writer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field target:Ljava/io/Writer;
       5: aload_0
       6: invokevirtual #14                 // Method asBuilder:()Lorg/apache/logging/log4j/core/filter/AbstractFilterable$Builder;
       9: checkcast     #15                 // class org/apache/logging/log4j/core/appender/WriterAppender$Builder
      12: areturn

  public java.lang.Object build();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method build:()Lorg/apache/logging/log4j/core/appender/WriterAppender;
       4: areturn
}
