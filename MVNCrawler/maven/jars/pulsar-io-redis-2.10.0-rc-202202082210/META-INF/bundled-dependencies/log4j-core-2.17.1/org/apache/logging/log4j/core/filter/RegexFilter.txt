Compiled from "RegexFilter.java"
public final class org.apache.logging.log4j.core.filter.RegexFilter extends org.apache.logging.log4j.core.filter.AbstractFilter {
  private static final int DEFAULT_PATTERN_FLAGS;

  private final java.util.regex.Pattern pattern;

  private final boolean useRawMessage;

  private org.apache.logging.log4j.core.filter.RegexFilter(boolean, java.util.regex.Pattern, org.apache.logging.log4j.core.Filter$Result, org.apache.logging.log4j.core.Filter$Result);
    Code:
       0: aload_0
       1: aload_3
       2: aload         4
       4: invokespecial #1                  // Method org/apache/logging/log4j/core/filter/AbstractFilter."<init>":(Lorg/apache/logging/log4j/core/Filter$Result;Lorg/apache/logging/log4j/core/Filter$Result;)V
       7: aload_0
       8: aload_2
       9: putfield      #2                  // Field pattern:Ljava/util/regex/Pattern;
      12: aload_0
      13: iload_1
      14: putfield      #3                  // Field useRawMessage:Z
      17: return

  public org.apache.logging.log4j.core.Filter$Result filter(org.apache.logging.log4j.core.Logger, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: aload         4
       3: invokespecial #4                  // Method filter:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/Filter$Result;
       6: areturn

  public org.apache.logging.log4j.core.Filter$Result filter(org.apache.logging.log4j.core.Logger, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload         4
       2: ifnonnull     10
       5: aload_0
       6: getfield      #5                  // Field onMismatch:Lorg/apache/logging/log4j/core/Filter$Result;
       9: areturn
      10: aload_0
      11: aload         4
      13: invokevirtual #6                  // Method java/lang/Object.toString:()Ljava/lang/String;
      16: invokespecial #4                  // Method filter:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/Filter$Result;
      19: areturn

  public org.apache.logging.log4j.core.Filter$Result filter(org.apache.logging.log4j.core.Logger, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable);
    Code:
       0: aload         4
       2: ifnonnull     10
       5: aload_0
       6: getfield      #5                  // Field onMismatch:Lorg/apache/logging/log4j/core/Filter$Result;
       9: areturn
      10: aload_0
      11: getfield      #3                  // Field useRawMessage:Z
      14: ifeq          27
      17: aload         4
      19: invokeinterface #7,  1            // InterfaceMethod org/apache/logging/log4j/message/Message.getFormat:()Ljava/lang/String;
      24: goto          34
      27: aload         4
      29: invokeinterface #8,  1            // InterfaceMethod org/apache/logging/log4j/message/Message.getFormattedMessage:()Ljava/lang/String;
      34: astore        6
      36: aload_0
      37: aload         6
      39: invokespecial #4                  // Method filter:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/Filter$Result;
      42: areturn

  public org.apache.logging.log4j.core.Filter$Result filter(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: getfield      #3                  // Field useRawMessage:Z
       4: ifeq          21
       7: aload_1
       8: invokeinterface #9,  1            // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getMessage:()Lorg/apache/logging/log4j/message/Message;
      13: invokeinterface #7,  1            // InterfaceMethod org/apache/logging/log4j/message/Message.getFormat:()Ljava/lang/String;
      18: goto          32
      21: aload_1
      22: invokeinterface #9,  1            // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getMessage:()Lorg/apache/logging/log4j/message/Message;
      27: invokeinterface #8,  1            // InterfaceMethod org/apache/logging/log4j/message/Message.getFormattedMessage:()Ljava/lang/String;
      32: astore_2
      33: aload_0
      34: aload_2
      35: invokespecial #4                  // Method filter:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/Filter$Result;
      38: areturn

  private org.apache.logging.log4j.core.Filter$Result filter(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     9
       4: aload_0
       5: getfield      #5                  // Field onMismatch:Lorg/apache/logging/log4j/core/Filter$Result;
       8: areturn
       9: aload_0
      10: getfield      #2                  // Field pattern:Ljava/util/regex/Pattern;
      13: aload_1
      14: invokevirtual #10                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      17: astore_2
      18: aload_2
      19: invokevirtual #11                 // Method java/util/regex/Matcher.matches:()Z
      22: ifeq          32
      25: aload_0
      26: getfield      #12                 // Field onMatch:Lorg/apache/logging/log4j/core/Filter$Result;
      29: goto          36
      32: aload_0
      33: getfield      #5                  // Field onMismatch:Lorg/apache/logging/log4j/core/Filter$Result;
      36: areturn

  public java.lang.String toString();
    Code:
       0: new           #13                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #15                 // String useRaw=
      11: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_0
      15: getfield      #3                  // Field useRawMessage:Z
      18: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      21: pop
      22: aload_1
      23: ldc           #18                 // String , pattern=
      25: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: getfield      #2                  // Field pattern:Ljava/util/regex/Pattern;
      32: invokevirtual #19                 // Method java/util/regex/Pattern.toString:()Ljava/lang/String;
      35: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: pop
      39: aload_1
      40: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: areturn

  public static org.apache.logging.log4j.core.filter.RegexFilter createFilter(java.lang.String, java.lang.String[], java.lang.Boolean, org.apache.logging.log4j.core.Filter$Result, org.apache.logging.log4j.core.Filter$Result) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: ifnonnull     16
       4: getstatic     #21                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       7: ldc           #22                 // String A regular expression must be provided for RegexFilter
       9: invokeinterface #23,  2           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
      14: aconst_null
      15: areturn
      16: new           #24                 // class org/apache/logging/log4j/core/filter/RegexFilter
      19: dup
      20: aload_2
      21: invokevirtual #25                 // Method java/lang/Boolean.booleanValue:()Z
      24: aload_0
      25: aload_1
      26: invokestatic  #26                 // Method toPatternFlags:([Ljava/lang/String;)I
      29: invokestatic  #27                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;
      32: aload_3
      33: aload         4
      35: invokespecial #28                 // Method "<init>":(ZLjava/util/regex/Pattern;Lorg/apache/logging/log4j/core/Filter$Result;Lorg/apache/logging/log4j/core/Filter$Result;)V
      38: areturn

  private static int toPatternFlags(java.lang.String[]) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: ifnull        9
       4: aload_0
       5: arraylength
       6: ifne          11
       9: iconst_0
      10: ireturn
      11: ldc           #29                 // class java/util/regex/Pattern
      13: invokevirtual #30                 // Method java/lang/Class.getDeclaredFields:()[Ljava/lang/reflect/Field;
      16: astore_1
      17: invokedynamic #31,  0             // InvokeDynamic #0:compare:()Ljava/util/Comparator;
      22: astore_2
      23: aload_1
      24: aload_2
      25: invokestatic  #32                 // Method java/util/Arrays.sort:([Ljava/lang/Object;Ljava/util/Comparator;)V
      28: aload_1
      29: arraylength
      30: anewarray     #33                 // class java/lang/String
      33: astore_3
      34: iconst_0
      35: istore        4
      37: iload         4
      39: aload_1
      40: arraylength
      41: if_icmpge     61
      44: aload_3
      45: iload         4
      47: aload_1
      48: iload         4
      50: aaload
      51: invokevirtual #34                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
      54: aastore
      55: iinc          4, 1
      58: goto          37
      61: iconst_0
      62: istore        4
      64: aload_0
      65: astore        5
      67: aload         5
      69: arraylength
      70: istore        6
      72: iconst_0
      73: istore        7
      75: iload         7
      77: iload         6
      79: if_icmpge     126
      82: aload         5
      84: iload         7
      86: aaload
      87: astore        8
      89: aload_3
      90: aload         8
      92: invokestatic  #35                 // Method java/util/Arrays.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I
      95: istore        9
      97: iload         9
      99: iflt          120
     102: aload_1
     103: iload         9
     105: aaload
     106: astore        10
     108: iload         4
     110: aload         10
     112: ldc           #29                 // class java/util/regex/Pattern
     114: invokevirtual #36                 // Method java/lang/reflect/Field.getInt:(Ljava/lang/Object;)I
     117: ior
     118: istore        4
     120: iinc          7, 1
     123: goto          75
     126: iload         4
     128: ireturn

  private static int lambda$toPatternFlags$0(java.lang.reflect.Field, java.lang.reflect.Field);
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
       4: aload_1
       5: invokevirtual #34                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
       8: invokevirtual #37                 // Method java/lang/String.compareTo:(Ljava/lang/String;)I
      11: ireturn
}
