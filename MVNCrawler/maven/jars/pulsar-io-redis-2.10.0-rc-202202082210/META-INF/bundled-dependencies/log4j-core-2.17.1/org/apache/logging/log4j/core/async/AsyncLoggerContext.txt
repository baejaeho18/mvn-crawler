Compiled from "AsyncLoggerContext.java"
public class org.apache.logging.log4j.core.async.AsyncLoggerContext extends org.apache.logging.log4j.core.LoggerContext {
  private final org.apache.logging.log4j.core.async.AsyncLoggerDisruptor loggerDisruptor;

  public org.apache.logging.log4j.core.async.AsyncLoggerContext(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/logging/log4j/core/LoggerContext."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: new           #2                  // class org/apache/logging/log4j/core/async/AsyncLoggerDisruptor
       9: dup
      10: aload_1
      11: invokespecial #3                  // Method org/apache/logging/log4j/core/async/AsyncLoggerDisruptor."<init>":(Ljava/lang/String;)V
      14: putfield      #4                  // Field loggerDisruptor:Lorg/apache/logging/log4j/core/async/AsyncLoggerDisruptor;
      17: return

  public org.apache.logging.log4j.core.async.AsyncLoggerContext(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #5                  // Method org/apache/logging/log4j/core/LoggerContext."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
       6: aload_0
       7: new           #2                  // class org/apache/logging/log4j/core/async/AsyncLoggerDisruptor
      10: dup
      11: aload_1
      12: invokespecial #3                  // Method org/apache/logging/log4j/core/async/AsyncLoggerDisruptor."<init>":(Ljava/lang/String;)V
      15: putfield      #4                  // Field loggerDisruptor:Lorg/apache/logging/log4j/core/async/AsyncLoggerDisruptor;
      18: return

  public org.apache.logging.log4j.core.async.AsyncLoggerContext(java.lang.String, java.lang.Object, java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #6                  // Method org/apache/logging/log4j/core/LoggerContext."<init>":(Ljava/lang/String;Ljava/lang/Object;Ljava/net/URI;)V
       7: aload_0
       8: new           #2                  // class org/apache/logging/log4j/core/async/AsyncLoggerDisruptor
      11: dup
      12: aload_1
      13: invokespecial #3                  // Method org/apache/logging/log4j/core/async/AsyncLoggerDisruptor."<init>":(Ljava/lang/String;)V
      16: putfield      #4                  // Field loggerDisruptor:Lorg/apache/logging/log4j/core/async/AsyncLoggerDisruptor;
      19: return

  public org.apache.logging.log4j.core.async.AsyncLoggerContext(java.lang.String, java.lang.Object, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #7                  // Method org/apache/logging/log4j/core/LoggerContext."<init>":(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: new           #2                  // class org/apache/logging/log4j/core/async/AsyncLoggerDisruptor
      11: dup
      12: aload_1
      13: invokespecial #3                  // Method org/apache/logging/log4j/core/async/AsyncLoggerDisruptor."<init>":(Ljava/lang/String;)V
      16: putfield      #4                  // Field loggerDisruptor:Lorg/apache/logging/log4j/core/async/AsyncLoggerDisruptor;
      19: return

  protected org.apache.logging.log4j.core.Logger newInstance(org.apache.logging.log4j.core.LoggerContext, java.lang.String, org.apache.logging.log4j.message.MessageFactory);
    Code:
       0: new           #8                  // class org/apache/logging/log4j/core/async/AsyncLogger
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload_0
       8: getfield      #4                  // Field loggerDisruptor:Lorg/apache/logging/log4j/core/async/AsyncLoggerDisruptor;
      11: invokespecial #9                  // Method org/apache/logging/log4j/core/async/AsyncLogger."<init>":(Lorg/apache/logging/log4j/core/LoggerContext;Ljava/lang/String;Lorg/apache/logging/log4j/message/MessageFactory;Lorg/apache/logging/log4j/core/async/AsyncLoggerDisruptor;)V
      14: areturn

  public void setName(java.lang.String);
    Code:
       0: aload_0
       1: new           #10                 // class java/lang/StringBuilder
       4: dup
       5: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
       8: ldc           #12                 // String AsyncContext[
      10: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_1
      14: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #14                 // String ]
      19: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: invokespecial #16                 // Method org/apache/logging/log4j/core/LoggerContext.setName:(Ljava/lang/String;)V
      28: aload_0
      29: getfield      #4                  // Field loggerDisruptor:Lorg/apache/logging/log4j/core/async/AsyncLoggerDisruptor;
      32: aload_1
      33: invokevirtual #17                 // Method org/apache/logging/log4j/core/async/AsyncLoggerDisruptor.setContextName:(Ljava/lang/String;)V
      36: return

  public void start();
    Code:
       0: aload_0
       1: getfield      #4                  // Field loggerDisruptor:Lorg/apache/logging/log4j/core/async/AsyncLoggerDisruptor;
       4: invokevirtual #18                 // Method org/apache/logging/log4j/core/async/AsyncLoggerDisruptor.start:()V
       7: aload_0
       8: invokespecial #19                 // Method org/apache/logging/log4j/core/LoggerContext.start:()V
      11: return

  public void start(org.apache.logging.log4j.core.config.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #20                 // Method maybeStartHelper:(Lorg/apache/logging/log4j/core/config/Configuration;)V
       5: aload_0
       6: aload_1
       7: invokespecial #21                 // Method org/apache/logging/log4j/core/LoggerContext.start:(Lorg/apache/logging/log4j/core/config/Configuration;)V
      10: return

  private void maybeStartHelper(org.apache.logging.log4j.core.config.Configuration);
    Code:
       0: aload_1
       1: instanceof    #22                 // class org/apache/logging/log4j/core/config/DefaultConfiguration
       4: ifeq          22
       7: invokestatic  #23                 // Method org/apache/logging/log4j/status/StatusLogger.getLogger:()Lorg/apache/logging/log4j/status/StatusLogger;
      10: ldc           #24                 // String [{}] Not starting Disruptor for DefaultConfiguration.
      12: aload_0
      13: invokevirtual #25                 // Method getName:()Ljava/lang/String;
      16: invokevirtual #26                 // Method org/apache/logging/log4j/status/StatusLogger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      19: goto          29
      22: aload_0
      23: getfield      #4                  // Field loggerDisruptor:Lorg/apache/logging/log4j/core/async/AsyncLoggerDisruptor;
      26: invokevirtual #18                 // Method org/apache/logging/log4j/core/async/AsyncLoggerDisruptor.start:()V
      29: return

  public boolean stop(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method setStopping:()V
       4: aload_0
       5: getfield      #4                  // Field loggerDisruptor:Lorg/apache/logging/log4j/core/async/AsyncLoggerDisruptor;
       8: lload_1
       9: aload_3
      10: invokevirtual #28                 // Method org/apache/logging/log4j/core/async/AsyncLoggerDisruptor.stop:(JLjava/util/concurrent/TimeUnit;)Z
      13: pop
      14: aload_0
      15: lload_1
      16: aload_3
      17: invokespecial #29                 // Method org/apache/logging/log4j/core/LoggerContext.stop:(JLjava/util/concurrent/TimeUnit;)Z
      20: pop
      21: iconst_1
      22: ireturn

  public org.apache.logging.log4j.core.jmx.RingBufferAdmin createRingBufferAdmin();
    Code:
       0: aload_0
       1: getfield      #4                  // Field loggerDisruptor:Lorg/apache/logging/log4j/core/async/AsyncLoggerDisruptor;
       4: aload_0
       5: invokevirtual #25                 // Method getName:()Ljava/lang/String;
       8: invokevirtual #30                 // Method org/apache/logging/log4j/core/async/AsyncLoggerDisruptor.createRingBufferAdmin:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/jmx/RingBufferAdmin;
      11: areturn

  public void setUseThreadLocals(boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field loggerDisruptor:Lorg/apache/logging/log4j/core/async/AsyncLoggerDisruptor;
       4: iload_1
       5: invokevirtual #31                 // Method org/apache/logging/log4j/core/async/AsyncLoggerDisruptor.setUseThreadLocals:(Z)V
       8: return
}
