Compiled from "RewriteAppender.java"
public final class org.apache.logging.log4j.core.appender.rewrite.RewriteAppender extends org.apache.logging.log4j.core.appender.AbstractAppender {
  private final org.apache.logging.log4j.core.config.Configuration config;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, org.apache.logging.log4j.core.config.AppenderControl> appenders;

  private final org.apache.logging.log4j.core.appender.rewrite.RewritePolicy rewritePolicy;

  private final org.apache.logging.log4j.core.config.AppenderRef[] appenderRefs;

  private org.apache.logging.log4j.core.appender.rewrite.RewriteAppender(java.lang.String, org.apache.logging.log4j.core.Filter, boolean, org.apache.logging.log4j.core.config.AppenderRef[], org.apache.logging.log4j.core.appender.rewrite.RewritePolicy, org.apache.logging.log4j.core.config.Configuration, org.apache.logging.log4j.core.config.Property[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: iload_3
       5: aload         7
       7: invokespecial #1                  // Method org/apache/logging/log4j/core/appender/AbstractAppender."<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/Filter;Lorg/apache/logging/log4j/core/Layout;Z[Lorg/apache/logging/log4j/core/config/Property;)V
      10: aload_0
      11: new           #2                  // class java/util/concurrent/ConcurrentHashMap
      14: dup
      15: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      18: putfield      #4                  // Field appenders:Ljava/util/concurrent/ConcurrentMap;
      21: aload_0
      22: aload         6
      24: putfield      #5                  // Field config:Lorg/apache/logging/log4j/core/config/Configuration;
      27: aload_0
      28: aload         5
      30: putfield      #6                  // Field rewritePolicy:Lorg/apache/logging/log4j/core/appender/rewrite/RewritePolicy;
      33: aload_0
      34: aload         4
      36: putfield      #7                  // Field appenderRefs:[Lorg/apache/logging/log4j/core/config/AppenderRef;
      39: return

  public void start();
    Code:
       0: aload_0
       1: getfield      #7                  // Field appenderRefs:[Lorg/apache/logging/log4j/core/config/AppenderRef;
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     137
      15: aload_1
      16: iload_3
      17: aaload
      18: astore        4
      20: aload         4
      22: invokevirtual #8                  // Method org/apache/logging/log4j/core/config/AppenderRef.getRef:()Ljava/lang/String;
      25: astore        5
      27: aload_0
      28: getfield      #5                  // Field config:Lorg/apache/logging/log4j/core/config/Configuration;
      31: aload         5
      33: invokeinterface #9,  2            // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.getAppender:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/Appender;
      38: astore        6
      40: aload         6
      42: ifnull        98
      45: aload         6
      47: instanceof    #10                 // class org/apache/logging/log4j/core/appender/AbstractAppender
      50: ifeq          64
      53: aload         6
      55: checkcast     #10                 // class org/apache/logging/log4j/core/appender/AbstractAppender
      58: invokevirtual #11                 // Method org/apache/logging/log4j/core/appender/AbstractAppender.getFilter:()Lorg/apache/logging/log4j/core/Filter;
      61: goto          65
      64: aconst_null
      65: astore        7
      67: aload_0
      68: getfield      #4                  // Field appenders:Ljava/util/concurrent/ConcurrentMap;
      71: aload         5
      73: new           #12                 // class org/apache/logging/log4j/core/config/AppenderControl
      76: dup
      77: aload         6
      79: aload         4
      81: invokevirtual #13                 // Method org/apache/logging/log4j/core/config/AppenderRef.getLevel:()Lorg/apache/logging/log4j/Level;
      84: aload         7
      86: invokespecial #14                 // Method org/apache/logging/log4j/core/config/AppenderControl."<init>":(Lorg/apache/logging/log4j/core/Appender;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/core/Filter;)V
      89: invokeinterface #15,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      94: pop
      95: goto          131
      98: getstatic     #16                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
     101: new           #17                 // class java/lang/StringBuilder
     104: dup
     105: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
     108: ldc           #19                 // String Appender
     110: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload         4
     115: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     118: ldc           #22                 // String  cannot be located. Reference ignored
     120: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     126: invokeinterface #24,  2           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
     131: iinc          3, 1
     134: goto          10
     137: aload_0
     138: invokespecial #25                 // Method org/apache/logging/log4j/core/appender/AbstractAppender.start:()V
     141: return

  public void append(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: getfield      #6                  // Field rewritePolicy:Lorg/apache/logging/log4j/core/appender/rewrite/RewritePolicy;
       4: ifnull        18
       7: aload_0
       8: getfield      #6                  // Field rewritePolicy:Lorg/apache/logging/log4j/core/appender/rewrite/RewritePolicy;
      11: aload_1
      12: invokeinterface #26,  2           // InterfaceMethod org/apache/logging/log4j/core/appender/rewrite/RewritePolicy.rewrite:(Lorg/apache/logging/log4j/core/LogEvent;)Lorg/apache/logging/log4j/core/LogEvent;
      17: astore_1
      18: aload_0
      19: getfield      #4                  // Field appenders:Ljava/util/concurrent/ConcurrentMap;
      22: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      27: invokeinterface #28,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      32: astore_2
      33: aload_2
      34: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          60
      42: aload_2
      43: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: checkcast     #12                 // class org/apache/logging/log4j/core/config/AppenderControl
      51: astore_3
      52: aload_3
      53: aload_1
      54: invokevirtual #31                 // Method org/apache/logging/log4j/core/config/AppenderControl.callAppender:(Lorg/apache/logging/log4j/core/LogEvent;)V
      57: goto          33
      60: return

  public static org.apache.logging.log4j.core.appender.rewrite.RewriteAppender createAppender(java.lang.String, java.lang.String, org.apache.logging.log4j.core.config.AppenderRef[], org.apache.logging.log4j.core.config.Configuration, org.apache.logging.log4j.core.appender.rewrite.RewritePolicy, org.apache.logging.log4j.core.Filter);
    Code:
       0: aload_1
       1: iconst_1
       2: invokestatic  #32                 // Method org/apache/logging/log4j/core/util/Booleans.parseBoolean:(Ljava/lang/String;Z)Z
       5: istore        6
       7: aload_0
       8: ifnonnull     23
      11: getstatic     #16                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      14: ldc           #33                 // String No name provided for RewriteAppender
      16: invokeinterface #24,  2           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
      21: aconst_null
      22: areturn
      23: aload_2
      24: ifnonnull     39
      27: getstatic     #16                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      30: ldc           #34                 // String No appender references defined for RewriteAppender
      32: invokeinterface #24,  2           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
      37: aconst_null
      38: areturn
      39: new           #35                 // class org/apache/logging/log4j/core/appender/rewrite/RewriteAppender
      42: dup
      43: aload_0
      44: aload         5
      46: iload         6
      48: aload_2
      49: aload         4
      51: aload_3
      52: aconst_null
      53: invokespecial #36                 // Method "<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/Filter;Z[Lorg/apache/logging/log4j/core/config/AppenderRef;Lorg/apache/logging/log4j/core/appender/rewrite/RewritePolicy;Lorg/apache/logging/log4j/core/config/Configuration;[Lorg/apache/logging/log4j/core/config/Property;)V
      56: areturn
}
