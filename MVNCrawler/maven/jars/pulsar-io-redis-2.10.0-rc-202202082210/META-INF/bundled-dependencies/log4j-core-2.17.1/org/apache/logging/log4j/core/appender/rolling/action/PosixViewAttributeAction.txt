Compiled from "PosixViewAttributeAction.java"
public class org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction extends org.apache.logging.log4j.core.appender.rolling.action.AbstractPathAction {
  private final java.util.Set<java.nio.file.attribute.PosixFilePermission> filePermissions;

  private final java.lang.String fileOwner;

  private final java.lang.String fileGroup;

  private org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction(java.lang.String, boolean, int, org.apache.logging.log4j.core.appender.rolling.action.PathCondition[], org.apache.logging.log4j.core.lookup.StrSubstitutor, java.util.Set<java.nio.file.attribute.PosixFilePermission>, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload         4
       6: aload         5
       8: invokespecial #5                  // Method org/apache/logging/log4j/core/appender/rolling/action/AbstractPathAction."<init>":(Ljava/lang/String;ZI[Lorg/apache/logging/log4j/core/appender/rolling/action/PathCondition;Lorg/apache/logging/log4j/core/lookup/StrSubstitutor;)V
      11: aload_0
      12: aload         6
      14: putfield      #3                  // Field filePermissions:Ljava/util/Set;
      17: aload_0
      18: aload         7
      20: putfield      #2                  // Field fileOwner:Ljava/lang/String;
      23: aload_0
      24: aload         8
      26: putfield      #1                  // Field fileGroup:Ljava/lang/String;
      29: return

  public static org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction$Builder newBuilder();
    Code:
       0: new           #6                  // class org/apache/logging/log4j/core/appender/rolling/action/PosixViewAttributeAction$Builder
       3: dup
       4: invokespecial #7                  // Method org/apache/logging/log4j/core/appender/rolling/action/PosixViewAttributeAction$Builder."<init>":()V
       7: areturn

  protected java.nio.file.FileVisitor<java.nio.file.Path> createFileVisitor(java.nio.file.Path, java.util.List<org.apache.logging.log4j.core.appender.rolling.action.PathCondition>);
    Code:
       0: new           #8                  // class org/apache/logging/log4j/core/appender/rolling/action/PosixViewAttributeAction$1
       3: dup
       4: aload_0
       5: aload_2
       6: aload_1
       7: invokespecial #9                  // Method org/apache/logging/log4j/core/appender/rolling/action/PosixViewAttributeAction$1."<init>":(Lorg/apache/logging/log4j/core/appender/rolling/action/PosixViewAttributeAction;Ljava/util/List;Ljava/nio/file/Path;)V
      10: areturn

  public java.util.Set<java.nio.file.attribute.PosixFilePermission> getFilePermissions();
    Code:
       0: aload_0
       1: getfield      #3                  // Field filePermissions:Ljava/util/Set;
       4: areturn

  public java.lang.String getFileOwner();
    Code:
       0: aload_0
       1: getfield      #2                  // Field fileOwner:Ljava/lang/String;
       4: areturn

  public java.lang.String getFileGroup();
    Code:
       0: aload_0
       1: getfield      #1                  // Field fileGroup:Ljava/lang/String;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #10                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #12                 // String PosixViewAttributeAction [filePermissions=
       9: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #3                  // Field filePermissions:Ljava/util/Set;
      16: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #15                 // String , fileOwner=
      21: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #2                  // Field fileOwner:Ljava/lang/String;
      28: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #16                 // String , fileGroup=
      33: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #1                  // Field fileGroup:Ljava/lang/String;
      40: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: ldc           #17                 // String , getBasePath()=
      45: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: invokevirtual #18                 // Method getBasePath:()Ljava/nio/file/Path;
      52: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: ldc           #19                 // String , getMaxDepth()=
      57: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: invokevirtual #20                 // Method getMaxDepth:()I
      64: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      67: ldc           #22                 // String , getPathConditions()=
      69: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: invokevirtual #23                 // Method getPathConditions:()Ljava/util/List;
      76: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      79: ldc           #24                 // String ]
      81: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: areturn

  org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction(java.lang.String, boolean, int, org.apache.logging.log4j.core.appender.rolling.action.PathCondition[], org.apache.logging.log4j.core.lookup.StrSubstitutor, java.util.Set, java.lang.String, java.lang.String, org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction$1);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokespecial #4                  // Method "<init>":(Ljava/lang/String;ZI[Lorg/apache/logging/log4j/core/appender/rolling/action/PathCondition;Lorg/apache/logging/log4j/core/lookup/StrSubstitutor;Ljava/util/Set;Ljava/lang/String;Ljava/lang/String;)V
      17: return

  static java.util.Set access$100(org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction);
    Code:
       0: aload_0
       1: getfield      #3                  // Field filePermissions:Ljava/util/Set;
       4: areturn

  static java.lang.String access$200(org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction);
    Code:
       0: aload_0
       1: getfield      #2                  // Field fileOwner:Ljava/lang/String;
       4: areturn

  static java.lang.String access$300(org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction);
    Code:
       0: aload_0
       1: getfield      #1                  // Field fileGroup:Ljava/lang/String;
       4: areturn
}
