Compiled from "MarkerPatternSelector.java"
public class org.apache.logging.log4j.core.layout.MarkerPatternSelector$Builder implements org.apache.logging.log4j.core.util.Builder<org.apache.logging.log4j.core.layout.MarkerPatternSelector> {
  private org.apache.logging.log4j.core.layout.PatternMatch[] properties;

  private java.lang.String defaultPattern;

  private boolean alwaysWriteExceptions;

  private boolean disableAnsi;

  private boolean noConsoleNoAnsi;

  private org.apache.logging.log4j.core.config.Configuration configuration;

  public org.apache.logging.log4j.core.layout.MarkerPatternSelector$Builder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field alwaysWriteExceptions:Z
       9: return

  public org.apache.logging.log4j.core.layout.MarkerPatternSelector build();
    Code:
       0: aload_0
       1: getfield      #3                  // Field defaultPattern:Ljava/lang/String;
       4: ifnonnull     13
       7: aload_0
       8: ldc           #5                  // String %m%n
      10: putfield      #3                  // Field defaultPattern:Ljava/lang/String;
      13: aload_0
      14: getfield      #6                  // Field properties:[Lorg/apache/logging/log4j/core/layout/PatternMatch;
      17: ifnull        28
      20: aload_0
      21: getfield      #6                  // Field properties:[Lorg/apache/logging/log4j/core/layout/PatternMatch;
      24: arraylength
      25: ifne          40
      28: invokestatic  #7                  // Method org/apache/logging/log4j/core/layout/MarkerPatternSelector.access$000:()Lorg/apache/logging/log4j/Logger;
      31: ldc           #8                  // String No marker patterns were provided with PatternMatch
      33: invokeinterface #9,  2            // InterfaceMethod org/apache/logging/log4j/Logger.warn:(Ljava/lang/String;)V
      38: aconst_null
      39: areturn
      40: new           #10                 // class org/apache/logging/log4j/core/layout/MarkerPatternSelector
      43: dup
      44: aload_0
      45: getfield      #6                  // Field properties:[Lorg/apache/logging/log4j/core/layout/PatternMatch;
      48: aload_0
      49: getfield      #3                  // Field defaultPattern:Ljava/lang/String;
      52: aload_0
      53: getfield      #2                  // Field alwaysWriteExceptions:Z
      56: aload_0
      57: getfield      #11                 // Field disableAnsi:Z
      60: aload_0
      61: getfield      #12                 // Field noConsoleNoAnsi:Z
      64: aload_0
      65: getfield      #13                 // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
      68: aconst_null
      69: invokespecial #14                 // Method org/apache/logging/log4j/core/layout/MarkerPatternSelector."<init>":([Lorg/apache/logging/log4j/core/layout/PatternMatch;Ljava/lang/String;ZZZLorg/apache/logging/log4j/core/config/Configuration;Lorg/apache/logging/log4j/core/layout/MarkerPatternSelector$1;)V
      72: areturn

  public org.apache.logging.log4j.core.layout.MarkerPatternSelector$Builder setProperties(org.apache.logging.log4j.core.layout.PatternMatch[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field properties:[Lorg/apache/logging/log4j/core/layout/PatternMatch;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.layout.MarkerPatternSelector$Builder setDefaultPattern(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field defaultPattern:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.layout.MarkerPatternSelector$Builder setAlwaysWriteExceptions(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field alwaysWriteExceptions:Z
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.layout.MarkerPatternSelector$Builder setDisableAnsi(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field disableAnsi:Z
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.layout.MarkerPatternSelector$Builder setNoConsoleNoAnsi(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field noConsoleNoAnsi:Z
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.layout.MarkerPatternSelector$Builder setConfiguration(org.apache.logging.log4j.core.config.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
       5: aload_0
       6: areturn

  public java.lang.Object build();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method build:()Lorg/apache/logging/log4j/core/layout/MarkerPatternSelector;
       4: areturn
}
