Compiled from "Assert.java"
public final class org.apache.logging.log4j.core.util.Assert {
  private org.apache.logging.log4j.core.util.Assert();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean isEmpty(java.lang.Object);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_1
       5: ireturn
       6: aload_0
       7: instanceof    #2                  // class java/lang/CharSequence
      10: ifeq          31
      13: aload_0
      14: checkcast     #2                  // class java/lang/CharSequence
      17: invokeinterface #3,  1            // InterfaceMethod java/lang/CharSequence.length:()I
      22: ifne          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn
      31: aload_0
      32: invokevirtual #4                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      35: invokevirtual #5                  // Method java/lang/Class.isArray:()Z
      38: ifeq          58
      41: aload_0
      42: checkcast     #6                  // class "[Ljava/lang/Object;"
      45: checkcast     #6                  // class "[Ljava/lang/Object;"
      48: arraylength
      49: ifne          56
      52: iconst_1
      53: goto          57
      56: iconst_0
      57: ireturn
      58: aload_0
      59: instanceof    #7                  // class java/util/Collection
      62: ifeq          75
      65: aload_0
      66: checkcast     #7                  // class java/util/Collection
      69: invokeinterface #8,  1            // InterfaceMethod java/util/Collection.isEmpty:()Z
      74: ireturn
      75: aload_0
      76: instanceof    #9                  // class java/util/Map
      79: ifeq          92
      82: aload_0
      83: checkcast     #9                  // class java/util/Map
      86: invokeinterface #10,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      91: ireturn
      92: iconst_0
      93: ireturn

  public static boolean isNonEmpty(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #11                 // Method isEmpty:(Ljava/lang/Object;)Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public static <T> T requireNonEmpty(T);
    Code:
       0: aload_0
       1: ldc           #12                 // String
       3: invokestatic  #13                 // Method requireNonEmpty:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: areturn

  public static <T> T requireNonEmpty(T, java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #11                 // Method isEmpty:(Ljava/lang/Object;)Z
       4: ifeq          16
       7: new           #14                 // class java/lang/IllegalArgumentException
      10: dup
      11: aload_1
      12: invokespecial #15                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: aload_0
      17: areturn

  public static int valueIsAtLeast(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: if_icmpge     41
       5: new           #14                 // class java/lang/IllegalArgumentException
       8: dup
       9: new           #16                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #18                 // String Value should be at least
      18: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: iload_1
      22: invokevirtual #20                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      25: ldc           #21                 // String  but was
      27: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: iload_0
      31: invokevirtual #20                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      34: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokespecial #15                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: iload_0
      42: ireturn
}
