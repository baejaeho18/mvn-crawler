Compiled from "ConsumerConfig.java"
public class org.apache.pulsar.common.functions.ConsumerConfig {
  private java.lang.String schemaType;

  private java.lang.String serdeClassName;

  private boolean isRegexPattern;

  private java.util.Map<java.lang.String, java.lang.String> schemaProperties;

  private java.util.Map<java.lang.String, java.lang.String> consumerProperties;

  private java.lang.Integer receiverQueueSize;

  private org.apache.pulsar.common.functions.CryptoConfig cryptoConfig;

  private boolean poolMessages;

  public org.apache.pulsar.common.functions.ConsumerConfig(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field schemaType:Ljava/lang/String;
       9: return

  private static java.util.Map<java.lang.String, java.lang.String> $default$schemaProperties();
    Code:
       0: new           #5                  // class java/util/HashMap
       3: dup
       4: invokespecial #6                  // Method java/util/HashMap."<init>":()V
       7: areturn

  private static java.util.Map<java.lang.String, java.lang.String> $default$consumerProperties();
    Code:
       0: new           #5                  // class java/util/HashMap
       3: dup
       4: invokespecial #6                  // Method java/util/HashMap."<init>":()V
       7: areturn

  public static org.apache.pulsar.common.functions.ConsumerConfig$ConsumerConfigBuilder builder();
    Code:
       0: new           #7                  // class org/apache/pulsar/common/functions/ConsumerConfig$ConsumerConfigBuilder
       3: dup
       4: invokespecial #8                  // Method org/apache/pulsar/common/functions/ConsumerConfig$ConsumerConfigBuilder."<init>":()V
       7: areturn

  public java.lang.String getSchemaType();
    Code:
       0: aload_0
       1: getfield      #4                  // Field schemaType:Ljava/lang/String;
       4: areturn

  public java.lang.String getSerdeClassName();
    Code:
       0: aload_0
       1: getfield      #9                  // Field serdeClassName:Ljava/lang/String;
       4: areturn

  public boolean isRegexPattern();
    Code:
       0: aload_0
       1: getfield      #10                 // Field isRegexPattern:Z
       4: ireturn

  public java.util.Map<java.lang.String, java.lang.String> getSchemaProperties();
    Code:
       0: aload_0
       1: getfield      #11                 // Field schemaProperties:Ljava/util/Map;
       4: areturn

  public java.util.Map<java.lang.String, java.lang.String> getConsumerProperties();
    Code:
       0: aload_0
       1: getfield      #12                 // Field consumerProperties:Ljava/util/Map;
       4: areturn

  public java.lang.Integer getReceiverQueueSize();
    Code:
       0: aload_0
       1: getfield      #13                 // Field receiverQueueSize:Ljava/lang/Integer;
       4: areturn

  public org.apache.pulsar.common.functions.CryptoConfig getCryptoConfig();
    Code:
       0: aload_0
       1: getfield      #14                 // Field cryptoConfig:Lorg/apache/pulsar/common/functions/CryptoConfig;
       4: areturn

  public boolean isPoolMessages();
    Code:
       0: aload_0
       1: getfield      #15                 // Field poolMessages:Z
       4: ireturn

  public void setSchemaType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field schemaType:Ljava/lang/String;
       5: return

  public void setSerdeClassName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field serdeClassName:Ljava/lang/String;
       5: return

  public void setRegexPattern(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field isRegexPattern:Z
       5: return

  public void setSchemaProperties(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field schemaProperties:Ljava/util/Map;
       5: return

  public void setConsumerProperties(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field consumerProperties:Ljava/util/Map;
       5: return

  public void setReceiverQueueSize(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field receiverQueueSize:Ljava/lang/Integer;
       5: return

  public void setCryptoConfig(org.apache.pulsar.common.functions.CryptoConfig);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field cryptoConfig:Lorg/apache/pulsar/common/functions/CryptoConfig;
       5: return

  public void setPoolMessages(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field poolMessages:Z
       5: return

  public java.lang.String toString();
    Code:
       0: new           #16                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #18                 // String ConsumerConfig(schemaType=
       9: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #20                 // Method getSchemaType:()Ljava/lang/String;
      16: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #21                 // String , serdeClassName=
      21: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #22                 // Method getSerdeClassName:()Ljava/lang/String;
      28: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #23                 // String , isRegexPattern=
      33: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #24                 // Method isRegexPattern:()Z
      40: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      43: ldc           #26                 // String , schemaProperties=
      45: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: invokevirtual #27                 // Method getSchemaProperties:()Ljava/util/Map;
      52: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: ldc           #29                 // String , consumerProperties=
      57: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: invokevirtual #30                 // Method getConsumerProperties:()Ljava/util/Map;
      64: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: ldc           #31                 // String , receiverQueueSize=
      69: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: invokevirtual #32                 // Method getReceiverQueueSize:()Ljava/lang/Integer;
      76: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      79: ldc           #33                 // String , cryptoConfig=
      81: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: invokevirtual #34                 // Method getCryptoConfig:()Lorg/apache/pulsar/common/functions/CryptoConfig;
      88: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      91: ldc           #35                 // String , poolMessages=
      93: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_0
      97: invokevirtual #36                 // Method isPoolMessages:()Z
     100: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     103: ldc           #37                 // String )
     105: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     111: areturn

  public org.apache.pulsar.common.functions.ConsumerConfig();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method $default$schemaProperties:()Ljava/util/Map;
       8: putfield      #11                 // Field schemaProperties:Ljava/util/Map;
      11: aload_0
      12: invokestatic  #1                  // Method $default$consumerProperties:()Ljava/util/Map;
      15: putfield      #12                 // Field consumerProperties:Ljava/util/Map;
      18: return

  public org.apache.pulsar.common.functions.ConsumerConfig(java.lang.String, java.lang.String, boolean, java.util.Map<java.lang.String, java.lang.String>, java.util.Map<java.lang.String, java.lang.String>, java.lang.Integer, org.apache.pulsar.common.functions.CryptoConfig, boolean);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field schemaType:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #9                  // Field serdeClassName:Ljava/lang/String;
      14: aload_0
      15: iload_3
      16: putfield      #10                 // Field isRegexPattern:Z
      19: aload_0
      20: aload         4
      22: putfield      #11                 // Field schemaProperties:Ljava/util/Map;
      25: aload_0
      26: aload         5
      28: putfield      #12                 // Field consumerProperties:Ljava/util/Map;
      31: aload_0
      32: aload         6
      34: putfield      #13                 // Field receiverQueueSize:Ljava/lang/Integer;
      37: aload_0
      38: aload         7
      40: putfield      #14                 // Field cryptoConfig:Lorg/apache/pulsar/common/functions/CryptoConfig;
      43: aload_0
      44: iload         8
      46: putfield      #15                 // Field poolMessages:Z
      49: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #39                 // class org/apache/pulsar/common/functions/ConsumerConfig
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #39                 // class org/apache/pulsar/common/functions/ConsumerConfig
      20: astore_2
      21: aload_2
      22: aload_0
      23: invokevirtual #40                 // Method canEqual:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: invokevirtual #24                 // Method isRegexPattern:()Z
      35: aload_2
      36: invokevirtual #24                 // Method isRegexPattern:()Z
      39: if_icmpeq     44
      42: iconst_0
      43: ireturn
      44: aload_0
      45: invokevirtual #36                 // Method isPoolMessages:()Z
      48: aload_2
      49: invokevirtual #36                 // Method isPoolMessages:()Z
      52: if_icmpeq     57
      55: iconst_0
      56: ireturn
      57: aload_0
      58: invokevirtual #32                 // Method getReceiverQueueSize:()Ljava/lang/Integer;
      61: astore_3
      62: aload_2
      63: invokevirtual #32                 // Method getReceiverQueueSize:()Ljava/lang/Integer;
      66: astore        4
      68: aload_3
      69: ifnonnull     80
      72: aload         4
      74: ifnull        91
      77: goto          89
      80: aload_3
      81: aload         4
      83: invokevirtual #41                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      86: ifne          91
      89: iconst_0
      90: ireturn
      91: aload_0
      92: invokevirtual #20                 // Method getSchemaType:()Ljava/lang/String;
      95: astore        5
      97: aload_2
      98: invokevirtual #20                 // Method getSchemaType:()Ljava/lang/String;
     101: astore        6
     103: aload         5
     105: ifnonnull     116
     108: aload         6
     110: ifnull        128
     113: goto          126
     116: aload         5
     118: aload         6
     120: invokevirtual #41                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     123: ifne          128
     126: iconst_0
     127: ireturn
     128: aload_0
     129: invokevirtual #22                 // Method getSerdeClassName:()Ljava/lang/String;
     132: astore        7
     134: aload_2
     135: invokevirtual #22                 // Method getSerdeClassName:()Ljava/lang/String;
     138: astore        8
     140: aload         7
     142: ifnonnull     153
     145: aload         8
     147: ifnull        165
     150: goto          163
     153: aload         7
     155: aload         8
     157: invokevirtual #41                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     160: ifne          165
     163: iconst_0
     164: ireturn
     165: aload_0
     166: invokevirtual #27                 // Method getSchemaProperties:()Ljava/util/Map;
     169: astore        9
     171: aload_2
     172: invokevirtual #27                 // Method getSchemaProperties:()Ljava/util/Map;
     175: astore        10
     177: aload         9
     179: ifnonnull     190
     182: aload         10
     184: ifnull        202
     187: goto          200
     190: aload         9
     192: aload         10
     194: invokevirtual #41                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     197: ifne          202
     200: iconst_0
     201: ireturn
     202: aload_0
     203: invokevirtual #30                 // Method getConsumerProperties:()Ljava/util/Map;
     206: astore        11
     208: aload_2
     209: invokevirtual #30                 // Method getConsumerProperties:()Ljava/util/Map;
     212: astore        12
     214: aload         11
     216: ifnonnull     227
     219: aload         12
     221: ifnull        239
     224: goto          237
     227: aload         11
     229: aload         12
     231: invokevirtual #41                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     234: ifne          239
     237: iconst_0
     238: ireturn
     239: aload_0
     240: invokevirtual #34                 // Method getCryptoConfig:()Lorg/apache/pulsar/common/functions/CryptoConfig;
     243: astore        13
     245: aload_2
     246: invokevirtual #34                 // Method getCryptoConfig:()Lorg/apache/pulsar/common/functions/CryptoConfig;
     249: astore        14
     251: aload         13
     253: ifnonnull     264
     256: aload         14
     258: ifnull        276
     261: goto          274
     264: aload         13
     266: aload         14
     268: invokevirtual #41                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     271: ifne          276
     274: iconst_0
     275: ireturn
     276: iconst_1
     277: ireturn

  protected boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #39                 // class org/apache/pulsar/common/functions/ConsumerConfig
       4: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: iload_2
       6: bipush        59
       8: imul
       9: aload_0
      10: invokevirtual #24                 // Method isRegexPattern:()Z
      13: ifeq          21
      16: bipush        79
      18: goto          23
      21: bipush        97
      23: iadd
      24: istore_2
      25: iload_2
      26: bipush        59
      28: imul
      29: aload_0
      30: invokevirtual #36                 // Method isPoolMessages:()Z
      33: ifeq          41
      36: bipush        79
      38: goto          43
      41: bipush        97
      43: iadd
      44: istore_2
      45: aload_0
      46: invokevirtual #32                 // Method getReceiverQueueSize:()Ljava/lang/Integer;
      49: astore_3
      50: iload_2
      51: bipush        59
      53: imul
      54: aload_3
      55: ifnonnull     63
      58: bipush        43
      60: goto          67
      63: aload_3
      64: invokevirtual #42                 // Method java/lang/Object.hashCode:()I
      67: iadd
      68: istore_2
      69: aload_0
      70: invokevirtual #20                 // Method getSchemaType:()Ljava/lang/String;
      73: astore        4
      75: iload_2
      76: bipush        59
      78: imul
      79: aload         4
      81: ifnonnull     89
      84: bipush        43
      86: goto          94
      89: aload         4
      91: invokevirtual #42                 // Method java/lang/Object.hashCode:()I
      94: iadd
      95: istore_2
      96: aload_0
      97: invokevirtual #22                 // Method getSerdeClassName:()Ljava/lang/String;
     100: astore        5
     102: iload_2
     103: bipush        59
     105: imul
     106: aload         5
     108: ifnonnull     116
     111: bipush        43
     113: goto          121
     116: aload         5
     118: invokevirtual #42                 // Method java/lang/Object.hashCode:()I
     121: iadd
     122: istore_2
     123: aload_0
     124: invokevirtual #27                 // Method getSchemaProperties:()Ljava/util/Map;
     127: astore        6
     129: iload_2
     130: bipush        59
     132: imul
     133: aload         6
     135: ifnonnull     143
     138: bipush        43
     140: goto          148
     143: aload         6
     145: invokevirtual #42                 // Method java/lang/Object.hashCode:()I
     148: iadd
     149: istore_2
     150: aload_0
     151: invokevirtual #30                 // Method getConsumerProperties:()Ljava/util/Map;
     154: astore        7
     156: iload_2
     157: bipush        59
     159: imul
     160: aload         7
     162: ifnonnull     170
     165: bipush        43
     167: goto          175
     170: aload         7
     172: invokevirtual #42                 // Method java/lang/Object.hashCode:()I
     175: iadd
     176: istore_2
     177: aload_0
     178: invokevirtual #34                 // Method getCryptoConfig:()Lorg/apache/pulsar/common/functions/CryptoConfig;
     181: astore        8
     183: iload_2
     184: bipush        59
     186: imul
     187: aload         8
     189: ifnonnull     197
     192: bipush        43
     194: goto          202
     197: aload         8
     199: invokevirtual #42                 // Method java/lang/Object.hashCode:()I
     202: iadd
     203: istore_2
     204: iload_2
     205: ireturn

  static java.util.Map access$000();
    Code:
       0: invokestatic  #2                  // Method $default$schemaProperties:()Ljava/util/Map;
       3: areturn

  static java.util.Map access$100();
    Code:
       0: invokestatic  #1                  // Method $default$consumerProperties:()Ljava/util/Map;
       3: areturn
}
