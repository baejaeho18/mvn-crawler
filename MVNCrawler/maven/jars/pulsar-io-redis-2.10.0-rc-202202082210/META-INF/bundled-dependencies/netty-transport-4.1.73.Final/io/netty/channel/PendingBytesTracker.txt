Compiled from "PendingBytesTracker.java"
abstract class io.netty.channel.PendingBytesTracker implements io.netty.channel.MessageSizeEstimator$Handle {
  private final io.netty.channel.MessageSizeEstimator$Handle estimatorHandle;

  private io.netty.channel.PendingBytesTracker(io.netty.channel.MessageSizeEstimator$Handle);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #3                  // String estimatorHandle
       8: invokestatic  #4                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #5                  // class io/netty/channel/MessageSizeEstimator$Handle
      14: putfield      #6                  // Field estimatorHandle:Lio/netty/channel/MessageSizeEstimator$Handle;
      17: return

  public final int size(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field estimatorHandle:Lio/netty/channel/MessageSizeEstimator$Handle;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod io/netty/channel/MessageSizeEstimator$Handle.size:(Ljava/lang/Object;)I
      10: ireturn

  public abstract void incrementPendingOutboundBytes(long);

  public abstract void decrementPendingOutboundBytes(long);

  static io.netty.channel.PendingBytesTracker newTracker(io.netty.channel.Channel);
    Code:
       0: aload_0
       1: invokeinterface #8,  1            // InterfaceMethod io/netty/channel/Channel.pipeline:()Lio/netty/channel/ChannelPipeline;
       6: instanceof    #9                  // class io/netty/channel/DefaultChannelPipeline
       9: ifeq          29
      12: new           #10                 // class io/netty/channel/PendingBytesTracker$DefaultChannelPipelinePendingBytesTracker
      15: dup
      16: aload_0
      17: invokeinterface #8,  1            // InterfaceMethod io/netty/channel/Channel.pipeline:()Lio/netty/channel/ChannelPipeline;
      22: checkcast     #9                  // class io/netty/channel/DefaultChannelPipeline
      25: invokespecial #11                 // Method io/netty/channel/PendingBytesTracker$DefaultChannelPipelinePendingBytesTracker."<init>":(Lio/netty/channel/DefaultChannelPipeline;)V
      28: areturn
      29: aload_0
      30: invokeinterface #12,  1           // InterfaceMethod io/netty/channel/Channel.unsafe:()Lio/netty/channel/Channel$Unsafe;
      35: invokeinterface #13,  1           // InterfaceMethod io/netty/channel/Channel$Unsafe.outboundBuffer:()Lio/netty/channel/ChannelOutboundBuffer;
      40: astore_1
      41: aload_0
      42: invokeinterface #14,  1           // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
      47: invokeinterface #15,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getMessageSizeEstimator:()Lio/netty/channel/MessageSizeEstimator;
      52: invokeinterface #16,  1           // InterfaceMethod io/netty/channel/MessageSizeEstimator.newHandle:()Lio/netty/channel/MessageSizeEstimator$Handle;
      57: astore_2
      58: aload_1
      59: ifnonnull     73
      62: new           #17                 // class io/netty/channel/PendingBytesTracker$NoopPendingBytesTracker
      65: dup
      66: aload_2
      67: invokespecial #18                 // Method io/netty/channel/PendingBytesTracker$NoopPendingBytesTracker."<init>":(Lio/netty/channel/MessageSizeEstimator$Handle;)V
      70: goto          82
      73: new           #19                 // class io/netty/channel/PendingBytesTracker$ChannelOutboundBufferPendingBytesTracker
      76: dup
      77: aload_1
      78: aload_2
      79: invokespecial #20                 // Method io/netty/channel/PendingBytesTracker$ChannelOutboundBufferPendingBytesTracker."<init>":(Lio/netty/channel/ChannelOutboundBuffer;Lio/netty/channel/MessageSizeEstimator$Handle;)V
      82: areturn

  io.netty.channel.PendingBytesTracker(io.netty.channel.MessageSizeEstimator$Handle, io.netty.channel.PendingBytesTracker$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lio/netty/channel/MessageSizeEstimator$Handle;)V
       5: return
}
