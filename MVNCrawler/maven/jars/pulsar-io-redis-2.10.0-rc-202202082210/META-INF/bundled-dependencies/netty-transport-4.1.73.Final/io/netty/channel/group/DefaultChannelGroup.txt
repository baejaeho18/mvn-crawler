Compiled from "DefaultChannelGroup.java"
public class io.netty.channel.group.DefaultChannelGroup extends java.util.AbstractSet<io.netty.channel.Channel> implements io.netty.channel.group.ChannelGroup {
  private static final java.util.concurrent.atomic.AtomicInteger nextId;

  private final java.lang.String name;

  private final io.netty.util.concurrent.EventExecutor executor;

  private final java.util.concurrent.ConcurrentMap<io.netty.channel.ChannelId, io.netty.channel.Channel> serverChannels;

  private final java.util.concurrent.ConcurrentMap<io.netty.channel.ChannelId, io.netty.channel.Channel> nonServerChannels;

  private final io.netty.channel.ChannelFutureListener remover;

  private final io.netty.channel.group.VoidChannelGroupFuture voidFuture;

  private final boolean stayClosed;

  private volatile boolean closed;

  public io.netty.channel.group.DefaultChannelGroup(io.netty.util.concurrent.EventExecutor);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #1                  // Method "<init>":(Lio/netty/util/concurrent/EventExecutor;Z)V
       6: return

  public io.netty.channel.group.DefaultChannelGroup(java.lang.String, io.netty.util.concurrent.EventExecutor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokespecial #2                  // Method "<init>":(Ljava/lang/String;Lio/netty/util/concurrent/EventExecutor;Z)V
       7: return

  public io.netty.channel.group.DefaultChannelGroup(io.netty.util.concurrent.EventExecutor, boolean);
    Code:
       0: aload_0
       1: new           #3                  // class java/lang/StringBuilder
       4: dup
       5: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
       8: ldc           #5                  // String group-0x
      10: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: getstatic     #7                  // Field nextId:Ljava/util/concurrent/atomic/AtomicInteger;
      16: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      19: invokestatic  #9                  // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      22: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: aload_1
      29: iload_2
      30: invokespecial #2                  // Method "<init>":(Ljava/lang/String;Lio/netty/util/concurrent/EventExecutor;Z)V
      33: return

  public io.netty.channel.group.DefaultChannelGroup(java.lang.String, io.netty.util.concurrent.EventExecutor, boolean);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method java/util/AbstractSet."<init>":()V
       4: aload_0
       5: invokestatic  #12                 // Method io/netty/util/internal/PlatformDependent.newConcurrentHashMap:()Ljava/util/concurrent/ConcurrentMap;
       8: putfield      #13                 // Field serverChannels:Ljava/util/concurrent/ConcurrentMap;
      11: aload_0
      12: invokestatic  #12                 // Method io/netty/util/internal/PlatformDependent.newConcurrentHashMap:()Ljava/util/concurrent/ConcurrentMap;
      15: putfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
      18: aload_0
      19: new           #15                 // class io/netty/channel/group/DefaultChannelGroup$1
      22: dup
      23: aload_0
      24: invokespecial #16                 // Method io/netty/channel/group/DefaultChannelGroup$1."<init>":(Lio/netty/channel/group/DefaultChannelGroup;)V
      27: putfield      #17                 // Field remover:Lio/netty/channel/ChannelFutureListener;
      30: aload_0
      31: new           #18                 // class io/netty/channel/group/VoidChannelGroupFuture
      34: dup
      35: aload_0
      36: invokespecial #19                 // Method io/netty/channel/group/VoidChannelGroupFuture."<init>":(Lio/netty/channel/group/ChannelGroup;)V
      39: putfield      #20                 // Field voidFuture:Lio/netty/channel/group/VoidChannelGroupFuture;
      42: aload_1
      43: ldc           #21                 // String name
      45: invokestatic  #22                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      48: pop
      49: aload_0
      50: aload_1
      51: putfield      #23                 // Field name:Ljava/lang/String;
      54: aload_0
      55: aload_2
      56: putfield      #24                 // Field executor:Lio/netty/util/concurrent/EventExecutor;
      59: aload_0
      60: iload_3
      61: putfield      #25                 // Field stayClosed:Z
      64: return

  public java.lang.String name();
    Code:
       0: aload_0
       1: getfield      #23                 // Field name:Ljava/lang/String;
       4: areturn

  public io.netty.channel.Channel find(io.netty.channel.ChannelId);
    Code:
       0: aload_0
       1: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #26,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #27                 // class io/netty/channel/Channel
      13: astore_2
      14: aload_2
      15: ifnull        20
      18: aload_2
      19: areturn
      20: aload_0
      21: getfield      #13                 // Field serverChannels:Ljava/util/concurrent/ConcurrentMap;
      24: aload_1
      25: invokeinterface #26,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      30: checkcast     #27                 // class io/netty/channel/Channel
      33: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #28,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.isEmpty:()Z
       9: ifeq          28
      12: aload_0
      13: getfield      #13                 // Field serverChannels:Ljava/util/concurrent/ConcurrentMap;
      16: invokeinterface #28,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.isEmpty:()Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #29,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
       9: aload_0
      10: getfield      #13                 // Field serverChannels:Ljava/util/concurrent/ConcurrentMap;
      13: invokeinterface #29,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
      18: iadd
      19: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #30                 // class io/netty/channel/ServerChannel
       4: ifeq          18
       7: aload_0
       8: getfield      #13                 // Field serverChannels:Ljava/util/concurrent/ConcurrentMap;
      11: aload_1
      12: invokeinterface #31,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsValue:(Ljava/lang/Object;)Z
      17: ireturn
      18: aload_1
      19: instanceof    #27                 // class io/netty/channel/Channel
      22: ifeq          36
      25: aload_0
      26: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
      29: aload_1
      30: invokeinterface #31,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsValue:(Ljava/lang/Object;)Z
      35: ireturn
      36: iconst_0
      37: ireturn

  public boolean add(io.netty.channel.Channel);
    Code:
       0: aload_1
       1: instanceof    #30                 // class io/netty/channel/ServerChannel
       4: ifeq          14
       7: aload_0
       8: getfield      #13                 // Field serverChannels:Ljava/util/concurrent/ConcurrentMap;
      11: goto          18
      14: aload_0
      15: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
      18: astore_2
      19: aload_2
      20: aload_1
      21: invokeinterface #32,  1           // InterfaceMethod io/netty/channel/Channel.id:()Lio/netty/channel/ChannelId;
      26: aload_1
      27: invokeinterface #33,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      32: ifnonnull     39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: istore_3
      41: iload_3
      42: ifeq          61
      45: aload_1
      46: invokeinterface #34,  1           // InterfaceMethod io/netty/channel/Channel.closeFuture:()Lio/netty/channel/ChannelFuture;
      51: aload_0
      52: getfield      #17                 // Field remover:Lio/netty/channel/ChannelFutureListener;
      55: invokeinterface #35,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      60: pop
      61: aload_0
      62: getfield      #25                 // Field stayClosed:Z
      65: ifeq          82
      68: aload_0
      69: getfield      #36                 // Field closed:Z
      72: ifeq          82
      75: aload_1
      76: invokeinterface #37,  1           // InterfaceMethod io/netty/channel/Channel.close:()Lio/netty/channel/ChannelFuture;
      81: pop
      82: iload_3
      83: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_1
       3: instanceof    #38                 // class io/netty/channel/ChannelId
       6: ifeq          44
       9: aload_0
      10: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
      13: aload_1
      14: invokeinterface #39,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #27                 // class io/netty/channel/Channel
      22: astore_2
      23: aload_2
      24: ifnonnull     104
      27: aload_0
      28: getfield      #13                 // Field serverChannels:Ljava/util/concurrent/ConcurrentMap;
      31: aload_1
      32: invokeinterface #39,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #27                 // class io/netty/channel/Channel
      40: astore_2
      41: goto          104
      44: aload_1
      45: instanceof    #27                 // class io/netty/channel/Channel
      48: ifeq          104
      51: aload_1
      52: checkcast     #27                 // class io/netty/channel/Channel
      55: astore_2
      56: aload_2
      57: instanceof    #30                 // class io/netty/channel/ServerChannel
      60: ifeq          85
      63: aload_0
      64: getfield      #13                 // Field serverChannels:Ljava/util/concurrent/ConcurrentMap;
      67: aload_2
      68: invokeinterface #32,  1           // InterfaceMethod io/netty/channel/Channel.id:()Lio/netty/channel/ChannelId;
      73: invokeinterface #39,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      78: checkcast     #27                 // class io/netty/channel/Channel
      81: astore_2
      82: goto          104
      85: aload_0
      86: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
      89: aload_2
      90: invokeinterface #32,  1           // InterfaceMethod io/netty/channel/Channel.id:()Lio/netty/channel/ChannelId;
      95: invokeinterface #39,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     100: checkcast     #27                 // class io/netty/channel/Channel
     103: astore_2
     104: aload_2
     105: ifnonnull     110
     108: iconst_0
     109: ireturn
     110: aload_2
     111: invokeinterface #34,  1           // InterfaceMethod io/netty/channel/Channel.closeFuture:()Lio/netty/channel/ChannelFuture;
     116: aload_0
     117: getfield      #17                 // Field remover:Lio/netty/channel/ChannelFutureListener;
     120: invokeinterface #40,  2           // InterfaceMethod io/netty/channel/ChannelFuture.removeListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
     125: pop
     126: iconst_1
     127: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
       9: aload_0
      10: getfield      #13                 // Field serverChannels:Ljava/util/concurrent/ConcurrentMap;
      13: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
      18: return

  public java.util.Iterator<io.netty.channel.Channel> iterator();
    Code:
       0: new           #42                 // class io/netty/channel/group/CombinedIterator
       3: dup
       4: aload_0
       5: getfield      #13                 // Field serverChannels:Ljava/util/concurrent/ConcurrentMap;
       8: invokeinterface #43,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      13: invokeinterface #44,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      18: aload_0
      19: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
      22: invokeinterface #43,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      27: invokeinterface #44,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      32: invokespecial #45                 // Method io/netty/channel/group/CombinedIterator."<init>":(Ljava/util/Iterator;Ljava/util/Iterator;)V
      35: areturn

  public java.lang.Object[] toArray();
    Code:
       0: new           #46                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: invokevirtual #47                 // Method size:()I
       8: invokespecial #48                 // Method java/util/ArrayList."<init>":(I)V
      11: astore_1
      12: aload_1
      13: aload_0
      14: getfield      #13                 // Field serverChannels:Ljava/util/concurrent/ConcurrentMap;
      17: invokeinterface #43,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      22: invokeinterface #49,  2           // InterfaceMethod java/util/Collection.addAll:(Ljava/util/Collection;)Z
      27: pop
      28: aload_1
      29: aload_0
      30: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
      33: invokeinterface #43,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      38: invokeinterface #49,  2           // InterfaceMethod java/util/Collection.addAll:(Ljava/util/Collection;)Z
      43: pop
      44: aload_1
      45: invokeinterface #50,  1           // InterfaceMethod java/util/Collection.toArray:()[Ljava/lang/Object;
      50: areturn

  public <T> T[] toArray(T[]);
    Code:
       0: new           #46                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: invokevirtual #47                 // Method size:()I
       8: invokespecial #48                 // Method java/util/ArrayList."<init>":(I)V
      11: astore_2
      12: aload_2
      13: aload_0
      14: getfield      #13                 // Field serverChannels:Ljava/util/concurrent/ConcurrentMap;
      17: invokeinterface #43,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      22: invokeinterface #49,  2           // InterfaceMethod java/util/Collection.addAll:(Ljava/util/Collection;)Z
      27: pop
      28: aload_2
      29: aload_0
      30: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
      33: invokeinterface #43,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      38: invokeinterface #49,  2           // InterfaceMethod java/util/Collection.addAll:(Ljava/util/Collection;)Z
      43: pop
      44: aload_2
      45: aload_1
      46: invokeinterface #51,  2           // InterfaceMethod java/util/Collection.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      51: areturn

  public io.netty.channel.group.ChannelGroupFuture close();
    Code:
       0: aload_0
       1: invokestatic  #52                 // Method io/netty/channel/group/ChannelMatchers.all:()Lio/netty/channel/group/ChannelMatcher;
       4: invokevirtual #53                 // Method close:(Lio/netty/channel/group/ChannelMatcher;)Lio/netty/channel/group/ChannelGroupFuture;
       7: areturn

  public io.netty.channel.group.ChannelGroupFuture disconnect();
    Code:
       0: aload_0
       1: invokestatic  #52                 // Method io/netty/channel/group/ChannelMatchers.all:()Lio/netty/channel/group/ChannelMatcher;
       4: invokevirtual #54                 // Method disconnect:(Lio/netty/channel/group/ChannelMatcher;)Lio/netty/channel/group/ChannelGroupFuture;
       7: areturn

  public io.netty.channel.group.ChannelGroupFuture deregister();
    Code:
       0: aload_0
       1: invokestatic  #52                 // Method io/netty/channel/group/ChannelMatchers.all:()Lio/netty/channel/group/ChannelMatcher;
       4: invokevirtual #55                 // Method deregister:(Lio/netty/channel/group/ChannelMatcher;)Lio/netty/channel/group/ChannelGroupFuture;
       7: areturn

  public io.netty.channel.group.ChannelGroupFuture write(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #52                 // Method io/netty/channel/group/ChannelMatchers.all:()Lio/netty/channel/group/ChannelMatcher;
       5: invokevirtual #56                 // Method write:(Ljava/lang/Object;Lio/netty/channel/group/ChannelMatcher;)Lio/netty/channel/group/ChannelGroupFuture;
       8: areturn

  private static java.lang.Object safeDuplicate(java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #57                 // class io/netty/buffer/ByteBuf
       4: ifeq          15
       7: aload_0
       8: checkcast     #57                 // class io/netty/buffer/ByteBuf
      11: invokevirtual #58                 // Method io/netty/buffer/ByteBuf.retainedDuplicate:()Lio/netty/buffer/ByteBuf;
      14: areturn
      15: aload_0
      16: instanceof    #59                 // class io/netty/buffer/ByteBufHolder
      19: ifeq          32
      22: aload_0
      23: checkcast     #59                 // class io/netty/buffer/ByteBufHolder
      26: invokeinterface #60,  1           // InterfaceMethod io/netty/buffer/ByteBufHolder.retainedDuplicate:()Lio/netty/buffer/ByteBufHolder;
      31: areturn
      32: aload_0
      33: invokestatic  #61                 // Method io/netty/util/ReferenceCountUtil.retain:(Ljava/lang/Object;)Ljava/lang/Object;
      36: areturn

  public io.netty.channel.group.ChannelGroupFuture write(java.lang.Object, io.netty.channel.group.ChannelMatcher);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokevirtual #62                 // Method write:(Ljava/lang/Object;Lio/netty/channel/group/ChannelMatcher;Z)Lio/netty/channel/group/ChannelGroupFuture;
       7: areturn

  public io.netty.channel.group.ChannelGroupFuture write(java.lang.Object, io.netty.channel.group.ChannelMatcher, boolean);
    Code:
       0: aload_1
       1: ldc           #63                 // String message
       3: invokestatic  #22                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ldc           #64                 // String matcher
      10: invokestatic  #22                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: iload_3
      15: ifeq          98
      18: aload_0
      19: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
      22: invokeinterface #43,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      27: invokeinterface #44,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      32: astore        5
      34: aload         5
      36: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      41: ifeq          89
      44: aload         5
      46: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      51: checkcast     #27                 // class io/netty/channel/Channel
      54: astore        6
      56: aload_2
      57: aload         6
      59: invokeinterface #67,  2           // InterfaceMethod io/netty/channel/group/ChannelMatcher.matches:(Lio/netty/channel/Channel;)Z
      64: ifeq          86
      67: aload         6
      69: aload_1
      70: invokestatic  #68                 // Method safeDuplicate:(Ljava/lang/Object;)Ljava/lang/Object;
      73: aload         6
      75: invokeinterface #69,  1           // InterfaceMethod io/netty/channel/Channel.voidPromise:()Lio/netty/channel/ChannelPromise;
      80: invokeinterface #70,  3           // InterfaceMethod io/netty/channel/Channel.write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      85: pop
      86: goto          34
      89: aload_0
      90: getfield      #20                 // Field voidFuture:Lio/netty/channel/group/VoidChannelGroupFuture;
      93: astore        4
      95: goto          205
      98: new           #71                 // class java/util/LinkedHashMap
     101: dup
     102: aload_0
     103: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
     106: invokeinterface #29,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
     111: invokespecial #72                 // Method java/util/LinkedHashMap."<init>":(I)V
     114: astore        5
     116: aload_0
     117: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
     120: invokeinterface #43,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
     125: invokeinterface #44,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     130: astore        6
     132: aload         6
     134: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     139: ifeq          189
     142: aload         6
     144: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     149: checkcast     #27                 // class io/netty/channel/Channel
     152: astore        7
     154: aload_2
     155: aload         7
     157: invokeinterface #67,  2           // InterfaceMethod io/netty/channel/group/ChannelMatcher.matches:(Lio/netty/channel/Channel;)Z
     162: ifeq          186
     165: aload         5
     167: aload         7
     169: aload         7
     171: aload_1
     172: invokestatic  #68                 // Method safeDuplicate:(Ljava/lang/Object;)Ljava/lang/Object;
     175: invokeinterface #73,  2           // InterfaceMethod io/netty/channel/Channel.write:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
     180: invokeinterface #74,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     185: pop
     186: goto          132
     189: new           #75                 // class io/netty/channel/group/DefaultChannelGroupFuture
     192: dup
     193: aload_0
     194: aload         5
     196: aload_0
     197: getfield      #24                 // Field executor:Lio/netty/util/concurrent/EventExecutor;
     200: invokespecial #76                 // Method io/netty/channel/group/DefaultChannelGroupFuture."<init>":(Lio/netty/channel/group/ChannelGroup;Ljava/util/Map;Lio/netty/util/concurrent/EventExecutor;)V
     203: astore        4
     205: aload_1
     206: invokestatic  #77                 // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
     209: pop
     210: aload         4
     212: areturn

  public io.netty.channel.group.ChannelGroup flush();
    Code:
       0: aload_0
       1: invokestatic  #52                 // Method io/netty/channel/group/ChannelMatchers.all:()Lio/netty/channel/group/ChannelMatcher;
       4: invokevirtual #78                 // Method flush:(Lio/netty/channel/group/ChannelMatcher;)Lio/netty/channel/group/ChannelGroup;
       7: areturn

  public io.netty.channel.group.ChannelGroupFuture flushAndWrite(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #79                 // Method writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/group/ChannelGroupFuture;
       5: areturn

  public io.netty.channel.group.ChannelGroupFuture writeAndFlush(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #52                 // Method io/netty/channel/group/ChannelMatchers.all:()Lio/netty/channel/group/ChannelMatcher;
       5: invokevirtual #80                 // Method writeAndFlush:(Ljava/lang/Object;Lio/netty/channel/group/ChannelMatcher;)Lio/netty/channel/group/ChannelGroupFuture;
       8: areturn

  public io.netty.channel.group.ChannelGroupFuture disconnect(io.netty.channel.group.ChannelMatcher);
    Code:
       0: aload_1
       1: ldc           #64                 // String matcher
       3: invokestatic  #22                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: new           #71                 // class java/util/LinkedHashMap
      10: dup
      11: aload_0
      12: invokevirtual #47                 // Method size:()I
      15: invokespecial #72                 // Method java/util/LinkedHashMap."<init>":(I)V
      18: astore_2
      19: aload_0
      20: getfield      #13                 // Field serverChannels:Ljava/util/concurrent/ConcurrentMap;
      23: invokeinterface #43,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      28: invokeinterface #44,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      33: astore_3
      34: aload_3
      35: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          84
      43: aload_3
      44: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #27                 // class io/netty/channel/Channel
      52: astore        4
      54: aload_1
      55: aload         4
      57: invokeinterface #67,  2           // InterfaceMethod io/netty/channel/group/ChannelMatcher.matches:(Lio/netty/channel/Channel;)Z
      62: ifeq          81
      65: aload_2
      66: aload         4
      68: aload         4
      70: invokeinterface #81,  1           // InterfaceMethod io/netty/channel/Channel.disconnect:()Lio/netty/channel/ChannelFuture;
      75: invokeinterface #74,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      80: pop
      81: goto          34
      84: aload_0
      85: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
      88: invokeinterface #43,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      93: invokeinterface #44,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      98: astore_3
      99: aload_3
     100: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     105: ifeq          149
     108: aload_3
     109: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     114: checkcast     #27                 // class io/netty/channel/Channel
     117: astore        4
     119: aload_1
     120: aload         4
     122: invokeinterface #67,  2           // InterfaceMethod io/netty/channel/group/ChannelMatcher.matches:(Lio/netty/channel/Channel;)Z
     127: ifeq          146
     130: aload_2
     131: aload         4
     133: aload         4
     135: invokeinterface #81,  1           // InterfaceMethod io/netty/channel/Channel.disconnect:()Lio/netty/channel/ChannelFuture;
     140: invokeinterface #74,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     145: pop
     146: goto          99
     149: new           #75                 // class io/netty/channel/group/DefaultChannelGroupFuture
     152: dup
     153: aload_0
     154: aload_2
     155: aload_0
     156: getfield      #24                 // Field executor:Lio/netty/util/concurrent/EventExecutor;
     159: invokespecial #76                 // Method io/netty/channel/group/DefaultChannelGroupFuture."<init>":(Lio/netty/channel/group/ChannelGroup;Ljava/util/Map;Lio/netty/util/concurrent/EventExecutor;)V
     162: areturn

  public io.netty.channel.group.ChannelGroupFuture close(io.netty.channel.group.ChannelMatcher);
    Code:
       0: aload_1
       1: ldc           #64                 // String matcher
       3: invokestatic  #22                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: new           #71                 // class java/util/LinkedHashMap
      10: dup
      11: aload_0
      12: invokevirtual #47                 // Method size:()I
      15: invokespecial #72                 // Method java/util/LinkedHashMap."<init>":(I)V
      18: astore_2
      19: aload_0
      20: getfield      #25                 // Field stayClosed:Z
      23: ifeq          31
      26: aload_0
      27: iconst_1
      28: putfield      #36                 // Field closed:Z
      31: aload_0
      32: getfield      #13                 // Field serverChannels:Ljava/util/concurrent/ConcurrentMap;
      35: invokeinterface #43,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      40: invokeinterface #44,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      45: astore_3
      46: aload_3
      47: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      52: ifeq          96
      55: aload_3
      56: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      61: checkcast     #27                 // class io/netty/channel/Channel
      64: astore        4
      66: aload_1
      67: aload         4
      69: invokeinterface #67,  2           // InterfaceMethod io/netty/channel/group/ChannelMatcher.matches:(Lio/netty/channel/Channel;)Z
      74: ifeq          93
      77: aload_2
      78: aload         4
      80: aload         4
      82: invokeinterface #37,  1           // InterfaceMethod io/netty/channel/Channel.close:()Lio/netty/channel/ChannelFuture;
      87: invokeinterface #74,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      92: pop
      93: goto          46
      96: aload_0
      97: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
     100: invokeinterface #43,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
     105: invokeinterface #44,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     110: astore_3
     111: aload_3
     112: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     117: ifeq          161
     120: aload_3
     121: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     126: checkcast     #27                 // class io/netty/channel/Channel
     129: astore        4
     131: aload_1
     132: aload         4
     134: invokeinterface #67,  2           // InterfaceMethod io/netty/channel/group/ChannelMatcher.matches:(Lio/netty/channel/Channel;)Z
     139: ifeq          158
     142: aload_2
     143: aload         4
     145: aload         4
     147: invokeinterface #37,  1           // InterfaceMethod io/netty/channel/Channel.close:()Lio/netty/channel/ChannelFuture;
     152: invokeinterface #74,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     157: pop
     158: goto          111
     161: new           #75                 // class io/netty/channel/group/DefaultChannelGroupFuture
     164: dup
     165: aload_0
     166: aload_2
     167: aload_0
     168: getfield      #24                 // Field executor:Lio/netty/util/concurrent/EventExecutor;
     171: invokespecial #76                 // Method io/netty/channel/group/DefaultChannelGroupFuture."<init>":(Lio/netty/channel/group/ChannelGroup;Ljava/util/Map;Lio/netty/util/concurrent/EventExecutor;)V
     174: areturn

  public io.netty.channel.group.ChannelGroupFuture deregister(io.netty.channel.group.ChannelMatcher);
    Code:
       0: aload_1
       1: ldc           #64                 // String matcher
       3: invokestatic  #22                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: new           #71                 // class java/util/LinkedHashMap
      10: dup
      11: aload_0
      12: invokevirtual #47                 // Method size:()I
      15: invokespecial #72                 // Method java/util/LinkedHashMap."<init>":(I)V
      18: astore_2
      19: aload_0
      20: getfield      #13                 // Field serverChannels:Ljava/util/concurrent/ConcurrentMap;
      23: invokeinterface #43,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      28: invokeinterface #44,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      33: astore_3
      34: aload_3
      35: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          84
      43: aload_3
      44: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #27                 // class io/netty/channel/Channel
      52: astore        4
      54: aload_1
      55: aload         4
      57: invokeinterface #67,  2           // InterfaceMethod io/netty/channel/group/ChannelMatcher.matches:(Lio/netty/channel/Channel;)Z
      62: ifeq          81
      65: aload_2
      66: aload         4
      68: aload         4
      70: invokeinterface #82,  1           // InterfaceMethod io/netty/channel/Channel.deregister:()Lio/netty/channel/ChannelFuture;
      75: invokeinterface #74,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      80: pop
      81: goto          34
      84: aload_0
      85: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
      88: invokeinterface #43,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      93: invokeinterface #44,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      98: astore_3
      99: aload_3
     100: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     105: ifeq          149
     108: aload_3
     109: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     114: checkcast     #27                 // class io/netty/channel/Channel
     117: astore        4
     119: aload_1
     120: aload         4
     122: invokeinterface #67,  2           // InterfaceMethod io/netty/channel/group/ChannelMatcher.matches:(Lio/netty/channel/Channel;)Z
     127: ifeq          146
     130: aload_2
     131: aload         4
     133: aload         4
     135: invokeinterface #82,  1           // InterfaceMethod io/netty/channel/Channel.deregister:()Lio/netty/channel/ChannelFuture;
     140: invokeinterface #74,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     145: pop
     146: goto          99
     149: new           #75                 // class io/netty/channel/group/DefaultChannelGroupFuture
     152: dup
     153: aload_0
     154: aload_2
     155: aload_0
     156: getfield      #24                 // Field executor:Lio/netty/util/concurrent/EventExecutor;
     159: invokespecial #76                 // Method io/netty/channel/group/DefaultChannelGroupFuture."<init>":(Lio/netty/channel/group/ChannelGroup;Ljava/util/Map;Lio/netty/util/concurrent/EventExecutor;)V
     162: areturn

  public io.netty.channel.group.ChannelGroup flush(io.netty.channel.group.ChannelMatcher);
    Code:
       0: aload_0
       1: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #43,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
       9: invokeinterface #44,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          54
      24: aload_2
      25: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #27                 // class io/netty/channel/Channel
      33: astore_3
      34: aload_1
      35: aload_3
      36: invokeinterface #67,  2           // InterfaceMethod io/netty/channel/group/ChannelMatcher.matches:(Lio/netty/channel/Channel;)Z
      41: ifeq          51
      44: aload_3
      45: invokeinterface #83,  1           // InterfaceMethod io/netty/channel/Channel.flush:()Lio/netty/channel/Channel;
      50: pop
      51: goto          15
      54: aload_0
      55: areturn

  public io.netty.channel.group.ChannelGroupFuture flushAndWrite(java.lang.Object, io.netty.channel.group.ChannelMatcher);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #80                 // Method writeAndFlush:(Ljava/lang/Object;Lio/netty/channel/group/ChannelMatcher;)Lio/netty/channel/group/ChannelGroupFuture;
       6: areturn

  public io.netty.channel.group.ChannelGroupFuture writeAndFlush(java.lang.Object, io.netty.channel.group.ChannelMatcher);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokevirtual #84                 // Method writeAndFlush:(Ljava/lang/Object;Lio/netty/channel/group/ChannelMatcher;Z)Lio/netty/channel/group/ChannelGroupFuture;
       7: areturn

  public io.netty.channel.group.ChannelGroupFuture writeAndFlush(java.lang.Object, io.netty.channel.group.ChannelMatcher, boolean);
    Code:
       0: aload_1
       1: ldc           #63                 // String message
       3: invokestatic  #22                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: iload_3
       8: ifeq          91
      11: aload_0
      12: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
      15: invokeinterface #43,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      20: invokeinterface #44,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      25: astore        5
      27: aload         5
      29: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          82
      37: aload         5
      39: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #27                 // class io/netty/channel/Channel
      47: astore        6
      49: aload_2
      50: aload         6
      52: invokeinterface #67,  2           // InterfaceMethod io/netty/channel/group/ChannelMatcher.matches:(Lio/netty/channel/Channel;)Z
      57: ifeq          79
      60: aload         6
      62: aload_1
      63: invokestatic  #68                 // Method safeDuplicate:(Ljava/lang/Object;)Ljava/lang/Object;
      66: aload         6
      68: invokeinterface #69,  1           // InterfaceMethod io/netty/channel/Channel.voidPromise:()Lio/netty/channel/ChannelPromise;
      73: invokeinterface #85,  3           // InterfaceMethod io/netty/channel/Channel.writeAndFlush:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      78: pop
      79: goto          27
      82: aload_0
      83: getfield      #20                 // Field voidFuture:Lio/netty/channel/group/VoidChannelGroupFuture;
      86: astore        4
      88: goto          198
      91: new           #71                 // class java/util/LinkedHashMap
      94: dup
      95: aload_0
      96: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
      99: invokeinterface #29,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
     104: invokespecial #72                 // Method java/util/LinkedHashMap."<init>":(I)V
     107: astore        5
     109: aload_0
     110: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
     113: invokeinterface #43,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
     118: invokeinterface #44,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     123: astore        6
     125: aload         6
     127: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     132: ifeq          182
     135: aload         6
     137: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     142: checkcast     #27                 // class io/netty/channel/Channel
     145: astore        7
     147: aload_2
     148: aload         7
     150: invokeinterface #67,  2           // InterfaceMethod io/netty/channel/group/ChannelMatcher.matches:(Lio/netty/channel/Channel;)Z
     155: ifeq          179
     158: aload         5
     160: aload         7
     162: aload         7
     164: aload_1
     165: invokestatic  #68                 // Method safeDuplicate:(Ljava/lang/Object;)Ljava/lang/Object;
     168: invokeinterface #86,  2           // InterfaceMethod io/netty/channel/Channel.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
     173: invokeinterface #74,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     178: pop
     179: goto          125
     182: new           #75                 // class io/netty/channel/group/DefaultChannelGroupFuture
     185: dup
     186: aload_0
     187: aload         5
     189: aload_0
     190: getfield      #24                 // Field executor:Lio/netty/util/concurrent/EventExecutor;
     193: invokespecial #76                 // Method io/netty/channel/group/DefaultChannelGroupFuture."<init>":(Lio/netty/channel/group/ChannelGroup;Ljava/util/Map;Lio/netty/util/concurrent/EventExecutor;)V
     196: astore        4
     198: aload_1
     199: invokestatic  #77                 // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
     202: pop
     203: aload         4
     205: areturn

  public io.netty.channel.group.ChannelGroupFuture newCloseFuture();
    Code:
       0: aload_0
       1: invokestatic  #52                 // Method io/netty/channel/group/ChannelMatchers.all:()Lio/netty/channel/group/ChannelMatcher;
       4: invokevirtual #87                 // Method newCloseFuture:(Lio/netty/channel/group/ChannelMatcher;)Lio/netty/channel/group/ChannelGroupFuture;
       7: areturn

  public io.netty.channel.group.ChannelGroupFuture newCloseFuture(io.netty.channel.group.ChannelMatcher);
    Code:
       0: new           #71                 // class java/util/LinkedHashMap
       3: dup
       4: aload_0
       5: invokevirtual #47                 // Method size:()I
       8: invokespecial #72                 // Method java/util/LinkedHashMap."<init>":(I)V
      11: astore_2
      12: aload_0
      13: getfield      #13                 // Field serverChannels:Ljava/util/concurrent/ConcurrentMap;
      16: invokeinterface #43,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      21: invokeinterface #44,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      26: astore_3
      27: aload_3
      28: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          77
      36: aload_3
      37: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #27                 // class io/netty/channel/Channel
      45: astore        4
      47: aload_1
      48: aload         4
      50: invokeinterface #67,  2           // InterfaceMethod io/netty/channel/group/ChannelMatcher.matches:(Lio/netty/channel/Channel;)Z
      55: ifeq          74
      58: aload_2
      59: aload         4
      61: aload         4
      63: invokeinterface #34,  1           // InterfaceMethod io/netty/channel/Channel.closeFuture:()Lio/netty/channel/ChannelFuture;
      68: invokeinterface #74,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      73: pop
      74: goto          27
      77: aload_0
      78: getfield      #14                 // Field nonServerChannels:Ljava/util/concurrent/ConcurrentMap;
      81: invokeinterface #43,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      86: invokeinterface #44,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      91: astore_3
      92: aload_3
      93: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      98: ifeq          142
     101: aload_3
     102: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     107: checkcast     #27                 // class io/netty/channel/Channel
     110: astore        4
     112: aload_1
     113: aload         4
     115: invokeinterface #67,  2           // InterfaceMethod io/netty/channel/group/ChannelMatcher.matches:(Lio/netty/channel/Channel;)Z
     120: ifeq          139
     123: aload_2
     124: aload         4
     126: aload         4
     128: invokeinterface #34,  1           // InterfaceMethod io/netty/channel/Channel.closeFuture:()Lio/netty/channel/ChannelFuture;
     133: invokeinterface #74,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     138: pop
     139: goto          92
     142: new           #75                 // class io/netty/channel/group/DefaultChannelGroupFuture
     145: dup
     146: aload_0
     147: aload_2
     148: aload_0
     149: getfield      #24                 // Field executor:Lio/netty/util/concurrent/EventExecutor;
     152: invokespecial #76                 // Method io/netty/channel/group/DefaultChannelGroupFuture."<init>":(Lio/netty/channel/group/ChannelGroup;Ljava/util/Map;Lio/netty/util/concurrent/EventExecutor;)V
     155: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #88                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: ireturn

  public int compareTo(io.netty.channel.group.ChannelGroup);
    Code:
       0: aload_0
       1: invokevirtual #89                 // Method name:()Ljava/lang/String;
       4: aload_1
       5: invokeinterface #90,  1           // InterfaceMethod io/netty/channel/group/ChannelGroup.name:()Ljava/lang/String;
      10: invokevirtual #91                 // Method java/lang/String.compareTo:(Ljava/lang/String;)I
      13: istore_2
      14: iload_2
      15: ifeq          20
      18: iload_2
      19: ireturn
      20: aload_0
      21: invokestatic  #88                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      24: aload_1
      25: invokestatic  #88                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      28: isub
      29: ireturn

  public java.lang.String toString();
    Code:
       0: new           #3                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokestatic  #92                 // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Object;)Ljava/lang/String;
      11: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #93                 // String (name:
      16: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: invokevirtual #89                 // Method name:()Ljava/lang/String;
      23: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #94                 // String , size:
      28: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: invokevirtual #47                 // Method size:()I
      35: invokevirtual #95                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      38: bipush        41
      40: invokevirtual #96                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      43: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: areturn

  public boolean add(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #27                 // class io/netty/channel/Channel
       5: invokevirtual #97                 // Method add:(Lio/netty/channel/Channel;)Z
       8: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #98                 // class io/netty/channel/group/ChannelGroup
       5: invokevirtual #99                 // Method compareTo:(Lio/netty/channel/group/ChannelGroup;)I
       8: ireturn

  static {};
    Code:
       0: new           #100                // class java/util/concurrent/atomic/AtomicInteger
       3: dup
       4: invokespecial #101                // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       7: putstatic     #7                  // Field nextId:Ljava/util/concurrent/atomic/AtomicInteger;
      10: return
}
