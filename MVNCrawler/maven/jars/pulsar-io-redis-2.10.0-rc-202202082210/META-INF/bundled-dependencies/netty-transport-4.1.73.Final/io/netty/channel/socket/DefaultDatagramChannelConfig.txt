Compiled from "DefaultDatagramChannelConfig.java"
public class io.netty.channel.socket.DefaultDatagramChannelConfig extends io.netty.channel.DefaultChannelConfig implements io.netty.channel.socket.DatagramChannelConfig {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private final java.net.DatagramSocket javaSocket;

  private volatile boolean activeOnOpen;

  public io.netty.channel.socket.DefaultDatagramChannelConfig(io.netty.channel.socket.DatagramChannel, java.net.DatagramSocket);
    Code:
       0: aload_0
       1: aload_1
       2: new           #1                  // class io/netty/channel/FixedRecvByteBufAllocator
       5: dup
       6: sipush        2048
       9: invokespecial #2                  // Method io/netty/channel/FixedRecvByteBufAllocator."<init>":(I)V
      12: invokespecial #3                  // Method io/netty/channel/DefaultChannelConfig."<init>":(Lio/netty/channel/Channel;Lio/netty/channel/RecvByteBufAllocator;)V
      15: aload_0
      16: aload_2
      17: ldc           #4                  // String javaSocket
      19: invokestatic  #5                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      22: checkcast     #6                  // class java/net/DatagramSocket
      25: putfield      #7                  // Field javaSocket:Ljava/net/DatagramSocket;
      28: return

  protected final java.net.DatagramSocket javaSocket();
    Code:
       0: aload_0
       1: getfield      #7                  // Field javaSocket:Ljava/net/DatagramSocket;
       4: areturn

  public java.util.Map<io.netty.channel.ChannelOption<?>, java.lang.Object> getOptions();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #8                  // Method io/netty/channel/DefaultChannelConfig.getOptions:()Ljava/util/Map;
       5: bipush        10
       7: anewarray     #9                  // class io/netty/channel/ChannelOption
      10: dup
      11: iconst_0
      12: getstatic     #10                 // Field io/netty/channel/ChannelOption.SO_BROADCAST:Lio/netty/channel/ChannelOption;
      15: aastore
      16: dup
      17: iconst_1
      18: getstatic     #11                 // Field io/netty/channel/ChannelOption.SO_RCVBUF:Lio/netty/channel/ChannelOption;
      21: aastore
      22: dup
      23: iconst_2
      24: getstatic     #12                 // Field io/netty/channel/ChannelOption.SO_SNDBUF:Lio/netty/channel/ChannelOption;
      27: aastore
      28: dup
      29: iconst_3
      30: getstatic     #13                 // Field io/netty/channel/ChannelOption.SO_REUSEADDR:Lio/netty/channel/ChannelOption;
      33: aastore
      34: dup
      35: iconst_4
      36: getstatic     #14                 // Field io/netty/channel/ChannelOption.IP_MULTICAST_LOOP_DISABLED:Lio/netty/channel/ChannelOption;
      39: aastore
      40: dup
      41: iconst_5
      42: getstatic     #15                 // Field io/netty/channel/ChannelOption.IP_MULTICAST_ADDR:Lio/netty/channel/ChannelOption;
      45: aastore
      46: dup
      47: bipush        6
      49: getstatic     #16                 // Field io/netty/channel/ChannelOption.IP_MULTICAST_IF:Lio/netty/channel/ChannelOption;
      52: aastore
      53: dup
      54: bipush        7
      56: getstatic     #17                 // Field io/netty/channel/ChannelOption.IP_MULTICAST_TTL:Lio/netty/channel/ChannelOption;
      59: aastore
      60: dup
      61: bipush        8
      63: getstatic     #18                 // Field io/netty/channel/ChannelOption.IP_TOS:Lio/netty/channel/ChannelOption;
      66: aastore
      67: dup
      68: bipush        9
      70: getstatic     #19                 // Field io/netty/channel/ChannelOption.DATAGRAM_CHANNEL_ACTIVE_ON_REGISTRATION:Lio/netty/channel/ChannelOption;
      73: aastore
      74: invokevirtual #20                 // Method getOptions:(Ljava/util/Map;[Lio/netty/channel/ChannelOption;)Ljava/util/Map;
      77: areturn

  public <T> T getOption(io.netty.channel.ChannelOption<T>);
    Code:
       0: aload_1
       1: getstatic     #10                 // Field io/netty/channel/ChannelOption.SO_BROADCAST:Lio/netty/channel/ChannelOption;
       4: if_acmpne     15
       7: aload_0
       8: invokevirtual #21                 // Method isBroadcast:()Z
      11: invokestatic  #22                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      14: areturn
      15: aload_1
      16: getstatic     #11                 // Field io/netty/channel/ChannelOption.SO_RCVBUF:Lio/netty/channel/ChannelOption;
      19: if_acmpne     30
      22: aload_0
      23: invokevirtual #23                 // Method getReceiveBufferSize:()I
      26: invokestatic  #24                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      29: areturn
      30: aload_1
      31: getstatic     #12                 // Field io/netty/channel/ChannelOption.SO_SNDBUF:Lio/netty/channel/ChannelOption;
      34: if_acmpne     45
      37: aload_0
      38: invokevirtual #25                 // Method getSendBufferSize:()I
      41: invokestatic  #24                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      44: areturn
      45: aload_1
      46: getstatic     #13                 // Field io/netty/channel/ChannelOption.SO_REUSEADDR:Lio/netty/channel/ChannelOption;
      49: if_acmpne     60
      52: aload_0
      53: invokevirtual #26                 // Method isReuseAddress:()Z
      56: invokestatic  #22                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      59: areturn
      60: aload_1
      61: getstatic     #14                 // Field io/netty/channel/ChannelOption.IP_MULTICAST_LOOP_DISABLED:Lio/netty/channel/ChannelOption;
      64: if_acmpne     75
      67: aload_0
      68: invokevirtual #27                 // Method isLoopbackModeDisabled:()Z
      71: invokestatic  #22                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      74: areturn
      75: aload_1
      76: getstatic     #15                 // Field io/netty/channel/ChannelOption.IP_MULTICAST_ADDR:Lio/netty/channel/ChannelOption;
      79: if_acmpne     87
      82: aload_0
      83: invokevirtual #28                 // Method getInterface:()Ljava/net/InetAddress;
      86: areturn
      87: aload_1
      88: getstatic     #16                 // Field io/netty/channel/ChannelOption.IP_MULTICAST_IF:Lio/netty/channel/ChannelOption;
      91: if_acmpne     99
      94: aload_0
      95: invokevirtual #29                 // Method getNetworkInterface:()Ljava/net/NetworkInterface;
      98: areturn
      99: aload_1
     100: getstatic     #17                 // Field io/netty/channel/ChannelOption.IP_MULTICAST_TTL:Lio/netty/channel/ChannelOption;
     103: if_acmpne     114
     106: aload_0
     107: invokevirtual #30                 // Method getTimeToLive:()I
     110: invokestatic  #24                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     113: areturn
     114: aload_1
     115: getstatic     #18                 // Field io/netty/channel/ChannelOption.IP_TOS:Lio/netty/channel/ChannelOption;
     118: if_acmpne     129
     121: aload_0
     122: invokevirtual #31                 // Method getTrafficClass:()I
     125: invokestatic  #24                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     128: areturn
     129: aload_1
     130: getstatic     #19                 // Field io/netty/channel/ChannelOption.DATAGRAM_CHANNEL_ACTIVE_ON_REGISTRATION:Lio/netty/channel/ChannelOption;
     133: if_acmpne     144
     136: aload_0
     137: getfield      #32                 // Field activeOnOpen:Z
     140: invokestatic  #22                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     143: areturn
     144: aload_0
     145: aload_1
     146: invokespecial #33                 // Method io/netty/channel/DefaultChannelConfig.getOption:(Lio/netty/channel/ChannelOption;)Ljava/lang/Object;
     149: areturn

  public <T> boolean setOption(io.netty.channel.ChannelOption<T>, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #34                 // Method validate:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)V
       6: aload_1
       7: getstatic     #10                 // Field io/netty/channel/ChannelOption.SO_BROADCAST:Lio/netty/channel/ChannelOption;
      10: if_acmpne     28
      13: aload_0
      14: aload_2
      15: checkcast     #35                 // class java/lang/Boolean
      18: invokevirtual #36                 // Method java/lang/Boolean.booleanValue:()Z
      21: invokevirtual #37                 // Method setBroadcast:(Z)Lio/netty/channel/socket/DatagramChannelConfig;
      24: pop
      25: goto          226
      28: aload_1
      29: getstatic     #11                 // Field io/netty/channel/ChannelOption.SO_RCVBUF:Lio/netty/channel/ChannelOption;
      32: if_acmpne     50
      35: aload_0
      36: aload_2
      37: checkcast     #38                 // class java/lang/Integer
      40: invokevirtual #39                 // Method java/lang/Integer.intValue:()I
      43: invokevirtual #40                 // Method setReceiveBufferSize:(I)Lio/netty/channel/socket/DatagramChannelConfig;
      46: pop
      47: goto          226
      50: aload_1
      51: getstatic     #12                 // Field io/netty/channel/ChannelOption.SO_SNDBUF:Lio/netty/channel/ChannelOption;
      54: if_acmpne     72
      57: aload_0
      58: aload_2
      59: checkcast     #38                 // class java/lang/Integer
      62: invokevirtual #39                 // Method java/lang/Integer.intValue:()I
      65: invokevirtual #41                 // Method setSendBufferSize:(I)Lio/netty/channel/socket/DatagramChannelConfig;
      68: pop
      69: goto          226
      72: aload_1
      73: getstatic     #13                 // Field io/netty/channel/ChannelOption.SO_REUSEADDR:Lio/netty/channel/ChannelOption;
      76: if_acmpne     94
      79: aload_0
      80: aload_2
      81: checkcast     #35                 // class java/lang/Boolean
      84: invokevirtual #36                 // Method java/lang/Boolean.booleanValue:()Z
      87: invokevirtual #42                 // Method setReuseAddress:(Z)Lio/netty/channel/socket/DatagramChannelConfig;
      90: pop
      91: goto          226
      94: aload_1
      95: getstatic     #14                 // Field io/netty/channel/ChannelOption.IP_MULTICAST_LOOP_DISABLED:Lio/netty/channel/ChannelOption;
      98: if_acmpne     116
     101: aload_0
     102: aload_2
     103: checkcast     #35                 // class java/lang/Boolean
     106: invokevirtual #36                 // Method java/lang/Boolean.booleanValue:()Z
     109: invokevirtual #43                 // Method setLoopbackModeDisabled:(Z)Lio/netty/channel/socket/DatagramChannelConfig;
     112: pop
     113: goto          226
     116: aload_1
     117: getstatic     #15                 // Field io/netty/channel/ChannelOption.IP_MULTICAST_ADDR:Lio/netty/channel/ChannelOption;
     120: if_acmpne     135
     123: aload_0
     124: aload_2
     125: checkcast     #44                 // class java/net/InetAddress
     128: invokevirtual #45                 // Method setInterface:(Ljava/net/InetAddress;)Lio/netty/channel/socket/DatagramChannelConfig;
     131: pop
     132: goto          226
     135: aload_1
     136: getstatic     #16                 // Field io/netty/channel/ChannelOption.IP_MULTICAST_IF:Lio/netty/channel/ChannelOption;
     139: if_acmpne     154
     142: aload_0
     143: aload_2
     144: checkcast     #46                 // class java/net/NetworkInterface
     147: invokevirtual #47                 // Method setNetworkInterface:(Ljava/net/NetworkInterface;)Lio/netty/channel/socket/DatagramChannelConfig;
     150: pop
     151: goto          226
     154: aload_1
     155: getstatic     #17                 // Field io/netty/channel/ChannelOption.IP_MULTICAST_TTL:Lio/netty/channel/ChannelOption;
     158: if_acmpne     176
     161: aload_0
     162: aload_2
     163: checkcast     #38                 // class java/lang/Integer
     166: invokevirtual #39                 // Method java/lang/Integer.intValue:()I
     169: invokevirtual #48                 // Method setTimeToLive:(I)Lio/netty/channel/socket/DatagramChannelConfig;
     172: pop
     173: goto          226
     176: aload_1
     177: getstatic     #18                 // Field io/netty/channel/ChannelOption.IP_TOS:Lio/netty/channel/ChannelOption;
     180: if_acmpne     198
     183: aload_0
     184: aload_2
     185: checkcast     #38                 // class java/lang/Integer
     188: invokevirtual #39                 // Method java/lang/Integer.intValue:()I
     191: invokevirtual #49                 // Method setTrafficClass:(I)Lio/netty/channel/socket/DatagramChannelConfig;
     194: pop
     195: goto          226
     198: aload_1
     199: getstatic     #19                 // Field io/netty/channel/ChannelOption.DATAGRAM_CHANNEL_ACTIVE_ON_REGISTRATION:Lio/netty/channel/ChannelOption;
     202: if_acmpne     219
     205: aload_0
     206: aload_2
     207: checkcast     #35                 // class java/lang/Boolean
     210: invokevirtual #36                 // Method java/lang/Boolean.booleanValue:()Z
     213: invokespecial #50                 // Method setActiveOnOpen:(Z)V
     216: goto          226
     219: aload_0
     220: aload_1
     221: aload_2
     222: invokespecial #51                 // Method io/netty/channel/DefaultChannelConfig.setOption:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Z
     225: ireturn
     226: iconst_1
     227: ireturn

  private void setActiveOnOpen(boolean);
    Code:
       0: aload_0
       1: getfield      #52                 // Field channel:Lio/netty/channel/Channel;
       4: invokeinterface #53,  1           // InterfaceMethod io/netty/channel/Channel.isRegistered:()Z
       9: ifeq          22
      12: new           #54                 // class java/lang/IllegalStateException
      15: dup
      16: ldc           #55                 // String Can only changed before channel was registered
      18: invokespecial #56                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_0
      23: iload_1
      24: putfield      #32                 // Field activeOnOpen:Z
      27: return

  public boolean isBroadcast();
    Code:
       0: aload_0
       1: getfield      #7                  // Field javaSocket:Ljava/net/DatagramSocket;
       4: invokevirtual #57                 // Method java/net/DatagramSocket.getBroadcast:()Z
       7: ireturn
       8: astore_1
       9: new           #59                 // class io/netty/channel/ChannelException
      12: dup
      13: aload_1
      14: invokespecial #60                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      17: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/net/SocketException

  public io.netty.channel.socket.DatagramChannelConfig setBroadcast(boolean);
    Code:
       0: iload_1
       1: ifeq          67
       4: aload_0
       5: getfield      #7                  // Field javaSocket:Ljava/net/DatagramSocket;
       8: invokevirtual #61                 // Method java/net/DatagramSocket.getLocalAddress:()Ljava/net/InetAddress;
      11: invokevirtual #62                 // Method java/net/InetAddress.isAnyLocalAddress:()Z
      14: ifne          67
      17: invokestatic  #63                 // Method io/netty/util/internal/PlatformDependent.isWindows:()Z
      20: ifne          67
      23: invokestatic  #64                 // Method io/netty/util/internal/PlatformDependent.maybeSuperUser:()Z
      26: ifne          67
      29: getstatic     #65                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      32: new           #66                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #67                 // Method java/lang/StringBuilder."<init>":()V
      39: ldc           #68                 // String A non-root user can\'t receive a broadcast packet if the socket is not bound to a wildcard address; setting the SO_BROADCAST flag anyway as requested on the socket which is bound to
      41: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_0
      45: getfield      #7                  // Field javaSocket:Ljava/net/DatagramSocket;
      48: invokevirtual #70                 // Method java/net/DatagramSocket.getLocalSocketAddress:()Ljava/net/SocketAddress;
      51: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      54: bipush        46
      56: invokevirtual #72                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      59: invokevirtual #73                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: invokeinterface #74,  2           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;)V
      67: aload_0
      68: getfield      #7                  // Field javaSocket:Ljava/net/DatagramSocket;
      71: iload_1
      72: invokevirtual #75                 // Method java/net/DatagramSocket.setBroadcast:(Z)V
      75: goto          88
      78: astore_2
      79: new           #59                 // class io/netty/channel/ChannelException
      82: dup
      83: aload_2
      84: invokespecial #60                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      87: athrow
      88: aload_0
      89: areturn
    Exception table:
       from    to  target type
           0    75    78   Class java/net/SocketException

  public java.net.InetAddress getInterface();
    Code:
       0: aload_0
       1: getfield      #7                  // Field javaSocket:Ljava/net/DatagramSocket;
       4: instanceof    #76                 // class java/net/MulticastSocket
       7: ifeq          31
      10: aload_0
      11: getfield      #7                  // Field javaSocket:Ljava/net/DatagramSocket;
      14: checkcast     #76                 // class java/net/MulticastSocket
      17: invokevirtual #77                 // Method java/net/MulticastSocket.getInterface:()Ljava/net/InetAddress;
      20: areturn
      21: astore_1
      22: new           #59                 // class io/netty/channel/ChannelException
      25: dup
      26: aload_1
      27: invokespecial #60                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      30: athrow
      31: new           #78                 // class java/lang/UnsupportedOperationException
      34: dup
      35: invokespecial #79                 // Method java/lang/UnsupportedOperationException."<init>":()V
      38: athrow
    Exception table:
       from    to  target type
          10    20    21   Class java/net/SocketException

  public io.netty.channel.socket.DatagramChannelConfig setInterface(java.net.InetAddress);
    Code:
       0: aload_0
       1: getfield      #7                  // Field javaSocket:Ljava/net/DatagramSocket;
       4: instanceof    #76                 // class java/net/MulticastSocket
       7: ifeq          34
      10: aload_0
      11: getfield      #7                  // Field javaSocket:Ljava/net/DatagramSocket;
      14: checkcast     #76                 // class java/net/MulticastSocket
      17: aload_1
      18: invokevirtual #80                 // Method java/net/MulticastSocket.setInterface:(Ljava/net/InetAddress;)V
      21: goto          42
      24: astore_2
      25: new           #59                 // class io/netty/channel/ChannelException
      28: dup
      29: aload_2
      30: invokespecial #60                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      33: athrow
      34: new           #78                 // class java/lang/UnsupportedOperationException
      37: dup
      38: invokespecial #79                 // Method java/lang/UnsupportedOperationException."<init>":()V
      41: athrow
      42: aload_0
      43: areturn
    Exception table:
       from    to  target type
          10    21    24   Class java/net/SocketException

  public boolean isLoopbackModeDisabled();
    Code:
       0: aload_0
       1: getfield      #7                  // Field javaSocket:Ljava/net/DatagramSocket;
       4: instanceof    #76                 // class java/net/MulticastSocket
       7: ifeq          31
      10: aload_0
      11: getfield      #7                  // Field javaSocket:Ljava/net/DatagramSocket;
      14: checkcast     #76                 // class java/net/MulticastSocket
      17: invokevirtual #81                 // Method java/net/MulticastSocket.getLoopbackMode:()Z
      20: ireturn
      21: astore_1
      22: new           #59                 // class io/netty/channel/ChannelException
      25: dup
      26: aload_1
      27: invokespecial #60                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      30: athrow
      31: new           #78                 // class java/lang/UnsupportedOperationException
      34: dup
      35: invokespecial #79                 // Method java/lang/UnsupportedOperationException."<init>":()V
      38: athrow
    Exception table:
       from    to  target type
          10    20    21   Class java/net/SocketException

  public io.netty.channel.socket.DatagramChannelConfig setLoopbackModeDisabled(boolean);
    Code:
       0: aload_0
       1: getfield      #7                  // Field javaSocket:Ljava/net/DatagramSocket;
       4: instanceof    #76                 // class java/net/MulticastSocket
       7: ifeq          34
      10: aload_0
      11: getfield      #7                  // Field javaSocket:Ljava/net/DatagramSocket;
      14: checkcast     #76                 // class java/net/MulticastSocket
      17: iload_1
      18: invokevirtual #82                 // Method java/net/MulticastSocket.setLoopbackMode:(Z)V
      21: goto          42
      24: astore_2
      25: new           #59                 // class io/netty/channel/ChannelException
      28: dup
      29: aload_2
      30: invokespecial #60                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      33: athrow
      34: new           #78                 // class java/lang/UnsupportedOperationException
      37: dup
      38: invokespecial #79                 // Method java/lang/UnsupportedOperationException."<init>":()V
      41: athrow
      42: aload_0
      43: areturn
    Exception table:
       from    to  target type
          10    21    24   Class java/net/SocketException

  public java.net.NetworkInterface getNetworkInterface();
    Code:
       0: aload_0
       1: getfield      #7                  // Field javaSocket:Ljava/net/DatagramSocket;
       4: instanceof    #76                 // class java/net/MulticastSocket
       7: ifeq          31
      10: aload_0
      11: getfield      #7                  // Field javaSocket:Ljava/net/DatagramSocket;
      14: checkcast     #76                 // class java/net/MulticastSocket
      17: invokevirtual #83                 // Method java/net/MulticastSocket.getNetworkInterface:()Ljava/net/NetworkInterface;
      20: areturn
      21: astore_1
      22: new           #59                 // class io/netty/channel/ChannelException
      25: dup
      26: aload_1
      27: invokespecial #60                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      30: athrow
      31: new           #78                 // class java/lang/UnsupportedOperationException
      34: dup
      35: invokespecial #79                 // Method java/lang/UnsupportedOperationException."<init>":()V
      38: athrow
    Exception table:
       from    to  target type
          10    20    21   Class java/net/SocketException

  public io.netty.channel.socket.DatagramChannelConfig setNetworkInterface(java.net.NetworkInterface);
    Code:
       0: aload_0
       1: getfield      #7                  // Field javaSocket:Ljava/net/DatagramSocket;
       4: instanceof    #76                 // class java/net/MulticastSocket
       7: ifeq          34
      10: aload_0
      11: getfield      #7                  // Field javaSocket:Ljava/net/DatagramSocket;
      14: checkcast     #76                 // class java/net/MulticastSocket
      17: aload_1
      18: invokevirtual #84                 // Method java/net/MulticastSocket.setNetworkInterface:(Ljava/net/NetworkInterface;)V
      21: goto          42
      24: astore_2
      25: new           #59                 // class io/netty/channel/ChannelException
      28: dup
      29: aload_2
      30: invokespecial #60                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      33: athrow
      34: new           #78                 // class java/lang/UnsupportedOperationException
      37: dup
      38: invokespecial #79                 // Method java/lang/UnsupportedOperationException."<init>":()V
      41: athrow
      42: aload_0
      43: areturn
    Exception table:
       from    to  target type
          10    21    24   Class java/net/SocketException

  public boolean isReuseAddress();
    Code:
       0: aload_0
       1: getfield      #7                  // Field javaSocket:Ljava/net/DatagramSocket;
       4: invokevirtual #85                 // Method java/net/DatagramSocket.getReuseAddress:()Z
       7: ireturn
       8: astore_1
       9: new           #59                 // class io/netty/channel/ChannelException
      12: dup
      13: aload_1
      14: invokespecial #60                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      17: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/net/SocketException

  public io.netty.channel.socket.DatagramChannelConfig setReuseAddress(boolean);
    Code:
       0: aload_0
       1: getfield      #7                  // Field javaSocket:Ljava/net/DatagramSocket;
       4: iload_1
       5: invokevirtual #86                 // Method java/net/DatagramSocket.setReuseAddress:(Z)V
       8: goto          21
      11: astore_2
      12: new           #59                 // class io/netty/channel/ChannelException
      15: dup
      16: aload_2
      17: invokespecial #60                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      20: athrow
      21: aload_0
      22: areturn
    Exception table:
       from    to  target type
           0     8    11   Class java/net/SocketException

  public int getReceiveBufferSize();
    Code:
       0: aload_0
       1: getfield      #7                  // Field javaSocket:Ljava/net/DatagramSocket;
       4: invokevirtual #87                 // Method java/net/DatagramSocket.getReceiveBufferSize:()I
       7: ireturn
       8: astore_1
       9: new           #59                 // class io/netty/channel/ChannelException
      12: dup
      13: aload_1
      14: invokespecial #60                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      17: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/net/SocketException

  public io.netty.channel.socket.DatagramChannelConfig setReceiveBufferSize(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field javaSocket:Ljava/net/DatagramSocket;
       4: iload_1
       5: invokevirtual #88                 // Method java/net/DatagramSocket.setReceiveBufferSize:(I)V
       8: goto          21
      11: astore_2
      12: new           #59                 // class io/netty/channel/ChannelException
      15: dup
      16: aload_2
      17: invokespecial #60                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      20: athrow
      21: aload_0
      22: areturn
    Exception table:
       from    to  target type
           0     8    11   Class java/net/SocketException

  public int getSendBufferSize();
    Code:
       0: aload_0
       1: getfield      #7                  // Field javaSocket:Ljava/net/DatagramSocket;
       4: invokevirtual #89                 // Method java/net/DatagramSocket.getSendBufferSize:()I
       7: ireturn
       8: astore_1
       9: new           #59                 // class io/netty/channel/ChannelException
      12: dup
      13: aload_1
      14: invokespecial #60                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      17: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/net/SocketException

  public io.netty.channel.socket.DatagramChannelConfig setSendBufferSize(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field javaSocket:Ljava/net/DatagramSocket;
       4: iload_1
       5: invokevirtual #90                 // Method java/net/DatagramSocket.setSendBufferSize:(I)V
       8: goto          21
      11: astore_2
      12: new           #59                 // class io/netty/channel/ChannelException
      15: dup
      16: aload_2
      17: invokespecial #60                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      20: athrow
      21: aload_0
      22: areturn
    Exception table:
       from    to  target type
           0     8    11   Class java/net/SocketException

  public int getTimeToLive();
    Code:
       0: aload_0
       1: getfield      #7                  // Field javaSocket:Ljava/net/DatagramSocket;
       4: instanceof    #76                 // class java/net/MulticastSocket
       7: ifeq          31
      10: aload_0
      11: getfield      #7                  // Field javaSocket:Ljava/net/DatagramSocket;
      14: checkcast     #76                 // class java/net/MulticastSocket
      17: invokevirtual #91                 // Method java/net/MulticastSocket.getTimeToLive:()I
      20: ireturn
      21: astore_1
      22: new           #59                 // class io/netty/channel/ChannelException
      25: dup
      26: aload_1
      27: invokespecial #60                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      30: athrow
      31: new           #78                 // class java/lang/UnsupportedOperationException
      34: dup
      35: invokespecial #79                 // Method java/lang/UnsupportedOperationException."<init>":()V
      38: athrow
    Exception table:
       from    to  target type
          10    20    21   Class java/io/IOException

  public io.netty.channel.socket.DatagramChannelConfig setTimeToLive(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field javaSocket:Ljava/net/DatagramSocket;
       4: instanceof    #76                 // class java/net/MulticastSocket
       7: ifeq          34
      10: aload_0
      11: getfield      #7                  // Field javaSocket:Ljava/net/DatagramSocket;
      14: checkcast     #76                 // class java/net/MulticastSocket
      17: iload_1
      18: invokevirtual #93                 // Method java/net/MulticastSocket.setTimeToLive:(I)V
      21: goto          42
      24: astore_2
      25: new           #59                 // class io/netty/channel/ChannelException
      28: dup
      29: aload_2
      30: invokespecial #60                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      33: athrow
      34: new           #78                 // class java/lang/UnsupportedOperationException
      37: dup
      38: invokespecial #79                 // Method java/lang/UnsupportedOperationException."<init>":()V
      41: athrow
      42: aload_0
      43: areturn
    Exception table:
       from    to  target type
          10    21    24   Class java/io/IOException

  public int getTrafficClass();
    Code:
       0: aload_0
       1: getfield      #7                  // Field javaSocket:Ljava/net/DatagramSocket;
       4: invokevirtual #94                 // Method java/net/DatagramSocket.getTrafficClass:()I
       7: ireturn
       8: astore_1
       9: new           #59                 // class io/netty/channel/ChannelException
      12: dup
      13: aload_1
      14: invokespecial #60                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      17: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/net/SocketException

  public io.netty.channel.socket.DatagramChannelConfig setTrafficClass(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field javaSocket:Ljava/net/DatagramSocket;
       4: iload_1
       5: invokevirtual #95                 // Method java/net/DatagramSocket.setTrafficClass:(I)V
       8: goto          21
      11: astore_2
      12: new           #59                 // class io/netty/channel/ChannelException
      15: dup
      16: aload_2
      17: invokespecial #60                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      20: athrow
      21: aload_0
      22: areturn
    Exception table:
       from    to  target type
           0     8    11   Class java/net/SocketException

  public io.netty.channel.socket.DatagramChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #96                 // Method io/netty/channel/DefaultChannelConfig.setWriteSpinCount:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.socket.DatagramChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #97                 // Method io/netty/channel/DefaultChannelConfig.setConnectTimeoutMillis:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.socket.DatagramChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #98                 // Method io/netty/channel/DefaultChannelConfig.setMaxMessagesPerRead:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.socket.DatagramChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #99                 // Method io/netty/channel/DefaultChannelConfig.setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.socket.DatagramChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #100                // Method io/netty/channel/DefaultChannelConfig.setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.socket.DatagramChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #101                // Method io/netty/channel/DefaultChannelConfig.setAutoRead:(Z)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.socket.DatagramChannelConfig setAutoClose(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #102                // Method io/netty/channel/DefaultChannelConfig.setAutoClose:(Z)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.socket.DatagramChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #103                // Method io/netty/channel/DefaultChannelConfig.setWriteBufferHighWaterMark:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.socket.DatagramChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #104                // Method io/netty/channel/DefaultChannelConfig.setWriteBufferLowWaterMark:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.socket.DatagramChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #105                // Method io/netty/channel/DefaultChannelConfig.setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.socket.DatagramChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #106                // Method io/netty/channel/DefaultChannelConfig.setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.socket.DatagramChannelConfig setMaxMessagesPerWrite(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #107                // Method io/netty/channel/DefaultChannelConfig.setMaxMessagesPerWrite:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.ChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #108                // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/socket/DatagramChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #109                // Method setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/socket/DatagramChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #110                // Method setWriteBufferLowWaterMark:(I)Lio/netty/channel/socket/DatagramChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #111                // Method setWriteBufferHighWaterMark:(I)Lio/netty/channel/socket/DatagramChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAutoClose(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #112                // Method setAutoClose:(Z)Lio/netty/channel/socket/DatagramChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #113                // Method setAutoRead:(Z)Lio/netty/channel/socket/DatagramChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #114                // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/socket/DatagramChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #115                // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/socket/DatagramChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #116                // Method setWriteSpinCount:(I)Lio/netty/channel/socket/DatagramChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setMaxMessagesPerWrite(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #117                // Method setMaxMessagesPerWrite:(I)Lio/netty/channel/socket/DatagramChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #118                // Method setMaxMessagesPerRead:(I)Lio/netty/channel/socket/DatagramChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #119                // Method setConnectTimeoutMillis:(I)Lio/netty/channel/socket/DatagramChannelConfig;
       5: areturn

  static {};
    Code:
       0: ldc           #120                // class io/netty/channel/socket/DefaultDatagramChannelConfig
       2: invokestatic  #121                // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
       5: putstatic     #65                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       8: return
}
