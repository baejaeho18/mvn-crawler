Compiled from "LocalChannel.java"
public class io.netty.channel.local.LocalChannel extends io.netty.channel.AbstractChannel {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<io.netty.channel.local.LocalChannel, io.netty.util.concurrent.Future> FINISH_READ_FUTURE_UPDATER;

  private static final io.netty.channel.ChannelMetadata METADATA;

  private static final int MAX_READER_STACK_DEPTH;

  private final io.netty.channel.ChannelConfig config;

  final java.util.Queue<java.lang.Object> inboundBuffer;

  private final java.lang.Runnable readTask;

  private final java.lang.Runnable shutdownHook;

  private volatile io.netty.channel.local.LocalChannel$State state;

  private volatile io.netty.channel.local.LocalChannel peer;

  private volatile io.netty.channel.local.LocalAddress localAddress;

  private volatile io.netty.channel.local.LocalAddress remoteAddress;

  private volatile io.netty.channel.ChannelPromise connectPromise;

  private volatile boolean readInProgress;

  private volatile boolean writeInProgress;

  private volatile io.netty.util.concurrent.Future<?> finishReadFuture;

  static final boolean $assertionsDisabled;

  public io.netty.channel.local.LocalChannel();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #7                  // Method io/netty/channel/AbstractChannel."<init>":(Lio/netty/channel/Channel;)V
       5: aload_0
       6: new           #8                  // class io/netty/channel/DefaultChannelConfig
       9: dup
      10: aload_0
      11: invokespecial #9                  // Method io/netty/channel/DefaultChannelConfig."<init>":(Lio/netty/channel/Channel;)V
      14: putfield      #10                 // Field config:Lio/netty/channel/ChannelConfig;
      17: aload_0
      18: invokestatic  #11                 // Method io/netty/util/internal/PlatformDependent.newSpscQueue:()Ljava/util/Queue;
      21: putfield      #12                 // Field inboundBuffer:Ljava/util/Queue;
      24: aload_0
      25: new           #13                 // class io/netty/channel/local/LocalChannel$1
      28: dup
      29: aload_0
      30: invokespecial #14                 // Method io/netty/channel/local/LocalChannel$1."<init>":(Lio/netty/channel/local/LocalChannel;)V
      33: putfield      #15                 // Field readTask:Ljava/lang/Runnable;
      36: aload_0
      37: new           #16                 // class io/netty/channel/local/LocalChannel$2
      40: dup
      41: aload_0
      42: invokespecial #17                 // Method io/netty/channel/local/LocalChannel$2."<init>":(Lio/netty/channel/local/LocalChannel;)V
      45: putfield      #18                 // Field shutdownHook:Ljava/lang/Runnable;
      48: aload_0
      49: invokevirtual #19                 // Method config:()Lio/netty/channel/ChannelConfig;
      52: new           #20                 // class io/netty/channel/PreferHeapByteBufAllocator
      55: dup
      56: aload_0
      57: getfield      #10                 // Field config:Lio/netty/channel/ChannelConfig;
      60: invokeinterface #21,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getAllocator:()Lio/netty/buffer/ByteBufAllocator;
      65: invokespecial #22                 // Method io/netty/channel/PreferHeapByteBufAllocator."<init>":(Lio/netty/buffer/ByteBufAllocator;)V
      68: invokeinterface #23,  2           // InterfaceMethod io/netty/channel/ChannelConfig.setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/ChannelConfig;
      73: pop
      74: return

  protected io.netty.channel.local.LocalChannel(io.netty.channel.local.LocalServerChannel, io.netty.channel.local.LocalChannel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method io/netty/channel/AbstractChannel."<init>":(Lio/netty/channel/Channel;)V
       5: aload_0
       6: new           #8                  // class io/netty/channel/DefaultChannelConfig
       9: dup
      10: aload_0
      11: invokespecial #9                  // Method io/netty/channel/DefaultChannelConfig."<init>":(Lio/netty/channel/Channel;)V
      14: putfield      #10                 // Field config:Lio/netty/channel/ChannelConfig;
      17: aload_0
      18: invokestatic  #11                 // Method io/netty/util/internal/PlatformDependent.newSpscQueue:()Ljava/util/Queue;
      21: putfield      #12                 // Field inboundBuffer:Ljava/util/Queue;
      24: aload_0
      25: new           #13                 // class io/netty/channel/local/LocalChannel$1
      28: dup
      29: aload_0
      30: invokespecial #14                 // Method io/netty/channel/local/LocalChannel$1."<init>":(Lio/netty/channel/local/LocalChannel;)V
      33: putfield      #15                 // Field readTask:Ljava/lang/Runnable;
      36: aload_0
      37: new           #16                 // class io/netty/channel/local/LocalChannel$2
      40: dup
      41: aload_0
      42: invokespecial #17                 // Method io/netty/channel/local/LocalChannel$2."<init>":(Lio/netty/channel/local/LocalChannel;)V
      45: putfield      #18                 // Field shutdownHook:Ljava/lang/Runnable;
      48: aload_0
      49: invokevirtual #19                 // Method config:()Lio/netty/channel/ChannelConfig;
      52: new           #20                 // class io/netty/channel/PreferHeapByteBufAllocator
      55: dup
      56: aload_0
      57: getfield      #10                 // Field config:Lio/netty/channel/ChannelConfig;
      60: invokeinterface #21,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getAllocator:()Lio/netty/buffer/ByteBufAllocator;
      65: invokespecial #22                 // Method io/netty/channel/PreferHeapByteBufAllocator."<init>":(Lio/netty/buffer/ByteBufAllocator;)V
      68: invokeinterface #23,  2           // InterfaceMethod io/netty/channel/ChannelConfig.setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/ChannelConfig;
      73: pop
      74: aload_0
      75: aload_2
      76: putfield      #1                  // Field peer:Lio/netty/channel/local/LocalChannel;
      79: aload_0
      80: aload_1
      81: invokevirtual #24                 // Method io/netty/channel/local/LocalServerChannel.localAddress:()Lio/netty/channel/local/LocalAddress;
      84: putfield      #25                 // Field localAddress:Lio/netty/channel/local/LocalAddress;
      87: aload_0
      88: aload_2
      89: invokevirtual #26                 // Method localAddress:()Lio/netty/channel/local/LocalAddress;
      92: putfield      #27                 // Field remoteAddress:Lio/netty/channel/local/LocalAddress;
      95: return

  public io.netty.channel.ChannelMetadata metadata();
    Code:
       0: getstatic     #28                 // Field METADATA:Lio/netty/channel/ChannelMetadata;
       3: areturn

  public io.netty.channel.ChannelConfig config();
    Code:
       0: aload_0
       1: getfield      #10                 // Field config:Lio/netty/channel/ChannelConfig;
       4: areturn

  public io.netty.channel.local.LocalServerChannel parent();
    Code:
       0: aload_0
       1: invokespecial #29                 // Method io/netty/channel/AbstractChannel.parent:()Lio/netty/channel/Channel;
       4: checkcast     #30                 // class io/netty/channel/local/LocalServerChannel
       7: areturn

  public io.netty.channel.local.LocalAddress localAddress();
    Code:
       0: aload_0
       1: invokespecial #31                 // Method io/netty/channel/AbstractChannel.localAddress:()Ljava/net/SocketAddress;
       4: checkcast     #32                 // class io/netty/channel/local/LocalAddress
       7: areturn

  public io.netty.channel.local.LocalAddress remoteAddress();
    Code:
       0: aload_0
       1: invokespecial #33                 // Method io/netty/channel/AbstractChannel.remoteAddress:()Ljava/net/SocketAddress;
       4: checkcast     #32                 // class io/netty/channel/local/LocalAddress
       7: areturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:Lio/netty/channel/local/LocalChannel$State;
       4: getstatic     #34                 // Field io/netty/channel/local/LocalChannel$State.CLOSED:Lio/netty/channel/local/LocalChannel$State;
       7: if_acmpeq     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isActive();
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:Lio/netty/channel/local/LocalChannel$State;
       4: getstatic     #35                 // Field io/netty/channel/local/LocalChannel$State.CONNECTED:Lio/netty/channel/local/LocalChannel$State;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  protected io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe();
    Code:
       0: new           #36                 // class io/netty/channel/local/LocalChannel$LocalUnsafe
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #37                 // Method io/netty/channel/local/LocalChannel$LocalUnsafe."<init>":(Lio/netty/channel/local/LocalChannel;Lio/netty/channel/local/LocalChannel$1;)V
       9: areturn

  protected boolean isCompatible(io.netty.channel.EventLoop);
    Code:
       0: aload_1
       1: instanceof    #38                 // class io/netty/channel/SingleThreadEventLoop
       4: ireturn

  protected java.net.SocketAddress localAddress0();
    Code:
       0: aload_0
       1: getfield      #25                 // Field localAddress:Lio/netty/channel/local/LocalAddress;
       4: areturn

  protected java.net.SocketAddress remoteAddress0();
    Code:
       0: aload_0
       1: getfield      #27                 // Field remoteAddress:Lio/netty/channel/local/LocalAddress;
       4: areturn

  protected void doRegister() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #1                  // Field peer:Lio/netty/channel/local/LocalChannel;
       4: ifnull        73
       7: aload_0
       8: invokevirtual #39                 // Method parent:()Lio/netty/channel/local/LocalServerChannel;
      11: ifnull        73
      14: aload_0
      15: getfield      #1                  // Field peer:Lio/netty/channel/local/LocalChannel;
      18: astore_1
      19: aload_0
      20: getstatic     #35                 // Field io/netty/channel/local/LocalChannel$State.CONNECTED:Lio/netty/channel/local/LocalChannel$State;
      23: putfield      #2                  // Field state:Lio/netty/channel/local/LocalChannel$State;
      26: aload_1
      27: aload_0
      28: invokevirtual #39                 // Method parent:()Lio/netty/channel/local/LocalServerChannel;
      31: ifnonnull     38
      34: aconst_null
      35: goto          45
      38: aload_0
      39: invokevirtual #39                 // Method parent:()Lio/netty/channel/local/LocalServerChannel;
      42: invokevirtual #24                 // Method io/netty/channel/local/LocalServerChannel.localAddress:()Lio/netty/channel/local/LocalAddress;
      45: putfield      #27                 // Field remoteAddress:Lio/netty/channel/local/LocalAddress;
      48: aload_1
      49: getstatic     #35                 // Field io/netty/channel/local/LocalChannel$State.CONNECTED:Lio/netty/channel/local/LocalChannel$State;
      52: putfield      #2                  // Field state:Lio/netty/channel/local/LocalChannel$State;
      55: aload_1
      56: invokevirtual #40                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      59: new           #41                 // class io/netty/channel/local/LocalChannel$3
      62: dup
      63: aload_0
      64: aload_1
      65: invokespecial #42                 // Method io/netty/channel/local/LocalChannel$3."<init>":(Lio/netty/channel/local/LocalChannel;Lio/netty/channel/local/LocalChannel;)V
      68: invokeinterface #43,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      73: aload_0
      74: invokevirtual #40                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      77: checkcast     #44                 // class io/netty/util/concurrent/SingleThreadEventExecutor
      80: aload_0
      81: getfield      #18                 // Field shutdownHook:Ljava/lang/Runnable;
      84: invokevirtual #45                 // Method io/netty/util/concurrent/SingleThreadEventExecutor.addShutdownHook:(Ljava/lang/Runnable;)V
      87: return

  protected void doBind(java.net.SocketAddress) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: getfield      #25                 // Field localAddress:Lio/netty/channel/local/LocalAddress;
       6: aload_1
       7: invokestatic  #46                 // Method io/netty/channel/local/LocalChannelRegistry.register:(Lio/netty/channel/Channel;Lio/netty/channel/local/LocalAddress;Ljava/net/SocketAddress;)Lio/netty/channel/local/LocalAddress;
      10: putfield      #25                 // Field localAddress:Lio/netty/channel/local/LocalAddress;
      13: aload_0
      14: getstatic     #47                 // Field io/netty/channel/local/LocalChannel$State.BOUND:Lio/netty/channel/local/LocalChannel$State;
      17: putfield      #2                  // Field state:Lio/netty/channel/local/LocalChannel$State;
      20: return

  protected void doDisconnect() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method doClose:()V
       4: return

  protected void doClose() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #1                  // Field peer:Lio/netty/channel/local/LocalChannel;
       4: astore_1
       5: aload_0
       6: getfield      #2                  // Field state:Lio/netty/channel/local/LocalChannel$State;
       9: astore_2
      10: aload_2
      11: getstatic     #34                 // Field io/netty/channel/local/LocalChannel$State.CLOSED:Lio/netty/channel/local/LocalChannel$State;
      14: if_acmpeq     94
      17: aload_0
      18: getfield      #25                 // Field localAddress:Lio/netty/channel/local/LocalAddress;
      21: ifnull        43
      24: aload_0
      25: invokevirtual #39                 // Method parent:()Lio/netty/channel/local/LocalServerChannel;
      28: ifnonnull     38
      31: aload_0
      32: getfield      #25                 // Field localAddress:Lio/netty/channel/local/LocalAddress;
      35: invokestatic  #49                 // Method io/netty/channel/local/LocalChannelRegistry.unregister:(Lio/netty/channel/local/LocalAddress;)V
      38: aload_0
      39: aconst_null
      40: putfield      #25                 // Field localAddress:Lio/netty/channel/local/LocalAddress;
      43: aload_0
      44: getstatic     #34                 // Field io/netty/channel/local/LocalChannel$State.CLOSED:Lio/netty/channel/local/LocalChannel$State;
      47: putfield      #2                  // Field state:Lio/netty/channel/local/LocalChannel$State;
      50: aload_0
      51: getfield      #50                 // Field writeInProgress:Z
      54: ifeq          66
      57: aload_1
      58: ifnull        66
      61: aload_0
      62: aload_1
      63: invokespecial #51                 // Method finishPeerRead:(Lio/netty/channel/local/LocalChannel;)V
      66: aload_0
      67: getfield      #5                  // Field connectPromise:Lio/netty/channel/ChannelPromise;
      70: astore_3
      71: aload_3
      72: ifnull        94
      75: aload_3
      76: new           #52                 // class java/nio/channels/ClosedChannelException
      79: dup
      80: invokespecial #53                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      83: invokeinterface #54,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      88: pop
      89: aload_0
      90: aconst_null
      91: putfield      #5                  // Field connectPromise:Lio/netty/channel/ChannelPromise;
      94: aload_1
      95: ifnull        189
      98: aload_0
      99: aconst_null
     100: putfield      #1                  // Field peer:Lio/netty/channel/local/LocalChannel;
     103: aload_1
     104: invokevirtual #40                 // Method eventLoop:()Lio/netty/channel/EventLoop;
     107: astore_3
     108: aload_1
     109: invokevirtual #55                 // Method isActive:()Z
     112: istore        4
     114: aload_3
     115: new           #56                 // class io/netty/channel/local/LocalChannel$4
     118: dup
     119: aload_0
     120: aload_1
     121: iload         4
     123: invokespecial #57                 // Method io/netty/channel/local/LocalChannel$4."<init>":(Lio/netty/channel/local/LocalChannel;Lio/netty/channel/local/LocalChannel;Z)V
     126: invokeinterface #43,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
     131: goto          189
     134: astore        5
     136: getstatic     #59                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
     139: ldc           #60                 // String Releasing Inbound Queues for channels {}-{} because exception occurred!
     141: iconst_3
     142: anewarray     #61                 // class java/lang/Object
     145: dup
     146: iconst_0
     147: aload_0
     148: aastore
     149: dup
     150: iconst_1
     151: aload_1
     152: aastore
     153: dup
     154: iconst_2
     155: aload         5
     157: aastore
     158: invokeinterface #62,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
     163: aload_3
     164: invokeinterface #63,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
     169: ifeq          179
     172: aload_1
     173: invokespecial #64                 // Method releaseInboundBuffers:()V
     176: goto          184
     179: aload_1
     180: invokevirtual #65                 // Method close:()Lio/netty/channel/ChannelFuture;
     183: pop
     184: aload         5
     186: invokestatic  #66                 // Method io/netty/util/internal/PlatformDependent.throwException:(Ljava/lang/Throwable;)V
     189: aload_2
     190: ifnull        227
     193: aload_2
     194: getstatic     #34                 // Field io/netty/channel/local/LocalChannel$State.CLOSED:Lio/netty/channel/local/LocalChannel$State;
     197: if_acmpeq     227
     200: aload_0
     201: invokespecial #64                 // Method releaseInboundBuffers:()V
     204: goto          227
     207: astore        6
     209: aload_2
     210: ifnull        224
     213: aload_2
     214: getstatic     #34                 // Field io/netty/channel/local/LocalChannel$State.CLOSED:Lio/netty/channel/local/LocalChannel$State;
     217: if_acmpeq     224
     220: aload_0
     221: invokespecial #64                 // Method releaseInboundBuffers:()V
     224: aload         6
     226: athrow
     227: return
    Exception table:
       from    to  target type
         114   131   134   Class java/lang/Throwable
          10   189   207   any
         207   209   207   any

  private void tryClose(boolean);
    Code:
       0: iload_1
       1: ifeq          25
       4: aload_0
       5: invokevirtual #67                 // Method unsafe:()Lio/netty/channel/Channel$Unsafe;
       8: aload_0
       9: invokevirtual #67                 // Method unsafe:()Lio/netty/channel/Channel$Unsafe;
      12: invokeinterface #68,  1           // InterfaceMethod io/netty/channel/Channel$Unsafe.voidPromise:()Lio/netty/channel/ChannelPromise;
      17: invokeinterface #69,  2           // InterfaceMethod io/netty/channel/Channel$Unsafe.close:(Lio/netty/channel/ChannelPromise;)V
      22: goto          29
      25: aload_0
      26: invokespecial #64                 // Method releaseInboundBuffers:()V
      29: return

  protected void doDeregister() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method eventLoop:()Lio/netty/channel/EventLoop;
       4: checkcast     #44                 // class io/netty/util/concurrent/SingleThreadEventExecutor
       7: aload_0
       8: getfield      #18                 // Field shutdownHook:Ljava/lang/Runnable;
      11: invokevirtual #70                 // Method io/netty/util/concurrent/SingleThreadEventExecutor.removeShutdownHook:(Ljava/lang/Runnable;)V
      14: return

  private void readInbound();
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method unsafe:()Lio/netty/channel/Channel$Unsafe;
       4: invokeinterface #71,  1           // InterfaceMethod io/netty/channel/Channel$Unsafe.recvBufAllocHandle:()Lio/netty/channel/RecvByteBufAllocator$Handle;
       9: astore_1
      10: aload_1
      11: aload_0
      12: invokevirtual #19                 // Method config:()Lio/netty/channel/ChannelConfig;
      15: invokeinterface #72,  2           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.reset:(Lio/netty/channel/ChannelConfig;)V
      20: aload_0
      21: invokevirtual #73                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
      24: astore_2
      25: aload_0
      26: getfield      #12                 // Field inboundBuffer:Ljava/util/Queue;
      29: invokeinterface #74,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      34: astore_3
      35: aload_3
      36: ifnonnull     42
      39: goto          59
      42: aload_2
      43: aload_3
      44: invokeinterface #75,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
      49: pop
      50: aload_1
      51: invokeinterface #76,  1           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.continueReading:()Z
      56: ifne          25
      59: aload_2
      60: invokeinterface #77,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
      65: pop
      66: return

  protected void doBeginRead() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #78                 // Field readInProgress:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #12                 // Field inboundBuffer:Ljava/util/Queue;
      12: astore_1
      13: aload_1
      14: invokeinterface #79,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      19: ifeq          28
      22: aload_0
      23: iconst_1
      24: putfield      #78                 // Field readInProgress:Z
      27: return
      28: invokestatic  #80                 // Method io/netty/util/internal/InternalThreadLocalMap.get:()Lio/netty/util/internal/InternalThreadLocalMap;
      31: astore_2
      32: aload_2
      33: invokevirtual #81                 // Method io/netty/util/internal/InternalThreadLocalMap.localChannelReaderStackDepth:()I
      36: invokestatic  #82                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      39: astore_3
      40: aload_3
      41: invokevirtual #83                 // Method java/lang/Integer.intValue:()I
      44: bipush        8
      46: if_icmpge     90
      49: aload_2
      50: aload_3
      51: invokevirtual #83                 // Method java/lang/Integer.intValue:()I
      54: iconst_1
      55: iadd
      56: invokevirtual #85                 // Method io/netty/util/internal/InternalThreadLocalMap.setLocalChannelReaderStackDepth:(I)V
      59: aload_0
      60: invokespecial #6                  // Method readInbound:()V
      63: aload_2
      64: aload_3
      65: invokevirtual #83                 // Method java/lang/Integer.intValue:()I
      68: invokevirtual #85                 // Method io/netty/util/internal/InternalThreadLocalMap.setLocalChannelReaderStackDepth:(I)V
      71: goto          87
      74: astore        4
      76: aload_2
      77: aload_3
      78: invokevirtual #83                 // Method java/lang/Integer.intValue:()I
      81: invokevirtual #85                 // Method io/netty/util/internal/InternalThreadLocalMap.setLocalChannelReaderStackDepth:(I)V
      84: aload         4
      86: athrow
      87: goto          156
      90: aload_0
      91: invokevirtual #40                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      94: aload_0
      95: getfield      #15                 // Field readTask:Ljava/lang/Runnable;
      98: invokeinterface #43,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
     103: goto          156
     106: astore        4
     108: getstatic     #59                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
     111: ldc           #86                 // String Closing Local channels {}-{} because exception occurred!
     113: iconst_3
     114: anewarray     #61                 // class java/lang/Object
     117: dup
     118: iconst_0
     119: aload_0
     120: aastore
     121: dup
     122: iconst_1
     123: aload_0
     124: getfield      #1                  // Field peer:Lio/netty/channel/local/LocalChannel;
     127: aastore
     128: dup
     129: iconst_2
     130: aload         4
     132: aastore
     133: invokeinterface #62,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
     138: aload_0
     139: invokevirtual #65                 // Method close:()Lio/netty/channel/ChannelFuture;
     142: pop
     143: aload_0
     144: getfield      #1                  // Field peer:Lio/netty/channel/local/LocalChannel;
     147: invokevirtual #65                 // Method close:()Lio/netty/channel/ChannelFuture;
     150: pop
     151: aload         4
     153: invokestatic  #66                 // Method io/netty/util/internal/PlatformDependent.throwException:(Ljava/lang/Throwable;)V
     156: return
    Exception table:
       from    to  target type
          59    63    74   any
          74    76    74   any
          90   103   106   Class java/lang/Throwable

  protected void doWrite(io.netty.channel.ChannelOutboundBuffer) throws java.lang.Exception;
    Code:
       0: getstatic     #87                 // Field io/netty/channel/local/LocalChannel$6.$SwitchMap$io$netty$channel$local$LocalChannel$State:[I
       3: aload_0
       4: getfield      #2                  // Field state:Lio/netty/channel/local/LocalChannel$State;
       7: invokevirtual #88                 // Method io/netty/channel/local/LocalChannel$State.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 4
                     1: 40
                     2: 40
                     3: 48
                     4: 56
               default: 56
          }
      40: new           #89                 // class java/nio/channels/NotYetConnectedException
      43: dup
      44: invokespecial #90                 // Method java/nio/channels/NotYetConnectedException."<init>":()V
      47: athrow
      48: new           #52                 // class java/nio/channels/ClosedChannelException
      51: dup
      52: invokespecial #53                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      55: athrow
      56: aload_0
      57: getfield      #1                  // Field peer:Lio/netty/channel/local/LocalChannel;
      60: astore_2
      61: aload_0
      62: iconst_1
      63: putfield      #50                 // Field writeInProgress:Z
      66: aconst_null
      67: astore_3
      68: aload_1
      69: invokevirtual #91                 // Method io/netty/channel/ChannelOutboundBuffer.current:()Ljava/lang/Object;
      72: astore        4
      74: aload         4
      76: ifnonnull     82
      79: goto          148
      82: aload_2
      83: getfield      #2                  // Field state:Lio/netty/channel/local/LocalChannel$State;
      86: getstatic     #35                 // Field io/netty/channel/local/LocalChannel$State.CONNECTED:Lio/netty/channel/local/LocalChannel$State;
      89: if_acmpne     115
      92: aload_2
      93: getfield      #12                 // Field inboundBuffer:Ljava/util/Queue;
      96: aload         4
      98: invokestatic  #92                 // Method io/netty/util/ReferenceCountUtil.retain:(Ljava/lang/Object;)Ljava/lang/Object;
     101: invokeinterface #93,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
     106: pop
     107: aload_1
     108: invokevirtual #94                 // Method io/netty/channel/ChannelOutboundBuffer.remove:()Z
     111: pop
     112: goto          133
     115: aload_3
     116: ifnonnull     127
     119: new           #52                 // class java/nio/channels/ClosedChannelException
     122: dup
     123: invokespecial #53                 // Method java/nio/channels/ClosedChannelException."<init>":()V
     126: astore_3
     127: aload_1
     128: aload_3
     129: invokevirtual #95                 // Method io/netty/channel/ChannelOutboundBuffer.remove:(Ljava/lang/Throwable;)Z
     132: pop
     133: goto          145
     136: astore        5
     138: aload_1
     139: aload         5
     141: invokevirtual #95                 // Method io/netty/channel/ChannelOutboundBuffer.remove:(Ljava/lang/Throwable;)Z
     144: pop
     145: goto          68
     148: aload_0
     149: iconst_0
     150: putfield      #50                 // Field writeInProgress:Z
     153: goto          166
     156: astore        6
     158: aload_0
     159: iconst_0
     160: putfield      #50                 // Field writeInProgress:Z
     163: aload         6
     165: athrow
     166: aload_0
     167: aload_2
     168: invokespecial #51                 // Method finishPeerRead:(Lio/netty/channel/local/LocalChannel;)V
     171: return
    Exception table:
       from    to  target type
          82   133   136   Class java/lang/Throwable
          66   148   156   any
         156   158   156   any

  private void finishPeerRead(io.netty.channel.local.LocalChannel);
    Code:
       0: aload_1
       1: invokevirtual #40                 // Method eventLoop:()Lio/netty/channel/EventLoop;
       4: aload_0
       5: invokevirtual #40                 // Method eventLoop:()Lio/netty/channel/EventLoop;
       8: if_acmpne     26
      11: aload_1
      12: getfield      #50                 // Field writeInProgress:Z
      15: ifne          26
      18: aload_0
      19: aload_1
      20: invokespecial #3                  // Method finishPeerRead0:(Lio/netty/channel/local/LocalChannel;)V
      23: goto          31
      26: aload_0
      27: aload_1
      28: invokespecial #96                 // Method runFinishPeerReadTask:(Lio/netty/channel/local/LocalChannel;)V
      31: return

  private void runFinishPeerReadTask(io.netty.channel.local.LocalChannel);
    Code:
       0: new           #97                 // class io/netty/channel/local/LocalChannel$5
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #98                 // Method io/netty/channel/local/LocalChannel$5."<init>":(Lio/netty/channel/local/LocalChannel;Lio/netty/channel/local/LocalChannel;)V
       9: astore_2
      10: aload_1
      11: getfield      #50                 // Field writeInProgress:Z
      14: ifeq          34
      17: aload_1
      18: aload_1
      19: invokevirtual #40                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      22: aload_2
      23: invokeinterface #99,  2           // InterfaceMethod io/netty/channel/EventLoop.submit:(Ljava/lang/Runnable;)Lio/netty/util/concurrent/Future;
      28: putfield      #100                // Field finishReadFuture:Lio/netty/util/concurrent/Future;
      31: goto          44
      34: aload_1
      35: invokevirtual #40                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      38: aload_2
      39: invokeinterface #43,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      44: goto          88
      47: astore_3
      48: getstatic     #59                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      51: ldc           #86                 // String Closing Local channels {}-{} because exception occurred!
      53: iconst_3
      54: anewarray     #61                 // class java/lang/Object
      57: dup
      58: iconst_0
      59: aload_0
      60: aastore
      61: dup
      62: iconst_1
      63: aload_1
      64: aastore
      65: dup
      66: iconst_2
      67: aload_3
      68: aastore
      69: invokeinterface #62,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
      74: aload_0
      75: invokevirtual #65                 // Method close:()Lio/netty/channel/ChannelFuture;
      78: pop
      79: aload_1
      80: invokevirtual #65                 // Method close:()Lio/netty/channel/ChannelFuture;
      83: pop
      84: aload_3
      85: invokestatic  #66                 // Method io/netty/util/internal/PlatformDependent.throwException:(Ljava/lang/Throwable;)V
      88: return
    Exception table:
       from    to  target type
          10    44    47   Class java/lang/Throwable

  private void releaseInboundBuffers();
    Code:
       0: getstatic     #101                // Field $assertionsDisabled:Z
       3: ifne          33
       6: aload_0
       7: invokevirtual #40                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      10: ifnull        33
      13: aload_0
      14: invokevirtual #40                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      17: invokeinterface #63,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      22: ifne          33
      25: new           #102                // class java/lang/AssertionError
      28: dup
      29: invokespecial #103                // Method java/lang/AssertionError."<init>":()V
      32: athrow
      33: aload_0
      34: iconst_0
      35: putfield      #78                 // Field readInProgress:Z
      38: aload_0
      39: getfield      #12                 // Field inboundBuffer:Ljava/util/Queue;
      42: astore_1
      43: aload_1
      44: invokeinterface #74,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      49: dup
      50: astore_2
      51: ifnull        62
      54: aload_2
      55: invokestatic  #104                // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
      58: pop
      59: goto          43
      62: return

  private void finishPeerRead0(io.netty.channel.local.LocalChannel);
    Code:
       0: aload_1
       1: getfield      #100                // Field finishReadFuture:Lio/netty/util/concurrent/Future;
       4: astore_2
       5: aload_2
       6: ifnull        34
       9: aload_2
      10: invokeinterface #105,  1          // InterfaceMethod io/netty/util/concurrent/Future.isDone:()Z
      15: ifne          24
      18: aload_0
      19: aload_1
      20: invokespecial #96                 // Method runFinishPeerReadTask:(Lio/netty/channel/local/LocalChannel;)V
      23: return
      24: getstatic     #106                // Field FINISH_READ_FUTURE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      27: aload_1
      28: aload_2
      29: aconst_null
      30: invokevirtual #107                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      33: pop
      34: aload_1
      35: getfield      #78                 // Field readInProgress:Z
      38: ifeq          62
      41: aload_1
      42: getfield      #12                 // Field inboundBuffer:Ljava/util/Queue;
      45: invokeinterface #79,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      50: ifne          62
      53: aload_1
      54: iconst_0
      55: putfield      #78                 // Field readInProgress:Z
      58: aload_1
      59: invokespecial #6                  // Method readInbound:()V
      62: return

  public java.net.SocketAddress remoteAddress();
    Code:
       0: aload_0
       1: invokevirtual #108                // Method remoteAddress:()Lio/netty/channel/local/LocalAddress;
       4: areturn

  public java.net.SocketAddress localAddress();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method localAddress:()Lio/netty/channel/local/LocalAddress;
       4: areturn

  public io.netty.channel.Channel parent();
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method parent:()Lio/netty/channel/local/LocalServerChannel;
       4: areturn

  static void access$000(io.netty.channel.local.LocalChannel);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method readInbound:()V
       4: return

  static io.netty.channel.ChannelPromise access$200(io.netty.channel.local.LocalChannel);
    Code:
       0: aload_0
       1: getfield      #5                  // Field connectPromise:Lio/netty/channel/ChannelPromise;
       4: areturn

  static void access$300(io.netty.channel.local.LocalChannel, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #4                  // Method tryClose:(Z)V
       5: return

  static void access$400(io.netty.channel.local.LocalChannel, io.netty.channel.local.LocalChannel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method finishPeerRead0:(Lio/netty/channel/local/LocalChannel;)V
       5: return

  static io.netty.channel.local.LocalChannel$State access$500(io.netty.channel.local.LocalChannel);
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:Lio/netty/channel/local/LocalChannel$State;
       4: areturn

  static io.netty.channel.ChannelPromise access$202(io.netty.channel.local.LocalChannel, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #5                  // Field connectPromise:Lio/netty/channel/ChannelPromise;
       6: areturn

  static io.netty.channel.local.LocalChannel access$602(io.netty.channel.local.LocalChannel, io.netty.channel.local.LocalChannel);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #1                  // Field peer:Lio/netty/channel/local/LocalChannel;
       6: areturn

  static {};
    Code:
       0: ldc           #84                 // class io/netty/channel/local/LocalChannel
       2: invokevirtual #109                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #101                // Field $assertionsDisabled:Z
      16: ldc           #84                 // class io/netty/channel/local/LocalChannel
      18: invokestatic  #110                // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
      21: putstatic     #59                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      24: ldc           #84                 // class io/netty/channel/local/LocalChannel
      26: ldc           #111                // class io/netty/util/concurrent/Future
      28: ldc           #112                // String finishReadFuture
      30: invokestatic  #113                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      33: putstatic     #106                // Field FINISH_READ_FUTURE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      36: new           #114                // class io/netty/channel/ChannelMetadata
      39: dup
      40: iconst_0
      41: invokespecial #115                // Method io/netty/channel/ChannelMetadata."<init>":(Z)V
      44: putstatic     #28                 // Field METADATA:Lio/netty/channel/ChannelMetadata;
      47: return
}
