Compiled from "DefaultChannelPipeline.java"
final class io.netty.channel.DefaultChannelPipeline$HeadContext extends io.netty.channel.AbstractChannelHandlerContext implements io.netty.channel.ChannelOutboundHandler,io.netty.channel.ChannelInboundHandler {
  private final io.netty.channel.Channel$Unsafe unsafe;

  final io.netty.channel.DefaultChannelPipeline this$0;

  io.netty.channel.DefaultChannelPipeline$HeadContext(io.netty.channel.DefaultChannelPipeline, io.netty.channel.DefaultChannelPipeline);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/netty/channel/DefaultChannelPipeline;
       5: aload_0
       6: aload_2
       7: aconst_null
       8: invokestatic  #2                  // Method io/netty/channel/DefaultChannelPipeline.access$500:()Ljava/lang/String;
      11: ldc           #3                  // class io/netty/channel/DefaultChannelPipeline$HeadContext
      13: invokespecial #4                  // Method io/netty/channel/AbstractChannelHandlerContext."<init>":(Lio/netty/channel/DefaultChannelPipeline;Lio/netty/util/concurrent/EventExecutor;Ljava/lang/String;Ljava/lang/Class;)V
      16: aload_0
      17: aload_2
      18: invokevirtual #5                  // Method io/netty/channel/DefaultChannelPipeline.channel:()Lio/netty/channel/Channel;
      21: invokeinterface #6,  1            // InterfaceMethod io/netty/channel/Channel.unsafe:()Lio/netty/channel/Channel$Unsafe;
      26: putfield      #7                  // Field unsafe:Lio/netty/channel/Channel$Unsafe;
      29: aload_0
      30: invokevirtual #8                  // Method setAddComplete:()Z
      33: pop
      34: return

  public io.netty.channel.ChannelHandler handler();
    Code:
       0: aload_0
       1: areturn

  public void handlerAdded(io.netty.channel.ChannelHandlerContext);
    Code:
       0: return

  public void handlerRemoved(io.netty.channel.ChannelHandlerContext);
    Code:
       0: return

  public void bind(io.netty.channel.ChannelHandlerContext, java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #7                  // Field unsafe:Lio/netty/channel/Channel$Unsafe;
       4: aload_2
       5: aload_3
       6: invokeinterface #9,  3            // InterfaceMethod io/netty/channel/Channel$Unsafe.bind:(Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)V
      11: return

  public void connect(io.netty.channel.ChannelHandlerContext, java.net.SocketAddress, java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #7                  // Field unsafe:Lio/netty/channel/Channel$Unsafe;
       4: aload_2
       5: aload_3
       6: aload         4
       8: invokeinterface #10,  4           // InterfaceMethod io/netty/channel/Channel$Unsafe.connect:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)V
      13: return

  public void disconnect(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #7                  // Field unsafe:Lio/netty/channel/Channel$Unsafe;
       4: aload_2
       5: invokeinterface #11,  2           // InterfaceMethod io/netty/channel/Channel$Unsafe.disconnect:(Lio/netty/channel/ChannelPromise;)V
      10: return

  public void close(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #7                  // Field unsafe:Lio/netty/channel/Channel$Unsafe;
       4: aload_2
       5: invokeinterface #12,  2           // InterfaceMethod io/netty/channel/Channel$Unsafe.close:(Lio/netty/channel/ChannelPromise;)V
      10: return

  public void deregister(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #7                  // Field unsafe:Lio/netty/channel/Channel$Unsafe;
       4: aload_2
       5: invokeinterface #13,  2           // InterfaceMethod io/netty/channel/Channel$Unsafe.deregister:(Lio/netty/channel/ChannelPromise;)V
      10: return

  public void read(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: getfield      #7                  // Field unsafe:Lio/netty/channel/Channel$Unsafe;
       4: invokeinterface #14,  1           // InterfaceMethod io/netty/channel/Channel$Unsafe.beginRead:()V
       9: return

  public void write(io.netty.channel.ChannelHandlerContext, java.lang.Object, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #7                  // Field unsafe:Lio/netty/channel/Channel$Unsafe;
       4: aload_2
       5: aload_3
       6: invokeinterface #15,  3           // InterfaceMethod io/netty/channel/Channel$Unsafe.write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)V
      11: return

  public void flush(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: getfield      #7                  // Field unsafe:Lio/netty/channel/Channel$Unsafe;
       4: invokeinterface #16,  1           // InterfaceMethod io/netty/channel/Channel$Unsafe.flush:()V
       9: return

  public void exceptionCaught(io.netty.channel.ChannelHandlerContext, java.lang.Throwable);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #17,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelHandlerContext;
       7: pop
       8: return

  public void channelRegistered(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/channel/DefaultChannelPipeline;
       4: invokevirtual #18                 // Method io/netty/channel/DefaultChannelPipeline.invokeHandlerAddedIfNeeded:()V
       7: aload_1
       8: invokeinterface #19,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelRegistered:()Lio/netty/channel/ChannelHandlerContext;
      13: pop
      14: return

  public void channelUnregistered(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_1
       1: invokeinterface #20,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelUnregistered:()Lio/netty/channel/ChannelHandlerContext;
       6: pop
       7: aload_0
       8: getfield      #1                  // Field this$0:Lio/netty/channel/DefaultChannelPipeline;
      11: invokestatic  #21                 // Method io/netty/channel/DefaultChannelPipeline.access$600:(Lio/netty/channel/DefaultChannelPipeline;)Lio/netty/channel/Channel;
      14: invokeinterface #22,  1           // InterfaceMethod io/netty/channel/Channel.isOpen:()Z
      19: ifne          29
      22: aload_0
      23: getfield      #1                  // Field this$0:Lio/netty/channel/DefaultChannelPipeline;
      26: invokestatic  #23                 // Method io/netty/channel/DefaultChannelPipeline.access$700:(Lio/netty/channel/DefaultChannelPipeline;)V
      29: return

  public void channelActive(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_1
       1: invokeinterface #24,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelActive:()Lio/netty/channel/ChannelHandlerContext;
       6: pop
       7: aload_0
       8: invokespecial #25                 // Method readIfIsAutoRead:()V
      11: return

  public void channelInactive(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_1
       1: invokeinterface #26,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelInactive:()Lio/netty/channel/ChannelHandlerContext;
       6: pop
       7: return

  public void channelRead(io.netty.channel.ChannelHandlerContext, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #27,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
       7: pop
       8: return

  public void channelReadComplete(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_1
       1: invokeinterface #28,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelReadComplete:()Lio/netty/channel/ChannelHandlerContext;
       6: pop
       7: aload_0
       8: invokespecial #25                 // Method readIfIsAutoRead:()V
      11: return

  private void readIfIsAutoRead();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/channel/DefaultChannelPipeline;
       4: invokestatic  #21                 // Method io/netty/channel/DefaultChannelPipeline.access$600:(Lio/netty/channel/DefaultChannelPipeline;)Lio/netty/channel/Channel;
       7: invokeinterface #29,  1           // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
      12: invokeinterface #30,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
      17: ifeq          33
      20: aload_0
      21: getfield      #1                  // Field this$0:Lio/netty/channel/DefaultChannelPipeline;
      24: invokestatic  #21                 // Method io/netty/channel/DefaultChannelPipeline.access$600:(Lio/netty/channel/DefaultChannelPipeline;)Lio/netty/channel/Channel;
      27: invokeinterface #31,  1           // InterfaceMethod io/netty/channel/Channel.read:()Lio/netty/channel/Channel;
      32: pop
      33: return

  public void userEventTriggered(io.netty.channel.ChannelHandlerContext, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #32,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
       7: pop
       8: return

  public void channelWritabilityChanged(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_1
       1: invokeinterface #33,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelWritabilityChanged:()Lio/netty/channel/ChannelHandlerContext;
       6: pop
       7: return
}
