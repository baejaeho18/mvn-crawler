Compiled from "NioSocketChannel.java"
public class io.netty.channel.socket.nio.NioSocketChannel extends io.netty.channel.nio.AbstractNioByteChannel implements io.netty.channel.socket.SocketChannel {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private static final java.nio.channels.spi.SelectorProvider DEFAULT_SELECTOR_PROVIDER;

  private final io.netty.channel.socket.SocketChannelConfig config;

  private static java.nio.channels.SocketChannel newSocket(java.nio.channels.spi.SelectorProvider);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method java/nio/channels/spi/SelectorProvider.openSocketChannel:()Ljava/nio/channels/SocketChannel;
       4: areturn
       5: astore_1
       6: new           #9                  // class io/netty/channel/ChannelException
       9: dup
      10: ldc           #10                 // String Failed to open a socket.
      12: aload_1
      13: invokespecial #11                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      16: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/io/IOException

  public io.netty.channel.socket.nio.NioSocketChannel();
    Code:
       0: aload_0
       1: getstatic     #12                 // Field DEFAULT_SELECTOR_PROVIDER:Ljava/nio/channels/spi/SelectorProvider;
       4: invokespecial #13                 // Method "<init>":(Ljava/nio/channels/spi/SelectorProvider;)V
       7: return

  public io.netty.channel.socket.nio.NioSocketChannel(java.nio.channels.spi.SelectorProvider);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #14                 // Method newSocket:(Ljava/nio/channels/spi/SelectorProvider;)Ljava/nio/channels/SocketChannel;
       5: invokespecial #15                 // Method "<init>":(Ljava/nio/channels/SocketChannel;)V
       8: return

  public io.netty.channel.socket.nio.NioSocketChannel(java.nio.channels.SocketChannel);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokespecial #16                 // Method "<init>":(Lio/netty/channel/Channel;Ljava/nio/channels/SocketChannel;)V
       6: return

  public io.netty.channel.socket.nio.NioSocketChannel(io.netty.channel.Channel, java.nio.channels.SocketChannel);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #17                 // Method io/netty/channel/nio/AbstractNioByteChannel."<init>":(Lio/netty/channel/Channel;Ljava/nio/channels/SelectableChannel;)V
       6: aload_0
       7: new           #18                 // class io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelConfig
      10: dup
      11: aload_0
      12: aload_0
      13: aload_2
      14: invokevirtual #19                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
      17: aconst_null
      18: invokespecial #20                 // Method io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelConfig."<init>":(Lio/netty/channel/socket/nio/NioSocketChannel;Lio/netty/channel/socket/nio/NioSocketChannel;Ljava/net/Socket;Lio/netty/channel/socket/nio/NioSocketChannel$1;)V
      21: putfield      #21                 // Field config:Lio/netty/channel/socket/SocketChannelConfig;
      24: return

  public io.netty.channel.socket.ServerSocketChannel parent();
    Code:
       0: aload_0
       1: invokespecial #22                 // Method io/netty/channel/nio/AbstractNioByteChannel.parent:()Lio/netty/channel/Channel;
       4: checkcast     #23                 // class io/netty/channel/socket/ServerSocketChannel
       7: areturn

  public io.netty.channel.socket.SocketChannelConfig config();
    Code:
       0: aload_0
       1: getfield      #21                 // Field config:Lio/netty/channel/socket/SocketChannelConfig;
       4: areturn

  protected java.nio.channels.SocketChannel javaChannel();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method io/netty/channel/nio/AbstractNioByteChannel.javaChannel:()Ljava/nio/channels/SelectableChannel;
       4: checkcast     #25                 // class java/nio/channels/SocketChannel
       7: areturn

  public boolean isActive();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
       4: astore_1
       5: aload_1
       6: invokevirtual #27                 // Method java/nio/channels/SocketChannel.isOpen:()Z
       9: ifeq          23
      12: aload_1
      13: invokevirtual #28                 // Method java/nio/channels/SocketChannel.isConnected:()Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public boolean isOutputShutdown();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
       4: invokevirtual #19                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
       7: invokevirtual #29                 // Method java/net/Socket.isOutputShutdown:()Z
      10: ifne          20
      13: aload_0
      14: invokevirtual #30                 // Method isActive:()Z
      17: ifne          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public boolean isInputShutdown();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
       4: invokevirtual #19                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
       7: invokevirtual #31                 // Method java/net/Socket.isInputShutdown:()Z
      10: ifne          20
      13: aload_0
      14: invokevirtual #30                 // Method isActive:()Z
      17: ifne          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public boolean isShutdown();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
       4: invokevirtual #19                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
       7: astore_1
       8: aload_1
       9: invokevirtual #31                 // Method java/net/Socket.isInputShutdown:()Z
      12: ifeq          22
      15: aload_1
      16: invokevirtual #29                 // Method java/net/Socket.isOutputShutdown:()Z
      19: ifne          29
      22: aload_0
      23: invokevirtual #30                 // Method isActive:()Z
      26: ifne          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ireturn

  public java.net.InetSocketAddress localAddress();
    Code:
       0: aload_0
       1: invokespecial #32                 // Method io/netty/channel/nio/AbstractNioByteChannel.localAddress:()Ljava/net/SocketAddress;
       4: checkcast     #33                 // class java/net/InetSocketAddress
       7: areturn

  public java.net.InetSocketAddress remoteAddress();
    Code:
       0: aload_0
       1: invokespecial #34                 // Method io/netty/channel/nio/AbstractNioByteChannel.remoteAddress:()Ljava/net/SocketAddress;
       4: checkcast     #33                 // class java/net/InetSocketAddress
       7: areturn

  protected final void doShutdownOutput() throws java.lang.Exception;
    Code:
       0: invokestatic  #35                 // Method io/netty/util/internal/PlatformDependent.javaVersion:()I
       3: bipush        7
       5: if_icmplt     19
       8: aload_0
       9: invokevirtual #26                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
      12: invokevirtual #36                 // Method java/nio/channels/SocketChannel.shutdownOutput:()Ljava/nio/channels/SocketChannel;
      15: pop
      16: goto          29
      19: aload_0
      20: invokevirtual #26                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
      23: invokevirtual #19                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
      26: invokevirtual #37                 // Method java/net/Socket.shutdownOutput:()V
      29: return

  public io.netty.channel.ChannelFuture shutdownOutput();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #38                 // Method newPromise:()Lio/netty/channel/ChannelPromise;
       5: invokevirtual #39                 // Method shutdownOutput:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       8: areturn

  public io.netty.channel.ChannelFuture shutdownOutput(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method eventLoop:()Lio/netty/channel/nio/NioEventLoop;
       4: astore_2
       5: aload_2
       6: invokeinterface #41,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      11: ifeq          28
      14: aload_0
      15: invokevirtual #42                 // Method unsafe:()Lio/netty/channel/nio/AbstractNioChannel$NioUnsafe;
      18: checkcast     #43                 // class io/netty/channel/AbstractChannel$AbstractUnsafe
      21: aload_1
      22: invokevirtual #44                 // Method io/netty/channel/AbstractChannel$AbstractUnsafe.shutdownOutput:(Lio/netty/channel/ChannelPromise;)V
      25: goto          43
      28: aload_2
      29: new           #45                 // class io/netty/channel/socket/nio/NioSocketChannel$1
      32: dup
      33: aload_0
      34: aload_1
      35: invokespecial #46                 // Method io/netty/channel/socket/nio/NioSocketChannel$1."<init>":(Lio/netty/channel/socket/nio/NioSocketChannel;Lio/netty/channel/ChannelPromise;)V
      38: invokeinterface #47,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      43: aload_1
      44: areturn

  public io.netty.channel.ChannelFuture shutdownInput();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #38                 // Method newPromise:()Lio/netty/channel/ChannelPromise;
       5: invokevirtual #48                 // Method shutdownInput:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       8: areturn

  protected boolean isInputShutdown0();
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method isInputShutdown:()Z
       4: ireturn

  public io.netty.channel.ChannelFuture shutdownInput(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method eventLoop:()Lio/netty/channel/nio/NioEventLoop;
       4: astore_2
       5: aload_2
       6: invokeinterface #41,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      11: ifeq          22
      14: aload_0
      15: aload_1
      16: invokespecial #6                  // Method shutdownInput0:(Lio/netty/channel/ChannelPromise;)V
      19: goto          37
      22: aload_2
      23: new           #50                 // class io/netty/channel/socket/nio/NioSocketChannel$2
      26: dup
      27: aload_0
      28: aload_1
      29: invokespecial #51                 // Method io/netty/channel/socket/nio/NioSocketChannel$2."<init>":(Lio/netty/channel/socket/nio/NioSocketChannel;Lio/netty/channel/ChannelPromise;)V
      32: invokeinterface #47,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      37: aload_1
      38: areturn

  public io.netty.channel.ChannelFuture shutdown();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #38                 // Method newPromise:()Lio/netty/channel/ChannelPromise;
       5: invokevirtual #52                 // Method shutdown:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       8: areturn

  public io.netty.channel.ChannelFuture shutdown(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method shutdownOutput:()Lio/netty/channel/ChannelFuture;
       4: astore_2
       5: aload_2
       6: invokeinterface #54,  1           // InterfaceMethod io/netty/channel/ChannelFuture.isDone:()Z
      11: ifeq          23
      14: aload_0
      15: aload_2
      16: aload_1
      17: invokespecial #5                  // Method shutdownOutputDone:(Lio/netty/channel/ChannelFuture;Lio/netty/channel/ChannelPromise;)V
      20: goto          39
      23: aload_2
      24: new           #55                 // class io/netty/channel/socket/nio/NioSocketChannel$3
      27: dup
      28: aload_0
      29: aload_1
      30: invokespecial #56                 // Method io/netty/channel/socket/nio/NioSocketChannel$3."<init>":(Lio/netty/channel/socket/nio/NioSocketChannel;Lio/netty/channel/ChannelPromise;)V
      33: invokeinterface #57,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      38: pop
      39: aload_1
      40: areturn

  private void shutdownOutputDone(io.netty.channel.ChannelFuture, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method shutdownInput:()Lio/netty/channel/ChannelFuture;
       4: astore_3
       5: aload_3
       6: invokeinterface #54,  1           // InterfaceMethod io/netty/channel/ChannelFuture.isDone:()Z
      11: ifeq          23
      14: aload_1
      15: aload_3
      16: aload_2
      17: invokestatic  #4                  // Method shutdownDone:(Lio/netty/channel/ChannelFuture;Lio/netty/channel/ChannelFuture;Lio/netty/channel/ChannelPromise;)V
      20: goto          40
      23: aload_3
      24: new           #59                 // class io/netty/channel/socket/nio/NioSocketChannel$4
      27: dup
      28: aload_0
      29: aload_1
      30: aload_2
      31: invokespecial #60                 // Method io/netty/channel/socket/nio/NioSocketChannel$4."<init>":(Lio/netty/channel/socket/nio/NioSocketChannel;Lio/netty/channel/ChannelFuture;Lio/netty/channel/ChannelPromise;)V
      34: invokeinterface #57,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      39: pop
      40: return

  private static void shutdownDone(io.netty.channel.ChannelFuture, io.netty.channel.ChannelFuture, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokeinterface #61,  1           // InterfaceMethod io/netty/channel/ChannelFuture.cause:()Ljava/lang/Throwable;
       6: astore_3
       7: aload_1
       8: invokeinterface #61,  1           // InterfaceMethod io/netty/channel/ChannelFuture.cause:()Ljava/lang/Throwable;
      13: astore        4
      15: aload_3
      16: ifnull        47
      19: aload         4
      21: ifnull        36
      24: getstatic     #62                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      27: ldc           #63                 // String Exception suppressed because a previous exception occurred.
      29: aload         4
      31: invokeinterface #64,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      36: aload_2
      37: aload_3
      38: invokeinterface #65,  2           // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      43: pop
      44: goto          71
      47: aload         4
      49: ifnull        64
      52: aload_2
      53: aload         4
      55: invokeinterface #65,  2           // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      60: pop
      61: goto          71
      64: aload_2
      65: invokeinterface #66,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setSuccess:()Lio/netty/channel/ChannelPromise;
      70: pop
      71: return

  private void shutdownInput0(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokespecial #67                 // Method shutdownInput0:()V
       4: aload_1
       5: invokeinterface #66,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setSuccess:()Lio/netty/channel/ChannelPromise;
      10: pop
      11: goto          23
      14: astore_2
      15: aload_1
      16: aload_2
      17: invokeinterface #65,  2           // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      22: pop
      23: return
    Exception table:
       from    to  target type
           0    11    14   Class java/lang/Throwable

  private void shutdownInput0() throws java.lang.Exception;
    Code:
       0: invokestatic  #35                 // Method io/netty/util/internal/PlatformDependent.javaVersion:()I
       3: bipush        7
       5: if_icmplt     19
       8: aload_0
       9: invokevirtual #26                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
      12: invokevirtual #69                 // Method java/nio/channels/SocketChannel.shutdownInput:()Ljava/nio/channels/SocketChannel;
      15: pop
      16: goto          29
      19: aload_0
      20: invokevirtual #26                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
      23: invokevirtual #19                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
      26: invokevirtual #70                 // Method java/net/Socket.shutdownInput:()V
      29: return

  protected java.net.SocketAddress localAddress0();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
       4: invokevirtual #19                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
       7: invokevirtual #71                 // Method java/net/Socket.getLocalSocketAddress:()Ljava/net/SocketAddress;
      10: areturn

  protected java.net.SocketAddress remoteAddress0();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
       4: invokevirtual #19                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
       7: invokevirtual #72                 // Method java/net/Socket.getRemoteSocketAddress:()Ljava/net/SocketAddress;
      10: areturn

  protected void doBind(java.net.SocketAddress) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #73                 // Method doBind0:(Ljava/net/SocketAddress;)V
       5: return

  private void doBind0(java.net.SocketAddress) throws java.lang.Exception;
    Code:
       0: invokestatic  #35                 // Method io/netty/util/internal/PlatformDependent.javaVersion:()I
       3: bipush        7
       5: if_icmplt     19
       8: aload_0
       9: invokevirtual #26                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
      12: aload_1
      13: invokestatic  #74                 // Method io/netty/util/internal/SocketUtils.bind:(Ljava/nio/channels/SocketChannel;Ljava/net/SocketAddress;)V
      16: goto          30
      19: aload_0
      20: invokevirtual #26                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
      23: invokevirtual #19                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
      26: aload_1
      27: invokestatic  #75                 // Method io/netty/util/internal/SocketUtils.bind:(Ljava/net/Socket;Ljava/net/SocketAddress;)V
      30: return

  protected boolean doConnect(java.net.SocketAddress, java.net.SocketAddress) throws java.lang.Exception;
    Code:
       0: aload_2
       1: ifnull        9
       4: aload_0
       5: aload_2
       6: invokespecial #73                 // Method doBind0:(Ljava/net/SocketAddress;)V
       9: iconst_0
      10: istore_3
      11: aload_0
      12: invokevirtual #26                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
      15: aload_1
      16: invokestatic  #76                 // Method io/netty/util/internal/SocketUtils.connect:(Ljava/nio/channels/SocketChannel;Ljava/net/SocketAddress;)Z
      19: istore        4
      21: iload         4
      23: ifne          36
      26: aload_0
      27: invokevirtual #77                 // Method selectionKey:()Ljava/nio/channels/SelectionKey;
      30: bipush        8
      32: invokevirtual #79                 // Method java/nio/channels/SelectionKey.interestOps:(I)Ljava/nio/channels/SelectionKey;
      35: pop
      36: iconst_1
      37: istore_3
      38: iload         4
      40: istore        5
      42: iload_3
      43: ifne          50
      46: aload_0
      47: invokevirtual #80                 // Method doClose:()V
      50: iload         5
      52: ireturn
      53: astore        6
      55: iload_3
      56: ifne          63
      59: aload_0
      60: invokevirtual #80                 // Method doClose:()V
      63: aload         6
      65: athrow
    Exception table:
       from    to  target type
          11    42    53   any
          53    55    53   any

  protected void doFinishConnect() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
       4: invokevirtual #81                 // Method java/nio/channels/SocketChannel.finishConnect:()Z
       7: ifne          18
      10: new           #82                 // class java/lang/Error
      13: dup
      14: invokespecial #83                 // Method java/lang/Error."<init>":()V
      17: athrow
      18: return

  protected void doDisconnect() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method doClose:()V
       4: return

  protected void doClose() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #84                 // Method io/netty/channel/nio/AbstractNioByteChannel.doClose:()V
       4: aload_0
       5: invokevirtual #26                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
       8: invokevirtual #85                 // Method java/nio/channels/SocketChannel.close:()V
      11: return

  protected int doReadBytes(io.netty.buffer.ByteBuf) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method unsafe:()Lio/netty/channel/nio/AbstractNioChannel$NioUnsafe;
       4: invokeinterface #86,  1           // InterfaceMethod io/netty/channel/nio/AbstractNioChannel$NioUnsafe.recvBufAllocHandle:()Lio/netty/channel/RecvByteBufAllocator$Handle;
       9: astore_2
      10: aload_2
      11: aload_1
      12: invokevirtual #87                 // Method io/netty/buffer/ByteBuf.writableBytes:()I
      15: invokeinterface #88,  2           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.attemptedBytesRead:(I)V
      20: aload_1
      21: aload_0
      22: invokevirtual #26                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
      25: aload_2
      26: invokeinterface #89,  1           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.attemptedBytesRead:()I
      31: invokevirtual #90                 // Method io/netty/buffer/ByteBuf.writeBytes:(Ljava/nio/channels/ScatteringByteChannel;I)I
      34: ireturn

  protected int doWriteBytes(io.netty.buffer.ByteBuf) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #91                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
       4: istore_2
       5: aload_1
       6: aload_0
       7: invokevirtual #26                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
      10: iload_2
      11: invokevirtual #92                 // Method io/netty/buffer/ByteBuf.readBytes:(Ljava/nio/channels/GatheringByteChannel;I)I
      14: ireturn

  protected long doWriteFileRegion(io.netty.channel.FileRegion) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #93,  1           // InterfaceMethod io/netty/channel/FileRegion.transferred:()J
       6: lstore_2
       7: aload_1
       8: aload_0
       9: invokevirtual #26                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
      12: lload_2
      13: invokeinterface #94,  4           // InterfaceMethod io/netty/channel/FileRegion.transferTo:(Ljava/nio/channels/WritableByteChannel;J)J
      18: lreturn

  private void adjustMaxBytesPerGatheringWrite(int, int, int);
    Code:
       0: iload_1
       1: iload_2
       2: if_icmpne     28
       5: iload_1
       6: iconst_1
       7: ishl
       8: iload_3
       9: if_icmple     55
      12: aload_0
      13: getfield      #21                 // Field config:Lio/netty/channel/socket/SocketChannelConfig;
      16: checkcast     #18                 // class io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelConfig
      19: iload_1
      20: iconst_1
      21: ishl
      22: invokevirtual #95                 // Method io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelConfig.setMaxBytesPerGatheringWrite:(I)V
      25: goto          55
      28: iload_1
      29: sipush        4096
      32: if_icmple     55
      35: iload_2
      36: iload_1
      37: iconst_1
      38: iushr
      39: if_icmpge     55
      42: aload_0
      43: getfield      #21                 // Field config:Lio/netty/channel/socket/SocketChannelConfig;
      46: checkcast     #18                 // class io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelConfig
      49: iload_1
      50: iconst_1
      51: iushr
      52: invokevirtual #95                 // Method io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelConfig.setMaxBytesPerGatheringWrite:(I)V
      55: return

  protected void doWrite(io.netty.channel.ChannelOutboundBuffer) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
       4: astore_2
       5: aload_0
       6: invokevirtual #96                 // Method config:()Lio/netty/channel/socket/SocketChannelConfig;
       9: invokeinterface #97,  1           // InterfaceMethod io/netty/channel/socket/SocketChannelConfig.getWriteSpinCount:()I
      14: istore_3
      15: aload_1
      16: invokevirtual #98                 // Method io/netty/channel/ChannelOutboundBuffer.isEmpty:()Z
      19: ifeq          27
      22: aload_0
      23: invokevirtual #99                 // Method clearOpWrite:()V
      26: return
      27: aload_0
      28: getfield      #21                 // Field config:Lio/netty/channel/socket/SocketChannelConfig;
      31: checkcast     #18                 // class io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelConfig
      34: invokevirtual #100                // Method io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelConfig.getMaxBytesPerGatheringWrite:()I
      37: istore        4
      39: aload_1
      40: sipush        1024
      43: iload         4
      45: i2l
      46: invokevirtual #101                // Method io/netty/channel/ChannelOutboundBuffer.nioBuffers:(IJ)[Ljava/nio/ByteBuffer;
      49: astore        5
      51: aload_1
      52: invokevirtual #102                // Method io/netty/channel/ChannelOutboundBuffer.nioBufferCount:()I
      55: istore        6
      57: iload         6
      59: lookupswitch  { // 2
                     0: 84
                     1: 95
               default: 150
          }
      84: iload_3
      85: aload_0
      86: aload_1
      87: invokevirtual #103                // Method doWrite0:(Lio/netty/channel/ChannelOutboundBuffer;)I
      90: isub
      91: istore_3
      92: goto          204
      95: aload         5
      97: iconst_0
      98: aaload
      99: astore        7
     101: aload         7
     103: invokevirtual #104                // Method java/nio/ByteBuffer.remaining:()I
     106: istore        8
     108: aload_2
     109: aload         7
     111: invokevirtual #105                // Method java/nio/channels/SocketChannel.write:(Ljava/nio/ByteBuffer;)I
     114: istore        9
     116: iload         9
     118: ifgt          127
     121: aload_0
     122: iconst_1
     123: invokevirtual #106                // Method incompleteWrite:(Z)V
     126: return
     127: aload_0
     128: iload         8
     130: iload         9
     132: iload         4
     134: invokespecial #107                // Method adjustMaxBytesPerGatheringWrite:(III)V
     137: aload_1
     138: iload         9
     140: i2l
     141: invokevirtual #108                // Method io/netty/channel/ChannelOutboundBuffer.removeBytes:(J)V
     144: iinc          3, -1
     147: goto          204
     150: aload_1
     151: invokevirtual #109                // Method io/netty/channel/ChannelOutboundBuffer.nioBufferSize:()J
     154: lstore        7
     156: aload_2
     157: aload         5
     159: iconst_0
     160: iload         6
     162: invokevirtual #110                // Method java/nio/channels/SocketChannel.write:([Ljava/nio/ByteBuffer;II)J
     165: lstore        9
     167: lload         9
     169: lconst_0
     170: lcmp
     171: ifgt          180
     174: aload_0
     175: iconst_1
     176: invokevirtual #106                // Method incompleteWrite:(Z)V
     179: return
     180: aload_0
     181: lload         7
     183: l2i
     184: lload         9
     186: l2i
     187: iload         4
     189: invokespecial #107                // Method adjustMaxBytesPerGatheringWrite:(III)V
     192: aload_1
     193: lload         9
     195: invokevirtual #108                // Method io/netty/channel/ChannelOutboundBuffer.removeBytes:(J)V
     198: iinc          3, -1
     201: goto          204
     204: iload_3
     205: ifgt          15
     208: aload_0
     209: iload_3
     210: ifge          217
     213: iconst_1
     214: goto          218
     217: iconst_0
     218: invokevirtual #106                // Method incompleteWrite:(Z)V
     221: return

  protected io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe newUnsafe();
    Code:
       0: new           #111                // class io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelUnsafe
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #112                // Method io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelUnsafe."<init>":(Lio/netty/channel/socket/nio/NioSocketChannel;Lio/netty/channel/socket/nio/NioSocketChannel$1;)V
       9: areturn

  protected java.nio.channels.SelectableChannel javaChannel();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
       4: areturn

  protected io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe();
    Code:
       0: aload_0
       1: invokevirtual #113                // Method newUnsafe:()Lio/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe;
       4: areturn

  public java.net.SocketAddress remoteAddress();
    Code:
       0: aload_0
       1: invokevirtual #114                // Method remoteAddress:()Ljava/net/InetSocketAddress;
       4: areturn

  public java.net.SocketAddress localAddress();
    Code:
       0: aload_0
       1: invokevirtual #115                // Method localAddress:()Ljava/net/InetSocketAddress;
       4: areturn

  public io.netty.channel.Channel parent();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method parent:()Lio/netty/channel/socket/ServerSocketChannel;
       4: areturn

  public io.netty.channel.ChannelConfig config();
    Code:
       0: aload_0
       1: invokevirtual #96                 // Method config:()Lio/netty/channel/socket/SocketChannelConfig;
       4: areturn

  static void access$100(io.netty.channel.socket.nio.NioSocketChannel, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method shutdownInput0:(Lio/netty/channel/ChannelPromise;)V
       5: return

  static void access$200(io.netty.channel.socket.nio.NioSocketChannel, io.netty.channel.ChannelFuture, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #5                  // Method shutdownOutputDone:(Lio/netty/channel/ChannelFuture;Lio/netty/channel/ChannelPromise;)V
       6: return

  static void access$300(io.netty.channel.ChannelFuture, io.netty.channel.ChannelFuture, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #4                  // Method shutdownDone:(Lio/netty/channel/ChannelFuture;Lio/netty/channel/ChannelFuture;Lio/netty/channel/ChannelPromise;)V
       6: return

  static void access$500(io.netty.channel.socket.nio.NioSocketChannel) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method doDeregister:()V
       4: return

  static void access$600(io.netty.channel.socket.nio.NioSocketChannel);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method clearReadPending:()V
       4: return

  static {};
    Code:
       0: ldc           #117                // class io/netty/channel/socket/nio/NioSocketChannel
       2: invokestatic  #118                // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
       5: putstatic     #62                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       8: invokestatic  #119                // Method java/nio/channels/spi/SelectorProvider.provider:()Ljava/nio/channels/spi/SelectorProvider;
      11: putstatic     #12                 // Field DEFAULT_SELECTOR_PROVIDER:Ljava/nio/channels/spi/SelectorProvider;
      14: return
}
