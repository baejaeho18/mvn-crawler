Compiled from "ChannelOutboundBuffer.java"
public final class io.netty.channel.ChannelOutboundBuffer {
  static final int CHANNEL_OUTBOUND_BUFFER_ENTRY_OVERHEAD;

  private static final io.netty.util.internal.logging.InternalLogger logger;

  private static final io.netty.util.concurrent.FastThreadLocal<java.nio.ByteBuffer[]> NIO_BUFFERS;

  private final io.netty.channel.Channel channel;

  private io.netty.channel.ChannelOutboundBuffer$Entry flushedEntry;

  private io.netty.channel.ChannelOutboundBuffer$Entry unflushedEntry;

  private io.netty.channel.ChannelOutboundBuffer$Entry tailEntry;

  private int flushed;

  private int nioBufferCount;

  private long nioBufferSize;

  private boolean inFail;

  private static final java.util.concurrent.atomic.AtomicLongFieldUpdater<io.netty.channel.ChannelOutboundBuffer> TOTAL_PENDING_SIZE_UPDATER;

  private volatile long totalPendingSize;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.netty.channel.ChannelOutboundBuffer> UNWRITABLE_UPDATER;

  private volatile int unwritable;

  private volatile java.lang.Runnable fireChannelWritabilityChangedTask;

  static final boolean $assertionsDisabled;

  io.netty.channel.ChannelOutboundBuffer(io.netty.channel.AbstractChannel);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field channel:Lio/netty/channel/Channel;
       9: return

  public void addMessage(java.lang.Object, int, io.netty.channel.ChannelPromise);
    Code:
       0: aload_1
       1: iload_2
       2: aload_1
       3: invokestatic  #3                  // Method total:(Ljava/lang/Object;)J
       6: aload_3
       7: invokestatic  #4                  // Method io/netty/channel/ChannelOutboundBuffer$Entry.newInstance:(Ljava/lang/Object;IJLio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelOutboundBuffer$Entry;
      10: astore        4
      12: aload_0
      13: getfield      #5                  // Field tailEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      16: ifnonnull     27
      19: aload_0
      20: aconst_null
      21: putfield      #6                  // Field flushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      24: goto          40
      27: aload_0
      28: getfield      #5                  // Field tailEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      31: astore        5
      33: aload         5
      35: aload         4
      37: putfield      #7                  // Field io/netty/channel/ChannelOutboundBuffer$Entry.next:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      40: aload_0
      41: aload         4
      43: putfield      #5                  // Field tailEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      46: aload_0
      47: getfield      #8                  // Field unflushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      50: ifnonnull     59
      53: aload_0
      54: aload         4
      56: putfield      #8                  // Field unflushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      59: aload_0
      60: aload         4
      62: getfield      #9                  // Field io/netty/channel/ChannelOutboundBuffer$Entry.pendingSize:I
      65: i2l
      66: iconst_0
      67: invokespecial #10                 // Method incrementPendingOutboundBytes:(JZ)V
      70: return

  public void addFlush();
    Code:
       0: aload_0
       1: getfield      #8                  // Field unflushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
       4: astore_1
       5: aload_1
       6: ifnull        70
       9: aload_0
      10: getfield      #6                  // Field flushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      13: ifnonnull     21
      16: aload_0
      17: aload_1
      18: putfield      #6                  // Field flushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      21: aload_0
      22: dup
      23: getfield      #11                 // Field flushed:I
      26: iconst_1
      27: iadd
      28: putfield      #11                 // Field flushed:I
      31: aload_1
      32: getfield      #12                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.promise:Lio/netty/channel/ChannelPromise;
      35: invokeinterface #13,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setUncancellable:()Z
      40: ifne          56
      43: aload_1
      44: invokevirtual #14                 // Method io/netty/channel/ChannelOutboundBuffer$Entry.cancel:()I
      47: istore_2
      48: aload_0
      49: iload_2
      50: i2l
      51: iconst_0
      52: iconst_1
      53: invokespecial #15                 // Method decrementPendingOutboundBytes:(JZZ)V
      56: aload_1
      57: getfield      #7                  // Field io/netty/channel/ChannelOutboundBuffer$Entry.next:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      60: astore_1
      61: aload_1
      62: ifnonnull     21
      65: aload_0
      66: aconst_null
      67: putfield      #8                  // Field unflushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      70: return

  void incrementPendingOutboundBytes(long);
    Code:
       0: aload_0
       1: lload_1
       2: iconst_1
       3: invokespecial #10                 // Method incrementPendingOutboundBytes:(JZ)V
       6: return

  private void incrementPendingOutboundBytes(long, boolean);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifne          7
       6: return
       7: getstatic     #16                 // Field TOTAL_PENDING_SIZE_UPDATER:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: aload_0
      11: lload_1
      12: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.addAndGet:(Ljava/lang/Object;J)J
      15: lstore        4
      17: lload         4
      19: aload_0
      20: getfield      #2                  // Field channel:Lio/netty/channel/Channel;
      23: invokeinterface #18,  1           // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
      28: invokeinterface #19,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getWriteBufferHighWaterMark:()I
      33: i2l
      34: lcmp
      35: ifle          43
      38: aload_0
      39: iload_3
      40: invokespecial #20                 // Method setUnwritable:(Z)V
      43: return

  void decrementPendingOutboundBytes(long);
    Code:
       0: aload_0
       1: lload_1
       2: iconst_1
       3: iconst_1
       4: invokespecial #15                 // Method decrementPendingOutboundBytes:(JZZ)V
       7: return

  private void decrementPendingOutboundBytes(long, boolean, boolean);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifne          7
       6: return
       7: getstatic     #16                 // Field TOTAL_PENDING_SIZE_UPDATER:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: aload_0
      11: lload_1
      12: lneg
      13: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.addAndGet:(Ljava/lang/Object;J)J
      16: lstore        5
      18: iload         4
      20: ifeq          49
      23: lload         5
      25: aload_0
      26: getfield      #2                  // Field channel:Lio/netty/channel/Channel;
      29: invokeinterface #18,  1           // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
      34: invokeinterface #21,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getWriteBufferLowWaterMark:()I
      39: i2l
      40: lcmp
      41: ifge          49
      44: aload_0
      45: iload_3
      46: invokespecial #22                 // Method setWritable:(Z)V
      49: return

  private static long total(java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #23                 // class io/netty/buffer/ByteBuf
       4: ifeq          16
       7: aload_0
       8: checkcast     #23                 // class io/netty/buffer/ByteBuf
      11: invokevirtual #24                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      14: i2l
      15: lreturn
      16: aload_0
      17: instanceof    #25                 // class io/netty/channel/FileRegion
      20: ifeq          33
      23: aload_0
      24: checkcast     #25                 // class io/netty/channel/FileRegion
      27: invokeinterface #26,  1           // InterfaceMethod io/netty/channel/FileRegion.count:()J
      32: lreturn
      33: aload_0
      34: instanceof    #27                 // class io/netty/buffer/ByteBufHolder
      37: ifeq          54
      40: aload_0
      41: checkcast     #27                 // class io/netty/buffer/ByteBufHolder
      44: invokeinterface #28,  1           // InterfaceMethod io/netty/buffer/ByteBufHolder.content:()Lio/netty/buffer/ByteBuf;
      49: invokevirtual #24                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      52: i2l
      53: lreturn
      54: ldc2_w        #29                 // long -1l
      57: lreturn

  public java.lang.Object current();
    Code:
       0: aload_0
       1: getfield      #6                  // Field flushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
       4: astore_1
       5: aload_1
       6: ifnonnull     11
       9: aconst_null
      10: areturn
      11: aload_1
      12: getfield      #31                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.msg:Ljava/lang/Object;
      15: areturn

  public long currentProgress();
    Code:
       0: aload_0
       1: getfield      #6                  // Field flushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
       4: astore_1
       5: aload_1
       6: ifnonnull     11
       9: lconst_0
      10: lreturn
      11: aload_1
      12: getfield      #32                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.progress:J
      15: lreturn

  public void progress(long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field flushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
       4: astore_3
       5: getstatic     #33                 // Field $assertionsDisabled:Z
       8: ifne          23
      11: aload_3
      12: ifnonnull     23
      15: new           #34                 // class java/lang/AssertionError
      18: dup
      19: invokespecial #35                 // Method java/lang/AssertionError."<init>":()V
      22: athrow
      23: aload_3
      24: getfield      #12                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.promise:Lio/netty/channel/ChannelPromise;
      27: astore        4
      29: aload_3
      30: getfield      #32                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.progress:J
      33: lload_1
      34: ladd
      35: lstore        5
      37: aload_3
      38: lload         5
      40: putfield      #32                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.progress:J
      43: aload         4
      45: instanceof    #36                 // class io/netty/channel/ChannelProgressivePromise
      48: ifeq          68
      51: aload         4
      53: checkcast     #36                 // class io/netty/channel/ChannelProgressivePromise
      56: lload         5
      58: aload_3
      59: getfield      #37                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.total:J
      62: invokeinterface #38,  5           // InterfaceMethod io/netty/channel/ChannelProgressivePromise.tryProgress:(JJ)Z
      67: pop
      68: return

  public boolean remove();
    Code:
       0: aload_0
       1: getfield      #6                  // Field flushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
       4: astore_1
       5: aload_1
       6: ifnonnull     15
       9: aload_0
      10: invokespecial #39                 // Method clearNioBuffers:()V
      13: iconst_0
      14: ireturn
      15: aload_1
      16: getfield      #31                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.msg:Ljava/lang/Object;
      19: astore_2
      20: aload_1
      21: getfield      #12                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.promise:Lio/netty/channel/ChannelPromise;
      24: astore_3
      25: aload_1
      26: getfield      #9                  // Field io/netty/channel/ChannelOutboundBuffer$Entry.pendingSize:I
      29: istore        4
      31: aload_0
      32: aload_1
      33: invokespecial #40                 // Method removeEntry:(Lio/netty/channel/ChannelOutboundBuffer$Entry;)V
      36: aload_1
      37: getfield      #41                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.cancelled:Z
      40: ifne          60
      43: aload_2
      44: invokestatic  #42                 // Method io/netty/util/ReferenceCountUtil.safeRelease:(Ljava/lang/Object;)V
      47: aload_3
      48: invokestatic  #43                 // Method safeSuccess:(Lio/netty/channel/ChannelPromise;)V
      51: aload_0
      52: iload         4
      54: i2l
      55: iconst_0
      56: iconst_1
      57: invokespecial #15                 // Method decrementPendingOutboundBytes:(JZZ)V
      60: aload_1
      61: invokevirtual #44                 // Method io/netty/channel/ChannelOutboundBuffer$Entry.recycle:()V
      64: iconst_1
      65: ireturn

  public boolean remove(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #45                 // Method remove0:(Ljava/lang/Throwable;Z)Z
       6: ireturn

  private boolean remove0(java.lang.Throwable, boolean);
    Code:
       0: aload_0
       1: getfield      #6                  // Field flushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
       4: astore_3
       5: aload_3
       6: ifnonnull     15
       9: aload_0
      10: invokespecial #39                 // Method clearNioBuffers:()V
      13: iconst_0
      14: ireturn
      15: aload_3
      16: getfield      #31                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.msg:Ljava/lang/Object;
      19: astore        4
      21: aload_3
      22: getfield      #12                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.promise:Lio/netty/channel/ChannelPromise;
      25: astore        5
      27: aload_3
      28: getfield      #9                  // Field io/netty/channel/ChannelOutboundBuffer$Entry.pendingSize:I
      31: istore        6
      33: aload_0
      34: aload_3
      35: invokespecial #40                 // Method removeEntry:(Lio/netty/channel/ChannelOutboundBuffer$Entry;)V
      38: aload_3
      39: getfield      #41                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.cancelled:Z
      42: ifne          65
      45: aload         4
      47: invokestatic  #42                 // Method io/netty/util/ReferenceCountUtil.safeRelease:(Ljava/lang/Object;)V
      50: aload         5
      52: aload_1
      53: invokestatic  #46                 // Method safeFail:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
      56: aload_0
      57: iload         6
      59: i2l
      60: iconst_0
      61: iload_2
      62: invokespecial #15                 // Method decrementPendingOutboundBytes:(JZZ)V
      65: aload_3
      66: invokevirtual #44                 // Method io/netty/channel/ChannelOutboundBuffer$Entry.recycle:()V
      69: iconst_1
      70: ireturn

  private void removeEntry(io.netty.channel.ChannelOutboundBuffer$Entry);
    Code:
       0: aload_0
       1: dup
       2: getfield      #11                 // Field flushed:I
       5: iconst_1
       6: isub
       7: dup_x1
       8: putfield      #11                 // Field flushed:I
      11: ifne          40
      14: aload_0
      15: aconst_null
      16: putfield      #6                  // Field flushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      19: aload_1
      20: aload_0
      21: getfield      #5                  // Field tailEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      24: if_acmpne     48
      27: aload_0
      28: aconst_null
      29: putfield      #5                  // Field tailEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      32: aload_0
      33: aconst_null
      34: putfield      #8                  // Field unflushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      37: goto          48
      40: aload_0
      41: aload_1
      42: getfield      #7                  // Field io/netty/channel/ChannelOutboundBuffer$Entry.next:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      45: putfield      #6                  // Field flushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      48: return

  public void removeBytes(long);
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method current:()Ljava/lang/Object;
       4: astore_3
       5: aload_3
       6: instanceof    #23                 // class io/netty/buffer/ByteBuf
       9: ifne          32
      12: getstatic     #33                 // Field $assertionsDisabled:Z
      15: ifne          118
      18: lload_1
      19: lconst_0
      20: lcmp
      21: ifeq          118
      24: new           #34                 // class java/lang/AssertionError
      27: dup
      28: invokespecial #35                 // Method java/lang/AssertionError."<init>":()V
      31: athrow
      32: aload_3
      33: checkcast     #23                 // class io/netty/buffer/ByteBuf
      36: astore        4
      38: aload         4
      40: invokevirtual #48                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
      43: istore        5
      45: aload         4
      47: invokevirtual #49                 // Method io/netty/buffer/ByteBuf.writerIndex:()I
      50: iload         5
      52: isub
      53: istore        6
      55: iload         6
      57: i2l
      58: lload_1
      59: lcmp
      60: ifgt          90
      63: lload_1
      64: lconst_0
      65: lcmp
      66: ifeq          82
      69: aload_0
      70: iload         6
      72: i2l
      73: invokevirtual #50                 // Method progress:(J)V
      76: lload_1
      77: iload         6
      79: i2l
      80: lsub
      81: lstore_1
      82: aload_0
      83: invokevirtual #51                 // Method remove:()Z
      86: pop
      87: goto          115
      90: lload_1
      91: lconst_0
      92: lcmp
      93: ifeq          118
      96: aload         4
      98: iload         5
     100: lload_1
     101: l2i
     102: iadd
     103: invokevirtual #52                 // Method io/netty/buffer/ByteBuf.readerIndex:(I)Lio/netty/buffer/ByteBuf;
     106: pop
     107: aload_0
     108: lload_1
     109: invokevirtual #50                 // Method progress:(J)V
     112: goto          118
     115: goto          0
     118: aload_0
     119: invokespecial #39                 // Method clearNioBuffers:()V
     122: return

  private void clearNioBuffers();
    Code:
       0: aload_0
       1: getfield      #53                 // Field nioBufferCount:I
       4: istore_1
       5: iload_1
       6: ifle          29
       9: aload_0
      10: iconst_0
      11: putfield      #53                 // Field nioBufferCount:I
      14: getstatic     #54                 // Field NIO_BUFFERS:Lio/netty/util/concurrent/FastThreadLocal;
      17: invokevirtual #55                 // Method io/netty/util/concurrent/FastThreadLocal.get:()Ljava/lang/Object;
      20: checkcast     #56                 // class "[Ljava/lang/Object;"
      23: iconst_0
      24: iload_1
      25: aconst_null
      26: invokestatic  #57                 // Method java/util/Arrays.fill:([Ljava/lang/Object;IILjava/lang/Object;)V
      29: return

  public java.nio.ByteBuffer[] nioBuffers();
    Code:
       0: aload_0
       1: ldc           #59                 // int 2147483647
       3: ldc2_w        #60                 // long 2147483647l
       6: invokevirtual #62                 // Method nioBuffers:(IJ)[Ljava/nio/ByteBuffer;
       9: areturn

  public java.nio.ByteBuffer[] nioBuffers(int, long);
    Code:
       0: getstatic     #33                 // Field $assertionsDisabled:Z
       3: ifne          18
       6: iload_1
       7: ifgt          18
      10: new           #34                 // class java/lang/AssertionError
      13: dup
      14: invokespecial #35                 // Method java/lang/AssertionError."<init>":()V
      17: athrow
      18: getstatic     #33                 // Field $assertionsDisabled:Z
      21: ifne          38
      24: lload_2
      25: lconst_0
      26: lcmp
      27: ifgt          38
      30: new           #34                 // class java/lang/AssertionError
      33: dup
      34: invokespecial #35                 // Method java/lang/AssertionError."<init>":()V
      37: athrow
      38: lconst_0
      39: lstore        4
      41: iconst_0
      42: istore        6
      44: invokestatic  #63                 // Method io/netty/util/internal/InternalThreadLocalMap.get:()Lio/netty/util/internal/InternalThreadLocalMap;
      47: astore        7
      49: getstatic     #54                 // Field NIO_BUFFERS:Lio/netty/util/concurrent/FastThreadLocal;
      52: aload         7
      54: invokevirtual #64                 // Method io/netty/util/concurrent/FastThreadLocal.get:(Lio/netty/util/internal/InternalThreadLocalMap;)Ljava/lang/Object;
      57: checkcast     #65                 // class "[Ljava/nio/ByteBuffer;"
      60: astore        8
      62: aload_0
      63: getfield      #6                  // Field flushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      66: astore        9
      68: aload_0
      69: aload         9
      71: invokespecial #66                 // Method isFlushedEntry:(Lio/netty/channel/ChannelOutboundBuffer$Entry;)Z
      74: ifeq          302
      77: aload         9
      79: getfield      #31                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.msg:Ljava/lang/Object;
      82: instanceof    #23                 // class io/netty/buffer/ByteBuf
      85: ifeq          302
      88: aload         9
      90: getfield      #41                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.cancelled:Z
      93: ifne          292
      96: aload         9
      98: getfield      #31                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.msg:Ljava/lang/Object;
     101: checkcast     #23                 // class io/netty/buffer/ByteBuf
     104: astore        10
     106: aload         10
     108: invokevirtual #48                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
     111: istore        11
     113: aload         10
     115: invokevirtual #49                 // Method io/netty/buffer/ByteBuf.writerIndex:()I
     118: iload         11
     120: isub
     121: istore        12
     123: iload         12
     125: ifle          292
     128: lload_2
     129: iload         12
     131: i2l
     132: lsub
     133: lload         4
     135: lcmp
     136: ifge          147
     139: iload         6
     141: ifeq          147
     144: goto          302
     147: lload         4
     149: iload         12
     151: i2l
     152: ladd
     153: lstore        4
     155: aload         9
     157: getfield      #67                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.count:I
     160: istore        13
     162: iload         13
     164: iconst_m1
     165: if_icmpne     181
     168: aload         9
     170: aload         10
     172: invokevirtual #68                 // Method io/netty/buffer/ByteBuf.nioBufferCount:()I
     175: dup
     176: istore        13
     178: putfield      #67                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.count:I
     181: iload_1
     182: iload         6
     184: iload         13
     186: iadd
     187: invokestatic  #69                 // Method java/lang/Math.min:(II)I
     190: istore        14
     192: iload         14
     194: aload         8
     196: arraylength
     197: if_icmple     221
     200: aload         8
     202: iload         14
     204: iload         6
     206: invokestatic  #70                 // Method expandNioBufferArray:([Ljava/nio/ByteBuffer;II)[Ljava/nio/ByteBuffer;
     209: astore        8
     211: getstatic     #54                 // Field NIO_BUFFERS:Lio/netty/util/concurrent/FastThreadLocal;
     214: aload         7
     216: aload         8
     218: invokevirtual #71                 // Method io/netty/util/concurrent/FastThreadLocal.set:(Lio/netty/util/internal/InternalThreadLocalMap;Ljava/lang/Object;)V
     221: iload         13
     223: iconst_1
     224: if_icmpne     269
     227: aload         9
     229: getfield      #72                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.buf:Ljava/nio/ByteBuffer;
     232: astore        15
     234: aload         15
     236: ifnonnull     256
     239: aload         9
     241: aload         10
     243: iload         11
     245: iload         12
     247: invokevirtual #73                 // Method io/netty/buffer/ByteBuf.internalNioBuffer:(II)Ljava/nio/ByteBuffer;
     250: dup
     251: astore        15
     253: putfield      #72                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.buf:Ljava/nio/ByteBuffer;
     256: aload         8
     258: iload         6
     260: iinc          6, 1
     263: aload         15
     265: aastore
     266: goto          283
     269: aload         9
     271: aload         10
     273: aload         8
     275: iload         6
     277: iload_1
     278: invokestatic  #74                 // Method nioBuffers:(Lio/netty/channel/ChannelOutboundBuffer$Entry;Lio/netty/buffer/ByteBuf;[Ljava/nio/ByteBuffer;II)I
     281: istore        6
     283: iload         6
     285: iload_1
     286: if_icmplt     292
     289: goto          302
     292: aload         9
     294: getfield      #7                  // Field io/netty/channel/ChannelOutboundBuffer$Entry.next:Lio/netty/channel/ChannelOutboundBuffer$Entry;
     297: astore        9
     299: goto          68
     302: aload_0
     303: iload         6
     305: putfield      #53                 // Field nioBufferCount:I
     308: aload_0
     309: lload         4
     311: putfield      #75                 // Field nioBufferSize:J
     314: aload         8
     316: areturn

  private static int nioBuffers(io.netty.channel.ChannelOutboundBuffer$Entry, io.netty.buffer.ByteBuf, java.nio.ByteBuffer[], int, int);
    Code:
       0: aload_0
       1: getfield      #76                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.bufs:[Ljava/nio/ByteBuffer;
       4: astore        5
       6: aload         5
       8: ifnonnull     22
      11: aload_0
      12: aload_1
      13: invokevirtual #77                 // Method io/netty/buffer/ByteBuf.nioBuffers:()[Ljava/nio/ByteBuffer;
      16: dup
      17: astore        5
      19: putfield      #76                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.bufs:[Ljava/nio/ByteBuffer;
      22: iconst_0
      23: istore        6
      25: iload         6
      27: aload         5
      29: arraylength
      30: if_icmpge     79
      33: iload_3
      34: iload         4
      36: if_icmpge     79
      39: aload         5
      41: iload         6
      43: aaload
      44: astore        7
      46: aload         7
      48: ifnonnull     54
      51: goto          79
      54: aload         7
      56: invokevirtual #78                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      59: ifne          65
      62: goto          73
      65: aload_2
      66: iload_3
      67: iinc          3, 1
      70: aload         7
      72: aastore
      73: iinc          6, 1
      76: goto          25
      79: iload_3
      80: ireturn

  private static java.nio.ByteBuffer[] expandNioBufferArray(java.nio.ByteBuffer[], int, int);
    Code:
       0: aload_0
       1: arraylength
       2: istore_3
       3: iload_3
       4: iconst_1
       5: ishl
       6: istore_3
       7: iload_3
       8: ifge          19
      11: new           #79                 // class java/lang/IllegalStateException
      14: dup
      15: invokespecial #80                 // Method java/lang/IllegalStateException."<init>":()V
      18: athrow
      19: iload_1
      20: iload_3
      21: if_icmpgt     3
      24: iload_3
      25: anewarray     #81                 // class java/nio/ByteBuffer
      28: astore        4
      30: aload_0
      31: iconst_0
      32: aload         4
      34: iconst_0
      35: iload_2
      36: invokestatic  #82                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      39: aload         4
      41: areturn

  public int nioBufferCount();
    Code:
       0: aload_0
       1: getfield      #53                 // Field nioBufferCount:I
       4: ireturn

  public long nioBufferSize();
    Code:
       0: aload_0
       1: getfield      #75                 // Field nioBufferSize:J
       4: lreturn

  public boolean isWritable();
    Code:
       0: aload_0
       1: getfield      #83                 // Field unwritable:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean getUserDefinedWritability(int);
    Code:
       0: aload_0
       1: getfield      #83                 // Field unwritable:I
       4: iload_1
       5: invokestatic  #84                 // Method writabilityMask:(I)I
       8: iand
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public void setUserDefinedWritability(int, boolean);
    Code:
       0: iload_2
       1: ifeq          12
       4: aload_0
       5: iload_1
       6: invokespecial #85                 // Method setUserDefinedWritability:(I)V
       9: goto          17
      12: aload_0
      13: iload_1
      14: invokespecial #86                 // Method clearUserDefinedWritability:(I)V
      17: return

  private void setUserDefinedWritability(int);
    Code:
       0: iload_1
       1: invokestatic  #84                 // Method writabilityMask:(I)I
       4: iconst_m1
       5: ixor
       6: istore_2
       7: aload_0
       8: getfield      #83                 // Field unwritable:I
      11: istore_3
      12: iload_3
      13: iload_2
      14: iand
      15: istore        4
      17: getstatic     #87                 // Field UNWRITABLE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      20: aload_0
      21: iload_3
      22: iload         4
      24: invokevirtual #88                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      27: ifeq          47
      30: iload_3
      31: ifeq          50
      34: iload         4
      36: ifne          50
      39: aload_0
      40: iconst_1
      41: invokespecial #89                 // Method fireChannelWritabilityChanged:(Z)V
      44: goto          50
      47: goto          7
      50: return

  private void clearUserDefinedWritability(int);
    Code:
       0: iload_1
       1: invokestatic  #84                 // Method writabilityMask:(I)I
       4: istore_2
       5: aload_0
       6: getfield      #83                 // Field unwritable:I
       9: istore_3
      10: iload_3
      11: iload_2
      12: ior
      13: istore        4
      15: getstatic     #87                 // Field UNWRITABLE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      18: aload_0
      19: iload_3
      20: iload         4
      22: invokevirtual #88                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      25: ifeq          45
      28: iload_3
      29: ifne          48
      32: iload         4
      34: ifeq          48
      37: aload_0
      38: iconst_1
      39: invokespecial #89                 // Method fireChannelWritabilityChanged:(Z)V
      42: goto          48
      45: goto          5
      48: return

  private static int writabilityMask(int);
    Code:
       0: iload_0
       1: iconst_1
       2: if_icmplt     11
       5: iload_0
       6: bipush        31
       8: if_icmple     43
      11: new           #90                 // class java/lang/IllegalArgumentException
      14: dup
      15: new           #91                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #92                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #93                 // String index:
      24: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: iload_0
      28: invokevirtual #95                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: ldc           #96                 // String  (expected: 1~31)
      33: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #97                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokespecial #98                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: iconst_1
      44: iload_0
      45: ishl
      46: ireturn

  private void setWritable(boolean);
    Code:
       0: aload_0
       1: getfield      #83                 // Field unwritable:I
       4: istore_2
       5: iload_2
       6: bipush        -2
       8: iand
       9: istore_3
      10: getstatic     #87                 // Field UNWRITABLE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      13: aload_0
      14: iload_2
      15: iload_3
      16: invokevirtual #88                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      19: ifeq          38
      22: iload_2
      23: ifeq          41
      26: iload_3
      27: ifne          41
      30: aload_0
      31: iload_1
      32: invokespecial #89                 // Method fireChannelWritabilityChanged:(Z)V
      35: goto          41
      38: goto          0
      41: return

  private void setUnwritable(boolean);
    Code:
       0: aload_0
       1: getfield      #83                 // Field unwritable:I
       4: istore_2
       5: iload_2
       6: iconst_1
       7: ior
       8: istore_3
       9: getstatic     #87                 // Field UNWRITABLE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      12: aload_0
      13: iload_2
      14: iload_3
      15: invokevirtual #88                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      18: ifeq          33
      21: iload_2
      22: ifne          36
      25: aload_0
      26: iload_1
      27: invokespecial #89                 // Method fireChannelWritabilityChanged:(Z)V
      30: goto          36
      33: goto          0
      36: return

  private void fireChannelWritabilityChanged(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field channel:Lio/netty/channel/Channel;
       4: invokeinterface #99,  1           // InterfaceMethod io/netty/channel/Channel.pipeline:()Lio/netty/channel/ChannelPipeline;
       9: astore_2
      10: iload_1
      11: ifeq          56
      14: aload_0
      15: getfield      #100                // Field fireChannelWritabilityChangedTask:Ljava/lang/Runnable;
      18: astore_3
      19: aload_3
      20: ifnonnull     38
      23: aload_0
      24: new           #101                // class io/netty/channel/ChannelOutboundBuffer$2
      27: dup
      28: aload_0
      29: aload_2
      30: invokespecial #102                // Method io/netty/channel/ChannelOutboundBuffer$2."<init>":(Lio/netty/channel/ChannelOutboundBuffer;Lio/netty/channel/ChannelPipeline;)V
      33: dup
      34: astore_3
      35: putfield      #100                // Field fireChannelWritabilityChangedTask:Ljava/lang/Runnable;
      38: aload_0
      39: getfield      #2                  // Field channel:Lio/netty/channel/Channel;
      42: invokeinterface #103,  1          // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
      47: aload_3
      48: invokeinterface #104,  2          // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      53: goto          63
      56: aload_2
      57: invokeinterface #105,  1          // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelWritabilityChanged:()Lio/netty/channel/ChannelPipeline;
      62: pop
      63: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #11                 // Field flushed:I
       4: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #11                 // Field flushed:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  void failFlushed(java.lang.Throwable, boolean);
    Code:
       0: aload_0
       1: getfield      #106                // Field inFail:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #106                // Field inFail:Z
      13: aload_0
      14: aload_1
      15: iload_2
      16: invokespecial #45                 // Method remove0:(Ljava/lang/Throwable;Z)Z
      19: ifne          13
      22: goto          25
      25: aload_0
      26: iconst_0
      27: putfield      #106                // Field inFail:Z
      30: goto          41
      33: astore_3
      34: aload_0
      35: iconst_0
      36: putfield      #106                // Field inFail:Z
      39: aload_3
      40: athrow
      41: return
    Exception table:
       from    to  target type
           8    25    33   any

  void close(java.lang.Throwable, boolean);
    Code:
       0: aload_0
       1: getfield      #106                // Field inFail:Z
       4: ifeq          32
       7: aload_0
       8: getfield      #2                  // Field channel:Lio/netty/channel/Channel;
      11: invokeinterface #103,  1          // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
      16: new           #107                // class io/netty/channel/ChannelOutboundBuffer$3
      19: dup
      20: aload_0
      21: aload_1
      22: iload_2
      23: invokespecial #108                // Method io/netty/channel/ChannelOutboundBuffer$3."<init>":(Lio/netty/channel/ChannelOutboundBuffer;Ljava/lang/Throwable;Z)V
      26: invokeinterface #104,  2          // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      31: return
      32: aload_0
      33: iconst_1
      34: putfield      #106                // Field inFail:Z
      37: iload_2
      38: ifne          63
      41: aload_0
      42: getfield      #2                  // Field channel:Lio/netty/channel/Channel;
      45: invokeinterface #109,  1          // InterfaceMethod io/netty/channel/Channel.isOpen:()Z
      50: ifeq          63
      53: new           #79                 // class java/lang/IllegalStateException
      56: dup
      57: ldc           #110                // String close() must be invoked after the channel is closed.
      59: invokespecial #111                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      62: athrow
      63: aload_0
      64: invokevirtual #112                // Method isEmpty:()Z
      67: ifne          80
      70: new           #79                 // class java/lang/IllegalStateException
      73: dup
      74: ldc           #113                // String close() must be invoked after all flushed writes are handled.
      76: invokespecial #111                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      79: athrow
      80: aload_0
      81: getfield      #8                  // Field unflushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      84: astore_3
      85: aload_3
      86: ifnull        137
      89: aload_3
      90: getfield      #9                  // Field io/netty/channel/ChannelOutboundBuffer$Entry.pendingSize:I
      93: istore        4
      95: getstatic     #16                 // Field TOTAL_PENDING_SIZE_UPDATER:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      98: aload_0
      99: iload         4
     101: ineg
     102: i2l
     103: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.addAndGet:(Ljava/lang/Object;J)J
     106: pop2
     107: aload_3
     108: getfield      #41                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.cancelled:Z
     111: ifne          129
     114: aload_3
     115: getfield      #31                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.msg:Ljava/lang/Object;
     118: invokestatic  #42                 // Method io/netty/util/ReferenceCountUtil.safeRelease:(Ljava/lang/Object;)V
     121: aload_3
     122: getfield      #12                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.promise:Lio/netty/channel/ChannelPromise;
     125: aload_1
     126: invokestatic  #46                 // Method safeFail:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
     129: aload_3
     130: invokevirtual #114                // Method io/netty/channel/ChannelOutboundBuffer$Entry.recycleAndGetNext:()Lio/netty/channel/ChannelOutboundBuffer$Entry;
     133: astore_3
     134: goto          85
     137: aload_0
     138: iconst_0
     139: putfield      #106                // Field inFail:Z
     142: goto          155
     145: astore        5
     147: aload_0
     148: iconst_0
     149: putfield      #106                // Field inFail:Z
     152: aload         5
     154: athrow
     155: aload_0
     156: invokespecial #39                 // Method clearNioBuffers:()V
     159: return
    Exception table:
       from    to  target type
          80   137   145   any
         145   147   145   any

  void close(java.nio.channels.ClosedChannelException);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #115                // Method close:(Ljava/lang/Throwable;Z)V
       6: return

  private static void safeSuccess(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_0
       3: instanceof    #116                // class io/netty/channel/VoidChannelPromise
       6: ifeq          13
       9: aconst_null
      10: goto          16
      13: getstatic     #117                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      16: invokestatic  #118                // Method io/netty/util/internal/PromiseNotificationUtil.trySuccess:(Lio/netty/util/concurrent/Promise;Ljava/lang/Object;Lio/netty/util/internal/logging/InternalLogger;)V
      19: return

  private static void safeFail(io.netty.channel.ChannelPromise, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: instanceof    #116                // class io/netty/channel/VoidChannelPromise
       6: ifeq          13
       9: aconst_null
      10: goto          16
      13: getstatic     #117                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      16: invokestatic  #119                // Method io/netty/util/internal/PromiseNotificationUtil.tryFailure:(Lio/netty/util/concurrent/Promise;Ljava/lang/Throwable;Lio/netty/util/internal/logging/InternalLogger;)V
      19: return

  public void recycle();
    Code:
       0: return

  public long totalPendingWriteBytes();
    Code:
       0: aload_0
       1: getfield      #120                // Field totalPendingSize:J
       4: lreturn

  public long bytesBeforeUnwritable();
    Code:
       0: aload_0
       1: getfield      #2                  // Field channel:Lio/netty/channel/Channel;
       4: invokeinterface #18,  1           // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
       9: invokeinterface #19,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getWriteBufferHighWaterMark:()I
      14: i2l
      15: aload_0
      16: getfield      #120                // Field totalPendingSize:J
      19: lsub
      20: lstore_1
      21: lload_1
      22: lconst_0
      23: lcmp
      24: ifle          40
      27: aload_0
      28: invokevirtual #121                // Method isWritable:()Z
      31: ifeq          38
      34: lload_1
      35: goto          39
      38: lconst_0
      39: lreturn
      40: lconst_0
      41: lreturn

  public long bytesBeforeWritable();
    Code:
       0: aload_0
       1: getfield      #120                // Field totalPendingSize:J
       4: aload_0
       5: getfield      #2                  // Field channel:Lio/netty/channel/Channel;
       8: invokeinterface #18,  1           // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
      13: invokeinterface #21,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getWriteBufferLowWaterMark:()I
      18: i2l
      19: lsub
      20: lstore_1
      21: lload_1
      22: lconst_0
      23: lcmp
      24: ifle          40
      27: aload_0
      28: invokevirtual #121                // Method isWritable:()Z
      31: ifeq          38
      34: lconst_0
      35: goto          39
      38: lload_1
      39: lreturn
      40: lconst_0
      41: lreturn

  public void forEachFlushedMessage(io.netty.channel.ChannelOutboundBuffer$MessageProcessor) throws java.lang.Exception;
    Code:
       0: aload_1
       1: ldc           #122                // String processor
       3: invokestatic  #123                // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #6                  // Field flushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      11: astore_2
      12: aload_2
      13: ifnonnull     17
      16: return
      17: aload_2
      18: getfield      #41                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.cancelled:Z
      21: ifne          38
      24: aload_1
      25: aload_2
      26: getfield      #31                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.msg:Ljava/lang/Object;
      29: invokeinterface #124,  2          // InterfaceMethod io/netty/channel/ChannelOutboundBuffer$MessageProcessor.processMessage:(Ljava/lang/Object;)Z
      34: ifne          38
      37: return
      38: aload_2
      39: getfield      #7                  // Field io/netty/channel/ChannelOutboundBuffer$Entry.next:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      42: astore_2
      43: aload_0
      44: aload_2
      45: invokespecial #66                 // Method isFlushedEntry:(Lio/netty/channel/ChannelOutboundBuffer$Entry;)Z
      48: ifne          17
      51: return

  private boolean isFlushedEntry(io.netty.channel.ChannelOutboundBuffer$Entry);
    Code:
       0: aload_1
       1: ifnull        16
       4: aload_1
       5: aload_0
       6: getfield      #8                  // Field unflushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
       9: if_acmpeq     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  static {};
    Code:
       0: ldc           #125                // class io/netty/channel/ChannelOutboundBuffer
       2: invokevirtual #126                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #33                 // Field $assertionsDisabled:Z
      16: ldc           #127                // String io.netty.transport.outboundBufferEntrySizeOverhead
      18: bipush        96
      20: invokestatic  #128                // Method io/netty/util/internal/SystemPropertyUtil.getInt:(Ljava/lang/String;I)I
      23: putstatic     #129                // Field CHANNEL_OUTBOUND_BUFFER_ENTRY_OVERHEAD:I
      26: ldc           #125                // class io/netty/channel/ChannelOutboundBuffer
      28: invokestatic  #130                // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
      31: putstatic     #117                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      34: new           #131                // class io/netty/channel/ChannelOutboundBuffer$1
      37: dup
      38: invokespecial #132                // Method io/netty/channel/ChannelOutboundBuffer$1."<init>":()V
      41: putstatic     #54                 // Field NIO_BUFFERS:Lio/netty/util/concurrent/FastThreadLocal;
      44: ldc           #125                // class io/netty/channel/ChannelOutboundBuffer
      46: ldc           #133                // String totalPendingSize
      48: invokestatic  #134                // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      51: putstatic     #16                 // Field TOTAL_PENDING_SIZE_UPDATER:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      54: ldc           #125                // class io/netty/channel/ChannelOutboundBuffer
      56: ldc           #135                // String unwritable
      58: invokestatic  #136                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      61: putstatic     #87                 // Field UNWRITABLE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      64: return
}
