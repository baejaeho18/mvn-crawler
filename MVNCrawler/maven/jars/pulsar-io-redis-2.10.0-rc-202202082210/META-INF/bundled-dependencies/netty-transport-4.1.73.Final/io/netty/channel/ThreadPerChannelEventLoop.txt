Compiled from "ThreadPerChannelEventLoop.java"
public class io.netty.channel.ThreadPerChannelEventLoop extends io.netty.channel.SingleThreadEventLoop {
  private final io.netty.channel.ThreadPerChannelEventLoopGroup parent;

  private io.netty.channel.Channel ch;

  public io.netty.channel.ThreadPerChannelEventLoop(io.netty.channel.ThreadPerChannelEventLoopGroup);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: getfield      #2                  // Field io/netty/channel/ThreadPerChannelEventLoopGroup.executor:Ljava/util/concurrent/Executor;
       6: iconst_1
       7: invokespecial #3                  // Method io/netty/channel/SingleThreadEventLoop."<init>":(Lio/netty/channel/EventLoopGroup;Ljava/util/concurrent/Executor;Z)V
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field parent:Lio/netty/channel/ThreadPerChannelEventLoopGroup;
      15: return

  public io.netty.channel.ChannelFuture register(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method io/netty/channel/SingleThreadEventLoop.register:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       5: new           #6                  // class io/netty/channel/ThreadPerChannelEventLoop$1
       8: dup
       9: aload_0
      10: invokespecial #7                  // Method io/netty/channel/ThreadPerChannelEventLoop$1."<init>":(Lio/netty/channel/ThreadPerChannelEventLoop;)V
      13: invokeinterface #8,  2            // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      18: areturn

  public io.netty.channel.ChannelFuture register(io.netty.channel.Channel, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #9                  // Method io/netty/channel/SingleThreadEventLoop.register:(Lio/netty/channel/Channel;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       6: new           #10                 // class io/netty/channel/ThreadPerChannelEventLoop$2
       9: dup
      10: aload_0
      11: invokespecial #11                 // Method io/netty/channel/ThreadPerChannelEventLoop$2."<init>":(Lio/netty/channel/ThreadPerChannelEventLoop;)V
      14: invokeinterface #8,  2            // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      19: areturn

  protected void run();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method takeTask:()Ljava/lang/Runnable;
       4: astore_1
       5: aload_1
       6: ifnull        19
       9: aload_1
      10: invokeinterface #13,  1           // InterfaceMethod java/lang/Runnable.run:()V
      15: aload_0
      16: invokevirtual #14                 // Method updateLastExecutionTime:()V
      19: aload_0
      20: getfield      #1                  // Field ch:Lio/netty/channel/Channel;
      23: astore_2
      24: aload_0
      25: invokevirtual #15                 // Method isShuttingDown:()Z
      28: ifeq          67
      31: aload_2
      32: ifnull        57
      35: aload_2
      36: invokeinterface #16,  1           // InterfaceMethod io/netty/channel/Channel.unsafe:()Lio/netty/channel/Channel$Unsafe;
      41: aload_2
      42: invokeinterface #16,  1           // InterfaceMethod io/netty/channel/Channel.unsafe:()Lio/netty/channel/Channel$Unsafe;
      47: invokeinterface #17,  1           // InterfaceMethod io/netty/channel/Channel$Unsafe.voidPromise:()Lio/netty/channel/ChannelPromise;
      52: invokeinterface #18,  2           // InterfaceMethod io/netty/channel/Channel$Unsafe.close:(Lio/netty/channel/ChannelPromise;)V
      57: aload_0
      58: invokevirtual #19                 // Method confirmShutdown:()Z
      61: ifeq          89
      64: goto          92
      67: aload_2
      68: ifnull        89
      71: aload_2
      72: invokeinterface #20,  1           // InterfaceMethod io/netty/channel/Channel.isRegistered:()Z
      77: ifne          89
      80: aload_0
      81: invokevirtual #21                 // Method runAllTasks:()Z
      84: pop
      85: aload_0
      86: invokevirtual #22                 // Method deregister:()V
      89: goto          0
      92: return

  protected void deregister();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #1                  // Field ch:Lio/netty/channel/Channel;
       5: aload_0
       6: getfield      #4                  // Field parent:Lio/netty/channel/ThreadPerChannelEventLoopGroup;
       9: getfield      #23                 // Field io/netty/channel/ThreadPerChannelEventLoopGroup.activeChildren:Ljava/util/Set;
      12: aload_0
      13: invokeinterface #24,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      18: pop
      19: aload_0
      20: getfield      #4                  // Field parent:Lio/netty/channel/ThreadPerChannelEventLoopGroup;
      23: getfield      #25                 // Field io/netty/channel/ThreadPerChannelEventLoopGroup.idleChildren:Ljava/util/Queue;
      26: aload_0
      27: invokeinterface #26,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      32: pop
      33: return

  public int registeredChannels();
    Code:
       0: iconst_1
       1: ireturn

  static io.netty.channel.Channel access$002(io.netty.channel.ThreadPerChannelEventLoop, io.netty.channel.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #1                  // Field ch:Lio/netty/channel/Channel;
       6: areturn
}
