class org.glassfish.jersey.internal.jsr166.SubmissionPublisher$1 implements java.util.function.BiConsumer<java.util.concurrent.Flow$Subscriber<? super T>, java.lang.Throwable> {
  final java.util.function.BiConsumer val$consumer;

  org.glassfish.jersey.internal.jsr166.SubmissionPublisher$1(java.util.function.BiConsumer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$consumer:Ljava/util/function/BiConsumer;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public void accept(java.util.concurrent.Flow$Subscriber<? super T>, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$consumer:Ljava/util/function/BiConsumer;
       4: aload_1
       5: invokestatic  #3                  // Method org/glassfish/jersey/internal/jsr166/SubmissionPublisher.convertSubscriber:(Ljava/util/concurrent/Flow$Subscriber;)Lorg/glassfish/jersey/internal/jsr166/Flow$Subscriber;
       8: aload_2
       9: invokeinterface #4,  3            // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      14: return

  public void accept(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #5                  // class java/util/concurrent/Flow$Subscriber
       5: aload_2
       6: checkcast     #6                  // class java/lang/Throwable
       9: invokevirtual #7                  // Method accept:(Ljava/util/concurrent/Flow$Subscriber;Ljava/lang/Throwable;)V
      12: return
}
