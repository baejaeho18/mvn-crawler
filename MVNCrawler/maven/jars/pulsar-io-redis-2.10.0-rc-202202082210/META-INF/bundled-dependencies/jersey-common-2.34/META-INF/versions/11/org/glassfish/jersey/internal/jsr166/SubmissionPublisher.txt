public class org.glassfish.jersey.internal.jsr166.SubmissionPublisher<T> implements org.glassfish.jersey.internal.jsr166.SubmittableFlowPublisher<T> {
  private final java.util.concurrent.SubmissionPublisher<T> publisher;

  public org.glassfish.jersey.internal.jsr166.SubmissionPublisher(java.util.concurrent.Executor, int, java.util.function.BiConsumer<? super org.glassfish.jersey.internal.jsr166.Flow$Subscriber<? super T>, ? super java.lang.Throwable>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/SubmissionPublisher
       8: dup
       9: aload_1
      10: iload_2
      11: aload_3
      12: invokestatic  #3                  // Method convertConsumer:(Ljava/util/function/BiConsumer;)Ljava/util/function/BiConsumer;
      15: invokespecial #4                  // Method java/util/concurrent/SubmissionPublisher."<init>":(Ljava/util/concurrent/Executor;ILjava/util/function/BiConsumer;)V
      18: putfield      #5                  // Field publisher:Ljava/util/concurrent/SubmissionPublisher;
      21: return

  public org.glassfish.jersey.internal.jsr166.SubmissionPublisher(java.util.concurrent.Executor, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/SubmissionPublisher
       8: dup
       9: aload_1
      10: iload_2
      11: invokespecial #6                  // Method java/util/concurrent/SubmissionPublisher."<init>":(Ljava/util/concurrent/Executor;I)V
      14: putfield      #5                  // Field publisher:Ljava/util/concurrent/SubmissionPublisher;
      17: return

  public org.glassfish.jersey.internal.jsr166.SubmissionPublisher();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/SubmissionPublisher
       8: dup
       9: invokespecial #7                  // Method java/util/concurrent/SubmissionPublisher."<init>":()V
      12: putfield      #5                  // Field publisher:Ljava/util/concurrent/SubmissionPublisher;
      15: return

  public java.util.concurrent.CompletableFuture<java.lang.Void> consume(java.util.function.Consumer<? super T>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field publisher:Ljava/util/concurrent/SubmissionPublisher;
       4: aload_1
       5: invokevirtual #8                  // Method java/util/concurrent/SubmissionPublisher.consume:(Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;
       8: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #5                  // Field publisher:Ljava/util/concurrent/SubmissionPublisher;
       4: invokevirtual #9                  // Method java/util/concurrent/SubmissionPublisher.close:()V
       7: return

  public void closeExceptionally(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #5                  // Field publisher:Ljava/util/concurrent/SubmissionPublisher;
       4: aload_1
       5: invokevirtual #10                 // Method java/util/concurrent/SubmissionPublisher.closeExceptionally:(Ljava/lang/Throwable;)V
       8: return

  public long estimateMinimumDemand();
    Code:
       0: aload_0
       1: getfield      #5                  // Field publisher:Ljava/util/concurrent/SubmissionPublisher;
       4: invokevirtual #11                 // Method java/util/concurrent/SubmissionPublisher.estimateMinimumDemand:()J
       7: lreturn

  public int estimateMaximumLag();
    Code:
       0: aload_0
       1: getfield      #5                  // Field publisher:Ljava/util/concurrent/SubmissionPublisher;
       4: invokevirtual #12                 // Method java/util/concurrent/SubmissionPublisher.estimateMaximumLag:()I
       7: ireturn

  public java.lang.Throwable getClosedException();
    Code:
       0: aload_0
       1: getfield      #5                  // Field publisher:Ljava/util/concurrent/SubmissionPublisher;
       4: invokevirtual #13                 // Method java/util/concurrent/SubmissionPublisher.getClosedException:()Ljava/lang/Throwable;
       7: areturn

  public int getMaxBufferCapacity();
    Code:
       0: aload_0
       1: getfield      #5                  // Field publisher:Ljava/util/concurrent/SubmissionPublisher;
       4: invokevirtual #14                 // Method java/util/concurrent/SubmissionPublisher.getMaxBufferCapacity:()I
       7: ireturn

  public int offer(T, long, java.util.concurrent.TimeUnit, java.util.function.BiPredicate<org.glassfish.jersey.internal.jsr166.Flow$Subscriber<? super T>, ? super T>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field publisher:Ljava/util/concurrent/SubmissionPublisher;
       4: aload_1
       5: lload_2
       6: aload         4
       8: aload         5
      10: invokestatic  #15                 // Method convertPredicate:(Ljava/util/function/BiPredicate;)Ljava/util/function/BiPredicate;
      13: invokevirtual #16                 // Method java/util/concurrent/SubmissionPublisher.offer:(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;Ljava/util/function/BiPredicate;)I
      16: ireturn

  public int offer(T, java.util.function.BiPredicate<org.glassfish.jersey.internal.jsr166.Flow$Subscriber<? super T>, ? super T>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field publisher:Ljava/util/concurrent/SubmissionPublisher;
       4: aload_1
       5: aload_2
       6: invokestatic  #15                 // Method convertPredicate:(Ljava/util/function/BiPredicate;)Ljava/util/function/BiPredicate;
       9: invokevirtual #17                 // Method java/util/concurrent/SubmissionPublisher.offer:(Ljava/lang/Object;Ljava/util/function/BiPredicate;)I
      12: ireturn

  public int submit(T);
    Code:
       0: aload_0
       1: getfield      #5                  // Field publisher:Ljava/util/concurrent/SubmissionPublisher;
       4: aload_1
       5: invokevirtual #18                 // Method java/util/concurrent/SubmissionPublisher.submit:(Ljava/lang/Object;)I
       8: ireturn

  public void subscribe(org.glassfish.jersey.internal.jsr166.Flow$Subscriber<? super T>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field publisher:Ljava/util/concurrent/SubmissionPublisher;
       4: aload_1
       5: invokestatic  #19                 // Method convertSubscriber:(Lorg/glassfish/jersey/internal/jsr166/Flow$Subscriber;)Ljava/util/concurrent/Flow$Subscriber;
       8: invokevirtual #20                 // Method java/util/concurrent/SubmissionPublisher.subscribe:(Ljava/util/concurrent/Flow$Subscriber;)V
      11: return

  private static <T> java.util.function.BiConsumer<? super java.util.concurrent.Flow$Subscriber<? super T>, ? super java.lang.Throwable> convertConsumer(java.util.function.BiConsumer<? super org.glassfish.jersey.internal.jsr166.Flow$Subscriber<? super T>, ? super java.lang.Throwable>);
    Code:
       0: new           #21                 // class org/glassfish/jersey/internal/jsr166/SubmissionPublisher$1
       3: dup
       4: aload_0
       5: invokespecial #22                 // Method org/glassfish/jersey/internal/jsr166/SubmissionPublisher$1."<init>":(Ljava/util/function/BiConsumer;)V
       8: areturn

  private static <T> java.util.function.BiPredicate<java.util.concurrent.Flow$Subscriber<? super T>, ? super T> convertPredicate(java.util.function.BiPredicate<org.glassfish.jersey.internal.jsr166.Flow$Subscriber<? super T>, ? super T>);
    Code:
       0: new           #23                 // class org/glassfish/jersey/internal/jsr166/SubmissionPublisher$2
       3: dup
       4: aload_0
       5: invokespecial #24                 // Method org/glassfish/jersey/internal/jsr166/SubmissionPublisher$2."<init>":(Ljava/util/function/BiPredicate;)V
       8: areturn

  private static <T> org.glassfish.jersey.internal.jsr166.Flow$Subscriber<? super T> convertSubscriber(java.util.concurrent.Flow$Subscriber<? super T>);
    Code:
       0: new           #25                 // class org/glassfish/jersey/internal/jsr166/SubmissionPublisher$3
       3: dup
       4: aload_0
       5: invokespecial #26                 // Method org/glassfish/jersey/internal/jsr166/SubmissionPublisher$3."<init>":(Ljava/util/concurrent/Flow$Subscriber;)V
       8: areturn

  private static <T> java.util.concurrent.Flow$Subscriber<T> convertSubscriber(org.glassfish.jersey.internal.jsr166.Flow$Subscriber<T>);
    Code:
       0: new           #27                 // class org/glassfish/jersey/internal/jsr166/SubmissionPublisher$4
       3: dup
       4: aload_0
       5: invokespecial #28                 // Method org/glassfish/jersey/internal/jsr166/SubmissionPublisher$4."<init>":(Lorg/glassfish/jersey/internal/jsr166/Flow$Subscriber;)V
       8: areturn

  private static java.util.concurrent.Flow$Subscription convertSubscription(org.glassfish.jersey.internal.jsr166.Flow$Subscription);
    Code:
       0: new           #29                 // class org/glassfish/jersey/internal/jsr166/SubmissionPublisher$5
       3: dup
       4: aload_0
       5: invokespecial #30                 // Method org/glassfish/jersey/internal/jsr166/SubmissionPublisher$5."<init>":(Lorg/glassfish/jersey/internal/jsr166/Flow$Subscription;)V
       8: areturn

  private static org.glassfish.jersey.internal.jsr166.Flow$Subscription convertSubscription(java.util.concurrent.Flow$Subscription);
    Code:
       0: new           #31                 // class org/glassfish/jersey/internal/jsr166/SubmissionPublisher$6
       3: dup
       4: aload_0
       5: invokespecial #32                 // Method org/glassfish/jersey/internal/jsr166/SubmissionPublisher$6."<init>":(Ljava/util/concurrent/Flow$Subscription;)V
       8: areturn
}
