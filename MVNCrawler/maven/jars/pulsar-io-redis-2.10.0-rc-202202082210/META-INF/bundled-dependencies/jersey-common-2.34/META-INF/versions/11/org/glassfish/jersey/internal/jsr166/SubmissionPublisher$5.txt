class org.glassfish.jersey.internal.jsr166.SubmissionPublisher$5 implements java.util.concurrent.Flow$Subscription {
  final org.glassfish.jersey.internal.jsr166.Flow$Subscription val$subscription;

  org.glassfish.jersey.internal.jsr166.SubmissionPublisher$5(org.glassfish.jersey.internal.jsr166.Flow$Subscription);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$subscription:Lorg/glassfish/jersey/internal/jsr166/Flow$Subscription;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$subscription:Lorg/glassfish/jersey/internal/jsr166/Flow$Subscription;
       4: lload_1
       5: invokeinterface #3,  3            // InterfaceMethod org/glassfish/jersey/internal/jsr166/Flow$Subscription.request:(J)V
      10: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$subscription:Lorg/glassfish/jersey/internal/jsr166/Flow$Subscription;
       4: invokeinterface #4,  1            // InterfaceMethod org/glassfish/jersey/internal/jsr166/Flow$Subscription.cancel:()V
       9: return
}
