Compiled from "Cache.java"
class org.glassfish.jersey.internal.util.collection.Cache$OriginThreadAwareFuture implements java.util.concurrent.Future<V> {
  private final java.util.concurrent.FutureTask<V> future;

  private volatile long threadId;

  final org.glassfish.jersey.internal.util.collection.Cache this$0;

  org.glassfish.jersey.internal.util.collection.Cache$OriginThreadAwareFuture(K);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/glassfish/jersey/internal/util/collection/Cache;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #4                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      13: invokevirtual #5                  // Method java/lang/Thread.getId:()J
      16: putfield      #1                  // Field threadId:J
      19: aload_0
      20: aload_2
      21: invokedynamic #6,  0              // InvokeDynamic #0:call:(Lorg/glassfish/jersey/internal/util/collection/Cache$OriginThreadAwareFuture;Ljava/lang/Object;)Ljava/util/concurrent/Callable;
      26: astore_3
      27: aload_0
      28: new           #7                  // class java/util/concurrent/FutureTask
      31: dup
      32: aload_3
      33: invokespecial #8                  // Method java/util/concurrent/FutureTask."<init>":(Ljava/util/concurrent/Callable;)V
      36: putfield      #9                  // Field future:Ljava/util/concurrent/FutureTask;
      39: return

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #9                  // Field future:Ljava/util/concurrent/FutureTask;
       4: invokevirtual #10                 // Method java/lang/Object.hashCode:()I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: aload_1
      11: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: if_acmpeq     19
      17: iconst_0
      18: ireturn
      19: aload_1
      20: checkcast     #12                 // class org/glassfish/jersey/internal/util/collection/Cache$OriginThreadAwareFuture
      23: astore_2
      24: aload_0
      25: getfield      #9                  // Field future:Ljava/util/concurrent/FutureTask;
      28: aload_2
      29: getfield      #9                  // Field future:Ljava/util/concurrent/FutureTask;
      32: if_acmpeq     58
      35: aload_0
      36: getfield      #9                  // Field future:Ljava/util/concurrent/FutureTask;
      39: ifnull        56
      42: aload_0
      43: getfield      #9                  // Field future:Ljava/util/concurrent/FutureTask;
      46: aload_2
      47: getfield      #9                  // Field future:Ljava/util/concurrent/FutureTask;
      50: invokevirtual #13                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      53: ifne          58
      56: iconst_0
      57: ireturn
      58: iconst_1
      59: ireturn

  public boolean cancel(boolean);
    Code:
       0: aload_0
       1: getfield      #9                  // Field future:Ljava/util/concurrent/FutureTask;
       4: iload_1
       5: invokevirtual #14                 // Method java/util/concurrent/FutureTask.cancel:(Z)Z
       8: ireturn

  public boolean isCancelled();
    Code:
       0: aload_0
       1: getfield      #9                  // Field future:Ljava/util/concurrent/FutureTask;
       4: invokevirtual #15                 // Method java/util/concurrent/FutureTask.isCancelled:()Z
       7: ireturn

  public boolean isDone();
    Code:
       0: aload_0
       1: getfield      #9                  // Field future:Ljava/util/concurrent/FutureTask;
       4: invokevirtual #16                 // Method java/util/concurrent/FutureTask.isDone:()Z
       7: ireturn

  public V get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field future:Ljava/util/concurrent/FutureTask;
       4: invokevirtual #17                 // Method java/util/concurrent/FutureTask.get:()Ljava/lang/Object;
       7: areturn

  public V get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field future:Ljava/util/concurrent/FutureTask;
       4: lload_1
       5: aload_3
       6: invokevirtual #18                 // Method java/util/concurrent/FutureTask.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
       9: areturn

  public void run();
    Code:
       0: aload_0
       1: getfield      #9                  // Field future:Ljava/util/concurrent/FutureTask;
       4: invokevirtual #19                 // Method java/util/concurrent/FutureTask.run:()V
       7: return

  private java.lang.Object lambda$new$0(java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/glassfish/jersey/internal/util/collection/Cache;
       4: invokestatic  #20                 // Method org/glassfish/jersey/internal/util/collection/Cache.access$100:(Lorg/glassfish/jersey/internal/util/collection/Cache;)Ljava/util/function/Function;
       7: aload_1
       8: invokeinterface #21,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: astore_2
      14: aload_0
      15: ldc2_w        #22                 // long -1l
      18: putfield      #1                  // Field threadId:J
      21: aload_2
      22: areturn
      23: astore_3
      24: aload_0
      25: ldc2_w        #22                 // long -1l
      28: putfield      #1                  // Field threadId:J
      31: aload_3
      32: athrow
    Exception table:
       from    to  target type
           0    14    23   any

  static long access$000(org.glassfish.jersey.internal.util.collection.Cache$OriginThreadAwareFuture);
    Code:
       0: aload_0
       1: getfield      #1                  // Field threadId:J
       4: lreturn
}
