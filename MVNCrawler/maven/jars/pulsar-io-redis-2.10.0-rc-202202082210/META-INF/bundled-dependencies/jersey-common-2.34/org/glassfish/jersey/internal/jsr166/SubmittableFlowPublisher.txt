Compiled from "SubmittableFlowPublisher.java"
public interface org.glassfish.jersey.internal.jsr166.SubmittableFlowPublisher<T> extends org.glassfish.jersey.internal.jsr166.Flow$Publisher<T>, java.lang.AutoCloseable {
  public abstract java.util.concurrent.CompletableFuture<java.lang.Void> consume(java.util.function.Consumer<? super T>);

  public abstract void close();

  public abstract void closeExceptionally(java.lang.Throwable);

  public abstract long estimateMinimumDemand();

  public abstract int estimateMaximumLag();

  public abstract java.lang.Throwable getClosedException();

  public abstract int getMaxBufferCapacity();

  public abstract int offer(T, long, java.util.concurrent.TimeUnit, java.util.function.BiPredicate<org.glassfish.jersey.internal.jsr166.Flow$Subscriber<? super T>, ? super T>);

  public abstract int offer(T, java.util.function.BiPredicate<org.glassfish.jersey.internal.jsr166.Flow$Subscriber<? super T>, ? super T>);

  public abstract int submit(T);

  public abstract void subscribe(org.glassfish.jersey.internal.jsr166.Flow$Subscriber<? super T>);
}
