Compiled from "ExtendedLogger.java"
public final class org.glassfish.jersey.internal.util.ExtendedLogger {
  private final java.util.logging.Logger logger;

  private final java.util.logging.Level debugLevel;

  public org.glassfish.jersey.internal.util.ExtendedLogger(java.util.logging.Logger, java.util.logging.Level);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field logger:Ljava/util/logging/Logger;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field debugLevel:Ljava/util/logging/Level;
      14: return

  public boolean isDebugLoggable();
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_0
       5: getfield      #3                  // Field debugLevel:Ljava/util/logging/Level;
       8: invokevirtual #4                  // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      11: ireturn

  public java.util.logging.Level getDebugLevel();
    Code:
       0: aload_0
       1: getfield      #3                  // Field debugLevel:Ljava/util/logging/Level;
       4: areturn

  public void debugLog(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: checkcast     #5                  // class "[Ljava/lang/Object;"
       6: invokevirtual #6                  // Method debugLog:(Ljava/lang/String;[Ljava/lang/Object;)V
       9: return

  public void debugLog(java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_0
       5: getfield      #3                  // Field debugLevel:Ljava/util/logging/Level;
       8: invokevirtual #4                  // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      11: ifeq          100
      14: aload_2
      15: ifnull        23
      18: aload_2
      19: arraylength
      20: ifne          31
      23: iconst_1
      24: anewarray     #7                  // class java/lang/Object
      27: astore_3
      28: goto          40
      31: aload_2
      32: aload_2
      33: arraylength
      34: iconst_1
      35: iadd
      36: invokestatic  #8                  // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      39: astore_3
      40: aload_3
      41: aload_3
      42: arraylength
      43: iconst_1
      44: isub
      45: invokestatic  #9                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      48: invokevirtual #10                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      51: aastore
      52: aload_0
      53: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      56: aload_0
      57: getfield      #3                  // Field debugLevel:Ljava/util/logging/Level;
      60: new           #11                 // class java/lang/StringBuilder
      63: dup
      64: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      67: ldc           #13                 // String [DEBUG]
      69: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_1
      73: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: ldc           #15                 // String  on thread {
      78: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: aload_3
      82: arraylength
      83: iconst_1
      84: isub
      85: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      88: bipush        125
      90: invokevirtual #17                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      93: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: aload_3
      97: invokevirtual #19                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V
     100: return

  public java.lang.String toString();
    Code:
       0: new           #11                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #20                 // String ExtendedLogger{logger=
       9: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      16: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #22                 // String , debugLevel=
      21: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #3                  // Field debugLevel:Ljava/util/logging/Level;
      28: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: bipush        125
      33: invokevirtual #17                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      36: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: invokevirtual #23                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: aload_1
      11: invokevirtual #23                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: if_acmpeq     19
      17: iconst_0
      18: ireturn
      19: aload_1
      20: checkcast     #24                 // class org/glassfish/jersey/internal/util/ExtendedLogger
      23: astore_2
      24: aload_0
      25: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      28: aload_2
      29: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      32: if_acmpeq     58
      35: aload_0
      36: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      39: ifnull        56
      42: aload_0
      43: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      46: aload_2
      47: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      50: invokevirtual #25                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      53: ifne          58
      56: iconst_0
      57: ireturn
      58: aload_0
      59: getfield      #3                  // Field debugLevel:Ljava/util/logging/Level;
      62: aload_2
      63: getfield      #3                  // Field debugLevel:Ljava/util/logging/Level;
      66: if_acmpeq     92
      69: aload_0
      70: getfield      #3                  // Field debugLevel:Ljava/util/logging/Level;
      73: ifnull        90
      76: aload_0
      77: getfield      #3                  // Field debugLevel:Ljava/util/logging/Level;
      80: aload_2
      81: getfield      #3                  // Field debugLevel:Ljava/util/logging/Level;
      84: invokevirtual #26                 // Method java/util/logging/Level.equals:(Ljava/lang/Object;)Z
      87: ifne          92
      90: iconst_0
      91: ireturn
      92: iconst_1
      93: ireturn

  public int hashCode();
    Code:
       0: iconst_3
       1: istore_1
       2: bipush        17
       4: iload_1
       5: imul
       6: aload_0
       7: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      10: ifnull        23
      13: aload_0
      14: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      17: invokevirtual #27                 // Method java/lang/Object.hashCode:()I
      20: goto          24
      23: iconst_0
      24: iadd
      25: istore_1
      26: bipush        17
      28: iload_1
      29: imul
      30: aload_0
      31: getfield      #3                  // Field debugLevel:Ljava/util/logging/Level;
      34: ifnull        47
      37: aload_0
      38: getfield      #3                  // Field debugLevel:Ljava/util/logging/Level;
      41: invokevirtual #28                 // Method java/util/logging/Level.hashCode:()I
      44: goto          48
      47: iconst_0
      48: iadd
      49: istore_1
      50: iload_1
      51: ireturn

  public void warning(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: invokevirtual #29                 // Method java/util/logging/Logger.warning:(Ljava/lang/String;)V
       8: return

  public void throwing(java.lang.String, java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #30                 // Method java/util/logging/Logger.throwing:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      10: return

  public void severe(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: invokevirtual #31                 // Method java/util/logging/Logger.severe:(Ljava/lang/String;)V
       8: return

  public void setUseParentHandlers(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: iload_1
       5: invokevirtual #32                 // Method java/util/logging/Logger.setUseParentHandlers:(Z)V
       8: return

  public void setParent(java.util.logging.Logger);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: invokevirtual #33                 // Method java/util/logging/Logger.setParent:(Ljava/util/logging/Logger;)V
       8: return

  public void setLevel(java.util.logging.Level) throws java.lang.SecurityException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: invokevirtual #34                 // Method java/util/logging/Logger.setLevel:(Ljava/util/logging/Level;)V
       8: return

  public void setFilter(java.util.logging.Filter) throws java.lang.SecurityException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: invokevirtual #35                 // Method java/util/logging/Logger.setFilter:(Ljava/util/logging/Filter;)V
       8: return

  public void removeHandler(java.util.logging.Handler) throws java.lang.SecurityException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: invokevirtual #36                 // Method java/util/logging/Logger.removeHandler:(Ljava/util/logging/Handler;)V
       8: return

  public void logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: invokevirtual #37                 // Method java/util/logging/Logger.logrb:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      16: return

  public void logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: invokevirtual #38                 // Method java/util/logging/Logger.logrb:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V
      16: return

  public void logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: invokevirtual #39                 // Method java/util/logging/Logger.logrb:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
      16: return

  public void logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: invokevirtual #40                 // Method java/util/logging/Logger.logrb:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      14: return

  public void logp(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: invokevirtual #41                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      14: return

  public void logp(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: invokevirtual #42                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V
      14: return

  public void logp(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: invokevirtual #43                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
      14: return

  public void logp(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #44                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      12: return

  public void log(java.util.logging.Level, java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #45                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      10: return

  public void log(java.util.logging.Level, java.lang.String, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #19                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V
      10: return

  public void log(java.util.logging.Level, java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #46                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public void log(java.util.logging.Level, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: aload_2
       6: invokevirtual #47                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
       9: return

  public void log(java.util.logging.LogRecord);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: invokevirtual #48                 // Method java/util/logging/Logger.log:(Ljava/util/logging/LogRecord;)V
       8: return

  public boolean isLoggable(java.util.logging.Level);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: invokevirtual #4                  // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
       8: ireturn

  public void info(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: invokevirtual #49                 // Method java/util/logging/Logger.info:(Ljava/lang/String;)V
       8: return

  public boolean getUseParentHandlers();
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: invokevirtual #50                 // Method java/util/logging/Logger.getUseParentHandlers:()Z
       7: ireturn

  public java.lang.String getResourceBundleName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: invokevirtual #51                 // Method java/util/logging/Logger.getResourceBundleName:()Ljava/lang/String;
       7: areturn

  public java.util.ResourceBundle getResourceBundle();
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: invokevirtual #52                 // Method java/util/logging/Logger.getResourceBundle:()Ljava/util/ResourceBundle;
       7: areturn

  public java.util.logging.Logger getParent();
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: invokevirtual #53                 // Method java/util/logging/Logger.getParent:()Ljava/util/logging/Logger;
       7: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: invokevirtual #54                 // Method java/util/logging/Logger.getName:()Ljava/lang/String;
       7: areturn

  public java.util.logging.Level getLevel();
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: invokevirtual #55                 // Method java/util/logging/Logger.getLevel:()Ljava/util/logging/Level;
       7: areturn

  public java.util.logging.Handler[] getHandlers();
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: invokevirtual #56                 // Method java/util/logging/Logger.getHandlers:()[Ljava/util/logging/Handler;
       7: areturn

  public java.util.logging.Filter getFilter();
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: invokevirtual #57                 // Method java/util/logging/Logger.getFilter:()Ljava/util/logging/Filter;
       7: areturn

  public void finest(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: invokevirtual #58                 // Method java/util/logging/Logger.finest:(Ljava/lang/String;)V
       8: return

  public void finer(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: invokevirtual #59                 // Method java/util/logging/Logger.finer:(Ljava/lang/String;)V
       8: return

  public void fine(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: invokevirtual #60                 // Method java/util/logging/Logger.fine:(Ljava/lang/String;)V
       8: return

  public void exiting(java.lang.String, java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #61                 // Method java/util/logging/Logger.exiting:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public void exiting(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: aload_2
       6: invokevirtual #62                 // Method java/util/logging/Logger.exiting:(Ljava/lang/String;Ljava/lang/String;)V
       9: return

  public void entering(java.lang.String, java.lang.String, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #63                 // Method java/util/logging/Logger.entering:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V
      10: return

  public void entering(java.lang.String, java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #64                 // Method java/util/logging/Logger.entering:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public void entering(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: aload_2
       6: invokevirtual #65                 // Method java/util/logging/Logger.entering:(Ljava/lang/String;Ljava/lang/String;)V
       9: return

  public void config(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: invokevirtual #66                 // Method java/util/logging/Logger.config:(Ljava/lang/String;)V
       8: return

  public void addHandler(java.util.logging.Handler) throws java.lang.SecurityException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: invokevirtual #67                 // Method java/util/logging/Logger.addHandler:(Ljava/util/logging/Handler;)V
       8: return
}
