Compiled from "ReaderWriter.java"
public final class org.glassfish.jersey.message.internal.ReaderWriter {
  private static final java.util.logging.Logger LOGGER;

  public static final java.nio.charset.Charset UTF8;

  public static final int BUFFER_SIZE;

  private static int getBufferSize();
    Code:
       0: ldc           #2                  // String jersey.config.io.bufferSize
       2: invokestatic  #3                  // Method org/glassfish/jersey/internal/util/PropertiesHelper.getSystemProperty:(Ljava/lang/String;)Ljava/security/PrivilegedAction;
       5: invokestatic  #4                  // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
       8: checkcast     #5                  // class java/lang/String
      11: astore_0
      12: aload_0
      13: ifnull        83
      16: aload_0
      17: invokestatic  #6                  // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      20: istore_1
      21: iload_1
      22: ifgt          35
      25: new           #7                  // class java/lang/NumberFormatException
      28: dup
      29: ldc           #8                  // String Value not positive.
      31: invokespecial #9                  // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: iload_1
      36: ireturn
      37: astore_1
      38: getstatic     #10                 // Field LOGGER:Ljava/util/logging/Logger;
      41: getstatic     #11                 // Field java/util/logging/Level.CONFIG:Ljava/util/logging/Level;
      44: new           #12                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #14                 // String Value of jersey.config.io.bufferSize property is not a valid positive integer [
      53: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_0
      57: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: ldc           #16                 // String ]. Reverting to default [
      62: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: sipush        8192
      68: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      71: ldc           #18                 // String ].
      73: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: aload_1
      80: invokevirtual #20                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      83: sipush        8192
      86: ireturn
    Exception table:
       from    to  target type
          16    36    37   Class java/lang/NumberFormatException

  public static void writeTo(java.io.InputStream, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: getstatic     #21                 // Field BUFFER_SIZE:I
       3: newarray       byte
       5: astore_3
       6: aload_0
       7: aload_3
       8: invokevirtual #22                 // Method java/io/InputStream.read:([B)I
      11: dup
      12: istore_2
      13: iconst_m1
      14: if_icmpeq     27
      17: aload_1
      18: aload_3
      19: iconst_0
      20: iload_2
      21: invokevirtual #23                 // Method java/io/OutputStream.write:([BII)V
      24: goto          6
      27: return

  public static void writeTo(java.io.Reader, java.io.Writer) throws java.io.IOException;
    Code:
       0: getstatic     #21                 // Field BUFFER_SIZE:I
       3: newarray       char
       5: astore_3
       6: aload_0
       7: aload_3
       8: invokevirtual #24                 // Method java/io/Reader.read:([C)I
      11: dup
      12: istore_2
      13: iconst_m1
      14: if_icmpeq     27
      17: aload_1
      18: aload_3
      19: iconst_0
      20: iload_2
      21: invokevirtual #25                 // Method java/io/Writer.write:([CII)V
      24: goto          6
      27: return

  public static java.nio.charset.Charset getCharset(javax.ws.rs.core.MediaType);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: aconst_null
       5: goto          22
       8: aload_0
       9: invokevirtual #26                 // Method javax/ws/rs/core/MediaType.getParameters:()Ljava/util/Map;
      12: ldc           #28                 // String charset
      14: invokeinterface #29,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #5                  // class java/lang/String
      22: astore_1
      23: aload_1
      24: ifnonnull     33
      27: getstatic     #30                 // Field UTF8:Ljava/nio/charset/Charset;
      30: goto          37
      33: aload_1
      34: invokestatic  #31                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      37: areturn

  public static java.lang.String readFromAsString(java.io.InputStream, javax.ws.rs.core.MediaType) throws java.io.IOException;
    Code:
       0: new           #32                 // class java/io/InputStreamReader
       3: dup
       4: aload_0
       5: aload_1
       6: invokestatic  #33                 // Method getCharset:(Ljavax/ws/rs/core/MediaType;)Ljava/nio/charset/Charset;
       9: invokespecial #34                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
      12: invokestatic  #35                 // Method readFromAsString:(Ljava/io/Reader;)Ljava/lang/String;
      15: areturn

  public static java.lang.String readFromAsString(java.io.Reader) throws java.io.IOException;
    Code:
       0: new           #12                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: getstatic     #21                 // Field BUFFER_SIZE:I
      11: newarray       char
      13: astore_2
      14: aload_0
      15: aload_2
      16: invokevirtual #24                 // Method java/io/Reader.read:([C)I
      19: dup
      20: istore_3
      21: iconst_m1
      22: if_icmpeq     36
      25: aload_1
      26: aload_2
      27: iconst_0
      28: iload_3
      29: invokevirtual #36                 // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
      32: pop
      33: goto          14
      36: aload_1
      37: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: areturn

  public static void writeToAsString(java.lang.String, java.io.OutputStream, javax.ws.rs.core.MediaType) throws java.io.IOException;
    Code:
       0: new           #37                 // class java/io/OutputStreamWriter
       3: dup
       4: aload_1
       5: aload_2
       6: invokestatic  #33                 // Method getCharset:(Ljavax/ws/rs/core/MediaType;)Ljava/nio/charset/Charset;
       9: invokespecial #38                 // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V
      12: astore_3
      13: aload_3
      14: aload_0
      15: iconst_0
      16: aload_0
      17: invokevirtual #39                 // Method java/lang/String.length:()I
      20: invokevirtual #40                 // Method java/io/Writer.write:(Ljava/lang/String;II)V
      23: aload_3
      24: invokevirtual #41                 // Method java/io/Writer.flush:()V
      27: return

  public static void safelyClose(java.io.Closeable);
    Code:
       0: aload_0
       1: invokeinterface #42,  1           // InterfaceMethod java/io/Closeable.close:()V
       6: goto          40
       9: astore_1
      10: getstatic     #10                 // Field LOGGER:Ljava/util/logging/Logger;
      13: getstatic     #44                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      16: invokestatic  #45                 // Method org/glassfish/jersey/internal/LocalizationMessages.MESSAGE_CONTENT_INPUT_STREAM_CLOSE_FAILED:()Ljava/lang/String;
      19: aload_1
      20: invokevirtual #20                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      23: goto          40
      26: astore_1
      27: getstatic     #10                 // Field LOGGER:Ljava/util/logging/Logger;
      30: getstatic     #44                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      33: invokestatic  #45                 // Method org/glassfish/jersey/internal/LocalizationMessages.MESSAGE_CONTENT_INPUT_STREAM_CLOSE_FAILED:()Ljava/lang/String;
      36: aload_1
      37: invokevirtual #20                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      40: return
    Exception table:
       from    to  target type
           0     6     9   Class java/io/IOException
           0     6    26   Class javax/ws/rs/ProcessingException

  private org.glassfish.jersey.message.internal.ReaderWriter();
    Code:
       0: aload_0
       1: invokespecial #47                 // Method java/lang/Object."<init>":()V
       4: return

  static {};
    Code:
       0: ldc           #48                 // class org/glassfish/jersey/message/internal/ReaderWriter
       2: invokevirtual #49                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #50                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #10                 // Field LOGGER:Ljava/util/logging/Logger;
      11: ldc           #51                 // String UTF-8
      13: invokestatic  #31                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      16: putstatic     #30                 // Field UTF8:Ljava/nio/charset/Charset;
      19: invokestatic  #52                 // Method getBufferSize:()I
      22: putstatic     #21                 // Field BUFFER_SIZE:I
      25: return
}
