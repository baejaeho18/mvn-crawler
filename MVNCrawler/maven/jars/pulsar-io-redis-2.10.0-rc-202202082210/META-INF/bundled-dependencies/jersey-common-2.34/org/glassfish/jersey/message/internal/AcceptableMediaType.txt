Compiled from "AcceptableMediaType.java"
public class org.glassfish.jersey.message.internal.AcceptableMediaType extends javax.ws.rs.core.MediaType implements org.glassfish.jersey.message.internal.Qualified {
  public static final java.util.Comparator<org.glassfish.jersey.message.internal.AcceptableMediaType> COMPARATOR;

  private final int q;

  public org.glassfish.jersey.message.internal.AcceptableMediaType(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method javax/ws/rs/core/MediaType."<init>":(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: sipush        1000
      10: putfield      #3                  // Field q:I
      13: return

  public org.glassfish.jersey.message.internal.AcceptableMediaType(java.lang.String, java.lang.String, int, java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload         4
       5: ldc           #4                  // String q
       7: iload_3
       8: invokestatic  #5                  // Method org/glassfish/jersey/message/internal/Quality.enhanceWithQualityParameter:(Ljava/util/Map;Ljava/lang/String;I)Ljava/util/Map;
      11: invokespecial #6                  // Method javax/ws/rs/core/MediaType."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
      14: aload_0
      15: iload_3
      16: putfield      #3                  // Field q:I
      19: return

  private org.glassfish.jersey.message.internal.AcceptableMediaType(java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #6                  // Method javax/ws/rs/core/MediaType."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
       7: aload_0
       8: iload         4
      10: putfield      #3                  // Field q:I
      13: return

  public int getQuality();
    Code:
       0: aload_0
       1: getfield      #3                  // Field q:I
       4: ireturn

  public static org.glassfish.jersey.message.internal.AcceptableMediaType valueOf(org.glassfish.jersey.message.internal.HttpHeaderReader) throws java.text.ParseException;
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method org/glassfish/jersey/message/internal/HttpHeaderReader.hasNext:()Z
       4: pop
       5: aload_0
       6: invokevirtual #8                  // Method org/glassfish/jersey/message/internal/HttpHeaderReader.nextToken:()Ljava/lang/CharSequence;
       9: invokeinterface #9,  1            // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      14: astore_1
      15: ldc           #10                 // String *
      17: astore_2
      18: aload_0
      19: bipush        47
      21: iconst_0
      22: invokevirtual #11                 // Method org/glassfish/jersey/message/internal/HttpHeaderReader.hasNextSeparator:(CZ)Z
      25: ifeq          44
      28: aload_0
      29: iconst_0
      30: invokevirtual #12                 // Method org/glassfish/jersey/message/internal/HttpHeaderReader.next:(Z)Lorg/glassfish/jersey/message/internal/HttpHeaderReader$Event;
      33: pop
      34: aload_0
      35: invokevirtual #8                  // Method org/glassfish/jersey/message/internal/HttpHeaderReader.nextToken:()Ljava/lang/CharSequence;
      38: invokeinterface #9,  1            // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      43: astore_2
      44: aconst_null
      45: astore_3
      46: sipush        1000
      49: istore        4
      51: aload_0
      52: invokevirtual #7                  // Method org/glassfish/jersey/message/internal/HttpHeaderReader.hasNext:()Z
      55: ifeq          92
      58: aload_0
      59: invokestatic  #13                 // Method org/glassfish/jersey/message/internal/HttpHeaderReader.readParameters:(Lorg/glassfish/jersey/message/internal/HttpHeaderReader;)Ljava/util/Map;
      62: astore_3
      63: aload_3
      64: ifnull        92
      67: aload_3
      68: ldc           #4                  // String q
      70: invokeinterface #14,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      75: checkcast     #15                 // class java/lang/String
      78: astore        5
      80: aload         5
      82: ifnull        92
      85: aload         5
      87: invokestatic  #16                 // Method org/glassfish/jersey/message/internal/HttpHeaderReader.readQualityFactor:(Ljava/lang/CharSequence;)I
      90: istore        4
      92: new           #17                 // class org/glassfish/jersey/message/internal/AcceptableMediaType
      95: dup
      96: aload_1
      97: aload_2
      98: aload_3
      99: iload         4
     101: invokespecial #18                 // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)V
     104: areturn

  public static org.glassfish.jersey.message.internal.AcceptableMediaType valueOf(javax.ws.rs.core.MediaType) throws java.text.ParseException;
    Code:
       0: aload_0
       1: instanceof    #17                 // class org/glassfish/jersey/message/internal/AcceptableMediaType
       4: ifeq          12
       7: aload_0
       8: checkcast     #17                 // class org/glassfish/jersey/message/internal/AcceptableMediaType
      11: areturn
      12: aload_0
      13: invokevirtual #19                 // Method javax/ws/rs/core/MediaType.getParameters:()Ljava/util/Map;
      16: astore_1
      17: sipush        1000
      20: istore_2
      21: aload_1
      22: ifnull        46
      25: aload_1
      26: ldc           #4                  // String q
      28: invokeinterface #14,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #15                 // class java/lang/String
      36: astore_3
      37: aload_3
      38: ifnull        46
      41: aload_3
      42: invokestatic  #16                 // Method org/glassfish/jersey/message/internal/HttpHeaderReader.readQualityFactor:(Ljava/lang/CharSequence;)I
      45: istore_2
      46: new           #17                 // class org/glassfish/jersey/message/internal/AcceptableMediaType
      49: dup
      50: aload_0
      51: invokevirtual #20                 // Method javax/ws/rs/core/MediaType.getType:()Ljava/lang/String;
      54: aload_0
      55: invokevirtual #21                 // Method javax/ws/rs/core/MediaType.getSubtype:()Ljava/lang/String;
      58: aload_1
      59: iload_2
      60: invokespecial #18                 // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;I)V
      63: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #22                 // Method javax/ws/rs/core/MediaType.equals:(Ljava/lang/Object;)Z
       5: ifne          10
       8: iconst_0
       9: ireturn
      10: aload_1
      11: instanceof    #17                 // class org/glassfish/jersey/message/internal/AcceptableMediaType
      14: ifeq          39
      17: aload_1
      18: checkcast     #17                 // class org/glassfish/jersey/message/internal/AcceptableMediaType
      21: astore_2
      22: aload_0
      23: getfield      #3                  // Field q:I
      26: aload_2
      27: getfield      #3                  // Field q:I
      30: if_icmpne     37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn
      39: aload_0
      40: getfield      #3                  // Field q:I
      43: sipush        1000
      46: if_icmpne     53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method javax/ws/rs/core/MediaType.hashCode:()I
       4: istore_1
       5: aload_0
       6: getfield      #3                  // Field q:I
       9: sipush        1000
      12: if_icmpne     19
      15: iload_1
      16: goto          28
      19: bipush        47
      21: iload_1
      22: imul
      23: aload_0
      24: getfield      #3                  // Field q:I
      27: iadd
      28: ireturn

  static {};
    Code:
       0: new           #24                 // class org/glassfish/jersey/message/internal/AcceptableMediaType$1
       3: dup
       4: invokespecial #25                 // Method org/glassfish/jersey/message/internal/AcceptableMediaType$1."<init>":()V
       7: putstatic     #26                 // Field COMPARATOR:Ljava/util/Comparator;
      10: return
}
