Compiled from "InjecteeImpl.java"
public class org.glassfish.jersey.internal.inject.InjecteeImpl implements org.glassfish.jersey.internal.inject.Injectee {
  private java.lang.reflect.Type requiredType;

  private java.util.Set<java.lang.annotation.Annotation> qualifiers;

  private java.lang.Class<? extends java.lang.annotation.Annotation> parentClassScope;

  private int position;

  private java.lang.Class<?> injecteeClass;

  private java.lang.reflect.AnnotatedElement parent;

  private boolean isOptional;

  private boolean isFactory;

  private boolean isProvider;

  private org.glassfish.jersey.internal.inject.ForeignDescriptor injecteeDescriptor;

  public org.glassfish.jersey.internal.inject.InjecteeImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field position:I
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field isOptional:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field isFactory:Z
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field isProvider:Z
      24: return

  public java.lang.reflect.Type getRequiredType();
    Code:
       0: aload_0
       1: getfield      #6                  // Field requiredType:Ljava/lang/reflect/Type;
       4: areturn

  public void setRequiredType(java.lang.reflect.Type);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field requiredType:Ljava/lang/reflect/Type;
       5: return

  public java.util.Set<java.lang.annotation.Annotation> getRequiredQualifiers();
    Code:
       0: aload_0
       1: getfield      #7                  // Field qualifiers:Ljava/util/Set;
       4: ifnonnull     11
       7: invokestatic  #8                  // Method java/util/Collections.emptySet:()Ljava/util/Set;
      10: areturn
      11: aload_0
      12: getfield      #7                  // Field qualifiers:Ljava/util/Set;
      15: areturn

  public void setRequiredQualifiers(java.util.Set<java.lang.annotation.Annotation>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #9                  // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
       5: putfield      #7                  // Field qualifiers:Ljava/util/Set;
       8: return

  public java.lang.Class<? extends java.lang.annotation.Annotation> getParentClassScope();
    Code:
       0: aload_0
       1: getfield      #10                 // Field parentClassScope:Ljava/lang/Class;
       4: areturn

  public void setParentClassScope(java.lang.Class<? extends java.lang.annotation.Annotation>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field parentClassScope:Ljava/lang/Class;
       5: return

  public boolean isFactory();
    Code:
       0: aload_0
       1: getfield      #4                  // Field isFactory:Z
       4: ireturn

  public void setFactory(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field isFactory:Z
       5: return

  public boolean isProvider();
    Code:
       0: aload_0
       1: getfield      #5                  // Field isProvider:Z
       4: ireturn

  public void setProvider(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field isProvider:Z
       5: return

  public int getPosition();
    Code:
       0: aload_0
       1: getfield      #2                  // Field position:I
       4: ireturn

  public void setPosition(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field position:I
       5: return

  public java.lang.Class<?> getInjecteeClass();
    Code:
       0: aload_0
       1: getfield      #11                 // Field injecteeClass:Ljava/lang/Class;
       4: areturn

  public void setInjecteeClass(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field injecteeClass:Ljava/lang/Class;
       5: return

  public java.lang.reflect.AnnotatedElement getParent();
    Code:
       0: aload_0
       1: getfield      #12                 // Field parent:Ljava/lang/reflect/AnnotatedElement;
       4: areturn

  public void setParent(java.lang.reflect.AnnotatedElement);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field parent:Ljava/lang/reflect/AnnotatedElement;
       5: aload_1
       6: instanceof    #13                 // class java/lang/reflect/Field
       9: ifeq          26
      12: aload_0
      13: aload_1
      14: checkcast     #13                 // class java/lang/reflect/Field
      17: invokevirtual #14                 // Method java/lang/reflect/Field.getDeclaringClass:()Ljava/lang/Class;
      20: putfield      #11                 // Field injecteeClass:Ljava/lang/Class;
      23: goto          65
      26: aload_1
      27: instanceof    #15                 // class java/lang/reflect/Constructor
      30: ifeq          47
      33: aload_0
      34: aload_1
      35: checkcast     #15                 // class java/lang/reflect/Constructor
      38: invokevirtual #16                 // Method java/lang/reflect/Constructor.getDeclaringClass:()Ljava/lang/Class;
      41: putfield      #11                 // Field injecteeClass:Ljava/lang/Class;
      44: goto          65
      47: aload_1
      48: instanceof    #17                 // class java/lang/reflect/Method
      51: ifeq          65
      54: aload_0
      55: aload_1
      56: checkcast     #17                 // class java/lang/reflect/Method
      59: invokevirtual #18                 // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
      62: putfield      #11                 // Field injecteeClass:Ljava/lang/Class;
      65: return

  public boolean isOptional();
    Code:
       0: aload_0
       1: getfield      #3                  // Field isOptional:Z
       4: ireturn

  public void setOptional(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field isOptional:Z
       5: return

  public org.glassfish.jersey.internal.inject.ForeignDescriptor getInjecteeDescriptor();
    Code:
       0: aload_0
       1: getfield      #19                 // Field injecteeDescriptor:Lorg/glassfish/jersey/internal/inject/ForeignDescriptor;
       4: areturn

  public void setInjecteeDescriptor(org.glassfish.jersey.internal.inject.ForeignDescriptor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field injecteeDescriptor:Lorg/glassfish/jersey/internal/inject/ForeignDescriptor;
       5: return

  public java.lang.String toString();
    Code:
       0: new           #20                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #22                 // String InjecteeImpl(requiredType=
       9: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #6                  // Field requiredType:Ljava/lang/reflect/Type;
      16: invokestatic  #24                 // Method org/glassfish/jersey/internal/util/Pretty.type:(Ljava/lang/reflect/Type;)Ljava/lang/String;
      19: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #25                 // String ,parent=
      24: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: getfield      #12                 // Field parent:Ljava/lang/reflect/AnnotatedElement;
      31: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      34: invokestatic  #27                 // Method org/glassfish/jersey/internal/util/Pretty.clazz:(Ljava/lang/Class;)Ljava/lang/String;
      37: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: ldc           #28                 // String ,qualifiers=
      42: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_0
      46: getfield      #7                  // Field qualifiers:Ljava/util/Set;
      49: invokestatic  #29                 // Method org/glassfish/jersey/internal/util/Pretty.collection:(Ljava/util/Collection;)Ljava/lang/String;
      52: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #30                 // String ,position=
      57: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #2                  // Field position:I
      64: invokevirtual #31                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      67: ldc           #32                 // String ,factory=
      69: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: getfield      #4                  // Field isFactory:Z
      76: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      79: ldc           #34                 // String ,provider=
      81: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: getfield      #5                  // Field isProvider:Z
      88: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      91: ldc           #35                 // String ,optional=
      93: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_0
      97: getfield      #3                  // Field isOptional:Z
     100: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     103: ldc           #36                 // String ,
     105: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: aload_0
     109: invokestatic  #37                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
     112: invokevirtual #31                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     115: ldc           #38                 // String )
     117: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     123: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #40                 // class org/glassfish/jersey/internal/inject/InjecteeImpl
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #40                 // class org/glassfish/jersey/internal/inject/InjecteeImpl
      20: astore_2
      21: aload_0
      22: getfield      #2                  // Field position:I
      25: aload_2
      26: getfield      #2                  // Field position:I
      29: if_icmpne     125
      32: aload_0
      33: getfield      #3                  // Field isOptional:Z
      36: aload_2
      37: getfield      #3                  // Field isOptional:Z
      40: if_icmpne     125
      43: aload_0
      44: getfield      #4                  // Field isFactory:Z
      47: aload_2
      48: getfield      #4                  // Field isFactory:Z
      51: if_icmpne     125
      54: aload_0
      55: getfield      #5                  // Field isProvider:Z
      58: aload_2
      59: getfield      #5                  // Field isProvider:Z
      62: if_icmpne     125
      65: aload_0
      66: getfield      #6                  // Field requiredType:Ljava/lang/reflect/Type;
      69: aload_2
      70: getfield      #6                  // Field requiredType:Ljava/lang/reflect/Type;
      73: invokestatic  #41                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      76: ifeq          125
      79: aload_0
      80: getfield      #7                  // Field qualifiers:Ljava/util/Set;
      83: aload_2
      84: getfield      #7                  // Field qualifiers:Ljava/util/Set;
      87: invokestatic  #41                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      90: ifeq          125
      93: aload_0
      94: getfield      #11                 // Field injecteeClass:Ljava/lang/Class;
      97: aload_2
      98: getfield      #11                 // Field injecteeClass:Ljava/lang/Class;
     101: invokestatic  #41                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     104: ifeq          125
     107: aload_0
     108: getfield      #12                 // Field parent:Ljava/lang/reflect/AnnotatedElement;
     111: aload_2
     112: getfield      #12                 // Field parent:Ljava/lang/reflect/AnnotatedElement;
     115: invokestatic  #41                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     118: ifeq          125
     121: iconst_1
     122: goto          126
     125: iconst_0
     126: ireturn

  public int hashCode();
    Code:
       0: bipush        7
       2: anewarray     #42                 // class java/lang/Object
       5: dup
       6: iconst_0
       7: aload_0
       8: getfield      #6                  // Field requiredType:Ljava/lang/reflect/Type;
      11: aastore
      12: dup
      13: iconst_1
      14: aload_0
      15: getfield      #7                  // Field qualifiers:Ljava/util/Set;
      18: aastore
      19: dup
      20: iconst_2
      21: aload_0
      22: getfield      #2                  // Field position:I
      25: invokestatic  #43                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      28: aastore
      29: dup
      30: iconst_3
      31: aload_0
      32: getfield      #11                 // Field injecteeClass:Ljava/lang/Class;
      35: aastore
      36: dup
      37: iconst_4
      38: aload_0
      39: getfield      #12                 // Field parent:Ljava/lang/reflect/AnnotatedElement;
      42: aastore
      43: dup
      44: iconst_5
      45: aload_0
      46: getfield      #3                  // Field isOptional:Z
      49: invokestatic  #44                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      52: aastore
      53: dup
      54: bipush        6
      56: aload_0
      57: getfield      #4                  // Field isFactory:Z
      60: invokestatic  #44                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      63: aastore
      64: invokestatic  #45                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      67: ireturn
}
