Compiled from "CommittingOutputStream.java"
public final class org.glassfish.jersey.message.internal.CommittingOutputStream extends java.io.OutputStream {
  private static final java.util.logging.Logger LOGGER;

  private static final org.glassfish.jersey.message.internal.OutboundMessageContext$StreamProvider NULL_STREAM_PROVIDER;

  public static final int DEFAULT_BUFFER_SIZE;

  private java.io.OutputStream adaptedOutput;

  private org.glassfish.jersey.message.internal.OutboundMessageContext$StreamProvider streamProvider;

  private int bufferSize;

  private java.io.ByteArrayOutputStream buffer;

  private boolean directWrite;

  private boolean isCommitted;

  private boolean isClosed;

  private static final java.lang.String STREAM_PROVIDER_NULL;

  private static final java.lang.String COMMITTING_STREAM_BUFFERING_ILLEGAL_STATE;

  public org.glassfish.jersey.message.internal.CommittingOutputStream();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/OutputStream."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field bufferSize:I
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field directWrite:Z
      14: return

  public void setStreamProvider(org.glassfish.jersey.message.internal.OutboundMessageContext$StreamProvider);
    Code:
       0: aload_0
       1: getfield      #4                  // Field isClosed:Z
       4: ifeq          18
       7: new           #5                  // class java/lang/IllegalStateException
      10: dup
      11: invokestatic  #6                  // Method org/glassfish/jersey/internal/LocalizationMessages.OUTPUT_STREAM_CLOSED:()Ljava/lang/String;
      14: invokespecial #7                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_1
      19: invokestatic  #8                  // Method java/util/Objects.nonNull:(Ljava/lang/Object;)Z
      22: pop
      23: aload_0
      24: getfield      #9                  // Field streamProvider:Lorg/glassfish/jersey/message/internal/OutboundMessageContext$StreamProvider;
      27: ifnull        42
      30: getstatic     #10                 // Field LOGGER:Ljava/util/logging/Logger;
      33: getstatic     #11                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      36: invokestatic  #12                 // Method org/glassfish/jersey/internal/LocalizationMessages.COMMITTING_STREAM_ALREADY_INITIALIZED:()Ljava/lang/String;
      39: invokevirtual #13                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
      42: aload_0
      43: aload_1
      44: putfield      #9                  // Field streamProvider:Lorg/glassfish/jersey/message/internal/OutboundMessageContext$StreamProvider;
      47: return

  public void enableBuffering(int);
    Code:
       0: aload_0
       1: getfield      #14                 // Field isCommitted:Z
       4: ifne          28
       7: aload_0
       8: getfield      #15                 // Field buffer:Ljava/io/ByteArrayOutputStream;
      11: ifnull        24
      14: aload_0
      15: getfield      #15                 // Field buffer:Ljava/io/ByteArrayOutputStream;
      18: invokevirtual #16                 // Method java/io/ByteArrayOutputStream.size:()I
      21: ifne          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: getstatic     #17                 // Field COMMITTING_STREAM_BUFFERING_ILLEGAL_STATE:Ljava/lang/String;
      32: invokestatic  #18                 // Method org/glassfish/jersey/internal/guava/Preconditions.checkState:(ZLjava/lang/Object;)V
      35: aload_0
      36: iload_1
      37: putfield      #2                  // Field bufferSize:I
      40: iload_1
      41: ifgt          57
      44: aload_0
      45: iconst_1
      46: putfield      #3                  // Field directWrite:Z
      49: aload_0
      50: aconst_null
      51: putfield      #15                 // Field buffer:Ljava/io/ByteArrayOutputStream;
      54: goto          74
      57: aload_0
      58: iconst_0
      59: putfield      #3                  // Field directWrite:Z
      62: aload_0
      63: new           #19                 // class java/io/ByteArrayOutputStream
      66: dup
      67: iload_1
      68: invokespecial #20                 // Method java/io/ByteArrayOutputStream."<init>":(I)V
      71: putfield      #15                 // Field buffer:Ljava/io/ByteArrayOutputStream;
      74: return

  void enableBuffering();
    Code:
       0: aload_0
       1: sipush        8192
       4: invokevirtual #22                 // Method enableBuffering:(I)V
       7: return

  public boolean isCommitted();
    Code:
       0: aload_0
       1: getfield      #14                 // Field isCommitted:Z
       4: ireturn

  private void commitStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_m1
       2: invokespecial #23                 // Method commitStream:(I)V
       5: return

  private void commitStream(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field isCommitted:Z
       4: ifne          67
       7: aload_0
       8: getfield      #9                  // Field streamProvider:Lorg/glassfish/jersey/message/internal/OutboundMessageContext$StreamProvider;
      11: ifnull        18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: getstatic     #24                 // Field STREAM_PROVIDER_NULL:Ljava/lang/String;
      22: invokestatic  #18                 // Method org/glassfish/jersey/internal/guava/Preconditions.checkState:(ZLjava/lang/Object;)V
      25: aload_0
      26: aload_0
      27: getfield      #9                  // Field streamProvider:Lorg/glassfish/jersey/message/internal/OutboundMessageContext$StreamProvider;
      30: iload_1
      31: invokeinterface #25,  2           // InterfaceMethod org/glassfish/jersey/message/internal/OutboundMessageContext$StreamProvider.getOutputStream:(I)Ljava/io/OutputStream;
      36: putfield      #26                 // Field adaptedOutput:Ljava/io/OutputStream;
      39: aload_0
      40: getfield      #26                 // Field adaptedOutput:Ljava/io/OutputStream;
      43: ifnonnull     57
      46: aload_0
      47: new           #27                 // class org/glassfish/jersey/message/internal/NullOutputStream
      50: dup
      51: invokespecial #28                 // Method org/glassfish/jersey/message/internal/NullOutputStream."<init>":()V
      54: putfield      #26                 // Field adaptedOutput:Ljava/io/OutputStream;
      57: aload_0
      58: iconst_1
      59: putfield      #3                  // Field directWrite:Z
      62: aload_0
      63: iconst_1
      64: putfield      #14                 // Field isCommitted:Z
      67: return

  public void write(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field directWrite:Z
       4: ifeq          22
       7: aload_0
       8: invokespecial #29                 // Method commitStream:()V
      11: aload_0
      12: getfield      #26                 // Field adaptedOutput:Ljava/io/OutputStream;
      15: aload_1
      16: invokevirtual #30                 // Method java/io/OutputStream.write:([B)V
      19: goto          63
      22: aload_1
      23: arraylength
      24: aload_0
      25: getfield      #15                 // Field buffer:Ljava/io/ByteArrayOutputStream;
      28: invokevirtual #16                 // Method java/io/ByteArrayOutputStream.size:()I
      31: iadd
      32: aload_0
      33: getfield      #2                  // Field bufferSize:I
      36: if_icmple     55
      39: aload_0
      40: iconst_0
      41: invokespecial #31                 // Method flushBuffer:(Z)V
      44: aload_0
      45: getfield      #26                 // Field adaptedOutput:Ljava/io/OutputStream;
      48: aload_1
      49: invokevirtual #30                 // Method java/io/OutputStream.write:([B)V
      52: goto          63
      55: aload_0
      56: getfield      #15                 // Field buffer:Ljava/io/ByteArrayOutputStream;
      59: aload_1
      60: invokevirtual #32                 // Method java/io/ByteArrayOutputStream.write:([B)V
      63: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field directWrite:Z
       4: ifeq          24
       7: aload_0
       8: invokespecial #29                 // Method commitStream:()V
      11: aload_0
      12: getfield      #26                 // Field adaptedOutput:Ljava/io/OutputStream;
      15: aload_1
      16: iload_2
      17: iload_3
      18: invokevirtual #33                 // Method java/io/OutputStream.write:([BII)V
      21: goto          68
      24: iload_3
      25: aload_0
      26: getfield      #15                 // Field buffer:Ljava/io/ByteArrayOutputStream;
      29: invokevirtual #16                 // Method java/io/ByteArrayOutputStream.size:()I
      32: iadd
      33: aload_0
      34: getfield      #2                  // Field bufferSize:I
      37: if_icmple     58
      40: aload_0
      41: iconst_0
      42: invokespecial #31                 // Method flushBuffer:(Z)V
      45: aload_0
      46: getfield      #26                 // Field adaptedOutput:Ljava/io/OutputStream;
      49: aload_1
      50: iload_2
      51: iload_3
      52: invokevirtual #33                 // Method java/io/OutputStream.write:([BII)V
      55: goto          68
      58: aload_0
      59: getfield      #15                 // Field buffer:Ljava/io/ByteArrayOutputStream;
      62: aload_1
      63: iload_2
      64: iload_3
      65: invokevirtual #34                 // Method java/io/ByteArrayOutputStream.write:([BII)V
      68: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field directWrite:Z
       4: ifeq          22
       7: aload_0
       8: invokespecial #29                 // Method commitStream:()V
      11: aload_0
      12: getfield      #26                 // Field adaptedOutput:Ljava/io/OutputStream;
      15: iload_1
      16: invokevirtual #35                 // Method java/io/OutputStream.write:(I)V
      19: goto          62
      22: aload_0
      23: getfield      #15                 // Field buffer:Ljava/io/ByteArrayOutputStream;
      26: invokevirtual #16                 // Method java/io/ByteArrayOutputStream.size:()I
      29: iconst_1
      30: iadd
      31: aload_0
      32: getfield      #2                  // Field bufferSize:I
      35: if_icmple     54
      38: aload_0
      39: iconst_0
      40: invokespecial #31                 // Method flushBuffer:(Z)V
      43: aload_0
      44: getfield      #26                 // Field adaptedOutput:Ljava/io/OutputStream;
      47: iload_1
      48: invokevirtual #35                 // Method java/io/OutputStream.write:(I)V
      51: goto          62
      54: aload_0
      55: getfield      #15                 // Field buffer:Ljava/io/ByteArrayOutputStream;
      58: iload_1
      59: invokevirtual #36                 // Method java/io/ByteArrayOutputStream.write:(I)V
      62: return

  public void commit() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #31                 // Method flushBuffer:(Z)V
       5: aload_0
       6: invokespecial #29                 // Method commitStream:()V
       9: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field isClosed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #4                  // Field isClosed:Z
      13: aload_0
      14: getfield      #9                  // Field streamProvider:Lorg/glassfish/jersey/message/internal/OutboundMessageContext$StreamProvider;
      17: ifnonnull     27
      20: aload_0
      21: getstatic     #37                 // Field NULL_STREAM_PROVIDER:Lorg/glassfish/jersey/message/internal/OutboundMessageContext$StreamProvider;
      24: putfield      #9                  // Field streamProvider:Lorg/glassfish/jersey/message/internal/OutboundMessageContext$StreamProvider;
      27: aload_0
      28: invokevirtual #38                 // Method commit:()V
      31: aload_0
      32: getfield      #26                 // Field adaptedOutput:Ljava/io/OutputStream;
      35: invokevirtual #39                 // Method java/io/OutputStream.close:()V
      38: return

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #4                  // Field isClosed:Z
       4: ireturn

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method isCommitted:()Z
       4: ifeq          14
       7: aload_0
       8: getfield      #26                 // Field adaptedOutput:Ljava/io/OutputStream;
      11: invokevirtual #41                 // Method java/io/OutputStream.flush:()V
      14: return

  private void flushBuffer(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field directWrite:Z
       4: ifne          58
       7: iload_1
       8: ifeq          33
      11: aload_0
      12: getfield      #15                 // Field buffer:Ljava/io/ByteArrayOutputStream;
      15: ifnonnull     22
      18: iconst_0
      19: goto          29
      22: aload_0
      23: getfield      #15                 // Field buffer:Ljava/io/ByteArrayOutputStream;
      26: invokevirtual #16                 // Method java/io/ByteArrayOutputStream.size:()I
      29: istore_2
      30: goto          35
      33: iconst_m1
      34: istore_2
      35: aload_0
      36: iload_2
      37: invokespecial #23                 // Method commitStream:(I)V
      40: aload_0
      41: getfield      #15                 // Field buffer:Ljava/io/ByteArrayOutputStream;
      44: ifnull        58
      47: aload_0
      48: getfield      #15                 // Field buffer:Ljava/io/ByteArrayOutputStream;
      51: aload_0
      52: getfield      #26                 // Field adaptedOutput:Ljava/io/OutputStream;
      55: invokevirtual #42                 // Method java/io/ByteArrayOutputStream.writeTo:(Ljava/io/OutputStream;)V
      58: return

  private static java.io.OutputStream lambda$static$0(int) throws java.io.IOException;
    Code:
       0: new           #27                 // class org/glassfish/jersey/message/internal/NullOutputStream
       3: dup
       4: invokespecial #28                 // Method org/glassfish/jersey/message/internal/NullOutputStream."<init>":()V
       7: areturn

  static {};
    Code:
       0: ldc           #21                 // class org/glassfish/jersey/message/internal/CommittingOutputStream
       2: invokevirtual #43                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #44                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #10                 // Field LOGGER:Ljava/util/logging/Logger;
      11: invokedynamic #45,  0             // InvokeDynamic #0:getOutputStream:()Lorg/glassfish/jersey/message/internal/OutboundMessageContext$StreamProvider;
      16: putstatic     #37                 // Field NULL_STREAM_PROVIDER:Lorg/glassfish/jersey/message/internal/OutboundMessageContext$StreamProvider;
      19: invokestatic  #46                 // Method org/glassfish/jersey/internal/LocalizationMessages.STREAM_PROVIDER_NULL:()Ljava/lang/String;
      22: putstatic     #24                 // Field STREAM_PROVIDER_NULL:Ljava/lang/String;
      25: invokestatic  #47                 // Method org/glassfish/jersey/internal/LocalizationMessages.COMMITTING_STREAM_BUFFERING_ILLEGAL_STATE:()Ljava/lang/String;
      28: putstatic     #17                 // Field COMMITTING_STREAM_BUFFERING_ILLEGAL_STATE:Ljava/lang/String;
      31: return
}
