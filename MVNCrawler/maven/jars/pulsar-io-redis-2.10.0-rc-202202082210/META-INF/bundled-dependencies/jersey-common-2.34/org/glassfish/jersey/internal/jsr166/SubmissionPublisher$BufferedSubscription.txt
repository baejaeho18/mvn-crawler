Compiled from "SubmissionPublisher.java"
final class org.glassfish.jersey.internal.jsr166.SubmissionPublisher$BufferedSubscription<T> implements org.glassfish.jersey.internal.jsr166.Flow$Subscription, java.util.concurrent.ForkJoinPool$ManagedBlocker {
  long timeout;

  volatile long demand;

  int maxCapacity;

  int putStat;

  volatile int ctl;

  volatile int head;

  int tail;

  java.lang.Object[] array;

  org.glassfish.jersey.internal.jsr166.Flow$Subscriber<? super T> subscriber;

  java.util.concurrent.Executor executor;

  java.util.function.BiConsumer<? super org.glassfish.jersey.internal.jsr166.Flow$Subscriber<? super T>, ? super java.lang.Throwable> onNextHandler;

  volatile java.lang.Throwable pendingError;

  volatile java.lang.Thread waiter;

  T putItem;

  org.glassfish.jersey.internal.jsr166.SubmissionPublisher$BufferedSubscription<T> next;

  org.glassfish.jersey.internal.jsr166.SubmissionPublisher$BufferedSubscription<T> nextRetry;

  static final int ACTIVE;

  static final int CONSUME;

  static final int DISABLED;

  static final int ERROR;

  static final int SUBSCRIBE;

  static final int COMPLETE;

  static final long INTERRUPTED;

  static final int DEFAULT_INITIAL_CAP;

  private static final sun.misc.Unsafe U;

  private static final long CTL;

  private static final long TAIL;

  private static final long HEAD;

  private static final long DEMAND;

  private static final int ABASE;

  private static final int ASHIFT;

  org.glassfish.jersey.internal.jsr166.SubmissionPublisher$BufferedSubscription(org.glassfish.jersey.internal.jsr166.Flow$Subscriber<? super T>, java.util.concurrent.Executor, java.util.function.BiConsumer<? super org.glassfish.jersey.internal.jsr166.Flow$Subscriber<? super T>, ? super java.lang.Throwable>, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field subscriber:Lorg/glassfish/jersey/internal/jsr166/Flow$Subscriber;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field executor:Ljava/util/concurrent/Executor;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field onNextHandler:Ljava/util/function/BiConsumer;
      19: aload_0
      20: iload         4
      22: putfield      #5                  // Field maxCapacity:I
      25: aload_0
      26: iload         4
      28: bipush        32
      30: if_icmpge     48
      33: iload         4
      35: iconst_2
      36: if_icmpge     43
      39: iconst_2
      40: goto          50
      43: iload         4
      45: goto          50
      48: bipush        32
      50: anewarray     #7                  // class java/lang/Object
      53: putfield      #8                  // Field array:[Ljava/lang/Object;
      56: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field subscriber:Lorg/glassfish/jersey/internal/jsr166/Flow$Subscriber;
       4: ifnull        15
       7: aload_0
       8: getfield      #2                  // Field subscriber:Lorg/glassfish/jersey/internal/jsr166/Flow$Subscriber;
      11: invokevirtual #9                  // Method java/lang/Object.toString:()Ljava/lang/String;
      14: areturn
      15: aload_0
      16: invokespecial #9                  // Method java/lang/Object.toString:()Ljava/lang/String;
      19: areturn

  final boolean isDisabled();
    Code:
       0: aload_0
       1: getfield      #10                 // Field ctl:I
       4: iconst_4
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  final int estimateLag();
    Code:
       0: aload_0
       1: getfield      #10                 // Field ctl:I
       4: iconst_4
       5: if_icmpne     12
       8: iconst_m1
       9: goto          31
      12: aload_0
      13: getfield      #11                 // Field tail:I
      16: aload_0
      17: getfield      #12                 // Field head:I
      20: isub
      21: dup
      22: istore_1
      23: ifle          30
      26: iload_1
      27: goto          31
      30: iconst_0
      31: ireturn

  final int offer(T);
    Code:
       0: aload_0
       1: getfield      #12                 // Field head:I
       4: istore_2
       5: aload_0
       6: getfield      #11                 // Field tail:I
       9: istore_3
      10: aload_0
      11: getfield      #8                  // Field array:[Ljava/lang/Object;
      14: astore        7
      16: aload         7
      18: ifnull        67
      21: aload         7
      23: arraylength
      24: dup
      25: istore        4
      27: ifle          67
      30: iload         4
      32: iload_3
      33: iconst_1
      34: iadd
      35: iload_2
      36: isub
      37: dup
      38: istore        5
      40: if_icmplt     67
      43: aload         7
      45: iload         4
      47: iconst_1
      48: isub
      49: iload_3
      50: iand
      51: aload_1
      52: aastore
      53: aload_0
      54: iload_3
      55: iconst_1
      56: iadd
      57: putfield      #11                 // Field tail:I
      60: iload         5
      62: istore        6
      64: goto          76
      67: aload_0
      68: aload         7
      70: aload_1
      71: invokespecial #13                 // Method growAndAdd:([Ljava/lang/Object;Ljava/lang/Object;)I
      74: istore        6
      76: iload         6
      78: ifle          100
      81: aload_0
      82: getfield      #10                 // Field ctl:I
      85: iconst_3
      86: iand
      87: iconst_3
      88: if_icmpeq     100
      91: aload_0
      92: iload         6
      94: invokespecial #14                 // Method startOnOffer:(I)I
      97: goto          102
     100: iload         6
     102: ireturn

  private int growAndAdd(java.lang.Object[], T);
    Code:
       0: aload_0
       1: getfield      #10                 // Field ctl:I
       4: bipush        12
       6: iand
       7: ifeq          21
      10: iconst_0
      11: istore        4
      13: iconst_m1
      14: istore        5
      16: iconst_0
      17: istore_3
      18: goto          130
      21: aload_1
      22: ifnull        33
      25: aload_1
      26: arraylength
      27: dup
      28: istore        4
      30: ifgt          44
      33: iconst_0
      34: istore        4
      36: iconst_1
      37: istore        5
      39: iconst_1
      40: istore_3
      41: goto          130
      44: getstatic     #15                 // Field U:Lsun/misc/Unsafe;
      47: invokevirtual #16                 // Method sun/misc/Unsafe.fullFence:()V
      50: aload_0
      51: getfield      #12                 // Field head:I
      54: istore        6
      56: aload_0
      57: getfield      #11                 // Field tail:I
      60: istore        7
      62: iload         7
      64: iconst_1
      65: iadd
      66: iload         6
      68: isub
      69: istore        8
      71: iload         4
      73: iload         8
      75: if_icmplt     105
      78: aload_1
      79: iload         4
      81: iconst_1
      82: isub
      83: iload         7
      85: iand
      86: aload_2
      87: aastore
      88: aload_0
      89: iload         7
      91: iconst_1
      92: iadd
      93: putfield      #11                 // Field tail:I
      96: iload         8
      98: istore        5
     100: iconst_0
     101: istore_3
     102: goto          130
     105: iload         4
     107: aload_0
     108: getfield      #5                  // Field maxCapacity:I
     111: if_icmplt     122
     114: iconst_0
     115: istore        5
     117: iconst_0
     118: istore_3
     119: goto          130
     122: iload         4
     124: iconst_1
     125: iadd
     126: istore        5
     128: iconst_1
     129: istore_3
     130: iload_3
     131: ifeq          326
     134: iload         4
     136: ifle          146
     139: iload         4
     141: iconst_1
     142: ishl
     143: goto          147
     146: iconst_1
     147: istore        6
     149: iload         6
     151: iload         4
     153: if_icmpgt     162
     156: iconst_0
     157: istore        5
     159: goto          326
     162: aconst_null
     163: astore        7
     165: iload         6
     167: anewarray     #7                  // class java/lang/Object
     170: astore        7
     172: goto          177
     175: astore        8
     177: aload         7
     179: ifnonnull     199
     182: iload         4
     184: ifle          193
     187: aload_0
     188: iload         4
     190: putfield      #5                  // Field maxCapacity:I
     193: iconst_0
     194: istore        5
     196: goto          326
     199: aload_0
     200: aload         7
     202: putfield      #8                  // Field array:[Ljava/lang/Object;
     205: aload_0
     206: getfield      #11                 // Field tail:I
     209: istore        8
     211: iload         6
     213: iconst_1
     214: isub
     215: istore        9
     217: aload_1
     218: ifnull        309
     221: iload         4
     223: ifle          309
     226: iload         4
     228: iconst_1
     229: isub
     230: istore        10
     232: aload_0
     233: getfield      #12                 // Field head:I
     236: istore        11
     238: iload         11
     240: iload         8
     242: if_icmpeq     309
     245: iload         11
     247: iload         10
     249: iand
     250: i2l
     251: getstatic     #18                 // Field ASHIFT:I
     254: lshl
     255: getstatic     #19                 // Field ABASE:I
     258: i2l
     259: ladd
     260: lstore        12
     262: getstatic     #15                 // Field U:Lsun/misc/Unsafe;
     265: aload_1
     266: lload         12
     268: invokevirtual #20                 // Method sun/misc/Unsafe.getObjectVolatile:(Ljava/lang/Object;J)Ljava/lang/Object;
     271: astore        14
     273: aload         14
     275: ifnull        303
     278: getstatic     #15                 // Field U:Lsun/misc/Unsafe;
     281: aload_1
     282: lload         12
     284: aload         14
     286: aconst_null
     287: invokevirtual #21                 // Method sun/misc/Unsafe.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
     290: ifeq          303
     293: aload         7
     295: iload         11
     297: iload         9
     299: iand
     300: aload         14
     302: aastore
     303: iinc          11, 1
     306: goto          238
     309: aload         7
     311: iload         8
     313: iload         9
     315: iand
     316: aload_2
     317: aastore
     318: aload_0
     319: iload         8
     321: iconst_1
     322: iadd
     323: putfield      #11                 // Field tail:I
     326: iload         5
     328: ireturn
    Exception table:
       from    to  target type
         165   172   175   Class java/lang/Throwable

  final int submit(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #22                 // Method offer:(Ljava/lang/Object;)I
       5: dup
       6: istore_2
       7: ifne          69
      10: aload_0
      11: aload_1
      12: putfield      #23                 // Field putItem:Ljava/lang/Object;
      15: aload_0
      16: lconst_0
      17: putfield      #24                 // Field timeout:J
      20: aload_0
      21: iconst_0
      22: putfield      #25                 // Field putStat:I
      25: aload_0
      26: getfield      #25                 // Field putStat:I
      29: dup
      30: istore_2
      31: ifne          54
      34: aload_0
      35: invokestatic  #26                 // Method java/util/concurrent/ForkJoinPool.managedBlock:(Ljava/util/concurrent/ForkJoinPool$ManagedBlocker;)V
      38: goto          49
      41: astore_3
      42: aload_0
      43: ldc2_w        #28                 // long -1l
      46: putfield      #24                 // Field timeout:J
      49: aload_0
      50: getfield      #25                 // Field putStat:I
      53: istore_2
      54: aload_0
      55: getfield      #24                 // Field timeout:J
      58: lconst_0
      59: lcmp
      60: ifge          69
      63: invokestatic  #30                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      66: invokevirtual #31                 // Method java/lang/Thread.interrupt:()V
      69: iload_2
      70: ireturn
    Exception table:
       from    to  target type
          34    38    41   Class java/lang/InterruptedException

  final int timedOffer(T, long);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #22                 // Method offer:(Ljava/lang/Object;)I
       5: dup
       6: istore        4
       8: ifne          79
      11: aload_0
      12: lload_2
      13: dup2_x1
      14: putfield      #24                 // Field timeout:J
      17: lconst_0
      18: lcmp
      19: ifle          79
      22: aload_0
      23: aload_1
      24: putfield      #23                 // Field putItem:Ljava/lang/Object;
      27: aload_0
      28: iconst_0
      29: putfield      #25                 // Field putStat:I
      32: aload_0
      33: getfield      #25                 // Field putStat:I
      36: dup
      37: istore        4
      39: ifne          64
      42: aload_0
      43: invokestatic  #26                 // Method java/util/concurrent/ForkJoinPool.managedBlock:(Ljava/util/concurrent/ForkJoinPool$ManagedBlocker;)V
      46: goto          58
      49: astore        5
      51: aload_0
      52: ldc2_w        #28                 // long -1l
      55: putfield      #24                 // Field timeout:J
      58: aload_0
      59: getfield      #25                 // Field putStat:I
      62: istore        4
      64: aload_0
      65: getfield      #24                 // Field timeout:J
      68: lconst_0
      69: lcmp
      70: ifge          79
      73: invokestatic  #30                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      76: invokevirtual #31                 // Method java/lang/Thread.interrupt:()V
      79: iload         4
      81: ireturn
    Exception table:
       from    to  target type
          42    46    49   Class java/lang/InterruptedException

  private int startOnOffer(int);
    Code:
       0: aload_0
       1: getfield      #10                 // Field ctl:I
       4: dup
       5: istore_3
       6: iconst_4
       7: if_icmpeq     19
      10: aload_0
      11: getfield      #3                  // Field executor:Ljava/util/concurrent/Executor;
      14: dup
      15: astore_2
      16: ifnonnull     24
      19: iconst_m1
      20: istore_1
      21: goto          156
      24: iload_3
      25: iconst_1
      26: iand
      27: ifeq          56
      30: iload_3
      31: iconst_2
      32: iand
      33: ifne          156
      36: getstatic     #15                 // Field U:Lsun/misc/Unsafe;
      39: aload_0
      40: getstatic     #32                 // Field CTL:J
      43: iload_3
      44: iload_3
      45: iconst_2
      46: ior
      47: invokevirtual #33                 // Method sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
      50: ifeq          153
      53: goto          156
      56: aload_0
      57: getfield      #34                 // Field demand:J
      60: lconst_0
      61: lcmp
      62: ifeq          156
      65: aload_0
      66: getfield      #11                 // Field tail:I
      69: aload_0
      70: getfield      #12                 // Field head:I
      73: if_icmpne     79
      76: goto          156
      79: getstatic     #15                 // Field U:Lsun/misc/Unsafe;
      82: aload_0
      83: getstatic     #32                 // Field CTL:J
      86: iload_3
      87: iload_3
      88: iconst_3
      89: ior
      90: invokevirtual #33                 // Method sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
      93: ifeq          153
      96: aload_2
      97: new           #35                 // class org/glassfish/jersey/internal/jsr166/SubmissionPublisher$ConsumerTask
     100: dup
     101: aload_0
     102: invokespecial #36                 // Method org/glassfish/jersey/internal/jsr166/SubmissionPublisher$ConsumerTask."<init>":(Lorg/glassfish/jersey/internal/jsr166/SubmissionPublisher$BufferedSubscription;)V
     105: invokeinterface #37,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
     110: goto          156
     113: astore        4
     115: aload_0
     116: getfield      #10                 // Field ctl:I
     119: dup
     120: istore_3
     121: iconst_4
     122: iand
     123: ifne          150
     126: iload_3
     127: iconst_1
     128: iand
     129: ifeq          150
     132: getstatic     #15                 // Field U:Lsun/misc/Unsafe;
     135: aload_0
     136: getstatic     #32                 // Field CTL:J
     139: iload_3
     140: iload_3
     141: bipush        -2
     143: iand
     144: invokevirtual #33                 // Method sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
     147: ifeq          115
     150: aload         4
     152: athrow
     153: goto          0
     156: iload_1
     157: ireturn
    Exception table:
       from    to  target type
          96   110   113   Class java/lang/RuntimeException
          96   110   113   Class java/lang/Error

  private void signalWaiter(java.lang.Thread);
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #40                 // Field waiter:Ljava/lang/Thread;
       5: aload_1
       6: invokestatic  #41                 // Method java/util/concurrent/locks/LockSupport.unpark:(Ljava/lang/Thread;)V
       9: return

  private void detach();
    Code:
       0: aload_0
       1: getfield      #40                 // Field waiter:Ljava/lang/Thread;
       4: astore_1
       5: aload_0
       6: aconst_null
       7: putfield      #3                  // Field executor:Ljava/util/concurrent/Executor;
      10: aload_0
      11: aconst_null
      12: putfield      #2                  // Field subscriber:Lorg/glassfish/jersey/internal/jsr166/Flow$Subscriber;
      15: aload_0
      16: aconst_null
      17: putfield      #42                 // Field pendingError:Ljava/lang/Throwable;
      20: aload_0
      21: aload_1
      22: invokespecial #43                 // Method signalWaiter:(Ljava/lang/Thread;)V
      25: return

  final void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #10                 // Field ctl:I
       4: dup
       5: istore_2
       6: bipush        12
       8: iand
       9: ifeq          15
      12: goto          94
      15: iload_2
      16: iconst_1
      17: iand
      18: ifeq          47
      21: aload_0
      22: aload_1
      23: putfield      #42                 // Field pendingError:Ljava/lang/Throwable;
      26: getstatic     #15                 // Field U:Lsun/misc/Unsafe;
      29: aload_0
      30: getstatic     #32                 // Field CTL:J
      33: iload_2
      34: iload_2
      35: bipush        8
      37: ior
      38: invokevirtual #33                 // Method sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
      41: ifeq          0
      44: goto          94
      47: getstatic     #15                 // Field U:Lsun/misc/Unsafe;
      50: aload_0
      51: getstatic     #32                 // Field CTL:J
      54: iload_2
      55: iconst_4
      56: invokevirtual #33                 // Method sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
      59: ifeq          0
      62: aload_0
      63: getfield      #2                  // Field subscriber:Lorg/glassfish/jersey/internal/jsr166/Flow$Subscriber;
      66: astore_3
      67: aload_3
      68: ifnull        87
      71: aload_1
      72: ifnull        87
      75: aload_3
      76: aload_1
      77: invokeinterface #44,  2           // InterfaceMethod org/glassfish/jersey/internal/jsr166/Flow$Subscriber.onError:(Ljava/lang/Throwable;)V
      82: goto          87
      85: astore        4
      87: aload_0
      88: invokespecial #45                 // Method detach:()V
      91: goto          94
      94: return
    Exception table:
       from    to  target type
          75    82    85   Class java/lang/Throwable

  private void startOrDisable();
    Code:
       0: aload_0
       1: getfield      #3                  // Field executor:Ljava/util/concurrent/Executor;
       4: dup
       5: astore_1
       6: ifnull        72
       9: aload_1
      10: new           #35                 // class org/glassfish/jersey/internal/jsr166/SubmissionPublisher$ConsumerTask
      13: dup
      14: aload_0
      15: invokespecial #36                 // Method org/glassfish/jersey/internal/jsr166/SubmissionPublisher$ConsumerTask."<init>":(Lorg/glassfish/jersey/internal/jsr166/SubmissionPublisher$BufferedSubscription;)V
      18: invokeinterface #37,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      23: goto          72
      26: astore_2
      27: aload_0
      28: getfield      #10                 // Field ctl:I
      31: dup
      32: istore_3
      33: iconst_4
      34: if_icmpeq     72
      37: iload_3
      38: iconst_1
      39: iand
      40: ifne          46
      43: goto          72
      46: getstatic     #15                 // Field U:Lsun/misc/Unsafe;
      49: aload_0
      50: getstatic     #32                 // Field CTL:J
      53: iload_3
      54: iload_3
      55: bipush        -2
      57: iand
      58: invokevirtual #33                 // Method sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
      61: ifeq          27
      64: aload_0
      65: aload_2
      66: invokevirtual #46                 // Method onError:(Ljava/lang/Throwable;)V
      69: goto          72
      72: return
    Exception table:
       from    to  target type
           9    23    26   Class java/lang/Throwable

  final void onComplete();
    Code:
       0: aload_0
       1: getfield      #10                 // Field ctl:I
       4: dup
       5: istore_1
       6: iconst_4
       7: if_icmpne     13
      10: goto          44
      13: getstatic     #15                 // Field U:Lsun/misc/Unsafe;
      16: aload_0
      17: getstatic     #32                 // Field CTL:J
      20: iload_1
      21: iload_1
      22: bipush        35
      24: ior
      25: invokevirtual #33                 // Method sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
      28: ifeq          0
      31: iload_1
      32: iconst_1
      33: iand
      34: ifne          44
      37: aload_0
      38: invokespecial #47                 // Method startOrDisable:()V
      41: goto          44
      44: return

  final void onSubscribe();
    Code:
       0: aload_0
       1: getfield      #10                 // Field ctl:I
       4: dup
       5: istore_1
       6: iconst_4
       7: if_icmpne     13
      10: goto          44
      13: getstatic     #15                 // Field U:Lsun/misc/Unsafe;
      16: aload_0
      17: getstatic     #32                 // Field CTL:J
      20: iload_1
      21: iload_1
      22: bipush        19
      24: ior
      25: invokevirtual #33                 // Method sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
      28: ifeq          0
      31: iload_1
      32: iconst_1
      33: iand
      34: ifne          44
      37: aload_0
      38: invokespecial #47                 // Method startOrDisable:()V
      41: goto          44
      44: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #10                 // Field ctl:I
       4: dup
       5: istore_1
       6: iconst_4
       7: if_icmpne     13
      10: goto          62
      13: iload_1
      14: iconst_1
      15: iand
      16: ifeq          40
      19: getstatic     #15                 // Field U:Lsun/misc/Unsafe;
      22: aload_0
      23: getstatic     #32                 // Field CTL:J
      26: iload_1
      27: iload_1
      28: bipush        10
      30: ior
      31: invokevirtual #33                 // Method sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
      34: ifeq          0
      37: goto          62
      40: getstatic     #15                 // Field U:Lsun/misc/Unsafe;
      43: aload_0
      44: getstatic     #32                 // Field CTL:J
      47: iload_1
      48: iconst_4
      49: invokevirtual #33                 // Method sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
      52: ifeq          0
      55: aload_0
      56: invokespecial #45                 // Method detach:()V
      59: goto          62
      62: return

  public void request(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifle          172
       6: aload_0
       7: getfield      #34                 // Field demand:J
      10: lstore_3
      11: lload_3
      12: lload_1
      13: ladd
      14: dup2
      15: lstore        5
      17: lload_3
      18: lcmp
      19: ifge          27
      22: ldc2_w        #49                 // long 9223372036854775807l
      25: lstore        5
      27: getstatic     #15                 // Field U:Lsun/misc/Unsafe;
      30: aload_0
      31: getstatic     #51                 // Field DEMAND:J
      34: lload_3
      35: lload         5
      37: invokevirtual #52                 // Method sun/misc/Unsafe.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z
      40: ifeq          169
      43: aload_0
      44: getfield      #10                 // Field ctl:I
      47: dup
      48: istore        7
      50: iconst_4
      51: if_icmpne     57
      54: goto          166
      57: iload         7
      59: iconst_1
      60: iand
      61: ifeq          93
      64: iload         7
      66: iconst_2
      67: iand
      68: ifne          166
      71: getstatic     #15                 // Field U:Lsun/misc/Unsafe;
      74: aload_0
      75: getstatic     #32                 // Field CTL:J
      78: iload         7
      80: iload         7
      82: iconst_2
      83: ior
      84: invokevirtual #33                 // Method sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
      87: ifeq          154
      90: goto          166
      93: aload_0
      94: getfield      #12                 // Field head:I
      97: dup
      98: istore        8
     100: aload_0
     101: getfield      #11                 // Field tail:I
     104: if_icmpeq     133
     107: getstatic     #15                 // Field U:Lsun/misc/Unsafe;
     110: aload_0
     111: getstatic     #32                 // Field CTL:J
     114: iload         7
     116: iload         7
     118: iconst_3
     119: ior
     120: invokevirtual #33                 // Method sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
     123: ifeq          154
     126: aload_0
     127: invokespecial #47                 // Method startOrDisable:()V
     130: goto          166
     133: aload_0
     134: getfield      #12                 // Field head:I
     137: iload         8
     139: if_icmpne     154
     142: aload_0
     143: getfield      #11                 // Field tail:I
     146: iload         8
     148: if_icmpne     154
     151: goto          166
     154: aload_0
     155: getfield      #34                 // Field demand:J
     158: lconst_0
     159: lcmp
     160: ifne          43
     163: goto          166
     166: goto          191
     169: goto          6
     172: lload_1
     173: lconst_0
     174: lcmp
     175: ifge          191
     178: aload_0
     179: new           #53                 // class java/lang/IllegalArgumentException
     182: dup
     183: ldc           #54                 // String negative subscription request
     185: invokespecial #55                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     188: invokevirtual #46                 // Method onError:(Ljava/lang/Throwable;)V
     191: return

  public final boolean isReleasable();
    Code:
       0: aload_0
       1: getfield      #23                 // Field putItem:Ljava/lang/Object;
       4: astore_1
       5: aload_1
       6: ifnull        29
       9: aload_0
      10: aload_0
      11: aload_1
      12: invokevirtual #22                 // Method offer:(Ljava/lang/Object;)I
      15: dup_x1
      16: putfield      #25                 // Field putStat:I
      19: ifne          24
      22: iconst_0
      23: ireturn
      24: aload_0
      25: aconst_null
      26: putfield      #23                 // Field putItem:Ljava/lang/Object;
      29: iconst_1
      30: ireturn

  public final boolean block();
    Code:
       0: aload_0
       1: getfield      #23                 // Field putItem:Ljava/lang/Object;
       4: astore_1
       5: aload_1
       6: ifnull        136
       9: aload_0
      10: aconst_null
      11: putfield      #23                 // Field putItem:Ljava/lang/Object;
      14: aload_0
      15: getfield      #24                 // Field timeout:J
      18: lstore_2
      19: lload_2
      20: lconst_0
      21: lcmp
      22: ifle          33
      25: invokestatic  #56                 // Method java/lang/System.nanoTime:()J
      28: lload_2
      29: ladd
      30: goto          34
      33: lconst_0
      34: lstore        4
      36: aload_0
      37: aload_0
      38: aload_1
      39: invokevirtual #22                 // Method offer:(Ljava/lang/Object;)I
      42: dup_x1
      43: putfield      #25                 // Field putStat:I
      46: ifne          136
      49: invokestatic  #57                 // Method java/lang/Thread.interrupted:()Z
      52: ifeq          71
      55: aload_0
      56: ldc2_w        #28                 // long -1l
      59: putfield      #24                 // Field timeout:J
      62: lload_2
      63: lconst_0
      64: lcmp
      65: ifle          36
      68: goto          136
      71: lload_2
      72: lconst_0
      73: lcmp
      74: ifle          93
      77: lload         4
      79: invokestatic  #56                 // Method java/lang/System.nanoTime:()J
      82: lsub
      83: dup2
      84: lstore_2
      85: lconst_0
      86: lcmp
      87: ifgt          93
      90: goto          136
      93: aload_0
      94: getfield      #40                 // Field waiter:Ljava/lang/Thread;
      97: ifnonnull     110
     100: aload_0
     101: invokestatic  #30                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     104: putfield      #40                 // Field waiter:Ljava/lang/Thread;
     107: goto          36
     110: lload_2
     111: lconst_0
     112: lcmp
     113: ifle          124
     116: aload_0
     117: lload_2
     118: invokestatic  #58                 // Method java/util/concurrent/locks/LockSupport.parkNanos:(Ljava/lang/Object;J)V
     121: goto          128
     124: aload_0
     125: invokestatic  #59                 // Method java/util/concurrent/locks/LockSupport.park:(Ljava/lang/Object;)V
     128: aload_0
     129: aconst_null
     130: putfield      #40                 // Field waiter:Ljava/lang/Thread;
     133: goto          36
     136: aload_0
     137: aconst_null
     138: putfield      #40                 // Field waiter:Ljava/lang/Thread;
     141: iconst_1
     142: ireturn

  final void consume();
    Code:
       0: aload_0
       1: getfield      #12                 // Field head:I
       4: istore_2
       5: aload_0
       6: getfield      #2                  // Field subscriber:Lorg/glassfish/jersey/internal/jsr166/Flow$Subscriber;
       9: dup
      10: astore_1
      11: ifnull        249
      14: aload_0
      15: getfield      #34                 // Field demand:J
      18: lstore_3
      19: aload_0
      20: getfield      #10                 // Field ctl:I
      23: dup
      24: istore        5
      26: bipush        28
      28: iand
      29: ifeq          45
      32: aload_0
      33: aload_1
      34: iload         5
      36: invokespecial #60                 // Method checkControl:(Lorg/glassfish/jersey/internal/jsr166/Flow$Subscriber;I)Z
      39: ifne          246
      42: goto          249
      45: aload_0
      46: getfield      #8                  // Field array:[Ljava/lang/Object;
      49: dup
      50: astore        6
      52: ifnull        105
      55: iload_2
      56: aload_0
      57: getfield      #11                 // Field tail:I
      60: if_icmpeq     105
      63: aload         6
      65: arraylength
      66: dup
      67: istore        7
      69: ifeq          105
      72: getstatic     #15                 // Field U:Lsun/misc/Unsafe;
      75: aload         6
      77: iload         7
      79: iconst_1
      80: isub
      81: iload_2
      82: iand
      83: i2l
      84: getstatic     #18                 // Field ASHIFT:I
      87: lshl
      88: getstatic     #19                 // Field ABASE:I
      91: i2l
      92: ladd
      93: dup2
      94: lstore        8
      96: invokevirtual #20                 // Method sun/misc/Unsafe.getObjectVolatile:(Ljava/lang/Object;J)Ljava/lang/Object;
      99: dup
     100: astore        10
     102: ifnonnull     118
     105: aload_0
     106: aload_1
     107: iload         5
     109: invokespecial #61                 // Method checkEmpty:(Lorg/glassfish/jersey/internal/jsr166/Flow$Subscriber;I)Z
     112: ifne          246
     115: goto          249
     118: lload_3
     119: lconst_0
     120: lcmp
     121: ifne          136
     124: aload_0
     125: iload         5
     127: invokespecial #62                 // Method checkDemand:(I)Z
     130: ifne          246
     133: goto          249
     136: iload         5
     138: iconst_2
     139: iand
     140: ifne          162
     143: getstatic     #15                 // Field U:Lsun/misc/Unsafe;
     146: aload_0
     147: getstatic     #32                 // Field CTL:J
     150: iload         5
     152: iload         5
     154: iconst_2
     155: ior
     156: invokevirtual #33                 // Method sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
     159: ifeq          246
     162: getstatic     #15                 // Field U:Lsun/misc/Unsafe;
     165: aload         6
     167: lload         8
     169: aload         10
     171: aconst_null
     172: invokevirtual #21                 // Method sun/misc/Unsafe.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
     175: ifeq          246
     178: getstatic     #15                 // Field U:Lsun/misc/Unsafe;
     181: aload_0
     182: getstatic     #63                 // Field HEAD:J
     185: iinc          2, 1
     188: iload_2
     189: invokevirtual #64                 // Method sun/misc/Unsafe.putOrderedInt:(Ljava/lang/Object;JI)V
     192: getstatic     #15                 // Field U:Lsun/misc/Unsafe;
     195: aload_0
     196: getstatic     #51                 // Field DEMAND:J
     199: ldc2_w        #28                 // long -1l
     202: invokevirtual #65                 // Method sun/misc/Unsafe.getAndAddLong:(Ljava/lang/Object;JJ)J
     205: pop2
     206: aload_0
     207: getfield      #40                 // Field waiter:Ljava/lang/Thread;
     210: dup
     211: astore        11
     213: ifnull        222
     216: aload_0
     217: aload         11
     219: invokespecial #43                 // Method signalWaiter:(Ljava/lang/Thread;)V
     222: aload         10
     224: astore        12
     226: aload_1
     227: aload         12
     229: invokeinterface #66,  2           // InterfaceMethod org/glassfish/jersey/internal/jsr166/Flow$Subscriber.onNext:(Ljava/lang/Object;)V
     234: goto          246
     237: astore        12
     239: aload_0
     240: aload_1
     241: aload         12
     243: invokespecial #67                 // Method handleOnNext:(Lorg/glassfish/jersey/internal/jsr166/Flow$Subscriber;Ljava/lang/Throwable;)V
     246: goto          14
     249: return
    Exception table:
       from    to  target type
         222   234   237   Class java/lang/Throwable

  private boolean checkControl(org.glassfish.jersey.internal.jsr166.Flow$Subscriber<? super T>, int);
    Code:
       0: iconst_1
       1: istore_3
       2: iload_2
       3: bipush        16
       5: iand
       6: ifeq          52
       9: getstatic     #15                 // Field U:Lsun/misc/Unsafe;
      12: aload_0
      13: getstatic     #32                 // Field CTL:J
      16: iload_2
      17: iload_2
      18: bipush        -17
      20: iand
      21: invokevirtual #33                 // Method sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
      24: ifeq          101
      27: aload_1
      28: ifnull        38
      31: aload_1
      32: aload_0
      33: invokeinterface #68,  2           // InterfaceMethod org/glassfish/jersey/internal/jsr166/Flow$Subscriber.onSubscribe:(Lorg/glassfish/jersey/internal/jsr166/Flow$Subscription;)V
      38: goto          101
      41: astore        4
      43: aload_0
      44: aload         4
      46: invokevirtual #46                 // Method onError:(Ljava/lang/Throwable;)V
      49: goto          101
      52: iload_2
      53: bipush        8
      55: iand
      56: ifeq          95
      59: aload_0
      60: getfield      #42                 // Field pendingError:Ljava/lang/Throwable;
      63: astore        4
      65: aload_0
      66: iconst_4
      67: putfield      #10                 // Field ctl:I
      70: aload         4
      72: ifnull        92
      75: aload_1
      76: ifnull        87
      79: aload_1
      80: aload         4
      82: invokeinterface #44,  2           // InterfaceMethod org/glassfish/jersey/internal/jsr166/Flow$Subscriber.onError:(Ljava/lang/Throwable;)V
      87: goto          92
      90: astore        5
      92: goto          101
      95: aload_0
      96: invokespecial #45                 // Method detach:()V
      99: iconst_0
     100: istore_3
     101: iload_3
     102: ireturn
    Exception table:
       from    to  target type
          27    38    41   Class java/lang/Throwable
          75    87    90   Class java/lang/Throwable

  private boolean checkEmpty(org.glassfish.jersey.internal.jsr166.Flow$Subscriber<? super T>, int);
    Code:
       0: iconst_1
       1: istore_3
       2: aload_0
       3: getfield      #12                 // Field head:I
       6: aload_0
       7: getfield      #11                 // Field tail:I
      10: if_icmpne     98
      13: iload_2
      14: iconst_2
      15: iand
      16: ifeq          38
      19: getstatic     #15                 // Field U:Lsun/misc/Unsafe;
      22: aload_0
      23: getstatic     #32                 // Field CTL:J
      26: iload_2
      27: iload_2
      28: bipush        -3
      30: iand
      31: invokevirtual #33                 // Method sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
      34: pop
      35: goto          98
      38: iload_2
      39: bipush        32
      41: iand
      42: ifeq          78
      45: getstatic     #15                 // Field U:Lsun/misc/Unsafe;
      48: aload_0
      49: getstatic     #32                 // Field CTL:J
      52: iload_2
      53: iconst_4
      54: invokevirtual #33                 // Method sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
      57: ifeq          98
      60: aload_1
      61: ifnull        70
      64: aload_1
      65: invokeinterface #69,  1           // InterfaceMethod org/glassfish/jersey/internal/jsr166/Flow$Subscriber.onComplete:()V
      70: goto          98
      73: astore        4
      75: goto          98
      78: getstatic     #15                 // Field U:Lsun/misc/Unsafe;
      81: aload_0
      82: getstatic     #32                 // Field CTL:J
      85: iload_2
      86: iload_2
      87: bipush        -2
      89: iand
      90: invokevirtual #33                 // Method sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
      93: ifeq          98
      96: iconst_0
      97: istore_3
      98: iload_3
      99: ireturn
    Exception table:
       from    to  target type
          60    70    73   Class java/lang/Throwable

  private boolean checkDemand(int);
    Code:
       0: iconst_1
       1: istore_2
       2: aload_0
       3: getfield      #34                 // Field demand:J
       6: lconst_0
       7: lcmp
       8: ifne          56
      11: iload_1
      12: iconst_2
      13: iand
      14: ifeq          36
      17: getstatic     #15                 // Field U:Lsun/misc/Unsafe;
      20: aload_0
      21: getstatic     #32                 // Field CTL:J
      24: iload_1
      25: iload_1
      26: bipush        -3
      28: iand
      29: invokevirtual #33                 // Method sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
      32: pop
      33: goto          56
      36: getstatic     #15                 // Field U:Lsun/misc/Unsafe;
      39: aload_0
      40: getstatic     #32                 // Field CTL:J
      43: iload_1
      44: iload_1
      45: bipush        -2
      47: iand
      48: invokevirtual #33                 // Method sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
      51: ifeq          56
      54: iconst_0
      55: istore_2
      56: iload_2
      57: ireturn

  private void handleOnNext(org.glassfish.jersey.internal.jsr166.Flow$Subscriber<? super T>, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #4                  // Field onNextHandler:Ljava/util/function/BiConsumer;
       4: dup
       5: astore_3
       6: ifnull        22
       9: aload_3
      10: aload_1
      11: aload_2
      12: invokeinterface #70,  3           // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      17: goto          22
      20: astore        4
      22: aload_0
      23: aload_2
      24: invokevirtual #46                 // Method onError:(Ljava/lang/Throwable;)V
      27: return
    Exception table:
       from    to  target type
           9    17    20   Class java/lang/Throwable

  static {};
    Code:
       0: invokestatic  #71                 // Method org/glassfish/jersey/internal/jsr166/UnsafeAccessor.getUnsafe:()Lsun/misc/Unsafe;
       3: putstatic     #15                 // Field U:Lsun/misc/Unsafe;
       6: getstatic     #15                 // Field U:Lsun/misc/Unsafe;
       9: ldc           #6                  // class org/glassfish/jersey/internal/jsr166/SubmissionPublisher$BufferedSubscription
      11: ldc           #72                 // String ctl
      13: invokevirtual #73                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      16: invokevirtual #74                 // Method sun/misc/Unsafe.objectFieldOffset:(Ljava/lang/reflect/Field;)J
      19: putstatic     #32                 // Field CTL:J
      22: getstatic     #15                 // Field U:Lsun/misc/Unsafe;
      25: ldc           #6                  // class org/glassfish/jersey/internal/jsr166/SubmissionPublisher$BufferedSubscription
      27: ldc           #75                 // String tail
      29: invokevirtual #73                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      32: invokevirtual #74                 // Method sun/misc/Unsafe.objectFieldOffset:(Ljava/lang/reflect/Field;)J
      35: putstatic     #76                 // Field TAIL:J
      38: getstatic     #15                 // Field U:Lsun/misc/Unsafe;
      41: ldc           #6                  // class org/glassfish/jersey/internal/jsr166/SubmissionPublisher$BufferedSubscription
      43: ldc           #77                 // String head
      45: invokevirtual #73                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      48: invokevirtual #74                 // Method sun/misc/Unsafe.objectFieldOffset:(Ljava/lang/reflect/Field;)J
      51: putstatic     #63                 // Field HEAD:J
      54: getstatic     #15                 // Field U:Lsun/misc/Unsafe;
      57: ldc           #6                  // class org/glassfish/jersey/internal/jsr166/SubmissionPublisher$BufferedSubscription
      59: ldc           #78                 // String demand
      61: invokevirtual #73                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      64: invokevirtual #74                 // Method sun/misc/Unsafe.objectFieldOffset:(Ljava/lang/reflect/Field;)J
      67: putstatic     #51                 // Field DEMAND:J
      70: getstatic     #15                 // Field U:Lsun/misc/Unsafe;
      73: ldc           #79                 // class "[Ljava/lang/Object;"
      75: invokevirtual #80                 // Method sun/misc/Unsafe.arrayBaseOffset:(Ljava/lang/Class;)I
      78: putstatic     #19                 // Field ABASE:I
      81: getstatic     #15                 // Field U:Lsun/misc/Unsafe;
      84: ldc           #79                 // class "[Ljava/lang/Object;"
      86: invokevirtual #81                 // Method sun/misc/Unsafe.arrayIndexScale:(Ljava/lang/Class;)I
      89: istore_0
      90: iload_0
      91: iload_0
      92: iconst_1
      93: isub
      94: iand
      95: ifeq          108
      98: new           #39                 // class java/lang/Error
     101: dup
     102: ldc           #82                 // String data type scale not a power of two
     104: invokespecial #83                 // Method java/lang/Error."<init>":(Ljava/lang/String;)V
     107: athrow
     108: bipush        31
     110: iload_0
     111: invokestatic  #84                 // Method java/lang/Integer.numberOfLeadingZeros:(I)I
     114: isub
     115: putstatic     #18                 // Field ASHIFT:I
     118: goto          131
     121: astore_0
     122: new           #39                 // class java/lang/Error
     125: dup
     126: aload_0
     127: invokespecial #86                 // Method java/lang/Error."<init>":(Ljava/lang/Throwable;)V
     130: athrow
     131: ldc           #87                 // class java/util/concurrent/locks/LockSupport
     133: astore_0
     134: return
    Exception table:
       from    to  target type
           6   118   121   Class java/lang/ReflectiveOperationException
}
