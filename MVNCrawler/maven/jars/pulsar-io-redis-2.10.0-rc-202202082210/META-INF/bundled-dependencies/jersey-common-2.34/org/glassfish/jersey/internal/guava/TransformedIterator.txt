Compiled from "TransformedIterator.java"
abstract class org.glassfish.jersey.internal.guava.TransformedIterator<F, T> implements java.util.Iterator<T> {
  private final java.util.Iterator<? extends F> backingIterator;

  org.glassfish.jersey.internal.guava.TransformedIterator(java.util.Iterator<? extends F>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method org/glassfish/jersey/internal/guava/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #3                  // class java/util/Iterator
      12: putfield      #4                  // Field backingIterator:Ljava/util/Iterator;
      15: return

  abstract T transform(F);

  public final boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #4                  // Field backingIterator:Ljava/util/Iterator;
       4: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
       9: ireturn

  public final T next();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field backingIterator:Ljava/util/Iterator;
       5: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      10: invokevirtual #7                  // Method transform:(Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public final void remove();
    Code:
       0: aload_0
       1: getfield      #4                  // Field backingIterator:Ljava/util/Iterator;
       4: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.remove:()V
       9: return
}
