Compiled from "Quality.java"
public final class org.glassfish.jersey.message.internal.Quality {
  public static final java.util.Comparator<org.glassfish.jersey.message.internal.Qualified> QUALIFIED_COMPARATOR;

  public static final java.util.Comparator<java.lang.Integer> QUALITY_VALUE_COMPARATOR;

  public static final java.lang.String QUALITY_PARAMETER_NAME;

  public static final java.lang.String QUALITY_SOURCE_PARAMETER_NAME;

  public static final int MINIMUM;

  public static final int MAXIMUM;

  public static final int DEFAULT;

  private org.glassfish.jersey.message.internal.Quality();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: new           #4                  // class java/lang/AssertionError
       7: dup
       8: ldc           #5                  // String Instantiation not allowed.
      10: invokespecial #6                  // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      13: athrow

  static java.util.Map<java.lang.String, java.lang.String> enhanceWithQualityParameter(java.util.Map<java.lang.String, java.lang.String>, java.lang.String, int);
    Code:
       0: iload_2
       1: sipush        1000
       4: if_icmpne     32
       7: aload_0
       8: ifnull        30
      11: aload_0
      12: invokeinterface #7,  1            // InterfaceMethod java/util/Map.isEmpty:()Z
      17: ifne          30
      20: aload_0
      21: aload_1
      22: invokeinterface #8,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      27: ifne          32
      30: aload_0
      31: areturn
      32: aload_0
      33: ifnull        45
      36: aload_0
      37: invokeinterface #7,  1            // InterfaceMethod java/util/Map.isEmpty:()Z
      42: ifeq          55
      45: aload_1
      46: iload_2
      47: i2f
      48: invokestatic  #9                  // Method qualityValueToString:(F)Ljava/lang/String;
      51: invokestatic  #10                 // Method java/util/Collections.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;
      54: areturn
      55: aload_0
      56: aload_1
      57: iload_2
      58: i2f
      59: invokestatic  #9                  // Method qualityValueToString:(F)Ljava/lang/String;
      62: invokeinterface #11,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      67: pop
      68: aload_0
      69: areturn
      70: astore_3
      71: new           #13                 // class java/util/HashMap
      74: dup
      75: aload_0
      76: invokespecial #14                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      79: astore        4
      81: aload         4
      83: aload_1
      84: iload_2
      85: i2f
      86: invokestatic  #9                  // Method qualityValueToString:(F)Ljava/lang/String;
      89: invokeinterface #11,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      94: pop
      95: aload         4
      97: areturn
    Exception table:
       from    to  target type
          55    69    70   Class java/lang/UnsupportedOperationException

  private static int compare(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: if_icmpge     9
       5: iconst_m1
       6: goto          19
       9: iload_0
      10: iload_1
      11: if_icmpne     18
      14: iconst_0
      15: goto          19
      18: iconst_1
      19: ireturn

  private static java.lang.String qualityValueToString(float);
    Code:
       0: new           #15                 // class java/lang/StringBuilder
       3: dup
       4: getstatic     #16                 // Field java/util/Locale.US:Ljava/util/Locale;
       7: ldc           #17                 // String %3.3f
       9: iconst_1
      10: anewarray     #18                 // class java/lang/Object
      13: dup
      14: iconst_0
      15: fload_0
      16: ldc           #19                 // float 1000.0f
      18: fdiv
      19: invokestatic  #20                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      22: aastore
      23: invokestatic  #21                 // Method java/lang/String.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      26: invokespecial #22                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      29: astore_1
      30: aload_1
      31: invokevirtual #23                 // Method java/lang/StringBuilder.length:()I
      34: iconst_1
      35: isub
      36: dup
      37: istore_2
      38: iconst_2
      39: if_icmple     61
      42: aload_1
      43: iload_2
      44: invokevirtual #24                 // Method java/lang/StringBuilder.charAt:(I)C
      47: bipush        48
      49: if_icmpne     61
      52: aload_1
      53: iload_2
      54: invokevirtual #25                 // Method java/lang/StringBuilder.deleteCharAt:(I)Ljava/lang/StringBuilder;
      57: pop
      58: goto          30
      61: aload_1
      62: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: areturn

  static int access$000(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: invokestatic  #2                  // Method compare:(II)I
       5: ireturn

  static {};
    Code:
       0: new           #27                 // class org/glassfish/jersey/message/internal/Quality$1
       3: dup
       4: invokespecial #28                 // Method org/glassfish/jersey/message/internal/Quality$1."<init>":()V
       7: putstatic     #29                 // Field QUALIFIED_COMPARATOR:Ljava/util/Comparator;
      10: new           #30                 // class org/glassfish/jersey/message/internal/Quality$2
      13: dup
      14: invokespecial #31                 // Method org/glassfish/jersey/message/internal/Quality$2."<init>":()V
      17: putstatic     #32                 // Field QUALITY_VALUE_COMPARATOR:Ljava/util/Comparator;
      20: return
}
