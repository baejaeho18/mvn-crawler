Compiled from "ExceptionUtils.java"
public final class org.glassfish.jersey.internal.util.ExceptionUtils {
  private org.glassfish.jersey.internal.util.ExceptionUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.String exceptionStackTraceAsString(java.lang.Throwable);
    Code:
       0: new           #2                  // class java/io/StringWriter
       3: dup
       4: invokespecial #3                  // Method java/io/StringWriter."<init>":()V
       7: astore_1
       8: aload_0
       9: new           #4                  // class java/io/PrintWriter
      12: dup
      13: aload_1
      14: invokespecial #5                  // Method java/io/PrintWriter."<init>":(Ljava/io/Writer;)V
      17: invokevirtual #6                  // Method java/lang/Throwable.printStackTrace:(Ljava/io/PrintWriter;)V
      20: aload_1
      21: invokevirtual #7                  // Method java/io/StringWriter.toString:()Ljava/lang/String;
      24: areturn

  public static <T extends java.lang.Exception> void conditionallyReThrow(T, boolean, java.util.logging.Logger, java.lang.String, java.util.logging.Level) throws T;
    Code:
       0: iload_1
       1: ifeq          6
       4: aload_0
       5: athrow
       6: aload_2
       7: aload         4
       9: aload_3
      10: aload_0
      11: invokevirtual #8                  // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      14: return
}
