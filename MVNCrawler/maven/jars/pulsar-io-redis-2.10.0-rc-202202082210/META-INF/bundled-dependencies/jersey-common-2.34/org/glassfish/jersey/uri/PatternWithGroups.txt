Compiled from "PatternWithGroups.java"
public class org.glassfish.jersey.uri.PatternWithGroups {
  private static final int[] EMPTY_INT_ARRAY;

  public static final org.glassfish.jersey.uri.PatternWithGroups EMPTY;

  private final java.lang.String regex;

  private final java.util.regex.Pattern regexPattern;

  private final int[] groupIndexes;

  private static final org.glassfish.jersey.uri.PatternWithGroups$EmptyStringMatchResult EMPTY_STRING_MATCH_RESULT;

  protected org.glassfish.jersey.uri.PatternWithGroups();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #3                  // String
       7: putfield      #4                  // Field regex:Ljava/lang/String;
      10: aload_0
      11: aconst_null
      12: putfield      #5                  // Field regexPattern:Ljava/util/regex/Pattern;
      15: aload_0
      16: getstatic     #6                  // Field EMPTY_INT_ARRAY:[I
      19: putfield      #1                  // Field groupIndexes:[I
      22: return

  public org.glassfish.jersey.uri.PatternWithGroups(java.lang.String) throws java.util.regex.PatternSyntaxException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #6                  // Field EMPTY_INT_ARRAY:[I
       5: invokespecial #7                  // Method "<init>":(Ljava/lang/String;[I)V
       8: return

  public org.glassfish.jersey.uri.PatternWithGroups(java.lang.String, int[]) throws java.util.regex.PatternSyntaxException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #8                  // Method compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: aload_2
       6: invokespecial #9                  // Method "<init>":(Ljava/util/regex/Pattern;[I)V
       9: return

  private static java.util.regex.Pattern compile(java.lang.String) throws java.util.regex.PatternSyntaxException;
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: invokevirtual #10                 // Method java/lang/String.isEmpty:()Z
       8: ifeq          15
      11: aconst_null
      12: goto          19
      15: aload_0
      16: invokestatic  #11                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      19: areturn

  public org.glassfish.jersey.uri.PatternWithGroups(java.util.regex.Pattern) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #6                  // Field EMPTY_INT_ARRAY:[I
       5: invokespecial #9                  // Method "<init>":(Ljava/util/regex/Pattern;[I)V
       8: return

  public org.glassfish.jersey.uri.PatternWithGroups(java.util.regex.Pattern, int[]) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     16
       8: new           #12                 // class java/lang/IllegalArgumentException
      11: dup
      12: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":()V
      15: athrow
      16: aload_0
      17: aload_1
      18: invokevirtual #14                 // Method java/util/regex/Pattern.toString:()Ljava/lang/String;
      21: putfield      #4                  // Field regex:Ljava/lang/String;
      24: aload_0
      25: aload_1
      26: putfield      #5                  // Field regexPattern:Ljava/util/regex/Pattern;
      29: aload_0
      30: aload_2
      31: invokevirtual #15                 // Method "[I".clone:()Ljava/lang/Object;
      34: checkcast     #16                 // class "[I"
      37: putfield      #1                  // Field groupIndexes:[I
      40: return

  public final java.lang.String getRegex();
    Code:
       0: aload_0
       1: getfield      #4                  // Field regex:Ljava/lang/String;
       4: areturn

  public final int[] getGroupIndexes();
    Code:
       0: aload_0
       1: getfield      #1                  // Field groupIndexes:[I
       4: invokevirtual #17                 // Method "[I".clone:()Ljava/lang/Object;
       7: checkcast     #16                 // class "[I"
      10: areturn

  public final java.util.regex.MatchResult match(java.lang.CharSequence);
    Code:
       0: aload_1
       1: ifnonnull     19
       4: aload_0
       5: getfield      #5                  // Field regexPattern:Ljava/util/regex/Pattern;
       8: ifnonnull     17
      11: getstatic     #18                 // Field EMPTY_STRING_MATCH_RESULT:Lorg/glassfish/jersey/uri/PatternWithGroups$EmptyStringMatchResult;
      14: goto          18
      17: aconst_null
      18: areturn
      19: aload_0
      20: getfield      #5                  // Field regexPattern:Ljava/util/regex/Pattern;
      23: ifnonnull     28
      26: aconst_null
      27: areturn
      28: aload_0
      29: getfield      #5                  // Field regexPattern:Ljava/util/regex/Pattern;
      32: aload_1
      33: invokevirtual #19                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      36: astore_2
      37: aload_2
      38: invokevirtual #20                 // Method java/util/regex/Matcher.matches:()Z
      41: ifne          46
      44: aconst_null
      45: areturn
      46: aload_1
      47: invokeinterface #21,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      52: ifne          59
      55: getstatic     #18                 // Field EMPTY_STRING_MATCH_RESULT:Lorg/glassfish/jersey/uri/PatternWithGroups$EmptyStringMatchResult;
      58: areturn
      59: aload_0
      60: getfield      #1                  // Field groupIndexes:[I
      63: arraylength
      64: ifle          79
      67: new           #22                 // class org/glassfish/jersey/uri/PatternWithGroups$GroupIndexMatchResult
      70: dup
      71: aload_0
      72: aload_2
      73: invokespecial #23                 // Method org/glassfish/jersey/uri/PatternWithGroups$GroupIndexMatchResult."<init>":(Lorg/glassfish/jersey/uri/PatternWithGroups;Ljava/util/regex/MatchResult;)V
      76: goto          80
      79: aload_2
      80: areturn

  public final boolean match(java.lang.CharSequence, java.util.List<java.lang.String>) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_2
       1: ifnonnull     12
       4: new           #12                 // class java/lang/IllegalArgumentException
       7: dup
       8: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":()V
      11: athrow
      12: aload_1
      13: ifnull        25
      16: aload_1
      17: invokeinterface #21,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      22: ifne          38
      25: aload_0
      26: getfield      #5                  // Field regexPattern:Ljava/util/regex/Pattern;
      29: ifnonnull     36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn
      38: aload_0
      39: getfield      #5                  // Field regexPattern:Ljava/util/regex/Pattern;
      42: ifnonnull     47
      45: iconst_0
      46: ireturn
      47: aload_0
      48: getfield      #5                  // Field regexPattern:Ljava/util/regex/Pattern;
      51: aload_1
      52: invokevirtual #19                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      55: astore_3
      56: aload_3
      57: invokevirtual #20                 // Method java/util/regex/Matcher.matches:()Z
      60: ifne          65
      63: iconst_0
      64: ireturn
      65: aload_2
      66: invokeinterface #24,  1           // InterfaceMethod java/util/List.clear:()V
      71: aload_0
      72: getfield      #1                  // Field groupIndexes:[I
      75: arraylength
      76: ifle          119
      79: iconst_0
      80: istore        4
      82: iload         4
      84: aload_0
      85: getfield      #1                  // Field groupIndexes:[I
      88: arraylength
      89: if_icmpge     116
      92: aload_2
      93: aload_3
      94: aload_0
      95: getfield      #1                  // Field groupIndexes:[I
      98: iload         4
     100: iaload
     101: invokevirtual #25                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
     104: invokeinterface #26,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     109: pop
     110: iinc          4, 1
     113: goto          82
     116: goto          150
     119: iconst_1
     120: istore        4
     122: iload         4
     124: aload_3
     125: invokevirtual #27                 // Method java/util/regex/Matcher.groupCount:()I
     128: if_icmpgt     150
     131: aload_2
     132: aload_3
     133: iload         4
     135: invokevirtual #25                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
     138: invokeinterface #26,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     143: pop
     144: iinc          4, 1
     147: goto          122
     150: iconst_1
     151: ireturn

  public final boolean match(java.lang.CharSequence, java.util.List<java.lang.String>, java.util.Map<java.lang.String, java.lang.String>) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_3
       1: ifnonnull     12
       4: new           #12                 // class java/lang/IllegalArgumentException
       7: dup
       8: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":()V
      11: athrow
      12: aload_1
      13: ifnull        25
      16: aload_1
      17: invokeinterface #21,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      22: ifne          38
      25: aload_0
      26: getfield      #5                  // Field regexPattern:Ljava/util/regex/Pattern;
      29: ifnonnull     36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn
      38: aload_0
      39: getfield      #5                  // Field regexPattern:Ljava/util/regex/Pattern;
      42: ifnonnull     47
      45: iconst_0
      46: ireturn
      47: aload_0
      48: getfield      #5                  // Field regexPattern:Ljava/util/regex/Pattern;
      51: aload_1
      52: invokevirtual #19                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      55: astore        4
      57: aload         4
      59: invokevirtual #20                 // Method java/util/regex/Matcher.matches:()Z
      62: ifne          67
      65: iconst_0
      66: ireturn
      67: aload_3
      68: invokeinterface #28,  1           // InterfaceMethod java/util/Map.clear:()V
      73: iconst_0
      74: istore        5
      76: iload         5
      78: aload_2
      79: invokeinterface #29,  1           // InterfaceMethod java/util/List.size:()I
      84: if_icmpge     176
      87: aload_2
      88: iload         5
      90: invokeinterface #30,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      95: checkcast     #31                 // class java/lang/String
      98: astore        6
     100: aload         4
     102: aload_0
     103: getfield      #1                  // Field groupIndexes:[I
     106: arraylength
     107: ifle          120
     110: aload_0
     111: getfield      #1                  // Field groupIndexes:[I
     114: iload         5
     116: iaload
     117: goto          124
     120: iload         5
     122: iconst_1
     123: iadd
     124: invokevirtual #25                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
     127: astore        7
     129: aload_3
     130: aload         6
     132: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     137: checkcast     #31                 // class java/lang/String
     140: astore        8
     142: aload         8
     144: ifnull        159
     147: aload         8
     149: aload         7
     151: invokevirtual #33                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     154: ifne          159
     157: iconst_0
     158: ireturn
     159: aload_3
     160: aload         6
     162: aload         7
     164: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     169: pop
     170: iinc          5, 1
     173: goto          76
     176: iconst_1
     177: ireturn

  public final int hashCode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field regex:Ljava/lang/String;
       4: invokevirtual #35                 // Method java/lang/String.hashCode:()I
       7: ireturn

  public final boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: invokevirtual #36                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: aload_1
      11: invokevirtual #36                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: if_acmpeq     19
      17: iconst_0
      18: ireturn
      19: aload_1
      20: checkcast     #37                 // class org/glassfish/jersey/uri/PatternWithGroups
      23: astore_2
      24: aload_0
      25: getfield      #4                  // Field regex:Ljava/lang/String;
      28: aload_2
      29: getfield      #4                  // Field regex:Ljava/lang/String;
      32: if_acmpeq     58
      35: aload_0
      36: getfield      #4                  // Field regex:Ljava/lang/String;
      39: ifnull        56
      42: aload_0
      43: getfield      #4                  // Field regex:Ljava/lang/String;
      46: aload_2
      47: getfield      #4                  // Field regex:Ljava/lang/String;
      50: invokevirtual #33                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      53: ifne          58
      56: iconst_0
      57: ireturn
      58: iconst_1
      59: ireturn

  public final java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #4                  // Field regex:Ljava/lang/String;
       4: areturn

  static int[] access$100(org.glassfish.jersey.uri.PatternWithGroups);
    Code:
       0: aload_0
       1: getfield      #1                  // Field groupIndexes:[I
       4: areturn

  static {};
    Code:
       0: iconst_0
       1: newarray       int
       3: putstatic     #6                  // Field EMPTY_INT_ARRAY:[I
       6: new           #37                 // class org/glassfish/jersey/uri/PatternWithGroups
       9: dup
      10: invokespecial #38                 // Method "<init>":()V
      13: putstatic     #39                 // Field EMPTY:Lorg/glassfish/jersey/uri/PatternWithGroups;
      16: new           #40                 // class org/glassfish/jersey/uri/PatternWithGroups$EmptyStringMatchResult
      19: dup
      20: aconst_null
      21: invokespecial #41                 // Method org/glassfish/jersey/uri/PatternWithGroups$EmptyStringMatchResult."<init>":(Lorg/glassfish/jersey/uri/PatternWithGroups$1;)V
      24: putstatic     #18                 // Field EMPTY_STRING_MATCH_RESULT:Lorg/glassfish/jersey/uri/PatternWithGroups$EmptyStringMatchResult;
      27: return
}
