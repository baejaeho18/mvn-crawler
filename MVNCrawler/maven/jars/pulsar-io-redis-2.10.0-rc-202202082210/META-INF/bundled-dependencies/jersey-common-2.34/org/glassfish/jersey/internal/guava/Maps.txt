Compiled from "Maps.java"
public final class org.glassfish.jersey.internal.guava.Maps {
  private static final org.glassfish.jersey.internal.guava.Joiner$MapJoiner STANDARD_JOINER;

  private org.glassfish.jersey.internal.guava.Maps();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: return

  private static <K> java.util.function.Function<java.util.Map$Entry<K, ?>, K> keyFunction();
    Code:
       0: getstatic     #5                  // Field org/glassfish/jersey/internal/guava/Maps$EntryFunction.KEY:Lorg/glassfish/jersey/internal/guava/Maps$EntryFunction;
       3: areturn

  private static <V> java.util.function.Function<java.util.Map$Entry<?, V>, V> valueFunction();
    Code:
       0: getstatic     #6                  // Field org/glassfish/jersey/internal/guava/Maps$EntryFunction.VALUE:Lorg/glassfish/jersey/internal/guava/Maps$EntryFunction;
       3: areturn

  private static <K, V> java.util.Iterator<K> keyIterator(java.util.Iterator<java.util.Map$Entry<K, V>>);
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method keyFunction:()Ljava/util/function/Function;
       4: invokestatic  #8                  // Method org/glassfish/jersey/internal/guava/Iterators.transform:(Ljava/util/Iterator;Ljava/util/function/Function;)Ljava/util/Iterator;
       7: areturn

  static <K, V> java.util.Iterator<V> valueIterator(java.util.Iterator<java.util.Map$Entry<K, V>>);
    Code:
       0: aload_0
       1: invokestatic  #9                  // Method valueFunction:()Ljava/util/function/Function;
       4: invokestatic  #8                  // Method org/glassfish/jersey/internal/guava/Iterators.transform:(Ljava/util/Iterator;Ljava/util/function/Function;)Ljava/util/Iterator;
       7: areturn

  public static <K, V> java.util.HashMap<K, V> newHashMapWithExpectedSize(int);
    Code:
       0: new           #10                 // class java/util/HashMap
       3: dup
       4: iload_0
       5: invokestatic  #11                 // Method capacity:(I)I
       8: invokespecial #12                 // Method java/util/HashMap."<init>":(I)V
      11: areturn

  static int capacity(int);
    Code:
       0: iload_0
       1: iconst_3
       2: if_icmpge     16
       5: iload_0
       6: ldc           #13                 // String expectedSize
       8: invokestatic  #14                 // Method org/glassfish/jersey/internal/guava/CollectPreconditions.checkNonnegative:(ILjava/lang/String;)I
      11: pop
      12: iload_0
      13: iconst_1
      14: iadd
      15: ireturn
      16: iload_0
      17: ldc           #16                 // int 1073741824
      19: if_icmpge     28
      22: iload_0
      23: iload_0
      24: iconst_3
      25: idiv
      26: iadd
      27: ireturn
      28: ldc           #18                 // int 2147483647
      30: ireturn

  static <K, V> java.util.Iterator<java.util.Map$Entry<K, V>> asMapEntryIterator(java.util.Set<K>, java.util.function.Function<? super K, V>);
    Code:
       0: new           #19                 // class org/glassfish/jersey/internal/guava/Maps$1
       3: dup
       4: aload_0
       5: invokeinterface #20,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      10: aload_1
      11: invokespecial #21                 // Method org/glassfish/jersey/internal/guava/Maps$1."<init>":(Ljava/util/Iterator;Ljava/util/function/Function;)V
      14: areturn

  private static <E> java.util.Set<E> removeOnlySet(java.util.Set<E>);
    Code:
       0: new           #22                 // class org/glassfish/jersey/internal/guava/Maps$2
       3: dup
       4: aload_0
       5: invokespecial #23                 // Method org/glassfish/jersey/internal/guava/Maps$2."<init>":(Ljava/util/Set;)V
       8: areturn

  private static <E> java.util.SortedSet<E> removeOnlySortedSet(java.util.SortedSet<E>);
    Code:
       0: new           #24                 // class org/glassfish/jersey/internal/guava/Maps$3
       3: dup
       4: aload_0
       5: invokespecial #25                 // Method org/glassfish/jersey/internal/guava/Maps$3."<init>":(Ljava/util/SortedSet;)V
       8: areturn

  public static <K, V> java.util.Map$Entry<K, V> immutableEntry(K, V);
    Code:
       0: new           #26                 // class org/glassfish/jersey/internal/guava/ImmutableEntry
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #27                 // Method org/glassfish/jersey/internal/guava/ImmutableEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: areturn

  static <K> java.util.function.Predicate<java.util.Map$Entry<K, ?>> keyPredicateOnEntries(java.util.function.Predicate<? super K>);
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method keyFunction:()Ljava/util/function/Function;
       4: invokestatic  #28                 // Method org/glassfish/jersey/internal/guava/Predicates.compose:(Ljava/util/function/Predicate;Ljava/util/function/Function;)Ljava/util/function/Predicate;
       7: areturn

  static <V> java.util.function.Predicate<java.util.Map$Entry<?, V>> valuePredicateOnEntries(java.util.function.Predicate<? super V>);
    Code:
       0: aload_0
       1: invokestatic  #9                  // Method valueFunction:()Ljava/util/function/Function;
       4: invokestatic  #28                 // Method org/glassfish/jersey/internal/guava/Predicates.compose:(Ljava/util/function/Predicate;Ljava/util/function/Function;)Ljava/util/function/Predicate;
       7: areturn

  static <V> V safeGet(java.util.Map<?, V>, java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #29                 // Method org/glassfish/jersey/internal/guava/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokeinterface #30,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: areturn
      13: astore_2
      14: aconst_null
      15: areturn
      16: astore_2
      17: aconst_null
      18: areturn
    Exception table:
       from    to  target type
           5    12    13   Class java/lang/ClassCastException
           5    12    16   Class java/lang/NullPointerException

  static boolean safeContainsKey(java.util.Map<?, ?>, java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #29                 // Method org/glassfish/jersey/internal/guava/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokeinterface #33,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      12: ireturn
      13: astore_2
      14: iconst_0
      15: ireturn
      16: astore_2
      17: iconst_0
      18: ireturn
    Exception table:
       from    to  target type
           5    12    13   Class java/lang/ClassCastException
           5    12    16   Class java/lang/NullPointerException

  static <V> V safeRemove(java.util.Map<?, V>, java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #29                 // Method org/glassfish/jersey/internal/guava/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokeinterface #34,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      12: areturn
      13: astore_2
      14: aconst_null
      15: areturn
      16: astore_2
      17: aconst_null
      18: areturn
    Exception table:
       from    to  target type
           5    12    13   Class java/lang/ClassCastException
           5    12    16   Class java/lang/NullPointerException

  static java.util.SortedSet access$000(java.util.SortedSet);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method removeOnlySortedSet:(Ljava/util/SortedSet;)Ljava/util/SortedSet;
       4: areturn

  static java.util.Set access$200(java.util.Set);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method removeOnlySet:(Ljava/util/Set;)Ljava/util/Set;
       4: areturn

  static java.util.Iterator access$300(java.util.Iterator);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method keyIterator:(Ljava/util/Iterator;)Ljava/util/Iterator;
       4: areturn

  static {};
    Code:
       0: getstatic     #35                 // Field org/glassfish/jersey/internal/guava/Collections2.STANDARD_JOINER:Lorg/glassfish/jersey/internal/guava/Joiner;
       3: invokevirtual #36                 // Method org/glassfish/jersey/internal/guava/Joiner.withKeyValueSeparator:()Lorg/glassfish/jersey/internal/guava/Joiner$MapJoiner;
       6: putstatic     #37                 // Field STANDARD_JOINER:Lorg/glassfish/jersey/internal/guava/Joiner$MapJoiner;
       9: return
}
