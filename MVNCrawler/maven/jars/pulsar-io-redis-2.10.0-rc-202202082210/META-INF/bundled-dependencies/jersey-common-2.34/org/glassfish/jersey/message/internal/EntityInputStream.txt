Compiled from "EntityInputStream.java"
public class org.glassfish.jersey.message.internal.EntityInputStream extends java.io.InputStream {
  private java.io.InputStream input;

  private boolean closed;

  public static org.glassfish.jersey.message.internal.EntityInputStream create(java.io.InputStream);
    Code:
       0: aload_0
       1: instanceof    #1                  // class org/glassfish/jersey/message/internal/EntityInputStream
       4: ifeq          12
       7: aload_0
       8: checkcast     #1                  // class org/glassfish/jersey/message/internal/EntityInputStream
      11: areturn
      12: new           #1                  // class org/glassfish/jersey/message/internal/EntityInputStream
      15: dup
      16: aload_0
      17: invokespecial #2                  // Method "<init>":(Ljava/io/InputStream;)V
      20: areturn

  public org.glassfish.jersey.message.internal.EntityInputStream(java.io.InputStream);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #4                  // Field closed:Z
       9: aload_0
      10: aload_1
      11: putfield      #5                  // Field input:Ljava/io/InputStream;
      14: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field input:Ljava/io/InputStream;
       4: invokevirtual #6                  // Method java/io/InputStream.read:()I
       7: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field input:Ljava/io/InputStream;
       4: aload_1
       5: invokevirtual #7                  // Method java/io/InputStream.read:([B)I
       8: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field input:Ljava/io/InputStream;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #8                  // Method java/io/InputStream.read:([BII)I
      10: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field input:Ljava/io/InputStream;
       4: lload_1
       5: invokevirtual #9                  // Method java/io/InputStream.skip:(J)J
       8: lreturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field input:Ljava/io/InputStream;
       4: invokevirtual #10                 // Method java/io/InputStream.available:()I
       7: ireturn

  public void mark(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field input:Ljava/io/InputStream;
       4: iload_1
       5: invokevirtual #11                 // Method java/io/InputStream.mark:(I)V
       8: return

  public boolean markSupported();
    Code:
       0: aload_0
       1: getfield      #5                  // Field input:Ljava/io/InputStream;
       4: invokevirtual #12                 // Method java/io/InputStream.markSupported:()Z
       7: ireturn

  public void reset();
    Code:
       0: aload_0
       1: getfield      #5                  // Field input:Ljava/io/InputStream;
       4: invokevirtual #13                 // Method java/io/InputStream.reset:()V
       7: goto          23
      10: astore_1
      11: new           #15                 // class javax/ws/rs/ProcessingException
      14: dup
      15: invokestatic  #16                 // Method org/glassfish/jersey/internal/LocalizationMessages.MESSAGE_CONTENT_BUFFER_RESET_FAILED:()Ljava/lang/String;
      18: aload_1
      19: invokespecial #17                 // Method javax/ws/rs/ProcessingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      22: athrow
      23: return
    Exception table:
       from    to  target type
           0     7    10   Class java/io/IOException

  public void close() throws javax.ws.rs.ProcessingException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field input:Ljava/io/InputStream;
       4: astore_1
       5: aload_1
       6: ifnonnull     10
       9: return
      10: aload_0
      11: getfield      #4                  // Field closed:Z
      14: ifne          50
      17: aload_1
      18: invokevirtual #18                 // Method java/io/InputStream.close:()V
      21: aload_0
      22: iconst_1
      23: putfield      #4                  // Field closed:Z
      26: goto          50
      29: astore_2
      30: new           #15                 // class javax/ws/rs/ProcessingException
      33: dup
      34: invokestatic  #19                 // Method org/glassfish/jersey/internal/LocalizationMessages.MESSAGE_CONTENT_INPUT_STREAM_CLOSE_FAILED:()Ljava/lang/String;
      37: aload_2
      38: invokespecial #17                 // Method javax/ws/rs/ProcessingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      41: athrow
      42: astore_3
      43: aload_0
      44: iconst_1
      45: putfield      #4                  // Field closed:Z
      48: aload_3
      49: athrow
      50: return
    Exception table:
       from    to  target type
          17    21    29   Class java/io/IOException
          17    21    42   any
          29    43    42   any

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method ensureNotClosed:()V
       4: aload_0
       5: getfield      #5                  // Field input:Ljava/io/InputStream;
       8: astore_1
       9: aload_1
      10: ifnonnull     15
      13: iconst_1
      14: ireturn
      15: aload_1
      16: invokevirtual #12                 // Method java/io/InputStream.markSupported:()Z
      19: ifeq          47
      22: aload_1
      23: iconst_1
      24: invokevirtual #11                 // Method java/io/InputStream.mark:(I)V
      27: aload_1
      28: invokevirtual #6                  // Method java/io/InputStream.read:()I
      31: istore_2
      32: aload_1
      33: invokevirtual #13                 // Method java/io/InputStream.reset:()V
      36: iload_2
      37: iconst_m1
      38: if_icmpne     45
      41: iconst_1
      42: goto          46
      45: iconst_0
      46: ireturn
      47: aload_1
      48: invokevirtual #10                 // Method java/io/InputStream.available:()I
      51: ifle          56
      54: iconst_0
      55: ireturn
      56: goto          60
      59: astore_2
      60: aload_1
      61: invokevirtual #6                  // Method java/io/InputStream.read:()I
      64: istore_2
      65: iload_2
      66: iconst_m1
      67: if_icmpne     72
      70: iconst_1
      71: ireturn
      72: aload_1
      73: instanceof    #21                 // class java/io/PushbackInputStream
      76: ifeq          87
      79: aload_1
      80: checkcast     #21                 // class java/io/PushbackInputStream
      83: astore_3
      84: goto          102
      87: new           #21                 // class java/io/PushbackInputStream
      90: dup
      91: aload_1
      92: iconst_1
      93: invokespecial #22                 // Method java/io/PushbackInputStream."<init>":(Ljava/io/InputStream;I)V
      96: astore_3
      97: aload_0
      98: aload_3
      99: putfield      #5                  // Field input:Ljava/io/InputStream;
     102: aload_3
     103: iload_2
     104: invokevirtual #23                 // Method java/io/PushbackInputStream.unread:(I)V
     107: iconst_0
     108: ireturn
     109: astore_2
     110: new           #15                 // class javax/ws/rs/ProcessingException
     113: dup
     114: aload_2
     115: invokespecial #24                 // Method javax/ws/rs/ProcessingException."<init>":(Ljava/lang/Throwable;)V
     118: athrow
    Exception table:
       from    to  target type
          47    55    59   Class java/io/IOException
          15    46   109   Class java/io/IOException
          47    55   109   Class java/io/IOException
          56    71   109   Class java/io/IOException
          72   108   109   Class java/io/IOException

  public void ensureNotClosed() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field closed:Z
       4: ifeq          18
       7: new           #25                 // class java/lang/IllegalStateException
      10: dup
      11: invokestatic  #26                 // Method org/glassfish/jersey/internal/LocalizationMessages.ERROR_ENTITY_STREAM_CLOSED:()Ljava/lang/String;
      14: invokespecial #27                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: return

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #4                  // Field closed:Z
       4: ireturn

  public final java.io.InputStream getWrappedStream();
    Code:
       0: aload_0
       1: getfield      #5                  // Field input:Ljava/io/InputStream;
       4: areturn

  public final void setWrappedStream(java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field input:Ljava/io/InputStream;
       5: return
}
