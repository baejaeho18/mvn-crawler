Compiled from "LoggingInterceptor.java"
class org.glassfish.jersey.logging.LoggingInterceptor$LoggingStream extends java.io.FilterOutputStream {
  private final java.lang.StringBuilder b;

  private final java.io.ByteArrayOutputStream baos;

  final org.glassfish.jersey.logging.LoggingInterceptor this$0;

  org.glassfish.jersey.logging.LoggingInterceptor$LoggingStream(org.glassfish.jersey.logging.LoggingInterceptor, java.lang.StringBuilder, java.io.OutputStream);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/glassfish/jersey/logging/LoggingInterceptor;
       5: aload_0
       6: aload_3
       7: invokespecial #2                  // Method java/io/FilterOutputStream."<init>":(Ljava/io/OutputStream;)V
      10: aload_0
      11: new           #3                  // class java/io/ByteArrayOutputStream
      14: dup
      15: invokespecial #4                  // Method java/io/ByteArrayOutputStream."<init>":()V
      18: putfield      #5                  // Field baos:Ljava/io/ByteArrayOutputStream;
      21: aload_0
      22: aload_2
      23: putfield      #6                  // Field b:Ljava/lang/StringBuilder;
      26: return

  java.lang.StringBuilder getStringBuilder(java.nio.charset.Charset);
    Code:
       0: aload_0
       1: getfield      #5                  // Field baos:Ljava/io/ByteArrayOutputStream;
       4: invokevirtual #7                  // Method java/io/ByteArrayOutputStream.toByteArray:()[B
       7: astore_2
       8: aload_0
       9: getfield      #6                  // Field b:Ljava/lang/StringBuilder;
      12: new           #8                  // class java/lang/String
      15: dup
      16: aload_2
      17: iconst_0
      18: aload_2
      19: arraylength
      20: aload_0
      21: getfield      #1                  // Field this$0:Lorg/glassfish/jersey/logging/LoggingInterceptor;
      24: getfield      #9                  // Field org/glassfish/jersey/logging/LoggingInterceptor.maxEntitySize:I
      27: invokestatic  #10                 // Method java/lang/Math.min:(II)I
      30: aload_1
      31: invokespecial #11                 // Method java/lang/String."<init>":([BIILjava/nio/charset/Charset;)V
      34: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: pop
      38: aload_2
      39: arraylength
      40: aload_0
      41: getfield      #1                  // Field this$0:Lorg/glassfish/jersey/logging/LoggingInterceptor;
      44: getfield      #9                  // Field org/glassfish/jersey/logging/LoggingInterceptor.maxEntitySize:I
      47: if_icmple     60
      50: aload_0
      51: getfield      #6                  // Field b:Ljava/lang/StringBuilder;
      54: ldc           #13                 // String ...more...
      56: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: pop
      60: aload_0
      61: getfield      #6                  // Field b:Ljava/lang/StringBuilder;
      64: bipush        10
      66: invokevirtual #14                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      69: pop
      70: aload_0
      71: getfield      #6                  // Field b:Ljava/lang/StringBuilder;
      74: areturn

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field baos:Ljava/io/ByteArrayOutputStream;
       4: invokevirtual #15                 // Method java/io/ByteArrayOutputStream.size:()I
       7: aload_0
       8: getfield      #1                  // Field this$0:Lorg/glassfish/jersey/logging/LoggingInterceptor;
      11: getfield      #9                  // Field org/glassfish/jersey/logging/LoggingInterceptor.maxEntitySize:I
      14: if_icmpgt     25
      17: aload_0
      18: getfield      #5                  // Field baos:Ljava/io/ByteArrayOutputStream;
      21: iload_1
      22: invokevirtual #16                 // Method java/io/ByteArrayOutputStream.write:(I)V
      25: aload_0
      26: getfield      #17                 // Field out:Ljava/io/OutputStream;
      29: iload_1
      30: invokevirtual #18                 // Method java/io/OutputStream.write:(I)V
      33: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_2
       1: iload_3
       2: ior
       3: aload_1
       4: arraylength
       5: iload_3
       6: iload_2
       7: iadd
       8: isub
       9: ior
      10: iload_2
      11: iload_3
      12: iadd
      13: ior
      14: ifge          25
      17: new           #19                 // class java/lang/IndexOutOfBoundsException
      20: dup
      21: invokespecial #20                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      24: athrow
      25: aload_0
      26: getfield      #5                  // Field baos:Ljava/io/ByteArrayOutputStream;
      29: invokevirtual #15                 // Method java/io/ByteArrayOutputStream.size:()I
      32: iload_3
      33: iadd
      34: aload_0
      35: getfield      #1                  // Field this$0:Lorg/glassfish/jersey/logging/LoggingInterceptor;
      38: getfield      #9                  // Field org/glassfish/jersey/logging/LoggingInterceptor.maxEntitySize:I
      41: if_icmpgt     54
      44: aload_0
      45: getfield      #5                  // Field baos:Ljava/io/ByteArrayOutputStream;
      48: aload_1
      49: iload_2
      50: iload_3
      51: invokevirtual #21                 // Method java/io/ByteArrayOutputStream.write:([BII)V
      54: aload_0
      55: getfield      #17                 // Field out:Ljava/io/OutputStream;
      58: aload_1
      59: iload_2
      60: iload_3
      61: invokevirtual #22                 // Method java/io/OutputStream.write:([BII)V
      64: return
}
