Compiled from "ImmutableCollectors.java"
public class org.glassfish.jersey.internal.util.collection.ImmutableCollectors {
  public org.glassfish.jersey.internal.util.collection.ImmutableCollectors();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <T> java.util.stream.Collector<T, java.util.List<T>, java.util.List<T>> toImmutableList();
    Code:
       0: invokedynamic #2,  0              // InvokeDynamic #0:get:()Ljava/util/function/Supplier;
       5: invokedynamic #3,  0              // InvokeDynamic #1:accept:()Ljava/util/function/BiConsumer;
      10: invokedynamic #4,  0              // InvokeDynamic #2:apply:()Ljava/util/function/BinaryOperator;
      15: invokedynamic #5,  0              // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      20: iconst_0
      21: anewarray     #6                  // class java/util/stream/Collector$Characteristics
      24: invokestatic  #7                  // InterfaceMethod java/util/stream/Collector.of:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;[Ljava/util/stream/Collector$Characteristics;)Ljava/util/stream/Collector;
      27: areturn

  public static <T> java.util.stream.Collector<T, java.util.Set<T>, java.util.Set<T>> toImmutableSet();
    Code:
       0: invokedynamic #8,  0              // InvokeDynamic #4:get:()Ljava/util/function/Supplier;
       5: invokedynamic #9,  0              // InvokeDynamic #5:accept:()Ljava/util/function/BiConsumer;
      10: invokedynamic #10,  0             // InvokeDynamic #6:apply:()Ljava/util/function/BinaryOperator;
      15: invokedynamic #11,  0             // InvokeDynamic #7:apply:()Ljava/util/function/Function;
      20: iconst_0
      21: anewarray     #6                  // class java/util/stream/Collector$Characteristics
      24: invokestatic  #7                  // InterfaceMethod java/util/stream/Collector.of:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;[Ljava/util/stream/Collector$Characteristics;)Ljava/util/stream/Collector;
      27: areturn

  public static <T> java.util.stream.Collector<T, java.util.Set<T>, java.util.Set<T>> toImmutableLinkedSet();
    Code:
       0: invokedynamic #12,  0             // InvokeDynamic #8:get:()Ljava/util/function/Supplier;
       5: invokedynamic #9,  0              // InvokeDynamic #5:accept:()Ljava/util/function/BiConsumer;
      10: invokedynamic #13,  0             // InvokeDynamic #9:apply:()Ljava/util/function/BinaryOperator;
      15: invokedynamic #11,  0             // InvokeDynamic #7:apply:()Ljava/util/function/Function;
      20: iconst_0
      21: anewarray     #6                  // class java/util/stream/Collector$Characteristics
      24: invokestatic  #7                  // InterfaceMethod java/util/stream/Collector.of:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;[Ljava/util/stream/Collector$Characteristics;)Ljava/util/stream/Collector;
      27: areturn

  private static java.util.Set lambda$toImmutableLinkedSet$2(java.util.Set, java.util.Set);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #14,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
       7: pop
       8: aload_0
       9: areturn

  private static java.util.Set lambda$toImmutableSet$1(java.util.Set, java.util.Set);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #14,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
       7: pop
       8: aload_0
       9: areturn

  private static java.util.List lambda$toImmutableList$0(java.util.List, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #15,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
       7: pop
       8: aload_0
       9: areturn
}
