Compiled from "DataStructures.java"
public final class org.glassfish.jersey.internal.util.collection.DataStructures {
  public static final int DEFAULT_CONCURENCY_LEVEL;

  public org.glassfish.jersey.internal.util.collection.DataStructures();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  private static int ceilingNextPowerOfTwo(int);
    Code:
       0: iconst_1
       1: bipush        32
       3: iload_0
       4: iconst_1
       5: isub
       6: invokestatic  #3                  // Method java/lang/Integer.numberOfLeadingZeros:(I)I
       9: isub
      10: ishl
      11: ireturn

  public static <E> java.util.concurrent.BlockingQueue<E> createLinkedTransferQueue();
    Code:
       0: new           #4                  // class java/util/concurrent/LinkedTransferQueue
       3: dup
       4: invokespecial #5                  // Method java/util/concurrent/LinkedTransferQueue."<init>":()V
       7: areturn

  public static <K, V> java.util.concurrent.ConcurrentMap<K, V> createConcurrentMap();
    Code:
       0: new           #6                  // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: invokespecial #7                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       7: areturn

  public static <K, V> java.util.concurrent.ConcurrentMap<K, V> createConcurrentMap(java.util.Map<? extends K, ? extends V>);
    Code:
       0: new           #6                  // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: aload_0
       5: invokespecial #8                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(Ljava/util/Map;)V
       8: areturn

  public static <K, V> java.util.concurrent.ConcurrentMap<K, V> createConcurrentMap(int);
    Code:
       0: new           #6                  // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: iload_0
       5: invokespecial #9                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
       8: areturn

  public static <K, V> java.util.concurrent.ConcurrentMap<K, V> createConcurrentMap(int, float, int);
    Code:
       0: new           #6                  // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: iload_0
       5: fload_1
       6: iload_2
       7: invokespecial #10                 // Method java/util/concurrent/ConcurrentHashMap."<init>":(IFI)V
      10: areturn

  static {};
    Code:
       0: invokestatic  #11                 // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
       3: invokevirtual #12                 // Method java/lang/Runtime.availableProcessors:()I
       6: invokestatic  #13                 // Method ceilingNextPowerOfTwo:(I)I
       9: putstatic     #14                 // Field DEFAULT_CONCURENCY_LEVEL:I
      12: return
}
