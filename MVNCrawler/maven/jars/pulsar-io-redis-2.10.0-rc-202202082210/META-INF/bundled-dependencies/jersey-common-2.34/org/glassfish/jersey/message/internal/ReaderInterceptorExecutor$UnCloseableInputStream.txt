Compiled from "ReaderInterceptorExecutor.java"
class org.glassfish.jersey.message.internal.ReaderInterceptorExecutor$UnCloseableInputStream extends java.io.InputStream {
  private final java.io.InputStream original;

  private final javax.ws.rs.ext.MessageBodyReader reader;

  private org.glassfish.jersey.message.internal.ReaderInterceptorExecutor$UnCloseableInputStream(java.io.InputStream, javax.ws.rs.ext.MessageBodyReader);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field original:Ljava/io/InputStream;
       9: aload_0
      10: aload_2
      11: putfield      #5                  // Field reader:Ljavax/ws/rs/ext/MessageBodyReader;
      14: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field original:Ljava/io/InputStream;
       4: invokevirtual #6                  // Method java/io/InputStream.read:()I
       7: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field original:Ljava/io/InputStream;
       4: aload_1
       5: invokevirtual #7                  // Method java/io/InputStream.read:([B)I
       8: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field original:Ljava/io/InputStream;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #8                  // Method java/io/InputStream.read:([BII)I
      10: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field original:Ljava/io/InputStream;
       4: lload_1
       5: invokevirtual #9                  // Method java/io/InputStream.skip:(J)J
       8: lreturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field original:Ljava/io/InputStream;
       4: invokevirtual #10                 // Method java/io/InputStream.available:()I
       7: ireturn

  public synchronized void mark(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field original:Ljava/io/InputStream;
       4: iload_1
       5: invokevirtual #11                 // Method java/io/InputStream.mark:(I)V
       8: return

  public synchronized void reset() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field original:Ljava/io/InputStream;
       4: invokevirtual #12                 // Method java/io/InputStream.reset:()V
       7: return

  public boolean markSupported();
    Code:
       0: aload_0
       1: getfield      #4                  // Field original:Ljava/io/InputStream;
       4: invokevirtual #13                 // Method java/io/InputStream.markSupported:()Z
       7: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: invokestatic  #14                 // Method org/glassfish/jersey/message/internal/ReaderInterceptorExecutor.access$300:()Ljava/util/logging/Logger;
       3: getstatic     #15                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
       6: invokevirtual #16                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
       9: ifeq          31
      12: invokestatic  #14                 // Method org/glassfish/jersey/message/internal/ReaderInterceptorExecutor.access$300:()Ljava/util/logging/Logger;
      15: getstatic     #15                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      18: aload_0
      19: getfield      #5                  // Field reader:Ljavax/ws/rs/ext/MessageBodyReader;
      22: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      25: invokestatic  #18                 // Method org/glassfish/jersey/internal/LocalizationMessages.MBR_TRYING_TO_CLOSE_STREAM:(Ljava/lang/Object;)Ljava/lang/String;
      28: invokevirtual #19                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
      31: return

  private java.io.InputStream unwrap();
    Code:
       0: aload_0
       1: getfield      #4                  // Field original:Ljava/io/InputStream;
       4: areturn

  org.glassfish.jersey.message.internal.ReaderInterceptorExecutor$UnCloseableInputStream(java.io.InputStream, javax.ws.rs.ext.MessageBodyReader, org.glassfish.jersey.message.internal.ReaderInterceptorExecutor$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method "<init>":(Ljava/io/InputStream;Ljavax/ws/rs/ext/MessageBodyReader;)V
       6: return

  static java.io.InputStream access$600(org.glassfish.jersey.message.internal.ReaderInterceptorExecutor$UnCloseableInputStream);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method unwrap:()Ljava/io/InputStream;
       4: areturn
}
