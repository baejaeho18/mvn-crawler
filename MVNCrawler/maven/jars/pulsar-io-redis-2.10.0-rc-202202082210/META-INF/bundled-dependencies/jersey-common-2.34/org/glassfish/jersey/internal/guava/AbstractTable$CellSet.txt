Compiled from "AbstractTable.java"
class org.glassfish.jersey.internal.guava.AbstractTable$CellSet extends java.util.AbstractSet<org.glassfish.jersey.internal.guava.Table$Cell<R, C, V>> {
  final org.glassfish.jersey.internal.guava.AbstractTable this$0;

  private org.glassfish.jersey.internal.guava.AbstractTable$CellSet(org.glassfish.jersey.internal.guava.AbstractTable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/glassfish/jersey/internal/guava/AbstractTable;
       5: aload_0
       6: invokespecial #3                  // Method java/util/AbstractSet."<init>":()V
       9: return

  public boolean contains(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #4                  // class org/glassfish/jersey/internal/guava/Table$Cell
       4: ifeq          69
       7: aload_1
       8: checkcast     #4                  // class org/glassfish/jersey/internal/guava/Table$Cell
      11: astore_2
      12: aload_0
      13: getfield      #2                  // Field this$0:Lorg/glassfish/jersey/internal/guava/AbstractTable;
      16: invokevirtual #5                  // Method org/glassfish/jersey/internal/guava/AbstractTable.rowMap:()Ljava/util/Map;
      19: aload_2
      20: invokeinterface #6,  1            // InterfaceMethod org/glassfish/jersey/internal/guava/Table$Cell.getRowKey:()Ljava/lang/Object;
      25: invokestatic  #7                  // Method org/glassfish/jersey/internal/guava/Maps.safeGet:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #8                  // class java/util/Map
      31: astore_3
      32: aload_3
      33: ifnull        67
      36: aload_3
      37: invokeinterface #9,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      42: aload_2
      43: invokeinterface #10,  1           // InterfaceMethod org/glassfish/jersey/internal/guava/Table$Cell.getColumnKey:()Ljava/lang/Object;
      48: aload_2
      49: invokeinterface #11,  1           // InterfaceMethod org/glassfish/jersey/internal/guava/Table$Cell.getValue:()Ljava/lang/Object;
      54: invokestatic  #12                 // Method org/glassfish/jersey/internal/guava/Maps.immutableEntry:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;
      57: invokestatic  #13                 // Method org/glassfish/jersey/internal/guava/Collections2.safeContains:(Ljava/util/Collection;Ljava/lang/Object;)Z
      60: ifeq          67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: ireturn
      69: iconst_0
      70: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #4                  // class org/glassfish/jersey/internal/guava/Table$Cell
       4: ifeq          69
       7: aload_1
       8: checkcast     #4                  // class org/glassfish/jersey/internal/guava/Table$Cell
      11: astore_2
      12: aload_0
      13: getfield      #2                  // Field this$0:Lorg/glassfish/jersey/internal/guava/AbstractTable;
      16: invokevirtual #5                  // Method org/glassfish/jersey/internal/guava/AbstractTable.rowMap:()Ljava/util/Map;
      19: aload_2
      20: invokeinterface #6,  1            // InterfaceMethod org/glassfish/jersey/internal/guava/Table$Cell.getRowKey:()Ljava/lang/Object;
      25: invokestatic  #7                  // Method org/glassfish/jersey/internal/guava/Maps.safeGet:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #8                  // class java/util/Map
      31: astore_3
      32: aload_3
      33: ifnull        67
      36: aload_3
      37: invokeinterface #9,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      42: aload_2
      43: invokeinterface #10,  1           // InterfaceMethod org/glassfish/jersey/internal/guava/Table$Cell.getColumnKey:()Ljava/lang/Object;
      48: aload_2
      49: invokeinterface #11,  1           // InterfaceMethod org/glassfish/jersey/internal/guava/Table$Cell.getValue:()Ljava/lang/Object;
      54: invokestatic  #12                 // Method org/glassfish/jersey/internal/guava/Maps.immutableEntry:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;
      57: invokestatic  #14                 // Method org/glassfish/jersey/internal/guava/Collections2.safeRemove:(Ljava/util/Collection;Ljava/lang/Object;)Z
      60: ifeq          67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: ireturn
      69: iconst_0
      70: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/glassfish/jersey/internal/guava/AbstractTable;
       4: invokevirtual #15                 // Method org/glassfish/jersey/internal/guava/AbstractTable.clear:()V
       7: return

  public java.util.Iterator<org.glassfish.jersey.internal.guava.Table$Cell<R, C, V>> iterator();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/glassfish/jersey/internal/guava/AbstractTable;
       4: invokevirtual #16                 // Method org/glassfish/jersey/internal/guava/AbstractTable.cellIterator:()Ljava/util/Iterator;
       7: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/glassfish/jersey/internal/guava/AbstractTable;
       4: invokevirtual #17                 // Method org/glassfish/jersey/internal/guava/AbstractTable.size:()I
       7: ireturn

  org.glassfish.jersey.internal.guava.AbstractTable$CellSet(org.glassfish.jersey.internal.guava.AbstractTable, org.glassfish.jersey.internal.guava.AbstractTable$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/glassfish/jersey/internal/guava/AbstractTable;)V
       5: return
}
