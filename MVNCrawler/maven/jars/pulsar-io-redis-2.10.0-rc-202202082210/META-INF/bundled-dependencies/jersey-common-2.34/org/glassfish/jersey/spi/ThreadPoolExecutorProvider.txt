Compiled from "ThreadPoolExecutorProvider.java"
public class org.glassfish.jersey.spi.ThreadPoolExecutorProvider extends org.glassfish.jersey.spi.AbstractThreadPoolProvider<java.util.concurrent.ThreadPoolExecutor> implements org.glassfish.jersey.spi.ExecutorServiceProvider {
  private static final long CACHED_POOL_KEEP_ALIVE_DEFAULT_TIMEOUT;

  public org.glassfish.jersey.spi.ThreadPoolExecutorProvider(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/glassfish/jersey/spi/AbstractThreadPoolProvider."<init>":(Ljava/lang/String;)V
       5: return

  public java.util.concurrent.ExecutorService getExecutorService();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/glassfish/jersey/spi/AbstractThreadPoolProvider.getExecutor:()Ljava/util/concurrent/ThreadPoolExecutor;
       4: areturn

  protected final java.util.concurrent.ThreadPoolExecutor createExecutor(int, java.util.concurrent.ThreadFactory, java.util.concurrent.RejectedExecutionHandler);
    Code:
       0: aload_0
       1: iload_1
       2: aload_0
       3: invokevirtual #3                  // Method getMaximumPoolSize:()I
       6: aload_0
       7: invokevirtual #4                  // Method getKeepAliveTime:()J
      10: aload_0
      11: invokevirtual #5                  // Method getWorkQueue:()Ljava/util/concurrent/BlockingQueue;
      14: aload_2
      15: aload_3
      16: invokevirtual #6                  // Method createExecutor:(IIJLjava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)Ljava/util/concurrent/ThreadPoolExecutor;
      19: areturn

  protected java.util.concurrent.ThreadPoolExecutor createExecutor(int, int, long, java.util.concurrent.BlockingQueue<java.lang.Runnable>, java.util.concurrent.ThreadFactory, java.util.concurrent.RejectedExecutionHandler);
    Code:
       0: new           #7                  // class java/util/concurrent/ThreadPoolExecutor
       3: dup
       4: iload_1
       5: iload_2
       6: lload_3
       7: getstatic     #8                  // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      10: aload         5
      12: aload         6
      14: aload         7
      16: invokespecial #9                  // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)V
      19: areturn

  protected int getMaximumPoolSize();
    Code:
       0: ldc           #11                 // int 2147483647
       2: ireturn

  protected long getKeepAliveTime();
    Code:
       0: ldc2_w        #13                 // long 60l
       3: lreturn

  protected java.util.concurrent.BlockingQueue<java.lang.Runnable> getWorkQueue();
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getMaximumPoolSize:()I
       4: ldc           #11                 // int 2147483647
       6: if_icmpne     19
       9: new           #15                 // class java/util/concurrent/SynchronousQueue
      12: dup
      13: invokespecial #16                 // Method java/util/concurrent/SynchronousQueue."<init>":()V
      16: goto          26
      19: new           #17                 // class java/util/concurrent/LinkedBlockingQueue
      22: dup
      23: invokespecial #18                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":()V
      26: areturn

  public void dispose(java.util.concurrent.ExecutorService);
    Code:
       0: return

  public void preDestroy();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method close:()V
       4: return
}
