Compiled from "JerseyPublisher.java"
public class org.glassfish.jersey.internal.util.JerseyPublisher<T> implements org.glassfish.jersey.internal.jsr166.Flow$Publisher<T> {
  private static final int DEFAULT_BUFFER_CAPACITY;

  private org.glassfish.jersey.internal.jsr166.SubmittableFlowPublisher<T> submissionPublisher;

  private final org.glassfish.jersey.internal.util.JerseyPublisher$PublisherStrategy strategy;

  public org.glassfish.jersey.internal.util.JerseyPublisher();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method java/util/concurrent/ForkJoinPool.commonPool:()Ljava/util/concurrent/ForkJoinPool;
       4: sipush        256
       7: getstatic     #3                  // Field org/glassfish/jersey/internal/util/JerseyPublisher$PublisherStrategy.BEST_EFFORT:Lorg/glassfish/jersey/internal/util/JerseyPublisher$PublisherStrategy;
      10: invokespecial #4                  // Method "<init>":(Ljava/util/concurrent/Executor;ILorg/glassfish/jersey/internal/util/JerseyPublisher$PublisherStrategy;)V
      13: return

  public org.glassfish.jersey.internal.util.JerseyPublisher(org.glassfish.jersey.internal.util.JerseyPublisher$PublisherStrategy);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method java/util/concurrent/ForkJoinPool.commonPool:()Ljava/util/concurrent/ForkJoinPool;
       4: sipush        256
       7: aload_1
       8: invokespecial #4                  // Method "<init>":(Ljava/util/concurrent/Executor;ILorg/glassfish/jersey/internal/util/JerseyPublisher$PublisherStrategy;)V
      11: return

  public org.glassfish.jersey.internal.util.JerseyPublisher(java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #3                  // Field org/glassfish/jersey/internal/util/JerseyPublisher$PublisherStrategy.BEST_EFFORT:Lorg/glassfish/jersey/internal/util/JerseyPublisher$PublisherStrategy;
       5: invokespecial #5                  // Method "<init>":(Ljava/util/concurrent/Executor;Lorg/glassfish/jersey/internal/util/JerseyPublisher$PublisherStrategy;)V
       8: return

  public org.glassfish.jersey.internal.util.JerseyPublisher(java.util.concurrent.Executor, org.glassfish.jersey.internal.util.JerseyPublisher$PublisherStrategy);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #7                  // Method org/glassfish/jersey/internal/jsr166/SubmissionPublisherFactory.createSubmissionPublisher:()Lorg/glassfish/jersey/internal/jsr166/SubmittableFlowPublisher;
       8: putfield      #8                  // Field submissionPublisher:Lorg/glassfish/jersey/internal/jsr166/SubmittableFlowPublisher;
      11: aload_0
      12: aload_2
      13: putfield      #9                  // Field strategy:Lorg/glassfish/jersey/internal/util/JerseyPublisher$PublisherStrategy;
      16: aload_0
      17: aload_1
      18: sipush        256
      21: invokestatic  #10                 // Method org/glassfish/jersey/internal/jsr166/SubmissionPublisherFactory.createSubmissionPublisher:(Ljava/util/concurrent/Executor;I)Lorg/glassfish/jersey/internal/jsr166/SubmittableFlowPublisher;
      24: putfield      #8                  // Field submissionPublisher:Lorg/glassfish/jersey/internal/jsr166/SubmittableFlowPublisher;
      27: return

  public org.glassfish.jersey.internal.util.JerseyPublisher(int);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method java/util/concurrent/ForkJoinPool.commonPool:()Ljava/util/concurrent/ForkJoinPool;
       4: iload_1
       5: getstatic     #3                  // Field org/glassfish/jersey/internal/util/JerseyPublisher$PublisherStrategy.BEST_EFFORT:Lorg/glassfish/jersey/internal/util/JerseyPublisher$PublisherStrategy;
       8: invokespecial #4                  // Method "<init>":(Ljava/util/concurrent/Executor;ILorg/glassfish/jersey/internal/util/JerseyPublisher$PublisherStrategy;)V
      11: return

  public org.glassfish.jersey.internal.util.JerseyPublisher(java.util.concurrent.Executor, int, org.glassfish.jersey.internal.util.JerseyPublisher$PublisherStrategy);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #7                  // Method org/glassfish/jersey/internal/jsr166/SubmissionPublisherFactory.createSubmissionPublisher:()Lorg/glassfish/jersey/internal/jsr166/SubmittableFlowPublisher;
       8: putfield      #8                  // Field submissionPublisher:Lorg/glassfish/jersey/internal/jsr166/SubmittableFlowPublisher;
      11: aload_0
      12: aload_3
      13: putfield      #9                  // Field strategy:Lorg/glassfish/jersey/internal/util/JerseyPublisher$PublisherStrategy;
      16: aload_0
      17: aload_1
      18: iload_2
      19: invokestatic  #10                 // Method org/glassfish/jersey/internal/jsr166/SubmissionPublisherFactory.createSubmissionPublisher:(Ljava/util/concurrent/Executor;I)Lorg/glassfish/jersey/internal/jsr166/SubmittableFlowPublisher;
      22: putfield      #8                  // Field submissionPublisher:Lorg/glassfish/jersey/internal/jsr166/SubmittableFlowPublisher;
      25: return

  public void subscribe(org.glassfish.jersey.internal.jsr166.Flow$Subscriber<? super T>);
    Code:
       0: aload_0
       1: getfield      #8                  // Field submissionPublisher:Lorg/glassfish/jersey/internal/jsr166/SubmittableFlowPublisher;
       4: new           #11                 // class org/glassfish/jersey/internal/util/JerseyPublisher$SubscriberWrapper
       7: dup
       8: aload_1
       9: invokespecial #12                 // Method org/glassfish/jersey/internal/util/JerseyPublisher$SubscriberWrapper."<init>":(Lorg/glassfish/jersey/internal/jsr166/Flow$Subscriber;)V
      12: invokeinterface #13,  2           // InterfaceMethod org/glassfish/jersey/internal/jsr166/SubmittableFlowPublisher.subscribe:(Lorg/glassfish/jersey/internal/jsr166/Flow$Subscriber;)V
      17: return

  private int submit(T);
    Code:
       0: aload_0
       1: getfield      #8                  // Field submissionPublisher:Lorg/glassfish/jersey/internal/jsr166/SubmittableFlowPublisher;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod org/glassfish/jersey/internal/jsr166/SubmittableFlowPublisher.submit:(Ljava/lang/Object;)I
      10: ireturn

  public java.util.concurrent.CompletableFuture<java.lang.Void> consume(java.util.function.Consumer<? super T>);
    Code:
       0: aload_0
       1: getfield      #8                  // Field submissionPublisher:Lorg/glassfish/jersey/internal/jsr166/SubmittableFlowPublisher;
       4: aload_1
       5: invokeinterface #15,  2           // InterfaceMethod org/glassfish/jersey/internal/jsr166/SubmittableFlowPublisher.consume:(Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;
      10: areturn

  private int offer(T, java.util.function.BiPredicate<org.glassfish.jersey.internal.jsr166.Flow$Subscriber<? super T>, ? super T>);
    Code:
       0: aload_0
       1: aload_1
       2: lconst_0
       3: getstatic     #16                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       6: aload_2
       7: invokespecial #17                 // Method offer:(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;Ljava/util/function/BiPredicate;)I
      10: ireturn

  private int offer(T, long, java.util.concurrent.TimeUnit, java.util.function.BiPredicate<org.glassfish.jersey.internal.jsr166.Flow$Subscriber<? super T>, ? super T>);
    Code:
       0: aload         5
       2: ifnonnull     14
       5: aload_0
       6: invokedynamic #18,  0             // InvokeDynamic #0:test:(Lorg/glassfish/jersey/internal/util/JerseyPublisher;)Ljava/util/function/BiPredicate;
      11: goto          22
      14: aload_0
      15: aload         5
      17: invokedynamic #19,  0             // InvokeDynamic #1:test:(Lorg/glassfish/jersey/internal/util/JerseyPublisher;Ljava/util/function/BiPredicate;)Ljava/util/function/BiPredicate;
      22: astore        6
      24: aload_0
      25: getfield      #8                  // Field submissionPublisher:Lorg/glassfish/jersey/internal/jsr166/SubmittableFlowPublisher;
      28: aload_1
      29: lload_2
      30: aload         4
      32: aload         6
      34: invokeinterface #20,  6           // InterfaceMethod org/glassfish/jersey/internal/jsr166/SubmittableFlowPublisher.offer:(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;Ljava/util/function/BiPredicate;)I
      39: ireturn

  private boolean onDrop(org.glassfish.jersey.internal.jsr166.Flow$Subscriber<? super T>, T);
    Code:
       0: aload_1
       1: new           #21                 // class java/lang/IllegalStateException
       4: dup
       5: aload_2
       6: invokestatic  #22                 // Method org/glassfish/jersey/internal/LocalizationMessages.SLOW_SUBSCRIBER:(Ljava/lang/Object;)Ljava/lang/String;
       9: invokespecial #23                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      12: invokeinterface #24,  2           // InterfaceMethod org/glassfish/jersey/internal/jsr166/Flow$Subscriber.onError:(Ljava/lang/Throwable;)V
      17: aload_0
      18: aload_1
      19: invokespecial #25                 // Method getSubscriberWrapper:(Lorg/glassfish/jersey/internal/jsr166/Flow$Subscriber;)Lorg/glassfish/jersey/internal/util/JerseyPublisher$SubscriberWrapper;
      22: invokevirtual #26                 // Method org/glassfish/jersey/internal/util/JerseyPublisher$SubscriberWrapper.getSubscription:()Lorg/glassfish/jersey/internal/jsr166/Flow$Subscription;
      25: invokeinterface #27,  1           // InterfaceMethod org/glassfish/jersey/internal/jsr166/Flow$Subscription.cancel:()V
      30: iconst_0
      31: ireturn

  private org.glassfish.jersey.internal.util.JerseyPublisher$SubscriberWrapper getSubscriberWrapper(org.glassfish.jersey.internal.jsr166.Flow$Subscriber);
    Code:
       0: aload_1
       1: instanceof    #11                 // class org/glassfish/jersey/internal/util/JerseyPublisher$SubscriberWrapper
       4: ifeq          12
       7: aload_1
       8: checkcast     #11                 // class org/glassfish/jersey/internal/util/JerseyPublisher$SubscriberWrapper
      11: areturn
      12: new           #28                 // class java/lang/IllegalArgumentException
      15: dup
      16: invokestatic  #29                 // Method org/glassfish/jersey/internal/LocalizationMessages.UNKNOWN_SUBSCRIBER:()Ljava/lang/String;
      19: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: athrow

  public int publish(T);
    Code:
       0: getstatic     #31                 // Field org/glassfish/jersey/internal/util/JerseyPublisher$PublisherStrategy.BLOCKING:Lorg/glassfish/jersey/internal/util/JerseyPublisher$PublisherStrategy;
       3: aload_0
       4: getfield      #9                  // Field strategy:Lorg/glassfish/jersey/internal/util/JerseyPublisher$PublisherStrategy;
       7: if_acmpne     16
      10: aload_0
      11: aload_1
      12: invokespecial #32                 // Method submit:(Ljava/lang/Object;)I
      15: ireturn
      16: aload_0
      17: getfield      #8                  // Field submissionPublisher:Lorg/glassfish/jersey/internal/jsr166/SubmittableFlowPublisher;
      20: aload_1
      21: aload_0
      22: invokedynamic #18,  0             // InvokeDynamic #0:test:(Lorg/glassfish/jersey/internal/util/JerseyPublisher;)Ljava/util/function/BiPredicate;
      27: invokeinterface #33,  3           // InterfaceMethod org/glassfish/jersey/internal/jsr166/SubmittableFlowPublisher.offer:(Ljava/lang/Object;Ljava/util/function/BiPredicate;)I
      32: ireturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #8                  // Field submissionPublisher:Lorg/glassfish/jersey/internal/jsr166/SubmittableFlowPublisher;
       4: invokeinterface #34,  1           // InterfaceMethod org/glassfish/jersey/internal/jsr166/SubmittableFlowPublisher.close:()V
       9: return

  public void closeExceptionally(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #8                  // Field submissionPublisher:Lorg/glassfish/jersey/internal/jsr166/SubmittableFlowPublisher;
       4: aload_1
       5: invokeinterface #35,  2           // InterfaceMethod org/glassfish/jersey/internal/jsr166/SubmittableFlowPublisher.closeExceptionally:(Ljava/lang/Throwable;)V
      10: return

  public int estimateMaximumLag();
    Code:
       0: aload_0
       1: getfield      #8                  // Field submissionPublisher:Lorg/glassfish/jersey/internal/jsr166/SubmittableFlowPublisher;
       4: invokeinterface #36,  1           // InterfaceMethod org/glassfish/jersey/internal/jsr166/SubmittableFlowPublisher.estimateMaximumLag:()I
       9: ireturn

  public long estimateMinimumDemand();
    Code:
       0: aload_0
       1: getfield      #8                  // Field submissionPublisher:Lorg/glassfish/jersey/internal/jsr166/SubmittableFlowPublisher;
       4: invokeinterface #37,  1           // InterfaceMethod org/glassfish/jersey/internal/jsr166/SubmittableFlowPublisher.estimateMinimumDemand:()J
       9: lreturn

  public java.lang.Throwable getClosedException();
    Code:
       0: aload_0
       1: getfield      #8                  // Field submissionPublisher:Lorg/glassfish/jersey/internal/jsr166/SubmittableFlowPublisher;
       4: invokeinterface #38,  1           // InterfaceMethod org/glassfish/jersey/internal/jsr166/SubmittableFlowPublisher.getClosedException:()Ljava/lang/Throwable;
       9: areturn

  public int getMaxBufferCapacity();
    Code:
       0: aload_0
       1: getfield      #8                  // Field submissionPublisher:Lorg/glassfish/jersey/internal/jsr166/SubmittableFlowPublisher;
       4: invokeinterface #39,  1           // InterfaceMethod org/glassfish/jersey/internal/jsr166/SubmittableFlowPublisher.getMaxBufferCapacity:()I
       9: ireturn

  private boolean lambda$offer$0(java.util.function.BiPredicate, org.glassfish.jersey.internal.jsr166.Flow$Subscriber, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokespecial #25                 // Method getSubscriberWrapper:(Lorg/glassfish/jersey/internal/jsr166/Flow$Subscriber;)Lorg/glassfish/jersey/internal/util/JerseyPublisher$SubscriberWrapper;
       6: invokevirtual #40                 // Method org/glassfish/jersey/internal/util/JerseyPublisher$SubscriberWrapper.getWrappedSubscriber:()Lorg/glassfish/jersey/internal/jsr166/Flow$Subscriber;
       9: aload_3
      10: invokeinterface #41,  3           // InterfaceMethod java/util/function/BiPredicate.test:(Ljava/lang/Object;Ljava/lang/Object;)Z
      15: pop
      16: iconst_0
      17: ireturn
}
