Compiled from "Cache.java"
public class org.glassfish.jersey.internal.util.collection.Cache<K, V> implements java.util.function.Function<K, V> {
  private static final org.glassfish.jersey.internal.util.collection.Cache$CycleHandler<java.lang.Object> EMPTY_HANDLER;

  private final org.glassfish.jersey.internal.util.collection.Cache$CycleHandler<K> cycleHandler;

  private final java.util.concurrent.ConcurrentHashMap<K, org.glassfish.jersey.internal.util.collection.Cache<K, V>.OriginThreadAwareFuture> cache;

  private final java.util.function.Function<K, V> computable;

  public org.glassfish.jersey.internal.util.collection.Cache(java.util.function.Function<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #2                  // Field EMPTY_HANDLER:Lorg/glassfish/jersey/internal/util/collection/Cache$CycleHandler;
       5: invokespecial #3                  // Method "<init>":(Ljava/util/function/Function;Lorg/glassfish/jersey/internal/util/collection/Cache$CycleHandler;)V
       8: return

  public org.glassfish.jersey.internal.util.collection.Cache(java.util.function.Function<K, V>, org.glassfish.jersey.internal.util.collection.Cache$CycleHandler<K>);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #6                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #7                  // Field cache:Ljava/util/concurrent/ConcurrentHashMap;
      15: aload_0
      16: aload_1
      17: putfield      #1                  // Field computable:Ljava/util/function/Function;
      20: aload_0
      21: aload_2
      22: putfield      #8                  // Field cycleHandler:Lorg/glassfish/jersey/internal/util/collection/Cache$CycleHandler;
      25: return

  public V apply(K);
    Code:
       0: aload_0
       1: getfield      #7                  // Field cache:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #9                  // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #10                 // class org/glassfish/jersey/internal/util/collection/Cache$OriginThreadAwareFuture
      11: astore_2
      12: aload_2
      13: ifnonnull     52
      16: new           #10                 // class org/glassfish/jersey/internal/util/collection/Cache$OriginThreadAwareFuture
      19: dup
      20: aload_0
      21: aload_1
      22: invokespecial #11                 // Method org/glassfish/jersey/internal/util/collection/Cache$OriginThreadAwareFuture."<init>":(Lorg/glassfish/jersey/internal/util/collection/Cache;Ljava/lang/Object;)V
      25: astore_3
      26: aload_0
      27: getfield      #7                  // Field cache:Ljava/util/concurrent/ConcurrentHashMap;
      30: aload_1
      31: aload_3
      32: invokevirtual #12                 // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #10                 // class org/glassfish/jersey/internal/util/collection/Cache$OriginThreadAwareFuture
      38: astore_2
      39: aload_2
      40: ifnonnull     49
      43: aload_3
      44: astore_2
      45: aload_3
      46: invokevirtual #13                 // Method org/glassfish/jersey/internal/util/collection/Cache$OriginThreadAwareFuture.run:()V
      49: goto          89
      52: aload_2
      53: invokestatic  #14                 // Method org/glassfish/jersey/internal/util/collection/Cache$OriginThreadAwareFuture.access$000:(Lorg/glassfish/jersey/internal/util/collection/Cache$OriginThreadAwareFuture;)J
      56: lstore_3
      57: lload_3
      58: ldc2_w        #15                 // long -1l
      61: lcmp
      62: ifeq          89
      65: invokestatic  #17                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      68: invokevirtual #18                 // Method java/lang/Thread.getId:()J
      71: aload_2
      72: invokestatic  #14                 // Method org/glassfish/jersey/internal/util/collection/Cache$OriginThreadAwareFuture.access$000:(Lorg/glassfish/jersey/internal/util/collection/Cache$OriginThreadAwareFuture;)J
      75: lcmp
      76: ifne          89
      79: aload_0
      80: getfield      #8                  // Field cycleHandler:Lorg/glassfish/jersey/internal/util/collection/Cache$CycleHandler;
      83: aload_1
      84: invokeinterface #19,  2           // InterfaceMethod org/glassfish/jersey/internal/util/collection/Cache$CycleHandler.handleCycle:(Ljava/lang/Object;)V
      89: aload_2
      90: invokevirtual #20                 // Method org/glassfish/jersey/internal/util/collection/Cache$OriginThreadAwareFuture.get:()Ljava/lang/Object;
      93: areturn
      94: astore_3
      95: new           #22                 // class java/lang/RuntimeException
      98: dup
      99: aload_3
     100: invokespecial #23                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     103: athrow
     104: astore_3
     105: aload_0
     106: getfield      #7                  // Field cache:Ljava/util/concurrent/ConcurrentHashMap;
     109: aload_1
     110: invokevirtual #25                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     113: pop
     114: aload_3
     115: invokevirtual #26                 // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
     118: astore        4
     120: aload         4
     122: ifnonnull     134
     125: new           #22                 // class java/lang/RuntimeException
     128: dup
     129: aload_3
     130: invokespecial #23                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     133: athrow
     134: aload         4
     136: instanceof    #22                 // class java/lang/RuntimeException
     139: ifeq          148
     142: aload         4
     144: checkcast     #22                 // class java/lang/RuntimeException
     147: athrow
     148: new           #22                 // class java/lang/RuntimeException
     151: dup
     152: aload         4
     154: invokespecial #23                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     157: athrow
    Exception table:
       from    to  target type
          89    93    94   Class java/lang/InterruptedException
          89    93   104   Class java/util/concurrent/ExecutionException

  public void clear();
    Code:
       0: aload_0
       1: getfield      #7                  // Field cache:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #27                 // Method java/util/concurrent/ConcurrentHashMap.clear:()V
       7: return

  public boolean containsKey(K);
    Code:
       0: aload_0
       1: getfield      #7                  // Field cache:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #28                 // Method java/util/concurrent/ConcurrentHashMap.containsKey:(Ljava/lang/Object;)Z
       8: ireturn

  public void remove(K);
    Code:
       0: aload_0
       1: getfield      #7                  // Field cache:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #25                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
       8: pop
       9: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #7                  // Field cache:Ljava/util/concurrent/ConcurrentHashMap;
       4: invokevirtual #29                 // Method java/util/concurrent/ConcurrentHashMap.size:()I
       7: ireturn

  private static void lambda$static$0(java.lang.Object);
    Code:
       0: return

  static java.util.function.Function access$100(org.glassfish.jersey.internal.util.collection.Cache);
    Code:
       0: aload_0
       1: getfield      #1                  // Field computable:Ljava/util/function/Function;
       4: areturn

  static {};
    Code:
       0: invokedynamic #30,  0             // InvokeDynamic #0:handleCycle:()Lorg/glassfish/jersey/internal/util/collection/Cache$CycleHandler;
       5: putstatic     #2                  // Field EMPTY_HANDLER:Lorg/glassfish/jersey/internal/util/collection/Cache$CycleHandler;
       8: return
}
