Compiled from "MessageBodyWorkers.java"
public interface org.glassfish.jersey.message.MessageBodyWorkers {
  public abstract java.util.Map<javax.ws.rs.core.MediaType, java.util.List<javax.ws.rs.ext.MessageBodyReader>> getReaders(javax.ws.rs.core.MediaType);

  public abstract java.util.Map<javax.ws.rs.core.MediaType, java.util.List<javax.ws.rs.ext.MessageBodyWriter>> getWriters(javax.ws.rs.core.MediaType);

  public abstract java.lang.String readersToString(java.util.Map<javax.ws.rs.core.MediaType, java.util.List<javax.ws.rs.ext.MessageBodyReader>>);

  public abstract java.lang.String writersToString(java.util.Map<javax.ws.rs.core.MediaType, java.util.List<javax.ws.rs.ext.MessageBodyWriter>>);

  public abstract <T> javax.ws.rs.ext.MessageBodyReader<T> getMessageBodyReader(java.lang.Class<T>, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType);

  public abstract <T> javax.ws.rs.ext.MessageBodyReader<T> getMessageBodyReader(java.lang.Class<T>, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, org.glassfish.jersey.internal.PropertiesDelegate);

  public abstract <T> javax.ws.rs.ext.MessageBodyWriter<T> getMessageBodyWriter(java.lang.Class<T>, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType);

  public abstract <T> javax.ws.rs.ext.MessageBodyWriter<T> getMessageBodyWriter(java.lang.Class<T>, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, org.glassfish.jersey.internal.PropertiesDelegate);

  public abstract java.util.List<javax.ws.rs.core.MediaType> getMessageBodyReaderMediaTypes(java.lang.Class<?>, java.lang.reflect.Type, java.lang.annotation.Annotation[]);

  public abstract java.util.List<javax.ws.rs.core.MediaType> getMessageBodyReaderMediaTypesByType(java.lang.Class<?>);

  public abstract java.util.List<javax.ws.rs.ext.MessageBodyReader> getMessageBodyReadersForType(java.lang.Class<?>);

  public abstract java.util.List<org.glassfish.jersey.message.ReaderModel> getReaderModelsForType(java.lang.Class<?>);

  public abstract java.util.List<javax.ws.rs.core.MediaType> getMessageBodyWriterMediaTypes(java.lang.Class<?>, java.lang.reflect.Type, java.lang.annotation.Annotation[]);

  public abstract java.util.List<javax.ws.rs.core.MediaType> getMessageBodyWriterMediaTypesByType(java.lang.Class<?>);

  public abstract java.util.List<javax.ws.rs.ext.MessageBodyWriter> getMessageBodyWritersForType(java.lang.Class<?>);

  public abstract java.util.List<org.glassfish.jersey.message.WriterModel> getWritersModelsForType(java.lang.Class<?>);

  public abstract javax.ws.rs.core.MediaType getMessageBodyWriterMediaType(java.lang.Class<?>, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.util.List<javax.ws.rs.core.MediaType>);

  public abstract java.lang.Object readFrom(java.lang.Class<?>, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap<java.lang.String, java.lang.String>, org.glassfish.jersey.internal.PropertiesDelegate, java.io.InputStream, java.lang.Iterable<javax.ws.rs.ext.ReaderInterceptor>, boolean) throws javax.ws.rs.WebApplicationException, java.io.IOException;

  public abstract java.io.OutputStream writeTo(java.lang.Object, java.lang.Class<?>, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap<java.lang.String, java.lang.Object>, org.glassfish.jersey.internal.PropertiesDelegate, java.io.OutputStream, java.lang.Iterable<javax.ws.rs.ext.WriterInterceptor>) throws java.io.IOException, javax.ws.rs.WebApplicationException;
}
