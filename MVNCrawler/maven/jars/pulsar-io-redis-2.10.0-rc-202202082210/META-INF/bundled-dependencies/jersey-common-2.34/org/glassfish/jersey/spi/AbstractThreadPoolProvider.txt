Compiled from "AbstractThreadPoolProvider.java"
public abstract class org.glassfish.jersey.spi.AbstractThreadPoolProvider<E extends java.util.concurrent.ThreadPoolExecutor> implements java.lang.AutoCloseable {
  private static final org.glassfish.jersey.internal.util.ExtendedLogger LOGGER;

  public static final int DEFAULT_TERMINATION_TIMEOUT;

  private final java.lang.String name;

  private final java.util.concurrent.atomic.AtomicBoolean closed;

  private final org.glassfish.jersey.internal.util.collection.LazyValue<E> lazyExecutorServiceProvider;

  protected org.glassfish.jersey.spi.AbstractThreadPoolProvider(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: iconst_0
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      13: putfield      #4                  // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: aload_0
      17: aload_0
      18: invokedynamic #5,  0              // InvokeDynamic #0:get:(Lorg/glassfish/jersey/spi/AbstractThreadPoolProvider;)Lorg/glassfish/jersey/internal/util/collection/Value;
      23: invokestatic  #6                  // Method org/glassfish/jersey/internal/util/collection/Values.lazy:(Lorg/glassfish/jersey/internal/util/collection/Value;)Lorg/glassfish/jersey/internal/util/collection/LazyValue;
      26: putfield      #7                  // Field lazyExecutorServiceProvider:Lorg/glassfish/jersey/internal/util/collection/LazyValue;
      29: aload_0
      30: aload_1
      31: putfield      #8                  // Field name:Ljava/lang/String;
      34: return

  protected final E getExecutor();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method isClosed:()Z
       4: ifeq          18
       7: new           #10                 // class java/lang/IllegalStateException
      10: dup
      11: invokestatic  #11                 // Method org/glassfish/jersey/internal/LocalizationMessages.THREAD_POOL_EXECUTOR_PROVIDER_CLOSED:()Ljava/lang/String;
      14: invokespecial #12                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: getfield      #7                  // Field lazyExecutorServiceProvider:Lorg/glassfish/jersey/internal/util/collection/LazyValue;
      22: invokeinterface #13,  1           // InterfaceMethod org/glassfish/jersey/internal/util/collection/LazyValue.get:()Ljava/lang/Object;
      27: checkcast     #14                 // class java/util/concurrent/ThreadPoolExecutor
      30: areturn

  protected abstract E createExecutor(int, java.util.concurrent.ThreadFactory, java.util.concurrent.RejectedExecutionHandler);

  protected int getTerminationTimeout();
    Code:
       0: sipush        5000
       3: ireturn

  protected int getCorePoolSize();
    Code:
       0: invokestatic  #16                 // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
       3: invokevirtual #17                 // Method java/lang/Runtime.availableProcessors:()I
       6: ireturn

  protected java.util.concurrent.RejectedExecutionHandler getRejectedExecutionHandler();
    Code:
       0: invokedynamic #18,  0             // InvokeDynamic #1:rejectedExecution:()Ljava/util/concurrent/RejectedExecutionHandler;
       5: areturn

  protected java.util.concurrent.ThreadFactory getBackingThreadFactory();
    Code:
       0: aconst_null
       1: areturn

  private java.util.concurrent.ThreadFactory createThreadFactory();
    Code:
       0: new           #19                 // class org/glassfish/jersey/internal/guava/ThreadFactoryBuilder
       3: dup
       4: invokespecial #20                 // Method org/glassfish/jersey/internal/guava/ThreadFactoryBuilder."<init>":()V
       7: new           #21                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      14: aload_0
      15: getfield      #8                  // Field name:Ljava/lang/String;
      18: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #24                 // String -%d
      23: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokevirtual #26                 // Method org/glassfish/jersey/internal/guava/ThreadFactoryBuilder.setNameFormat:(Ljava/lang/String;)Lorg/glassfish/jersey/internal/guava/ThreadFactoryBuilder;
      32: new           #27                 // class org/glassfish/jersey/process/JerseyProcessingUncaughtExceptionHandler
      35: dup
      36: invokespecial #28                 // Method org/glassfish/jersey/process/JerseyProcessingUncaughtExceptionHandler."<init>":()V
      39: invokevirtual #29                 // Method org/glassfish/jersey/internal/guava/ThreadFactoryBuilder.setUncaughtExceptionHandler:(Ljava/lang/Thread$UncaughtExceptionHandler;)Lorg/glassfish/jersey/internal/guava/ThreadFactoryBuilder;
      42: astore_1
      43: aload_0
      44: invokevirtual #30                 // Method getBackingThreadFactory:()Ljava/util/concurrent/ThreadFactory;
      47: astore_2
      48: aload_2
      49: ifnull        58
      52: aload_1
      53: aload_2
      54: invokevirtual #31                 // Method org/glassfish/jersey/internal/guava/ThreadFactoryBuilder.setThreadFactory:(Ljava/util/concurrent/ThreadFactory;)Lorg/glassfish/jersey/internal/guava/ThreadFactoryBuilder;
      57: pop
      58: aload_1
      59: invokevirtual #32                 // Method org/glassfish/jersey/internal/guava/ThreadFactoryBuilder.build:()Ljava/util/concurrent/ThreadFactory;
      62: areturn

  public final boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #4                  // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #33                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  protected void onClose();
    Code:
       0: return

  public final void close();
    Code:
       0: aload_0
       1: getfield      #4                  // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifne          13
      12: return
      13: aload_0
      14: invokevirtual #35                 // Method onClose:()V
      17: aload_0
      18: getfield      #7                  // Field lazyExecutorServiceProvider:Lorg/glassfish/jersey/internal/util/collection/LazyValue;
      21: invokeinterface #36,  1           // InterfaceMethod org/glassfish/jersey/internal/util/collection/LazyValue.isInitialized:()Z
      26: ifeq          107
      29: aload_0
      30: getfield      #8                  // Field name:Ljava/lang/String;
      33: aload_0
      34: getfield      #7                  // Field lazyExecutorServiceProvider:Lorg/glassfish/jersey/internal/util/collection/LazyValue;
      37: invokeinterface #13,  1           // InterfaceMethod org/glassfish/jersey/internal/util/collection/LazyValue.get:()Ljava/lang/Object;
      42: checkcast     #37                 // class java/util/concurrent/ExecutorService
      45: aload_0
      46: invokevirtual #38                 // Method getTerminationTimeout:()I
      49: getstatic     #39                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      52: invokestatic  #40                 // Method shutdownExecutor:(Ljava/lang/String;Ljava/util/concurrent/ExecutorService;ILjava/util/concurrent/TimeUnit;)Ljava/security/PrivilegedAction;
      55: invokestatic  #41                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      58: pop
      59: goto          107
      62: astore_1
      63: aload_0
      64: getfield      #7                  // Field lazyExecutorServiceProvider:Lorg/glassfish/jersey/internal/util/collection/LazyValue;
      67: invokeinterface #36,  1           // InterfaceMethod org/glassfish/jersey/internal/util/collection/LazyValue.isInitialized:()Z
      72: ifeq          105
      75: aload_0
      76: getfield      #8                  // Field name:Ljava/lang/String;
      79: aload_0
      80: getfield      #7                  // Field lazyExecutorServiceProvider:Lorg/glassfish/jersey/internal/util/collection/LazyValue;
      83: invokeinterface #13,  1           // InterfaceMethod org/glassfish/jersey/internal/util/collection/LazyValue.get:()Ljava/lang/Object;
      88: checkcast     #37                 // class java/util/concurrent/ExecutorService
      91: aload_0
      92: invokevirtual #38                 // Method getTerminationTimeout:()I
      95: getstatic     #39                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      98: invokestatic  #40                 // Method shutdownExecutor:(Ljava/lang/String;Ljava/util/concurrent/ExecutorService;ILjava/util/concurrent/TimeUnit;)Ljava/security/PrivilegedAction;
     101: invokestatic  #41                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
     104: pop
     105: aload_1
     106: athrow
     107: return
    Exception table:
       from    to  target type
          13    17    62   any

  private static java.security.PrivilegedAction<?> shutdownExecutor(java.lang.String, java.util.concurrent.ExecutorService, int, java.util.concurrent.TimeUnit);
    Code:
       0: aload_1
       1: iload_2
       2: aload_3
       3: aload_0
       4: invokedynamic #42,  0             // InvokeDynamic #2:run:(Ljava/util/concurrent/ExecutorService;ILjava/util/concurrent/TimeUnit;Ljava/lang/String;)Ljava/security/PrivilegedAction;
       9: areturn

  private static java.lang.Void lambda$shutdownExecutor$2(java.util.concurrent.ExecutorService, int, java.util.concurrent.TimeUnit, java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #43,  1           // InterfaceMethod java/util/concurrent/ExecutorService.isShutdown:()Z
       6: ifne          15
       9: aload_0
      10: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdown:()V
      15: aload_0
      16: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/ExecutorService.isTerminated:()Z
      21: ifeq          26
      24: aconst_null
      25: areturn
      26: iconst_0
      27: istore        4
      29: iconst_0
      30: istore        5
      32: aload_0
      33: iload_1
      34: i2l
      35: aload_2
      36: invokeinterface #46,  4           // InterfaceMethod java/util/concurrent/ExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
      41: istore        4
      43: goto          98
      46: astore        6
      48: getstatic     #48                 // Field LOGGER:Lorg/glassfish/jersey/internal/util/ExtendedLogger;
      51: invokevirtual #49                 // Method org/glassfish/jersey/internal/util/ExtendedLogger.isDebugLoggable:()Z
      54: ifeq          95
      57: getstatic     #48                 // Field LOGGER:Lorg/glassfish/jersey/internal/util/ExtendedLogger;
      60: getstatic     #48                 // Field LOGGER:Lorg/glassfish/jersey/internal/util/ExtendedLogger;
      63: invokevirtual #50                 // Method org/glassfish/jersey/internal/util/ExtendedLogger.getDebugLevel:()Ljava/util/logging/Level;
      66: new           #21                 // class java/lang/StringBuilder
      69: dup
      70: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      73: ldc           #51                 // String Interrupted while waiting for thread pool executor
      75: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: aload_3
      79: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: ldc           #52                 // String  to shutdown.
      84: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: aload         6
      92: invokevirtual #53                 // Method org/glassfish/jersey/internal/util/ExtendedLogger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      95: iconst_1
      96: istore        5
      98: iload         4
     100: ifne          195
     103: aload_0
     104: invokeinterface #54,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdownNow:()Ljava/util/List;
     109: astore        6
     111: aload         6
     113: invokeinterface #55,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     118: astore        7
     120: aload         7
     122: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     127: ifeq          165
     130: aload         7
     132: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     137: checkcast     #58                 // class java/lang/Runnable
     140: astore        8
     142: aload         8
     144: instanceof    #59                 // class java/util/concurrent/Future
     147: ifeq          162
     150: aload         8
     152: checkcast     #59                 // class java/util/concurrent/Future
     155: iconst_1
     156: invokeinterface #60,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
     161: pop
     162: goto          120
     165: getstatic     #48                 // Field LOGGER:Lorg/glassfish/jersey/internal/util/ExtendedLogger;
     168: invokevirtual #49                 // Method org/glassfish/jersey/internal/util/ExtendedLogger.isDebugLoggable:()Z
     171: ifeq          195
     174: getstatic     #48                 // Field LOGGER:Lorg/glassfish/jersey/internal/util/ExtendedLogger;
     177: ldc           #61                 // String Thread pool executor {0} forced-shut down. List of cancelled tasks: {1}
     179: iconst_2
     180: anewarray     #62                 // class java/lang/Object
     183: dup
     184: iconst_0
     185: aload_3
     186: aastore
     187: dup
     188: iconst_1
     189: aload         6
     191: aastore
     192: invokevirtual #63                 // Method org/glassfish/jersey/internal/util/ExtendedLogger.debugLog:(Ljava/lang/String;[Ljava/lang/Object;)V
     195: iload         5
     197: ifeq          225
     200: invokestatic  #64                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     203: invokevirtual #65                 // Method java/lang/Thread.interrupt:()V
     206: goto          225
     209: astore        9
     211: iload         5
     213: ifeq          222
     216: invokestatic  #64                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     219: invokevirtual #65                 // Method java/lang/Thread.interrupt:()V
     222: aload         9
     224: athrow
     225: aconst_null
     226: areturn
    Exception table:
       from    to  target type
          32    43    46   Class java/lang/InterruptedException
          98   195   209   any
         209   211   209   any

  private static void lambda$getRejectedExecutionHandler$1(java.lang.Runnable, java.util.concurrent.ThreadPoolExecutor);
    Code:
       0: return

  private java.util.concurrent.ThreadPoolExecutor lambda$new$0();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #66                 // Method getCorePoolSize:()I
       5: aload_0
       6: invokespecial #67                 // Method createThreadFactory:()Ljava/util/concurrent/ThreadFactory;
       9: aload_0
      10: invokevirtual #68                 // Method getRejectedExecutionHandler:()Ljava/util/concurrent/RejectedExecutionHandler;
      13: invokevirtual #69                 // Method createExecutor:(ILjava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)Ljava/util/concurrent/ThreadPoolExecutor;
      16: areturn

  static {};
    Code:
       0: new           #70                 // class org/glassfish/jersey/internal/util/ExtendedLogger
       3: dup
       4: ldc           #15                 // class org/glassfish/jersey/spi/AbstractThreadPoolProvider
       6: invokevirtual #71                 // Method java/lang/Class.getName:()Ljava/lang/String;
       9: invokestatic  #72                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      12: getstatic     #73                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
      15: invokespecial #74                 // Method org/glassfish/jersey/internal/util/ExtendedLogger."<init>":(Ljava/util/logging/Logger;Ljava/util/logging/Level;)V
      18: putstatic     #48                 // Field LOGGER:Lorg/glassfish/jersey/internal/util/ExtendedLogger;
      21: return
}
