Compiled from "ProviderBinder.java"
public class org.glassfish.jersey.internal.inject.ProviderBinder {
  private final org.glassfish.jersey.internal.inject.InjectionManager injectionManager;

  public org.glassfish.jersey.internal.inject.ProviderBinder(org.glassfish.jersey.internal.inject.InjectionManager);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field injectionManager:Lorg/glassfish/jersey/internal/inject/InjectionManager;
       9: return

  public static <T> void bindProvider(java.lang.Class<T>, org.glassfish.jersey.model.ContractProvider, org.glassfish.jersey.internal.inject.InjectionManager);
    Code:
       0: aload_2
       1: aload_0
       2: invokeinterface #3,  2            // InterfaceMethod org/glassfish/jersey/internal/inject/InjectionManager.getInstance:(Ljava/lang/Class;)Ljava/lang/Object;
       7: astore_3
       8: aload_3
       9: ifnull        26
      12: aload_2
      13: aload_3
      14: aload_1
      15: invokestatic  #4                  // Method createInstanceBinder:(Ljava/lang/Object;Lorg/glassfish/jersey/model/ContractProvider;)Lorg/glassfish/jersey/internal/inject/Binder;
      18: invokeinterface #5,  2            // InterfaceMethod org/glassfish/jersey/internal/inject/InjectionManager.register:(Lorg/glassfish/jersey/internal/inject/Binder;)V
      23: goto          36
      26: aload_2
      27: aload_1
      28: invokestatic  #6                  // Method createClassBinder:(Lorg/glassfish/jersey/model/ContractProvider;)Lorg/glassfish/jersey/internal/inject/Binder;
      31: invokeinterface #5,  2            // InterfaceMethod org/glassfish/jersey/internal/inject/InjectionManager.register:(Lorg/glassfish/jersey/internal/inject/Binder;)V
      36: return

  private static <T> org.glassfish.jersey.internal.inject.Binder createInstanceBinder(T, org.glassfish.jersey.model.ContractProvider);
    Code:
       0: new           #7                  // class org/glassfish/jersey/internal/inject/ProviderBinder$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #8                  // Method org/glassfish/jersey/internal/inject/ProviderBinder$1."<init>":(Ljava/lang/Object;Lorg/glassfish/jersey/model/ContractProvider;)V
       9: areturn

  private static org.glassfish.jersey.internal.inject.Binder createClassBinder(org.glassfish.jersey.model.ContractProvider);
    Code:
       0: new           #9                  // class org/glassfish/jersey/internal/inject/ProviderBinder$2
       3: dup
       4: aload_0
       5: invokespecial #10                 // Method org/glassfish/jersey/internal/inject/ProviderBinder$2."<init>":(Lorg/glassfish/jersey/model/ContractProvider;)V
       8: areturn

  private static java.util.Collection<org.glassfish.jersey.internal.inject.Binder> createProviderBinders(java.lang.Class<?>, org.glassfish.jersey.model.ContractProvider);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #11,  0             // InvokeDynamic #0:apply:(Ljava/lang/Class;Lorg/glassfish/jersey/model/ContractProvider;)Ljava/util/function/Function;
       7: astore_2
       8: aload_1
       9: invokevirtual #12                 // Method org/glassfish/jersey/model/ContractProvider.getContracts:()Ljava/util/Set;
      12: invokeinterface #13,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      17: aload_2
      18: invokeinterface #14,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      23: invokestatic  #15                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      26: invokeinterface #16,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      31: checkcast     #17                 // class java/util/Collection
      34: areturn

  public static void bindProvider(java.lang.Object, org.glassfish.jersey.model.ContractProvider, org.glassfish.jersey.internal.inject.InjectionManager);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokestatic  #4                  // Method createInstanceBinder:(Ljava/lang/Object;Lorg/glassfish/jersey/model/ContractProvider;)Lorg/glassfish/jersey/internal/inject/Binder;
       6: invokeinterface #5,  2            // InterfaceMethod org/glassfish/jersey/internal/inject/InjectionManager.register:(Lorg/glassfish/jersey/internal/inject/Binder;)V
      11: return

  private static java.util.Collection<org.glassfish.jersey.internal.inject.Binder> createProviderBinders(java.lang.Object, org.glassfish.jersey.model.ContractProvider);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #18,  0             // InvokeDynamic #1:apply:(Ljava/lang/Object;Lorg/glassfish/jersey/model/ContractProvider;)Ljava/util/function/Function;
       7: astore_2
       8: aload_1
       9: invokevirtual #12                 // Method org/glassfish/jersey/model/ContractProvider.getContracts:()Ljava/util/Set;
      12: invokeinterface #13,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      17: aload_2
      18: invokeinterface #14,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      23: invokestatic  #15                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      26: invokeinterface #16,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      31: checkcast     #17                 // class java/util/Collection
      34: areturn

  public static void bindProviders(org.glassfish.jersey.model.internal.ComponentBag, org.glassfish.jersey.internal.inject.InjectionManager);
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: aload_1
       4: aconst_null
       5: invokestatic  #19                 // Method bindProviders:(Lorg/glassfish/jersey/model/internal/ComponentBag;Ljavax/ws/rs/RuntimeType;Ljava/util/Set;Lorg/glassfish/jersey/internal/inject/InjectionManager;Ljava/util/Collection;)V
       8: return

  public static void bindProviders(org.glassfish.jersey.model.internal.ComponentBag, javax.ws.rs.RuntimeType, java.util.Set<java.lang.Class<?>>, org.glassfish.jersey.internal.inject.InjectionManager);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aconst_null
       5: invokestatic  #19                 // Method bindProviders:(Lorg/glassfish/jersey/model/internal/ComponentBag;Ljavax/ws/rs/RuntimeType;Ljava/util/Set;Lorg/glassfish/jersey/internal/inject/InjectionManager;Ljava/util/Collection;)V
       8: return

  public static void bindProviders(org.glassfish.jersey.model.internal.ComponentBag, javax.ws.rs.RuntimeType, java.util.Set<java.lang.Class<?>>, org.glassfish.jersey.internal.inject.InjectionManager, java.util.Collection<org.glassfish.jersey.spi.ComponentProvider>);
    Code:
       0: getstatic     #20                 // Field org/glassfish/jersey/model/internal/ComponentBag.EXCLUDE_EMPTY:Ljava/util/function/Predicate;
       3: aload_3
       4: invokestatic  #21                 // Method org/glassfish/jersey/model/internal/ComponentBag.excludeMetaProviders:(Lorg/glassfish/jersey/internal/inject/InjectionManager;)Ljava/util/function/Predicate;
       7: invokeinterface #22,  2           // InterfaceMethod java/util/function/Predicate.and:(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;
      12: astore        5
      14: aload_0
      15: aload_1
      16: aload_2
      17: invokedynamic #23,  0             // InvokeDynamic #2:test:(Lorg/glassfish/jersey/model/internal/ComponentBag;Ljavax/ws/rs/RuntimeType;Ljava/util/Set;)Ljava/util/function/Predicate;
      22: astore        6
      24: new           #24                 // class java/util/ArrayList
      27: dup
      28: invokespecial #25                 // Method java/util/ArrayList."<init>":()V
      31: astore        7
      33: new           #26                 // class java/util/LinkedHashSet
      36: dup
      37: aload_0
      38: aload         5
      40: invokevirtual #27                 // Method org/glassfish/jersey/model/internal/ComponentBag.getClasses:(Ljava/util/function/Predicate;)Ljava/util/Set;
      43: invokespecial #28                 // Method java/util/LinkedHashSet."<init>":(Ljava/util/Collection;)V
      46: astore        8
      48: aload_1
      49: ifnull        79
      52: aload         8
      54: invokeinterface #13,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      59: aload         6
      61: invokeinterface #29,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      66: invokestatic  #30                 // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
      69: invokeinterface #16,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      74: checkcast     #31                 // class java/util/Set
      77: astore        8
      79: aload         8
      81: invokeinterface #32,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      86: astore        9
      88: aload         9
      90: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      95: ifeq          153
      98: aload         9
     100: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     105: checkcast     #35                 // class java/lang/Class
     108: astore        10
     110: aload_0
     111: aload         10
     113: invokevirtual #36                 // Method org/glassfish/jersey/model/internal/ComponentBag.getModel:(Ljava/lang/Class;)Lorg/glassfish/jersey/model/ContractProvider;
     116: astore        11
     118: aload         4
     120: ifnull        135
     123: aload         10
     125: aload         11
     127: aload         4
     129: invokestatic  #37                 // Method bindWithComponentProvider:(Ljava/lang/Class;Lorg/glassfish/jersey/model/ContractProvider;Ljava/lang/Iterable;)Z
     132: ifne          150
     135: aload         7
     137: aload         10
     139: aload         11
     141: invokestatic  #38                 // Method createProviderBinders:(Ljava/lang/Class;Lorg/glassfish/jersey/model/ContractProvider;)Ljava/util/Collection;
     144: invokeinterface #39,  2           // InterfaceMethod java/util/Collection.addAll:(Ljava/util/Collection;)Z
     149: pop
     150: goto          88
     153: aload_0
     154: aload         5
     156: invokevirtual #40                 // Method org/glassfish/jersey/model/internal/ComponentBag.getInstances:(Ljava/util/function/Predicate;)Ljava/util/Set;
     159: astore        9
     161: aload_1
     162: ifnull        197
     165: aload         9
     167: invokeinterface #13,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
     172: aload         6
     174: invokedynamic #41,  0             // InvokeDynamic #3:test:(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;
     179: invokeinterface #29,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
     184: invokestatic  #30                 // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
     187: invokeinterface #16,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
     192: checkcast     #31                 // class java/util/Set
     195: astore        9
     197: aload         9
     199: invokeinterface #32,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     204: astore        10
     206: aload         10
     208: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     213: ifeq          254
     216: aload         10
     218: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     223: astore        11
     225: aload_0
     226: aload         11
     228: invokevirtual #42                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     231: invokevirtual #36                 // Method org/glassfish/jersey/model/internal/ComponentBag.getModel:(Ljava/lang/Class;)Lorg/glassfish/jersey/model/ContractProvider;
     234: astore        12
     236: aload         7
     238: aload         11
     240: aload         12
     242: invokestatic  #43                 // Method createProviderBinders:(Ljava/lang/Object;Lorg/glassfish/jersey/model/ContractProvider;)Ljava/util/Collection;
     245: invokeinterface #39,  2           // InterfaceMethod java/util/Collection.addAll:(Ljava/util/Collection;)Z
     250: pop
     251: goto          206
     254: aload_3
     255: aload         7
     257: invokestatic  #44                 // Method org/glassfish/jersey/internal/inject/CompositeBinder.wrap:(Ljava/util/Collection;)Lorg/glassfish/jersey/internal/inject/AbstractBinder;
     260: invokeinterface #5,  2            // InterfaceMethod org/glassfish/jersey/internal/inject/InjectionManager.register:(Lorg/glassfish/jersey/internal/inject/Binder;)V
     265: return

  private static boolean bindWithComponentProvider(java.lang.Class<?>, org.glassfish.jersey.model.ContractProvider, java.lang.Iterable<org.glassfish.jersey.spi.ComponentProvider>);
    Code:
       0: aload_2
       1: invokeinterface #45,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          44
      16: aload_3
      17: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #46                 // class org/glassfish/jersey/spi/ComponentProvider
      25: astore        4
      27: aload         4
      29: aload_0
      30: aload_1
      31: invokeinterface #47,  3           // InterfaceMethod org/glassfish/jersey/spi/ComponentProvider.bind:(Ljava/lang/Class;Lorg/glassfish/jersey/model/ContractProvider;)Z
      36: ifeq          41
      39: iconst_1
      40: ireturn
      41: goto          7
      44: iconst_0
      45: ireturn

  private static <T> java.util.Collection<org.glassfish.jersey.internal.inject.Binder> createInstanceBinders(T);
    Code:
       0: aload_0
       1: invokedynamic #48,  0             // InvokeDynamic #4:apply:(Ljava/lang/Object;)Ljava/util/function/Function;
       6: astore_1
       7: aload_0
       8: invokevirtual #42                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokestatic  #49                 // Method org/glassfish/jersey/internal/inject/Providers.getProviderContracts:(Ljava/lang/Class;)Ljava/util/Set;
      14: invokeinterface #13,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      19: aload_1
      20: invokeinterface #14,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      25: invokestatic  #15                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      28: invokeinterface #16,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      33: checkcast     #17                 // class java/util/Collection
      36: areturn

  public void bindInstances(java.lang.Iterable<java.lang.Object>);
    Code:
       0: new           #24                 // class java/util/ArrayList
       3: dup
       4: invokespecial #25                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_1
       9: aload_2
      10: dup
      11: invokevirtual #42                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: pop
      15: invokedynamic #50,  0             // InvokeDynamic #5:accept:(Ljava/util/List;)Ljava/util/function/Consumer;
      20: invokeinterface #51,  2           // InterfaceMethod java/lang/Iterable.forEach:(Ljava/util/function/Consumer;)V
      25: aload_0
      26: aload_2
      27: invokevirtual #52                 // Method bindInstances:(Ljava/util/Collection;)V
      30: return

  public void bindInstances(java.util.Collection<java.lang.Object>);
    Code:
       0: aload_1
       1: invokeinterface #53,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #54,  0             // InvokeDynamic #6:apply:()Ljava/util/function/Function;
      11: invokeinterface #14,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      16: invokedynamic #55,  0             // InvokeDynamic #7:apply:()Ljava/util/function/Function;
      21: invokeinterface #56,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      26: invokestatic  #15                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      29: invokeinterface #16,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      34: checkcast     #57                 // class java/util/List
      37: astore_2
      38: aload_0
      39: getfield      #2                  // Field injectionManager:Lorg/glassfish/jersey/internal/inject/InjectionManager;
      42: aload_2
      43: invokestatic  #44                 // Method org/glassfish/jersey/internal/inject/CompositeBinder.wrap:(Ljava/util/Collection;)Lorg/glassfish/jersey/internal/inject/AbstractBinder;
      46: invokeinterface #5,  2            // InterfaceMethod org/glassfish/jersey/internal/inject/InjectionManager.register:(Lorg/glassfish/jersey/internal/inject/Binder;)V
      51: return

  public void bindClasses(java.lang.Class<?>...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #58                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       5: iconst_0
       6: invokevirtual #59                 // Method bindClasses:(Ljava/util/Collection;Z)V
       9: return

  public void bindClasses(java.lang.Iterable<java.lang.Class<?>>);
    Code:
       0: new           #24                 // class java/util/ArrayList
       3: dup
       4: invokespecial #25                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_1
       9: aload_2
      10: dup
      11: invokevirtual #42                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: pop
      15: invokedynamic #60,  0             // InvokeDynamic #8:accept:(Ljava/util/List;)Ljava/util/function/Consumer;
      20: invokeinterface #51,  2           // InterfaceMethod java/lang/Iterable.forEach:(Ljava/util/function/Consumer;)V
      25: aload_0
      26: aload_2
      27: iconst_0
      28: invokevirtual #59                 // Method bindClasses:(Ljava/util/Collection;Z)V
      31: return

  public void bindClasses(java.util.Collection<java.lang.Class<?>>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #59                 // Method bindClasses:(Ljava/util/Collection;Z)V
       6: return

  public void bindClasses(java.util.Collection<java.lang.Class<?>>, boolean);
    Code:
       0: aload_1
       1: invokeinterface #53,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
       6: aload_0
       7: iload_2
       8: invokedynamic #61,  0             // InvokeDynamic #9:apply:(Lorg/glassfish/jersey/internal/inject/ProviderBinder;Z)Ljava/util/function/Function;
      13: invokeinterface #14,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      18: invokestatic  #15                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      21: invokeinterface #16,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      26: checkcast     #57                 // class java/util/List
      29: astore_3
      30: aload_0
      31: getfield      #2                  // Field injectionManager:Lorg/glassfish/jersey/internal/inject/InjectionManager;
      34: aload_3
      35: invokestatic  #44                 // Method org/glassfish/jersey/internal/inject/CompositeBinder.wrap:(Ljava/util/Collection;)Lorg/glassfish/jersey/internal/inject/AbstractBinder;
      38: invokeinterface #5,  2            // InterfaceMethod org/glassfish/jersey/internal/inject/InjectionManager.register:(Lorg/glassfish/jersey/internal/inject/Binder;)V
      43: return

  private <T> org.glassfish.jersey.internal.inject.Binder createClassBinders(java.lang.Class<T>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #62                 // Method getProviderScope:(Ljava/lang/Class;)Ljava/lang/Class;
       5: astore_3
       6: iload_2
       7: ifeq          21
      10: new           #63                 // class org/glassfish/jersey/internal/inject/ProviderBinder$6
      13: dup
      14: aload_0
      15: aload_1
      16: aload_3
      17: invokespecial #64                 // Method org/glassfish/jersey/internal/inject/ProviderBinder$6."<init>":(Lorg/glassfish/jersey/internal/inject/ProviderBinder;Ljava/lang/Class;Ljava/lang/Class;)V
      20: areturn
      21: new           #65                 // class org/glassfish/jersey/internal/inject/ProviderBinder$7
      24: dup
      25: aload_0
      26: aload_1
      27: aload_3
      28: invokespecial #66                 // Method org/glassfish/jersey/internal/inject/ProviderBinder$7."<init>":(Lorg/glassfish/jersey/internal/inject/ProviderBinder;Ljava/lang/Class;Ljava/lang/Class;)V
      31: areturn

  private java.lang.Class<? extends java.lang.annotation.Annotation> getProviderScope(java.lang.Class<?>);
    Code:
       0: ldc           #67                 // class javax/inject/Singleton
       2: astore_2
       3: aload_1
       4: ldc           #68                 // class org/glassfish/jersey/internal/inject/PerLookup
       6: invokevirtual #69                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
       9: ifeq          15
      12: ldc           #68                 // class org/glassfish/jersey/internal/inject/PerLookup
      14: astore_2
      15: aload_2
      16: areturn

  private org.glassfish.jersey.internal.inject.Binder lambda$bindClasses$5(boolean, java.lang.Class);
    Code:
       0: aload_0
       1: aload_2
       2: iload_1
       3: invokespecial #70                 // Method createClassBinders:(Ljava/lang/Class;Z)Lorg/glassfish/jersey/internal/inject/Binder;
       6: areturn

  private static org.glassfish.jersey.internal.inject.Binder lambda$createInstanceBinders$4(java.lang.Object, java.lang.Class);
    Code:
       0: new           #71                 // class org/glassfish/jersey/internal/inject/ProviderBinder$5
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #72                 // Method org/glassfish/jersey/internal/inject/ProviderBinder$5."<init>":(Ljava/lang/Object;Ljava/lang/Class;)V
       9: areturn

  private static boolean lambda$bindProviders$3(java.util.function.Predicate, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #42                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokeinterface #73,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      10: ireturn

  private static boolean lambda$bindProviders$2(org.glassfish.jersey.model.internal.ComponentBag, javax.ws.rs.RuntimeType, java.util.Set, java.lang.Class);
    Code:
       0: aload_3
       1: aload_0
       2: aload_3
       3: invokevirtual #36                 // Method org/glassfish/jersey/model/internal/ComponentBag.getModel:(Ljava/lang/Class;)Lorg/glassfish/jersey/model/ContractProvider;
       6: aload_1
       7: aload_2
       8: ifnull        21
      11: aload_2
      12: aload_3
      13: invokeinterface #74,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      18: ifne          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: iconst_0
      27: invokestatic  #75                 // Method org/glassfish/jersey/internal/inject/Providers.checkProviderRuntime:(Ljava/lang/Class;Lorg/glassfish/jersey/model/ContractProvider;Ljavax/ws/rs/RuntimeType;ZZ)Z
      30: ireturn

  private static org.glassfish.jersey.internal.inject.Binder lambda$createProviderBinders$1(java.lang.Object, org.glassfish.jersey.model.ContractProvider, java.lang.Class);
    Code:
       0: new           #76                 // class org/glassfish/jersey/internal/inject/ProviderBinder$4
       3: dup
       4: aload_0
       5: aload_2
       6: aload_1
       7: invokespecial #77                 // Method org/glassfish/jersey/internal/inject/ProviderBinder$4."<init>":(Ljava/lang/Object;Ljava/lang/Class;Lorg/glassfish/jersey/model/ContractProvider;)V
      10: areturn

  private static org.glassfish.jersey.internal.inject.Binder lambda$createProviderBinders$0(java.lang.Class, org.glassfish.jersey.model.ContractProvider, java.lang.Class);
    Code:
       0: new           #78                 // class org/glassfish/jersey/internal/inject/ProviderBinder$3
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #79                 // Method org/glassfish/jersey/internal/inject/ProviderBinder$3."<init>":(Ljava/lang/Class;Lorg/glassfish/jersey/model/ContractProvider;Ljava/lang/Class;)V
      10: areturn
}
