Compiled from "CollectPreconditions.java"
final class org.glassfish.jersey.internal.guava.CollectPreconditions {
  org.glassfish.jersey.internal.guava.CollectPreconditions();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static int checkNonnegative(int, java.lang.String);
    Code:
       0: iload_0
       1: ifge          35
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: new           #3                  // class java/lang/StringBuilder
      11: dup
      12: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      15: aload_1
      16: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #6                  // String  cannot be negative but was:
      21: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: iload_0
      25: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      28: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: iload_0
      36: ireturn

  static void checkRemove(boolean);
    Code:
       0: iload_0
       1: ldc           #10                 // String no calls to next() since the last call to remove()
       3: invokestatic  #11                 // Method org/glassfish/jersey/internal/guava/Preconditions.checkState:(ZLjava/lang/Object;)V
       6: return
}
