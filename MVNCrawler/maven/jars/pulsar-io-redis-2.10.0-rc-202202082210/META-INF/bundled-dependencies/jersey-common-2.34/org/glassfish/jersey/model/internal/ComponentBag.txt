Compiled from "ComponentBag.java"
public class org.glassfish.jersey.model.internal.ComponentBag {
  private static final java.util.function.Predicate<org.glassfish.jersey.model.ContractProvider> EXCLUDE_META_PROVIDERS;

  private static final java.util.function.Function<java.lang.Object, org.glassfish.jersey.internal.inject.Binder> CAST_TO_BINDER;

  public static final java.util.function.BiPredicate<org.glassfish.jersey.model.ContractProvider, org.glassfish.jersey.internal.inject.InjectionManager> EXTERNAL_ONLY;

  public static final java.util.function.Predicate<org.glassfish.jersey.model.ContractProvider> BINDERS_ONLY;

  public static final java.util.function.Predicate<org.glassfish.jersey.model.ContractProvider> EXECUTOR_SERVICE_PROVIDER_ONLY;

  public static final java.util.function.Predicate<org.glassfish.jersey.model.ContractProvider> SCHEDULED_EXECUTOR_SERVICE_PROVIDER_ONLY;

  public static final java.util.function.Predicate<org.glassfish.jersey.model.ContractProvider> EXCLUDE_EMPTY;

  public static final java.util.function.Predicate<org.glassfish.jersey.model.ContractProvider> INCLUDE_ALL;

  static final org.glassfish.jersey.process.Inflector<org.glassfish.jersey.model.ContractProvider$Builder, org.glassfish.jersey.model.ContractProvider> AS_IS;

  private final java.util.function.Predicate<org.glassfish.jersey.model.ContractProvider> registrationStrategy;

  private final java.util.Set<java.lang.Class<?>> classes;

  private final java.util.Set<java.lang.Class<?>> classesView;

  private final java.util.Set<java.lang.Object> instances;

  private final java.util.Set<java.lang.Object> instancesView;

  private final java.util.Map<java.lang.Class<?>, org.glassfish.jersey.model.ContractProvider> models;

  private final java.util.Set<java.lang.Class<?>> modelKeysView;

  public static java.util.function.Predicate<org.glassfish.jersey.model.ContractProvider> excludeMetaProviders(org.glassfish.jersey.internal.inject.InjectionManager);
    Code:
       0: getstatic     #6                  // Field EXCLUDE_META_PROVIDERS:Ljava/util/function/Predicate;
       3: aload_0
       4: invokedynamic #7,  0              // InvokeDynamic #0:test:(Lorg/glassfish/jersey/internal/inject/InjectionManager;)Ljava/util/function/Predicate;
       9: invokeinterface #8,  2            // InterfaceMethod java/util/function/Predicate.and:(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;
      14: areturn

  public static org.glassfish.jersey.model.internal.ComponentBag newInstance(java.util.function.Predicate<org.glassfish.jersey.model.ContractProvider>);
    Code:
       0: new           #9                  // class org/glassfish/jersey/model/internal/ComponentBag
       3: dup
       4: aload_0
       5: invokespecial #10                 // Method "<init>":(Ljava/util/function/Predicate;)V
       8: areturn

  public static <T> java.util.List<T> getFromBinders(org.glassfish.jersey.internal.inject.InjectionManager, org.glassfish.jersey.model.internal.ComponentBag, java.util.function.Function<java.lang.Object, T>, java.util.function.Predicate<org.glassfish.jersey.internal.inject.Binding>);
    Code:
       0: aload_0
       1: invokedynamic #11,  0             // InvokeDynamic #1:apply:(Lorg/glassfish/jersey/internal/inject/InjectionManager;)Ljava/util/function/Function;
       6: astore        4
       8: aload_1
       9: getstatic     #12                 // Field BINDERS_ONLY:Ljava/util/function/Predicate;
      12: invokevirtual #13                 // Method getInstances:(Ljava/util/function/Predicate;)Ljava/util/Set;
      15: invokeinterface #14,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      20: getstatic     #15                 // Field CAST_TO_BINDER:Ljava/util/function/Function;
      23: invokeinterface #16,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      28: aload_0
      29: invokedynamic #17,  0             // InvokeDynamic #2:apply:(Lorg/glassfish/jersey/internal/inject/InjectionManager;)Ljava/util/function/Function;
      34: invokeinterface #18,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      39: aload_3
      40: invokeinterface #19,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      45: aload         4
      47: invokeinterface #16,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      52: aload_2
      53: invokeinterface #16,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      58: invokestatic  #20                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      61: invokeinterface #21,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      66: checkcast     #22                 // class java/util/List
      69: areturn

  private org.glassfish.jersey.model.internal.ComponentBag(java.util.function.Predicate<org.glassfish.jersey.model.ContractProvider>);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field registrationStrategy:Ljava/util/function/Predicate;
       9: aload_0
      10: new           #24                 // class java/util/LinkedHashSet
      13: dup
      14: invokespecial #25                 // Method java/util/LinkedHashSet."<init>":()V
      17: putfield      #4                  // Field classes:Ljava/util/Set;
      20: aload_0
      21: new           #24                 // class java/util/LinkedHashSet
      24: dup
      25: invokespecial #25                 // Method java/util/LinkedHashSet."<init>":()V
      28: putfield      #3                  // Field instances:Ljava/util/Set;
      31: aload_0
      32: new           #26                 // class java/util/IdentityHashMap
      35: dup
      36: invokespecial #27                 // Method java/util/IdentityHashMap."<init>":()V
      39: putfield      #2                  // Field models:Ljava/util/Map;
      42: aload_0
      43: aload_0
      44: getfield      #4                  // Field classes:Ljava/util/Set;
      47: invokestatic  #28                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      50: putfield      #29                 // Field classesView:Ljava/util/Set;
      53: aload_0
      54: aload_0
      55: getfield      #3                  // Field instances:Ljava/util/Set;
      58: invokestatic  #28                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      61: putfield      #30                 // Field instancesView:Ljava/util/Set;
      64: aload_0
      65: aload_0
      66: getfield      #2                  // Field models:Ljava/util/Map;
      69: invokeinterface #31,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      74: invokestatic  #28                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      77: putfield      #32                 // Field modelKeysView:Ljava/util/Set;
      80: return

  private org.glassfish.jersey.model.internal.ComponentBag(java.util.function.Predicate<org.glassfish.jersey.model.ContractProvider>, java.util.Set<java.lang.Class<?>>, java.util.Set<java.lang.Object>, java.util.Map<java.lang.Class<?>, org.glassfish.jersey.model.ContractProvider>);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field registrationStrategy:Ljava/util/function/Predicate;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field classes:Ljava/util/Set;
      14: aload_0
      15: aload_3
      16: putfield      #3                  // Field instances:Ljava/util/Set;
      19: aload_0
      20: aload         4
      22: putfield      #2                  // Field models:Ljava/util/Map;
      25: aload_0
      26: aload_2
      27: invokestatic  #28                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      30: putfield      #29                 // Field classesView:Ljava/util/Set;
      33: aload_0
      34: aload_3
      35: invokestatic  #28                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      38: putfield      #30                 // Field instancesView:Ljava/util/Set;
      41: aload_0
      42: aload         4
      44: invokeinterface #31,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      49: invokestatic  #28                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      52: putfield      #32                 // Field modelKeysView:Ljava/util/Set;
      55: return

  public boolean register(java.lang.Class<?>, org.glassfish.jersey.process.Inflector<org.glassfish.jersey.model.ContractProvider$Builder, org.glassfish.jersey.model.ContractProvider>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_m1
       3: aconst_null
       4: aload_2
       5: invokespecial #34                 // Method registerModel:(Ljava/lang/Class;ILjava/util/Map;Lorg/glassfish/jersey/process/Inflector;)Z
       8: istore_3
       9: iload_3
      10: ifeq          24
      13: aload_0
      14: getfield      #4                  // Field classes:Ljava/util/Set;
      17: aload_1
      18: invokeinterface #35,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      23: pop
      24: iload_3
      25: ireturn

  public boolean register(java.lang.Class<?>, int, org.glassfish.jersey.process.Inflector<org.glassfish.jersey.model.ContractProvider$Builder, org.glassfish.jersey.model.ContractProvider>);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aconst_null
       4: aload_3
       5: invokespecial #34                 // Method registerModel:(Ljava/lang/Class;ILjava/util/Map;Lorg/glassfish/jersey/process/Inflector;)Z
       8: istore        4
      10: iload         4
      12: ifeq          26
      15: aload_0
      16: getfield      #4                  // Field classes:Ljava/util/Set;
      19: aload_1
      20: invokeinterface #35,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      25: pop
      26: iload         4
      28: ireturn

  public boolean register(java.lang.Class<?>, java.util.Set<java.lang.Class<?>>, org.glassfish.jersey.process.Inflector<org.glassfish.jersey.model.ContractProvider$Builder, org.glassfish.jersey.model.ContractProvider>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_m1
       3: aload_2
       4: invokestatic  #36                 // Method asMap:(Ljava/util/Set;)Ljava/util/Map;
       7: aload_3
       8: invokespecial #34                 // Method registerModel:(Ljava/lang/Class;ILjava/util/Map;Lorg/glassfish/jersey/process/Inflector;)Z
      11: istore        4
      13: iload         4
      15: ifeq          29
      18: aload_0
      19: getfield      #4                  // Field classes:Ljava/util/Set;
      22: aload_1
      23: invokeinterface #35,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      28: pop
      29: iload         4
      31: ireturn

  public boolean register(java.lang.Class<?>, java.util.Map<java.lang.Class<?>, java.lang.Integer>, org.glassfish.jersey.process.Inflector<org.glassfish.jersey.model.ContractProvider$Builder, org.glassfish.jersey.model.ContractProvider>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_m1
       3: aload_2
       4: aload_3
       5: invokespecial #34                 // Method registerModel:(Ljava/lang/Class;ILjava/util/Map;Lorg/glassfish/jersey/process/Inflector;)Z
       8: istore        4
      10: iload         4
      12: ifeq          26
      15: aload_0
      16: getfield      #4                  // Field classes:Ljava/util/Set;
      19: aload_1
      20: invokeinterface #35,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      25: pop
      26: iload         4
      28: ireturn

  public boolean register(java.lang.Object, org.glassfish.jersey.process.Inflector<org.glassfish.jersey.model.ContractProvider$Builder, org.glassfish.jersey.model.ContractProvider>);
    Code:
       0: aload_1
       1: invokevirtual #37                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: astore_3
       5: aload_0
       6: aload_3
       7: iconst_m1
       8: aconst_null
       9: aload_2
      10: invokespecial #34                 // Method registerModel:(Ljava/lang/Class;ILjava/util/Map;Lorg/glassfish/jersey/process/Inflector;)Z
      13: istore        4
      15: iload         4
      17: ifeq          31
      20: aload_0
      21: getfield      #3                  // Field instances:Ljava/util/Set;
      24: aload_1
      25: invokeinterface #35,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      30: pop
      31: iload         4
      33: ireturn

  public boolean register(java.lang.Object, int, org.glassfish.jersey.process.Inflector<org.glassfish.jersey.model.ContractProvider$Builder, org.glassfish.jersey.model.ContractProvider>);
    Code:
       0: aload_1
       1: invokevirtual #37                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: astore        4
       6: aload_0
       7: aload         4
       9: iload_2
      10: aconst_null
      11: aload_3
      12: invokespecial #34                 // Method registerModel:(Ljava/lang/Class;ILjava/util/Map;Lorg/glassfish/jersey/process/Inflector;)Z
      15: istore        5
      17: iload         5
      19: ifeq          33
      22: aload_0
      23: getfield      #3                  // Field instances:Ljava/util/Set;
      26: aload_1
      27: invokeinterface #35,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      32: pop
      33: iload         5
      35: ireturn

  public boolean register(java.lang.Object, java.util.Set<java.lang.Class<?>>, org.glassfish.jersey.process.Inflector<org.glassfish.jersey.model.ContractProvider$Builder, org.glassfish.jersey.model.ContractProvider>);
    Code:
       0: aload_1
       1: invokevirtual #37                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: astore        4
       6: aload_0
       7: aload         4
       9: iconst_m1
      10: aload_2
      11: invokestatic  #36                 // Method asMap:(Ljava/util/Set;)Ljava/util/Map;
      14: aload_3
      15: invokespecial #34                 // Method registerModel:(Ljava/lang/Class;ILjava/util/Map;Lorg/glassfish/jersey/process/Inflector;)Z
      18: istore        5
      20: iload         5
      22: ifeq          36
      25: aload_0
      26: getfield      #3                  // Field instances:Ljava/util/Set;
      29: aload_1
      30: invokeinterface #35,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      35: pop
      36: iload         5
      38: ireturn

  public boolean register(java.lang.Object, java.util.Map<java.lang.Class<?>, java.lang.Integer>, org.glassfish.jersey.process.Inflector<org.glassfish.jersey.model.ContractProvider$Builder, org.glassfish.jersey.model.ContractProvider>);
    Code:
       0: aload_1
       1: invokevirtual #37                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: astore        4
       6: aload_0
       7: aload         4
       9: iconst_m1
      10: aload_2
      11: aload_3
      12: invokespecial #34                 // Method registerModel:(Ljava/lang/Class;ILjava/util/Map;Lorg/glassfish/jersey/process/Inflector;)Z
      15: istore        5
      17: iload         5
      19: ifeq          33
      22: aload_0
      23: getfield      #3                  // Field instances:Ljava/util/Set;
      26: aload_1
      27: invokeinterface #35,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      32: pop
      33: iload         5
      35: ireturn

  private boolean registerModel(java.lang.Class<?>, int, java.util.Map<java.lang.Class<?>, java.lang.Integer>, org.glassfish.jersey.process.Inflector<org.glassfish.jersey.model.ContractProvider$Builder, org.glassfish.jersey.model.ContractProvider>);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: aload         4
       6: invokedynamic #38,  0             // InvokeDynamic #3:call:(Lorg/glassfish/jersey/model/internal/ComponentBag;Ljava/lang/Class;ILjava/util/Map;Lorg/glassfish/jersey/process/Inflector;)Lorg/glassfish/jersey/internal/util/Producer;
      11: invokestatic  #39                 // Method org/glassfish/jersey/internal/Errors.process:(Lorg/glassfish/jersey/internal/util/Producer;)Ljava/lang/Object;
      14: checkcast     #40                 // class java/lang/Boolean
      17: invokevirtual #41                 // Method java/lang/Boolean.booleanValue:()Z
      20: ireturn

  public static org.glassfish.jersey.model.ContractProvider modelFor(java.lang.Class<?>);
    Code:
       0: aload_0
       1: iconst_m1
       2: aconst_null
       3: getstatic     #42                 // Field AS_IS:Lorg/glassfish/jersey/process/Inflector;
       6: invokestatic  #43                 // Method modelFor:(Ljava/lang/Class;ILjava/util/Map;Lorg/glassfish/jersey/process/Inflector;)Lorg/glassfish/jersey/model/ContractProvider;
       9: areturn

  private static org.glassfish.jersey.model.ContractProvider modelFor(java.lang.Class<?>, int, java.util.Map<java.lang.Class<?>, java.lang.Integer>, org.glassfish.jersey.process.Inflector<org.glassfish.jersey.model.ContractProvider$Builder, org.glassfish.jersey.model.ContractProvider>);
    Code:
       0: aload_2
       1: ifnonnull     16
       4: aload_0
       5: invokestatic  #44                 // Method org/glassfish/jersey/internal/inject/Providers.getProviderContracts:(Ljava/lang/Class;)Ljava/util/Set;
       8: invokestatic  #36                 // Method asMap:(Ljava/util/Set;)Ljava/util/Map;
      11: astore        4
      13: goto          142
      16: new           #45                 // class java/util/HashMap
      19: dup
      20: aload_2
      21: invokespecial #46                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      24: astore        4
      26: aload         4
      28: invokeinterface #31,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      33: invokeinterface #47,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      38: astore        5
      40: aload         5
      42: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      47: ifeq          142
      50: aload         5
      52: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      57: checkcast     #50                 // class java/lang/Class
      60: astore        6
      62: aload         6
      64: ifnonnull     77
      67: aload         5
      69: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.remove:()V
      74: goto          40
      77: iconst_0
      78: istore        7
      80: aload         6
      82: invokestatic  #52                 // Method org/glassfish/jersey/internal/inject/Providers.isSupportedContract:(Ljava/lang/Class;)Z
      85: ifne          103
      88: aload         6
      90: aload_0
      91: invokestatic  #53                 // Method org/glassfish/jersey/internal/LocalizationMessages.CONTRACT_NOT_SUPPORTED:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
      94: getstatic     #54                 // Field org/glassfish/jersey/Severity.WARNING:Lorg/glassfish/jersey/Severity;
      97: invokestatic  #55                 // Method org/glassfish/jersey/internal/Errors.error:(Ljava/lang/String;Lorg/glassfish/jersey/Severity;)V
     100: iconst_1
     101: istore        7
     103: aload         6
     105: aload_0
     106: invokevirtual #56                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     109: ifne          127
     112: aload         6
     114: aload_0
     115: invokestatic  #57                 // Method org/glassfish/jersey/internal/LocalizationMessages.CONTRACT_NOT_ASSIGNABLE:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
     118: getstatic     #54                 // Field org/glassfish/jersey/Severity.WARNING:Lorg/glassfish/jersey/Severity;
     121: invokestatic  #55                 // Method org/glassfish/jersey/internal/Errors.error:(Ljava/lang/String;Lorg/glassfish/jersey/Severity;)V
     124: iconst_1
     125: istore        7
     127: iload         7
     129: ifeq          139
     132: aload         5
     134: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.remove:()V
     139: goto          40
     142: aload_0
     143: invokestatic  #58                 // Method org/glassfish/jersey/model/ContractProvider.builder:(Ljava/lang/Class;)Lorg/glassfish/jersey/model/ContractProvider$Builder;
     146: aload         4
     148: invokevirtual #59                 // Method org/glassfish/jersey/model/ContractProvider$Builder.addContracts:(Ljava/util/Map;)Lorg/glassfish/jersey/model/ContractProvider$Builder;
     151: iload_1
     152: invokevirtual #60                 // Method org/glassfish/jersey/model/ContractProvider$Builder.defaultPriority:(I)Lorg/glassfish/jersey/model/ContractProvider$Builder;
     155: astore        5
     157: iload_1
     158: iconst_m1
     159: if_icmpne     166
     162: iconst_1
     163: goto          167
     166: iconst_0
     167: istore        6
     169: aload_0
     170: invokevirtual #61                 // Method java/lang/Class.getAnnotations:()[Ljava/lang/annotation/Annotation;
     173: astore        7
     175: aload         7
     177: arraylength
     178: istore        8
     180: iconst_0
     181: istore        9
     183: iload         9
     185: iload         8
     187: if_icmpge     317
     190: aload         7
     192: iload         9
     194: aaload
     195: astore        10
     197: aload         10
     199: instanceof    #62                 // class javax/annotation/Priority
     202: ifeq          229
     205: iload         6
     207: ifeq          311
     210: aload         5
     212: aload         10
     214: checkcast     #62                 // class javax/annotation/Priority
     217: invokeinterface #63,  1           // InterfaceMethod javax/annotation/Priority.value:()I
     222: invokevirtual #60                 // Method org/glassfish/jersey/model/ContractProvider$Builder.defaultPriority:(I)Lorg/glassfish/jersey/model/ContractProvider$Builder;
     225: pop
     226: goto          311
     229: aload         10
     231: invokeinterface #64,  1           // InterfaceMethod java/lang/annotation/Annotation.annotationType:()Ljava/lang/Class;
     236: invokevirtual #61                 // Method java/lang/Class.getAnnotations:()[Ljava/lang/annotation/Annotation;
     239: astore        11
     241: aload         11
     243: arraylength
     244: istore        12
     246: iconst_0
     247: istore        13
     249: iload         13
     251: iload         12
     253: if_icmpge     311
     256: aload         11
     258: iload         13
     260: aaload
     261: astore        14
     263: aload         14
     265: instanceof    #65                 // class javax/ws/rs/NameBinding
     268: ifeq          284
     271: aload         5
     273: aload         10
     275: invokeinterface #64,  1           // InterfaceMethod java/lang/annotation/Annotation.annotationType:()Ljava/lang/Class;
     280: invokevirtual #66                 // Method org/glassfish/jersey/model/ContractProvider$Builder.addNameBinding:(Ljava/lang/Class;)Lorg/glassfish/jersey/model/ContractProvider$Builder;
     283: pop
     284: aload         14
     286: instanceof    #67                 // class javax/inject/Scope
     289: ifeq          305
     292: aload         5
     294: aload         10
     296: invokeinterface #64,  1           // InterfaceMethod java/lang/annotation/Annotation.annotationType:()Ljava/lang/Class;
     301: invokevirtual #68                 // Method org/glassfish/jersey/model/ContractProvider$Builder.scope:(Ljava/lang/Class;)Lorg/glassfish/jersey/model/ContractProvider$Builder;
     304: pop
     305: iinc          13, 1
     308: goto          249
     311: iinc          9, 1
     314: goto          183
     317: aload_3
     318: aload         5
     320: invokeinterface #69,  2           // InterfaceMethod org/glassfish/jersey/process/Inflector.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     325: checkcast     #33                 // class org/glassfish/jersey/model/ContractProvider
     328: areturn

  private static java.util.Map<java.lang.Class<?>, java.lang.Integer> asMap(java.util.Set<java.lang.Class<?>>);
    Code:
       0: new           #26                 // class java/util/IdentityHashMap
       3: dup
       4: invokespecial #27                 // Method java/util/IdentityHashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: invokeinterface #47,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          49
      24: aload_2
      25: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #50                 // class java/lang/Class
      33: astore_3
      34: aload_1
      35: aload_3
      36: iconst_m1
      37: invokestatic  #70                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      40: invokeinterface #71,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: goto          15
      49: aload_1
      50: areturn

  public java.util.Set<java.lang.Class<?>> getClasses();
    Code:
       0: aload_0
       1: getfield      #29                 // Field classesView:Ljava/util/Set;
       4: areturn

  public java.util.Set<java.lang.Object> getInstances();
    Code:
       0: aload_0
       1: getfield      #30                 // Field instancesView:Ljava/util/Set;
       4: areturn

  public java.util.Set<java.lang.Class<?>> getClasses(java.util.function.Predicate<org.glassfish.jersey.model.ContractProvider>);
    Code:
       0: aload_0
       1: getfield      #29                 // Field classesView:Ljava/util/Set;
       4: invokeinterface #14,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
       9: aload_0
      10: aload_1
      11: invokedynamic #72,  0             // InvokeDynamic #4:test:(Lorg/glassfish/jersey/model/internal/ComponentBag;Ljava/util/function/Predicate;)Ljava/util/function/Predicate;
      16: invokeinterface #19,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      21: invokedynamic #73,  0             // InvokeDynamic #5:get:()Ljava/util/function/Supplier;
      26: invokestatic  #74                 // Method java/util/stream/Collectors.toCollection:(Ljava/util/function/Supplier;)Ljava/util/stream/Collector;
      29: invokeinterface #21,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      34: checkcast     #75                 // class java/util/Set
      37: areturn

  public java.util.Set<java.lang.Object> getInstances(java.util.function.Predicate<org.glassfish.jersey.model.ContractProvider>);
    Code:
       0: aload_0
       1: getfield      #30                 // Field instancesView:Ljava/util/Set;
       4: invokeinterface #14,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
       9: aload_0
      10: aload_1
      11: invokedynamic #76,  0             // InvokeDynamic #6:test:(Lorg/glassfish/jersey/model/internal/ComponentBag;Ljava/util/function/Predicate;)Ljava/util/function/Predicate;
      16: invokeinterface #19,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      21: invokedynamic #73,  0             // InvokeDynamic #5:get:()Ljava/util/function/Supplier;
      26: invokestatic  #74                 // Method java/util/stream/Collectors.toCollection:(Ljava/util/function/Supplier;)Ljava/util/stream/Collector;
      29: invokeinterface #21,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      34: checkcast     #75                 // class java/util/Set
      37: areturn

  public java.util.Set<java.lang.Class<?>> getRegistrations();
    Code:
       0: aload_0
       1: getfield      #32                 // Field modelKeysView:Ljava/util/Set;
       4: areturn

  public org.glassfish.jersey.model.ContractProvider getModel(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field models:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #77,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #33                 // class org/glassfish/jersey/model/ContractProvider
      13: areturn

  public org.glassfish.jersey.model.internal.ComponentBag copy();
    Code:
       0: new           #9                  // class org/glassfish/jersey/model/internal/ComponentBag
       3: dup
       4: aload_0
       5: getfield      #5                  // Field registrationStrategy:Ljava/util/function/Predicate;
       8: new           #24                 // class java/util/LinkedHashSet
      11: dup
      12: aload_0
      13: getfield      #4                  // Field classes:Ljava/util/Set;
      16: invokespecial #78                 // Method java/util/LinkedHashSet."<init>":(Ljava/util/Collection;)V
      19: new           #24                 // class java/util/LinkedHashSet
      22: dup
      23: aload_0
      24: getfield      #3                  // Field instances:Ljava/util/Set;
      27: invokespecial #78                 // Method java/util/LinkedHashSet."<init>":(Ljava/util/Collection;)V
      30: new           #26                 // class java/util/IdentityHashMap
      33: dup
      34: aload_0
      35: getfield      #2                  // Field models:Ljava/util/Map;
      38: invokespecial #79                 // Method java/util/IdentityHashMap."<init>":(Ljava/util/Map;)V
      41: invokespecial #1                  // Method "<init>":(Ljava/util/function/Predicate;Ljava/util/Set;Ljava/util/Set;Ljava/util/Map;)V
      44: areturn

  public org.glassfish.jersey.model.internal.ComponentBag immutableCopy();
    Code:
       0: new           #80                 // class org/glassfish/jersey/model/internal/ComponentBag$ImmutableComponentBag
       3: dup
       4: aload_0
       5: invokespecial #81                 // Method org/glassfish/jersey/model/internal/ComponentBag$ImmutableComponentBag."<init>":(Lorg/glassfish/jersey/model/internal/ComponentBag;)V
       8: areturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #4                  // Field classes:Ljava/util/Set;
       4: invokeinterface #82,  1           // InterfaceMethod java/util/Set.clear:()V
       9: aload_0
      10: getfield      #3                  // Field instances:Ljava/util/Set;
      13: invokeinterface #82,  1           // InterfaceMethod java/util/Set.clear:()V
      18: aload_0
      19: getfield      #2                  // Field models:Ljava/util/Map;
      22: invokeinterface #83,  1           // InterfaceMethod java/util/Map.clear:()V
      27: return

  void loadFrom(org.glassfish.jersey.model.internal.ComponentBag);
    Code:
       0: aload_0
       1: invokevirtual #84                 // Method clear:()V
       4: aload_0
       5: getfield      #4                  // Field classes:Ljava/util/Set;
       8: aload_1
       9: getfield      #4                  // Field classes:Ljava/util/Set;
      12: invokeinterface #85,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      17: pop
      18: aload_0
      19: getfield      #3                  // Field instances:Ljava/util/Set;
      22: aload_1
      23: getfield      #3                  // Field instances:Ljava/util/Set;
      26: invokeinterface #85,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      31: pop
      32: aload_0
      33: getfield      #2                  // Field models:Ljava/util/Map;
      36: aload_1
      37: getfield      #2                  // Field models:Ljava/util/Map;
      40: invokeinterface #86,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      45: return

  private boolean lambda$getInstances$12(java.util.function.Predicate, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #37                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokevirtual #87                 // Method getModel:(Ljava/lang/Class;)Lorg/glassfish/jersey/model/ContractProvider;
       8: astore_3
       9: aload_1
      10: aload_3
      11: invokeinterface #88,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      16: ireturn

  private boolean lambda$getClasses$11(java.util.function.Predicate, java.lang.Class);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #87                 // Method getModel:(Ljava/lang/Class;)Lorg/glassfish/jersey/model/ContractProvider;
       5: astore_3
       6: aload_1
       7: aload_3
       8: invokeinterface #88,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      13: ireturn

  private java.lang.Boolean lambda$registerModel$10(java.lang.Class, int, java.util.Map, org.glassfish.jersey.process.Inflector);
    Code:
       0: aload_0
       1: getfield      #2                  // Field models:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #89,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          28
      13: aload_1
      14: invokestatic  #90                 // Method org/glassfish/jersey/internal/LocalizationMessages.COMPONENT_TYPE_ALREADY_REGISTERED:(Ljava/lang/Object;)Ljava/lang/String;
      17: getstatic     #91                 // Field org/glassfish/jersey/Severity.HINT:Lorg/glassfish/jersey/Severity;
      20: invokestatic  #55                 // Method org/glassfish/jersey/internal/Errors.error:(Ljava/lang/String;Lorg/glassfish/jersey/Severity;)V
      23: iconst_0
      24: invokestatic  #92                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      27: areturn
      28: aload_1
      29: iload_2
      30: aload_3
      31: aload         4
      33: invokestatic  #43                 // Method modelFor:(Ljava/lang/Class;ILjava/util/Map;Lorg/glassfish/jersey/process/Inflector;)Lorg/glassfish/jersey/model/ContractProvider;
      36: astore        5
      38: aload_0
      39: getfield      #5                  // Field registrationStrategy:Ljava/util/function/Predicate;
      42: aload         5
      44: invokeinterface #88,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      49: ifne          57
      52: iconst_0
      53: invokestatic  #92                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      56: areturn
      57: aload_0
      58: getfield      #2                  // Field models:Ljava/util/Map;
      61: aload_1
      62: aload         5
      64: invokeinterface #71,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      69: pop
      70: iconst_1
      71: invokestatic  #92                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      74: areturn

  private static java.util.stream.Stream lambda$getFromBinders$9(org.glassfish.jersey.internal.inject.InjectionManager, org.glassfish.jersey.internal.inject.Binder);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #93                 // Method org/glassfish/jersey/internal/inject/Bindings.getBindings:(Lorg/glassfish/jersey/internal/inject/InjectionManager;Lorg/glassfish/jersey/internal/inject/Binder;)Ljava/util/Collection;
       5: invokeinterface #94,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      10: areturn

  private static java.lang.Object lambda$getFromBinders$8(org.glassfish.jersey.internal.inject.InjectionManager, org.glassfish.jersey.internal.inject.Binding);
    Code:
       0: aload_1
       1: instanceof    #95                 // class org/glassfish/jersey/internal/inject/ClassBinding
       4: ifeq          23
       7: aload_1
       8: checkcast     #95                 // class org/glassfish/jersey/internal/inject/ClassBinding
      11: astore_2
      12: aload_0
      13: aload_2
      14: invokevirtual #96                 // Method org/glassfish/jersey/internal/inject/ClassBinding.getService:()Ljava/lang/Class;
      17: invokeinterface #97,  2           // InterfaceMethod org/glassfish/jersey/internal/inject/InjectionManager.createAndInitialize:(Ljava/lang/Class;)Ljava/lang/Object;
      22: areturn
      23: aload_1
      24: checkcast     #98                 // class org/glassfish/jersey/internal/inject/InstanceBinding
      27: astore_2
      28: aload_2
      29: invokevirtual #99                 // Method org/glassfish/jersey/internal/inject/InstanceBinding.getService:()Ljava/lang/Object;
      32: areturn

  private static boolean lambda$static$7(org.glassfish.jersey.model.ContractProvider);
    Code:
       0: iconst_1
       1: ireturn

  private static boolean lambda$static$6(org.glassfish.jersey.model.ContractProvider);
    Code:
       0: aload_0
       1: invokevirtual #100                // Method org/glassfish/jersey/model/ContractProvider.getContracts:()Ljava/util/Set;
       4: invokeinterface #101,  1          // InterfaceMethod java/util/Set.isEmpty:()Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  private static boolean lambda$static$5(org.glassfish.jersey.model.ContractProvider);
    Code:
       0: aload_0
       1: invokevirtual #100                // Method org/glassfish/jersey/model/ContractProvider.getContracts:()Ljava/util/Set;
       4: ldc           #102                // class org/glassfish/jersey/spi/ScheduledExecutorServiceProvider
       6: invokeinterface #103,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      11: ireturn

  private static boolean lambda$static$4(org.glassfish.jersey.model.ContractProvider);
    Code:
       0: aload_0
       1: invokevirtual #100                // Method org/glassfish/jersey/model/ContractProvider.getContracts:()Ljava/util/Set;
       4: ldc           #104                // class org/glassfish/jersey/spi/ExecutorServiceProvider
       6: invokeinterface #103,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      11: ifeq          32
      14: aload_0
      15: invokevirtual #100                // Method org/glassfish/jersey/model/ContractProvider.getContracts:()Ljava/util/Set;
      18: ldc           #102                // class org/glassfish/jersey/spi/ScheduledExecutorServiceProvider
      20: invokeinterface #103,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      25: ifne          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  private static boolean lambda$static$3(org.glassfish.jersey.model.ContractProvider);
    Code:
       0: aload_0
       1: invokevirtual #100                // Method org/glassfish/jersey/model/ContractProvider.getContracts:()Ljava/util/Set;
       4: ldc           #105                // class org/glassfish/jersey/internal/inject/Binder
       6: invokeinterface #103,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      11: ireturn

  private static boolean lambda$static$2(org.glassfish.jersey.model.ContractProvider, org.glassfish.jersey.internal.inject.InjectionManager);
    Code:
       0: aload_0
       1: invokevirtual #106                // Method org/glassfish/jersey/model/ContractProvider.getImplementationClass:()Ljava/lang/Class;
       4: ifnull        24
       7: aload_1
       8: aload_0
       9: invokevirtual #106                // Method org/glassfish/jersey/model/ContractProvider.getImplementationClass:()Ljava/lang/Class;
      12: invokeinterface #107,  2          // InterfaceMethod org/glassfish/jersey/internal/inject/InjectionManager.isRegistrable:(Ljava/lang/Class;)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  private static boolean lambda$excludeMetaProviders$1(org.glassfish.jersey.internal.inject.InjectionManager, org.glassfish.jersey.model.ContractProvider);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #106                // Method org/glassfish/jersey/model/ContractProvider.getImplementationClass:()Ljava/lang/Class;
       5: invokeinterface #107,  2          // InterfaceMethod org/glassfish/jersey/internal/inject/InjectionManager.isRegistrable:(Ljava/lang/Class;)Z
      10: ifne          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  private static boolean lambda$static$0(org.glassfish.jersey.model.ContractProvider);
    Code:
       0: aload_0
       1: invokevirtual #100                // Method org/glassfish/jersey/model/ContractProvider.getContracts:()Ljava/util/Set;
       4: astore_1
       5: aload_1
       6: invokeinterface #101,  1          // InterfaceMethod java/util/Set.isEmpty:()Z
      11: ifeq          16
      14: iconst_1
      15: ireturn
      16: iconst_0
      17: istore_2
      18: aload_1
      19: ldc           #108                // class javax/ws/rs/core/Feature
      21: invokeinterface #103,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      26: ifeq          34
      29: iload_2
      30: iconst_1
      31: iadd
      32: i2b
      33: istore_2
      34: aload_1
      35: ldc           #105                // class org/glassfish/jersey/internal/inject/Binder
      37: invokeinterface #103,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      42: ifeq          50
      45: iload_2
      46: iconst_1
      47: iadd
      48: i2b
      49: istore_2
      50: aload_1
      51: invokeinterface #109,  1          // InterfaceMethod java/util/Set.size:()I
      56: iload_2
      57: if_icmple     64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: ireturn

  static java.util.function.Predicate access$000(org.glassfish.jersey.model.internal.ComponentBag);
    Code:
       0: aload_0
       1: getfield      #5                  // Field registrationStrategy:Ljava/util/function/Predicate;
       4: areturn

  static java.util.Set access$100(org.glassfish.jersey.model.internal.ComponentBag);
    Code:
       0: aload_0
       1: getfield      #4                  // Field classes:Ljava/util/Set;
       4: areturn

  static java.util.Set access$200(org.glassfish.jersey.model.internal.ComponentBag);
    Code:
       0: aload_0
       1: getfield      #3                  // Field instances:Ljava/util/Set;
       4: areturn

  static java.util.Map access$300(org.glassfish.jersey.model.internal.ComponentBag);
    Code:
       0: aload_0
       1: getfield      #2                  // Field models:Ljava/util/Map;
       4: areturn

  org.glassfish.jersey.model.internal.ComponentBag(java.util.function.Predicate, java.util.Set, java.util.Set, java.util.Map, org.glassfish.jersey.model.internal.ComponentBag$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #1                  // Method "<init>":(Ljava/util/function/Predicate;Ljava/util/Set;Ljava/util/Set;Ljava/util/Map;)V
       9: return

  static {};
    Code:
       0: invokedynamic #110,  0            // InvokeDynamic #7:test:()Ljava/util/function/Predicate;
       5: putstatic     #6                  // Field EXCLUDE_META_PROVIDERS:Ljava/util/function/Predicate;
       8: ldc           #105                // class org/glassfish/jersey/internal/inject/Binder
      10: dup
      11: invokevirtual #37                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: pop
      15: invokedynamic #111,  0            // InvokeDynamic #8:apply:(Ljava/lang/Class;)Ljava/util/function/Function;
      20: putstatic     #15                 // Field CAST_TO_BINDER:Ljava/util/function/Function;
      23: invokedynamic #112,  0            // InvokeDynamic #9:test:()Ljava/util/function/BiPredicate;
      28: putstatic     #113                // Field EXTERNAL_ONLY:Ljava/util/function/BiPredicate;
      31: invokedynamic #114,  0            // InvokeDynamic #10:test:()Ljava/util/function/Predicate;
      36: putstatic     #12                 // Field BINDERS_ONLY:Ljava/util/function/Predicate;
      39: invokedynamic #115,  0            // InvokeDynamic #11:test:()Ljava/util/function/Predicate;
      44: putstatic     #116                // Field EXECUTOR_SERVICE_PROVIDER_ONLY:Ljava/util/function/Predicate;
      47: invokedynamic #117,  0            // InvokeDynamic #12:test:()Ljava/util/function/Predicate;
      52: putstatic     #118                // Field SCHEDULED_EXECUTOR_SERVICE_PROVIDER_ONLY:Ljava/util/function/Predicate;
      55: invokedynamic #119,  0            // InvokeDynamic #13:test:()Ljava/util/function/Predicate;
      60: putstatic     #120                // Field EXCLUDE_EMPTY:Ljava/util/function/Predicate;
      63: invokedynamic #121,  0            // InvokeDynamic #14:test:()Ljava/util/function/Predicate;
      68: putstatic     #122                // Field INCLUDE_ALL:Ljava/util/function/Predicate;
      71: invokedynamic #123,  0            // InvokeDynamic #15:apply:()Lorg/glassfish/jersey/process/Inflector;
      76: putstatic     #42                 // Field AS_IS:Lorg/glassfish/jersey/process/Inflector;
      79: return
}
