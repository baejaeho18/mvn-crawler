Compiled from "BoundsOnBinomialProportions.java"
public final class com.yahoo.sketches.BoundsOnBinomialProportions {
  private com.yahoo.sketches.BoundsOnBinomialProportions();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static double approximateLowerBoundOnP(long, long, double);
    Code:
       0: lload_0
       1: lload_2
       2: invokestatic  #2                  // Method checkInputs:(JJ)V
       5: lload_0
       6: lconst_0
       7: lcmp
       8: ifne          13
      11: dconst_0
      12: dreturn
      13: lload_2
      14: lconst_0
      15: lcmp
      16: ifne          21
      19: dconst_0
      20: dreturn
      21: lload_2
      22: lconst_1
      23: lcmp
      24: ifne          38
      27: lload_0
      28: l2d
      29: dload         4
      31: invokestatic  #3                  // Method deltaOfNumStdevs:(D)D
      34: invokestatic  #4                  // Method exactLowerBoundOnPForKequalsOne:(DD)D
      37: dreturn
      38: lload_2
      39: lload_0
      40: lcmp
      41: ifne          55
      44: lload_0
      45: l2d
      46: dload         4
      48: invokestatic  #3                  // Method deltaOfNumStdevs:(D)D
      51: invokestatic  #5                  // Method exactLowerBoundOnPForKequalsN:(DD)D
      54: dreturn
      55: lload_0
      56: lload_2
      57: lsub
      58: lconst_1
      59: ladd
      60: l2d
      61: lload_2
      62: l2d
      63: ldc2_w        #6                  // double -1.0d
      66: dload         4
      68: dmul
      69: invokestatic  #8                  // Method abramowitzStegunFormula26p5p22:(DDD)D
      72: dstore        6
      74: dconst_1
      75: dload         6
      77: dsub
      78: dreturn

  public static double approximateUpperBoundOnP(long, long, double);
    Code:
       0: lload_0
       1: lload_2
       2: invokestatic  #2                  // Method checkInputs:(JJ)V
       5: lload_0
       6: lconst_0
       7: lcmp
       8: ifne          13
      11: dconst_1
      12: dreturn
      13: lload_2
      14: lload_0
      15: lcmp
      16: ifne          21
      19: dconst_1
      20: dreturn
      21: lload_2
      22: lload_0
      23: lconst_1
      24: lsub
      25: lcmp
      26: ifne          40
      29: lload_0
      30: l2d
      31: dload         4
      33: invokestatic  #3                  // Method deltaOfNumStdevs:(D)D
      36: invokestatic  #9                  // Method exactUpperBoundOnPForKequalsNminusOne:(DD)D
      39: dreturn
      40: lload_2
      41: lconst_0
      42: lcmp
      43: ifne          57
      46: lload_0
      47: l2d
      48: dload         4
      50: invokestatic  #3                  // Method deltaOfNumStdevs:(D)D
      53: invokestatic  #10                 // Method exactUpperBoundOnPForKequalsZero:(DD)D
      56: dreturn
      57: lload_0
      58: lload_2
      59: lsub
      60: l2d
      61: lload_2
      62: lconst_1
      63: ladd
      64: l2d
      65: dload         4
      67: invokestatic  #8                  // Method abramowitzStegunFormula26p5p22:(DDD)D
      70: dstore        6
      72: dconst_1
      73: dload         6
      75: dsub
      76: dreturn

  public static double estimateUnknownP(long, long);
    Code:
       0: lload_0
       1: lload_2
       2: invokestatic  #2                  // Method checkInputs:(JJ)V
       5: lload_0
       6: lconst_0
       7: lcmp
       8: ifne          15
      11: ldc2_w        #11                 // double 0.5d
      14: dreturn
      15: lload_2
      16: l2d
      17: lload_0
      18: l2d
      19: ddiv
      20: dreturn

  private static void checkInputs(long, long);
    Code:
       0: lload_0
       1: lconst_0
       2: lcmp
       3: ifge          16
       6: new           #13                 // class com/yahoo/sketches/SketchesArgumentException
       9: dup
      10: ldc           #14                 // String N must be non-negative
      12: invokespecial #15                 // Method com/yahoo/sketches/SketchesArgumentException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: lload_2
      17: lconst_0
      18: lcmp
      19: ifge          32
      22: new           #13                 // class com/yahoo/sketches/SketchesArgumentException
      25: dup
      26: ldc           #16                 // String K must be non-negative
      28: invokespecial #15                 // Method com/yahoo/sketches/SketchesArgumentException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: lload_2
      33: lload_0
      34: lcmp
      35: ifle          48
      38: new           #13                 // class com/yahoo/sketches/SketchesArgumentException
      41: dup
      42: ldc           #17                 // String K cannot exceed N
      44: invokespecial #15                 // Method com/yahoo/sketches/SketchesArgumentException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: return

  public static double erf(double);
    Code:
       0: dload_0
       1: dconst_0
       2: dcmpg
       3: ifge          19
       6: ldc2_w        #6                  // double -1.0d
       9: ldc2_w        #6                  // double -1.0d
      12: dload_0
      13: dmul
      14: invokestatic  #18                 // Method erf_of_nonneg:(D)D
      17: dmul
      18: dreturn
      19: dload_0
      20: invokestatic  #18                 // Method erf_of_nonneg:(D)D
      23: dreturn

  public static double normalCDF(double);
    Code:
       0: ldc2_w        #11                 // double 0.5d
       3: dconst_1
       4: dload_0
       5: ldc2_w        #19                 // double 2.0d
       8: invokestatic  #21                 // Method java/lang/Math.sqrt:(D)D
      11: ddiv
      12: invokestatic  #22                 // Method erf:(D)D
      15: dadd
      16: dmul
      17: dreturn

  private static double erf_of_nonneg(double);
    Code:
       0: ldc2_w        #23                 // double 0.0705230784d
       3: dstore_2
       4: ldc2_w        #25                 // double 0.0092705272d
       7: dstore        4
       9: ldc2_w        #27                 // double 2.765672E-4d
      12: dstore        6
      14: ldc2_w        #29                 // double 0.0422820123d
      17: dstore        8
      19: ldc2_w        #31                 // double 1.520143E-4d
      22: dstore        10
      24: ldc2_w        #33                 // double 4.30638E-5d
      27: dstore        12
      29: dload_0
      30: dload_0
      31: dmul
      32: dstore        14
      34: dload         14
      36: dload_0
      37: dmul
      38: dstore        16
      40: dload         14
      42: dload         14
      44: dmul
      45: dstore        18
      47: dload         14
      49: dload         16
      51: dmul
      52: dstore        20
      54: dload         16
      56: dload         16
      58: dmul
      59: dstore        22
      61: dconst_1
      62: ldc2_w        #23                 // double 0.0705230784d
      65: dload_0
      66: dmul
      67: dadd
      68: ldc2_w        #29                 // double 0.0422820123d
      71: dload         14
      73: dmul
      74: dadd
      75: ldc2_w        #25                 // double 0.0092705272d
      78: dload         16
      80: dmul
      81: dadd
      82: ldc2_w        #31                 // double 1.520143E-4d
      85: dload         18
      87: dmul
      88: dadd
      89: ldc2_w        #27                 // double 2.765672E-4d
      92: dload         20
      94: dmul
      95: dadd
      96: ldc2_w        #33                 // double 4.30638E-5d
      99: dload         22
     101: dmul
     102: dadd
     103: dstore        24
     105: dload         24
     107: dload         24
     109: dmul
     110: dstore        26
     112: dload         26
     114: dload         26
     116: dmul
     117: dstore        28
     119: dload         28
     121: dload         28
     123: dmul
     124: dstore        30
     126: dload         30
     128: dload         30
     130: dmul
     131: dstore        32
     133: dconst_1
     134: dconst_1
     135: dload         32
     137: ddiv
     138: dsub
     139: dreturn

  private static double deltaOfNumStdevs(double);
    Code:
       0: ldc2_w        #6                  // double -1.0d
       3: dload_0
       4: dmul
       5: invokestatic  #35                 // Method normalCDF:(D)D
       8: dreturn

  private static double abramowitzStegunFormula26p5p22(double, double, double);
    Code:
       0: ldc2_w        #19                 // double 2.0d
       3: dload_2
       4: dmul
       5: dconst_1
       6: dsub
       7: dstore        6
       9: ldc2_w        #19                 // double 2.0d
      12: dload_0
      13: dmul
      14: dconst_1
      15: dsub
      16: dstore        8
      18: dload         4
      20: dload         4
      22: dmul
      23: ldc2_w        #36                 // double 3.0d
      26: dsub
      27: ldc2_w        #38                 // double 6.0d
      30: ddiv
      31: dstore        10
      33: dconst_1
      34: dload         8
      36: ddiv
      37: dconst_1
      38: dload         6
      40: ddiv
      41: dadd
      42: dstore        12
      44: ldc2_w        #19                 // double 2.0d
      47: dload         12
      49: ddiv
      50: dstore        14
      52: dload         4
      54: dload         14
      56: dload         10
      58: dadd
      59: invokestatic  #21                 // Method java/lang/Math.sqrt:(D)D
      62: dmul
      63: dload         14
      65: ddiv
      66: dstore        16
      68: dconst_1
      69: dload         6
      71: ddiv
      72: dconst_1
      73: dload         8
      75: ddiv
      76: dsub
      77: dstore        18
      79: dload         10
      81: ldc2_w        #40                 // double 0.8333333333333334d
      84: dadd
      85: ldc2_w        #19                 // double 2.0d
      88: ldc2_w        #36                 // double 3.0d
      91: dload         14
      93: dmul
      94: ddiv
      95: dsub
      96: dstore        20
      98: dload         16
     100: dload         18
     102: dload         20
     104: dmul
     105: dsub
     106: dstore        22
     108: dload_0
     109: dload_0
     110: dload_2
     111: ldc2_w        #19                 // double 2.0d
     114: dload         22
     116: dmul
     117: invokestatic  #42                 // Method java/lang/Math.exp:(D)D
     120: dmul
     121: dadd
     122: ddiv
     123: dstore        24
     125: dload         24
     127: dreturn

  private static double exactUpperBoundOnPForKequalsZero(double, double);
    Code:
       0: dconst_1
       1: dload_2
       2: dconst_1
       3: dload_0
       4: ddiv
       5: invokestatic  #43                 // Method java/lang/Math.pow:(DD)D
       8: dsub
       9: dreturn

  private static double exactLowerBoundOnPForKequalsN(double, double);
    Code:
       0: dload_2
       1: dconst_1
       2: dload_0
       3: ddiv
       4: invokestatic  #43                 // Method java/lang/Math.pow:(DD)D
       7: dreturn

  private static double exactLowerBoundOnPForKequalsOne(double, double);
    Code:
       0: dconst_1
       1: dconst_1
       2: dload_2
       3: dsub
       4: dconst_1
       5: dload_0
       6: ddiv
       7: invokestatic  #43                 // Method java/lang/Math.pow:(DD)D
      10: dsub
      11: dreturn

  private static double exactUpperBoundOnPForKequalsNminusOne(double, double);
    Code:
       0: dconst_1
       1: dload_2
       2: dsub
       3: dconst_1
       4: dload_0
       5: ddiv
       6: invokestatic  #43                 // Method java/lang/Math.pow:(DD)D
       9: dreturn
}
