Compiled from "ArrayOfDoublesQuickSelectSketch.java"
abstract class com.yahoo.sketches.tuple.ArrayOfDoublesQuickSelectSketch extends com.yahoo.sketches.tuple.ArrayOfDoublesUpdatableSketch {
  static final byte serialVersionUID;

  static final int LG_NOM_ENTRIES_BYTE;

  static final int LG_CUR_CAPACITY_BYTE;

  static final int LG_RESIZE_FACTOR_BYTE;

  static final int SAMPLING_P_FLOAT;

  static final int RETAINED_ENTRIES_INT;

  static final int ENTRIES_START;

  static final int DEFAULT_LG_RESIZE_FACTOR;

  int rebuildThreshold_;

  int lgCurrentCapacity_;

  com.yahoo.sketches.tuple.ArrayOfDoublesQuickSelectSketch(int, long);
    Code:
       0: aload_0
       1: iload_1
       2: lload_2
       3: invokespecial #2                  // Method com/yahoo/sketches/tuple/ArrayOfDoublesUpdatableSketch."<init>":(IJ)V
       6: return

  abstract void updateValues(int, double[]);

  abstract void setNotEmpty();

  abstract boolean isInSamplingMode();

  abstract int getResizeFactor();

  abstract int getCurrentCapacity();

  abstract void rebuild(int);

  abstract long getKey(int);

  abstract void setValues(int, double[]);

  abstract void incrementCount();

  abstract void setThetaLong(long);

  abstract int insertKey(long);

  abstract int findOrInsertKey(long);

  abstract double[] find(long);

  public void trim();
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getRetainedEntries:()I
       4: aload_0
       5: invokevirtual #4                  // Method getNominalEntries:()I
       8: if_icmple     19
      11: aload_0
      12: invokevirtual #5                  // Method updateTheta:()V
      15: aload_0
      16: invokevirtual #6                  // Method rebuild:()V
      19: return

  static int getMaxBytes(int, int);
    Code:
       0: bipush        32
       2: bipush        8
       4: bipush        8
       6: iload_1
       7: imul
       8: iadd
       9: iload_0
      10: invokestatic  #9                  // Method com/yahoo/sketches/Util.ceilingPowerOf2:(I)I
      13: imul
      14: iconst_2
      15: imul
      16: iadd
      17: ireturn

  void merge(long, double[]);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method setNotEmpty:()V
       4: lload_1
       5: aload_0
       6: getfield      #11                 // Field theta_:J
       9: lcmp
      10: ifge          52
      13: aload_0
      14: lload_1
      15: invokevirtual #12                 // Method findOrInsertKey:(J)I
      18: istore        4
      20: iload         4
      22: ifge          41
      25: aload_0
      26: invokevirtual #13                 // Method incrementCount:()V
      29: aload_0
      30: iload         4
      32: iconst_m1
      33: ixor
      34: aload_3
      35: invokevirtual #14                 // Method setValues:(I[D)V
      38: goto          48
      41: aload_0
      42: iload         4
      44: aload_3
      45: invokevirtual #15                 // Method updateValues:(I[D)V
      48: aload_0
      49: invokevirtual #16                 // Method rebuildIfNeeded:()V
      52: return

  void rebuildIfNeeded();
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getRetainedEntries:()I
       4: aload_0
       5: getfield      #17                 // Field rebuildThreshold_:I
       8: if_icmpge     12
      11: return
      12: aload_0
      13: invokevirtual #18                 // Method getCurrentCapacity:()I
      16: aload_0
      17: invokevirtual #4                  // Method getNominalEntries:()I
      20: if_icmple     34
      23: aload_0
      24: invokevirtual #5                  // Method updateTheta:()V
      27: aload_0
      28: invokevirtual #6                  // Method rebuild:()V
      31: goto          47
      34: aload_0
      35: aload_0
      36: invokevirtual #18                 // Method getCurrentCapacity:()I
      39: aload_0
      40: invokevirtual #19                 // Method getResizeFactor:()I
      43: imul
      44: invokevirtual #20                 // Method rebuild:(I)V
      47: return

  void rebuild();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #18                 // Method getCurrentCapacity:()I
       5: invokevirtual #20                 // Method rebuild:(I)V
       8: return

  void insert(long, double[]);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #21                 // Method insertKey:(J)I
       5: istore        4
       7: aload_0
       8: iload         4
      10: aload_3
      11: invokevirtual #14                 // Method setValues:(I[D)V
      14: aload_0
      15: invokevirtual #13                 // Method incrementCount:()V
      18: return

  void setRebuildThreshold();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getCurrentCapacity:()I
       4: aload_0
       5: invokevirtual #4                  // Method getNominalEntries:()I
       8: if_icmple     28
      11: aload_0
      12: aload_0
      13: invokevirtual #18                 // Method getCurrentCapacity:()I
      16: i2d
      17: ldc2_w        #22                 // double 0.9375d
      20: dmul
      21: d2i
      22: putfield      #17                 // Field rebuildThreshold_:I
      25: goto          42
      28: aload_0
      29: aload_0
      30: invokevirtual #18                 // Method getCurrentCapacity:()I
      33: i2d
      34: ldc2_w        #24                 // double 0.5d
      37: dmul
      38: d2i
      39: putfield      #17                 // Field rebuildThreshold_:I
      42: return

  void insertOrIgnore(long, double[]);
    Code:
       0: aload_3
       1: arraylength
       2: aload_0
       3: invokevirtual #26                 // Method getNumValues:()I
       6: if_icmpeq     49
       9: new           #27                 // class com/yahoo/sketches/SketchesArgumentException
      12: dup
      13: new           #28                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #30                 // String input array of values must have
      22: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_0
      26: invokevirtual #26                 // Method getNumValues:()I
      29: invokevirtual #32                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      32: ldc           #33                 // String  elements, but has
      34: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_3
      38: arraylength
      39: invokevirtual #32                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      42: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokespecial #35                 // Method com/yahoo/sketches/SketchesArgumentException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: aload_0
      50: invokevirtual #10                 // Method setNotEmpty:()V
      53: lload_1
      54: lconst_0
      55: lcmp
      56: ifeq          68
      59: lload_1
      60: aload_0
      61: getfield      #11                 // Field theta_:J
      64: lcmp
      65: iflt          69
      68: return
      69: aload_0
      70: lload_1
      71: invokevirtual #12                 // Method findOrInsertKey:(J)I
      74: istore        4
      76: iload         4
      78: ifge          97
      81: aload_0
      82: invokevirtual #13                 // Method incrementCount:()V
      85: aload_0
      86: iload         4
      88: iconst_m1
      89: ixor
      90: aload_3
      91: invokevirtual #14                 // Method setValues:(I[D)V
      94: goto          104
      97: aload_0
      98: iload         4
     100: aload_3
     101: invokevirtual #15                 // Method updateValues:(I[D)V
     104: aload_0
     105: invokevirtual #16                 // Method rebuildIfNeeded:()V
     108: return

  void updateTheta();
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getRetainedEntries:()I
       4: newarray       long
       6: astore_1
       7: iconst_0
       8: istore_2
       9: iconst_0
      10: istore_3
      11: iload_3
      12: aload_0
      13: invokevirtual #18                 // Method getCurrentCapacity:()I
      16: if_icmpge     47
      19: aload_0
      20: iload_3
      21: invokevirtual #36                 // Method getKey:(I)J
      24: lstore        4
      26: lload         4
      28: lconst_0
      29: lcmp
      30: ifeq          41
      33: aload_1
      34: iload_2
      35: iinc          2, 1
      38: lload         4
      40: lastore
      41: iinc          3, 1
      44: goto          11
      47: aload_0
      48: aload_1
      49: iconst_0
      50: aload_0
      51: invokevirtual #3                  // Method getRetainedEntries:()I
      54: iconst_1
      55: isub
      56: aload_0
      57: invokevirtual #4                  // Method getNominalEntries:()I
      60: invokestatic  #37                 // Method com/yahoo/sketches/QuickSelect.select:([JIII)J
      63: invokevirtual #38                 // Method setThetaLong:(J)V
      66: return
}
