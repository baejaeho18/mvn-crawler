Compiled from "ReversePurgeLongHashMap.java"
class com.yahoo.sketches.frequencies.ReversePurgeLongHashMap {
  private static final double LOAD_FACTOR;

  private static final int DRIFT_LIMIT;

  private int lgLength;

  private int loadThreshold;

  private long[] keys;

  private long[] values;

  private short[] states;

  private int numActive;

  static final boolean $assertionsDisabled;

  com.yahoo.sketches.frequencies.ReversePurgeLongHashMap(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field numActive:I
       9: aload_0
      10: iload_1
      11: ldc           #3                  // String mapSize
      13: invokestatic  #4                  // Method com/yahoo/sketches/Util.toLog2:(ILjava/lang/String;)I
      16: putfield      #5                  // Field lgLength:I
      19: aload_0
      20: iload_1
      21: i2d
      22: ldc2_w        #7                  // double 0.75d
      25: dmul
      26: d2i
      27: putfield      #9                  // Field loadThreshold:I
      30: aload_0
      31: iload_1
      32: newarray       long
      34: putfield      #10                 // Field keys:[J
      37: aload_0
      38: iload_1
      39: newarray       long
      41: putfield      #11                 // Field values:[J
      44: aload_0
      45: iload_1
      46: newarray       short
      48: putfield      #12                 // Field states:[S
      51: return

  static com.yahoo.sketches.frequencies.ReversePurgeLongHashMap getInstance(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #13                 // String ,
       3: invokevirtual #14                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: arraylength
       9: iconst_2
      10: if_icmpge     23
      13: new           #15                 // class com/yahoo/sketches/SketchesArgumentException
      16: dup
      17: ldc           #16                 // String String not long enough to specify length and capacity.
      19: invokespecial #17                 // Method com/yahoo/sketches/SketchesArgumentException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_1
      24: iconst_0
      25: aaload
      26: invokestatic  #18                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      29: istore_2
      30: aload_1
      31: iconst_1
      32: aaload
      33: invokestatic  #18                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      36: istore_3
      37: new           #6                  // class com/yahoo/sketches/frequencies/ReversePurgeLongHashMap
      40: dup
      41: iload_3
      42: invokespecial #19                 // Method "<init>":(I)V
      45: astore        4
      47: iconst_2
      48: istore        5
      50: iconst_0
      51: istore        6
      53: iload         6
      55: iload_2
      56: if_icmpge     98
      59: aload_1
      60: iload         5
      62: iinc          5, 1
      65: aaload
      66: invokestatic  #20                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      69: lstore        7
      71: aload_1
      72: iload         5
      74: iinc          5, 1
      77: aaload
      78: invokestatic  #20                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      81: lstore        9
      83: aload         4
      85: lload         7
      87: lload         9
      89: invokevirtual #21                 // Method adjustOrPutValue:(JJ)V
      92: iinc          6, 1
      95: goto          53
      98: aload         4
     100: areturn

  java.lang.String serializeToString();
    Code:
       0: new           #22                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #24                 // String %d,%d,
      11: iconst_2
      12: anewarray     #25                 // class java/lang/Object
      15: dup
      16: iconst_0
      17: aload_0
      18: getfield      #2                  // Field numActive:I
      21: invokestatic  #26                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      24: aastore
      25: dup
      26: iconst_1
      27: aload_0
      28: getfield      #10                 // Field keys:[J
      31: arraylength
      32: invokestatic  #26                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      35: aastore
      36: invokestatic  #27                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      39: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: pop
      43: iconst_0
      44: istore_2
      45: iload_2
      46: aload_0
      47: getfield      #10                 // Field keys:[J
      50: arraylength
      51: if_icmpge     107
      54: aload_0
      55: getfield      #12                 // Field states:[S
      58: iload_2
      59: saload
      60: ifeq          101
      63: aload_1
      64: ldc           #24                 // String %d,%d,
      66: iconst_2
      67: anewarray     #25                 // class java/lang/Object
      70: dup
      71: iconst_0
      72: aload_0
      73: getfield      #10                 // Field keys:[J
      76: iload_2
      77: laload
      78: invokestatic  #29                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      81: aastore
      82: dup
      83: iconst_1
      84: aload_0
      85: getfield      #11                 // Field values:[J
      88: iload_2
      89: laload
      90: invokestatic  #29                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      93: aastore
      94: invokestatic  #27                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      97: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: pop
     101: iinc          2, 1
     104: goto          45
     107: aload_1
     108: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     111: areturn

  boolean isActive(int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field states:[S
       4: iload_1
       5: saload
       6: ifle          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  long get(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #31                 // Method hashProbe:(J)I
       5: istore_3
       6: aload_0
       7: getfield      #12                 // Field states:[S
      10: iload_3
      11: saload
      12: ifle          47
      15: getstatic     #32                 // Field $assertionsDisabled:Z
      18: ifne          40
      21: aload_0
      22: getfield      #10                 // Field keys:[J
      25: iload_3
      26: laload
      27: lload_1
      28: lcmp
      29: ifeq          40
      32: new           #33                 // class java/lang/AssertionError
      35: dup
      36: invokespecial #34                 // Method java/lang/AssertionError."<init>":()V
      39: athrow
      40: aload_0
      41: getfield      #11                 // Field values:[J
      44: iload_3
      45: laload
      46: lreturn
      47: lconst_0
      48: lreturn

  void adjustOrPutValue(long, long);
    Code:
       0: aload_0
       1: getfield      #10                 // Field keys:[J
       4: arraylength
       5: iconst_1
       6: isub
       7: istore        5
       9: lload_1
      10: invokestatic  #35                 // Method com/yahoo/sketches/frequencies/Util.hash:(J)J
      13: l2i
      14: iload         5
      16: iand
      17: istore        6
      19: iconst_1
      20: istore        7
      22: aload_0
      23: getfield      #12                 // Field states:[S
      26: iload         6
      28: saload
      29: ifeq          103
      32: aload_0
      33: getfield      #10                 // Field keys:[J
      36: iload         6
      38: laload
      39: lload_1
      40: lcmp
      41: ifeq          103
      44: iload         6
      46: iconst_1
      47: iadd
      48: iload         5
      50: iand
      51: istore        6
      53: iinc          7, 1
      56: getstatic     #32                 // Field $assertionsDisabled:Z
      59: ifne          22
      62: iload         7
      64: sipush        1024
      67: if_icmplt     22
      70: new           #33                 // class java/lang/AssertionError
      73: dup
      74: new           #22                 // class java/lang/StringBuilder
      77: dup
      78: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      81: ldc           #36                 // String drift:
      83: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: iload         7
      88: invokevirtual #37                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      91: ldc           #38                 // String  >= DRIFT_LIMIT
      93: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: invokespecial #39                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     102: athrow
     103: aload_0
     104: getfield      #12                 // Field states:[S
     107: iload         6
     109: saload
     110: ifne          211
     113: getstatic     #32                 // Field $assertionsDisabled:Z
     116: ifne          172
     119: aload_0
     120: getfield      #2                  // Field numActive:I
     123: aload_0
     124: getfield      #9                  // Field loadThreshold:I
     127: if_icmple     172
     130: new           #33                 // class java/lang/AssertionError
     133: dup
     134: new           #22                 // class java/lang/StringBuilder
     137: dup
     138: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     141: ldc           #40                 // String numActive:
     143: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: aload_0
     147: getfield      #2                  // Field numActive:I
     150: invokevirtual #37                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     153: ldc           #41                 // String  > loadThreshold :
     155: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     158: aload_0
     159: getfield      #9                  // Field loadThreshold:I
     162: invokevirtual #37                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     165: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     168: invokespecial #39                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     171: athrow
     172: aload_0
     173: getfield      #10                 // Field keys:[J
     176: iload         6
     178: lload_1
     179: lastore
     180: aload_0
     181: getfield      #11                 // Field values:[J
     184: iload         6
     186: lload_3
     187: lastore
     188: aload_0
     189: getfield      #12                 // Field states:[S
     192: iload         6
     194: iload         7
     196: i2s
     197: sastore
     198: aload_0
     199: dup
     200: getfield      #2                  // Field numActive:I
     203: iconst_1
     204: iadd
     205: putfield      #2                  // Field numActive:I
     208: goto          248
     211: getstatic     #32                 // Field $assertionsDisabled:Z
     214: ifne          237
     217: aload_0
     218: getfield      #10                 // Field keys:[J
     221: iload         6
     223: laload
     224: lload_1
     225: lcmp
     226: ifeq          237
     229: new           #33                 // class java/lang/AssertionError
     232: dup
     233: invokespecial #34                 // Method java/lang/AssertionError."<init>":()V
     236: athrow
     237: aload_0
     238: getfield      #11                 // Field values:[J
     241: iload         6
     243: dup2
     244: laload
     245: lload_3
     246: ladd
     247: lastore
     248: return

  void keepOnlyPositiveCounts();
    Code:
       0: aload_0
       1: getfield      #10                 // Field keys:[J
       4: arraylength
       5: iconst_1
       6: isub
       7: istore_1
       8: aload_0
       9: getfield      #12                 // Field states:[S
      12: iload_1
      13: saload
      14: ifle          23
      17: iinc          1, -1
      20: goto          8
      23: iload_1
      24: istore_2
      25: iload_2
      26: iinc          2, -1
      29: ifle          70
      32: aload_0
      33: getfield      #12                 // Field states:[S
      36: iload_2
      37: saload
      38: ifle          25
      41: aload_0
      42: getfield      #11                 // Field values:[J
      45: iload_2
      46: laload
      47: lconst_0
      48: lcmp
      49: ifgt          25
      52: aload_0
      53: iload_2
      54: invokespecial #42                 // Method hashDelete:(I)V
      57: aload_0
      58: dup
      59: getfield      #2                  // Field numActive:I
      62: iconst_1
      63: isub
      64: putfield      #2                  // Field numActive:I
      67: goto          25
      70: aload_0
      71: getfield      #10                 // Field keys:[J
      74: arraylength
      75: istore_2
      76: iload_2
      77: iinc          2, -1
      80: iload_1
      81: if_icmple     122
      84: aload_0
      85: getfield      #12                 // Field states:[S
      88: iload_2
      89: saload
      90: ifle          76
      93: aload_0
      94: getfield      #11                 // Field values:[J
      97: iload_2
      98: laload
      99: lconst_0
     100: lcmp
     101: ifgt          76
     104: aload_0
     105: iload_2
     106: invokespecial #42                 // Method hashDelete:(I)V
     109: aload_0
     110: dup
     111: getfield      #2                  // Field numActive:I
     114: iconst_1
     115: isub
     116: putfield      #2                  // Field numActive:I
     119: goto          76
     122: return

  void adjustAllValuesBy(long);
    Code:
       0: aload_0
       1: getfield      #10                 // Field keys:[J
       4: arraylength
       5: istore_3
       6: iload_3
       7: iinc          3, -1
      10: ifle          26
      13: aload_0
      14: getfield      #11                 // Field values:[J
      17: iload_3
      18: dup2
      19: laload
      20: lload_1
      21: ladd
      22: lastore
      23: goto          6
      26: return

  long[] getActiveKeys();
    Code:
       0: aload_0
       1: getfield      #2                  // Field numActive:I
       4: ifne          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #2                  // Field numActive:I
      13: newarray       long
      15: astore_1
      16: iconst_0
      17: istore_2
      18: iconst_0
      19: istore_3
      20: iload_3
      21: aload_0
      22: getfield      #10                 // Field keys:[J
      25: arraylength
      26: if_icmpge     55
      29: aload_0
      30: iload_3
      31: invokevirtual #43                 // Method isActive:(I)Z
      34: ifeq          49
      37: aload_1
      38: iload_2
      39: aload_0
      40: getfield      #10                 // Field keys:[J
      43: iload_3
      44: laload
      45: lastore
      46: iinc          2, 1
      49: iinc          3, 1
      52: goto          20
      55: getstatic     #32                 // Field $assertionsDisabled:Z
      58: ifne          108
      61: iload_2
      62: aload_0
      63: getfield      #2                  // Field numActive:I
      66: if_icmpeq     108
      69: new           #33                 // class java/lang/AssertionError
      72: dup
      73: new           #22                 // class java/lang/StringBuilder
      76: dup
      77: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      80: ldc           #44                 // String j:
      82: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: iload_2
      86: invokevirtual #37                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      89: ldc           #45                 // String  != numActive:
      91: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: aload_0
      95: getfield      #2                  // Field numActive:I
      98: invokevirtual #37                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     101: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     104: invokespecial #39                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     107: athrow
     108: aload_1
     109: areturn

  long[] getActiveValues();
    Code:
       0: aload_0
       1: getfield      #2                  // Field numActive:I
       4: ifne          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #2                  // Field numActive:I
      13: newarray       long
      15: astore_1
      16: iconst_0
      17: istore_2
      18: iconst_0
      19: istore_3
      20: iload_3
      21: aload_0
      22: getfield      #11                 // Field values:[J
      25: arraylength
      26: if_icmpge     55
      29: aload_0
      30: iload_3
      31: invokevirtual #43                 // Method isActive:(I)Z
      34: ifeq          49
      37: aload_1
      38: iload_2
      39: aload_0
      40: getfield      #11                 // Field values:[J
      43: iload_3
      44: laload
      45: lastore
      46: iinc          2, 1
      49: iinc          3, 1
      52: goto          20
      55: getstatic     #32                 // Field $assertionsDisabled:Z
      58: ifne          77
      61: iload_2
      62: aload_0
      63: getfield      #2                  // Field numActive:I
      66: if_icmpeq     77
      69: new           #33                 // class java/lang/AssertionError
      72: dup
      73: invokespecial #34                 // Method java/lang/AssertionError."<init>":()V
      76: athrow
      77: aload_1
      78: areturn

  void resize(int);
    Code:
       0: aload_0
       1: getfield      #10                 // Field keys:[J
       4: astore_2
       5: aload_0
       6: getfield      #11                 // Field values:[J
       9: astore_3
      10: aload_0
      11: getfield      #12                 // Field states:[S
      14: astore        4
      16: aload_0
      17: iload_1
      18: newarray       long
      20: putfield      #10                 // Field keys:[J
      23: aload_0
      24: iload_1
      25: newarray       long
      27: putfield      #11                 // Field values:[J
      30: aload_0
      31: iload_1
      32: newarray       short
      34: putfield      #12                 // Field states:[S
      37: aload_0
      38: iload_1
      39: i2d
      40: ldc2_w        #7                  // double 0.75d
      43: dmul
      44: d2i
      45: putfield      #9                  // Field loadThreshold:I
      48: aload_0
      49: iload_1
      50: invokestatic  #46                 // Method java/lang/Integer.numberOfTrailingZeros:(I)I
      53: putfield      #5                  // Field lgLength:I
      56: aload_0
      57: iconst_0
      58: putfield      #2                  // Field numActive:I
      61: iconst_0
      62: istore        5
      64: iload         5
      66: aload_2
      67: arraylength
      68: if_icmpge     97
      71: aload         4
      73: iload         5
      75: saload
      76: ifle          91
      79: aload_0
      80: aload_2
      81: iload         5
      83: laload
      84: aload_3
      85: iload         5
      87: laload
      88: invokevirtual #21                 // Method adjustOrPutValue:(JJ)V
      91: iinc          5, 1
      94: goto          64
      97: return

  int getLength();
    Code:
       0: aload_0
       1: getfield      #10                 // Field keys:[J
       4: arraylength
       5: ireturn

  int getLgLength();
    Code:
       0: aload_0
       1: getfield      #5                  // Field lgLength:I
       4: ireturn

  int getCapacity();
    Code:
       0: aload_0
       1: getfield      #9                  // Field loadThreshold:I
       4: ireturn

  int getNumActive();
    Code:
       0: aload_0
       1: getfield      #2                  // Field numActive:I
       4: ireturn

  public java.lang.String toString();
    Code:
       0: ldc           #47                 // String   %12d:%11d%20d %d
       2: astore_1
       3: ldc           #48                 // String   %12s:%11s%20s %s
       5: astore_2
       6: new           #22                 // class java/lang/StringBuilder
       9: dup
      10: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      13: astore_3
      14: aload_3
      15: ldc           #49                 // String ReversePurgeLongHashMap:
      17: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: getstatic     #50                 // Field com/yahoo/sketches/Util.LS:Ljava/lang/String;
      23: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: pop
      27: aload_3
      28: ldc           #48                 // String   %12s:%11s%20s %s
      30: iconst_4
      31: anewarray     #25                 // class java/lang/Object
      34: dup
      35: iconst_0
      36: ldc           #51                 // String Index
      38: aastore
      39: dup
      40: iconst_1
      41: ldc           #52                 // String States
      43: aastore
      44: dup
      45: iconst_2
      46: ldc           #53                 // String Values
      48: aastore
      49: dup
      50: iconst_3
      51: ldc           #54                 // String Keys
      53: aastore
      54: invokestatic  #27                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      57: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: getstatic     #50                 // Field com/yahoo/sketches/Util.LS:Ljava/lang/String;
      63: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: pop
      67: iconst_0
      68: istore        4
      70: iload         4
      72: aload_0
      73: getfield      #10                 // Field keys:[J
      76: arraylength
      77: if_icmpge     166
      80: aload_0
      81: getfield      #12                 // Field states:[S
      84: iload         4
      86: saload
      87: ifgt          93
      90: goto          160
      93: aload_3
      94: ldc           #47                 // String   %12d:%11d%20d %d
      96: iconst_4
      97: anewarray     #25                 // class java/lang/Object
     100: dup
     101: iconst_0
     102: iload         4
     104: invokestatic  #26                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     107: aastore
     108: dup
     109: iconst_1
     110: aload_0
     111: getfield      #12                 // Field states:[S
     114: iload         4
     116: saload
     117: invokestatic  #55                 // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
     120: aastore
     121: dup
     122: iconst_2
     123: aload_0
     124: getfield      #11                 // Field values:[J
     127: iload         4
     129: laload
     130: invokestatic  #29                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     133: aastore
     134: dup
     135: iconst_3
     136: aload_0
     137: getfield      #10                 // Field keys:[J
     140: iload         4
     142: laload
     143: invokestatic  #29                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     146: aastore
     147: invokestatic  #27                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     150: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     153: getstatic     #50                 // Field com/yahoo/sketches/Util.LS:Ljava/lang/String;
     156: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: pop
     160: iinc          4, 1
     163: goto          70
     166: aload_3
     167: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     170: areturn

  static double getLoadFactor();
    Code:
       0: ldc2_w        #7                  // double 0.75d
       3: dreturn

  long purge(int);
    Code:
       0: iload_1
       1: aload_0
       2: invokevirtual #56                 // Method getNumActive:()I
       5: invokestatic  #57                 // Method java/lang/Math.min:(II)I
       8: istore_2
       9: iconst_0
      10: istore_3
      11: iconst_0
      12: istore        4
      14: iload_2
      15: newarray       long
      17: astore        5
      19: iload_3
      20: iload_2
      21: if_icmpge     53
      24: aload_0
      25: iload         4
      27: invokevirtual #43                 // Method isActive:(I)Z
      30: ifeq          47
      33: aload         5
      35: iload_3
      36: aload_0
      37: getfield      #11                 // Field values:[J
      40: iload         4
      42: laload
      43: lastore
      44: iinc          3, 1
      47: iinc          4, 1
      50: goto          19
      53: aload         5
      55: iconst_0
      56: iload_3
      57: iconst_1
      58: isub
      59: iload_2
      60: iconst_2
      61: idiv
      62: invokestatic  #58                 // Method com/yahoo/sketches/QuickSelect.select:([JIII)J
      65: lstore        6
      67: aload_0
      68: ldc2_w        #59                 // long -1l
      71: lload         6
      73: lmul
      74: invokevirtual #61                 // Method adjustAllValuesBy:(J)V
      77: aload_0
      78: invokevirtual #62                 // Method keepOnlyPositiveCounts:()V
      81: lload         6
      83: lreturn

  private void hashDelete(int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field states:[S
       4: iload_1
       5: iconst_0
       6: sastore
       7: iconst_1
       8: istore_2
       9: aload_0
      10: getfield      #10                 // Field keys:[J
      13: arraylength
      14: iconst_1
      15: isub
      16: istore_3
      17: iload_1
      18: iload_2
      19: iadd
      20: iload_3
      21: iand
      22: istore        4
      24: aload_0
      25: getfield      #12                 // Field states:[S
      28: iload         4
      30: saload
      31: ifeq          156
      34: aload_0
      35: getfield      #12                 // Field states:[S
      38: iload         4
      40: saload
      41: iload_2
      42: if_icmple     100
      45: aload_0
      46: getfield      #10                 // Field keys:[J
      49: iload_1
      50: aload_0
      51: getfield      #10                 // Field keys:[J
      54: iload         4
      56: laload
      57: lastore
      58: aload_0
      59: getfield      #11                 // Field values:[J
      62: iload_1
      63: aload_0
      64: getfield      #11                 // Field values:[J
      67: iload         4
      69: laload
      70: lastore
      71: aload_0
      72: getfield      #12                 // Field states:[S
      75: iload_1
      76: aload_0
      77: getfield      #12                 // Field states:[S
      80: iload         4
      82: saload
      83: iload_2
      84: isub
      85: i2s
      86: sastore
      87: aload_0
      88: getfield      #12                 // Field states:[S
      91: iload         4
      93: iconst_0
      94: sastore
      95: iconst_0
      96: istore_2
      97: iload         4
      99: istore_1
     100: iload         4
     102: iconst_1
     103: iadd
     104: iload_3
     105: iand
     106: istore        4
     108: iinc          2, 1
     111: getstatic     #32                 // Field $assertionsDisabled:Z
     114: ifne          24
     117: iload_2
     118: sipush        1024
     121: if_icmplt     24
     124: new           #33                 // class java/lang/AssertionError
     127: dup
     128: new           #22                 // class java/lang/StringBuilder
     131: dup
     132: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     135: ldc           #36                 // String drift:
     137: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: iload_2
     141: invokevirtual #37                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     144: ldc           #38                 // String  >= DRIFT_LIMIT
     146: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     152: invokespecial #39                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     155: athrow
     156: return

  private int hashProbe(long);
    Code:
       0: aload_0
       1: getfield      #10                 // Field keys:[J
       4: arraylength
       5: iconst_1
       6: isub
       7: istore_3
       8: lload_1
       9: invokestatic  #35                 // Method com/yahoo/sketches/frequencies/Util.hash:(J)J
      12: l2i
      13: iload_3
      14: iand
      15: istore        4
      17: aload_0
      18: getfield      #12                 // Field states:[S
      21: iload         4
      23: saload
      24: ifle          50
      27: aload_0
      28: getfield      #10                 // Field keys:[J
      31: iload         4
      33: laload
      34: lload_1
      35: lcmp
      36: ifeq          50
      39: iload         4
      41: iconst_1
      42: iadd
      43: iload_3
      44: iand
      45: istore        4
      47: goto          17
      50: iload         4
      52: ireturn

  com.yahoo.sketches.frequencies.ReversePurgeLongHashMap$Iterator iterator();
    Code:
       0: new           #63                 // class com/yahoo/sketches/frequencies/ReversePurgeLongHashMap$Iterator
       3: dup
       4: aload_0
       5: getfield      #10                 // Field keys:[J
       8: aload_0
       9: getfield      #11                 // Field values:[J
      12: aload_0
      13: getfield      #12                 // Field states:[S
      16: invokespecial #64                 // Method com/yahoo/sketches/frequencies/ReversePurgeLongHashMap$Iterator."<init>":([J[J[S)V
      19: areturn

  static {};
    Code:
       0: ldc           #6                  // class com/yahoo/sketches/frequencies/ReversePurgeLongHashMap
       2: invokevirtual #65                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #32                 // Field $assertionsDisabled:Z
      16: return
}
