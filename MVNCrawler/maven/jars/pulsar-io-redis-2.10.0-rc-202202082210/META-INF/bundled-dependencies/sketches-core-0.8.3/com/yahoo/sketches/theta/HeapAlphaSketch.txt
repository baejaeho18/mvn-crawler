Compiled from "HeapAlphaSketch.java"
final class com.yahoo.sketches.theta.HeapAlphaSketch extends com.yahoo.sketches.theta.HeapUpdateSketch {
  private static final int ALPHA_MIN_LG_NOM_LONGS;

  private final double alpha_;

  private final long split1_;

  private int lgArrLongs_;

  private int hashTableThreshold_;

  private int curCount_;

  private long thetaLong_;

  private boolean empty_;

  private long[] cache_;

  private boolean dirty_;

  static final boolean $assertionsDisabled;

  private com.yahoo.sketches.theta.HeapAlphaSketch(int, long, float, com.yahoo.sketches.ResizeFactor, double, long);
    Code:
       0: aload_0
       1: iload_1
       2: lload_2
       3: fload         4
       5: aload         5
       7: invokespecial #4                  // Method com/yahoo/sketches/theta/HeapUpdateSketch."<init>":(IJFLcom/yahoo/sketches/ResizeFactor;)V
      10: aload_0
      11: iconst_0
      12: putfield      #5                  // Field curCount_:I
      15: aload_0
      16: iconst_1
      17: putfield      #6                  // Field empty_:Z
      20: aload_0
      21: iconst_0
      22: putfield      #7                  // Field dirty_:Z
      25: aload_0
      26: dload         6
      28: putfield      #8                  // Field alpha_:D
      31: aload_0
      32: lload         8
      34: putfield      #9                  // Field split1_:J
      37: return

  static com.yahoo.sketches.theta.HeapAlphaSketch getInstance(int, long, float, com.yahoo.sketches.ResizeFactor);
    Code:
       0: iload_0
       1: bipush        9
       3: if_icmpge     16
       6: new           #11                 // class com/yahoo/sketches/SketchesArgumentException
       9: dup
      10: ldc           #12                 // String This sketch requires a minimum nominal entries of 512
      12: invokespecial #13                 // Method com/yahoo/sketches/SketchesArgumentException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: lconst_1
      17: iload_0
      18: lshl
      19: l2d
      20: dstore        5
      22: dload         5
      24: dload         5
      26: dconst_1
      27: dadd
      28: ddiv
      29: dstore        7
      31: fload_3
      32: f2d
      33: dload         7
      35: dconst_1
      36: dadd
      37: dmul
      38: ldc2_w        #14                 // double 2.0d
      41: ddiv
      42: ldc2_w        #16                 // double 9.223372036854776E18d
      45: dmul
      46: d2l
      47: lstore        9
      49: new           #10                 // class com/yahoo/sketches/theta/HeapAlphaSketch
      52: dup
      53: iload_0
      54: lload_1
      55: fload_3
      56: aload         4
      58: dload         7
      60: lload         9
      62: invokespecial #18                 // Method "<init>":(IJFLcom/yahoo/sketches/ResizeFactor;DJ)V
      65: astore        11
      67: iload_0
      68: iconst_1
      69: iadd
      70: aload         4
      72: iconst_5
      73: invokestatic  #19                 // Method com/yahoo/sketches/Util.startingSubMultiple:(ILcom/yahoo/sketches/ResizeFactor;I)I
      76: istore        12
      78: aload         11
      80: iload         12
      82: putfield      #20                 // Field lgArrLongs_:I
      85: aload         11
      87: iload_0
      88: iload         12
      90: invokestatic  #21                 // Method setHashTableThreshold:(II)I
      93: putfield      #22                 // Field hashTableThreshold_:I
      96: aload         11
      98: iconst_0
      99: putfield      #5                  // Field curCount_:I
     102: aload         11
     104: fload_3
     105: f2d
     106: ldc2_w        #16                 // double 9.223372036854776E18d
     109: dmul
     110: d2l
     111: putfield      #23                 // Field thetaLong_:J
     114: aload         11
     116: iconst_1
     117: putfield      #6                  // Field empty_:Z
     120: aload         11
     122: iconst_1
     123: iload         12
     125: ishl
     126: newarray       long
     128: putfield      #24                 // Field cache_:[J
     131: aload         11
     133: areturn

  static com.yahoo.sketches.theta.HeapAlphaSketch getInstance(com.yahoo.memory.Memory, long);
    Code:
       0: iconst_3
       1: newarray       long
       3: astore_3
       4: aload_0
       5: lconst_0
       6: aload_3
       7: iconst_0
       8: iconst_3
       9: invokeinterface #25,  6           // InterfaceMethod com/yahoo/memory/Memory.getLongArray:(J[JII)V
      14: aload_3
      15: iconst_0
      16: laload
      17: lstore        4
      19: lload         4
      21: invokestatic  #26                 // Method com/yahoo/sketches/theta/PreambleUtil.extractPreLongs:(J)I
      24: istore        6
      26: lload         4
      28: invokestatic  #27                 // Method com/yahoo/sketches/theta/PreambleUtil.extractResizeFactor:(J)I
      31: invokestatic  #28                 // Method com/yahoo/sketches/ResizeFactor.getRF:(I)Lcom/yahoo/sketches/ResizeFactor;
      34: astore        7
      36: lload         4
      38: invokestatic  #29                 // Method com/yahoo/sketches/theta/PreambleUtil.extractSerVer:(J)I
      41: istore        8
      43: lload         4
      45: invokestatic  #30                 // Method com/yahoo/sketches/theta/PreambleUtil.extractFamilyID:(J)I
      48: istore        9
      50: lload         4
      52: invokestatic  #31                 // Method com/yahoo/sketches/theta/PreambleUtil.extractLgNomLongs:(J)I
      55: istore        10
      57: lload         4
      59: invokestatic  #32                 // Method com/yahoo/sketches/theta/PreambleUtil.extractLgArrLongs:(J)I
      62: istore        11
      64: lload         4
      66: invokestatic  #33                 // Method com/yahoo/sketches/theta/PreambleUtil.extractFlags:(J)I
      69: istore        12
      71: lload         4
      73: invokestatic  #34                 // Method com/yahoo/sketches/theta/PreambleUtil.extractSeedHash:(J)I
      76: i2s
      77: istore        13
      79: aload_3
      80: iconst_1
      81: laload
      82: lstore        14
      84: lload         14
      86: invokestatic  #35                 // Method com/yahoo/sketches/theta/PreambleUtil.extractCurCount:(J)I
      89: istore        16
      91: lload         14
      93: invokestatic  #36                 // Method com/yahoo/sketches/theta/PreambleUtil.extractP:(J)F
      96: fstore        17
      98: aload_3
      99: iconst_2
     100: laload
     101: lstore        18
     103: iload         9
     105: invokestatic  #37                 // Method com/yahoo/sketches/Family.idToFamily:(I)Lcom/yahoo/sketches/Family;
     108: astore        20
     110: aload         20
     112: getstatic     #38                 // Field com/yahoo/sketches/Family.ALPHA:Lcom/yahoo/sketches/Family;
     115: invokevirtual #39                 // Method com/yahoo/sketches/Family.equals:(Ljava/lang/Object;)Z
     118: ifeq          160
     121: iload         6
     123: getstatic     #38                 // Field com/yahoo/sketches/Family.ALPHA:Lcom/yahoo/sketches/Family;
     126: invokevirtual #40                 // Method com/yahoo/sketches/Family.getMinPreLongs:()I
     129: if_icmpeq     191
     132: new           #11                 // class com/yahoo/sketches/SketchesArgumentException
     135: dup
     136: new           #41                 // class java/lang/StringBuilder
     139: dup
     140: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
     143: ldc           #43                 // String Possible corruption: Invalid PreambleLongs value for ALPHA:
     145: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     148: iload         6
     150: invokevirtual #45                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     153: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     156: invokespecial #13                 // Method com/yahoo/sketches/SketchesArgumentException."<init>":(Ljava/lang/String;)V
     159: athrow
     160: new           #11                 // class com/yahoo/sketches/SketchesArgumentException
     163: dup
     164: new           #41                 // class java/lang/StringBuilder
     167: dup
     168: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
     171: ldc           #47                 // String Possible corruption: Invalid Family:
     173: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     176: aload         20
     178: invokevirtual #48                 // Method com/yahoo/sketches/Family.toString:()Ljava/lang/String;
     181: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     184: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     187: invokespecial #13                 // Method com/yahoo/sketches/SketchesArgumentException."<init>":(Ljava/lang/String;)V
     190: athrow
     191: iload         8
     193: iconst_3
     194: if_icmpeq     225
     197: new           #11                 // class com/yahoo/sketches/SketchesArgumentException
     200: dup
     201: new           #41                 // class java/lang/StringBuilder
     204: dup
     205: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
     208: ldc           #49                 // String Possible corruption: Invalid Serialization Version:
     210: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     213: iload         8
     215: invokevirtual #45                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     218: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     221: invokespecial #13                 // Method com/yahoo/sketches/SketchesArgumentException."<init>":(Ljava/lang/String;)V
     224: athrow
     225: bipush        27
     227: istore        21
     229: iload         12
     231: bipush        27
     233: iand
     234: ifle          247
     237: new           #11                 // class com/yahoo/sketches/SketchesArgumentException
     240: dup
     241: ldc           #50                 // String Possible corruption: Input srcMem cannot be: big-endian, compact, ordered, or read-only
     243: invokespecial #13                 // Method com/yahoo/sketches/SketchesArgumentException."<init>":(Ljava/lang/String;)V
     246: athrow
     247: iload         13
     249: lload_1
     250: invokestatic  #51                 // Method com/yahoo/sketches/Util.computeSeedHash:(J)S
     253: invokestatic  #52                 // Method com/yahoo/sketches/Util.checkSeedHashes:(SS)V
     256: aload_0
     257: invokeinterface #53,  1           // InterfaceMethod com/yahoo/memory/Memory.getCapacity:()J
     262: lstore        22
     264: iload         11
     266: iload         6
     268: invokestatic  #54                 // Method com/yahoo/sketches/theta/PreambleUtil.getMemBytes:(II)I
     271: istore        24
     273: lload         22
     275: iload         24
     277: i2l
     278: lcmp
     279: ifge          320
     282: new           #11                 // class com/yahoo/sketches/SketchesArgumentException
     285: dup
     286: new           #41                 // class java/lang/StringBuilder
     289: dup
     290: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
     293: ldc           #55                 // String Possible corruption: Current Memory size < min required size:
     295: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     298: lload         22
     300: invokevirtual #56                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     303: ldc           #57                 // String  <
     305: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     308: iload         24
     310: invokevirtual #45                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     313: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     316: invokespecial #13                 // Method com/yahoo/sketches/SketchesArgumentException."<init>":(Ljava/lang/String;)V
     319: athrow
     320: lload         18
     322: l2d
     323: ldc2_w        #16                 // double 9.223372036854776E18d
     326: ddiv
     327: dstore        25
     329: iload         11
     331: iload         10
     333: if_icmpgt     403
     336: dload         25
     338: fload         17
     340: f2d
     341: dcmpg
     342: ifge          403
     345: new           #11                 // class com/yahoo/sketches/SketchesArgumentException
     348: dup
     349: new           #41                 // class java/lang/StringBuilder
     352: dup
     353: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
     356: ldc           #58                 // String Possible corruption: Theta cannot be < p and lgArrLongs <= lgNomLongs.
     358: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     361: iload         11
     363: invokevirtual #45                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     366: ldc           #59                 // String  <=
     368: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     371: iload         10
     373: invokevirtual #45                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     376: ldc           #60                 // String , Theta:
     378: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     381: dload         25
     383: invokevirtual #61                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
     386: ldc           #62                 // String , p:
     388: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     391: fload         17
     393: invokevirtual #63                 // Method java/lang/StringBuilder.append:(F)Ljava/lang/StringBuilder;
     396: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     399: invokespecial #13                 // Method com/yahoo/sketches/SketchesArgumentException."<init>":(Ljava/lang/String;)V
     402: athrow
     403: lconst_1
     404: iload         10
     406: lshl
     407: l2d
     408: dstore        27
     410: dload         27
     412: dload         27
     414: dconst_1
     415: dadd
     416: ddiv
     417: dstore        29
     419: fload         17
     421: f2d
     422: dload         29
     424: dconst_1
     425: dadd
     426: dmul
     427: ldc2_w        #14                 // double 2.0d
     430: ddiv
     431: ldc2_w        #16                 // double 9.223372036854776E18d
     434: dmul
     435: d2l
     436: lstore        31
     438: new           #10                 // class com/yahoo/sketches/theta/HeapAlphaSketch
     441: dup
     442: iload         10
     444: lload_1
     445: fload         17
     447: aload         7
     449: dload         29
     451: lload         31
     453: invokespecial #18                 // Method "<init>":(IJFLcom/yahoo/sketches/ResizeFactor;DJ)V
     456: astore        33
     458: aload         33
     460: iload         11
     462: putfield      #20                 // Field lgArrLongs_:I
     465: aload         33
     467: iload         10
     469: iload         11
     471: invokestatic  #21                 // Method setHashTableThreshold:(II)I
     474: putfield      #22                 // Field hashTableThreshold_:I
     477: aload         33
     479: iload         16
     481: putfield      #5                  // Field curCount_:I
     484: aload         33
     486: lload         18
     488: putfield      #23                 // Field thetaLong_:J
     491: aload         33
     493: iload         12
     495: iconst_4
     496: iand
     497: ifle          504
     500: iconst_1
     501: goto          505
     504: iconst_0
     505: putfield      #6                  // Field empty_:Z
     508: aload         33
     510: iconst_1
     511: iload         11
     513: ishl
     514: newarray       long
     516: putfield      #24                 // Field cache_:[J
     519: aload_0
     520: iload         6
     522: iconst_3
     523: ishl
     524: i2l
     525: aload         33
     527: getfield      #24                 // Field cache_:[J
     530: iconst_0
     531: iconst_1
     532: iload         11
     534: ishl
     535: invokeinterface #25,  6           // InterfaceMethod com/yahoo/memory/Memory.getLongArray:(J[JII)V
     540: aload         33
     542: areturn

  public double getEstimate();
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method isEstimationMode:()Z
       4: ifeq          47
       7: aload_0
       8: iconst_1
       9: invokevirtual #65                 // Method getRetainedEntries:(Z)I
      12: istore_1
      13: aload_0
      14: invokevirtual #66                 // Method getTheta:()D
      17: dstore_2
      18: aload_0
      19: getfield      #23                 // Field thetaLong_:J
      22: aload_0
      23: getfield      #9                  // Field split1_:J
      26: lcmp
      27: ifle          37
      30: iload_1
      31: i2d
      32: dload_2
      33: ddiv
      34: goto          46
      37: iconst_1
      38: aload_0
      39: getfield      #67                 // Field lgNomLongs_:I
      42: ishl
      43: i2d
      44: dload_2
      45: ddiv
      46: dreturn
      47: aload_0
      48: getfield      #5                  // Field curCount_:I
      51: i2d
      52: dreturn

  public double getLowerBound(int);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmplt     10
       5: iload_1
       6: iconst_3
       7: if_icmple     20
      10: new           #11                 // class com/yahoo/sketches/SketchesArgumentException
      13: dup
      14: ldc           #68                 // String numStdDev can only be the values 1, 2 or 3.
      16: invokespecial #13                 // Method com/yahoo/sketches/SketchesArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: invokevirtual #64                 // Method isEstimationMode:()Z
      24: ifeq          98
      27: aload_0
      28: iconst_1
      29: invokevirtual #65                 // Method getRetainedEntries:(Z)I
      32: istore        4
      34: iload         4
      36: ifle          93
      39: aload_0
      40: invokevirtual #69                 // Method getEstimate:()D
      43: dstore        5
      45: iconst_1
      46: aload_0
      47: getfield      #67                 // Field lgNomLongs_:I
      50: ishl
      51: i2d
      52: aload_0
      53: invokevirtual #70                 // Method getP:()F
      56: f2d
      57: aload_0
      58: getfield      #8                  // Field alpha_:D
      61: aload_0
      62: invokevirtual #66                 // Method getTheta:()D
      65: iload         4
      67: invokestatic  #71                 // Method getVariance:(DDDDI)D
      70: dstore        7
      72: dload         5
      74: iload_1
      75: i2d
      76: dload         7
      78: invokestatic  #72                 // Method java/lang/Math.sqrt:(D)D
      81: dmul
      82: dsub
      83: dstore_2
      84: dload_2
      85: dconst_0
      86: invokestatic  #73                 // Method java/lang/Math.max:(DD)D
      89: dstore_2
      90: goto          95
      93: dconst_0
      94: dstore_2
      95: goto          104
      98: aload_0
      99: getfield      #5                  // Field curCount_:I
     102: i2d
     103: dstore_2
     104: dload_2
     105: dreturn

  public int getRetainedEntries(boolean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field curCount_:I
       4: ifle          36
       7: iload_1
       8: ifeq          36
      11: aload_0
      12: invokevirtual #74                 // Method isDirty:()Z
      15: ifeq          36
      18: aload_0
      19: invokevirtual #75                 // Method getCache:()[J
      22: aload_0
      23: invokevirtual #76                 // Method getLgArrLongs:()I
      26: aload_0
      27: invokevirtual #77                 // Method getThetaLong:()J
      30: invokestatic  #78                 // Method com/yahoo/sketches/HashOperations.countPart:([JIJ)I
      33: istore_2
      34: iload_2
      35: ireturn
      36: aload_0
      37: getfield      #5                  // Field curCount_:I
      40: ireturn

  public double getUpperBound(int);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmplt     10
       5: iload_1
       6: iconst_3
       7: if_icmple     20
      10: new           #11                 // class com/yahoo/sketches/SketchesArgumentException
      13: dup
      14: ldc           #68                 // String numStdDev can only be the values 1, 2 or 3.
      16: invokespecial #13                 // Method com/yahoo/sketches/SketchesArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: invokevirtual #64                 // Method isEstimationMode:()Z
      24: ifeq          69
      27: iconst_1
      28: aload_0
      29: getfield      #67                 // Field lgNomLongs_:I
      32: ishl
      33: i2d
      34: aload_0
      35: invokevirtual #70                 // Method getP:()F
      38: f2d
      39: aload_0
      40: getfield      #8                  // Field alpha_:D
      43: aload_0
      44: invokevirtual #66                 // Method getTheta:()D
      47: aload_0
      48: iconst_1
      49: invokevirtual #65                 // Method getRetainedEntries:(Z)I
      52: invokestatic  #71                 // Method getVariance:(DDDDI)D
      55: dstore_2
      56: aload_0
      57: invokevirtual #69                 // Method getEstimate:()D
      60: iload_1
      61: i2d
      62: dload_2
      63: invokestatic  #72                 // Method java/lang/Math.sqrt:(D)D
      66: dmul
      67: dadd
      68: dreturn
      69: aload_0
      70: getfield      #5                  // Field curCount_:I
      73: i2d
      74: dreturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #6                  // Field empty_:Z
       4: ireturn

  public byte[] toByteArray();
    Code:
       0: aload_0
       1: getstatic     #38                 // Field com/yahoo/sketches/Family.ALPHA:Lcom/yahoo/sketches/Family;
       4: invokevirtual #40                 // Method com/yahoo/sketches/Family.getMinPreLongs:()I
       7: getstatic     #38                 // Field com/yahoo/sketches/Family.ALPHA:Lcom/yahoo/sketches/Family;
      10: invokevirtual #79                 // Method com/yahoo/sketches/Family.getID:()I
      13: i2b
      14: invokevirtual #80                 // Method toByteArray:(IB)[B
      17: areturn

  public com.yahoo.sketches.Family getFamily();
    Code:
       0: getstatic     #38                 // Field com/yahoo/sketches/Family.ALPHA:Lcom/yahoo/sketches/Family;
       3: areturn

  public com.yahoo.sketches.theta.UpdateSketch rebuild();
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method isDirty:()Z
       4: ifeq          11
       7: aload_0
       8: invokespecial #81                 // Method rebuildDirty:()V
      11: aload_0
      12: areturn

  public final void reset();
    Code:
       0: aload_0
       1: getfield      #67                 // Field lgNomLongs_:I
       4: iconst_1
       5: iadd
       6: aload_0
       7: invokevirtual #82                 // Method getResizeFactor:()Lcom/yahoo/sketches/ResizeFactor;
      10: iconst_5
      11: invokestatic  #19                 // Method com/yahoo/sketches/Util.startingSubMultiple:(ILcom/yahoo/sketches/ResizeFactor;I)I
      14: istore_1
      15: iload_1
      16: aload_0
      17: getfield      #20                 // Field lgArrLongs_:I
      20: if_icmpne     64
      23: aload_0
      24: getfield      #24                 // Field cache_:[J
      27: arraylength
      28: istore_2
      29: getstatic     #83                 // Field $assertionsDisabled:Z
      32: ifne          53
      35: iconst_1
      36: aload_0
      37: getfield      #20                 // Field lgArrLongs_:I
      40: ishl
      41: iload_2
      42: if_icmpeq     53
      45: new           #84                 // class java/lang/AssertionError
      48: dup
      49: invokespecial #85                 // Method java/lang/AssertionError."<init>":()V
      52: athrow
      53: aload_0
      54: getfield      #24                 // Field cache_:[J
      57: lconst_0
      58: invokestatic  #86                 // Method java/util/Arrays.fill:([JJ)V
      61: goto          78
      64: aload_0
      65: iconst_1
      66: iload_1
      67: ishl
      68: newarray       long
      70: putfield      #24                 // Field cache_:[J
      73: aload_0
      74: iload_1
      75: putfield      #20                 // Field lgArrLongs_:I
      78: aload_0
      79: aload_0
      80: getfield      #67                 // Field lgNomLongs_:I
      83: aload_0
      84: getfield      #20                 // Field lgArrLongs_:I
      87: invokestatic  #21                 // Method setHashTableThreshold:(II)I
      90: putfield      #22                 // Field hashTableThreshold_:I
      93: aload_0
      94: iconst_1
      95: putfield      #6                  // Field empty_:Z
      98: aload_0
      99: iconst_0
     100: putfield      #5                  // Field curCount_:I
     103: aload_0
     104: aload_0
     105: invokevirtual #70                 // Method getP:()F
     108: f2d
     109: ldc2_w        #16                 // double 9.223372036854776E18d
     112: dmul
     113: d2l
     114: putfield      #23                 // Field thetaLong_:J
     117: aload_0
     118: iconst_0
     119: putfield      #7                  // Field dirty_:Z
     122: return

  int getPreambleLongs();
    Code:
       0: getstatic     #38                 // Field com/yahoo/sketches/Family.ALPHA:Lcom/yahoo/sketches/Family;
       3: invokevirtual #40                 // Method com/yahoo/sketches/Family.getMinPreLongs:()I
       6: ireturn

  com.yahoo.memory.Memory getMemory();
    Code:
       0: aconst_null
       1: areturn

  long getThetaLong();
    Code:
       0: aload_0
       1: getfield      #23                 // Field thetaLong_:J
       4: lreturn

  boolean isDirty();
    Code:
       0: aload_0
       1: getfield      #7                  // Field dirty_:Z
       4: ireturn

  long[] getCache();
    Code:
       0: aload_0
       1: getfield      #24                 // Field cache_:[J
       4: areturn

  int getLgArrLongs();
    Code:
       0: aload_0
       1: getfield      #20                 // Field lgArrLongs_:I
       4: ireturn

  com.yahoo.sketches.theta.UpdateReturnState hashUpdate(long);
    Code:
       0: lload_1
       1: invokestatic  #87                 // Method com/yahoo/sketches/HashOperations.checkHashCorruption:(J)V
       4: aload_0
       5: iconst_0
       6: putfield      #6                  // Field empty_:Z
       9: aload_0
      10: getfield      #23                 // Field thetaLong_:J
      13: lload_1
      14: invokestatic  #88                 // Method com/yahoo/sketches/HashOperations.continueCondition:(JJ)Z
      17: ifeq          24
      20: getstatic     #89                 // Field com/yahoo/sketches/theta/UpdateReturnState.RejectedOverTheta:Lcom/yahoo/sketches/theta/UpdateReturnState;
      23: areturn
      24: aload_0
      25: getfield      #7                  // Field dirty_:Z
      28: ifeq          41
      31: aload_0
      32: aload_0
      33: getfield      #24                 // Field cache_:[J
      36: lload_1
      37: invokespecial #90                 // Method enhancedHashInsert:([JJ)Lcom/yahoo/sketches/theta/UpdateReturnState;
      40: areturn
      41: aload_0
      42: getfield      #24                 // Field cache_:[J
      45: aload_0
      46: getfield      #20                 // Field lgArrLongs_:I
      49: lload_1
      50: invokestatic  #91                 // Method com/yahoo/sketches/HashOperations.hashSearchOrInsert:([JIJ)I
      53: iflt          60
      56: getstatic     #92                 // Field com/yahoo/sketches/theta/UpdateReturnState.RejectedDuplicate:Lcom/yahoo/sketches/theta/UpdateReturnState;
      59: areturn
      60: aload_0
      61: dup
      62: getfield      #5                  // Field curCount_:I
      65: iconst_1
      66: iadd
      67: putfield      #5                  // Field curCount_:I
      70: aload_0
      71: getfield      #23                 // Field thetaLong_:J
      74: aload_0
      75: getfield      #9                  // Field split1_:J
      78: lcmp
      79: ifle          86
      82: iconst_0
      83: goto          87
      86: iconst_1
      87: istore_3
      88: iload_3
      89: ifne          146
      92: aload_0
      93: getfield      #5                  // Field curCount_:I
      96: iconst_1
      97: aload_0
      98: getfield      #67                 // Field lgNomLongs_:I
     101: ishl
     102: if_icmple     128
     105: aload_0
     106: aload_0
     107: getfield      #23                 // Field thetaLong_:J
     110: l2d
     111: aload_0
     112: getfield      #8                  // Field alpha_:D
     115: dmul
     116: d2l
     117: putfield      #23                 // Field thetaLong_:J
     120: aload_0
     121: iconst_1
     122: putfield      #7                  // Field dirty_:Z
     125: goto          240
     128: aload_0
     129: getfield      #5                  // Field curCount_:I
     132: aload_0
     133: getfield      #22                 // Field hashTableThreshold_:I
     136: if_icmple     240
     139: aload_0
     140: invokespecial #93                 // Method resizeClean:()V
     143: goto          240
     146: getstatic     #83                 // Field $assertionsDisabled:Z
     149: ifne          205
     152: aload_0
     153: getfield      #20                 // Field lgArrLongs_:I
     156: aload_0
     157: getfield      #67                 // Field lgNomLongs_:I
     160: if_icmpgt     205
     163: new           #84                 // class java/lang/AssertionError
     166: dup
     167: new           #41                 // class java/lang/StringBuilder
     170: dup
     171: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
     174: ldc           #94                 // String lgArr:
     176: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     179: aload_0
     180: getfield      #20                 // Field lgArrLongs_:I
     183: invokevirtual #45                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     186: ldc           #95                 // String , lgNom:
     188: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: aload_0
     192: getfield      #67                 // Field lgNomLongs_:I
     195: invokevirtual #45                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     198: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     201: invokespecial #96                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     204: athrow
     205: aload_0
     206: aload_0
     207: getfield      #23                 // Field thetaLong_:J
     210: l2d
     211: aload_0
     212: getfield      #8                  // Field alpha_:D
     215: dmul
     216: d2l
     217: putfield      #23                 // Field thetaLong_:J
     220: aload_0
     221: iconst_1
     222: putfield      #7                  // Field dirty_:Z
     225: aload_0
     226: getfield      #5                  // Field curCount_:I
     229: aload_0
     230: getfield      #22                 // Field hashTableThreshold_:I
     233: if_icmple     240
     236: aload_0
     237: invokespecial #81                 // Method rebuildDirty:()V
     240: getstatic     #97                 // Field com/yahoo/sketches/theta/UpdateReturnState.InsertedCountIncremented:Lcom/yahoo/sketches/theta/UpdateReturnState;
     243: areturn

  private final com.yahoo.sketches.theta.UpdateReturnState enhancedHashInsert(long[], long);
    Code:
       0: iconst_1
       1: aload_0
       2: getfield      #20                 // Field lgArrLongs_:I
       5: ishl
       6: iconst_1
       7: isub
       8: istore        4
      10: iconst_2
      11: lload_2
      12: aload_0
      13: getfield      #20                 // Field lgArrLongs_:I
      16: lshr
      17: ldc2_w        #98                 // long 127l
      20: land
      21: l2i
      22: imul
      23: iconst_1
      24: iadd
      25: istore        5
      27: lload_2
      28: iload         4
      30: i2l
      31: land
      32: l2i
      33: istore        6
      35: aload_1
      36: iload         6
      38: laload
      39: lstore        7
      41: lload         7
      43: lload_2
      44: lcmp
      45: ifeq          222
      48: lload         7
      50: lconst_0
      51: lcmp
      52: ifeq          222
      55: lload         7
      57: aload_0
      58: getfield      #23                 // Field thetaLong_:J
      61: lcmp
      62: iflt          179
      65: iload         6
      67: istore        9
      69: iload         6
      71: iload         5
      73: iadd
      74: iload         4
      76: iand
      77: istore        6
      79: aload_1
      80: iload         6
      82: laload
      83: lstore        7
      85: lload         7
      87: lload_2
      88: lcmp
      89: ifeq          118
      92: lload         7
      94: lconst_0
      95: lcmp
      96: ifeq          118
      99: iload         6
     101: iload         5
     103: iadd
     104: iload         4
     106: iand
     107: istore        6
     109: aload_1
     110: iload         6
     112: laload
     113: lstore        7
     115: goto          85
     118: lload         7
     120: lload_2
     121: lcmp
     122: ifne          129
     125: getstatic     #92                 // Field com/yahoo/sketches/theta/UpdateReturnState.RejectedDuplicate:Lcom/yahoo/sketches/theta/UpdateReturnState;
     128: areturn
     129: getstatic     #83                 // Field $assertionsDisabled:Z
     132: ifne          150
     135: lload         7
     137: lconst_0
     138: lcmp
     139: ifeq          150
     142: new           #84                 // class java/lang/AssertionError
     145: dup
     146: invokespecial #85                 // Method java/lang/AssertionError."<init>":()V
     149: athrow
     150: aload_1
     151: iload         9
     153: lload_2
     154: lastore
     155: aload_0
     156: aload_0
     157: getfield      #23                 // Field thetaLong_:J
     160: l2d
     161: aload_0
     162: getfield      #8                  // Field alpha_:D
     165: dmul
     166: d2l
     167: putfield      #23                 // Field thetaLong_:J
     170: aload_0
     171: iconst_1
     172: putfield      #7                  // Field dirty_:Z
     175: getstatic     #100                // Field com/yahoo/sketches/theta/UpdateReturnState.InsertedCountNotIncremented:Lcom/yahoo/sketches/theta/UpdateReturnState;
     178: areturn
     179: getstatic     #83                 // Field $assertionsDisabled:Z
     182: ifne          203
     185: lload         7
     187: aload_0
     188: getfield      #23                 // Field thetaLong_:J
     191: lcmp
     192: iflt          203
     195: new           #84                 // class java/lang/AssertionError
     198: dup
     199: invokespecial #85                 // Method java/lang/AssertionError."<init>":()V
     202: athrow
     203: iload         6
     205: iload         5
     207: iadd
     208: iload         4
     210: iand
     211: istore        6
     213: aload_1
     214: iload         6
     216: laload
     217: lstore        7
     219: goto          41
     222: lload         7
     224: lload_2
     225: lcmp
     226: ifne          233
     229: getstatic     #92                 // Field com/yahoo/sketches/theta/UpdateReturnState.RejectedDuplicate:Lcom/yahoo/sketches/theta/UpdateReturnState;
     232: areturn
     233: getstatic     #83                 // Field $assertionsDisabled:Z
     236: ifne          254
     239: lload         7
     241: lconst_0
     242: lcmp
     243: ifeq          254
     246: new           #84                 // class java/lang/AssertionError
     249: dup
     250: invokespecial #85                 // Method java/lang/AssertionError."<init>":()V
     253: athrow
     254: aload_1
     255: iload         6
     257: lload_2
     258: lastore
     259: aload_0
     260: aload_0
     261: getfield      #23                 // Field thetaLong_:J
     264: l2d
     265: aload_0
     266: getfield      #8                  // Field alpha_:D
     269: dmul
     270: d2l
     271: putfield      #23                 // Field thetaLong_:J
     274: aload_0
     275: iconst_1
     276: putfield      #7                  // Field dirty_:Z
     279: aload_0
     280: dup
     281: getfield      #5                  // Field curCount_:I
     284: iconst_1
     285: iadd
     286: dup_x1
     287: putfield      #5                  // Field curCount_:I
     290: aload_0
     291: getfield      #22                 // Field hashTableThreshold_:I
     294: if_icmple     301
     297: aload_0
     298: invokespecial #81                 // Method rebuildDirty:()V
     301: getstatic     #97                 // Field com/yahoo/sketches/theta/UpdateReturnState.InsertedCountIncremented:Lcom/yahoo/sketches/theta/UpdateReturnState;
     304: areturn

  private final void rebuildDirty();
    Code:
       0: aload_0
       1: getfield      #5                  // Field curCount_:I
       4: istore_1
       5: aload_0
       6: invokespecial #101                // Method forceRebuildDirtyCache:()V
       9: iload_1
      10: aload_0
      11: getfield      #5                  // Field curCount_:I
      14: if_icmpne     22
      17: aload_0
      18: iconst_1
      19: invokespecial #102                // Method forceResizeCleanCache:(I)V
      22: return

  private final void resizeClean();
    Code:
       0: aload_0
       1: getfield      #67                 // Field lgNomLongs_:I
       4: iconst_1
       5: iadd
       6: istore_1
       7: iload_1
       8: aload_0
       9: getfield      #20                 // Field lgArrLongs_:I
      12: if_icmple     50
      15: aload_0
      16: invokevirtual #82                 // Method getResizeFactor:()Lcom/yahoo/sketches/ResizeFactor;
      19: astore_2
      20: iload_1
      21: aload_0
      22: getfield      #20                 // Field lgArrLongs_:I
      25: isub
      26: istore_3
      27: aload_2
      28: invokevirtual #103                // Method com/yahoo/sketches/ResizeFactor.lg:()I
      31: iload_3
      32: invokestatic  #104                // Method java/lang/Math.min:(II)I
      35: iconst_1
      36: invokestatic  #105                // Method java/lang/Math.max:(II)I
      39: istore        4
      41: aload_0
      42: iload         4
      44: invokespecial #102                // Method forceResizeCleanCache:(I)V
      47: goto          55
      50: aload_0
      51: iconst_1
      52: invokespecial #102                // Method forceResizeCleanCache:(I)V
      55: return

  private final void forceResizeCleanCache(int);
    Code:
       0: getstatic     #83                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: getfield      #7                  // Field dirty_:Z
      10: ifeq          21
      13: new           #84                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #85                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: dup
      23: getfield      #20                 // Field lgArrLongs_:I
      26: iload_1
      27: iadd
      28: putfield      #20                 // Field lgArrLongs_:I
      31: iconst_1
      32: aload_0
      33: getfield      #20                 // Field lgArrLongs_:I
      36: ishl
      37: newarray       long
      39: astore_2
      40: aload_0
      41: getfield      #24                 // Field cache_:[J
      44: aload_2
      45: aload_0
      46: getfield      #20                 // Field lgArrLongs_:I
      49: aload_0
      50: getfield      #23                 // Field thetaLong_:J
      53: invokestatic  #106                // Method com/yahoo/sketches/HashOperations.hashArrayInsert:([J[JIJ)I
      56: istore_3
      57: getstatic     #83                 // Field $assertionsDisabled:Z
      60: ifne          79
      63: aload_0
      64: getfield      #5                  // Field curCount_:I
      67: iload_3
      68: if_icmpeq     79
      71: new           #84                 // class java/lang/AssertionError
      74: dup
      75: invokespecial #85                 // Method java/lang/AssertionError."<init>":()V
      78: athrow
      79: aload_0
      80: iload_3
      81: putfield      #5                  // Field curCount_:I
      84: aload_0
      85: aload_2
      86: putfield      #24                 // Field cache_:[J
      89: aload_0
      90: aload_0
      91: getfield      #67                 // Field lgNomLongs_:I
      94: aload_0
      95: getfield      #20                 // Field lgArrLongs_:I
      98: invokestatic  #21                 // Method setHashTableThreshold:(II)I
     101: putfield      #22                 // Field hashTableThreshold_:I
     104: return

  private final void forceRebuildDirtyCache();
    Code:
       0: iconst_1
       1: aload_0
       2: getfield      #20                 // Field lgArrLongs_:I
       5: ishl
       6: newarray       long
       8: astore_1
       9: aload_0
      10: aload_0
      11: getfield      #24                 // Field cache_:[J
      14: aload_1
      15: aload_0
      16: getfield      #20                 // Field lgArrLongs_:I
      19: aload_0
      20: getfield      #23                 // Field thetaLong_:J
      23: invokestatic  #106                // Method com/yahoo/sketches/HashOperations.hashArrayInsert:([J[JIJ)I
      26: putfield      #5                  // Field curCount_:I
      29: aload_0
      30: aload_1
      31: putfield      #24                 // Field cache_:[J
      34: aload_0
      35: iconst_0
      36: putfield      #7                  // Field dirty_:Z
      39: return

  private static final double getVariance(double, double, double, double, int);
    Code:
       0: dload_0
       1: dconst_1
       2: dadd
       3: dstore        9
       5: dconst_1
       6: dload_2
       7: ddiv
       8: dstore        11
      10: dload         11
      12: dload         11
      14: dmul
      15: dstore        13
      17: dload         13
      19: dload         11
      21: dsub
      22: dstore        15
      24: dload         6
      26: dload         4
      28: dload_2
      29: invokestatic  #107                // Method getR:(DDD)I
      32: istore        17
      34: iload         17
      36: ifne          50
      39: iload         8
      41: i2d
      42: dload         15
      44: dmul
      45: dstore        18
      47: goto          146
      50: iload         17
      52: iconst_1
      53: if_icmpne     66
      56: dload         9
      58: dload         15
      60: dmul
      61: dstore        18
      63: goto          146
      66: dconst_1
      67: dload         4
      69: ddiv
      70: dstore        20
      72: dload         20
      74: dload         20
      76: dmul
      77: dstore        22
      79: dload_2
      80: dload         6
      82: ddiv
      83: dstore        24
      85: dload         24
      87: dload         24
      89: dmul
      90: dstore        26
      92: dload         9
      94: dload         15
      96: dmul
      97: dstore        28
      99: dload         11
     101: dconst_1
     102: dload         22
     104: dsub
     105: ddiv
     106: dstore        30
     108: dload         11
     110: dload         22
     112: dmul
     113: dload         11
     115: dload         26
     117: dmul
     118: dsub
     119: dload         20
     121: dsub
     122: dload         22
     124: dsub
     125: dload         24
     127: dadd
     128: dload         24
     130: dload         20
     132: dmul
     133: dadd
     134: dstore        32
     136: dload         28
     138: dload         30
     140: dload         32
     142: dmul
     143: dadd
     144: dstore        18
     146: dconst_1
     147: dload         6
     149: dsub
     150: dload         6
     152: dload         6
     154: dmul
     155: ddiv
     156: dstore        20
     158: dload         18
     160: dload         20
     162: dadd
     163: dreturn

  private static final int getR(double, double, double);
    Code:
       0: dload         4
       2: dload_2
       3: dconst_1
       4: dadd
       5: dmul
       6: ldc2_w        #14                 // double 2.0d
       9: ddiv
      10: dstore        6
      12: dload_0
      13: dload         6
      15: dcmpl
      16: ifle          21
      19: iconst_0
      20: ireturn
      21: dload_0
      22: dload_2
      23: dload         6
      25: dmul
      26: dcmpl
      27: ifle          32
      30: iconst_1
      31: ireturn
      32: iconst_2
      33: ireturn

  private static final int setHashTableThreshold(int, int);
    Code:
       0: iload_1
       1: iload_0
       2: if_icmpgt     11
       5: ldc2_w        #108                // double 0.5d
       8: goto          14
      11: ldc2_w        #110                // double 0.9375d
      14: dstore_2
      15: dload_2
      16: iconst_1
      17: iload_1
      18: ishl
      19: i2d
      20: dmul
      21: invokestatic  #112                // Method java/lang/Math.floor:(D)D
      24: d2i
      25: ireturn

  static {};
    Code:
       0: ldc           #10                 // class com/yahoo/sketches/theta/HeapAlphaSketch
       2: invokevirtual #113                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #83                 // Field $assertionsDisabled:Z
      16: return
}
