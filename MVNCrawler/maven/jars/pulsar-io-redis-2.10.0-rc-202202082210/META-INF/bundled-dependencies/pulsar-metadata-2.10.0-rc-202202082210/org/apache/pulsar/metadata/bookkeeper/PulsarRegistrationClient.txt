Compiled from "PulsarRegistrationClient.java"
public class org.apache.pulsar.metadata.bookkeeper.PulsarRegistrationClient implements org.apache.bookkeeper.discover.RegistrationClient {
  private final org.apache.pulsar.metadata.api.MetadataStore store;

  private final java.lang.String ledgersRootPath;

  private final java.lang.String bookieRegistrationPath;

  private final java.lang.String bookieAllRegistrationPath;

  private final java.lang.String bookieReadonlyRegistrationPath;

  private final java.util.Map<org.apache.bookkeeper.discover.RegistrationClient$RegistrationListener, java.lang.Boolean> writableBookiesWatchers;

  private final java.util.Map<org.apache.bookkeeper.discover.RegistrationClient$RegistrationListener, java.lang.Boolean> readOnlyBookiesWatchers;

  public org.apache.pulsar.metadata.bookkeeper.PulsarRegistrationClient(org.apache.pulsar.metadata.api.MetadataStore, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #5                  // Field writableBookiesWatchers:Ljava/util/Map;
      15: aload_0
      16: new           #3                  // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      23: putfield      #6                  // Field readOnlyBookiesWatchers:Ljava/util/Map;
      26: aload_0
      27: aload_1
      28: putfield      #7                  // Field store:Lorg/apache/pulsar/metadata/api/MetadataStore;
      31: aload_0
      32: aload_2
      33: putfield      #8                  // Field ledgersRootPath:Ljava/lang/String;
      36: aload_0
      37: new           #9                  // class java/lang/StringBuilder
      40: dup
      41: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      44: aload_2
      45: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: ldc           #12                 // String /
      50: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: ldc           #13                 // String available
      55: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: putfield      #15                 // Field bookieRegistrationPath:Ljava/lang/String;
      64: aload_0
      65: new           #9                  // class java/lang/StringBuilder
      68: dup
      69: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      72: aload_2
      73: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: ldc           #12                 // String /
      78: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc           #16                 // String cookies
      83: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: putfield      #17                 // Field bookieAllRegistrationPath:Ljava/lang/String;
      92: aload_0
      93: new           #9                  // class java/lang/StringBuilder
      96: dup
      97: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     100: aload_0
     101: getfield      #15                 // Field bookieRegistrationPath:Ljava/lang/String;
     104: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: ldc           #12                 // String /
     109: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: ldc           #18                 // String readonly
     114: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     120: putfield      #19                 // Field bookieReadonlyRegistrationPath:Ljava/lang/String;
     123: aload_1
     124: aload_0
     125: invokedynamic #20,  0             // InvokeDynamic #0:accept:(Lorg/apache/pulsar/metadata/bookkeeper/PulsarRegistrationClient;)Ljava/util/function/Consumer;
     130: invokeinterface #21,  2           // InterfaceMethod org/apache/pulsar/metadata/api/MetadataStore.registerListener:(Ljava/util/function/Consumer;)V
     135: return

  public void close();
    Code:
       0: return

  public java.util.concurrent.CompletableFuture<org.apache.bookkeeper.versioning.Versioned<java.util.Set<org.apache.bookkeeper.net.BookieId>>> getWritableBookies();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #15                 // Field bookieRegistrationPath:Ljava/lang/String;
       5: invokespecial #22                 // Method getChildren:(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
       8: areturn

  public java.util.concurrent.CompletableFuture<org.apache.bookkeeper.versioning.Versioned<java.util.Set<org.apache.bookkeeper.net.BookieId>>> getAllBookies();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method getWritableBookies:()Ljava/util/concurrent/CompletableFuture;
       4: astore_1
       5: aload_0
       6: invokevirtual #24                 // Method getReadOnlyBookies:()Ljava/util/concurrent/CompletableFuture;
       9: astore_2
      10: aload_1
      11: aload_2
      12: invokedynamic #25,  0             // InvokeDynamic #1:apply:()Ljava/util/function/BiFunction;
      17: invokevirtual #26                 // Method java/util/concurrent/CompletableFuture.thenCombine:(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture;
      20: areturn

  public java.util.concurrent.CompletableFuture<org.apache.bookkeeper.versioning.Versioned<java.util.Set<org.apache.bookkeeper.net.BookieId>>> getReadOnlyBookies();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #19                 // Field bookieReadonlyRegistrationPath:Ljava/lang/String;
       5: invokespecial #22                 // Method getChildren:(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
       8: areturn

  private java.util.concurrent.CompletableFuture<org.apache.bookkeeper.versioning.Versioned<java.util.Set<org.apache.bookkeeper.net.BookieId>>> getChildren(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field store:Lorg/apache/pulsar/metadata/api/MetadataStore;
       4: aload_1
       5: invokeinterface #27,  2           // InterfaceMethod org/apache/pulsar/metadata/api/MetadataStore.getChildren:(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
      10: invokedynamic #28,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      15: invokevirtual #29                 // Method java/util/concurrent/CompletableFuture.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      18: invokedynamic #30,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      23: invokevirtual #29                 // Method java/util/concurrent/CompletableFuture.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      26: areturn

  public java.util.concurrent.CompletableFuture<java.lang.Void> watchWritableBookies(org.apache.bookkeeper.discover.RegistrationClient$RegistrationListener);
    Code:
       0: aload_0
       1: getfield      #5                  // Field writableBookiesWatchers:Ljava/util/Map;
       4: aload_1
       5: getstatic     #31                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
       8: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: invokevirtual #23                 // Method getWritableBookies:()Ljava/util/concurrent/CompletableFuture;
      18: aload_1
      19: dup
      20: invokevirtual #33                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      23: pop
      24: invokedynamic #34,  0             // InvokeDynamic #4:accept:(Lorg/apache/bookkeeper/discover/RegistrationClient$RegistrationListener;)Ljava/util/function/Consumer;
      29: invokevirtual #35                 // Method java/util/concurrent/CompletableFuture.thenAccept:(Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;
      32: areturn

  public void unwatchWritableBookies(org.apache.bookkeeper.discover.RegistrationClient$RegistrationListener);
    Code:
       0: aload_0
       1: getfield      #5                  // Field writableBookiesWatchers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #36,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return

  public java.util.concurrent.CompletableFuture<java.lang.Void> watchReadOnlyBookies(org.apache.bookkeeper.discover.RegistrationClient$RegistrationListener);
    Code:
       0: aload_0
       1: getfield      #6                  // Field readOnlyBookiesWatchers:Ljava/util/Map;
       4: aload_1
       5: getstatic     #31                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
       8: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: invokevirtual #24                 // Method getReadOnlyBookies:()Ljava/util/concurrent/CompletableFuture;
      18: aload_1
      19: dup
      20: invokevirtual #33                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      23: pop
      24: invokedynamic #34,  0             // InvokeDynamic #4:accept:(Lorg/apache/bookkeeper/discover/RegistrationClient$RegistrationListener;)Ljava/util/function/Consumer;
      29: invokevirtual #35                 // Method java/util/concurrent/CompletableFuture.thenAccept:(Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;
      32: areturn

  public void unwatchReadOnlyBookies(org.apache.bookkeeper.discover.RegistrationClient$RegistrationListener);
    Code:
       0: aload_0
       1: getfield      #6                  // Field readOnlyBookiesWatchers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #36,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return

  private void updatedBookies(org.apache.pulsar.metadata.api.Notification);
    Code:
       0: aload_1
       1: invokevirtual #37                 // Method org/apache/pulsar/metadata/api/Notification.getType:()Lorg/apache/pulsar/metadata/api/NotificationType;
       4: getstatic     #38                 // Field org/apache/pulsar/metadata/api/NotificationType.Created:Lorg/apache/pulsar/metadata/api/NotificationType;
       7: if_acmpeq     20
      10: aload_1
      11: invokevirtual #37                 // Method org/apache/pulsar/metadata/api/Notification.getType:()Lorg/apache/pulsar/metadata/api/NotificationType;
      14: getstatic     #39                 // Field org/apache/pulsar/metadata/api/NotificationType.Deleted:Lorg/apache/pulsar/metadata/api/NotificationType;
      17: if_acmpne     79
      20: aload_1
      21: invokevirtual #40                 // Method org/apache/pulsar/metadata/api/Notification.getPath:()Ljava/lang/String;
      24: aload_0
      25: getfield      #19                 // Field bookieReadonlyRegistrationPath:Ljava/lang/String;
      28: invokevirtual #41                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      31: ifeq          51
      34: aload_0
      35: invokevirtual #24                 // Method getReadOnlyBookies:()Ljava/util/concurrent/CompletableFuture;
      38: aload_0
      39: invokedynamic #42,  0             // InvokeDynamic #5:accept:(Lorg/apache/pulsar/metadata/bookkeeper/PulsarRegistrationClient;)Ljava/util/function/Consumer;
      44: invokevirtual #35                 // Method java/util/concurrent/CompletableFuture.thenAccept:(Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;
      47: pop
      48: goto          79
      51: aload_1
      52: invokevirtual #40                 // Method org/apache/pulsar/metadata/api/Notification.getPath:()Ljava/lang/String;
      55: aload_0
      56: getfield      #15                 // Field bookieRegistrationPath:Ljava/lang/String;
      59: invokevirtual #41                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      62: ifeq          79
      65: aload_0
      66: invokevirtual #23                 // Method getWritableBookies:()Ljava/util/concurrent/CompletableFuture;
      69: aload_0
      70: invokedynamic #43,  0             // InvokeDynamic #6:accept:(Lorg/apache/pulsar/metadata/bookkeeper/PulsarRegistrationClient;)Ljava/util/function/Consumer;
      75: invokevirtual #35                 // Method java/util/concurrent/CompletableFuture.thenAccept:(Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;
      78: pop
      79: return

  private static java.util.Set<org.apache.bookkeeper.net.BookieId> convertToBookieAddresses(java.util.List<java.lang.String>);
    Code:
       0: new           #44                 // class java/util/HashSet
       3: dup
       4: invokespecial #45                 // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: invokeinterface #46,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          62
      24: aload_2
      25: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #49                 // class java/lang/String
      33: astore_3
      34: ldc           #18                 // String readonly
      36: aload_3
      37: invokevirtual #50                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      40: ifeq          46
      43: goto          15
      46: aload_3
      47: invokestatic  #51                 // Method org/apache/bookkeeper/net/BookieId.parse:(Ljava/lang/String;)Lorg/apache/bookkeeper/net/BookieId;
      50: astore        4
      52: aload_1
      53: aload         4
      55: invokevirtual #52                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      58: pop
      59: goto          15
      62: aload_1
      63: areturn

  private void lambda$updatedBookies$5(org.apache.bookkeeper.versioning.Versioned);
    Code:
       0: aload_0
       1: getfield      #5                  // Field writableBookiesWatchers:Ljava/util/Map;
       4: invokeinterface #53,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: aload_1
      10: invokedynamic #54,  0             // InvokeDynamic #7:accept:(Lorg/apache/bookkeeper/versioning/Versioned;)Ljava/util/function/Consumer;
      15: invokeinterface #55,  2           // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V
      20: return

  private static void lambda$null$4(org.apache.bookkeeper.versioning.Versioned, org.apache.bookkeeper.discover.RegistrationClient$RegistrationListener);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #56,  2           // InterfaceMethod org/apache/bookkeeper/discover/RegistrationClient$RegistrationListener.onBookiesChanged:(Lorg/apache/bookkeeper/versioning/Versioned;)V
       7: return

  private void lambda$updatedBookies$3(org.apache.bookkeeper.versioning.Versioned);
    Code:
       0: aload_0
       1: getfield      #6                  // Field readOnlyBookiesWatchers:Ljava/util/Map;
       4: invokeinterface #53,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: aload_1
      10: invokedynamic #57,  0             // InvokeDynamic #8:accept:(Lorg/apache/bookkeeper/versioning/Versioned;)Ljava/util/function/Consumer;
      15: invokeinterface #55,  2           // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V
      20: return

  private static void lambda$null$2(org.apache.bookkeeper.versioning.Versioned, org.apache.bookkeeper.discover.RegistrationClient$RegistrationListener);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #56,  2           // InterfaceMethod org/apache/bookkeeper/discover/RegistrationClient$RegistrationListener.onBookiesChanged:(Lorg/apache/bookkeeper/versioning/Versioned;)V
       7: return

  private static org.apache.bookkeeper.versioning.Versioned lambda$getChildren$1(java.util.Set);
    Code:
       0: new           #58                 // class org/apache/bookkeeper/versioning/Versioned
       3: dup
       4: aload_0
       5: getstatic     #59                 // Field org/apache/bookkeeper/versioning/Version.NEW:Lorg/apache/bookkeeper/versioning/Version;
       8: invokespecial #60                 // Method org/apache/bookkeeper/versioning/Versioned."<init>":(Ljava/lang/Object;Lorg/apache/bookkeeper/versioning/Version;)V
      11: areturn

  private static org.apache.bookkeeper.versioning.Versioned lambda$getAllBookies$0(org.apache.bookkeeper.versioning.Versioned, org.apache.bookkeeper.versioning.Versioned);
    Code:
       0: new           #44                 // class java/util/HashSet
       3: dup
       4: invokespecial #45                 // Method java/util/HashSet."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_0
      10: invokevirtual #61                 // Method org/apache/bookkeeper/versioning/Versioned.getValue:()Ljava/lang/Object;
      13: checkcast     #62                 // class java/util/Collection
      16: invokeinterface #63,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      21: pop
      22: aload_2
      23: aload_1
      24: invokevirtual #61                 // Method org/apache/bookkeeper/versioning/Versioned.getValue:()Ljava/lang/Object;
      27: checkcast     #62                 // class java/util/Collection
      30: invokeinterface #63,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      35: pop
      36: new           #58                 // class org/apache/bookkeeper/versioning/Versioned
      39: dup
      40: aload_2
      41: getstatic     #59                 // Field org/apache/bookkeeper/versioning/Version.NEW:Lorg/apache/bookkeeper/versioning/Version;
      44: invokespecial #60                 // Method org/apache/bookkeeper/versioning/Versioned."<init>":(Ljava/lang/Object;Lorg/apache/bookkeeper/versioning/Version;)V
      47: areturn
}
