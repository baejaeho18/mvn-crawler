Compiled from "CGenerator.java"
class org.apache.jute.compiler.CGenerator {
  private java.lang.String mName;

  private java.util.List<org.apache.jute.compiler.JFile> mInclFiles;

  private java.util.List<org.apache.jute.compiler.JRecord> mRecList;

  private final java.io.File outputDirectory;

  org.apache.jute.compiler.CGenerator(java.lang.String, java.util.List<org.apache.jute.compiler.JFile>, java.util.List<org.apache.jute.compiler.JRecord>, java.io.File);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload         4
       7: putfield      #2                  // Field outputDirectory:Ljava/io/File;
      10: aload_0
      11: new           #3                  // class java/io/File
      14: dup
      15: aload_1
      16: invokespecial #4                  // Method java/io/File."<init>":(Ljava/lang/String;)V
      19: invokevirtual #5                  // Method java/io/File.getName:()Ljava/lang/String;
      22: putfield      #6                  // Field mName:Ljava/lang/String;
      25: aload_0
      26: aload_2
      27: putfield      #7                  // Field mInclFiles:Ljava/util/List;
      30: aload_0
      31: aload_3
      32: putfield      #8                  // Field mRecList:Ljava/util/List;
      35: return

  void genCode() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field outputDirectory:Ljava/io/File;
       4: invokevirtual #9                  // Method java/io/File.exists:()Z
       7: ifne          50
      10: aload_0
      11: getfield      #2                  // Field outputDirectory:Ljava/io/File;
      14: invokevirtual #10                 // Method java/io/File.mkdirs:()Z
      17: ifne          50
      20: new           #11                 // class java/io/IOException
      23: dup
      24: new           #12                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #14                 // String unable to create output directory
      33: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #2                  // Field outputDirectory:Ljava/io/File;
      40: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #18                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: new           #19                 // class java/io/FileWriter
      53: dup
      54: new           #3                  // class java/io/File
      57: dup
      58: aload_0
      59: getfield      #2                  // Field outputDirectory:Ljava/io/File;
      62: new           #12                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      69: aload_0
      70: getfield      #6                  // Field mName:Ljava/lang/String;
      73: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: ldc           #20                 // String .c
      78: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: invokespecial #21                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      87: invokespecial #22                 // Method java/io/FileWriter."<init>":(Ljava/io/File;)V
      90: astore_1
      91: aconst_null
      92: astore_2
      93: new           #19                 // class java/io/FileWriter
      96: dup
      97: new           #3                  // class java/io/File
     100: dup
     101: aload_0
     102: getfield      #2                  // Field outputDirectory:Ljava/io/File;
     105: new           #12                 // class java/lang/StringBuilder
     108: dup
     109: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     112: aload_0
     113: getfield      #6                  // Field mName:Ljava/lang/String;
     116: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: ldc           #23                 // String .h
     121: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     127: invokespecial #21                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
     130: invokespecial #22                 // Method java/io/FileWriter."<init>":(Ljava/io/File;)V
     133: astore_3
     134: aconst_null
     135: astore        4
     137: aload_3
     138: ldc           #24                 // String /**\n
     140: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     143: aload_3
     144: ldc           #26                 // String * Licensed to the Apache Software Foundation (ASF) under one\n
     146: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     149: aload_3
     150: ldc           #27                 // String * or more contributor license agreements.  See the NOTICE file\n
     152: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     155: aload_3
     156: ldc           #28                 // String * distributed with this work for additional information\n
     158: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     161: aload_3
     162: ldc           #29                 // String * regarding copyright ownership.  The ASF licenses this file\n
     164: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     167: aload_3
     168: ldc           #30                 // String * to you under the Apache License, Version 2.0 (the\n
     170: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     173: aload_3
     174: ldc           #31                 // String * \"License\"); you may not use this file except in compliance\n
     176: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     179: aload_3
     180: ldc           #32                 // String * with the License.  You may obtain a copy of the License at\n
     182: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     185: aload_3
     186: ldc           #33                 // String *\n
     188: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     191: aload_3
     192: ldc           #34                 // String *     http://www.apache.org/licenses/LICENSE-2.0\n
     194: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     197: aload_3
     198: ldc           #33                 // String *\n
     200: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     203: aload_3
     204: ldc           #35                 // String * Unless required by applicable law or agreed to in writing, software\n
     206: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     209: aload_3
     210: ldc           #36                 // String * distributed under the License is distributed on an \"AS IS\" BASIS,\n
     212: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     215: aload_3
     216: ldc           #37                 // String * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n
     218: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     221: aload_3
     222: ldc           #38                 // String * See the License for the specific language governing permissions and\n
     224: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     227: aload_3
     228: ldc           #39                 // String * limitations under the License.\n
     230: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     233: aload_3
     234: ldc           #40                 // String */\n
     236: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     239: aload_3
     240: ldc           #41                 // String \n
     242: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     245: aload_1
     246: ldc           #24                 // String /**\n
     248: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     251: aload_1
     252: ldc           #26                 // String * Licensed to the Apache Software Foundation (ASF) under one\n
     254: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     257: aload_1
     258: ldc           #27                 // String * or more contributor license agreements.  See the NOTICE file\n
     260: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     263: aload_1
     264: ldc           #28                 // String * distributed with this work for additional information\n
     266: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     269: aload_1
     270: ldc           #29                 // String * regarding copyright ownership.  The ASF licenses this file\n
     272: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     275: aload_1
     276: ldc           #30                 // String * to you under the Apache License, Version 2.0 (the\n
     278: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     281: aload_1
     282: ldc           #31                 // String * \"License\"); you may not use this file except in compliance\n
     284: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     287: aload_1
     288: ldc           #32                 // String * with the License.  You may obtain a copy of the License at\n
     290: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     293: aload_1
     294: ldc           #33                 // String *\n
     296: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     299: aload_1
     300: ldc           #34                 // String *     http://www.apache.org/licenses/LICENSE-2.0\n
     302: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     305: aload_1
     306: ldc           #33                 // String *\n
     308: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     311: aload_1
     312: ldc           #35                 // String * Unless required by applicable law or agreed to in writing, software\n
     314: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     317: aload_1
     318: ldc           #36                 // String * distributed under the License is distributed on an \"AS IS\" BASIS,\n
     320: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     323: aload_1
     324: ldc           #37                 // String * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n
     326: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     329: aload_1
     330: ldc           #38                 // String * See the License for the specific language governing permissions and\n
     332: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     335: aload_1
     336: ldc           #39                 // String * limitations under the License.\n
     338: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     341: aload_1
     342: ldc           #40                 // String */\n
     344: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     347: aload_1
     348: ldc           #41                 // String \n
     350: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     353: aload_3
     354: new           #12                 // class java/lang/StringBuilder
     357: dup
     358: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     361: ldc           #42                 // String #ifndef __
     363: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     366: aload_0
     367: getfield      #6                  // Field mName:Ljava/lang/String;
     370: invokevirtual #43                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
     373: bipush        46
     375: bipush        95
     377: invokevirtual #44                 // Method java/lang/String.replace:(CC)Ljava/lang/String;
     380: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     383: ldc           #45                 // String __\n
     385: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     388: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     391: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     394: aload_3
     395: new           #12                 // class java/lang/StringBuilder
     398: dup
     399: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     402: ldc           #46                 // String #define __
     404: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     407: aload_0
     408: getfield      #6                  // Field mName:Ljava/lang/String;
     411: invokevirtual #43                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
     414: bipush        46
     416: bipush        95
     418: invokevirtual #44                 // Method java/lang/String.replace:(CC)Ljava/lang/String;
     421: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     424: ldc           #45                 // String __\n
     426: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     429: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     432: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     435: aload_3
     436: ldc           #47                 // String #include \"recordio.h\"\n
     438: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     441: aload_0
     442: getfield      #7                  // Field mInclFiles:Ljava/util/List;
     445: invokeinterface #48,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     450: astore        5
     452: aload         5
     454: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     459: ifeq          509
     462: aload         5
     464: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     469: checkcast     #51                 // class org/apache/jute/compiler/JFile
     472: astore        6
     474: aload_3
     475: new           #12                 // class java/lang/StringBuilder
     478: dup
     479: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     482: ldc           #52                 // String #include \"
     484: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     487: aload         6
     489: invokevirtual #53                 // Method org/apache/jute/compiler/JFile.getName:()Ljava/lang/String;
     492: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     495: ldc           #54                 // String .h\"\n
     497: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     500: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     503: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     506: goto          452
     509: aload_3
     510: ldc           #55                 // String \n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n
     512: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     515: aload_1
     516: ldc           #56                 // String #include <stdlib.h>\n
     518: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     521: aload_1
     522: new           #12                 // class java/lang/StringBuilder
     525: dup
     526: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     529: ldc           #52                 // String #include \"
     531: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     534: aload_0
     535: getfield      #6                  // Field mName:Ljava/lang/String;
     538: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     541: ldc           #57                 // String .h\"\n\n
     543: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     546: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     549: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     552: aload_0
     553: getfield      #8                  // Field mRecList:Ljava/util/List;
     556: invokeinterface #48,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     561: astore        5
     563: aload         5
     565: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     570: ifeq          595
     573: aload         5
     575: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     580: checkcast     #58                 // class org/apache/jute/compiler/JRecord
     583: astore        6
     585: aload         6
     587: aload_3
     588: aload_1
     589: invokevirtual #59                 // Method org/apache/jute/compiler/JRecord.genCCode:(Ljava/io/FileWriter;Ljava/io/FileWriter;)V
     592: goto          563
     595: aload_3
     596: ldc           #60                 // String \n#ifdef __cplusplus\n}\n#endif\n\n
     598: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     601: aload_3
     602: new           #12                 // class java/lang/StringBuilder
     605: dup
     606: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     609: ldc           #61                 // String #endif //
     611: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     614: aload_0
     615: getfield      #6                  // Field mName:Ljava/lang/String;
     618: invokevirtual #43                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
     621: bipush        46
     623: bipush        95
     625: invokevirtual #44                 // Method java/lang/String.replace:(CC)Ljava/lang/String;
     628: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     631: ldc           #45                 // String __\n
     633: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     636: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     639: invokevirtual #25                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
     642: aload_3
     643: ifnull        723
     646: aload         4
     648: ifnull        670
     651: aload_3
     652: invokevirtual #62                 // Method java/io/FileWriter.close:()V
     655: goto          723
     658: astore        5
     660: aload         4
     662: aload         5
     664: invokevirtual #64                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     667: goto          723
     670: aload_3
     671: invokevirtual #62                 // Method java/io/FileWriter.close:()V
     674: goto          723
     677: astore        5
     679: aload         5
     681: astore        4
     683: aload         5
     685: athrow
     686: astore        7
     688: aload_3
     689: ifnull        720
     692: aload         4
     694: ifnull        716
     697: aload_3
     698: invokevirtual #62                 // Method java/io/FileWriter.close:()V
     701: goto          720
     704: astore        8
     706: aload         4
     708: aload         8
     710: invokevirtual #64                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     713: goto          720
     716: aload_3
     717: invokevirtual #62                 // Method java/io/FileWriter.close:()V
     720: aload         7
     722: athrow
     723: aload_1
     724: ifnull        794
     727: aload_2
     728: ifnull        747
     731: aload_1
     732: invokevirtual #62                 // Method java/io/FileWriter.close:()V
     735: goto          794
     738: astore_3
     739: aload_2
     740: aload_3
     741: invokevirtual #64                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     744: goto          794
     747: aload_1
     748: invokevirtual #62                 // Method java/io/FileWriter.close:()V
     751: goto          794
     754: astore_3
     755: aload_3
     756: astore_2
     757: aload_3
     758: athrow
     759: astore        9
     761: aload_1
     762: ifnull        791
     765: aload_2
     766: ifnull        787
     769: aload_1
     770: invokevirtual #62                 // Method java/io/FileWriter.close:()V
     773: goto          791
     776: astore        10
     778: aload_2
     779: aload         10
     781: invokevirtual #64                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     784: goto          791
     787: aload_1
     788: invokevirtual #62                 // Method java/io/FileWriter.close:()V
     791: aload         9
     793: athrow
     794: return
    Exception table:
       from    to  target type
         651   655   658   Class java/lang/Throwable
         137   642   677   Class java/lang/Throwable
         137   642   686   any
         697   701   704   Class java/lang/Throwable
         677   688   686   any
         731   735   738   Class java/lang/Throwable
          93   723   754   Class java/lang/Throwable
          93   723   759   any
         769   773   776   Class java/lang/Throwable
         754   761   759   any
}
