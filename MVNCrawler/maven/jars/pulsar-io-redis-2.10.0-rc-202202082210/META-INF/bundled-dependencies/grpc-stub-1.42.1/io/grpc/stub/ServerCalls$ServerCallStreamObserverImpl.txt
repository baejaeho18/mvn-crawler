Compiled from "ServerCalls.java"
final class io.grpc.stub.ServerCalls$ServerCallStreamObserverImpl<ReqT, RespT> extends io.grpc.stub.ServerCallStreamObserver<RespT> {
  final io.grpc.ServerCall<ReqT, RespT> call;

  private final boolean serverStreamingOrBidi;

  volatile boolean cancelled;

  private boolean frozen;

  private boolean autoRequestEnabled;

  private boolean sentHeaders;

  private java.lang.Runnable onReadyHandler;

  private java.lang.Runnable onCancelHandler;

  private boolean aborted;

  private boolean completed;

  private java.lang.Runnable onCloseHandler;

  io.grpc.stub.ServerCalls$ServerCallStreamObserverImpl(io.grpc.ServerCall<ReqT, RespT>, boolean);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method io/grpc/stub/ServerCallStreamObserver."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #1                  // Field autoRequestEnabled:Z
       9: aload_0
      10: iconst_0
      11: putfield      #7                  // Field aborted:Z
      14: aload_0
      15: iconst_0
      16: putfield      #8                  // Field completed:Z
      19: aload_0
      20: aload_1
      21: putfield      #9                  // Field call:Lio/grpc/ServerCall;
      24: aload_0
      25: iload_2
      26: putfield      #10                 // Field serverStreamingOrBidi:Z
      29: return

  private void freeze();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #11                 // Field frozen:Z
       5: return

  public void setMessageCompression(boolean);
    Code:
       0: aload_0
       1: getfield      #9                  // Field call:Lio/grpc/ServerCall;
       4: iload_1
       5: invokevirtual #12                 // Method io/grpc/ServerCall.setMessageCompression:(Z)V
       8: return

  public void setCompression(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field call:Lio/grpc/ServerCall;
       4: aload_1
       5: invokevirtual #13                 // Method io/grpc/ServerCall.setCompression:(Ljava/lang/String;)V
       8: return

  public void onNext(RespT);
    Code:
       0: aload_0
       1: getfield      #14                 // Field cancelled:Z
       4: ifeq          26
       7: aload_0
       8: getfield      #10                 // Field serverStreamingOrBidi:Z
      11: ifeq          26
      14: getstatic     #15                 // Field io/grpc/Status.CANCELLED:Lio/grpc/Status;
      17: ldc           #16                 // String call already cancelled. Use ServerCallStreamObserver.setOnCancelHandler() to disable this exception
      19: invokevirtual #17                 // Method io/grpc/Status.withDescription:(Ljava/lang/String;)Lio/grpc/Status;
      22: invokevirtual #18                 // Method io/grpc/Status.asRuntimeException:()Lio/grpc/StatusRuntimeException;
      25: athrow
      26: aload_0
      27: getfield      #7                  // Field aborted:Z
      30: ifne          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ldc           #19                 // String Stream was terminated by error, no further calls are allowed
      40: invokestatic  #20                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      43: aload_0
      44: getfield      #8                  // Field completed:Z
      47: ifne          54
      50: iconst_1
      51: goto          55
      54: iconst_0
      55: ldc           #21                 // String Stream is already completed, no further calls are allowed
      57: invokestatic  #20                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      60: aload_0
      61: getfield      #22                 // Field sentHeaders:Z
      64: ifne          86
      67: aload_0
      68: getfield      #9                  // Field call:Lio/grpc/ServerCall;
      71: new           #23                 // class io/grpc/Metadata
      74: dup
      75: invokespecial #24                 // Method io/grpc/Metadata."<init>":()V
      78: invokevirtual #25                 // Method io/grpc/ServerCall.sendHeaders:(Lio/grpc/Metadata;)V
      81: aload_0
      82: iconst_1
      83: putfield      #22                 // Field sentHeaders:Z
      86: aload_0
      87: getfield      #9                  // Field call:Lio/grpc/ServerCall;
      90: aload_1
      91: invokevirtual #26                 // Method io/grpc/ServerCall.sendMessage:(Ljava/lang/Object;)V
      94: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_1
       1: invokestatic  #27                 // Method io/grpc/Status.trailersFromThrowable:(Ljava/lang/Throwable;)Lio/grpc/Metadata;
       4: astore_2
       5: aload_2
       6: ifnonnull     17
       9: new           #23                 // class io/grpc/Metadata
      12: dup
      13: invokespecial #24                 // Method io/grpc/Metadata."<init>":()V
      16: astore_2
      17: aload_0
      18: getfield      #9                  // Field call:Lio/grpc/ServerCall;
      21: aload_1
      22: invokestatic  #28                 // Method io/grpc/Status.fromThrowable:(Ljava/lang/Throwable;)Lio/grpc/Status;
      25: aload_2
      26: invokevirtual #29                 // Method io/grpc/ServerCall.close:(Lio/grpc/Status;Lio/grpc/Metadata;)V
      29: aload_0
      30: iconst_1
      31: putfield      #7                  // Field aborted:Z
      34: return

  public void onCompleted();
    Code:
       0: aload_0
       1: getfield      #9                  // Field call:Lio/grpc/ServerCall;
       4: getstatic     #30                 // Field io/grpc/Status.OK:Lio/grpc/Status;
       7: new           #23                 // class io/grpc/Metadata
      10: dup
      11: invokespecial #24                 // Method io/grpc/Metadata."<init>":()V
      14: invokevirtual #29                 // Method io/grpc/ServerCall.close:(Lio/grpc/Status;Lio/grpc/Metadata;)V
      17: aload_0
      18: iconst_1
      19: putfield      #8                  // Field completed:Z
      22: return

  public boolean isReady();
    Code:
       0: aload_0
       1: getfield      #9                  // Field call:Lio/grpc/ServerCall;
       4: invokevirtual #31                 // Method io/grpc/ServerCall.isReady:()Z
       7: ireturn

  public void setOnReadyHandler(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #11                 // Field frozen:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #32                 // String Cannot alter onReadyHandler after initialization. May only be called during the initial call to the application, before the service returns its StreamObserver
      14: invokestatic  #20                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      17: aload_0
      18: aload_1
      19: putfield      #3                  // Field onReadyHandler:Ljava/lang/Runnable;
      22: return

  public boolean isCancelled();
    Code:
       0: aload_0
       1: getfield      #9                  // Field call:Lio/grpc/ServerCall;
       4: invokevirtual #33                 // Method io/grpc/ServerCall.isCancelled:()Z
       7: ireturn

  public void setOnCancelHandler(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #11                 // Field frozen:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #34                 // String Cannot alter onCancelHandler after initialization. May only be called during the initial call to the application, before the service returns its StreamObserver
      14: invokestatic  #20                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      17: aload_0
      18: aload_1
      19: putfield      #4                  // Field onCancelHandler:Ljava/lang/Runnable;
      22: return

  public void disableAutoInboundFlowControl();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method disableAutoRequest:()V
       4: return

  public void disableAutoRequest();
    Code:
       0: aload_0
       1: getfield      #11                 // Field frozen:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #36                 // String Cannot disable auto flow control after initialization
      14: invokestatic  #20                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      17: aload_0
      18: iconst_0
      19: putfield      #1                  // Field autoRequestEnabled:Z
      22: return

  public void request(int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field call:Lio/grpc/ServerCall;
       4: iload_1
       5: invokevirtual #37                 // Method io/grpc/ServerCall.request:(I)V
       8: return

  public void setOnCloseHandler(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #11                 // Field frozen:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #38                 // String Cannot alter onCloseHandler after initialization. May only be called during the initial call to the application, before the service returns its StreamObserver
      14: invokestatic  #20                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      17: aload_0
      18: aload_1
      19: putfield      #2                  // Field onCloseHandler:Ljava/lang/Runnable;
      22: return

  static void access$100(io.grpc.stub.ServerCalls$ServerCallStreamObserverImpl);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method freeze:()V
       4: return

  static java.lang.Runnable access$200(io.grpc.stub.ServerCalls$ServerCallStreamObserverImpl);
    Code:
       0: aload_0
       1: getfield      #4                  // Field onCancelHandler:Ljava/lang/Runnable;
       4: areturn

  static java.lang.Runnable access$300(io.grpc.stub.ServerCalls$ServerCallStreamObserverImpl);
    Code:
       0: aload_0
       1: getfield      #3                  // Field onReadyHandler:Ljava/lang/Runnable;
       4: areturn

  static java.lang.Runnable access$400(io.grpc.stub.ServerCalls$ServerCallStreamObserverImpl);
    Code:
       0: aload_0
       1: getfield      #2                  // Field onCloseHandler:Ljava/lang/Runnable;
       4: areturn

  static boolean access$500(io.grpc.stub.ServerCalls$ServerCallStreamObserverImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field autoRequestEnabled:Z
       4: ireturn
}
