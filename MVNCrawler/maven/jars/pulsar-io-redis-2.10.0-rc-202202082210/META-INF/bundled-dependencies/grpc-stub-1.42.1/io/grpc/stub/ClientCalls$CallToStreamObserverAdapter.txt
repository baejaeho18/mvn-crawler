Compiled from "ClientCalls.java"
final class io.grpc.stub.ClientCalls$CallToStreamObserverAdapter<ReqT> extends io.grpc.stub.ClientCallStreamObserver<ReqT> {
  private boolean frozen;

  private final io.grpc.ClientCall<ReqT, ?> call;

  private final boolean streamingResponse;

  private java.lang.Runnable onReadyHandler;

  private int initialRequest;

  private boolean autoRequestEnabled;

  private boolean aborted;

  private boolean completed;

  io.grpc.stub.ClientCalls$CallToStreamObserverAdapter(io.grpc.ClientCall<ReqT, ?>, boolean);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method io/grpc/stub/ClientCallStreamObserver."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #1                  // Field initialRequest:I
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field autoRequestEnabled:Z
      14: aload_0
      15: iconst_0
      16: putfield      #7                  // Field aborted:Z
      19: aload_0
      20: iconst_0
      21: putfield      #8                  // Field completed:Z
      24: aload_0
      25: aload_1
      26: putfield      #9                  // Field call:Lio/grpc/ClientCall;
      29: aload_0
      30: iload_2
      31: putfield      #4                  // Field streamingResponse:Z
      34: return

  private void freeze();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #10                 // Field frozen:Z
       5: return

  public void onNext(ReqT);
    Code:
       0: aload_0
       1: getfield      #7                  // Field aborted:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #11                 // String Stream was terminated by error, no further calls are allowed
      14: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      17: aload_0
      18: getfield      #8                  // Field completed:Z
      21: ifne          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ldc           #13                 // String Stream is already completed, no further calls are allowed
      31: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      34: aload_0
      35: getfield      #9                  // Field call:Lio/grpc/ClientCall;
      38: aload_1
      39: invokevirtual #14                 // Method io/grpc/ClientCall.sendMessage:(Ljava/lang/Object;)V
      42: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #9                  // Field call:Lio/grpc/ClientCall;
       4: ldc           #15                 // String Cancelled by client with StreamObserver.onError()
       6: aload_1
       7: invokevirtual #16                 // Method io/grpc/ClientCall.cancel:(Ljava/lang/String;Ljava/lang/Throwable;)V
      10: aload_0
      11: iconst_1
      12: putfield      #7                  // Field aborted:Z
      15: return

  public void onCompleted();
    Code:
       0: aload_0
       1: getfield      #9                  // Field call:Lio/grpc/ClientCall;
       4: invokevirtual #17                 // Method io/grpc/ClientCall.halfClose:()V
       7: aload_0
       8: iconst_1
       9: putfield      #8                  // Field completed:Z
      12: return

  public boolean isReady();
    Code:
       0: aload_0
       1: getfield      #9                  // Field call:Lio/grpc/ClientCall;
       4: invokevirtual #18                 // Method io/grpc/ClientCall.isReady:()Z
       7: ireturn

  public void setOnReadyHandler(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #10                 // Field frozen:Z
       4: ifeq          17
       7: new           #19                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #20                 // String Cannot alter onReadyHandler after call started. Use ClientResponseObserver
      13: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: putfield      #2                  // Field onReadyHandler:Ljava/lang/Runnable;
      22: return

  public void disableAutoInboundFlowControl();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #22                 // Method disableAutoRequestWithInitial:(I)V
       5: return

  public void disableAutoRequestWithInitial(int);
    Code:
       0: aload_0
       1: getfield      #10                 // Field frozen:Z
       4: ifeq          17
       7: new           #19                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #23                 // String Cannot disable auto flow control after call started. Use ClientResponseObserver
      13: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: iload_1
      18: iflt          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ldc           #24                 // String Initial requests must be non-negative
      28: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      31: aload_0
      32: iload_1
      33: putfield      #1                  // Field initialRequest:I
      36: aload_0
      37: iconst_0
      38: putfield      #3                  // Field autoRequestEnabled:Z
      41: return

  public void request(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field streamingResponse:Z
       4: ifne          23
       7: iload_1
       8: iconst_1
       9: if_icmpne     23
      12: aload_0
      13: getfield      #9                  // Field call:Lio/grpc/ClientCall;
      16: iconst_2
      17: invokevirtual #26                 // Method io/grpc/ClientCall.request:(I)V
      20: goto          31
      23: aload_0
      24: getfield      #9                  // Field call:Lio/grpc/ClientCall;
      27: iload_1
      28: invokevirtual #26                 // Method io/grpc/ClientCall.request:(I)V
      31: return

  public void setMessageCompression(boolean);
    Code:
       0: aload_0
       1: getfield      #9                  // Field call:Lio/grpc/ClientCall;
       4: iload_1
       5: invokevirtual #27                 // Method io/grpc/ClientCall.setMessageCompression:(Z)V
       8: return

  public void cancel(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #9                  // Field call:Lio/grpc/ClientCall;
       4: aload_1
       5: aload_2
       6: invokevirtual #16                 // Method io/grpc/ClientCall.cancel:(Ljava/lang/String;Ljava/lang/Throwable;)V
       9: return

  static void access$100(io.grpc.stub.ClientCalls$CallToStreamObserverAdapter);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method freeze:()V
       4: return

  static boolean access$200(io.grpc.stub.ClientCalls$CallToStreamObserverAdapter);
    Code:
       0: aload_0
       1: getfield      #4                  // Field streamingResponse:Z
       4: ireturn

  static boolean access$300(io.grpc.stub.ClientCalls$CallToStreamObserverAdapter);
    Code:
       0: aload_0
       1: getfield      #3                  // Field autoRequestEnabled:Z
       4: ireturn

  static java.lang.Runnable access$400(io.grpc.stub.ClientCalls$CallToStreamObserverAdapter);
    Code:
       0: aload_0
       1: getfield      #2                  // Field onReadyHandler:Ljava/lang/Runnable;
       4: areturn

  static int access$500(io.grpc.stub.ClientCalls$CallToStreamObserverAdapter);
    Code:
       0: aload_0
       1: getfield      #1                  // Field initialRequest:I
       4: ireturn
}
