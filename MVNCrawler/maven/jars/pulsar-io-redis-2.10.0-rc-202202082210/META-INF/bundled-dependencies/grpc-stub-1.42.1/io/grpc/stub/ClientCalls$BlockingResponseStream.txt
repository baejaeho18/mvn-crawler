Compiled from "ClientCalls.java"
final class io.grpc.stub.ClientCalls$BlockingResponseStream<T> implements java.util.Iterator<T> {
  private final java.util.concurrent.BlockingQueue<java.lang.Object> buffer;

  private final io.grpc.stub.ClientCalls$StartableListener<T> listener;

  private final io.grpc.ClientCall<?, T> call;

  private final io.grpc.stub.ClientCalls$ThreadlessExecutor threadless;

  private java.lang.Object last;

  io.grpc.stub.ClientCalls$BlockingResponseStream(io.grpc.ClientCall<?, T>);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #3                  // Method "<init>":(Lio/grpc/ClientCall;Lio/grpc/stub/ClientCalls$ThreadlessExecutor;)V
       6: return

  io.grpc.stub.ClientCalls$BlockingResponseStream(io.grpc.ClientCall<?, T>, io.grpc.stub.ClientCalls$ThreadlessExecutor);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class java/util/concurrent/ArrayBlockingQueue
       8: dup
       9: iconst_3
      10: invokespecial #6                  // Method java/util/concurrent/ArrayBlockingQueue."<init>":(I)V
      13: putfield      #2                  // Field buffer:Ljava/util/concurrent/BlockingQueue;
      16: aload_0
      17: new           #7                  // class io/grpc/stub/ClientCalls$BlockingResponseStream$QueuingListener
      20: dup
      21: aload_0
      22: invokespecial #8                  // Method io/grpc/stub/ClientCalls$BlockingResponseStream$QueuingListener."<init>":(Lio/grpc/stub/ClientCalls$BlockingResponseStream;)V
      25: putfield      #9                  // Field listener:Lio/grpc/stub/ClientCalls$StartableListener;
      28: aload_0
      29: aload_1
      30: putfield      #1                  // Field call:Lio/grpc/ClientCall;
      33: aload_0
      34: aload_2
      35: putfield      #10                 // Field threadless:Lio/grpc/stub/ClientCalls$ThreadlessExecutor;
      38: return

  io.grpc.stub.ClientCalls$StartableListener<T> listener();
    Code:
       0: aload_0
       1: getfield      #9                  // Field listener:Lio/grpc/stub/ClientCalls$StartableListener;
       4: areturn

  private java.lang.Object waitForNext();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #10                 // Field threadless:Lio/grpc/stub/ClientCalls$ThreadlessExecutor;
       6: ifnonnull     47
       9: aload_0
      10: getfield      #2                  // Field buffer:Ljava/util/concurrent/BlockingQueue;
      13: invokeinterface #11,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.take:()Ljava/lang/Object;
      18: astore_2
      19: iload_1
      20: ifeq          29
      23: invokestatic  #12                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      26: invokevirtual #13                 // Method java/lang/Thread.interrupt:()V
      29: aload_2
      30: areturn
      31: astore_2
      32: iconst_1
      33: istore_1
      34: aload_0
      35: getfield      #1                  // Field call:Lio/grpc/ClientCall;
      38: ldc           #15                 // String Thread interrupted
      40: aload_2
      41: invokevirtual #16                 // Method io/grpc/ClientCall.cancel:(Ljava/lang/String;Ljava/lang/Throwable;)V
      44: goto          9
      47: aload_0
      48: getfield      #2                  // Field buffer:Ljava/util/concurrent/BlockingQueue;
      51: invokeinterface #17,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.poll:()Ljava/lang/Object;
      56: dup
      57: astore_2
      58: ifnonnull     87
      61: aload_0
      62: getfield      #10                 // Field threadless:Lio/grpc/stub/ClientCalls$ThreadlessExecutor;
      65: invokevirtual #18                 // Method io/grpc/stub/ClientCalls$ThreadlessExecutor.waitAndDrain:()V
      68: goto          47
      71: astore_3
      72: iconst_1
      73: istore_1
      74: aload_0
      75: getfield      #1                  // Field call:Lio/grpc/ClientCall;
      78: ldc           #15                 // String Thread interrupted
      80: aload_3
      81: invokevirtual #16                 // Method io/grpc/ClientCall.cancel:(Ljava/lang/String;Ljava/lang/Throwable;)V
      84: goto          47
      87: aload_2
      88: astore_3
      89: iload_1
      90: ifeq          99
      93: invokestatic  #12                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      96: invokevirtual #13                 // Method java/lang/Thread.interrupt:()V
      99: aload_3
     100: areturn
     101: astore        4
     103: iload_1
     104: ifeq          113
     107: invokestatic  #12                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     110: invokevirtual #13                 // Method java/lang/Thread.interrupt:()V
     113: aload         4
     115: athrow
    Exception table:
       from    to  target type
           9    19    31   Class java/lang/InterruptedException
          61    68    71   Class java/lang/InterruptedException
           2    19   101   any
          31    89   101   any
         101   103   101   any

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #19                 // Field last:Ljava/lang/Object;
       4: ifnonnull     18
       7: aload_0
       8: aload_0
       9: invokespecial #20                 // Method waitForNext:()Ljava/lang/Object;
      12: putfield      #19                 // Field last:Ljava/lang/Object;
      15: goto          0
      18: aload_0
      19: getfield      #19                 // Field last:Ljava/lang/Object;
      22: instanceof    #21                 // class io/grpc/StatusRuntimeException
      25: ifeq          48
      28: aload_0
      29: getfield      #19                 // Field last:Ljava/lang/Object;
      32: checkcast     #21                 // class io/grpc/StatusRuntimeException
      35: astore_1
      36: aload_1
      37: invokevirtual #22                 // Method io/grpc/StatusRuntimeException.getStatus:()Lio/grpc/Status;
      40: aload_1
      41: invokevirtual #23                 // Method io/grpc/StatusRuntimeException.getTrailers:()Lio/grpc/Metadata;
      44: invokevirtual #24                 // Method io/grpc/Status.asRuntimeException:(Lio/grpc/Metadata;)Lio/grpc/StatusRuntimeException;
      47: athrow
      48: aload_0
      49: getfield      #19                 // Field last:Ljava/lang/Object;
      52: aload_0
      53: if_acmpeq     60
      56: iconst_1
      57: goto          61
      60: iconst_0
      61: ireturn

  public T next();
    Code:
       0: aload_0
       1: getfield      #19                 // Field last:Ljava/lang/Object;
       4: instanceof    #21                 // class io/grpc/StatusRuntimeException
       7: ifne          26
      10: aload_0
      11: getfield      #19                 // Field last:Ljava/lang/Object;
      14: aload_0
      15: if_acmpeq     26
      18: aload_0
      19: getfield      #1                  // Field call:Lio/grpc/ClientCall;
      22: iconst_1
      23: invokevirtual #25                 // Method io/grpc/ClientCall.request:(I)V
      26: aload_0
      27: invokevirtual #26                 // Method hasNext:()Z
      30: ifne          41
      33: new           #27                 // class java/util/NoSuchElementException
      36: dup
      37: invokespecial #28                 // Method java/util/NoSuchElementException."<init>":()V
      40: athrow
      41: aload_0
      42: getfield      #19                 // Field last:Ljava/lang/Object;
      45: astore_1
      46: aload_0
      47: aconst_null
      48: putfield      #19                 // Field last:Ljava/lang/Object;
      51: aload_1
      52: areturn

  public void remove();
    Code:
       0: new           #29                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #30                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  static java.util.concurrent.BlockingQueue access$700(io.grpc.stub.ClientCalls$BlockingResponseStream);
    Code:
       0: aload_0
       1: getfield      #2                  // Field buffer:Ljava/util/concurrent/BlockingQueue;
       4: areturn

  static io.grpc.ClientCall access$800(io.grpc.stub.ClientCalls$BlockingResponseStream);
    Code:
       0: aload_0
       1: getfield      #1                  // Field call:Lio/grpc/ClientCall;
       4: areturn
}
