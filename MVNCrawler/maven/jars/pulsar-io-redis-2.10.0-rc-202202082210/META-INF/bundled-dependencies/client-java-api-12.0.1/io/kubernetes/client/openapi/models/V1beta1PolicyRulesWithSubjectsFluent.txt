Compiled from "V1beta1PolicyRulesWithSubjectsFluent.java"
public interface io.kubernetes.client.openapi.models.V1beta1PolicyRulesWithSubjectsFluent<A extends io.kubernetes.client.openapi.models.V1beta1PolicyRulesWithSubjectsFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract A addToNonResourceRules(int, io.kubernetes.client.openapi.models.V1beta1NonResourcePolicyRule);

  public abstract A setToNonResourceRules(int, io.kubernetes.client.openapi.models.V1beta1NonResourcePolicyRule);

  public abstract A addToNonResourceRules(io.kubernetes.client.openapi.models.V1beta1NonResourcePolicyRule...);

  public abstract A addAllToNonResourceRules(java.util.Collection<io.kubernetes.client.openapi.models.V1beta1NonResourcePolicyRule>);

  public abstract A removeFromNonResourceRules(io.kubernetes.client.openapi.models.V1beta1NonResourcePolicyRule...);

  public abstract A removeAllFromNonResourceRules(java.util.Collection<io.kubernetes.client.openapi.models.V1beta1NonResourcePolicyRule>);

  public abstract A removeMatchingFromNonResourceRules(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1NonResourcePolicyRuleBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1beta1NonResourcePolicyRule> getNonResourceRules();

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1beta1NonResourcePolicyRule> buildNonResourceRules();

  public abstract io.kubernetes.client.openapi.models.V1beta1NonResourcePolicyRule buildNonResourceRule(int);

  public abstract io.kubernetes.client.openapi.models.V1beta1NonResourcePolicyRule buildFirstNonResourceRule();

  public abstract io.kubernetes.client.openapi.models.V1beta1NonResourcePolicyRule buildLastNonResourceRule();

  public abstract io.kubernetes.client.openapi.models.V1beta1NonResourcePolicyRule buildMatchingNonResourceRule(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1NonResourcePolicyRuleBuilder>);

  public abstract java.lang.Boolean hasMatchingNonResourceRule(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1NonResourcePolicyRuleBuilder>);

  public abstract A withNonResourceRules(java.util.List<io.kubernetes.client.openapi.models.V1beta1NonResourcePolicyRule>);

  public abstract A withNonResourceRules(io.kubernetes.client.openapi.models.V1beta1NonResourcePolicyRule...);

  public abstract java.lang.Boolean hasNonResourceRules();

  public abstract io.kubernetes.client.openapi.models.V1beta1PolicyRulesWithSubjectsFluent$NonResourceRulesNested<A> addNewNonResourceRule();

  public abstract io.kubernetes.client.openapi.models.V1beta1PolicyRulesWithSubjectsFluent$NonResourceRulesNested<A> addNewNonResourceRuleLike(io.kubernetes.client.openapi.models.V1beta1NonResourcePolicyRule);

  public abstract io.kubernetes.client.openapi.models.V1beta1PolicyRulesWithSubjectsFluent$NonResourceRulesNested<A> setNewNonResourceRuleLike(int, io.kubernetes.client.openapi.models.V1beta1NonResourcePolicyRule);

  public abstract io.kubernetes.client.openapi.models.V1beta1PolicyRulesWithSubjectsFluent$NonResourceRulesNested<A> editNonResourceRule(int);

  public abstract io.kubernetes.client.openapi.models.V1beta1PolicyRulesWithSubjectsFluent$NonResourceRulesNested<A> editFirstNonResourceRule();

  public abstract io.kubernetes.client.openapi.models.V1beta1PolicyRulesWithSubjectsFluent$NonResourceRulesNested<A> editLastNonResourceRule();

  public abstract io.kubernetes.client.openapi.models.V1beta1PolicyRulesWithSubjectsFluent$NonResourceRulesNested<A> editMatchingNonResourceRule(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1NonResourcePolicyRuleBuilder>);

  public abstract A addToResourceRules(int, io.kubernetes.client.openapi.models.V1beta1ResourcePolicyRule);

  public abstract A setToResourceRules(int, io.kubernetes.client.openapi.models.V1beta1ResourcePolicyRule);

  public abstract A addToResourceRules(io.kubernetes.client.openapi.models.V1beta1ResourcePolicyRule...);

  public abstract A addAllToResourceRules(java.util.Collection<io.kubernetes.client.openapi.models.V1beta1ResourcePolicyRule>);

  public abstract A removeFromResourceRules(io.kubernetes.client.openapi.models.V1beta1ResourcePolicyRule...);

  public abstract A removeAllFromResourceRules(java.util.Collection<io.kubernetes.client.openapi.models.V1beta1ResourcePolicyRule>);

  public abstract A removeMatchingFromResourceRules(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1ResourcePolicyRuleBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1beta1ResourcePolicyRule> getResourceRules();

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1beta1ResourcePolicyRule> buildResourceRules();

  public abstract io.kubernetes.client.openapi.models.V1beta1ResourcePolicyRule buildResourceRule(int);

  public abstract io.kubernetes.client.openapi.models.V1beta1ResourcePolicyRule buildFirstResourceRule();

  public abstract io.kubernetes.client.openapi.models.V1beta1ResourcePolicyRule buildLastResourceRule();

  public abstract io.kubernetes.client.openapi.models.V1beta1ResourcePolicyRule buildMatchingResourceRule(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1ResourcePolicyRuleBuilder>);

  public abstract java.lang.Boolean hasMatchingResourceRule(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1ResourcePolicyRuleBuilder>);

  public abstract A withResourceRules(java.util.List<io.kubernetes.client.openapi.models.V1beta1ResourcePolicyRule>);

  public abstract A withResourceRules(io.kubernetes.client.openapi.models.V1beta1ResourcePolicyRule...);

  public abstract java.lang.Boolean hasResourceRules();

  public abstract io.kubernetes.client.openapi.models.V1beta1PolicyRulesWithSubjectsFluent$ResourceRulesNested<A> addNewResourceRule();

  public abstract io.kubernetes.client.openapi.models.V1beta1PolicyRulesWithSubjectsFluent$ResourceRulesNested<A> addNewResourceRuleLike(io.kubernetes.client.openapi.models.V1beta1ResourcePolicyRule);

  public abstract io.kubernetes.client.openapi.models.V1beta1PolicyRulesWithSubjectsFluent$ResourceRulesNested<A> setNewResourceRuleLike(int, io.kubernetes.client.openapi.models.V1beta1ResourcePolicyRule);

  public abstract io.kubernetes.client.openapi.models.V1beta1PolicyRulesWithSubjectsFluent$ResourceRulesNested<A> editResourceRule(int);

  public abstract io.kubernetes.client.openapi.models.V1beta1PolicyRulesWithSubjectsFluent$ResourceRulesNested<A> editFirstResourceRule();

  public abstract io.kubernetes.client.openapi.models.V1beta1PolicyRulesWithSubjectsFluent$ResourceRulesNested<A> editLastResourceRule();

  public abstract io.kubernetes.client.openapi.models.V1beta1PolicyRulesWithSubjectsFluent$ResourceRulesNested<A> editMatchingResourceRule(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1ResourcePolicyRuleBuilder>);

  public abstract A addToSubjects(int, io.kubernetes.client.openapi.models.FlowcontrolV1beta1Subject);

  public abstract A setToSubjects(int, io.kubernetes.client.openapi.models.FlowcontrolV1beta1Subject);

  public abstract A addToSubjects(io.kubernetes.client.openapi.models.FlowcontrolV1beta1Subject...);

  public abstract A addAllToSubjects(java.util.Collection<io.kubernetes.client.openapi.models.FlowcontrolV1beta1Subject>);

  public abstract A removeFromSubjects(io.kubernetes.client.openapi.models.FlowcontrolV1beta1Subject...);

  public abstract A removeAllFromSubjects(java.util.Collection<io.kubernetes.client.openapi.models.FlowcontrolV1beta1Subject>);

  public abstract A removeMatchingFromSubjects(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.FlowcontrolV1beta1SubjectBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.FlowcontrolV1beta1Subject> getSubjects();

  public abstract java.util.List<io.kubernetes.client.openapi.models.FlowcontrolV1beta1Subject> buildSubjects();

  public abstract io.kubernetes.client.openapi.models.FlowcontrolV1beta1Subject buildSubject(int);

  public abstract io.kubernetes.client.openapi.models.FlowcontrolV1beta1Subject buildFirstSubject();

  public abstract io.kubernetes.client.openapi.models.FlowcontrolV1beta1Subject buildLastSubject();

  public abstract io.kubernetes.client.openapi.models.FlowcontrolV1beta1Subject buildMatchingSubject(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.FlowcontrolV1beta1SubjectBuilder>);

  public abstract java.lang.Boolean hasMatchingSubject(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.FlowcontrolV1beta1SubjectBuilder>);

  public abstract A withSubjects(java.util.List<io.kubernetes.client.openapi.models.FlowcontrolV1beta1Subject>);

  public abstract A withSubjects(io.kubernetes.client.openapi.models.FlowcontrolV1beta1Subject...);

  public abstract java.lang.Boolean hasSubjects();

  public abstract io.kubernetes.client.openapi.models.V1beta1PolicyRulesWithSubjectsFluent$SubjectsNested<A> addNewSubject();

  public abstract io.kubernetes.client.openapi.models.V1beta1PolicyRulesWithSubjectsFluent$SubjectsNested<A> addNewSubjectLike(io.kubernetes.client.openapi.models.FlowcontrolV1beta1Subject);

  public abstract io.kubernetes.client.openapi.models.V1beta1PolicyRulesWithSubjectsFluent$SubjectsNested<A> setNewSubjectLike(int, io.kubernetes.client.openapi.models.FlowcontrolV1beta1Subject);

  public abstract io.kubernetes.client.openapi.models.V1beta1PolicyRulesWithSubjectsFluent$SubjectsNested<A> editSubject(int);

  public abstract io.kubernetes.client.openapi.models.V1beta1PolicyRulesWithSubjectsFluent$SubjectsNested<A> editFirstSubject();

  public abstract io.kubernetes.client.openapi.models.V1beta1PolicyRulesWithSubjectsFluent$SubjectsNested<A> editLastSubject();

  public abstract io.kubernetes.client.openapi.models.V1beta1PolicyRulesWithSubjectsFluent$SubjectsNested<A> editMatchingSubject(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.FlowcontrolV1beta1SubjectBuilder>);
}
