Compiled from "V1alpha1RoleBindingFluent.java"
public interface io.kubernetes.client.openapi.models.V1alpha1RoleBindingFluent<A extends io.kubernetes.client.openapi.models.V1alpha1RoleBindingFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract java.lang.String getApiVersion();

  public abstract A withApiVersion(java.lang.String);

  public abstract java.lang.Boolean hasApiVersion();

  public abstract A withNewApiVersion(java.lang.String);

  public abstract A withNewApiVersion(java.lang.StringBuilder);

  public abstract A withNewApiVersion(java.lang.StringBuffer);

  public abstract java.lang.String getKind();

  public abstract A withKind(java.lang.String);

  public abstract java.lang.Boolean hasKind();

  public abstract A withNewKind(java.lang.String);

  public abstract A withNewKind(java.lang.StringBuilder);

  public abstract A withNewKind(java.lang.StringBuffer);

  public abstract io.kubernetes.client.openapi.models.V1ObjectMeta getMetadata();

  public abstract io.kubernetes.client.openapi.models.V1ObjectMeta buildMetadata();

  public abstract A withMetadata(io.kubernetes.client.openapi.models.V1ObjectMeta);

  public abstract java.lang.Boolean hasMetadata();

  public abstract io.kubernetes.client.openapi.models.V1alpha1RoleBindingFluent$MetadataNested<A> withNewMetadata();

  public abstract io.kubernetes.client.openapi.models.V1alpha1RoleBindingFluent$MetadataNested<A> withNewMetadataLike(io.kubernetes.client.openapi.models.V1ObjectMeta);

  public abstract io.kubernetes.client.openapi.models.V1alpha1RoleBindingFluent$MetadataNested<A> editMetadata();

  public abstract io.kubernetes.client.openapi.models.V1alpha1RoleBindingFluent$MetadataNested<A> editOrNewMetadata();

  public abstract io.kubernetes.client.openapi.models.V1alpha1RoleBindingFluent$MetadataNested<A> editOrNewMetadataLike(io.kubernetes.client.openapi.models.V1ObjectMeta);

  public abstract io.kubernetes.client.openapi.models.V1alpha1RoleRef getRoleRef();

  public abstract io.kubernetes.client.openapi.models.V1alpha1RoleRef buildRoleRef();

  public abstract A withRoleRef(io.kubernetes.client.openapi.models.V1alpha1RoleRef);

  public abstract java.lang.Boolean hasRoleRef();

  public abstract io.kubernetes.client.openapi.models.V1alpha1RoleBindingFluent$RoleRefNested<A> withNewRoleRef();

  public abstract io.kubernetes.client.openapi.models.V1alpha1RoleBindingFluent$RoleRefNested<A> withNewRoleRefLike(io.kubernetes.client.openapi.models.V1alpha1RoleRef);

  public abstract io.kubernetes.client.openapi.models.V1alpha1RoleBindingFluent$RoleRefNested<A> editRoleRef();

  public abstract io.kubernetes.client.openapi.models.V1alpha1RoleBindingFluent$RoleRefNested<A> editOrNewRoleRef();

  public abstract io.kubernetes.client.openapi.models.V1alpha1RoleBindingFluent$RoleRefNested<A> editOrNewRoleRefLike(io.kubernetes.client.openapi.models.V1alpha1RoleRef);

  public abstract A addToSubjects(int, io.kubernetes.client.openapi.models.RbacV1alpha1Subject);

  public abstract A setToSubjects(int, io.kubernetes.client.openapi.models.RbacV1alpha1Subject);

  public abstract A addToSubjects(io.kubernetes.client.openapi.models.RbacV1alpha1Subject...);

  public abstract A addAllToSubjects(java.util.Collection<io.kubernetes.client.openapi.models.RbacV1alpha1Subject>);

  public abstract A removeFromSubjects(io.kubernetes.client.openapi.models.RbacV1alpha1Subject...);

  public abstract A removeAllFromSubjects(java.util.Collection<io.kubernetes.client.openapi.models.RbacV1alpha1Subject>);

  public abstract A removeMatchingFromSubjects(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.RbacV1alpha1SubjectBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.RbacV1alpha1Subject> getSubjects();

  public abstract java.util.List<io.kubernetes.client.openapi.models.RbacV1alpha1Subject> buildSubjects();

  public abstract io.kubernetes.client.openapi.models.RbacV1alpha1Subject buildSubject(int);

  public abstract io.kubernetes.client.openapi.models.RbacV1alpha1Subject buildFirstSubject();

  public abstract io.kubernetes.client.openapi.models.RbacV1alpha1Subject buildLastSubject();

  public abstract io.kubernetes.client.openapi.models.RbacV1alpha1Subject buildMatchingSubject(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.RbacV1alpha1SubjectBuilder>);

  public abstract java.lang.Boolean hasMatchingSubject(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.RbacV1alpha1SubjectBuilder>);

  public abstract A withSubjects(java.util.List<io.kubernetes.client.openapi.models.RbacV1alpha1Subject>);

  public abstract A withSubjects(io.kubernetes.client.openapi.models.RbacV1alpha1Subject...);

  public abstract java.lang.Boolean hasSubjects();

  public abstract io.kubernetes.client.openapi.models.V1alpha1RoleBindingFluent$SubjectsNested<A> addNewSubject();

  public abstract io.kubernetes.client.openapi.models.V1alpha1RoleBindingFluent$SubjectsNested<A> addNewSubjectLike(io.kubernetes.client.openapi.models.RbacV1alpha1Subject);

  public abstract io.kubernetes.client.openapi.models.V1alpha1RoleBindingFluent$SubjectsNested<A> setNewSubjectLike(int, io.kubernetes.client.openapi.models.RbacV1alpha1Subject);

  public abstract io.kubernetes.client.openapi.models.V1alpha1RoleBindingFluent$SubjectsNested<A> editSubject(int);

  public abstract io.kubernetes.client.openapi.models.V1alpha1RoleBindingFluent$SubjectsNested<A> editFirstSubject();

  public abstract io.kubernetes.client.openapi.models.V1alpha1RoleBindingFluent$SubjectsNested<A> editLastSubject();

  public abstract io.kubernetes.client.openapi.models.V1alpha1RoleBindingFluent$SubjectsNested<A> editMatchingSubject(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.RbacV1alpha1SubjectBuilder>);
}
