Compiled from "V1NodeSystemInfoFluentImpl.java"
public class io.kubernetes.client.openapi.models.V1NodeSystemInfoFluentImpl<A extends io.kubernetes.client.openapi.models.V1NodeSystemInfoFluent<A>> extends io.kubernetes.client.fluent.BaseFluent<A> implements io.kubernetes.client.openapi.models.V1NodeSystemInfoFluent<A> {
  private java.lang.String architecture;

  private java.lang.String bootID;

  private java.lang.String containerRuntimeVersion;

  private java.lang.String kernelVersion;

  private java.lang.String kubeProxyVersion;

  private java.lang.String kubeletVersion;

  private java.lang.String machineID;

  private java.lang.String operatingSystem;

  private java.lang.String osImage;

  private java.lang.String systemUUID;

  public io.kubernetes.client.openapi.models.V1NodeSystemInfoFluentImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/kubernetes/client/fluent/BaseFluent."<init>":()V
       4: return

  public io.kubernetes.client.openapi.models.V1NodeSystemInfoFluentImpl(io.kubernetes.client.openapi.models.V1NodeSystemInfo);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/kubernetes/client/fluent/BaseFluent."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #2                  // Method io/kubernetes/client/openapi/models/V1NodeSystemInfo.getArchitecture:()Ljava/lang/String;
       9: invokevirtual #3                  // Method withArchitecture:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      12: pop
      13: aload_0
      14: aload_1
      15: invokevirtual #4                  // Method io/kubernetes/client/openapi/models/V1NodeSystemInfo.getBootID:()Ljava/lang/String;
      18: invokevirtual #5                  // Method withBootID:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      21: pop
      22: aload_0
      23: aload_1
      24: invokevirtual #6                  // Method io/kubernetes/client/openapi/models/V1NodeSystemInfo.getContainerRuntimeVersion:()Ljava/lang/String;
      27: invokevirtual #7                  // Method withContainerRuntimeVersion:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      30: pop
      31: aload_0
      32: aload_1
      33: invokevirtual #8                  // Method io/kubernetes/client/openapi/models/V1NodeSystemInfo.getKernelVersion:()Ljava/lang/String;
      36: invokevirtual #9                  // Method withKernelVersion:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      39: pop
      40: aload_0
      41: aload_1
      42: invokevirtual #10                 // Method io/kubernetes/client/openapi/models/V1NodeSystemInfo.getKubeProxyVersion:()Ljava/lang/String;
      45: invokevirtual #11                 // Method withKubeProxyVersion:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      48: pop
      49: aload_0
      50: aload_1
      51: invokevirtual #12                 // Method io/kubernetes/client/openapi/models/V1NodeSystemInfo.getKubeletVersion:()Ljava/lang/String;
      54: invokevirtual #13                 // Method withKubeletVersion:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      57: pop
      58: aload_0
      59: aload_1
      60: invokevirtual #14                 // Method io/kubernetes/client/openapi/models/V1NodeSystemInfo.getMachineID:()Ljava/lang/String;
      63: invokevirtual #15                 // Method withMachineID:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      66: pop
      67: aload_0
      68: aload_1
      69: invokevirtual #16                 // Method io/kubernetes/client/openapi/models/V1NodeSystemInfo.getOperatingSystem:()Ljava/lang/String;
      72: invokevirtual #17                 // Method withOperatingSystem:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      75: pop
      76: aload_0
      77: aload_1
      78: invokevirtual #18                 // Method io/kubernetes/client/openapi/models/V1NodeSystemInfo.getOsImage:()Ljava/lang/String;
      81: invokevirtual #19                 // Method withOsImage:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      84: pop
      85: aload_0
      86: aload_1
      87: invokevirtual #20                 // Method io/kubernetes/client/openapi/models/V1NodeSystemInfo.getSystemUUID:()Ljava/lang/String;
      90: invokevirtual #21                 // Method withSystemUUID:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      93: pop
      94: return

  public java.lang.String getArchitecture();
    Code:
       0: aload_0
       1: getfield      #22                 // Field architecture:Ljava/lang/String;
       4: areturn

  public A withArchitecture(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field architecture:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasArchitecture();
    Code:
       0: aload_0
       1: getfield      #22                 // Field architecture:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #23                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withNewArchitecture(java.lang.String);
    Code:
       0: aload_0
       1: new           #24                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #25                 // Method java/lang/String."<init>":(Ljava/lang/String;)V
       9: invokevirtual #3                  // Method withArchitecture:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      12: areturn

  public A withNewArchitecture(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: new           #24                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #26                 // Method java/lang/String."<init>":(Ljava/lang/StringBuilder;)V
       9: invokevirtual #3                  // Method withArchitecture:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      12: areturn

  public A withNewArchitecture(java.lang.StringBuffer);
    Code:
       0: aload_0
       1: new           #24                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #27                 // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
       9: invokevirtual #3                  // Method withArchitecture:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      12: areturn

  public java.lang.String getBootID();
    Code:
       0: aload_0
       1: getfield      #28                 // Field bootID:Ljava/lang/String;
       4: areturn

  public A withBootID(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field bootID:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasBootID();
    Code:
       0: aload_0
       1: getfield      #28                 // Field bootID:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #23                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withNewBootID(java.lang.String);
    Code:
       0: aload_0
       1: new           #24                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #25                 // Method java/lang/String."<init>":(Ljava/lang/String;)V
       9: invokevirtual #5                  // Method withBootID:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      12: areturn

  public A withNewBootID(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: new           #24                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #26                 // Method java/lang/String."<init>":(Ljava/lang/StringBuilder;)V
       9: invokevirtual #5                  // Method withBootID:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      12: areturn

  public A withNewBootID(java.lang.StringBuffer);
    Code:
       0: aload_0
       1: new           #24                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #27                 // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
       9: invokevirtual #5                  // Method withBootID:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      12: areturn

  public java.lang.String getContainerRuntimeVersion();
    Code:
       0: aload_0
       1: getfield      #29                 // Field containerRuntimeVersion:Ljava/lang/String;
       4: areturn

  public A withContainerRuntimeVersion(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field containerRuntimeVersion:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasContainerRuntimeVersion();
    Code:
       0: aload_0
       1: getfield      #29                 // Field containerRuntimeVersion:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #23                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withNewContainerRuntimeVersion(java.lang.String);
    Code:
       0: aload_0
       1: new           #24                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #25                 // Method java/lang/String."<init>":(Ljava/lang/String;)V
       9: invokevirtual #7                  // Method withContainerRuntimeVersion:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      12: areturn

  public A withNewContainerRuntimeVersion(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: new           #24                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #26                 // Method java/lang/String."<init>":(Ljava/lang/StringBuilder;)V
       9: invokevirtual #7                  // Method withContainerRuntimeVersion:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      12: areturn

  public A withNewContainerRuntimeVersion(java.lang.StringBuffer);
    Code:
       0: aload_0
       1: new           #24                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #27                 // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
       9: invokevirtual #7                  // Method withContainerRuntimeVersion:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      12: areturn

  public java.lang.String getKernelVersion();
    Code:
       0: aload_0
       1: getfield      #30                 // Field kernelVersion:Ljava/lang/String;
       4: areturn

  public A withKernelVersion(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #30                 // Field kernelVersion:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasKernelVersion();
    Code:
       0: aload_0
       1: getfield      #30                 // Field kernelVersion:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #23                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withNewKernelVersion(java.lang.String);
    Code:
       0: aload_0
       1: new           #24                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #25                 // Method java/lang/String."<init>":(Ljava/lang/String;)V
       9: invokevirtual #9                  // Method withKernelVersion:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      12: areturn

  public A withNewKernelVersion(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: new           #24                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #26                 // Method java/lang/String."<init>":(Ljava/lang/StringBuilder;)V
       9: invokevirtual #9                  // Method withKernelVersion:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      12: areturn

  public A withNewKernelVersion(java.lang.StringBuffer);
    Code:
       0: aload_0
       1: new           #24                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #27                 // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
       9: invokevirtual #9                  // Method withKernelVersion:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      12: areturn

  public java.lang.String getKubeProxyVersion();
    Code:
       0: aload_0
       1: getfield      #31                 // Field kubeProxyVersion:Ljava/lang/String;
       4: areturn

  public A withKubeProxyVersion(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field kubeProxyVersion:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasKubeProxyVersion();
    Code:
       0: aload_0
       1: getfield      #31                 // Field kubeProxyVersion:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #23                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withNewKubeProxyVersion(java.lang.String);
    Code:
       0: aload_0
       1: new           #24                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #25                 // Method java/lang/String."<init>":(Ljava/lang/String;)V
       9: invokevirtual #11                 // Method withKubeProxyVersion:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      12: areturn

  public A withNewKubeProxyVersion(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: new           #24                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #26                 // Method java/lang/String."<init>":(Ljava/lang/StringBuilder;)V
       9: invokevirtual #11                 // Method withKubeProxyVersion:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      12: areturn

  public A withNewKubeProxyVersion(java.lang.StringBuffer);
    Code:
       0: aload_0
       1: new           #24                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #27                 // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
       9: invokevirtual #11                 // Method withKubeProxyVersion:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      12: areturn

  public java.lang.String getKubeletVersion();
    Code:
       0: aload_0
       1: getfield      #32                 // Field kubeletVersion:Ljava/lang/String;
       4: areturn

  public A withKubeletVersion(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field kubeletVersion:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasKubeletVersion();
    Code:
       0: aload_0
       1: getfield      #32                 // Field kubeletVersion:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #23                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withNewKubeletVersion(java.lang.String);
    Code:
       0: aload_0
       1: new           #24                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #25                 // Method java/lang/String."<init>":(Ljava/lang/String;)V
       9: invokevirtual #13                 // Method withKubeletVersion:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      12: areturn

  public A withNewKubeletVersion(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: new           #24                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #26                 // Method java/lang/String."<init>":(Ljava/lang/StringBuilder;)V
       9: invokevirtual #13                 // Method withKubeletVersion:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      12: areturn

  public A withNewKubeletVersion(java.lang.StringBuffer);
    Code:
       0: aload_0
       1: new           #24                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #27                 // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
       9: invokevirtual #13                 // Method withKubeletVersion:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      12: areturn

  public java.lang.String getMachineID();
    Code:
       0: aload_0
       1: getfield      #33                 // Field machineID:Ljava/lang/String;
       4: areturn

  public A withMachineID(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field machineID:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasMachineID();
    Code:
       0: aload_0
       1: getfield      #33                 // Field machineID:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #23                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withNewMachineID(java.lang.String);
    Code:
       0: aload_0
       1: new           #24                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #25                 // Method java/lang/String."<init>":(Ljava/lang/String;)V
       9: invokevirtual #15                 // Method withMachineID:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      12: areturn

  public A withNewMachineID(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: new           #24                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #26                 // Method java/lang/String."<init>":(Ljava/lang/StringBuilder;)V
       9: invokevirtual #15                 // Method withMachineID:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      12: areturn

  public A withNewMachineID(java.lang.StringBuffer);
    Code:
       0: aload_0
       1: new           #24                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #27                 // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
       9: invokevirtual #15                 // Method withMachineID:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      12: areturn

  public java.lang.String getOperatingSystem();
    Code:
       0: aload_0
       1: getfield      #34                 // Field operatingSystem:Ljava/lang/String;
       4: areturn

  public A withOperatingSystem(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #34                 // Field operatingSystem:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasOperatingSystem();
    Code:
       0: aload_0
       1: getfield      #34                 // Field operatingSystem:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #23                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withNewOperatingSystem(java.lang.String);
    Code:
       0: aload_0
       1: new           #24                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #25                 // Method java/lang/String."<init>":(Ljava/lang/String;)V
       9: invokevirtual #17                 // Method withOperatingSystem:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      12: areturn

  public A withNewOperatingSystem(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: new           #24                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #26                 // Method java/lang/String."<init>":(Ljava/lang/StringBuilder;)V
       9: invokevirtual #17                 // Method withOperatingSystem:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      12: areturn

  public A withNewOperatingSystem(java.lang.StringBuffer);
    Code:
       0: aload_0
       1: new           #24                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #27                 // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
       9: invokevirtual #17                 // Method withOperatingSystem:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      12: areturn

  public java.lang.String getOsImage();
    Code:
       0: aload_0
       1: getfield      #35                 // Field osImage:Ljava/lang/String;
       4: areturn

  public A withOsImage(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #35                 // Field osImage:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasOsImage();
    Code:
       0: aload_0
       1: getfield      #35                 // Field osImage:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #23                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withNewOsImage(java.lang.String);
    Code:
       0: aload_0
       1: new           #24                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #25                 // Method java/lang/String."<init>":(Ljava/lang/String;)V
       9: invokevirtual #19                 // Method withOsImage:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      12: areturn

  public A withNewOsImage(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: new           #24                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #26                 // Method java/lang/String."<init>":(Ljava/lang/StringBuilder;)V
       9: invokevirtual #19                 // Method withOsImage:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      12: areturn

  public A withNewOsImage(java.lang.StringBuffer);
    Code:
       0: aload_0
       1: new           #24                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #27                 // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
       9: invokevirtual #19                 // Method withOsImage:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      12: areturn

  public java.lang.String getSystemUUID();
    Code:
       0: aload_0
       1: getfield      #36                 // Field systemUUID:Ljava/lang/String;
       4: areturn

  public A withSystemUUID(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #36                 // Field systemUUID:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasSystemUUID();
    Code:
       0: aload_0
       1: getfield      #36                 // Field systemUUID:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #23                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withNewSystemUUID(java.lang.String);
    Code:
       0: aload_0
       1: new           #24                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #25                 // Method java/lang/String."<init>":(Ljava/lang/String;)V
       9: invokevirtual #21                 // Method withSystemUUID:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      12: areturn

  public A withNewSystemUUID(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: new           #24                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #26                 // Method java/lang/String."<init>":(Ljava/lang/StringBuilder;)V
       9: invokevirtual #21                 // Method withSystemUUID:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      12: areturn

  public A withNewSystemUUID(java.lang.StringBuffer);
    Code:
       0: aload_0
       1: new           #24                 // class java/lang/String
       4: dup
       5: aload_1
       6: invokespecial #27                 // Method java/lang/String."<init>":(Ljava/lang/StringBuffer;)V
       9: invokevirtual #21                 // Method withSystemUUID:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1NodeSystemInfoFluent;
      12: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #37                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #37                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #38                 // class io/kubernetes/client/openapi/models/V1NodeSystemInfoFluentImpl
      28: astore_2
      29: aload_0
      30: getfield      #22                 // Field architecture:Ljava/lang/String;
      33: ifnull        53
      36: aload_0
      37: getfield      #22                 // Field architecture:Ljava/lang/String;
      40: aload_2
      41: getfield      #22                 // Field architecture:Ljava/lang/String;
      44: invokevirtual #39                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      47: ifne          62
      50: goto          60
      53: aload_2
      54: getfield      #22                 // Field architecture:Ljava/lang/String;
      57: ifnull        62
      60: iconst_0
      61: ireturn
      62: aload_0
      63: getfield      #28                 // Field bootID:Ljava/lang/String;
      66: ifnull        86
      69: aload_0
      70: getfield      #28                 // Field bootID:Ljava/lang/String;
      73: aload_2
      74: getfield      #28                 // Field bootID:Ljava/lang/String;
      77: invokevirtual #39                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      80: ifne          95
      83: goto          93
      86: aload_2
      87: getfield      #28                 // Field bootID:Ljava/lang/String;
      90: ifnull        95
      93: iconst_0
      94: ireturn
      95: aload_0
      96: getfield      #29                 // Field containerRuntimeVersion:Ljava/lang/String;
      99: ifnull        119
     102: aload_0
     103: getfield      #29                 // Field containerRuntimeVersion:Ljava/lang/String;
     106: aload_2
     107: getfield      #29                 // Field containerRuntimeVersion:Ljava/lang/String;
     110: invokevirtual #39                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     113: ifne          128
     116: goto          126
     119: aload_2
     120: getfield      #29                 // Field containerRuntimeVersion:Ljava/lang/String;
     123: ifnull        128
     126: iconst_0
     127: ireturn
     128: aload_0
     129: getfield      #30                 // Field kernelVersion:Ljava/lang/String;
     132: ifnull        152
     135: aload_0
     136: getfield      #30                 // Field kernelVersion:Ljava/lang/String;
     139: aload_2
     140: getfield      #30                 // Field kernelVersion:Ljava/lang/String;
     143: invokevirtual #39                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     146: ifne          161
     149: goto          159
     152: aload_2
     153: getfield      #30                 // Field kernelVersion:Ljava/lang/String;
     156: ifnull        161
     159: iconst_0
     160: ireturn
     161: aload_0
     162: getfield      #31                 // Field kubeProxyVersion:Ljava/lang/String;
     165: ifnull        185
     168: aload_0
     169: getfield      #31                 // Field kubeProxyVersion:Ljava/lang/String;
     172: aload_2
     173: getfield      #31                 // Field kubeProxyVersion:Ljava/lang/String;
     176: invokevirtual #39                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     179: ifne          194
     182: goto          192
     185: aload_2
     186: getfield      #31                 // Field kubeProxyVersion:Ljava/lang/String;
     189: ifnull        194
     192: iconst_0
     193: ireturn
     194: aload_0
     195: getfield      #32                 // Field kubeletVersion:Ljava/lang/String;
     198: ifnull        218
     201: aload_0
     202: getfield      #32                 // Field kubeletVersion:Ljava/lang/String;
     205: aload_2
     206: getfield      #32                 // Field kubeletVersion:Ljava/lang/String;
     209: invokevirtual #39                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     212: ifne          227
     215: goto          225
     218: aload_2
     219: getfield      #32                 // Field kubeletVersion:Ljava/lang/String;
     222: ifnull        227
     225: iconst_0
     226: ireturn
     227: aload_0
     228: getfield      #33                 // Field machineID:Ljava/lang/String;
     231: ifnull        251
     234: aload_0
     235: getfield      #33                 // Field machineID:Ljava/lang/String;
     238: aload_2
     239: getfield      #33                 // Field machineID:Ljava/lang/String;
     242: invokevirtual #39                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     245: ifne          260
     248: goto          258
     251: aload_2
     252: getfield      #33                 // Field machineID:Ljava/lang/String;
     255: ifnull        260
     258: iconst_0
     259: ireturn
     260: aload_0
     261: getfield      #34                 // Field operatingSystem:Ljava/lang/String;
     264: ifnull        284
     267: aload_0
     268: getfield      #34                 // Field operatingSystem:Ljava/lang/String;
     271: aload_2
     272: getfield      #34                 // Field operatingSystem:Ljava/lang/String;
     275: invokevirtual #39                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     278: ifne          293
     281: goto          291
     284: aload_2
     285: getfield      #34                 // Field operatingSystem:Ljava/lang/String;
     288: ifnull        293
     291: iconst_0
     292: ireturn
     293: aload_0
     294: getfield      #35                 // Field osImage:Ljava/lang/String;
     297: ifnull        317
     300: aload_0
     301: getfield      #35                 // Field osImage:Ljava/lang/String;
     304: aload_2
     305: getfield      #35                 // Field osImage:Ljava/lang/String;
     308: invokevirtual #39                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     311: ifne          326
     314: goto          324
     317: aload_2
     318: getfield      #35                 // Field osImage:Ljava/lang/String;
     321: ifnull        326
     324: iconst_0
     325: ireturn
     326: aload_0
     327: getfield      #36                 // Field systemUUID:Ljava/lang/String;
     330: ifnull        350
     333: aload_0
     334: getfield      #36                 // Field systemUUID:Ljava/lang/String;
     337: aload_2
     338: getfield      #36                 // Field systemUUID:Ljava/lang/String;
     341: invokevirtual #39                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     344: ifne          359
     347: goto          357
     350: aload_2
     351: getfield      #36                 // Field systemUUID:Ljava/lang/String;
     354: ifnull        359
     357: iconst_0
     358: ireturn
     359: iconst_1
     360: ireturn

  public int hashCode();
    Code:
       0: bipush        11
       2: anewarray     #40                 // class java/lang/Object
       5: dup
       6: iconst_0
       7: aload_0
       8: getfield      #22                 // Field architecture:Ljava/lang/String;
      11: aastore
      12: dup
      13: iconst_1
      14: aload_0
      15: getfield      #28                 // Field bootID:Ljava/lang/String;
      18: aastore
      19: dup
      20: iconst_2
      21: aload_0
      22: getfield      #29                 // Field containerRuntimeVersion:Ljava/lang/String;
      25: aastore
      26: dup
      27: iconst_3
      28: aload_0
      29: getfield      #30                 // Field kernelVersion:Ljava/lang/String;
      32: aastore
      33: dup
      34: iconst_4
      35: aload_0
      36: getfield      #31                 // Field kubeProxyVersion:Ljava/lang/String;
      39: aastore
      40: dup
      41: iconst_5
      42: aload_0
      43: getfield      #32                 // Field kubeletVersion:Ljava/lang/String;
      46: aastore
      47: dup
      48: bipush        6
      50: aload_0
      51: getfield      #33                 // Field machineID:Ljava/lang/String;
      54: aastore
      55: dup
      56: bipush        7
      58: aload_0
      59: getfield      #34                 // Field operatingSystem:Ljava/lang/String;
      62: aastore
      63: dup
      64: bipush        8
      66: aload_0
      67: getfield      #35                 // Field osImage:Ljava/lang/String;
      70: aastore
      71: dup
      72: bipush        9
      74: aload_0
      75: getfield      #36                 // Field systemUUID:Ljava/lang/String;
      78: aastore
      79: dup
      80: bipush        10
      82: aload_0
      83: invokespecial #41                 // Method java/lang/Object.hashCode:()I
      86: invokestatic  #42                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      89: aastore
      90: invokestatic  #43                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      93: ireturn
}
