Compiled from "V1beta1APIServiceSpecFluent.java"
public interface io.kubernetes.client.openapi.models.V1beta1APIServiceSpecFluent<A extends io.kubernetes.client.openapi.models.V1beta1APIServiceSpecFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract A withCaBundle(byte...);

  public abstract byte[] getCaBundle();

  public abstract A addToCaBundle(int, java.lang.Byte);

  public abstract A setToCaBundle(int, java.lang.Byte);

  public abstract A addToCaBundle(java.lang.Byte...);

  public abstract A addAllToCaBundle(java.util.Collection<java.lang.Byte>);

  public abstract A removeFromCaBundle(java.lang.Byte...);

  public abstract A removeAllFromCaBundle(java.util.Collection<java.lang.Byte>);

  public abstract java.lang.Boolean hasCaBundle();

  public abstract A addNewCaBundle(java.lang.String);

  public abstract A addNewCaBundle(byte);

  public abstract java.lang.String getGroup();

  public abstract A withGroup(java.lang.String);

  public abstract java.lang.Boolean hasGroup();

  public abstract A withNewGroup(java.lang.String);

  public abstract A withNewGroup(java.lang.StringBuilder);

  public abstract A withNewGroup(java.lang.StringBuffer);

  public abstract java.lang.Integer getGroupPriorityMinimum();

  public abstract A withGroupPriorityMinimum(java.lang.Integer);

  public abstract java.lang.Boolean hasGroupPriorityMinimum();

  public abstract java.lang.Boolean isInsecureSkipTLSVerify();

  public abstract A withInsecureSkipTLSVerify(java.lang.Boolean);

  public abstract java.lang.Boolean hasInsecureSkipTLSVerify();

  public abstract A withNewInsecureSkipTLSVerify(java.lang.String);

  public abstract A withNewInsecureSkipTLSVerify(boolean);

  public abstract io.kubernetes.client.openapi.models.ApiregistrationV1beta1ServiceReference getService();

  public abstract io.kubernetes.client.openapi.models.ApiregistrationV1beta1ServiceReference buildService();

  public abstract A withService(io.kubernetes.client.openapi.models.ApiregistrationV1beta1ServiceReference);

  public abstract java.lang.Boolean hasService();

  public abstract io.kubernetes.client.openapi.models.V1beta1APIServiceSpecFluent$ServiceNested<A> withNewService();

  public abstract io.kubernetes.client.openapi.models.V1beta1APIServiceSpecFluent$ServiceNested<A> withNewServiceLike(io.kubernetes.client.openapi.models.ApiregistrationV1beta1ServiceReference);

  public abstract io.kubernetes.client.openapi.models.V1beta1APIServiceSpecFluent$ServiceNested<A> editService();

  public abstract io.kubernetes.client.openapi.models.V1beta1APIServiceSpecFluent$ServiceNested<A> editOrNewService();

  public abstract io.kubernetes.client.openapi.models.V1beta1APIServiceSpecFluent$ServiceNested<A> editOrNewServiceLike(io.kubernetes.client.openapi.models.ApiregistrationV1beta1ServiceReference);

  public abstract java.lang.String getVersion();

  public abstract A withVersion(java.lang.String);

  public abstract java.lang.Boolean hasVersion();

  public abstract A withNewVersion(java.lang.String);

  public abstract A withNewVersion(java.lang.StringBuilder);

  public abstract A withNewVersion(java.lang.StringBuffer);

  public abstract java.lang.Integer getVersionPriority();

  public abstract A withVersionPriority(java.lang.Integer);

  public abstract java.lang.Boolean hasVersionPriority();
}
