Compiled from "V1CSINodeDriverFluent.java"
public interface io.kubernetes.client.openapi.models.V1CSINodeDriverFluent<A extends io.kubernetes.client.openapi.models.V1CSINodeDriverFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract io.kubernetes.client.openapi.models.V1VolumeNodeResources getAllocatable();

  public abstract io.kubernetes.client.openapi.models.V1VolumeNodeResources buildAllocatable();

  public abstract A withAllocatable(io.kubernetes.client.openapi.models.V1VolumeNodeResources);

  public abstract java.lang.Boolean hasAllocatable();

  public abstract io.kubernetes.client.openapi.models.V1CSINodeDriverFluent$AllocatableNested<A> withNewAllocatable();

  public abstract io.kubernetes.client.openapi.models.V1CSINodeDriverFluent$AllocatableNested<A> withNewAllocatableLike(io.kubernetes.client.openapi.models.V1VolumeNodeResources);

  public abstract io.kubernetes.client.openapi.models.V1CSINodeDriverFluent$AllocatableNested<A> editAllocatable();

  public abstract io.kubernetes.client.openapi.models.V1CSINodeDriverFluent$AllocatableNested<A> editOrNewAllocatable();

  public abstract io.kubernetes.client.openapi.models.V1CSINodeDriverFluent$AllocatableNested<A> editOrNewAllocatableLike(io.kubernetes.client.openapi.models.V1VolumeNodeResources);

  public abstract java.lang.String getName();

  public abstract A withName(java.lang.String);

  public abstract java.lang.Boolean hasName();

  public abstract A withNewName(java.lang.String);

  public abstract A withNewName(java.lang.StringBuilder);

  public abstract A withNewName(java.lang.StringBuffer);

  public abstract java.lang.String getNodeID();

  public abstract A withNodeID(java.lang.String);

  public abstract java.lang.Boolean hasNodeID();

  public abstract A withNewNodeID(java.lang.String);

  public abstract A withNewNodeID(java.lang.StringBuilder);

  public abstract A withNewNodeID(java.lang.StringBuffer);

  public abstract A addToTopologyKeys(int, java.lang.String);

  public abstract A setToTopologyKeys(int, java.lang.String);

  public abstract A addToTopologyKeys(java.lang.String...);

  public abstract A addAllToTopologyKeys(java.util.Collection<java.lang.String>);

  public abstract A removeFromTopologyKeys(java.lang.String...);

  public abstract A removeAllFromTopologyKeys(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getTopologyKeys();

  public abstract java.lang.String getTopologyKey(int);

  public abstract java.lang.String getFirstTopologyKey();

  public abstract java.lang.String getLastTopologyKey();

  public abstract java.lang.String getMatchingTopologyKey(io.kubernetes.client.fluent.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingTopologyKey(io.kubernetes.client.fluent.Predicate<java.lang.String>);

  public abstract A withTopologyKeys(java.util.List<java.lang.String>);

  public abstract A withTopologyKeys(java.lang.String...);

  public abstract java.lang.Boolean hasTopologyKeys();

  public abstract A addNewTopologyKey(java.lang.String);

  public abstract A addNewTopologyKey(java.lang.StringBuilder);

  public abstract A addNewTopologyKey(java.lang.StringBuffer);
}
