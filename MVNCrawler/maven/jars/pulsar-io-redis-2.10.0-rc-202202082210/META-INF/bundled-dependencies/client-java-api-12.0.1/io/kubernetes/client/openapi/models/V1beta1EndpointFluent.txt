Compiled from "V1beta1EndpointFluent.java"
public interface io.kubernetes.client.openapi.models.V1beta1EndpointFluent<A extends io.kubernetes.client.openapi.models.V1beta1EndpointFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract A addToAddresses(int, java.lang.String);

  public abstract A setToAddresses(int, java.lang.String);

  public abstract A addToAddresses(java.lang.String...);

  public abstract A addAllToAddresses(java.util.Collection<java.lang.String>);

  public abstract A removeFromAddresses(java.lang.String...);

  public abstract A removeAllFromAddresses(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getAddresses();

  public abstract java.lang.String getAddress(int);

  public abstract java.lang.String getFirstAddress();

  public abstract java.lang.String getLastAddress();

  public abstract java.lang.String getMatchingAddress(io.kubernetes.client.fluent.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingAddress(io.kubernetes.client.fluent.Predicate<java.lang.String>);

  public abstract A withAddresses(java.util.List<java.lang.String>);

  public abstract A withAddresses(java.lang.String...);

  public abstract java.lang.Boolean hasAddresses();

  public abstract A addNewAddress(java.lang.String);

  public abstract A addNewAddress(java.lang.StringBuilder);

  public abstract A addNewAddress(java.lang.StringBuffer);

  public abstract io.kubernetes.client.openapi.models.V1beta1EndpointConditions getConditions();

  public abstract io.kubernetes.client.openapi.models.V1beta1EndpointConditions buildConditions();

  public abstract A withConditions(io.kubernetes.client.openapi.models.V1beta1EndpointConditions);

  public abstract java.lang.Boolean hasConditions();

  public abstract io.kubernetes.client.openapi.models.V1beta1EndpointFluent$ConditionsNested<A> withNewConditions();

  public abstract io.kubernetes.client.openapi.models.V1beta1EndpointFluent$ConditionsNested<A> withNewConditionsLike(io.kubernetes.client.openapi.models.V1beta1EndpointConditions);

  public abstract io.kubernetes.client.openapi.models.V1beta1EndpointFluent$ConditionsNested<A> editConditions();

  public abstract io.kubernetes.client.openapi.models.V1beta1EndpointFluent$ConditionsNested<A> editOrNewConditions();

  public abstract io.kubernetes.client.openapi.models.V1beta1EndpointFluent$ConditionsNested<A> editOrNewConditionsLike(io.kubernetes.client.openapi.models.V1beta1EndpointConditions);

  public abstract java.lang.String getHostname();

  public abstract A withHostname(java.lang.String);

  public abstract java.lang.Boolean hasHostname();

  public abstract A withNewHostname(java.lang.String);

  public abstract A withNewHostname(java.lang.StringBuilder);

  public abstract A withNewHostname(java.lang.StringBuffer);

  public abstract java.lang.String getNodeName();

  public abstract A withNodeName(java.lang.String);

  public abstract java.lang.Boolean hasNodeName();

  public abstract A withNewNodeName(java.lang.String);

  public abstract A withNewNodeName(java.lang.StringBuilder);

  public abstract A withNewNodeName(java.lang.StringBuffer);

  public abstract io.kubernetes.client.openapi.models.V1ObjectReference getTargetRef();

  public abstract io.kubernetes.client.openapi.models.V1ObjectReference buildTargetRef();

  public abstract A withTargetRef(io.kubernetes.client.openapi.models.V1ObjectReference);

  public abstract java.lang.Boolean hasTargetRef();

  public abstract io.kubernetes.client.openapi.models.V1beta1EndpointFluent$TargetRefNested<A> withNewTargetRef();

  public abstract io.kubernetes.client.openapi.models.V1beta1EndpointFluent$TargetRefNested<A> withNewTargetRefLike(io.kubernetes.client.openapi.models.V1ObjectReference);

  public abstract io.kubernetes.client.openapi.models.V1beta1EndpointFluent$TargetRefNested<A> editTargetRef();

  public abstract io.kubernetes.client.openapi.models.V1beta1EndpointFluent$TargetRefNested<A> editOrNewTargetRef();

  public abstract io.kubernetes.client.openapi.models.V1beta1EndpointFluent$TargetRefNested<A> editOrNewTargetRefLike(io.kubernetes.client.openapi.models.V1ObjectReference);

  public abstract A addToTopology(java.lang.String, java.lang.String);

  public abstract A addToTopology(java.util.Map<java.lang.String, java.lang.String>);

  public abstract A removeFromTopology(java.lang.String);

  public abstract A removeFromTopology(java.util.Map<java.lang.String, java.lang.String>);

  public abstract java.util.Map<java.lang.String, java.lang.String> getTopology();

  public abstract A withTopology(java.util.Map<java.lang.String, java.lang.String>);

  public abstract java.lang.Boolean hasTopology();
}
