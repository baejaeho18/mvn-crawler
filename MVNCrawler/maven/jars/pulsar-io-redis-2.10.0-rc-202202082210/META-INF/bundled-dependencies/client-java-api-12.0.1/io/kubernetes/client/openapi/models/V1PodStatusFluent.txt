Compiled from "V1PodStatusFluent.java"
public interface io.kubernetes.client.openapi.models.V1PodStatusFluent<A extends io.kubernetes.client.openapi.models.V1PodStatusFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract A addToConditions(int, io.kubernetes.client.openapi.models.V1PodCondition);

  public abstract A setToConditions(int, io.kubernetes.client.openapi.models.V1PodCondition);

  public abstract A addToConditions(io.kubernetes.client.openapi.models.V1PodCondition...);

  public abstract A addAllToConditions(java.util.Collection<io.kubernetes.client.openapi.models.V1PodCondition>);

  public abstract A removeFromConditions(io.kubernetes.client.openapi.models.V1PodCondition...);

  public abstract A removeAllFromConditions(java.util.Collection<io.kubernetes.client.openapi.models.V1PodCondition>);

  public abstract A removeMatchingFromConditions(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1PodConditionBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1PodCondition> getConditions();

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1PodCondition> buildConditions();

  public abstract io.kubernetes.client.openapi.models.V1PodCondition buildCondition(int);

  public abstract io.kubernetes.client.openapi.models.V1PodCondition buildFirstCondition();

  public abstract io.kubernetes.client.openapi.models.V1PodCondition buildLastCondition();

  public abstract io.kubernetes.client.openapi.models.V1PodCondition buildMatchingCondition(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1PodConditionBuilder>);

  public abstract java.lang.Boolean hasMatchingCondition(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1PodConditionBuilder>);

  public abstract A withConditions(java.util.List<io.kubernetes.client.openapi.models.V1PodCondition>);

  public abstract A withConditions(io.kubernetes.client.openapi.models.V1PodCondition...);

  public abstract java.lang.Boolean hasConditions();

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$ConditionsNested<A> addNewCondition();

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$ConditionsNested<A> addNewConditionLike(io.kubernetes.client.openapi.models.V1PodCondition);

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$ConditionsNested<A> setNewConditionLike(int, io.kubernetes.client.openapi.models.V1PodCondition);

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$ConditionsNested<A> editCondition(int);

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$ConditionsNested<A> editFirstCondition();

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$ConditionsNested<A> editLastCondition();

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$ConditionsNested<A> editMatchingCondition(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1PodConditionBuilder>);

  public abstract A addToContainerStatuses(int, io.kubernetes.client.openapi.models.V1ContainerStatus);

  public abstract A setToContainerStatuses(int, io.kubernetes.client.openapi.models.V1ContainerStatus);

  public abstract A addToContainerStatuses(io.kubernetes.client.openapi.models.V1ContainerStatus...);

  public abstract A addAllToContainerStatuses(java.util.Collection<io.kubernetes.client.openapi.models.V1ContainerStatus>);

  public abstract A removeFromContainerStatuses(io.kubernetes.client.openapi.models.V1ContainerStatus...);

  public abstract A removeAllFromContainerStatuses(java.util.Collection<io.kubernetes.client.openapi.models.V1ContainerStatus>);

  public abstract A removeMatchingFromContainerStatuses(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1ContainerStatusBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1ContainerStatus> getContainerStatuses();

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1ContainerStatus> buildContainerStatuses();

  public abstract io.kubernetes.client.openapi.models.V1ContainerStatus buildContainerStatus(int);

  public abstract io.kubernetes.client.openapi.models.V1ContainerStatus buildFirstContainerStatus();

  public abstract io.kubernetes.client.openapi.models.V1ContainerStatus buildLastContainerStatus();

  public abstract io.kubernetes.client.openapi.models.V1ContainerStatus buildMatchingContainerStatus(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1ContainerStatusBuilder>);

  public abstract java.lang.Boolean hasMatchingContainerStatus(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1ContainerStatusBuilder>);

  public abstract A withContainerStatuses(java.util.List<io.kubernetes.client.openapi.models.V1ContainerStatus>);

  public abstract A withContainerStatuses(io.kubernetes.client.openapi.models.V1ContainerStatus...);

  public abstract java.lang.Boolean hasContainerStatuses();

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$ContainerStatusesNested<A> addNewContainerStatus();

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$ContainerStatusesNested<A> addNewContainerStatusLike(io.kubernetes.client.openapi.models.V1ContainerStatus);

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$ContainerStatusesNested<A> setNewContainerStatusLike(int, io.kubernetes.client.openapi.models.V1ContainerStatus);

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$ContainerStatusesNested<A> editContainerStatus(int);

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$ContainerStatusesNested<A> editFirstContainerStatus();

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$ContainerStatusesNested<A> editLastContainerStatus();

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$ContainerStatusesNested<A> editMatchingContainerStatus(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1ContainerStatusBuilder>);

  public abstract A addToEphemeralContainerStatuses(int, io.kubernetes.client.openapi.models.V1ContainerStatus);

  public abstract A setToEphemeralContainerStatuses(int, io.kubernetes.client.openapi.models.V1ContainerStatus);

  public abstract A addToEphemeralContainerStatuses(io.kubernetes.client.openapi.models.V1ContainerStatus...);

  public abstract A addAllToEphemeralContainerStatuses(java.util.Collection<io.kubernetes.client.openapi.models.V1ContainerStatus>);

  public abstract A removeFromEphemeralContainerStatuses(io.kubernetes.client.openapi.models.V1ContainerStatus...);

  public abstract A removeAllFromEphemeralContainerStatuses(java.util.Collection<io.kubernetes.client.openapi.models.V1ContainerStatus>);

  public abstract A removeMatchingFromEphemeralContainerStatuses(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1ContainerStatusBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1ContainerStatus> getEphemeralContainerStatuses();

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1ContainerStatus> buildEphemeralContainerStatuses();

  public abstract io.kubernetes.client.openapi.models.V1ContainerStatus buildEphemeralContainerStatus(int);

  public abstract io.kubernetes.client.openapi.models.V1ContainerStatus buildFirstEphemeralContainerStatus();

  public abstract io.kubernetes.client.openapi.models.V1ContainerStatus buildLastEphemeralContainerStatus();

  public abstract io.kubernetes.client.openapi.models.V1ContainerStatus buildMatchingEphemeralContainerStatus(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1ContainerStatusBuilder>);

  public abstract java.lang.Boolean hasMatchingEphemeralContainerStatus(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1ContainerStatusBuilder>);

  public abstract A withEphemeralContainerStatuses(java.util.List<io.kubernetes.client.openapi.models.V1ContainerStatus>);

  public abstract A withEphemeralContainerStatuses(io.kubernetes.client.openapi.models.V1ContainerStatus...);

  public abstract java.lang.Boolean hasEphemeralContainerStatuses();

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$EphemeralContainerStatusesNested<A> addNewEphemeralContainerStatus();

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$EphemeralContainerStatusesNested<A> addNewEphemeralContainerStatusLike(io.kubernetes.client.openapi.models.V1ContainerStatus);

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$EphemeralContainerStatusesNested<A> setNewEphemeralContainerStatusLike(int, io.kubernetes.client.openapi.models.V1ContainerStatus);

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$EphemeralContainerStatusesNested<A> editEphemeralContainerStatus(int);

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$EphemeralContainerStatusesNested<A> editFirstEphemeralContainerStatus();

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$EphemeralContainerStatusesNested<A> editLastEphemeralContainerStatus();

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$EphemeralContainerStatusesNested<A> editMatchingEphemeralContainerStatus(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1ContainerStatusBuilder>);

  public abstract java.lang.String getHostIP();

  public abstract A withHostIP(java.lang.String);

  public abstract java.lang.Boolean hasHostIP();

  public abstract A withNewHostIP(java.lang.String);

  public abstract A withNewHostIP(java.lang.StringBuilder);

  public abstract A withNewHostIP(java.lang.StringBuffer);

  public abstract A addToInitContainerStatuses(int, io.kubernetes.client.openapi.models.V1ContainerStatus);

  public abstract A setToInitContainerStatuses(int, io.kubernetes.client.openapi.models.V1ContainerStatus);

  public abstract A addToInitContainerStatuses(io.kubernetes.client.openapi.models.V1ContainerStatus...);

  public abstract A addAllToInitContainerStatuses(java.util.Collection<io.kubernetes.client.openapi.models.V1ContainerStatus>);

  public abstract A removeFromInitContainerStatuses(io.kubernetes.client.openapi.models.V1ContainerStatus...);

  public abstract A removeAllFromInitContainerStatuses(java.util.Collection<io.kubernetes.client.openapi.models.V1ContainerStatus>);

  public abstract A removeMatchingFromInitContainerStatuses(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1ContainerStatusBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1ContainerStatus> getInitContainerStatuses();

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1ContainerStatus> buildInitContainerStatuses();

  public abstract io.kubernetes.client.openapi.models.V1ContainerStatus buildInitContainerStatus(int);

  public abstract io.kubernetes.client.openapi.models.V1ContainerStatus buildFirstInitContainerStatus();

  public abstract io.kubernetes.client.openapi.models.V1ContainerStatus buildLastInitContainerStatus();

  public abstract io.kubernetes.client.openapi.models.V1ContainerStatus buildMatchingInitContainerStatus(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1ContainerStatusBuilder>);

  public abstract java.lang.Boolean hasMatchingInitContainerStatus(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1ContainerStatusBuilder>);

  public abstract A withInitContainerStatuses(java.util.List<io.kubernetes.client.openapi.models.V1ContainerStatus>);

  public abstract A withInitContainerStatuses(io.kubernetes.client.openapi.models.V1ContainerStatus...);

  public abstract java.lang.Boolean hasInitContainerStatuses();

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$InitContainerStatusesNested<A> addNewInitContainerStatus();

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$InitContainerStatusesNested<A> addNewInitContainerStatusLike(io.kubernetes.client.openapi.models.V1ContainerStatus);

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$InitContainerStatusesNested<A> setNewInitContainerStatusLike(int, io.kubernetes.client.openapi.models.V1ContainerStatus);

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$InitContainerStatusesNested<A> editInitContainerStatus(int);

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$InitContainerStatusesNested<A> editFirstInitContainerStatus();

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$InitContainerStatusesNested<A> editLastInitContainerStatus();

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$InitContainerStatusesNested<A> editMatchingInitContainerStatus(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1ContainerStatusBuilder>);

  public abstract java.lang.String getMessage();

  public abstract A withMessage(java.lang.String);

  public abstract java.lang.Boolean hasMessage();

  public abstract A withNewMessage(java.lang.String);

  public abstract A withNewMessage(java.lang.StringBuilder);

  public abstract A withNewMessage(java.lang.StringBuffer);

  public abstract java.lang.String getNominatedNodeName();

  public abstract A withNominatedNodeName(java.lang.String);

  public abstract java.lang.Boolean hasNominatedNodeName();

  public abstract A withNewNominatedNodeName(java.lang.String);

  public abstract A withNewNominatedNodeName(java.lang.StringBuilder);

  public abstract A withNewNominatedNodeName(java.lang.StringBuffer);

  public abstract java.lang.String getPhase();

  public abstract A withPhase(java.lang.String);

  public abstract java.lang.Boolean hasPhase();

  public abstract A withNewPhase(java.lang.String);

  public abstract A withNewPhase(java.lang.StringBuilder);

  public abstract A withNewPhase(java.lang.StringBuffer);

  public abstract java.lang.String getPodIP();

  public abstract A withPodIP(java.lang.String);

  public abstract java.lang.Boolean hasPodIP();

  public abstract A withNewPodIP(java.lang.String);

  public abstract A withNewPodIP(java.lang.StringBuilder);

  public abstract A withNewPodIP(java.lang.StringBuffer);

  public abstract A addToPodIPs(int, io.kubernetes.client.openapi.models.V1PodIP);

  public abstract A setToPodIPs(int, io.kubernetes.client.openapi.models.V1PodIP);

  public abstract A addToPodIPs(io.kubernetes.client.openapi.models.V1PodIP...);

  public abstract A addAllToPodIPs(java.util.Collection<io.kubernetes.client.openapi.models.V1PodIP>);

  public abstract A removeFromPodIPs(io.kubernetes.client.openapi.models.V1PodIP...);

  public abstract A removeAllFromPodIPs(java.util.Collection<io.kubernetes.client.openapi.models.V1PodIP>);

  public abstract A removeMatchingFromPodIPs(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1PodIPBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1PodIP> getPodIPs();

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1PodIP> buildPodIPs();

  public abstract io.kubernetes.client.openapi.models.V1PodIP buildPodIP(int);

  public abstract io.kubernetes.client.openapi.models.V1PodIP buildFirstPodIP();

  public abstract io.kubernetes.client.openapi.models.V1PodIP buildLastPodIP();

  public abstract io.kubernetes.client.openapi.models.V1PodIP buildMatchingPodIP(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1PodIPBuilder>);

  public abstract java.lang.Boolean hasMatchingPodIP(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1PodIPBuilder>);

  public abstract A withPodIPs(java.util.List<io.kubernetes.client.openapi.models.V1PodIP>);

  public abstract A withPodIPs(io.kubernetes.client.openapi.models.V1PodIP...);

  public abstract java.lang.Boolean hasPodIPs();

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$PodIPsNested<A> addNewPodIP();

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$PodIPsNested<A> addNewPodIPLike(io.kubernetes.client.openapi.models.V1PodIP);

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$PodIPsNested<A> setNewPodIPLike(int, io.kubernetes.client.openapi.models.V1PodIP);

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$PodIPsNested<A> editPodIP(int);

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$PodIPsNested<A> editFirstPodIP();

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$PodIPsNested<A> editLastPodIP();

  public abstract io.kubernetes.client.openapi.models.V1PodStatusFluent$PodIPsNested<A> editMatchingPodIP(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1PodIPBuilder>);

  public abstract java.lang.String getQosClass();

  public abstract A withQosClass(java.lang.String);

  public abstract java.lang.Boolean hasQosClass();

  public abstract A withNewQosClass(java.lang.String);

  public abstract A withNewQosClass(java.lang.StringBuilder);

  public abstract A withNewQosClass(java.lang.StringBuffer);

  public abstract java.lang.String getReason();

  public abstract A withReason(java.lang.String);

  public abstract java.lang.Boolean hasReason();

  public abstract A withNewReason(java.lang.String);

  public abstract A withNewReason(java.lang.StringBuilder);

  public abstract A withNewReason(java.lang.StringBuffer);

  public abstract java.time.OffsetDateTime getStartTime();

  public abstract A withStartTime(java.time.OffsetDateTime);

  public abstract java.lang.Boolean hasStartTime();
}
