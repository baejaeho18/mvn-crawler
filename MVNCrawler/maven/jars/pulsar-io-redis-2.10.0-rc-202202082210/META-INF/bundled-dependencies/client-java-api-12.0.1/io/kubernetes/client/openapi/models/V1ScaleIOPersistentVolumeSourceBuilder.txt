Compiled from "V1ScaleIOPersistentVolumeSourceBuilder.java"
public class io.kubernetes.client.openapi.models.V1ScaleIOPersistentVolumeSourceBuilder extends io.kubernetes.client.openapi.models.V1ScaleIOPersistentVolumeSourceFluentImpl<io.kubernetes.client.openapi.models.V1ScaleIOPersistentVolumeSourceBuilder> implements io.kubernetes.client.fluent.VisitableBuilder<io.kubernetes.client.openapi.models.V1ScaleIOPersistentVolumeSource, io.kubernetes.client.openapi.models.V1ScaleIOPersistentVolumeSourceBuilder> {
  io.kubernetes.client.openapi.models.V1ScaleIOPersistentVolumeSourceFluent<?> fluent;

  java.lang.Boolean validationEnabled;

  public io.kubernetes.client.openapi.models.V1ScaleIOPersistentVolumeSourceBuilder();
    Code:
       0: aload_0
       1: iconst_1
       2: invokestatic  #1                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: invokespecial #2                  // Method "<init>":(Ljava/lang/Boolean;)V
       8: return

  public io.kubernetes.client.openapi.models.V1ScaleIOPersistentVolumeSourceBuilder(java.lang.Boolean);
    Code:
       0: aload_0
       1: new           #3                  // class io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource
       4: dup
       5: invokespecial #4                  // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource."<init>":()V
       8: aload_1
       9: invokespecial #5                  // Method "<init>":(Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource;Ljava/lang/Boolean;)V
      12: return

  public io.kubernetes.client.openapi.models.V1ScaleIOPersistentVolumeSourceBuilder(io.kubernetes.client.openapi.models.V1ScaleIOPersistentVolumeSourceFluent<?>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokestatic  #1                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       6: invokespecial #6                  // Method "<init>":(Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;Ljava/lang/Boolean;)V
       9: return

  public io.kubernetes.client.openapi.models.V1ScaleIOPersistentVolumeSourceBuilder(io.kubernetes.client.openapi.models.V1ScaleIOPersistentVolumeSourceFluent<?>, java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: new           #3                  // class io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource
       5: dup
       6: invokespecial #4                  // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource."<init>":()V
       9: aload_2
      10: invokespecial #7                  // Method "<init>":(Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource;Ljava/lang/Boolean;)V
      13: return

  public io.kubernetes.client.openapi.models.V1ScaleIOPersistentVolumeSourceBuilder(io.kubernetes.client.openapi.models.V1ScaleIOPersistentVolumeSourceFluent<?>, io.kubernetes.client.openapi.models.V1ScaleIOPersistentVolumeSource);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokestatic  #1                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokespecial #7                  // Method "<init>":(Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource;Ljava/lang/Boolean;)V
      10: return

  public io.kubernetes.client.openapi.models.V1ScaleIOPersistentVolumeSourceBuilder(io.kubernetes.client.openapi.models.V1ScaleIOPersistentVolumeSourceFluent<?>, io.kubernetes.client.openapi.models.V1ScaleIOPersistentVolumeSource, java.lang.Boolean);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluentImpl."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
       9: aload_1
      10: aload_2
      11: invokevirtual #10                 // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource.getFsType:()Ljava/lang/String;
      14: invokeinterface #11,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent.withFsType:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
      19: pop
      20: aload_1
      21: aload_2
      22: invokevirtual #12                 // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource.getGateway:()Ljava/lang/String;
      25: invokeinterface #13,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent.withGateway:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
      30: pop
      31: aload_1
      32: aload_2
      33: invokevirtual #14                 // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource.getProtectionDomain:()Ljava/lang/String;
      36: invokeinterface #15,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent.withProtectionDomain:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
      41: pop
      42: aload_1
      43: aload_2
      44: invokevirtual #16                 // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource.getReadOnly:()Ljava/lang/Boolean;
      47: invokeinterface #17,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent.withReadOnly:(Ljava/lang/Boolean;)Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
      52: pop
      53: aload_1
      54: aload_2
      55: invokevirtual #18                 // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource.getSecretRef:()Lio/kubernetes/client/openapi/models/V1SecretReference;
      58: invokeinterface #19,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent.withSecretRef:(Lio/kubernetes/client/openapi/models/V1SecretReference;)Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
      63: pop
      64: aload_1
      65: aload_2
      66: invokevirtual #20                 // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource.getSslEnabled:()Ljava/lang/Boolean;
      69: invokeinterface #21,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent.withSslEnabled:(Ljava/lang/Boolean;)Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
      74: pop
      75: aload_1
      76: aload_2
      77: invokevirtual #22                 // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource.getStorageMode:()Ljava/lang/String;
      80: invokeinterface #23,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent.withStorageMode:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
      85: pop
      86: aload_1
      87: aload_2
      88: invokevirtual #24                 // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource.getStoragePool:()Ljava/lang/String;
      91: invokeinterface #25,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent.withStoragePool:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
      96: pop
      97: aload_1
      98: aload_2
      99: invokevirtual #26                 // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource.getSystem:()Ljava/lang/String;
     102: invokeinterface #27,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent.withSystem:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
     107: pop
     108: aload_1
     109: aload_2
     110: invokevirtual #28                 // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource.getVolumeName:()Ljava/lang/String;
     113: invokeinterface #29,  2           // InterfaceMethod io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent.withVolumeName:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
     118: pop
     119: aload_0
     120: aload_3
     121: putfield      #30                 // Field validationEnabled:Ljava/lang/Boolean;
     124: return

  public io.kubernetes.client.openapi.models.V1ScaleIOPersistentVolumeSourceBuilder(io.kubernetes.client.openapi.models.V1ScaleIOPersistentVolumeSource);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokestatic  #1                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       6: invokespecial #5                  // Method "<init>":(Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource;Ljava/lang/Boolean;)V
       9: return

  public io.kubernetes.client.openapi.models.V1ScaleIOPersistentVolumeSourceBuilder(io.kubernetes.client.openapi.models.V1ScaleIOPersistentVolumeSource, java.lang.Boolean);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluentImpl."<init>":()V
       4: aload_0
       5: aload_0
       6: putfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
       9: aload_0
      10: aload_1
      11: invokevirtual #10                 // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource.getFsType:()Ljava/lang/String;
      14: invokevirtual #31                 // Method withFsType:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
      17: pop
      18: aload_0
      19: aload_1
      20: invokevirtual #12                 // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource.getGateway:()Ljava/lang/String;
      23: invokevirtual #32                 // Method withGateway:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
      26: pop
      27: aload_0
      28: aload_1
      29: invokevirtual #14                 // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource.getProtectionDomain:()Ljava/lang/String;
      32: invokevirtual #33                 // Method withProtectionDomain:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
      35: pop
      36: aload_0
      37: aload_1
      38: invokevirtual #16                 // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource.getReadOnly:()Ljava/lang/Boolean;
      41: invokevirtual #34                 // Method withReadOnly:(Ljava/lang/Boolean;)Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
      44: pop
      45: aload_0
      46: aload_1
      47: invokevirtual #18                 // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource.getSecretRef:()Lio/kubernetes/client/openapi/models/V1SecretReference;
      50: invokevirtual #35                 // Method withSecretRef:(Lio/kubernetes/client/openapi/models/V1SecretReference;)Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
      53: pop
      54: aload_0
      55: aload_1
      56: invokevirtual #20                 // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource.getSslEnabled:()Ljava/lang/Boolean;
      59: invokevirtual #36                 // Method withSslEnabled:(Ljava/lang/Boolean;)Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
      62: pop
      63: aload_0
      64: aload_1
      65: invokevirtual #22                 // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource.getStorageMode:()Ljava/lang/String;
      68: invokevirtual #37                 // Method withStorageMode:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
      71: pop
      72: aload_0
      73: aload_1
      74: invokevirtual #24                 // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource.getStoragePool:()Ljava/lang/String;
      77: invokevirtual #38                 // Method withStoragePool:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
      80: pop
      81: aload_0
      82: aload_1
      83: invokevirtual #26                 // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource.getSystem:()Ljava/lang/String;
      86: invokevirtual #39                 // Method withSystem:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
      89: pop
      90: aload_0
      91: aload_1
      92: invokevirtual #28                 // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource.getVolumeName:()Ljava/lang/String;
      95: invokevirtual #40                 // Method withVolumeName:(Ljava/lang/String;)Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
      98: pop
      99: aload_0
     100: aload_2
     101: putfield      #30                 // Field validationEnabled:Ljava/lang/Boolean;
     104: return

  public io.kubernetes.client.openapi.models.V1ScaleIOPersistentVolumeSource build();
    Code:
       0: new           #3                  // class io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource
       3: dup
       4: invokespecial #4                  // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
      13: invokeinterface #41,  1           // InterfaceMethod io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent.getFsType:()Ljava/lang/String;
      18: invokevirtual #42                 // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource.setFsType:(Ljava/lang/String;)V
      21: aload_1
      22: aload_0
      23: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
      26: invokeinterface #43,  1           // InterfaceMethod io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent.getGateway:()Ljava/lang/String;
      31: invokevirtual #44                 // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource.setGateway:(Ljava/lang/String;)V
      34: aload_1
      35: aload_0
      36: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
      39: invokeinterface #45,  1           // InterfaceMethod io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent.getProtectionDomain:()Ljava/lang/String;
      44: invokevirtual #46                 // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource.setProtectionDomain:(Ljava/lang/String;)V
      47: aload_1
      48: aload_0
      49: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
      52: invokeinterface #47,  1           // InterfaceMethod io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent.isReadOnly:()Ljava/lang/Boolean;
      57: invokevirtual #48                 // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource.setReadOnly:(Ljava/lang/Boolean;)V
      60: aload_1
      61: aload_0
      62: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
      65: invokeinterface #49,  1           // InterfaceMethod io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent.getSecretRef:()Lio/kubernetes/client/openapi/models/V1SecretReference;
      70: invokevirtual #50                 // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource.setSecretRef:(Lio/kubernetes/client/openapi/models/V1SecretReference;)V
      73: aload_1
      74: aload_0
      75: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
      78: invokeinterface #51,  1           // InterfaceMethod io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent.isSslEnabled:()Ljava/lang/Boolean;
      83: invokevirtual #52                 // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource.setSslEnabled:(Ljava/lang/Boolean;)V
      86: aload_1
      87: aload_0
      88: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
      91: invokeinterface #53,  1           // InterfaceMethod io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent.getStorageMode:()Ljava/lang/String;
      96: invokevirtual #54                 // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource.setStorageMode:(Ljava/lang/String;)V
      99: aload_1
     100: aload_0
     101: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
     104: invokeinterface #55,  1           // InterfaceMethod io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent.getStoragePool:()Ljava/lang/String;
     109: invokevirtual #56                 // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource.setStoragePool:(Ljava/lang/String;)V
     112: aload_1
     113: aload_0
     114: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
     117: invokeinterface #57,  1           // InterfaceMethod io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent.getSystem:()Ljava/lang/String;
     122: invokevirtual #58                 // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource.setSystem:(Ljava/lang/String;)V
     125: aload_1
     126: aload_0
     127: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
     130: invokeinterface #59,  1           // InterfaceMethod io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent.getVolumeName:()Ljava/lang/String;
     135: invokevirtual #60                 // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource.setVolumeName:(Ljava/lang/String;)V
     138: aload_1
     139: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #61                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #61                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_0
      25: aload_1
      26: invokespecial #62                 // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluentImpl.equals:(Ljava/lang/Object;)Z
      29: ifne          34
      32: iconst_0
      33: ireturn
      34: aload_1
      35: checkcast     #63                 // class io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceBuilder
      38: astore_2
      39: aload_0
      40: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
      43: ifnull        71
      46: aload_0
      47: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
      50: aload_0
      51: if_acmpeq     71
      54: aload_0
      55: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
      58: aload_2
      59: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
      62: invokevirtual #64                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      65: ifne          88
      68: goto          86
      71: aload_2
      72: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
      75: ifnull        88
      78: aload_0
      79: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
      82: aload_0
      83: if_acmpeq     88
      86: iconst_0
      87: ireturn
      88: aload_0
      89: getfield      #30                 // Field validationEnabled:Ljava/lang/Boolean;
      92: ifnull        112
      95: aload_0
      96: getfield      #30                 // Field validationEnabled:Ljava/lang/Boolean;
      99: aload_2
     100: getfield      #30                 // Field validationEnabled:Ljava/lang/Boolean;
     103: invokevirtual #65                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
     106: ifne          121
     109: goto          119
     112: aload_2
     113: getfield      #30                 // Field validationEnabled:Ljava/lang/Boolean;
     116: ifnull        121
     119: iconst_0
     120: ireturn
     121: iconst_1
     122: ireturn

  public int hashCode();
    Code:
       0: iconst_3
       1: anewarray     #66                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #9                  // Field fluent:Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluent;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #30                 // Field validationEnabled:Ljava/lang/Boolean;
      17: aastore
      18: dup
      19: iconst_2
      20: aload_0
      21: invokespecial #67                 // Method io/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSourceFluentImpl.hashCode:()I
      24: invokestatic  #68                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      27: aastore
      28: invokestatic  #69                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      31: ireturn

  public java.lang.Object build();
    Code:
       0: aload_0
       1: invokevirtual #70                 // Method build:()Lio/kubernetes/client/openapi/models/V1ScaleIOPersistentVolumeSource;
       4: areturn
}
