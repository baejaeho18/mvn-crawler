Compiled from "JSON.java"
public class io.kubernetes.client.openapi.JSON {
  private com.google.gson.Gson gson;

  private boolean isLenientOnJson;

  private static final java.time.format.DateTimeFormatter RFC3339MICRO_FORMATTER;

  private io.kubernetes.client.openapi.JSON$DateTypeAdapter dateTypeAdapter;

  private io.kubernetes.client.openapi.JSON$SqlDateTypeAdapter sqlDateTypeAdapter;

  private io.kubernetes.client.openapi.JSON$OffsetDateTimeTypeAdapter offsetDateTimeTypeAdapter;

  private io.kubernetes.client.openapi.JSON$LocalDateTypeAdapter localDateTypeAdapter;

  private io.kubernetes.client.openapi.JSON$ByteArrayAdapter byteArrayAdapter;

  public static com.google.gson.GsonBuilder createGson();
    Code:
       0: new           #1                  // class io/gsonfire/GsonFireBuilder
       3: dup
       4: invokespecial #2                  // Method io/gsonfire/GsonFireBuilder."<init>":()V
       7: astore_0
       8: aload_0
       9: ldc           #3                  // class io/kubernetes/client/openapi/models/V1Status
      11: new           #4                  // class io/kubernetes/client/gson/V1StatusPreProcessor
      14: dup
      15: invokespecial #5                  // Method io/kubernetes/client/gson/V1StatusPreProcessor."<init>":()V
      18: invokevirtual #6                  // Method io/gsonfire/GsonFireBuilder.registerPreProcessor:(Ljava/lang/Class;Lio/gsonfire/PreProcessor;)Lio/gsonfire/GsonFireBuilder;
      21: invokevirtual #7                  // Method io/gsonfire/GsonFireBuilder.createGsonBuilder:()Lcom/google/gson/GsonBuilder;
      24: astore_1
      25: aload_1
      26: areturn

  private static java.lang.String getDiscriminatorValue(com.google.gson.JsonElement, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method com/google/gson/JsonElement.getAsJsonObject:()Lcom/google/gson/JsonObject;
       4: aload_1
       5: invokevirtual #9                  // Method com/google/gson/JsonObject.get:(Ljava/lang/String;)Lcom/google/gson/JsonElement;
       8: astore_2
       9: aconst_null
      10: aload_2
      11: if_acmpne     46
      14: new           #10                 // class java/lang/IllegalArgumentException
      17: dup
      18: new           #11                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #13                 // String missing discriminator field: <
      27: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_1
      31: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: ldc           #15                 // String >
      36: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload_2
      47: invokevirtual #18                 // Method com/google/gson/JsonElement.getAsString:()Ljava/lang/String;
      50: areturn

  private static java.lang.Class getClassByDiscriminator(java.util.Map, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #19,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #20                 // class java/lang/Class
      10: astore_2
      11: aconst_null
      12: aload_2
      13: if_acmpne     48
      16: new           #10                 // class java/lang/IllegalArgumentException
      19: dup
      20: new           #11                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #21                 // String cannot determine model class of name: <
      29: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_1
      33: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: ldc           #15                 // String >
      38: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_2
      49: areturn

  public io.kubernetes.client.openapi.JSON();
    Code:
       0: aload_0
       1: invokespecial #22                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #23                 // Field isLenientOnJson:Z
       9: aload_0
      10: new           #24                 // class io/kubernetes/client/openapi/JSON$DateTypeAdapter
      13: dup
      14: invokespecial #25                 // Method io/kubernetes/client/openapi/JSON$DateTypeAdapter."<init>":()V
      17: putfield      #26                 // Field dateTypeAdapter:Lio/kubernetes/client/openapi/JSON$DateTypeAdapter;
      20: aload_0
      21: new           #27                 // class io/kubernetes/client/openapi/JSON$SqlDateTypeAdapter
      24: dup
      25: invokespecial #28                 // Method io/kubernetes/client/openapi/JSON$SqlDateTypeAdapter."<init>":()V
      28: putfield      #29                 // Field sqlDateTypeAdapter:Lio/kubernetes/client/openapi/JSON$SqlDateTypeAdapter;
      31: aload_0
      32: new           #30                 // class io/kubernetes/client/openapi/JSON$OffsetDateTimeTypeAdapter
      35: dup
      36: getstatic     #31                 // Field RFC3339MICRO_FORMATTER:Ljava/time/format/DateTimeFormatter;
      39: invokespecial #32                 // Method io/kubernetes/client/openapi/JSON$OffsetDateTimeTypeAdapter."<init>":(Ljava/time/format/DateTimeFormatter;)V
      42: putfield      #33                 // Field offsetDateTimeTypeAdapter:Lio/kubernetes/client/openapi/JSON$OffsetDateTimeTypeAdapter;
      45: aload_0
      46: new           #34                 // class io/kubernetes/client/openapi/JSON$LocalDateTypeAdapter
      49: dup
      50: aload_0
      51: invokespecial #35                 // Method io/kubernetes/client/openapi/JSON$LocalDateTypeAdapter."<init>":(Lio/kubernetes/client/openapi/JSON;)V
      54: putfield      #36                 // Field localDateTypeAdapter:Lio/kubernetes/client/openapi/JSON$LocalDateTypeAdapter;
      57: aload_0
      58: new           #37                 // class io/kubernetes/client/openapi/JSON$ByteArrayAdapter
      61: dup
      62: aload_0
      63: invokespecial #38                 // Method io/kubernetes/client/openapi/JSON$ByteArrayAdapter."<init>":(Lio/kubernetes/client/openapi/JSON;)V
      66: putfield      #39                 // Field byteArrayAdapter:Lio/kubernetes/client/openapi/JSON$ByteArrayAdapter;
      69: aload_0
      70: invokestatic  #40                 // Method createGson:()Lcom/google/gson/GsonBuilder;
      73: ldc           #41                 // class java/util/Date
      75: aload_0
      76: getfield      #26                 // Field dateTypeAdapter:Lio/kubernetes/client/openapi/JSON$DateTypeAdapter;
      79: invokevirtual #42                 // Method com/google/gson/GsonBuilder.registerTypeAdapter:(Ljava/lang/reflect/Type;Ljava/lang/Object;)Lcom/google/gson/GsonBuilder;
      82: ldc           #43                 // class java/sql/Date
      84: aload_0
      85: getfield      #29                 // Field sqlDateTypeAdapter:Lio/kubernetes/client/openapi/JSON$SqlDateTypeAdapter;
      88: invokevirtual #42                 // Method com/google/gson/GsonBuilder.registerTypeAdapter:(Ljava/lang/reflect/Type;Ljava/lang/Object;)Lcom/google/gson/GsonBuilder;
      91: ldc           #44                 // class java/time/OffsetDateTime
      93: aload_0
      94: getfield      #33                 // Field offsetDateTimeTypeAdapter:Lio/kubernetes/client/openapi/JSON$OffsetDateTimeTypeAdapter;
      97: invokevirtual #42                 // Method com/google/gson/GsonBuilder.registerTypeAdapter:(Ljava/lang/reflect/Type;Ljava/lang/Object;)Lcom/google/gson/GsonBuilder;
     100: ldc           #45                 // class java/time/LocalDate
     102: aload_0
     103: getfield      #36                 // Field localDateTypeAdapter:Lio/kubernetes/client/openapi/JSON$LocalDateTypeAdapter;
     106: invokevirtual #42                 // Method com/google/gson/GsonBuilder.registerTypeAdapter:(Ljava/lang/reflect/Type;Ljava/lang/Object;)Lcom/google/gson/GsonBuilder;
     109: ldc           #46                 // class "[B"
     111: aload_0
     112: getfield      #39                 // Field byteArrayAdapter:Lio/kubernetes/client/openapi/JSON$ByteArrayAdapter;
     115: invokevirtual #42                 // Method com/google/gson/GsonBuilder.registerTypeAdapter:(Ljava/lang/reflect/Type;Ljava/lang/Object;)Lcom/google/gson/GsonBuilder;
     118: invokevirtual #47                 // Method com/google/gson/GsonBuilder.create:()Lcom/google/gson/Gson;
     121: putfield      #48                 // Field gson:Lcom/google/gson/Gson;
     124: return

  public com.google.gson.Gson getGson();
    Code:
       0: aload_0
       1: getfield      #48                 // Field gson:Lcom/google/gson/Gson;
       4: areturn

  public io.kubernetes.client.openapi.JSON setGson(com.google.gson.Gson);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #48                 // Field gson:Lcom/google/gson/Gson;
       5: aload_0
       6: areturn

  public io.kubernetes.client.openapi.JSON setLenientOnJson(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #23                 // Field isLenientOnJson:Z
       5: aload_0
       6: areturn

  public java.lang.String serialize(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #48                 // Field gson:Lcom/google/gson/Gson;
       4: aload_1
       5: invokevirtual #49                 // Method com/google/gson/Gson.toJson:(Ljava/lang/Object;)Ljava/lang/String;
       8: areturn

  public <T> T deserialize(java.lang.String, java.lang.reflect.Type);
    Code:
       0: aload_0
       1: getfield      #23                 // Field isLenientOnJson:Z
       4: ifeq          38
       7: new           #50                 // class com/google/gson/stream/JsonReader
      10: dup
      11: new           #51                 // class java/io/StringReader
      14: dup
      15: aload_1
      16: invokespecial #52                 // Method java/io/StringReader."<init>":(Ljava/lang/String;)V
      19: invokespecial #53                 // Method com/google/gson/stream/JsonReader."<init>":(Ljava/io/Reader;)V
      22: astore_3
      23: aload_3
      24: iconst_1
      25: invokevirtual #54                 // Method com/google/gson/stream/JsonReader.setLenient:(Z)V
      28: aload_0
      29: getfield      #48                 // Field gson:Lcom/google/gson/Gson;
      32: aload_3
      33: aload_2
      34: invokevirtual #55                 // Method com/google/gson/Gson.fromJson:(Lcom/google/gson/stream/JsonReader;Ljava/lang/reflect/Type;)Ljava/lang/Object;
      37: areturn
      38: aload_0
      39: getfield      #48                 // Field gson:Lcom/google/gson/Gson;
      42: aload_1
      43: aload_2
      44: invokevirtual #56                 // Method com/google/gson/Gson.fromJson:(Ljava/lang/String;Ljava/lang/reflect/Type;)Ljava/lang/Object;
      47: areturn
      48: astore_3
      49: aload_2
      50: ldc           #58                 // class java/lang/String
      52: invokevirtual #59                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      55: ifeq          60
      58: aload_1
      59: areturn
      60: aload_3
      61: athrow
    Exception table:
       from    to  target type
           0    37    48   Class com/google/gson/JsonParseException
          38    47    48   Class com/google/gson/JsonParseException

  public io.kubernetes.client.openapi.JSON setOffsetDateTimeFormat(java.time.format.DateTimeFormatter);
    Code:
       0: aload_0
       1: getfield      #33                 // Field offsetDateTimeTypeAdapter:Lio/kubernetes/client/openapi/JSON$OffsetDateTimeTypeAdapter;
       4: aload_1
       5: invokevirtual #60                 // Method io/kubernetes/client/openapi/JSON$OffsetDateTimeTypeAdapter.setFormat:(Ljava/time/format/DateTimeFormatter;)V
       8: aload_0
       9: areturn

  public io.kubernetes.client.openapi.JSON setLocalDateFormat(java.time.format.DateTimeFormatter);
    Code:
       0: aload_0
       1: getfield      #36                 // Field localDateTypeAdapter:Lio/kubernetes/client/openapi/JSON$LocalDateTypeAdapter;
       4: aload_1
       5: invokevirtual #61                 // Method io/kubernetes/client/openapi/JSON$LocalDateTypeAdapter.setFormat:(Ljava/time/format/DateTimeFormatter;)V
       8: aload_0
       9: areturn

  public io.kubernetes.client.openapi.JSON setDateFormat(java.text.DateFormat);
    Code:
       0: aload_0
       1: getfield      #26                 // Field dateTypeAdapter:Lio/kubernetes/client/openapi/JSON$DateTypeAdapter;
       4: aload_1
       5: invokevirtual #62                 // Method io/kubernetes/client/openapi/JSON$DateTypeAdapter.setFormat:(Ljava/text/DateFormat;)V
       8: aload_0
       9: areturn

  public io.kubernetes.client.openapi.JSON setSqlDateFormat(java.text.DateFormat);
    Code:
       0: aload_0
       1: getfield      #29                 // Field sqlDateTypeAdapter:Lio/kubernetes/client/openapi/JSON$SqlDateTypeAdapter;
       4: aload_1
       5: invokevirtual #63                 // Method io/kubernetes/client/openapi/JSON$SqlDateTypeAdapter.setFormat:(Ljava/text/DateFormat;)V
       8: aload_0
       9: areturn

  static {};
    Code:
       0: new           #64                 // class java/time/format/DateTimeFormatterBuilder
       3: dup
       4: invokespecial #65                 // Method java/time/format/DateTimeFormatterBuilder."<init>":()V
       7: getstatic     #66                 // Field java/time/temporal/ChronoField.OFFSET_SECONDS:Ljava/time/temporal/ChronoField;
      10: lconst_0
      11: invokevirtual #67                 // Method java/time/format/DateTimeFormatterBuilder.parseDefaulting:(Ljava/time/temporal/TemporalField;J)Ljava/time/format/DateTimeFormatterBuilder;
      14: ldc           #68                 // String yyyy-MM-dd\'T\'HH:mm:ss
      16: invokestatic  #69                 // Method java/time/format/DateTimeFormatter.ofPattern:(Ljava/lang/String;)Ljava/time/format/DateTimeFormatter;
      19: invokevirtual #70                 // Method java/time/format/DateTimeFormatterBuilder.append:(Ljava/time/format/DateTimeFormatter;)Ljava/time/format/DateTimeFormatterBuilder;
      22: invokevirtual #71                 // Method java/time/format/DateTimeFormatterBuilder.optionalStart:()Ljava/time/format/DateTimeFormatterBuilder;
      25: getstatic     #72                 // Field java/time/temporal/ChronoField.NANO_OF_SECOND:Ljava/time/temporal/ChronoField;
      28: bipush        6
      30: bipush        6
      32: iconst_1
      33: invokevirtual #73                 // Method java/time/format/DateTimeFormatterBuilder.appendFraction:(Ljava/time/temporal/TemporalField;IIZ)Ljava/time/format/DateTimeFormatterBuilder;
      36: invokevirtual #74                 // Method java/time/format/DateTimeFormatterBuilder.optionalEnd:()Ljava/time/format/DateTimeFormatterBuilder;
      39: ldc           #75                 // String Z
      41: invokevirtual #76                 // Method java/time/format/DateTimeFormatterBuilder.appendLiteral:(Ljava/lang/String;)Ljava/time/format/DateTimeFormatterBuilder;
      44: invokevirtual #77                 // Method java/time/format/DateTimeFormatterBuilder.toFormatter:()Ljava/time/format/DateTimeFormatter;
      47: putstatic     #31                 // Field RFC3339MICRO_FORMATTER:Ljava/time/format/DateTimeFormatter;
      50: return
}
