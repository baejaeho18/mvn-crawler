Compiled from "V1IngressSpecFluent.java"
public interface io.kubernetes.client.openapi.models.V1IngressSpecFluent<A extends io.kubernetes.client.openapi.models.V1IngressSpecFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract io.kubernetes.client.openapi.models.V1IngressBackend getDefaultBackend();

  public abstract io.kubernetes.client.openapi.models.V1IngressBackend buildDefaultBackend();

  public abstract A withDefaultBackend(io.kubernetes.client.openapi.models.V1IngressBackend);

  public abstract java.lang.Boolean hasDefaultBackend();

  public abstract io.kubernetes.client.openapi.models.V1IngressSpecFluent$DefaultBackendNested<A> withNewDefaultBackend();

  public abstract io.kubernetes.client.openapi.models.V1IngressSpecFluent$DefaultBackendNested<A> withNewDefaultBackendLike(io.kubernetes.client.openapi.models.V1IngressBackend);

  public abstract io.kubernetes.client.openapi.models.V1IngressSpecFluent$DefaultBackendNested<A> editDefaultBackend();

  public abstract io.kubernetes.client.openapi.models.V1IngressSpecFluent$DefaultBackendNested<A> editOrNewDefaultBackend();

  public abstract io.kubernetes.client.openapi.models.V1IngressSpecFluent$DefaultBackendNested<A> editOrNewDefaultBackendLike(io.kubernetes.client.openapi.models.V1IngressBackend);

  public abstract java.lang.String getIngressClassName();

  public abstract A withIngressClassName(java.lang.String);

  public abstract java.lang.Boolean hasIngressClassName();

  public abstract A withNewIngressClassName(java.lang.String);

  public abstract A withNewIngressClassName(java.lang.StringBuilder);

  public abstract A withNewIngressClassName(java.lang.StringBuffer);

  public abstract A addToRules(int, io.kubernetes.client.openapi.models.V1IngressRule);

  public abstract A setToRules(int, io.kubernetes.client.openapi.models.V1IngressRule);

  public abstract A addToRules(io.kubernetes.client.openapi.models.V1IngressRule...);

  public abstract A addAllToRules(java.util.Collection<io.kubernetes.client.openapi.models.V1IngressRule>);

  public abstract A removeFromRules(io.kubernetes.client.openapi.models.V1IngressRule...);

  public abstract A removeAllFromRules(java.util.Collection<io.kubernetes.client.openapi.models.V1IngressRule>);

  public abstract A removeMatchingFromRules(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1IngressRuleBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1IngressRule> getRules();

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1IngressRule> buildRules();

  public abstract io.kubernetes.client.openapi.models.V1IngressRule buildRule(int);

  public abstract io.kubernetes.client.openapi.models.V1IngressRule buildFirstRule();

  public abstract io.kubernetes.client.openapi.models.V1IngressRule buildLastRule();

  public abstract io.kubernetes.client.openapi.models.V1IngressRule buildMatchingRule(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1IngressRuleBuilder>);

  public abstract java.lang.Boolean hasMatchingRule(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1IngressRuleBuilder>);

  public abstract A withRules(java.util.List<io.kubernetes.client.openapi.models.V1IngressRule>);

  public abstract A withRules(io.kubernetes.client.openapi.models.V1IngressRule...);

  public abstract java.lang.Boolean hasRules();

  public abstract io.kubernetes.client.openapi.models.V1IngressSpecFluent$RulesNested<A> addNewRule();

  public abstract io.kubernetes.client.openapi.models.V1IngressSpecFluent$RulesNested<A> addNewRuleLike(io.kubernetes.client.openapi.models.V1IngressRule);

  public abstract io.kubernetes.client.openapi.models.V1IngressSpecFluent$RulesNested<A> setNewRuleLike(int, io.kubernetes.client.openapi.models.V1IngressRule);

  public abstract io.kubernetes.client.openapi.models.V1IngressSpecFluent$RulesNested<A> editRule(int);

  public abstract io.kubernetes.client.openapi.models.V1IngressSpecFluent$RulesNested<A> editFirstRule();

  public abstract io.kubernetes.client.openapi.models.V1IngressSpecFluent$RulesNested<A> editLastRule();

  public abstract io.kubernetes.client.openapi.models.V1IngressSpecFluent$RulesNested<A> editMatchingRule(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1IngressRuleBuilder>);

  public abstract A addToTls(int, io.kubernetes.client.openapi.models.V1IngressTLS);

  public abstract A setToTls(int, io.kubernetes.client.openapi.models.V1IngressTLS);

  public abstract A addToTls(io.kubernetes.client.openapi.models.V1IngressTLS...);

  public abstract A addAllToTls(java.util.Collection<io.kubernetes.client.openapi.models.V1IngressTLS>);

  public abstract A removeFromTls(io.kubernetes.client.openapi.models.V1IngressTLS...);

  public abstract A removeAllFromTls(java.util.Collection<io.kubernetes.client.openapi.models.V1IngressTLS>);

  public abstract A removeMatchingFromTls(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1IngressTLSBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1IngressTLS> getTls();

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1IngressTLS> buildTls();

  public abstract io.kubernetes.client.openapi.models.V1IngressTLS buildTl(int);

  public abstract io.kubernetes.client.openapi.models.V1IngressTLS buildFirstTl();

  public abstract io.kubernetes.client.openapi.models.V1IngressTLS buildLastTl();

  public abstract io.kubernetes.client.openapi.models.V1IngressTLS buildMatchingTl(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1IngressTLSBuilder>);

  public abstract java.lang.Boolean hasMatchingTl(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1IngressTLSBuilder>);

  public abstract A withTls(java.util.List<io.kubernetes.client.openapi.models.V1IngressTLS>);

  public abstract A withTls(io.kubernetes.client.openapi.models.V1IngressTLS...);

  public abstract java.lang.Boolean hasTls();

  public abstract io.kubernetes.client.openapi.models.V1IngressSpecFluent$TlsNested<A> addNewTl();

  public abstract io.kubernetes.client.openapi.models.V1IngressSpecFluent$TlsNested<A> addNewTlLike(io.kubernetes.client.openapi.models.V1IngressTLS);

  public abstract io.kubernetes.client.openapi.models.V1IngressSpecFluent$TlsNested<A> setNewTlLike(int, io.kubernetes.client.openapi.models.V1IngressTLS);

  public abstract io.kubernetes.client.openapi.models.V1IngressSpecFluent$TlsNested<A> editTl(int);

  public abstract io.kubernetes.client.openapi.models.V1IngressSpecFluent$TlsNested<A> editFirstTl();

  public abstract io.kubernetes.client.openapi.models.V1IngressSpecFluent$TlsNested<A> editLastTl();

  public abstract io.kubernetes.client.openapi.models.V1IngressSpecFluent$TlsNested<A> editMatchingTl(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1IngressTLSBuilder>);
}
