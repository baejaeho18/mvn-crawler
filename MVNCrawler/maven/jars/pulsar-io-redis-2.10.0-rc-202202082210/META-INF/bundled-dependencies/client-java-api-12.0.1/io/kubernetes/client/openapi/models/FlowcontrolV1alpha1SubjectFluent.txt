Compiled from "FlowcontrolV1alpha1SubjectFluent.java"
public interface io.kubernetes.client.openapi.models.FlowcontrolV1alpha1SubjectFluent<A extends io.kubernetes.client.openapi.models.FlowcontrolV1alpha1SubjectFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract io.kubernetes.client.openapi.models.V1alpha1GroupSubject getGroup();

  public abstract io.kubernetes.client.openapi.models.V1alpha1GroupSubject buildGroup();

  public abstract A withGroup(io.kubernetes.client.openapi.models.V1alpha1GroupSubject);

  public abstract java.lang.Boolean hasGroup();

  public abstract io.kubernetes.client.openapi.models.FlowcontrolV1alpha1SubjectFluent$GroupNested<A> withNewGroup();

  public abstract io.kubernetes.client.openapi.models.FlowcontrolV1alpha1SubjectFluent$GroupNested<A> withNewGroupLike(io.kubernetes.client.openapi.models.V1alpha1GroupSubject);

  public abstract io.kubernetes.client.openapi.models.FlowcontrolV1alpha1SubjectFluent$GroupNested<A> editGroup();

  public abstract io.kubernetes.client.openapi.models.FlowcontrolV1alpha1SubjectFluent$GroupNested<A> editOrNewGroup();

  public abstract io.kubernetes.client.openapi.models.FlowcontrolV1alpha1SubjectFluent$GroupNested<A> editOrNewGroupLike(io.kubernetes.client.openapi.models.V1alpha1GroupSubject);

  public abstract java.lang.String getKind();

  public abstract A withKind(java.lang.String);

  public abstract java.lang.Boolean hasKind();

  public abstract A withNewKind(java.lang.String);

  public abstract A withNewKind(java.lang.StringBuilder);

  public abstract A withNewKind(java.lang.StringBuffer);

  public abstract io.kubernetes.client.openapi.models.V1alpha1ServiceAccountSubject getServiceAccount();

  public abstract io.kubernetes.client.openapi.models.V1alpha1ServiceAccountSubject buildServiceAccount();

  public abstract A withServiceAccount(io.kubernetes.client.openapi.models.V1alpha1ServiceAccountSubject);

  public abstract java.lang.Boolean hasServiceAccount();

  public abstract io.kubernetes.client.openapi.models.FlowcontrolV1alpha1SubjectFluent$ServiceAccountNested<A> withNewServiceAccount();

  public abstract io.kubernetes.client.openapi.models.FlowcontrolV1alpha1SubjectFluent$ServiceAccountNested<A> withNewServiceAccountLike(io.kubernetes.client.openapi.models.V1alpha1ServiceAccountSubject);

  public abstract io.kubernetes.client.openapi.models.FlowcontrolV1alpha1SubjectFluent$ServiceAccountNested<A> editServiceAccount();

  public abstract io.kubernetes.client.openapi.models.FlowcontrolV1alpha1SubjectFluent$ServiceAccountNested<A> editOrNewServiceAccount();

  public abstract io.kubernetes.client.openapi.models.FlowcontrolV1alpha1SubjectFluent$ServiceAccountNested<A> editOrNewServiceAccountLike(io.kubernetes.client.openapi.models.V1alpha1ServiceAccountSubject);

  public abstract io.kubernetes.client.openapi.models.V1alpha1UserSubject getUser();

  public abstract io.kubernetes.client.openapi.models.V1alpha1UserSubject buildUser();

  public abstract A withUser(io.kubernetes.client.openapi.models.V1alpha1UserSubject);

  public abstract java.lang.Boolean hasUser();

  public abstract io.kubernetes.client.openapi.models.FlowcontrolV1alpha1SubjectFluent$UserNested<A> withNewUser();

  public abstract io.kubernetes.client.openapi.models.FlowcontrolV1alpha1SubjectFluent$UserNested<A> withNewUserLike(io.kubernetes.client.openapi.models.V1alpha1UserSubject);

  public abstract io.kubernetes.client.openapi.models.FlowcontrolV1alpha1SubjectFluent$UserNested<A> editUser();

  public abstract io.kubernetes.client.openapi.models.FlowcontrolV1alpha1SubjectFluent$UserNested<A> editOrNewUser();

  public abstract io.kubernetes.client.openapi.models.FlowcontrolV1alpha1SubjectFluent$UserNested<A> editOrNewUserLike(io.kubernetes.client.openapi.models.V1alpha1UserSubject);
}
