Compiled from "V1alpha1LimitResponseFluent.java"
public interface io.kubernetes.client.openapi.models.V1alpha1LimitResponseFluent<A extends io.kubernetes.client.openapi.models.V1alpha1LimitResponseFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract io.kubernetes.client.openapi.models.V1alpha1QueuingConfiguration getQueuing();

  public abstract io.kubernetes.client.openapi.models.V1alpha1QueuingConfiguration buildQueuing();

  public abstract A withQueuing(io.kubernetes.client.openapi.models.V1alpha1QueuingConfiguration);

  public abstract java.lang.Boolean hasQueuing();

  public abstract io.kubernetes.client.openapi.models.V1alpha1LimitResponseFluent$QueuingNested<A> withNewQueuing();

  public abstract io.kubernetes.client.openapi.models.V1alpha1LimitResponseFluent$QueuingNested<A> withNewQueuingLike(io.kubernetes.client.openapi.models.V1alpha1QueuingConfiguration);

  public abstract io.kubernetes.client.openapi.models.V1alpha1LimitResponseFluent$QueuingNested<A> editQueuing();

  public abstract io.kubernetes.client.openapi.models.V1alpha1LimitResponseFluent$QueuingNested<A> editOrNewQueuing();

  public abstract io.kubernetes.client.openapi.models.V1alpha1LimitResponseFluent$QueuingNested<A> editOrNewQueuingLike(io.kubernetes.client.openapi.models.V1alpha1QueuingConfiguration);

  public abstract java.lang.String getType();

  public abstract A withType(java.lang.String);

  public abstract java.lang.Boolean hasType();

  public abstract A withNewType(java.lang.String);

  public abstract A withNewType(java.lang.StringBuilder);

  public abstract A withNewType(java.lang.StringBuffer);
}
