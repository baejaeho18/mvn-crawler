Compiled from "V1APIGroupListFluent.java"
public interface io.kubernetes.client.openapi.models.V1APIGroupListFluent<A extends io.kubernetes.client.openapi.models.V1APIGroupListFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract java.lang.String getApiVersion();

  public abstract A withApiVersion(java.lang.String);

  public abstract java.lang.Boolean hasApiVersion();

  public abstract A withNewApiVersion(java.lang.String);

  public abstract A withNewApiVersion(java.lang.StringBuilder);

  public abstract A withNewApiVersion(java.lang.StringBuffer);

  public abstract A addToGroups(int, io.kubernetes.client.openapi.models.V1APIGroup);

  public abstract A setToGroups(int, io.kubernetes.client.openapi.models.V1APIGroup);

  public abstract A addToGroups(io.kubernetes.client.openapi.models.V1APIGroup...);

  public abstract A addAllToGroups(java.util.Collection<io.kubernetes.client.openapi.models.V1APIGroup>);

  public abstract A removeFromGroups(io.kubernetes.client.openapi.models.V1APIGroup...);

  public abstract A removeAllFromGroups(java.util.Collection<io.kubernetes.client.openapi.models.V1APIGroup>);

  public abstract A removeMatchingFromGroups(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1APIGroupBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1APIGroup> getGroups();

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1APIGroup> buildGroups();

  public abstract io.kubernetes.client.openapi.models.V1APIGroup buildGroup(int);

  public abstract io.kubernetes.client.openapi.models.V1APIGroup buildFirstGroup();

  public abstract io.kubernetes.client.openapi.models.V1APIGroup buildLastGroup();

  public abstract io.kubernetes.client.openapi.models.V1APIGroup buildMatchingGroup(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1APIGroupBuilder>);

  public abstract java.lang.Boolean hasMatchingGroup(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1APIGroupBuilder>);

  public abstract A withGroups(java.util.List<io.kubernetes.client.openapi.models.V1APIGroup>);

  public abstract A withGroups(io.kubernetes.client.openapi.models.V1APIGroup...);

  public abstract java.lang.Boolean hasGroups();

  public abstract io.kubernetes.client.openapi.models.V1APIGroupListFluent$GroupsNested<A> addNewGroup();

  public abstract io.kubernetes.client.openapi.models.V1APIGroupListFluent$GroupsNested<A> addNewGroupLike(io.kubernetes.client.openapi.models.V1APIGroup);

  public abstract io.kubernetes.client.openapi.models.V1APIGroupListFluent$GroupsNested<A> setNewGroupLike(int, io.kubernetes.client.openapi.models.V1APIGroup);

  public abstract io.kubernetes.client.openapi.models.V1APIGroupListFluent$GroupsNested<A> editGroup(int);

  public abstract io.kubernetes.client.openapi.models.V1APIGroupListFluent$GroupsNested<A> editFirstGroup();

  public abstract io.kubernetes.client.openapi.models.V1APIGroupListFluent$GroupsNested<A> editLastGroup();

  public abstract io.kubernetes.client.openapi.models.V1APIGroupListFluent$GroupsNested<A> editMatchingGroup(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1APIGroupBuilder>);

  public abstract java.lang.String getKind();

  public abstract A withKind(java.lang.String);

  public abstract java.lang.Boolean hasKind();

  public abstract A withNewKind(java.lang.String);

  public abstract A withNewKind(java.lang.StringBuilder);

  public abstract A withNewKind(java.lang.StringBuffer);
}
