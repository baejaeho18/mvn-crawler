Compiled from "V1EndpointsFluent.java"
public interface io.kubernetes.client.openapi.models.V1EndpointsFluent<A extends io.kubernetes.client.openapi.models.V1EndpointsFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract java.lang.String getApiVersion();

  public abstract A withApiVersion(java.lang.String);

  public abstract java.lang.Boolean hasApiVersion();

  public abstract A withNewApiVersion(java.lang.String);

  public abstract A withNewApiVersion(java.lang.StringBuilder);

  public abstract A withNewApiVersion(java.lang.StringBuffer);

  public abstract java.lang.String getKind();

  public abstract A withKind(java.lang.String);

  public abstract java.lang.Boolean hasKind();

  public abstract A withNewKind(java.lang.String);

  public abstract A withNewKind(java.lang.StringBuilder);

  public abstract A withNewKind(java.lang.StringBuffer);

  public abstract io.kubernetes.client.openapi.models.V1ObjectMeta getMetadata();

  public abstract io.kubernetes.client.openapi.models.V1ObjectMeta buildMetadata();

  public abstract A withMetadata(io.kubernetes.client.openapi.models.V1ObjectMeta);

  public abstract java.lang.Boolean hasMetadata();

  public abstract io.kubernetes.client.openapi.models.V1EndpointsFluent$MetadataNested<A> withNewMetadata();

  public abstract io.kubernetes.client.openapi.models.V1EndpointsFluent$MetadataNested<A> withNewMetadataLike(io.kubernetes.client.openapi.models.V1ObjectMeta);

  public abstract io.kubernetes.client.openapi.models.V1EndpointsFluent$MetadataNested<A> editMetadata();

  public abstract io.kubernetes.client.openapi.models.V1EndpointsFluent$MetadataNested<A> editOrNewMetadata();

  public abstract io.kubernetes.client.openapi.models.V1EndpointsFluent$MetadataNested<A> editOrNewMetadataLike(io.kubernetes.client.openapi.models.V1ObjectMeta);

  public abstract A addToSubsets(int, io.kubernetes.client.openapi.models.V1EndpointSubset);

  public abstract A setToSubsets(int, io.kubernetes.client.openapi.models.V1EndpointSubset);

  public abstract A addToSubsets(io.kubernetes.client.openapi.models.V1EndpointSubset...);

  public abstract A addAllToSubsets(java.util.Collection<io.kubernetes.client.openapi.models.V1EndpointSubset>);

  public abstract A removeFromSubsets(io.kubernetes.client.openapi.models.V1EndpointSubset...);

  public abstract A removeAllFromSubsets(java.util.Collection<io.kubernetes.client.openapi.models.V1EndpointSubset>);

  public abstract A removeMatchingFromSubsets(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1EndpointSubsetBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1EndpointSubset> getSubsets();

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1EndpointSubset> buildSubsets();

  public abstract io.kubernetes.client.openapi.models.V1EndpointSubset buildSubset(int);

  public abstract io.kubernetes.client.openapi.models.V1EndpointSubset buildFirstSubset();

  public abstract io.kubernetes.client.openapi.models.V1EndpointSubset buildLastSubset();

  public abstract io.kubernetes.client.openapi.models.V1EndpointSubset buildMatchingSubset(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1EndpointSubsetBuilder>);

  public abstract java.lang.Boolean hasMatchingSubset(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1EndpointSubsetBuilder>);

  public abstract A withSubsets(java.util.List<io.kubernetes.client.openapi.models.V1EndpointSubset>);

  public abstract A withSubsets(io.kubernetes.client.openapi.models.V1EndpointSubset...);

  public abstract java.lang.Boolean hasSubsets();

  public abstract io.kubernetes.client.openapi.models.V1EndpointsFluent$SubsetsNested<A> addNewSubset();

  public abstract io.kubernetes.client.openapi.models.V1EndpointsFluent$SubsetsNested<A> addNewSubsetLike(io.kubernetes.client.openapi.models.V1EndpointSubset);

  public abstract io.kubernetes.client.openapi.models.V1EndpointsFluent$SubsetsNested<A> setNewSubsetLike(int, io.kubernetes.client.openapi.models.V1EndpointSubset);

  public abstract io.kubernetes.client.openapi.models.V1EndpointsFluent$SubsetsNested<A> editSubset(int);

  public abstract io.kubernetes.client.openapi.models.V1EndpointsFluent$SubsetsNested<A> editFirstSubset();

  public abstract io.kubernetes.client.openapi.models.V1EndpointsFluent$SubsetsNested<A> editLastSubset();

  public abstract io.kubernetes.client.openapi.models.V1EndpointsFluent$SubsetsNested<A> editMatchingSubset(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1EndpointSubsetBuilder>);
}
