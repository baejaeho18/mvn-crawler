Compiled from "V1alpha1SchedulingFluent.java"
public interface io.kubernetes.client.openapi.models.V1alpha1SchedulingFluent<A extends io.kubernetes.client.openapi.models.V1alpha1SchedulingFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract A addToNodeSelector(java.lang.String, java.lang.String);

  public abstract A addToNodeSelector(java.util.Map<java.lang.String, java.lang.String>);

  public abstract A removeFromNodeSelector(java.lang.String);

  public abstract A removeFromNodeSelector(java.util.Map<java.lang.String, java.lang.String>);

  public abstract java.util.Map<java.lang.String, java.lang.String> getNodeSelector();

  public abstract A withNodeSelector(java.util.Map<java.lang.String, java.lang.String>);

  public abstract java.lang.Boolean hasNodeSelector();

  public abstract A addToTolerations(int, io.kubernetes.client.openapi.models.V1Toleration);

  public abstract A setToTolerations(int, io.kubernetes.client.openapi.models.V1Toleration);

  public abstract A addToTolerations(io.kubernetes.client.openapi.models.V1Toleration...);

  public abstract A addAllToTolerations(java.util.Collection<io.kubernetes.client.openapi.models.V1Toleration>);

  public abstract A removeFromTolerations(io.kubernetes.client.openapi.models.V1Toleration...);

  public abstract A removeAllFromTolerations(java.util.Collection<io.kubernetes.client.openapi.models.V1Toleration>);

  public abstract A removeMatchingFromTolerations(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1TolerationBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1Toleration> getTolerations();

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1Toleration> buildTolerations();

  public abstract io.kubernetes.client.openapi.models.V1Toleration buildToleration(int);

  public abstract io.kubernetes.client.openapi.models.V1Toleration buildFirstToleration();

  public abstract io.kubernetes.client.openapi.models.V1Toleration buildLastToleration();

  public abstract io.kubernetes.client.openapi.models.V1Toleration buildMatchingToleration(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1TolerationBuilder>);

  public abstract java.lang.Boolean hasMatchingToleration(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1TolerationBuilder>);

  public abstract A withTolerations(java.util.List<io.kubernetes.client.openapi.models.V1Toleration>);

  public abstract A withTolerations(io.kubernetes.client.openapi.models.V1Toleration...);

  public abstract java.lang.Boolean hasTolerations();

  public abstract io.kubernetes.client.openapi.models.V1alpha1SchedulingFluent$TolerationsNested<A> addNewToleration();

  public abstract io.kubernetes.client.openapi.models.V1alpha1SchedulingFluent$TolerationsNested<A> addNewTolerationLike(io.kubernetes.client.openapi.models.V1Toleration);

  public abstract io.kubernetes.client.openapi.models.V1alpha1SchedulingFluent$TolerationsNested<A> setNewTolerationLike(int, io.kubernetes.client.openapi.models.V1Toleration);

  public abstract io.kubernetes.client.openapi.models.V1alpha1SchedulingFluent$TolerationsNested<A> editToleration(int);

  public abstract io.kubernetes.client.openapi.models.V1alpha1SchedulingFluent$TolerationsNested<A> editFirstToleration();

  public abstract io.kubernetes.client.openapi.models.V1alpha1SchedulingFluent$TolerationsNested<A> editLastToleration();

  public abstract io.kubernetes.client.openapi.models.V1alpha1SchedulingFluent$TolerationsNested<A> editMatchingToleration(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1TolerationBuilder>);
}
