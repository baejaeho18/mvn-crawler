Compiled from "V1EphemeralVolumeSourceFluentImpl.java"
public class io.kubernetes.client.openapi.models.V1EphemeralVolumeSourceFluentImpl<A extends io.kubernetes.client.openapi.models.V1EphemeralVolumeSourceFluent<A>> extends io.kubernetes.client.fluent.BaseFluent<A> implements io.kubernetes.client.openapi.models.V1EphemeralVolumeSourceFluent<A> {
  private java.lang.Boolean readOnly;

  private io.kubernetes.client.openapi.models.V1PersistentVolumeClaimTemplateBuilder volumeClaimTemplate;

  public io.kubernetes.client.openapi.models.V1EphemeralVolumeSourceFluentImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/kubernetes/client/fluent/BaseFluent."<init>":()V
       4: return

  public io.kubernetes.client.openapi.models.V1EphemeralVolumeSourceFluentImpl(io.kubernetes.client.openapi.models.V1EphemeralVolumeSource);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/kubernetes/client/fluent/BaseFluent."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #2                  // Method io/kubernetes/client/openapi/models/V1EphemeralVolumeSource.getReadOnly:()Ljava/lang/Boolean;
       9: invokevirtual #3                  // Method withReadOnly:(Ljava/lang/Boolean;)Lio/kubernetes/client/openapi/models/V1EphemeralVolumeSourceFluent;
      12: pop
      13: aload_0
      14: aload_1
      15: invokevirtual #4                  // Method io/kubernetes/client/openapi/models/V1EphemeralVolumeSource.getVolumeClaimTemplate:()Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplate;
      18: invokevirtual #5                  // Method withVolumeClaimTemplate:(Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplate;)Lio/kubernetes/client/openapi/models/V1EphemeralVolumeSourceFluent;
      21: pop
      22: return

  public java.lang.Boolean isReadOnly();
    Code:
       0: aload_0
       1: getfield      #6                  // Field readOnly:Ljava/lang/Boolean;
       4: areturn

  public A withReadOnly(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field readOnly:Ljava/lang/Boolean;
       5: aload_0
       6: areturn

  public java.lang.Boolean hasReadOnly();
    Code:
       0: aload_0
       1: getfield      #6                  // Field readOnly:Ljava/lang/Boolean;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #7                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public A withNewReadOnly(java.lang.String);
    Code:
       0: aload_0
       1: new           #8                  // class java/lang/Boolean
       4: dup
       5: aload_1
       6: invokespecial #9                  // Method java/lang/Boolean."<init>":(Ljava/lang/String;)V
       9: invokevirtual #3                  // Method withReadOnly:(Ljava/lang/Boolean;)Lio/kubernetes/client/openapi/models/V1EphemeralVolumeSourceFluent;
      12: areturn

  public A withNewReadOnly(boolean);
    Code:
       0: aload_0
       1: new           #8                  // class java/lang/Boolean
       4: dup
       5: iload_1
       6: invokespecial #10                 // Method java/lang/Boolean."<init>":(Z)V
       9: invokevirtual #3                  // Method withReadOnly:(Ljava/lang/Boolean;)Lio/kubernetes/client/openapi/models/V1EphemeralVolumeSourceFluent;
      12: areturn

  public io.kubernetes.client.openapi.models.V1PersistentVolumeClaimTemplate getVolumeClaimTemplate();
    Code:
       0: aload_0
       1: getfield      #11                 // Field volumeClaimTemplate:Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplateBuilder;
       4: ifnull        17
       7: aload_0
       8: getfield      #11                 // Field volumeClaimTemplate:Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplateBuilder;
      11: invokevirtual #12                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplateBuilder.build:()Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplate;
      14: goto          18
      17: aconst_null
      18: areturn

  public io.kubernetes.client.openapi.models.V1PersistentVolumeClaimTemplate buildVolumeClaimTemplate();
    Code:
       0: aload_0
       1: getfield      #11                 // Field volumeClaimTemplate:Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplateBuilder;
       4: ifnull        17
       7: aload_0
       8: getfield      #11                 // Field volumeClaimTemplate:Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplateBuilder;
      11: invokevirtual #12                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplateBuilder.build:()Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplate;
      14: goto          18
      17: aconst_null
      18: areturn

  public A withVolumeClaimTemplate(io.kubernetes.client.openapi.models.V1PersistentVolumeClaimTemplate);
    Code:
       0: aload_0
       1: getfield      #13                 // Field _visitables:Lio/kubernetes/client/fluent/VisitableMap;
       4: ldc           #14                 // String volumeClaimTemplate
       6: invokevirtual #15                 // Method io/kubernetes/client/fluent/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
       9: aload_0
      10: getfield      #11                 // Field volumeClaimTemplate:Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplateBuilder;
      13: invokeinterface #16,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      18: pop
      19: aload_1
      20: ifnull        54
      23: aload_0
      24: new           #17                 // class io/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplateBuilder
      27: dup
      28: aload_1
      29: invokespecial #18                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplateBuilder."<init>":(Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplate;)V
      32: putfield      #11                 // Field volumeClaimTemplate:Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplateBuilder;
      35: aload_0
      36: getfield      #13                 // Field _visitables:Lio/kubernetes/client/fluent/VisitableMap;
      39: ldc           #14                 // String volumeClaimTemplate
      41: invokevirtual #15                 // Method io/kubernetes/client/fluent/VisitableMap.get:(Ljava/lang/Object;)Ljava/util/List;
      44: aload_0
      45: getfield      #11                 // Field volumeClaimTemplate:Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplateBuilder;
      48: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      53: pop
      54: aload_0
      55: areturn

  public java.lang.Boolean hasVolumeClaimTemplate();
    Code:
       0: aload_0
       1: getfield      #11                 // Field volumeClaimTemplate:Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplateBuilder;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #7                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: areturn

  public io.kubernetes.client.openapi.models.V1EphemeralVolumeSourceFluent$VolumeClaimTemplateNested<A> withNewVolumeClaimTemplate();
    Code:
       0: new           #20                 // class io/kubernetes/client/openapi/models/V1EphemeralVolumeSourceFluentImpl$VolumeClaimTemplateNestedImpl
       3: dup
       4: aload_0
       5: invokespecial #21                 // Method io/kubernetes/client/openapi/models/V1EphemeralVolumeSourceFluentImpl$VolumeClaimTemplateNestedImpl."<init>":(Lio/kubernetes/client/openapi/models/V1EphemeralVolumeSourceFluentImpl;)V
       8: areturn

  public io.kubernetes.client.openapi.models.V1EphemeralVolumeSourceFluent$VolumeClaimTemplateNested<A> withNewVolumeClaimTemplateLike(io.kubernetes.client.openapi.models.V1PersistentVolumeClaimTemplate);
    Code:
       0: new           #20                 // class io/kubernetes/client/openapi/models/V1EphemeralVolumeSourceFluentImpl$VolumeClaimTemplateNestedImpl
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #22                 // Method io/kubernetes/client/openapi/models/V1EphemeralVolumeSourceFluentImpl$VolumeClaimTemplateNestedImpl."<init>":(Lio/kubernetes/client/openapi/models/V1EphemeralVolumeSourceFluentImpl;Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplate;)V
       9: areturn

  public io.kubernetes.client.openapi.models.V1EphemeralVolumeSourceFluent$VolumeClaimTemplateNested<A> editVolumeClaimTemplate();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #23                 // Method getVolumeClaimTemplate:()Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplate;
       5: invokevirtual #24                 // Method withNewVolumeClaimTemplateLike:(Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplate;)Lio/kubernetes/client/openapi/models/V1EphemeralVolumeSourceFluent$VolumeClaimTemplateNested;
       8: areturn

  public io.kubernetes.client.openapi.models.V1EphemeralVolumeSourceFluent$VolumeClaimTemplateNested<A> editOrNewVolumeClaimTemplate();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #23                 // Method getVolumeClaimTemplate:()Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplate;
       5: ifnull        15
       8: aload_0
       9: invokevirtual #23                 // Method getVolumeClaimTemplate:()Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplate;
      12: goto          25
      15: new           #17                 // class io/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplateBuilder
      18: dup
      19: invokespecial #25                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplateBuilder."<init>":()V
      22: invokevirtual #12                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplateBuilder.build:()Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplate;
      25: invokevirtual #24                 // Method withNewVolumeClaimTemplateLike:(Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplate;)Lio/kubernetes/client/openapi/models/V1EphemeralVolumeSourceFluent$VolumeClaimTemplateNested;
      28: areturn

  public io.kubernetes.client.openapi.models.V1EphemeralVolumeSourceFluent$VolumeClaimTemplateNested<A> editOrNewVolumeClaimTemplateLike(io.kubernetes.client.openapi.models.V1PersistentVolumeClaimTemplate);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #23                 // Method getVolumeClaimTemplate:()Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplate;
       5: ifnull        15
       8: aload_0
       9: invokevirtual #23                 // Method getVolumeClaimTemplate:()Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplate;
      12: goto          16
      15: aload_1
      16: invokevirtual #24                 // Method withNewVolumeClaimTemplateLike:(Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplate;)Lio/kubernetes/client/openapi/models/V1EphemeralVolumeSourceFluent$VolumeClaimTemplateNested;
      19: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #27                 // class io/kubernetes/client/openapi/models/V1EphemeralVolumeSourceFluentImpl
      28: astore_2
      29: aload_0
      30: getfield      #6                  // Field readOnly:Ljava/lang/Boolean;
      33: ifnull        53
      36: aload_0
      37: getfield      #6                  // Field readOnly:Ljava/lang/Boolean;
      40: aload_2
      41: getfield      #6                  // Field readOnly:Ljava/lang/Boolean;
      44: invokevirtual #28                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      47: ifne          62
      50: goto          60
      53: aload_2
      54: getfield      #6                  // Field readOnly:Ljava/lang/Boolean;
      57: ifnull        62
      60: iconst_0
      61: ireturn
      62: aload_0
      63: getfield      #11                 // Field volumeClaimTemplate:Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplateBuilder;
      66: ifnull        86
      69: aload_0
      70: getfield      #11                 // Field volumeClaimTemplate:Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplateBuilder;
      73: aload_2
      74: getfield      #11                 // Field volumeClaimTemplate:Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplateBuilder;
      77: invokevirtual #29                 // Method io/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplateBuilder.equals:(Ljava/lang/Object;)Z
      80: ifne          95
      83: goto          93
      86: aload_2
      87: getfield      #11                 // Field volumeClaimTemplate:Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplateBuilder;
      90: ifnull        95
      93: iconst_0
      94: ireturn
      95: iconst_1
      96: ireturn

  public int hashCode();
    Code:
       0: iconst_3
       1: anewarray     #30                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #6                  // Field readOnly:Ljava/lang/Boolean;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #11                 // Field volumeClaimTemplate:Lio/kubernetes/client/openapi/models/V1PersistentVolumeClaimTemplateBuilder;
      17: aastore
      18: dup
      19: iconst_2
      20: aload_0
      21: invokespecial #31                 // Method java/lang/Object.hashCode:()I
      24: invokestatic  #32                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      27: aastore
      28: invokestatic  #33                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      31: ireturn
}
