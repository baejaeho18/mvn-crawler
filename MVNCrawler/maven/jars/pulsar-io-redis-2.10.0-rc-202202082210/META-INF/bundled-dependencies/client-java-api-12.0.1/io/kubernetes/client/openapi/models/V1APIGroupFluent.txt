Compiled from "V1APIGroupFluent.java"
public interface io.kubernetes.client.openapi.models.V1APIGroupFluent<A extends io.kubernetes.client.openapi.models.V1APIGroupFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract java.lang.String getApiVersion();

  public abstract A withApiVersion(java.lang.String);

  public abstract java.lang.Boolean hasApiVersion();

  public abstract A withNewApiVersion(java.lang.String);

  public abstract A withNewApiVersion(java.lang.StringBuilder);

  public abstract A withNewApiVersion(java.lang.StringBuffer);

  public abstract java.lang.String getKind();

  public abstract A withKind(java.lang.String);

  public abstract java.lang.Boolean hasKind();

  public abstract A withNewKind(java.lang.String);

  public abstract A withNewKind(java.lang.StringBuilder);

  public abstract A withNewKind(java.lang.StringBuffer);

  public abstract java.lang.String getName();

  public abstract A withName(java.lang.String);

  public abstract java.lang.Boolean hasName();

  public abstract A withNewName(java.lang.String);

  public abstract A withNewName(java.lang.StringBuilder);

  public abstract A withNewName(java.lang.StringBuffer);

  public abstract io.kubernetes.client.openapi.models.V1GroupVersionForDiscovery getPreferredVersion();

  public abstract io.kubernetes.client.openapi.models.V1GroupVersionForDiscovery buildPreferredVersion();

  public abstract A withPreferredVersion(io.kubernetes.client.openapi.models.V1GroupVersionForDiscovery);

  public abstract java.lang.Boolean hasPreferredVersion();

  public abstract io.kubernetes.client.openapi.models.V1APIGroupFluent$PreferredVersionNested<A> withNewPreferredVersion();

  public abstract io.kubernetes.client.openapi.models.V1APIGroupFluent$PreferredVersionNested<A> withNewPreferredVersionLike(io.kubernetes.client.openapi.models.V1GroupVersionForDiscovery);

  public abstract io.kubernetes.client.openapi.models.V1APIGroupFluent$PreferredVersionNested<A> editPreferredVersion();

  public abstract io.kubernetes.client.openapi.models.V1APIGroupFluent$PreferredVersionNested<A> editOrNewPreferredVersion();

  public abstract io.kubernetes.client.openapi.models.V1APIGroupFluent$PreferredVersionNested<A> editOrNewPreferredVersionLike(io.kubernetes.client.openapi.models.V1GroupVersionForDiscovery);

  public abstract A addToServerAddressByClientCIDRs(int, io.kubernetes.client.openapi.models.V1ServerAddressByClientCIDR);

  public abstract A setToServerAddressByClientCIDRs(int, io.kubernetes.client.openapi.models.V1ServerAddressByClientCIDR);

  public abstract A addToServerAddressByClientCIDRs(io.kubernetes.client.openapi.models.V1ServerAddressByClientCIDR...);

  public abstract A addAllToServerAddressByClientCIDRs(java.util.Collection<io.kubernetes.client.openapi.models.V1ServerAddressByClientCIDR>);

  public abstract A removeFromServerAddressByClientCIDRs(io.kubernetes.client.openapi.models.V1ServerAddressByClientCIDR...);

  public abstract A removeAllFromServerAddressByClientCIDRs(java.util.Collection<io.kubernetes.client.openapi.models.V1ServerAddressByClientCIDR>);

  public abstract A removeMatchingFromServerAddressByClientCIDRs(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1ServerAddressByClientCIDRBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1ServerAddressByClientCIDR> getServerAddressByClientCIDRs();

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1ServerAddressByClientCIDR> buildServerAddressByClientCIDRs();

  public abstract io.kubernetes.client.openapi.models.V1ServerAddressByClientCIDR buildServerAddressByClientCIDR(int);

  public abstract io.kubernetes.client.openapi.models.V1ServerAddressByClientCIDR buildFirstServerAddressByClientCIDR();

  public abstract io.kubernetes.client.openapi.models.V1ServerAddressByClientCIDR buildLastServerAddressByClientCIDR();

  public abstract io.kubernetes.client.openapi.models.V1ServerAddressByClientCIDR buildMatchingServerAddressByClientCIDR(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1ServerAddressByClientCIDRBuilder>);

  public abstract java.lang.Boolean hasMatchingServerAddressByClientCIDR(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1ServerAddressByClientCIDRBuilder>);

  public abstract A withServerAddressByClientCIDRs(java.util.List<io.kubernetes.client.openapi.models.V1ServerAddressByClientCIDR>);

  public abstract A withServerAddressByClientCIDRs(io.kubernetes.client.openapi.models.V1ServerAddressByClientCIDR...);

  public abstract java.lang.Boolean hasServerAddressByClientCIDRs();

  public abstract io.kubernetes.client.openapi.models.V1APIGroupFluent$ServerAddressByClientCIDRsNested<A> addNewServerAddressByClientCIDR();

  public abstract io.kubernetes.client.openapi.models.V1APIGroupFluent$ServerAddressByClientCIDRsNested<A> addNewServerAddressByClientCIDRLike(io.kubernetes.client.openapi.models.V1ServerAddressByClientCIDR);

  public abstract io.kubernetes.client.openapi.models.V1APIGroupFluent$ServerAddressByClientCIDRsNested<A> setNewServerAddressByClientCIDRLike(int, io.kubernetes.client.openapi.models.V1ServerAddressByClientCIDR);

  public abstract io.kubernetes.client.openapi.models.V1APIGroupFluent$ServerAddressByClientCIDRsNested<A> editServerAddressByClientCIDR(int);

  public abstract io.kubernetes.client.openapi.models.V1APIGroupFluent$ServerAddressByClientCIDRsNested<A> editFirstServerAddressByClientCIDR();

  public abstract io.kubernetes.client.openapi.models.V1APIGroupFluent$ServerAddressByClientCIDRsNested<A> editLastServerAddressByClientCIDR();

  public abstract io.kubernetes.client.openapi.models.V1APIGroupFluent$ServerAddressByClientCIDRsNested<A> editMatchingServerAddressByClientCIDR(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1ServerAddressByClientCIDRBuilder>);

  public abstract A addToVersions(int, io.kubernetes.client.openapi.models.V1GroupVersionForDiscovery);

  public abstract A setToVersions(int, io.kubernetes.client.openapi.models.V1GroupVersionForDiscovery);

  public abstract A addToVersions(io.kubernetes.client.openapi.models.V1GroupVersionForDiscovery...);

  public abstract A addAllToVersions(java.util.Collection<io.kubernetes.client.openapi.models.V1GroupVersionForDiscovery>);

  public abstract A removeFromVersions(io.kubernetes.client.openapi.models.V1GroupVersionForDiscovery...);

  public abstract A removeAllFromVersions(java.util.Collection<io.kubernetes.client.openapi.models.V1GroupVersionForDiscovery>);

  public abstract A removeMatchingFromVersions(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1GroupVersionForDiscoveryBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1GroupVersionForDiscovery> getVersions();

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1GroupVersionForDiscovery> buildVersions();

  public abstract io.kubernetes.client.openapi.models.V1GroupVersionForDiscovery buildVersion(int);

  public abstract io.kubernetes.client.openapi.models.V1GroupVersionForDiscovery buildFirstVersion();

  public abstract io.kubernetes.client.openapi.models.V1GroupVersionForDiscovery buildLastVersion();

  public abstract io.kubernetes.client.openapi.models.V1GroupVersionForDiscovery buildMatchingVersion(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1GroupVersionForDiscoveryBuilder>);

  public abstract java.lang.Boolean hasMatchingVersion(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1GroupVersionForDiscoveryBuilder>);

  public abstract A withVersions(java.util.List<io.kubernetes.client.openapi.models.V1GroupVersionForDiscovery>);

  public abstract A withVersions(io.kubernetes.client.openapi.models.V1GroupVersionForDiscovery...);

  public abstract java.lang.Boolean hasVersions();

  public abstract io.kubernetes.client.openapi.models.V1APIGroupFluent$VersionsNested<A> addNewVersion();

  public abstract io.kubernetes.client.openapi.models.V1APIGroupFluent$VersionsNested<A> addNewVersionLike(io.kubernetes.client.openapi.models.V1GroupVersionForDiscovery);

  public abstract io.kubernetes.client.openapi.models.V1APIGroupFluent$VersionsNested<A> setNewVersionLike(int, io.kubernetes.client.openapi.models.V1GroupVersionForDiscovery);

  public abstract io.kubernetes.client.openapi.models.V1APIGroupFluent$VersionsNested<A> editVersion(int);

  public abstract io.kubernetes.client.openapi.models.V1APIGroupFluent$VersionsNested<A> editFirstVersion();

  public abstract io.kubernetes.client.openapi.models.V1APIGroupFluent$VersionsNested<A> editLastVersion();

  public abstract io.kubernetes.client.openapi.models.V1APIGroupFluent$VersionsNested<A> editMatchingVersion(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1GroupVersionForDiscoveryBuilder>);
}
