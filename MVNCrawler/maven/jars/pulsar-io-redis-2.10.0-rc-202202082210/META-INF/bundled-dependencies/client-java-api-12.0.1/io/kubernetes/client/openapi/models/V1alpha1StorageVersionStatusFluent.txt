Compiled from "V1alpha1StorageVersionStatusFluent.java"
public interface io.kubernetes.client.openapi.models.V1alpha1StorageVersionStatusFluent<A extends io.kubernetes.client.openapi.models.V1alpha1StorageVersionStatusFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract java.lang.String getCommonEncodingVersion();

  public abstract A withCommonEncodingVersion(java.lang.String);

  public abstract java.lang.Boolean hasCommonEncodingVersion();

  public abstract A withNewCommonEncodingVersion(java.lang.String);

  public abstract A withNewCommonEncodingVersion(java.lang.StringBuilder);

  public abstract A withNewCommonEncodingVersion(java.lang.StringBuffer);

  public abstract A addToConditions(int, io.kubernetes.client.openapi.models.V1alpha1StorageVersionCondition);

  public abstract A setToConditions(int, io.kubernetes.client.openapi.models.V1alpha1StorageVersionCondition);

  public abstract A addToConditions(io.kubernetes.client.openapi.models.V1alpha1StorageVersionCondition...);

  public abstract A addAllToConditions(java.util.Collection<io.kubernetes.client.openapi.models.V1alpha1StorageVersionCondition>);

  public abstract A removeFromConditions(io.kubernetes.client.openapi.models.V1alpha1StorageVersionCondition...);

  public abstract A removeAllFromConditions(java.util.Collection<io.kubernetes.client.openapi.models.V1alpha1StorageVersionCondition>);

  public abstract A removeMatchingFromConditions(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1alpha1StorageVersionConditionBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1alpha1StorageVersionCondition> getConditions();

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1alpha1StorageVersionCondition> buildConditions();

  public abstract io.kubernetes.client.openapi.models.V1alpha1StorageVersionCondition buildCondition(int);

  public abstract io.kubernetes.client.openapi.models.V1alpha1StorageVersionCondition buildFirstCondition();

  public abstract io.kubernetes.client.openapi.models.V1alpha1StorageVersionCondition buildLastCondition();

  public abstract io.kubernetes.client.openapi.models.V1alpha1StorageVersionCondition buildMatchingCondition(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1alpha1StorageVersionConditionBuilder>);

  public abstract java.lang.Boolean hasMatchingCondition(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1alpha1StorageVersionConditionBuilder>);

  public abstract A withConditions(java.util.List<io.kubernetes.client.openapi.models.V1alpha1StorageVersionCondition>);

  public abstract A withConditions(io.kubernetes.client.openapi.models.V1alpha1StorageVersionCondition...);

  public abstract java.lang.Boolean hasConditions();

  public abstract io.kubernetes.client.openapi.models.V1alpha1StorageVersionStatusFluent$ConditionsNested<A> addNewCondition();

  public abstract io.kubernetes.client.openapi.models.V1alpha1StorageVersionStatusFluent$ConditionsNested<A> addNewConditionLike(io.kubernetes.client.openapi.models.V1alpha1StorageVersionCondition);

  public abstract io.kubernetes.client.openapi.models.V1alpha1StorageVersionStatusFluent$ConditionsNested<A> setNewConditionLike(int, io.kubernetes.client.openapi.models.V1alpha1StorageVersionCondition);

  public abstract io.kubernetes.client.openapi.models.V1alpha1StorageVersionStatusFluent$ConditionsNested<A> editCondition(int);

  public abstract io.kubernetes.client.openapi.models.V1alpha1StorageVersionStatusFluent$ConditionsNested<A> editFirstCondition();

  public abstract io.kubernetes.client.openapi.models.V1alpha1StorageVersionStatusFluent$ConditionsNested<A> editLastCondition();

  public abstract io.kubernetes.client.openapi.models.V1alpha1StorageVersionStatusFluent$ConditionsNested<A> editMatchingCondition(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1alpha1StorageVersionConditionBuilder>);

  public abstract A addToStorageVersions(int, io.kubernetes.client.openapi.models.V1alpha1ServerStorageVersion);

  public abstract A setToStorageVersions(int, io.kubernetes.client.openapi.models.V1alpha1ServerStorageVersion);

  public abstract A addToStorageVersions(io.kubernetes.client.openapi.models.V1alpha1ServerStorageVersion...);

  public abstract A addAllToStorageVersions(java.util.Collection<io.kubernetes.client.openapi.models.V1alpha1ServerStorageVersion>);

  public abstract A removeFromStorageVersions(io.kubernetes.client.openapi.models.V1alpha1ServerStorageVersion...);

  public abstract A removeAllFromStorageVersions(java.util.Collection<io.kubernetes.client.openapi.models.V1alpha1ServerStorageVersion>);

  public abstract A removeMatchingFromStorageVersions(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1alpha1ServerStorageVersionBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1alpha1ServerStorageVersion> getStorageVersions();

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1alpha1ServerStorageVersion> buildStorageVersions();

  public abstract io.kubernetes.client.openapi.models.V1alpha1ServerStorageVersion buildStorageVersion(int);

  public abstract io.kubernetes.client.openapi.models.V1alpha1ServerStorageVersion buildFirstStorageVersion();

  public abstract io.kubernetes.client.openapi.models.V1alpha1ServerStorageVersion buildLastStorageVersion();

  public abstract io.kubernetes.client.openapi.models.V1alpha1ServerStorageVersion buildMatchingStorageVersion(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1alpha1ServerStorageVersionBuilder>);

  public abstract java.lang.Boolean hasMatchingStorageVersion(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1alpha1ServerStorageVersionBuilder>);

  public abstract A withStorageVersions(java.util.List<io.kubernetes.client.openapi.models.V1alpha1ServerStorageVersion>);

  public abstract A withStorageVersions(io.kubernetes.client.openapi.models.V1alpha1ServerStorageVersion...);

  public abstract java.lang.Boolean hasStorageVersions();

  public abstract io.kubernetes.client.openapi.models.V1alpha1StorageVersionStatusFluent$StorageVersionsNested<A> addNewStorageVersion();

  public abstract io.kubernetes.client.openapi.models.V1alpha1StorageVersionStatusFluent$StorageVersionsNested<A> addNewStorageVersionLike(io.kubernetes.client.openapi.models.V1alpha1ServerStorageVersion);

  public abstract io.kubernetes.client.openapi.models.V1alpha1StorageVersionStatusFluent$StorageVersionsNested<A> setNewStorageVersionLike(int, io.kubernetes.client.openapi.models.V1alpha1ServerStorageVersion);

  public abstract io.kubernetes.client.openapi.models.V1alpha1StorageVersionStatusFluent$StorageVersionsNested<A> editStorageVersion(int);

  public abstract io.kubernetes.client.openapi.models.V1alpha1StorageVersionStatusFluent$StorageVersionsNested<A> editFirstStorageVersion();

  public abstract io.kubernetes.client.openapi.models.V1alpha1StorageVersionStatusFluent$StorageVersionsNested<A> editLastStorageVersion();

  public abstract io.kubernetes.client.openapi.models.V1alpha1StorageVersionStatusFluent$StorageVersionsNested<A> editMatchingStorageVersion(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1alpha1ServerStorageVersionBuilder>);
}
