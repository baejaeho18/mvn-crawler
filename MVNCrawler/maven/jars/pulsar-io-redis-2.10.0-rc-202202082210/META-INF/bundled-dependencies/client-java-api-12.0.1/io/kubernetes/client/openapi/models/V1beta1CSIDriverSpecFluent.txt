Compiled from "V1beta1CSIDriverSpecFluent.java"
public interface io.kubernetes.client.openapi.models.V1beta1CSIDriverSpecFluent<A extends io.kubernetes.client.openapi.models.V1beta1CSIDriverSpecFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract java.lang.Boolean isAttachRequired();

  public abstract A withAttachRequired(java.lang.Boolean);

  public abstract java.lang.Boolean hasAttachRequired();

  public abstract A withNewAttachRequired(java.lang.String);

  public abstract A withNewAttachRequired(boolean);

  public abstract java.lang.String getFsGroupPolicy();

  public abstract A withFsGroupPolicy(java.lang.String);

  public abstract java.lang.Boolean hasFsGroupPolicy();

  public abstract A withNewFsGroupPolicy(java.lang.String);

  public abstract A withNewFsGroupPolicy(java.lang.StringBuilder);

  public abstract A withNewFsGroupPolicy(java.lang.StringBuffer);

  public abstract java.lang.Boolean isPodInfoOnMount();

  public abstract A withPodInfoOnMount(java.lang.Boolean);

  public abstract java.lang.Boolean hasPodInfoOnMount();

  public abstract A withNewPodInfoOnMount(java.lang.String);

  public abstract A withNewPodInfoOnMount(boolean);

  public abstract java.lang.Boolean isRequiresRepublish();

  public abstract A withRequiresRepublish(java.lang.Boolean);

  public abstract java.lang.Boolean hasRequiresRepublish();

  public abstract A withNewRequiresRepublish(java.lang.String);

  public abstract A withNewRequiresRepublish(boolean);

  public abstract java.lang.Boolean isStorageCapacity();

  public abstract A withStorageCapacity(java.lang.Boolean);

  public abstract java.lang.Boolean hasStorageCapacity();

  public abstract A withNewStorageCapacity(java.lang.String);

  public abstract A withNewStorageCapacity(boolean);

  public abstract A addToTokenRequests(int, io.kubernetes.client.openapi.models.V1beta1TokenRequest);

  public abstract A setToTokenRequests(int, io.kubernetes.client.openapi.models.V1beta1TokenRequest);

  public abstract A addToTokenRequests(io.kubernetes.client.openapi.models.V1beta1TokenRequest...);

  public abstract A addAllToTokenRequests(java.util.Collection<io.kubernetes.client.openapi.models.V1beta1TokenRequest>);

  public abstract A removeFromTokenRequests(io.kubernetes.client.openapi.models.V1beta1TokenRequest...);

  public abstract A removeAllFromTokenRequests(java.util.Collection<io.kubernetes.client.openapi.models.V1beta1TokenRequest>);

  public abstract A removeMatchingFromTokenRequests(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1TokenRequestBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1beta1TokenRequest> getTokenRequests();

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1beta1TokenRequest> buildTokenRequests();

  public abstract io.kubernetes.client.openapi.models.V1beta1TokenRequest buildTokenRequest(int);

  public abstract io.kubernetes.client.openapi.models.V1beta1TokenRequest buildFirstTokenRequest();

  public abstract io.kubernetes.client.openapi.models.V1beta1TokenRequest buildLastTokenRequest();

  public abstract io.kubernetes.client.openapi.models.V1beta1TokenRequest buildMatchingTokenRequest(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1TokenRequestBuilder>);

  public abstract java.lang.Boolean hasMatchingTokenRequest(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1TokenRequestBuilder>);

  public abstract A withTokenRequests(java.util.List<io.kubernetes.client.openapi.models.V1beta1TokenRequest>);

  public abstract A withTokenRequests(io.kubernetes.client.openapi.models.V1beta1TokenRequest...);

  public abstract java.lang.Boolean hasTokenRequests();

  public abstract io.kubernetes.client.openapi.models.V1beta1CSIDriverSpecFluent$TokenRequestsNested<A> addNewTokenRequest();

  public abstract io.kubernetes.client.openapi.models.V1beta1CSIDriverSpecFluent$TokenRequestsNested<A> addNewTokenRequestLike(io.kubernetes.client.openapi.models.V1beta1TokenRequest);

  public abstract io.kubernetes.client.openapi.models.V1beta1CSIDriverSpecFluent$TokenRequestsNested<A> setNewTokenRequestLike(int, io.kubernetes.client.openapi.models.V1beta1TokenRequest);

  public abstract io.kubernetes.client.openapi.models.V1beta1CSIDriverSpecFluent$TokenRequestsNested<A> editTokenRequest(int);

  public abstract io.kubernetes.client.openapi.models.V1beta1CSIDriverSpecFluent$TokenRequestsNested<A> editFirstTokenRequest();

  public abstract io.kubernetes.client.openapi.models.V1beta1CSIDriverSpecFluent$TokenRequestsNested<A> editLastTokenRequest();

  public abstract io.kubernetes.client.openapi.models.V1beta1CSIDriverSpecFluent$TokenRequestsNested<A> editMatchingTokenRequest(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1beta1TokenRequestBuilder>);

  public abstract A addToVolumeLifecycleModes(int, java.lang.String);

  public abstract A setToVolumeLifecycleModes(int, java.lang.String);

  public abstract A addToVolumeLifecycleModes(java.lang.String...);

  public abstract A addAllToVolumeLifecycleModes(java.util.Collection<java.lang.String>);

  public abstract A removeFromVolumeLifecycleModes(java.lang.String...);

  public abstract A removeAllFromVolumeLifecycleModes(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getVolumeLifecycleModes();

  public abstract java.lang.String getVolumeLifecycleMode(int);

  public abstract java.lang.String getFirstVolumeLifecycleMode();

  public abstract java.lang.String getLastVolumeLifecycleMode();

  public abstract java.lang.String getMatchingVolumeLifecycleMode(io.kubernetes.client.fluent.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingVolumeLifecycleMode(io.kubernetes.client.fluent.Predicate<java.lang.String>);

  public abstract A withVolumeLifecycleModes(java.util.List<java.lang.String>);

  public abstract A withVolumeLifecycleModes(java.lang.String...);

  public abstract java.lang.Boolean hasVolumeLifecycleModes();

  public abstract A addNewVolumeLifecycleMode(java.lang.String);

  public abstract A addNewVolumeLifecycleMode(java.lang.StringBuilder);

  public abstract A addNewVolumeLifecycleMode(java.lang.StringBuffer);
}
