Compiled from "NetworkingV1beta1IngressBackendFluent.java"
public interface io.kubernetes.client.openapi.models.NetworkingV1beta1IngressBackendFluent<A extends io.kubernetes.client.openapi.models.NetworkingV1beta1IngressBackendFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract io.kubernetes.client.openapi.models.V1TypedLocalObjectReference getResource();

  public abstract io.kubernetes.client.openapi.models.V1TypedLocalObjectReference buildResource();

  public abstract A withResource(io.kubernetes.client.openapi.models.V1TypedLocalObjectReference);

  public abstract java.lang.Boolean hasResource();

  public abstract io.kubernetes.client.openapi.models.NetworkingV1beta1IngressBackendFluent$ResourceNested<A> withNewResource();

  public abstract io.kubernetes.client.openapi.models.NetworkingV1beta1IngressBackendFluent$ResourceNested<A> withNewResourceLike(io.kubernetes.client.openapi.models.V1TypedLocalObjectReference);

  public abstract io.kubernetes.client.openapi.models.NetworkingV1beta1IngressBackendFluent$ResourceNested<A> editResource();

  public abstract io.kubernetes.client.openapi.models.NetworkingV1beta1IngressBackendFluent$ResourceNested<A> editOrNewResource();

  public abstract io.kubernetes.client.openapi.models.NetworkingV1beta1IngressBackendFluent$ResourceNested<A> editOrNewResourceLike(io.kubernetes.client.openapi.models.V1TypedLocalObjectReference);

  public abstract java.lang.String getServiceName();

  public abstract A withServiceName(java.lang.String);

  public abstract java.lang.Boolean hasServiceName();

  public abstract A withNewServiceName(java.lang.String);

  public abstract A withNewServiceName(java.lang.StringBuilder);

  public abstract A withNewServiceName(java.lang.StringBuffer);

  public abstract io.kubernetes.client.custom.IntOrString getServicePort();

  public abstract A withServicePort(io.kubernetes.client.custom.IntOrString);

  public abstract java.lang.Boolean hasServicePort();

  public abstract A withNewServicePort(int);

  public abstract A withNewServicePort(java.lang.String);
}
