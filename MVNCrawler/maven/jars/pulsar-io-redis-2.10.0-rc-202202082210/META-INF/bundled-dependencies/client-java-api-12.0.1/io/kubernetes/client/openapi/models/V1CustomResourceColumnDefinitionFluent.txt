Compiled from "V1CustomResourceColumnDefinitionFluent.java"
public interface io.kubernetes.client.openapi.models.V1CustomResourceColumnDefinitionFluent<A extends io.kubernetes.client.openapi.models.V1CustomResourceColumnDefinitionFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract java.lang.String getDescription();

  public abstract A withDescription(java.lang.String);

  public abstract java.lang.Boolean hasDescription();

  public abstract A withNewDescription(java.lang.String);

  public abstract A withNewDescription(java.lang.StringBuilder);

  public abstract A withNewDescription(java.lang.StringBuffer);

  public abstract java.lang.String getFormat();

  public abstract A withFormat(java.lang.String);

  public abstract java.lang.Boolean hasFormat();

  public abstract A withNewFormat(java.lang.String);

  public abstract A withNewFormat(java.lang.StringBuilder);

  public abstract A withNewFormat(java.lang.StringBuffer);

  public abstract java.lang.String getJsonPath();

  public abstract A withJsonPath(java.lang.String);

  public abstract java.lang.Boolean hasJsonPath();

  public abstract A withNewJsonPath(java.lang.String);

  public abstract A withNewJsonPath(java.lang.StringBuilder);

  public abstract A withNewJsonPath(java.lang.StringBuffer);

  public abstract java.lang.String getName();

  public abstract A withName(java.lang.String);

  public abstract java.lang.Boolean hasName();

  public abstract A withNewName(java.lang.String);

  public abstract A withNewName(java.lang.StringBuilder);

  public abstract A withNewName(java.lang.StringBuffer);

  public abstract java.lang.Integer getPriority();

  public abstract A withPriority(java.lang.Integer);

  public abstract java.lang.Boolean hasPriority();

  public abstract java.lang.String getType();

  public abstract A withType(java.lang.String);

  public abstract java.lang.Boolean hasType();

  public abstract A withNewType(java.lang.String);

  public abstract A withNewType(java.lang.StringBuilder);

  public abstract A withNewType(java.lang.StringBuffer);
}
