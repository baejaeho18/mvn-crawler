Compiled from "BaseFluent.java"
public class io.kubernetes.client.fluent.BaseFluent<F extends io.kubernetes.client.fluent.Fluent<F>> implements io.kubernetes.client.fluent.Fluent<F>, io.kubernetes.client.fluent.Visitable<F> {
  private static final java.lang.String VISIT;

  public final io.kubernetes.client.fluent.VisitableMap _visitables;

  public io.kubernetes.client.fluent.BaseFluent();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class io/kubernetes/client/fluent/VisitableMap
       8: dup
       9: invokespecial #3                  // Method io/kubernetes/client/fluent/VisitableMap."<init>":()V
      12: putfield      #4                  // Field _visitables:Lio/kubernetes/client/fluent/VisitableMap;
      15: return

  public static <T> io.kubernetes.client.fluent.VisitableBuilder<T, ?> builderOf(T);
    Code:
       0: aload_0
       1: instanceof    #5                  // class io/kubernetes/client/fluent/Editable
       4: ifeq          29
       7: aload_0
       8: checkcast     #5                  // class io/kubernetes/client/fluent/Editable
      11: invokeinterface #6,  1            // InterfaceMethod io/kubernetes/client/fluent/Editable.edit:()Ljava/lang/Object;
      16: astore_1
      17: aload_1
      18: instanceof    #7                  // class io/kubernetes/client/fluent/VisitableBuilder
      21: ifeq          29
      24: aload_1
      25: checkcast     #7                  // class io/kubernetes/client/fluent/VisitableBuilder
      28: areturn
      29: new           #8                  // class java/lang/StringBuilder
      32: dup
      33: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      36: aload_0
      37: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      40: invokevirtual #11                 // Method java/lang/Class.getName:()Ljava/lang/String;
      43: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: ldc           #13                 // String Builder
      48: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokestatic  #15                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      57: iconst_1
      58: anewarray     #16                 // class java/lang/Class
      61: dup
      62: iconst_0
      63: aload_0
      64: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      67: aastore
      68: invokevirtual #17                 // Method java/lang/Class.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      71: iconst_1
      72: anewarray     #18                 // class java/lang/Object
      75: dup
      76: iconst_0
      77: aload_0
      78: aastore
      79: invokevirtual #19                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      82: checkcast     #7                  // class io/kubernetes/client/fluent/VisitableBuilder
      85: areturn
      86: astore_1
      87: new           #21                 // class java/lang/IllegalStateException
      90: dup
      91: new           #8                  // class java/lang/StringBuilder
      94: dup
      95: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      98: ldc           #22                 // String Failed to create builder for:
     100: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: aload_0
     104: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     107: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     110: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     113: aload_1
     114: invokespecial #24                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     117: athrow
    Exception table:
       from    to  target type
          29    85    86   Class java/lang/Exception

  public static <T> java.util.ArrayList<T> build(java.util.List<? extends io.kubernetes.client.fluent.Builder<? extends T>>);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: new           #25                 // class java/util/ArrayList
       9: dup
      10: invokespecial #26                 // Method java/util/ArrayList."<init>":()V
      13: astore_1
      14: aload_0
      15: invokeinterface #27,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      20: astore_2
      21: aload_2
      22: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          54
      30: aload_2
      31: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #30                 // class io/kubernetes/client/fluent/Builder
      39: astore_3
      40: aload_1
      41: aload_3
      42: invokeinterface #31,  1           // InterfaceMethod io/kubernetes/client/fluent/Builder.build:()Ljava/lang/Object;
      47: invokevirtual #32                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      50: pop
      51: goto          21
      54: aload_1
      55: areturn

  public static <T> java.util.List<T> build(java.util.Set<? extends io.kubernetes.client.fluent.Builder<? extends T>>);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: new           #25                 // class java/util/ArrayList
       9: dup
      10: invokespecial #26                 // Method java/util/ArrayList."<init>":()V
      13: astore_1
      14: aload_0
      15: invokeinterface #33,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      20: astore_2
      21: aload_2
      22: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          56
      30: aload_2
      31: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #30                 // class io/kubernetes/client/fluent/Builder
      39: astore_3
      40: aload_1
      41: aload_3
      42: invokeinterface #31,  1           // InterfaceMethod io/kubernetes/client/fluent/Builder.build:()Ljava/lang/Object;
      47: invokeinterface #34,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      52: pop
      53: goto          21
      56: aload_1
      57: areturn

  public static <T> java.util.ArrayList<T> aggregate(java.util.List<? extends T>...);
    Code:
       0: new           #25                 // class java/util/ArrayList
       3: dup
       4: invokespecial #26                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: astore_2
      10: aload_2
      11: arraylength
      12: istore_3
      13: iconst_0
      14: istore        4
      16: iload         4
      18: iload_3
      19: if_icmpge     46
      22: aload_2
      23: iload         4
      25: aaload
      26: astore        5
      28: aload         5
      30: ifnull        40
      33: aload_1
      34: aload         5
      36: invokevirtual #35                 // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
      39: pop
      40: iinc          4, 1
      43: goto          16
      46: aload_1
      47: areturn

  public static <T> java.util.LinkedHashSet<T> aggregate(java.util.Set<? extends T>...);
    Code:
       0: new           #36                 // class java/util/LinkedHashSet
       3: dup
       4: invokespecial #37                 // Method java/util/LinkedHashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: astore_2
      10: aload_2
      11: arraylength
      12: istore_3
      13: iconst_0
      14: istore        4
      16: iload         4
      18: iload_3
      19: if_icmpge     46
      22: aload_2
      23: iload         4
      25: aaload
      26: astore        5
      28: aload         5
      30: ifnull        40
      33: aload_1
      34: aload         5
      36: invokevirtual #38                 // Method java/util/LinkedHashSet.addAll:(Ljava/util/Collection;)Z
      39: pop
      40: iinc          4, 1
      43: goto          16
      46: aload_1
      47: areturn

  private static <V, F> java.lang.Boolean canVisit(V, F);
    Code:
       0: aload_0
       1: instanceof    #39                 // class io/kubernetes/client/fluent/TypedVisitor
       4: ifeq          29
       7: aload_0
       8: checkcast     #39                 // class io/kubernetes/client/fluent/TypedVisitor
      11: invokevirtual #40                 // Method io/kubernetes/client/fluent/TypedVisitor.getType:()Ljava/lang/Class;
      14: aload_1
      15: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      18: invokevirtual #41                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      21: ifne          29
      24: iconst_0
      25: invokestatic  #42                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      28: areturn
      29: aload_0
      30: instanceof    #43                 // class io/kubernetes/client/fluent/PathAwareTypedVisitor
      33: ifeq          66
      36: aload_0
      37: checkcast     #43                 // class io/kubernetes/client/fluent/PathAwareTypedVisitor
      40: astore_2
      41: aload_2
      42: invokevirtual #44                 // Method io/kubernetes/client/fluent/PathAwareTypedVisitor.getParentType:()Ljava/lang/Class;
      45: astore_3
      46: aload_2
      47: invokevirtual #45                 // Method io/kubernetes/client/fluent/PathAwareTypedVisitor.getActualParentType:()Ljava/lang/Class;
      50: astore        4
      52: aload_3
      53: aload         4
      55: invokevirtual #41                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      58: ifne          66
      61: iconst_0
      62: invokestatic  #42                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      65: areturn
      66: aload_0
      67: aload_1
      68: invokestatic  #46                 // Method hasCompatibleVisitMethod:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Boolean;
      71: areturn

  private static <V, F> java.lang.Boolean hasCompatibleVisitMethod(V, F);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #47                 // Method java/lang/Class.getMethods:()[Ljava/lang/reflect/Method;
       7: astore_2
       8: aload_2
       9: arraylength
      10: istore_3
      11: iconst_0
      12: istore        4
      14: iload         4
      16: iload_3
      17: if_icmpge     89
      20: aload_2
      21: iload         4
      23: aaload
      24: astore        5
      26: aload         5
      28: invokevirtual #48                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
      31: ldc           #50                 // String visit
      33: invokevirtual #51                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      36: ifeq          83
      39: aload         5
      41: invokevirtual #52                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      44: arraylength
      45: iconst_1
      46: if_icmpeq     52
      49: goto          83
      52: aload         5
      54: invokevirtual #52                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      57: iconst_0
      58: aaload
      59: astore        6
      61: aload         6
      63: aload_1
      64: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      67: invokevirtual #41                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      70: ifeq          78
      73: iconst_1
      74: invokestatic  #42                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      77: areturn
      78: iconst_0
      79: invokestatic  #42                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      82: areturn
      83: iinc          4, 1
      86: goto          14
      89: iconst_0
      90: invokestatic  #42                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      93: areturn

  public F accept(io.kubernetes.client.fluent.Visitor);
    Code:
       0: aload_1
       1: instanceof    #43                 // class io/kubernetes/client/fluent/PathAwareTypedVisitor
       4: ifeq          16
       7: aload_0
       8: aload_1
       9: checkcast     #43                 // class io/kubernetes/client/fluent/PathAwareTypedVisitor
      12: invokespecial #53                 // Method acceptPathAware:(Lio/kubernetes/client/fluent/PathAwareTypedVisitor;)Lio/kubernetes/client/fluent/Fluent;
      15: areturn
      16: aload_0
      17: aload_1
      18: invokespecial #54                 // Method acceptInternal:(Lio/kubernetes/client/fluent/Visitor;)Lio/kubernetes/client/fluent/Fluent;
      21: areturn

  private F acceptInternal(io.kubernetes.client.fluent.Visitor);
    Code:
       0: aload_0
       1: getfield      #4                  // Field _visitables:Lio/kubernetes/client/fluent/VisitableMap;
       4: invokevirtual #55                 // Method io/kubernetes/client/fluent/VisitableMap.iterator:()Ljava/util/Iterator;
       7: astore_2
       8: aload_2
       9: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          38
      17: aload_2
      18: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #56                 // class io/kubernetes/client/fluent/Visitable
      26: astore_3
      27: aload_3
      28: aload_1
      29: invokeinterface #57,  2           // InterfaceMethod io/kubernetes/client/fluent/Visitable.accept:(Lio/kubernetes/client/fluent/Visitor;)Ljava/lang/Object;
      34: pop
      35: goto          8
      38: aload_1
      39: aload_0
      40: invokestatic  #58                 // Method canVisit:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Boolean;
      43: invokevirtual #59                 // Method java/lang/Boolean.booleanValue:()Z
      46: ifeq          56
      49: aload_1
      50: aload_0
      51: invokeinterface #60,  2           // InterfaceMethod io/kubernetes/client/fluent/Visitor.visit:(Ljava/lang/Object;)V
      56: aload_0
      57: areturn

  private F acceptPathAware(io.kubernetes.client.fluent.PathAwareTypedVisitor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #61                 // Method io/kubernetes/client/fluent/PathAwareTypedVisitor.next:(Ljava/lang/Object;)Lio/kubernetes/client/fluent/PathAwareTypedVisitor;
       6: invokespecial #54                 // Method acceptInternal:(Lio/kubernetes/client/fluent/Visitor;)Lio/kubernetes/client/fluent/Fluent;
       9: areturn

  public java.lang.Object accept(io.kubernetes.client.fluent.Visitor);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #62                 // Method accept:(Lio/kubernetes/client/fluent/Visitor;)Lio/kubernetes/client/fluent/Fluent;
       5: areturn
}
