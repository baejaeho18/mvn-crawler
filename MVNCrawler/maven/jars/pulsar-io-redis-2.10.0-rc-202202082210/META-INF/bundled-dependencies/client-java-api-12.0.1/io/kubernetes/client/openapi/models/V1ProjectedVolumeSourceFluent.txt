Compiled from "V1ProjectedVolumeSourceFluent.java"
public interface io.kubernetes.client.openapi.models.V1ProjectedVolumeSourceFluent<A extends io.kubernetes.client.openapi.models.V1ProjectedVolumeSourceFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract java.lang.Integer getDefaultMode();

  public abstract A withDefaultMode(java.lang.Integer);

  public abstract java.lang.Boolean hasDefaultMode();

  public abstract A addToSources(int, io.kubernetes.client.openapi.models.V1VolumeProjection);

  public abstract A setToSources(int, io.kubernetes.client.openapi.models.V1VolumeProjection);

  public abstract A addToSources(io.kubernetes.client.openapi.models.V1VolumeProjection...);

  public abstract A addAllToSources(java.util.Collection<io.kubernetes.client.openapi.models.V1VolumeProjection>);

  public abstract A removeFromSources(io.kubernetes.client.openapi.models.V1VolumeProjection...);

  public abstract A removeAllFromSources(java.util.Collection<io.kubernetes.client.openapi.models.V1VolumeProjection>);

  public abstract A removeMatchingFromSources(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1VolumeProjectionBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1VolumeProjection> getSources();

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1VolumeProjection> buildSources();

  public abstract io.kubernetes.client.openapi.models.V1VolumeProjection buildSource(int);

  public abstract io.kubernetes.client.openapi.models.V1VolumeProjection buildFirstSource();

  public abstract io.kubernetes.client.openapi.models.V1VolumeProjection buildLastSource();

  public abstract io.kubernetes.client.openapi.models.V1VolumeProjection buildMatchingSource(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1VolumeProjectionBuilder>);

  public abstract java.lang.Boolean hasMatchingSource(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1VolumeProjectionBuilder>);

  public abstract A withSources(java.util.List<io.kubernetes.client.openapi.models.V1VolumeProjection>);

  public abstract A withSources(io.kubernetes.client.openapi.models.V1VolumeProjection...);

  public abstract java.lang.Boolean hasSources();

  public abstract io.kubernetes.client.openapi.models.V1ProjectedVolumeSourceFluent$SourcesNested<A> addNewSource();

  public abstract io.kubernetes.client.openapi.models.V1ProjectedVolumeSourceFluent$SourcesNested<A> addNewSourceLike(io.kubernetes.client.openapi.models.V1VolumeProjection);

  public abstract io.kubernetes.client.openapi.models.V1ProjectedVolumeSourceFluent$SourcesNested<A> setNewSourceLike(int, io.kubernetes.client.openapi.models.V1VolumeProjection);

  public abstract io.kubernetes.client.openapi.models.V1ProjectedVolumeSourceFluent$SourcesNested<A> editSource(int);

  public abstract io.kubernetes.client.openapi.models.V1ProjectedVolumeSourceFluent$SourcesNested<A> editFirstSource();

  public abstract io.kubernetes.client.openapi.models.V1ProjectedVolumeSourceFluent$SourcesNested<A> editLastSource();

  public abstract io.kubernetes.client.openapi.models.V1ProjectedVolumeSourceFluent$SourcesNested<A> editMatchingSource(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1VolumeProjectionBuilder>);
}
