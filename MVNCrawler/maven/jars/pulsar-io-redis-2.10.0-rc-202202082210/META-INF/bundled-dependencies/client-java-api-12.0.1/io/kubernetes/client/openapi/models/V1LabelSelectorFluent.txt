Compiled from "V1LabelSelectorFluent.java"
public interface io.kubernetes.client.openapi.models.V1LabelSelectorFluent<A extends io.kubernetes.client.openapi.models.V1LabelSelectorFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract A addToMatchExpressions(int, io.kubernetes.client.openapi.models.V1LabelSelectorRequirement);

  public abstract A setToMatchExpressions(int, io.kubernetes.client.openapi.models.V1LabelSelectorRequirement);

  public abstract A addToMatchExpressions(io.kubernetes.client.openapi.models.V1LabelSelectorRequirement...);

  public abstract A addAllToMatchExpressions(java.util.Collection<io.kubernetes.client.openapi.models.V1LabelSelectorRequirement>);

  public abstract A removeFromMatchExpressions(io.kubernetes.client.openapi.models.V1LabelSelectorRequirement...);

  public abstract A removeAllFromMatchExpressions(java.util.Collection<io.kubernetes.client.openapi.models.V1LabelSelectorRequirement>);

  public abstract A removeMatchingFromMatchExpressions(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1LabelSelectorRequirementBuilder>);

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1LabelSelectorRequirement> getMatchExpressions();

  public abstract java.util.List<io.kubernetes.client.openapi.models.V1LabelSelectorRequirement> buildMatchExpressions();

  public abstract io.kubernetes.client.openapi.models.V1LabelSelectorRequirement buildMatchExpression(int);

  public abstract io.kubernetes.client.openapi.models.V1LabelSelectorRequirement buildFirstMatchExpression();

  public abstract io.kubernetes.client.openapi.models.V1LabelSelectorRequirement buildLastMatchExpression();

  public abstract io.kubernetes.client.openapi.models.V1LabelSelectorRequirement buildMatchingMatchExpression(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1LabelSelectorRequirementBuilder>);

  public abstract java.lang.Boolean hasMatchingMatchExpression(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1LabelSelectorRequirementBuilder>);

  public abstract A withMatchExpressions(java.util.List<io.kubernetes.client.openapi.models.V1LabelSelectorRequirement>);

  public abstract A withMatchExpressions(io.kubernetes.client.openapi.models.V1LabelSelectorRequirement...);

  public abstract java.lang.Boolean hasMatchExpressions();

  public abstract io.kubernetes.client.openapi.models.V1LabelSelectorFluent$MatchExpressionsNested<A> addNewMatchExpression();

  public abstract io.kubernetes.client.openapi.models.V1LabelSelectorFluent$MatchExpressionsNested<A> addNewMatchExpressionLike(io.kubernetes.client.openapi.models.V1LabelSelectorRequirement);

  public abstract io.kubernetes.client.openapi.models.V1LabelSelectorFluent$MatchExpressionsNested<A> setNewMatchExpressionLike(int, io.kubernetes.client.openapi.models.V1LabelSelectorRequirement);

  public abstract io.kubernetes.client.openapi.models.V1LabelSelectorFluent$MatchExpressionsNested<A> editMatchExpression(int);

  public abstract io.kubernetes.client.openapi.models.V1LabelSelectorFluent$MatchExpressionsNested<A> editFirstMatchExpression();

  public abstract io.kubernetes.client.openapi.models.V1LabelSelectorFluent$MatchExpressionsNested<A> editLastMatchExpression();

  public abstract io.kubernetes.client.openapi.models.V1LabelSelectorFluent$MatchExpressionsNested<A> editMatchingMatchExpression(io.kubernetes.client.fluent.Predicate<io.kubernetes.client.openapi.models.V1LabelSelectorRequirementBuilder>);

  public abstract A addToMatchLabels(java.lang.String, java.lang.String);

  public abstract A addToMatchLabels(java.util.Map<java.lang.String, java.lang.String>);

  public abstract A removeFromMatchLabels(java.lang.String);

  public abstract A removeFromMatchLabels(java.util.Map<java.lang.String, java.lang.String>);

  public abstract java.util.Map<java.lang.String, java.lang.String> getMatchLabels();

  public abstract A withMatchLabels(java.util.Map<java.lang.String, java.lang.String>);

  public abstract java.lang.Boolean hasMatchLabels();
}
