Compiled from "V1alpha1ServerStorageVersionFluent.java"
public interface io.kubernetes.client.openapi.models.V1alpha1ServerStorageVersionFluent<A extends io.kubernetes.client.openapi.models.V1alpha1ServerStorageVersionFluent<A>> extends io.kubernetes.client.fluent.Fluent<A> {
  public abstract java.lang.String getApiServerID();

  public abstract A withApiServerID(java.lang.String);

  public abstract java.lang.Boolean hasApiServerID();

  public abstract A withNewApiServerID(java.lang.String);

  public abstract A withNewApiServerID(java.lang.StringBuilder);

  public abstract A withNewApiServerID(java.lang.StringBuffer);

  public abstract A addToDecodableVersions(int, java.lang.String);

  public abstract A setToDecodableVersions(int, java.lang.String);

  public abstract A addToDecodableVersions(java.lang.String...);

  public abstract A addAllToDecodableVersions(java.util.Collection<java.lang.String>);

  public abstract A removeFromDecodableVersions(java.lang.String...);

  public abstract A removeAllFromDecodableVersions(java.util.Collection<java.lang.String>);

  public abstract java.util.List<java.lang.String> getDecodableVersions();

  public abstract java.lang.String getDecodableVersion(int);

  public abstract java.lang.String getFirstDecodableVersion();

  public abstract java.lang.String getLastDecodableVersion();

  public abstract java.lang.String getMatchingDecodableVersion(io.kubernetes.client.fluent.Predicate<java.lang.String>);

  public abstract java.lang.Boolean hasMatchingDecodableVersion(io.kubernetes.client.fluent.Predicate<java.lang.String>);

  public abstract A withDecodableVersions(java.util.List<java.lang.String>);

  public abstract A withDecodableVersions(java.lang.String...);

  public abstract java.lang.Boolean hasDecodableVersions();

  public abstract A addNewDecodableVersion(java.lang.String);

  public abstract A addNewDecodableVersion(java.lang.StringBuilder);

  public abstract A addNewDecodableVersion(java.lang.StringBuffer);

  public abstract java.lang.String getEncodingVersion();

  public abstract A withEncodingVersion(java.lang.String);

  public abstract java.lang.Boolean hasEncodingVersion();

  public abstract A withNewEncodingVersion(java.lang.String);

  public abstract A withNewEncodingVersion(java.lang.StringBuilder);

  public abstract A withNewEncodingVersion(java.lang.StringBuffer);
}
