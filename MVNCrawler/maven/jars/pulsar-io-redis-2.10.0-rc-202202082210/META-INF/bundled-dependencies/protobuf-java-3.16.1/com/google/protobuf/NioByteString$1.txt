Compiled from "NioByteString.java"
class com.google.protobuf.NioByteString$1 extends java.io.InputStream {
  private final java.nio.ByteBuffer buf;

  final com.google.protobuf.NioByteString this$0;

  com.google.protobuf.NioByteString$1(com.google.protobuf.NioByteString);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/google/protobuf/NioByteString;
       5: aload_0
       6: invokespecial #2                  // Method java/io/InputStream."<init>":()V
       9: aload_0
      10: aload_0
      11: getfield      #1                  // Field this$0:Lcom/google/protobuf/NioByteString;
      14: invokestatic  #3                  // Method com/google/protobuf/NioByteString.access$000:(Lcom/google/protobuf/NioByteString;)Ljava/nio/ByteBuffer;
      17: invokevirtual #4                  // Method java/nio/ByteBuffer.slice:()Ljava/nio/ByteBuffer;
      20: putfield      #5                  // Field buf:Ljava/nio/ByteBuffer;
      23: return

  public void mark(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field buf:Ljava/nio/ByteBuffer;
       4: invokevirtual #6                  // Method java/nio/ByteBuffer.mark:()Ljava/nio/Buffer;
       7: pop
       8: return

  public boolean markSupported();
    Code:
       0: iconst_1
       1: ireturn

  public void reset() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field buf:Ljava/nio/ByteBuffer;
       4: invokevirtual #7                  // Method java/nio/ByteBuffer.reset:()Ljava/nio/Buffer;
       7: pop
       8: goto          21
      11: astore_1
      12: new           #9                  // class java/io/IOException
      15: dup
      16: aload_1
      17: invokespecial #10                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
      20: athrow
      21: return
    Exception table:
       from    to  target type
           0     8    11   Class java/nio/InvalidMarkException

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field buf:Ljava/nio/ByteBuffer;
       4: invokevirtual #11                 // Method java/nio/ByteBuffer.remaining:()I
       7: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field buf:Ljava/nio/ByteBuffer;
       4: invokevirtual #12                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       7: ifne          12
      10: iconst_m1
      11: ireturn
      12: aload_0
      13: getfield      #5                  // Field buf:Ljava/nio/ByteBuffer;
      16: invokevirtual #13                 // Method java/nio/ByteBuffer.get:()B
      19: sipush        255
      22: iand
      23: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field buf:Ljava/nio/ByteBuffer;
       4: invokevirtual #12                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       7: ifne          12
      10: iconst_m1
      11: ireturn
      12: iload_3
      13: aload_0
      14: getfield      #5                  // Field buf:Ljava/nio/ByteBuffer;
      17: invokevirtual #11                 // Method java/nio/ByteBuffer.remaining:()I
      20: invokestatic  #14                 // Method java/lang/Math.min:(II)I
      23: istore_3
      24: aload_0
      25: getfield      #5                  // Field buf:Ljava/nio/ByteBuffer;
      28: aload_1
      29: iload_2
      30: iload_3
      31: invokevirtual #15                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      34: pop
      35: iload_3
      36: ireturn
}
