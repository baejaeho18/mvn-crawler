Compiled from "FloatArrayList.java"
final class com.google.protobuf.FloatArrayList extends com.google.protobuf.AbstractProtobufList<java.lang.Float> implements com.google.protobuf.Internal$FloatList, java.util.RandomAccess, com.google.protobuf.PrimitiveNonBoxingCollection {
  private static final com.google.protobuf.FloatArrayList EMPTY_LIST;

  private float[] array;

  private int size;

  public static com.google.protobuf.FloatArrayList emptyList();
    Code:
       0: getstatic     #1                  // Field EMPTY_LIST:Lcom/google/protobuf/FloatArrayList;
       3: areturn

  com.google.protobuf.FloatArrayList();
    Code:
       0: aload_0
       1: bipush        10
       3: newarray       float
       5: iconst_0
       6: invokespecial #3                  // Method "<init>":([FI)V
       9: return

  private com.google.protobuf.FloatArrayList(float[], int);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method com/google/protobuf/AbstractProtobufList."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field array:[F
       9: aload_0
      10: iload_2
      11: putfield      #6                  // Field size:I
      14: return

  protected void removeRange(int, int);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method ensureIsMutable:()V
       4: iload_2
       5: iload_1
       6: if_icmpge     19
       9: new           #8                  // class java/lang/IndexOutOfBoundsException
      12: dup
      13: ldc           #9                  // String toIndex < fromIndex
      15: invokespecial #10                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: getfield      #5                  // Field array:[F
      23: iload_2
      24: aload_0
      25: getfield      #5                  // Field array:[F
      28: iload_1
      29: aload_0
      30: getfield      #6                  // Field size:I
      33: iload_2
      34: isub
      35: invokestatic  #11                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      38: aload_0
      39: dup
      40: getfield      #6                  // Field size:I
      43: iload_2
      44: iload_1
      45: isub
      46: isub
      47: putfield      #6                  // Field size:I
      50: aload_0
      51: dup
      52: getfield      #12                 // Field modCount:I
      55: iconst_1
      56: iadd
      57: putfield      #12                 // Field modCount:I
      60: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #13                 // class com/google/protobuf/FloatArrayList
      11: ifne          20
      14: aload_0
      15: aload_1
      16: invokespecial #14                 // Method com/google/protobuf/AbstractProtobufList.equals:(Ljava/lang/Object;)Z
      19: ireturn
      20: aload_1
      21: checkcast     #13                 // class com/google/protobuf/FloatArrayList
      24: astore_2
      25: aload_0
      26: getfield      #6                  // Field size:I
      29: aload_2
      30: getfield      #6                  // Field size:I
      33: if_icmpeq     38
      36: iconst_0
      37: ireturn
      38: aload_2
      39: getfield      #5                  // Field array:[F
      42: astore_3
      43: iconst_0
      44: istore        4
      46: iload         4
      48: aload_0
      49: getfield      #6                  // Field size:I
      52: if_icmpge     83
      55: aload_0
      56: getfield      #5                  // Field array:[F
      59: iload         4
      61: faload
      62: invokestatic  #15                 // Method java/lang/Float.floatToIntBits:(F)I
      65: aload_3
      66: iload         4
      68: faload
      69: invokestatic  #15                 // Method java/lang/Float.floatToIntBits:(F)I
      72: if_icmpeq     77
      75: iconst_0
      76: ireturn
      77: iinc          4, 1
      80: goto          46
      83: iconst_1
      84: ireturn

  public int hashCode();
    Code:
       0: iconst_1
       1: istore_1
       2: iconst_0
       3: istore_2
       4: iload_2
       5: aload_0
       6: getfield      #6                  // Field size:I
       9: if_icmpge     33
      12: bipush        31
      14: iload_1
      15: imul
      16: aload_0
      17: getfield      #5                  // Field array:[F
      20: iload_2
      21: faload
      22: invokestatic  #15                 // Method java/lang/Float.floatToIntBits:(F)I
      25: iadd
      26: istore_1
      27: iinc          2, 1
      30: goto          4
      33: iload_1
      34: ireturn

  public com.google.protobuf.Internal$FloatList mutableCopyWithCapacity(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #6                  // Field size:I
       5: if_icmpge     16
       8: new           #16                 // class java/lang/IllegalArgumentException
      11: dup
      12: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":()V
      15: athrow
      16: new           #13                 // class com/google/protobuf/FloatArrayList
      19: dup
      20: aload_0
      21: getfield      #5                  // Field array:[F
      24: iload_1
      25: invokestatic  #18                 // Method java/util/Arrays.copyOf:([FI)[F
      28: aload_0
      29: getfield      #6                  // Field size:I
      32: invokespecial #3                  // Method "<init>":([FI)V
      35: areturn

  public java.lang.Float get(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #19                 // Method getFloat:(I)F
       5: invokestatic  #20                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
       8: areturn

  public float getFloat(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #21                 // Method ensureIndexInRange:(I)V
       5: aload_0
       6: getfield      #5                  // Field array:[F
       9: iload_1
      10: faload
      11: freturn

  public int indexOf(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #22                 // class java/lang/Float
       4: ifne          9
       7: iconst_m1
       8: ireturn
       9: aload_1
      10: checkcast     #22                 // class java/lang/Float
      13: invokevirtual #23                 // Method java/lang/Float.floatValue:()F
      16: fstore_2
      17: aload_0
      18: invokevirtual #24                 // Method size:()I
      21: istore_3
      22: iconst_0
      23: istore        4
      25: iload         4
      27: iload_3
      28: if_icmpge     52
      31: aload_0
      32: getfield      #5                  // Field array:[F
      35: iload         4
      37: faload
      38: fload_2
      39: fcmpl
      40: ifne          46
      43: iload         4
      45: ireturn
      46: iinc          4, 1
      49: goto          25
      52: iconst_m1
      53: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method indexOf:(Ljava/lang/Object;)I
       5: iconst_m1
       6: if_icmpeq     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #6                  // Field size:I
       4: ireturn

  public java.lang.Float set(int, java.lang.Float);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #23                 // Method java/lang/Float.floatValue:()F
       6: invokevirtual #26                 // Method setFloat:(IF)F
       9: invokestatic  #20                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      12: areturn

  public float setFloat(int, float);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method ensureIsMutable:()V
       4: aload_0
       5: iload_1
       6: invokespecial #21                 // Method ensureIndexInRange:(I)V
       9: aload_0
      10: getfield      #5                  // Field array:[F
      13: iload_1
      14: faload
      15: fstore_3
      16: aload_0
      17: getfield      #5                  // Field array:[F
      20: iload_1
      21: fload_2
      22: fastore
      23: fload_3
      24: freturn

  public boolean add(java.lang.Float);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #23                 // Method java/lang/Float.floatValue:()F
       5: invokevirtual #27                 // Method addFloat:(F)V
       8: iconst_1
       9: ireturn

  public void add(int, java.lang.Float);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #23                 // Method java/lang/Float.floatValue:()F
       6: invokespecial #28                 // Method addFloat:(IF)V
       9: return

  public void addFloat(float);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method ensureIsMutable:()V
       4: aload_0
       5: getfield      #6                  // Field size:I
       8: aload_0
       9: getfield      #5                  // Field array:[F
      12: arraylength
      13: if_icmpne     50
      16: aload_0
      17: getfield      #6                  // Field size:I
      20: iconst_3
      21: imul
      22: iconst_2
      23: idiv
      24: iconst_1
      25: iadd
      26: istore_2
      27: iload_2
      28: newarray       float
      30: astore_3
      31: aload_0
      32: getfield      #5                  // Field array:[F
      35: iconst_0
      36: aload_3
      37: iconst_0
      38: aload_0
      39: getfield      #6                  // Field size:I
      42: invokestatic  #11                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      45: aload_0
      46: aload_3
      47: putfield      #5                  // Field array:[F
      50: aload_0
      51: getfield      #5                  // Field array:[F
      54: aload_0
      55: dup
      56: getfield      #6                  // Field size:I
      59: dup_x1
      60: iconst_1
      61: iadd
      62: putfield      #6                  // Field size:I
      65: fload_1
      66: fastore
      67: return

  private void addFloat(int, float);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method ensureIsMutable:()V
       4: iload_1
       5: iflt          16
       8: iload_1
       9: aload_0
      10: getfield      #6                  // Field size:I
      13: if_icmple     29
      16: new           #8                  // class java/lang/IndexOutOfBoundsException
      19: dup
      20: aload_0
      21: iload_1
      22: invokespecial #29                 // Method makeOutOfBoundsExceptionMessage:(I)Ljava/lang/String;
      25: invokespecial #10                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: getfield      #6                  // Field size:I
      33: aload_0
      34: getfield      #5                  // Field array:[F
      37: arraylength
      38: if_icmpge     65
      41: aload_0
      42: getfield      #5                  // Field array:[F
      45: iload_1
      46: aload_0
      47: getfield      #5                  // Field array:[F
      50: iload_1
      51: iconst_1
      52: iadd
      53: aload_0
      54: getfield      #6                  // Field size:I
      57: iload_1
      58: isub
      59: invokestatic  #11                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      62: goto          118
      65: aload_0
      66: getfield      #6                  // Field size:I
      69: iconst_3
      70: imul
      71: iconst_2
      72: idiv
      73: iconst_1
      74: iadd
      75: istore_3
      76: iload_3
      77: newarray       float
      79: astore        4
      81: aload_0
      82: getfield      #5                  // Field array:[F
      85: iconst_0
      86: aload         4
      88: iconst_0
      89: iload_1
      90: invokestatic  #11                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      93: aload_0
      94: getfield      #5                  // Field array:[F
      97: iload_1
      98: aload         4
     100: iload_1
     101: iconst_1
     102: iadd
     103: aload_0
     104: getfield      #6                  // Field size:I
     107: iload_1
     108: isub
     109: invokestatic  #11                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     112: aload_0
     113: aload         4
     115: putfield      #5                  // Field array:[F
     118: aload_0
     119: getfield      #5                  // Field array:[F
     122: iload_1
     123: fload_2
     124: fastore
     125: aload_0
     126: dup
     127: getfield      #6                  // Field size:I
     130: iconst_1
     131: iadd
     132: putfield      #6                  // Field size:I
     135: aload_0
     136: dup
     137: getfield      #12                 // Field modCount:I
     140: iconst_1
     141: iadd
     142: putfield      #12                 // Field modCount:I
     145: return

  public boolean addAll(java.util.Collection<? extends java.lang.Float>);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method ensureIsMutable:()V
       4: aload_1
       5: invokestatic  #30                 // Method com/google/protobuf/Internal.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       8: pop
       9: aload_1
      10: instanceof    #13                 // class com/google/protobuf/FloatArrayList
      13: ifne          22
      16: aload_0
      17: aload_1
      18: invokespecial #31                 // Method com/google/protobuf/AbstractProtobufList.addAll:(Ljava/util/Collection;)Z
      21: ireturn
      22: aload_1
      23: checkcast     #13                 // class com/google/protobuf/FloatArrayList
      26: astore_2
      27: aload_2
      28: getfield      #6                  // Field size:I
      31: ifne          36
      34: iconst_0
      35: ireturn
      36: ldc           #33                 // int 2147483647
      38: aload_0
      39: getfield      #6                  // Field size:I
      42: isub
      43: istore_3
      44: iload_3
      45: aload_2
      46: getfield      #6                  // Field size:I
      49: if_icmpge     60
      52: new           #34                 // class java/lang/OutOfMemoryError
      55: dup
      56: invokespecial #35                 // Method java/lang/OutOfMemoryError."<init>":()V
      59: athrow
      60: aload_0
      61: getfield      #6                  // Field size:I
      64: aload_2
      65: getfield      #6                  // Field size:I
      68: iadd
      69: istore        4
      71: iload         4
      73: aload_0
      74: getfield      #5                  // Field array:[F
      77: arraylength
      78: if_icmple     94
      81: aload_0
      82: aload_0
      83: getfield      #5                  // Field array:[F
      86: iload         4
      88: invokestatic  #18                 // Method java/util/Arrays.copyOf:([FI)[F
      91: putfield      #5                  // Field array:[F
      94: aload_2
      95: getfield      #5                  // Field array:[F
      98: iconst_0
      99: aload_0
     100: getfield      #5                  // Field array:[F
     103: aload_0
     104: getfield      #6                  // Field size:I
     107: aload_2
     108: getfield      #6                  // Field size:I
     111: invokestatic  #11                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     114: aload_0
     115: iload         4
     117: putfield      #6                  // Field size:I
     120: aload_0
     121: dup
     122: getfield      #12                 // Field modCount:I
     125: iconst_1
     126: iadd
     127: putfield      #12                 // Field modCount:I
     130: iconst_1
     131: ireturn

  public java.lang.Float remove(int);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method ensureIsMutable:()V
       4: aload_0
       5: iload_1
       6: invokespecial #21                 // Method ensureIndexInRange:(I)V
       9: aload_0
      10: getfield      #5                  // Field array:[F
      13: iload_1
      14: faload
      15: fstore_2
      16: iload_1
      17: aload_0
      18: getfield      #6                  // Field size:I
      21: iconst_1
      22: isub
      23: if_icmpge     49
      26: aload_0
      27: getfield      #5                  // Field array:[F
      30: iload_1
      31: iconst_1
      32: iadd
      33: aload_0
      34: getfield      #5                  // Field array:[F
      37: iload_1
      38: aload_0
      39: getfield      #6                  // Field size:I
      42: iload_1
      43: isub
      44: iconst_1
      45: isub
      46: invokestatic  #11                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      49: aload_0
      50: dup
      51: getfield      #6                  // Field size:I
      54: iconst_1
      55: isub
      56: putfield      #6                  // Field size:I
      59: aload_0
      60: dup
      61: getfield      #12                 // Field modCount:I
      64: iconst_1
      65: iadd
      66: putfield      #12                 // Field modCount:I
      69: fload_2
      70: invokestatic  #20                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      73: areturn

  private void ensureIndexInRange(int);
    Code:
       0: iload_1
       1: iflt          12
       4: iload_1
       5: aload_0
       6: getfield      #6                  // Field size:I
       9: if_icmplt     25
      12: new           #8                  // class java/lang/IndexOutOfBoundsException
      15: dup
      16: aload_0
      17: iload_1
      18: invokespecial #29                 // Method makeOutOfBoundsExceptionMessage:(I)Ljava/lang/String;
      21: invokespecial #10                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: return

  private java.lang.String makeOutOfBoundsExceptionMessage(int);
    Code:
       0: new           #36                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #38                 // String Index:
       9: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: iload_1
      13: invokevirtual #40                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      16: ldc           #41                 // String , Size:
      18: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: getfield      #6                  // Field size:I
      25: invokevirtual #40                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      28: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: areturn

  public java.lang.Object set(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: checkcast     #22                 // class java/lang/Float
       6: invokevirtual #43                 // Method set:(ILjava/lang/Float;)Ljava/lang/Float;
       9: areturn

  public java.lang.Object remove(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #44                 // Method remove:(I)Ljava/lang/Float;
       5: areturn

  public void add(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: checkcast     #22                 // class java/lang/Float
       6: invokevirtual #45                 // Method add:(ILjava/lang/Float;)V
       9: return

  public boolean add(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #22                 // class java/lang/Float
       5: invokevirtual #46                 // Method add:(Ljava/lang/Float;)Z
       8: ireturn

  public com.google.protobuf.Internal$ProtobufList mutableCopyWithCapacity(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #47                 // Method mutableCopyWithCapacity:(I)Lcom/google/protobuf/Internal$FloatList;
       5: areturn

  public java.lang.Object get(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #48                 // Method get:(I)Ljava/lang/Float;
       5: areturn

  static {};
    Code:
       0: new           #13                 // class com/google/protobuf/FloatArrayList
       3: dup
       4: iconst_0
       5: newarray       float
       7: iconst_0
       8: invokespecial #3                  // Method "<init>":([FI)V
      11: putstatic     #1                  // Field EMPTY_LIST:Lcom/google/protobuf/FloatArrayList;
      14: getstatic     #1                  // Field EMPTY_LIST:Lcom/google/protobuf/FloatArrayList;
      17: invokevirtual #49                 // Method makeImmutable:()V
      20: return
}
