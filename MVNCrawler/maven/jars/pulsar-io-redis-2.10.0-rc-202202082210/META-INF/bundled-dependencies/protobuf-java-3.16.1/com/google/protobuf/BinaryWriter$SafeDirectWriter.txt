Compiled from "BinaryWriter.java"
final class com.google.protobuf.BinaryWriter$SafeDirectWriter extends com.google.protobuf.BinaryWriter {
  private java.nio.ByteBuffer buffer;

  private int limitMinusOne;

  private int pos;

  com.google.protobuf.BinaryWriter$SafeDirectWriter(com.google.protobuf.BufferAllocator, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aconst_null
       4: invokespecial #2                  // Method com/google/protobuf/BinaryWriter."<init>":(Lcom/google/protobuf/BufferAllocator;ILcom/google/protobuf/BinaryWriter$1;)V
       7: aload_0
       8: invokespecial #3                  // Method nextBuffer:()V
      11: return

  private void nextBuffer();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #4                  // Method newDirectBuffer:()Lcom/google/protobuf/AllocatedBuffer;
       5: invokespecial #5                  // Method nextBuffer:(Lcom/google/protobuf/AllocatedBuffer;)V
       8: return

  private void nextBuffer(int);
    Code:
       0: aload_0
       1: aload_0
       2: iload_1
       3: invokevirtual #6                  // Method newDirectBuffer:(I)Lcom/google/protobuf/AllocatedBuffer;
       6: invokespecial #5                  // Method nextBuffer:(Lcom/google/protobuf/AllocatedBuffer;)V
       9: return

  private void nextBuffer(com.google.protobuf.AllocatedBuffer);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method com/google/protobuf/AllocatedBuffer.hasNioBuffer:()Z
       4: ifne          17
       7: new           #8                  // class java/lang/RuntimeException
      10: dup
      11: ldc           #9                  // String Allocated buffer does not have NIO buffer
      13: invokespecial #10                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: invokevirtual #11                 // Method com/google/protobuf/AllocatedBuffer.nioBuffer:()Ljava/nio/ByteBuffer;
      21: astore_2
      22: aload_2
      23: invokevirtual #12                 // Method java/nio/ByteBuffer.isDirect:()Z
      26: ifne          39
      29: new           #8                  // class java/lang/RuntimeException
      32: dup
      33: ldc           #13                 // String Allocator returned non-direct buffer
      35: invokespecial #10                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: invokevirtual #14                 // Method finishCurrentBuffer:()V
      43: aload_0
      44: getfield      #15                 // Field buffers:Ljava/util/ArrayDeque;
      47: aload_1
      48: invokevirtual #16                 // Method java/util/ArrayDeque.addFirst:(Ljava/lang/Object;)V
      51: aload_0
      52: aload_2
      53: putfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
      56: aload_0
      57: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
      60: aload_0
      61: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
      64: invokevirtual #18                 // Method java/nio/ByteBuffer.capacity:()I
      67: invokevirtual #19                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      70: pop
      71: aload_0
      72: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
      75: iconst_0
      76: invokevirtual #20                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      79: pop
      80: aload_0
      81: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
      84: getstatic     #21                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
      87: invokevirtual #22                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      90: pop
      91: aload_0
      92: aload_0
      93: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
      96: invokevirtual #23                 // Method java/nio/ByteBuffer.limit:()I
      99: iconst_1
     100: isub
     101: putfield      #24                 // Field limitMinusOne:I
     104: aload_0
     105: aload_0
     106: getfield      #24                 // Field limitMinusOne:I
     109: putfield      #25                 // Field pos:I
     112: return

  public int getTotalBytesWritten();
    Code:
       0: aload_0
       1: getfield      #26                 // Field totalDoneBytes:I
       4: aload_0
       5: invokespecial #27                 // Method bytesWrittenToCurrentBuffer:()I
       8: iadd
       9: ireturn

  private int bytesWrittenToCurrentBuffer();
    Code:
       0: aload_0
       1: getfield      #24                 // Field limitMinusOne:I
       4: aload_0
       5: getfield      #25                 // Field pos:I
       8: isub
       9: ireturn

  private int spaceLeft();
    Code:
       0: aload_0
       1: getfield      #25                 // Field pos:I
       4: iconst_1
       5: iadd
       6: ireturn

  void finishCurrentBuffer();
    Code:
       0: aload_0
       1: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
       4: ifnull        49
       7: aload_0
       8: dup
       9: getfield      #26                 // Field totalDoneBytes:I
      12: aload_0
      13: invokespecial #27                 // Method bytesWrittenToCurrentBuffer:()I
      16: iadd
      17: putfield      #26                 // Field totalDoneBytes:I
      20: aload_0
      21: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
      24: aload_0
      25: getfield      #25                 // Field pos:I
      28: iconst_1
      29: iadd
      30: invokevirtual #20                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      33: pop
      34: aload_0
      35: aconst_null
      36: putfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
      39: aload_0
      40: iconst_0
      41: putfield      #25                 // Field pos:I
      44: aload_0
      45: iconst_0
      46: putfield      #24                 // Field limitMinusOne:I
      49: return

  public void writeUInt32(int, int);
    Code:
       0: aload_0
       1: bipush        10
       3: invokevirtual #28                 // Method requireSpace:(I)V
       6: aload_0
       7: iload_2
       8: invokevirtual #29                 // Method writeVarint32:(I)V
      11: aload_0
      12: iload_1
      13: iconst_0
      14: invokevirtual #30                 // Method writeTag:(II)V
      17: return

  public void writeInt32(int, int);
    Code:
       0: aload_0
       1: bipush        15
       3: invokevirtual #28                 // Method requireSpace:(I)V
       6: aload_0
       7: iload_2
       8: invokevirtual #31                 // Method writeInt32:(I)V
      11: aload_0
      12: iload_1
      13: iconst_0
      14: invokevirtual #30                 // Method writeTag:(II)V
      17: return

  public void writeSInt32(int, int);
    Code:
       0: aload_0
       1: bipush        10
       3: invokevirtual #28                 // Method requireSpace:(I)V
       6: aload_0
       7: iload_2
       8: invokevirtual #32                 // Method writeSInt32:(I)V
      11: aload_0
      12: iload_1
      13: iconst_0
      14: invokevirtual #30                 // Method writeTag:(II)V
      17: return

  public void writeFixed32(int, int);
    Code:
       0: aload_0
       1: bipush        9
       3: invokevirtual #28                 // Method requireSpace:(I)V
       6: aload_0
       7: iload_2
       8: invokevirtual #33                 // Method writeFixed32:(I)V
      11: aload_0
      12: iload_1
      13: iconst_5
      14: invokevirtual #30                 // Method writeTag:(II)V
      17: return

  public void writeUInt64(int, long);
    Code:
       0: aload_0
       1: bipush        15
       3: invokevirtual #28                 // Method requireSpace:(I)V
       6: aload_0
       7: lload_2
       8: invokevirtual #34                 // Method writeVarint64:(J)V
      11: aload_0
      12: iload_1
      13: iconst_0
      14: invokevirtual #30                 // Method writeTag:(II)V
      17: return

  public void writeSInt64(int, long);
    Code:
       0: aload_0
       1: bipush        15
       3: invokevirtual #28                 // Method requireSpace:(I)V
       6: aload_0
       7: lload_2
       8: invokevirtual #35                 // Method writeSInt64:(J)V
      11: aload_0
      12: iload_1
      13: iconst_0
      14: invokevirtual #30                 // Method writeTag:(II)V
      17: return

  public void writeFixed64(int, long);
    Code:
       0: aload_0
       1: bipush        13
       3: invokevirtual #28                 // Method requireSpace:(I)V
       6: aload_0
       7: lload_2
       8: invokevirtual #36                 // Method writeFixed64:(J)V
      11: aload_0
      12: iload_1
      13: iconst_1
      14: invokevirtual #30                 // Method writeTag:(II)V
      17: return

  public void writeBool(int, boolean);
    Code:
       0: aload_0
       1: bipush        6
       3: invokevirtual #28                 // Method requireSpace:(I)V
       6: aload_0
       7: iload_2
       8: ifeq          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: i2b
      17: invokevirtual #37                 // Method write:(B)V
      20: aload_0
      21: iload_1
      22: iconst_0
      23: invokevirtual #30                 // Method writeTag:(II)V
      26: return

  public void writeString(int, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method getTotalBytesWritten:()I
       4: istore_3
       5: aload_0
       6: aload_2
       7: invokevirtual #39                 // Method writeString:(Ljava/lang/String;)V
      10: aload_0
      11: invokevirtual #38                 // Method getTotalBytesWritten:()I
      14: iload_3
      15: isub
      16: istore        4
      18: aload_0
      19: bipush        10
      21: invokevirtual #28                 // Method requireSpace:(I)V
      24: aload_0
      25: iload         4
      27: invokevirtual #29                 // Method writeVarint32:(I)V
      30: aload_0
      31: iload_1
      32: iconst_2
      33: invokevirtual #30                 // Method writeTag:(II)V
      36: return

  public void writeBytes(int, com.google.protobuf.ByteString);
    Code:
       0: aload_2
       1: aload_0
       2: invokevirtual #40                 // Method com/google/protobuf/ByteString.writeToReverse:(Lcom/google/protobuf/ByteOutput;)V
       5: goto          18
       8: astore_3
       9: new           #8                  // class java/lang/RuntimeException
      12: dup
      13: aload_3
      14: invokespecial #42                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      17: athrow
      18: aload_0
      19: bipush        10
      21: invokevirtual #28                 // Method requireSpace:(I)V
      24: aload_0
      25: aload_2
      26: invokevirtual #43                 // Method com/google/protobuf/ByteString.size:()I
      29: invokevirtual #29                 // Method writeVarint32:(I)V
      32: aload_0
      33: iload_1
      34: iconst_2
      35: invokevirtual #30                 // Method writeTag:(II)V
      38: return
    Exception table:
       from    to  target type
           0     5     8   Class java/io/IOException

  public void writeMessage(int, java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method getTotalBytesWritten:()I
       4: istore_3
       5: invokestatic  #44                 // Method com/google/protobuf/Protobuf.getInstance:()Lcom/google/protobuf/Protobuf;
       8: aload_2
       9: aload_0
      10: invokevirtual #45                 // Method com/google/protobuf/Protobuf.writeTo:(Ljava/lang/Object;Lcom/google/protobuf/Writer;)V
      13: aload_0
      14: invokevirtual #38                 // Method getTotalBytesWritten:()I
      17: iload_3
      18: isub
      19: istore        4
      21: aload_0
      22: bipush        10
      24: invokevirtual #28                 // Method requireSpace:(I)V
      27: aload_0
      28: iload         4
      30: invokevirtual #29                 // Method writeVarint32:(I)V
      33: aload_0
      34: iload_1
      35: iconst_2
      36: invokevirtual #30                 // Method writeTag:(II)V
      39: return

  public void writeMessage(int, java.lang.Object, com.google.protobuf.Schema) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method getTotalBytesWritten:()I
       4: istore        4
       6: aload_3
       7: aload_2
       8: aload_0
       9: invokeinterface #46,  3           // InterfaceMethod com/google/protobuf/Schema.writeTo:(Ljava/lang/Object;Lcom/google/protobuf/Writer;)V
      14: aload_0
      15: invokevirtual #38                 // Method getTotalBytesWritten:()I
      18: iload         4
      20: isub
      21: istore        5
      23: aload_0
      24: bipush        10
      26: invokevirtual #28                 // Method requireSpace:(I)V
      29: aload_0
      30: iload         5
      32: invokevirtual #29                 // Method writeVarint32:(I)V
      35: aload_0
      36: iload_1
      37: iconst_2
      38: invokevirtual #30                 // Method writeTag:(II)V
      41: return

  public void writeGroup(int, java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iconst_4
       3: invokevirtual #30                 // Method writeTag:(II)V
       6: invokestatic  #44                 // Method com/google/protobuf/Protobuf.getInstance:()Lcom/google/protobuf/Protobuf;
       9: aload_2
      10: aload_0
      11: invokevirtual #45                 // Method com/google/protobuf/Protobuf.writeTo:(Ljava/lang/Object;Lcom/google/protobuf/Writer;)V
      14: aload_0
      15: iload_1
      16: iconst_3
      17: invokevirtual #30                 // Method writeTag:(II)V
      20: return

  public void writeGroup(int, java.lang.Object, com.google.protobuf.Schema) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iconst_4
       3: invokevirtual #30                 // Method writeTag:(II)V
       6: aload_3
       7: aload_2
       8: aload_0
       9: invokeinterface #46,  3           // InterfaceMethod com/google/protobuf/Schema.writeTo:(Ljava/lang/Object;Lcom/google/protobuf/Writer;)V
      14: aload_0
      15: iload_1
      16: iconst_3
      17: invokevirtual #30                 // Method writeTag:(II)V
      20: return

  public void writeStartGroup(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_3
       3: invokevirtual #30                 // Method writeTag:(II)V
       6: return

  public void writeEndGroup(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_4
       3: invokevirtual #30                 // Method writeTag:(II)V
       6: return

  void writeInt32(int);
    Code:
       0: iload_1
       1: iflt          12
       4: aload_0
       5: iload_1
       6: invokevirtual #29                 // Method writeVarint32:(I)V
       9: goto          18
      12: aload_0
      13: iload_1
      14: i2l
      15: invokevirtual #34                 // Method writeVarint64:(J)V
      18: return

  void writeSInt32(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #47                 // Method com/google/protobuf/CodedOutputStream.encodeZigZag32:(I)I
       5: invokevirtual #29                 // Method writeVarint32:(I)V
       8: return

  void writeSInt64(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #48                 // Method com/google/protobuf/CodedOutputStream.encodeZigZag64:(J)J
       5: invokevirtual #34                 // Method writeVarint64:(J)V
       8: return

  void writeBool(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: ifeq          9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: i2b
      11: invokevirtual #37                 // Method write:(B)V
      14: return

  void writeTag(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #49                 // Method com/google/protobuf/WireFormat.makeTag:(II)I
       6: invokevirtual #29                 // Method writeVarint32:(I)V
       9: return

  void writeVarint32(int);
    Code:
       0: iload_1
       1: bipush        -128
       3: iand
       4: ifne          15
       7: aload_0
       8: iload_1
       9: invokespecial #50                 // Method writeVarint32OneByte:(I)V
      12: goto          66
      15: iload_1
      16: sipush        -16384
      19: iand
      20: ifne          31
      23: aload_0
      24: iload_1
      25: invokespecial #51                 // Method writeVarint32TwoBytes:(I)V
      28: goto          66
      31: iload_1
      32: ldc           #52                 // int -2097152
      34: iand
      35: ifne          46
      38: aload_0
      39: iload_1
      40: invokespecial #53                 // Method writeVarint32ThreeBytes:(I)V
      43: goto          66
      46: iload_1
      47: ldc           #54                 // int -268435456
      49: iand
      50: ifne          61
      53: aload_0
      54: iload_1
      55: invokespecial #55                 // Method writeVarint32FourBytes:(I)V
      58: goto          66
      61: aload_0
      62: iload_1
      63: invokespecial #56                 // Method writeVarint32FiveBytes:(I)V
      66: return

  private void writeVarint32OneByte(int);
    Code:
       0: aload_0
       1: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
       4: aload_0
       5: dup
       6: getfield      #25                 // Field pos:I
       9: dup_x1
      10: iconst_1
      11: isub
      12: putfield      #25                 // Field pos:I
      15: iload_1
      16: i2b
      17: invokevirtual #57                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
      20: pop
      21: return

  private void writeVarint32TwoBytes(int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #25                 // Field pos:I
       5: iconst_2
       6: isub
       7: putfield      #25                 // Field pos:I
      10: aload_0
      11: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
      14: aload_0
      15: getfield      #25                 // Field pos:I
      18: iconst_1
      19: iadd
      20: iload_1
      21: sipush        16256
      24: iand
      25: iconst_1
      26: ishl
      27: iload_1
      28: bipush        127
      30: iand
      31: sipush        128
      34: ior
      35: ior
      36: i2s
      37: invokevirtual #58                 // Method java/nio/ByteBuffer.putShort:(IS)Ljava/nio/ByteBuffer;
      40: pop
      41: return

  private void writeVarint32ThreeBytes(int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #25                 // Field pos:I
       5: iconst_3
       6: isub
       7: putfield      #25                 // Field pos:I
      10: aload_0
      11: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
      14: aload_0
      15: getfield      #25                 // Field pos:I
      18: iload_1
      19: ldc           #59                 // int 2080768
      21: iand
      22: bipush        10
      24: ishl
      25: iload_1
      26: sipush        16256
      29: iand
      30: sipush        16384
      33: ior
      34: bipush        9
      36: ishl
      37: ior
      38: iload_1
      39: bipush        127
      41: iand
      42: sipush        128
      45: ior
      46: bipush        8
      48: ishl
      49: ior
      50: invokevirtual #60                 // Method java/nio/ByteBuffer.putInt:(II)Ljava/nio/ByteBuffer;
      53: pop
      54: return

  private void writeVarint32FourBytes(int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #25                 // Field pos:I
       5: iconst_4
       6: isub
       7: putfield      #25                 // Field pos:I
      10: aload_0
      11: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
      14: aload_0
      15: getfield      #25                 // Field pos:I
      18: iconst_1
      19: iadd
      20: iload_1
      21: ldc           #61                 // int 266338304
      23: iand
      24: iconst_3
      25: ishl
      26: iload_1
      27: ldc           #59                 // int 2080768
      29: iand
      30: ldc           #62                 // int 2097152
      32: ior
      33: iconst_2
      34: ishl
      35: ior
      36: iload_1
      37: sipush        16256
      40: iand
      41: sipush        16384
      44: ior
      45: iconst_1
      46: ishl
      47: ior
      48: iload_1
      49: bipush        127
      51: iand
      52: sipush        128
      55: ior
      56: ior
      57: invokevirtual #60                 // Method java/nio/ByteBuffer.putInt:(II)Ljava/nio/ByteBuffer;
      60: pop
      61: return

  private void writeVarint32FiveBytes(int);
    Code:
       0: aload_0
       1: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
       4: aload_0
       5: dup
       6: getfield      #25                 // Field pos:I
       9: dup_x1
      10: iconst_1
      11: isub
      12: putfield      #25                 // Field pos:I
      15: iload_1
      16: bipush        28
      18: iushr
      19: i2b
      20: invokevirtual #57                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
      23: pop
      24: aload_0
      25: dup
      26: getfield      #25                 // Field pos:I
      29: iconst_4
      30: isub
      31: putfield      #25                 // Field pos:I
      34: aload_0
      35: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
      38: aload_0
      39: getfield      #25                 // Field pos:I
      42: iconst_1
      43: iadd
      44: iload_1
      45: bipush        21
      47: iushr
      48: bipush        127
      50: iand
      51: sipush        128
      54: ior
      55: bipush        24
      57: ishl
      58: iload_1
      59: bipush        14
      61: iushr
      62: bipush        127
      64: iand
      65: sipush        128
      68: ior
      69: bipush        16
      71: ishl
      72: ior
      73: iload_1
      74: bipush        7
      76: iushr
      77: bipush        127
      79: iand
      80: sipush        128
      83: ior
      84: bipush        8
      86: ishl
      87: ior
      88: iload_1
      89: bipush        127
      91: iand
      92: sipush        128
      95: ior
      96: ior
      97: invokevirtual #60                 // Method java/nio/ByteBuffer.putInt:(II)Ljava/nio/ByteBuffer;
     100: pop
     101: return

  void writeVarint64(long);
    Code:
       0: lload_1
       1: invokestatic  #63                 // Method com/google/protobuf/BinaryWriter.access$200:(J)B
       4: tableswitch   { // 1 to 10
                     1: 60
                     2: 68
                     3: 76
                     4: 84
                     5: 92
                     6: 100
                     7: 108
                     8: 116
                     9: 124
                    10: 132
               default: 137
          }
      60: aload_0
      61: lload_1
      62: invokespecial #64                 // Method writeVarint64OneByte:(J)V
      65: goto          137
      68: aload_0
      69: lload_1
      70: invokespecial #65                 // Method writeVarint64TwoBytes:(J)V
      73: goto          137
      76: aload_0
      77: lload_1
      78: invokespecial #66                 // Method writeVarint64ThreeBytes:(J)V
      81: goto          137
      84: aload_0
      85: lload_1
      86: invokespecial #67                 // Method writeVarint64FourBytes:(J)V
      89: goto          137
      92: aload_0
      93: lload_1
      94: invokespecial #68                 // Method writeVarint64FiveBytes:(J)V
      97: goto          137
     100: aload_0
     101: lload_1
     102: invokespecial #69                 // Method writeVarint64SixBytes:(J)V
     105: goto          137
     108: aload_0
     109: lload_1
     110: invokespecial #70                 // Method writeVarint64SevenBytes:(J)V
     113: goto          137
     116: aload_0
     117: lload_1
     118: invokespecial #71                 // Method writeVarint64EightBytes:(J)V
     121: goto          137
     124: aload_0
     125: lload_1
     126: invokespecial #72                 // Method writeVarint64NineBytes:(J)V
     129: goto          137
     132: aload_0
     133: lload_1
     134: invokespecial #73                 // Method writeVarint64TenBytes:(J)V
     137: return

  private void writeVarint64OneByte(long);
    Code:
       0: aload_0
       1: lload_1
       2: l2i
       3: invokespecial #50                 // Method writeVarint32OneByte:(I)V
       6: return

  private void writeVarint64TwoBytes(long);
    Code:
       0: aload_0
       1: lload_1
       2: l2i
       3: invokespecial #51                 // Method writeVarint32TwoBytes:(I)V
       6: return

  private void writeVarint64ThreeBytes(long);
    Code:
       0: aload_0
       1: lload_1
       2: l2i
       3: invokespecial #53                 // Method writeVarint32ThreeBytes:(I)V
       6: return

  private void writeVarint64FourBytes(long);
    Code:
       0: aload_0
       1: lload_1
       2: l2i
       3: invokespecial #55                 // Method writeVarint32FourBytes:(I)V
       6: return

  private void writeVarint64FiveBytes(long);
    Code:
       0: aload_0
       1: dup
       2: getfield      #25                 // Field pos:I
       5: iconst_5
       6: isub
       7: putfield      #25                 // Field pos:I
      10: aload_0
      11: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
      14: aload_0
      15: getfield      #25                 // Field pos:I
      18: iconst_2
      19: isub
      20: lload_1
      21: ldc2_w        #74                 // long 34091302912l
      24: land
      25: bipush        28
      27: lshl
      28: lload_1
      29: ldc2_w        #76                 // long 266338304l
      32: land
      33: ldc2_w        #78                 // long 268435456l
      36: lor
      37: bipush        27
      39: lshl
      40: lor
      41: lload_1
      42: ldc2_w        #80                 // long 2080768l
      45: land
      46: ldc2_w        #82                 // long 2097152l
      49: lor
      50: bipush        26
      52: lshl
      53: lor
      54: lload_1
      55: ldc2_w        #84                 // long 16256l
      58: land
      59: ldc2_w        #86                 // long 16384l
      62: lor
      63: bipush        25
      65: lshl
      66: lor
      67: lload_1
      68: ldc2_w        #88                 // long 127l
      71: land
      72: ldc2_w        #90                 // long 128l
      75: lor
      76: bipush        24
      78: lshl
      79: lor
      80: invokevirtual #92                 // Method java/nio/ByteBuffer.putLong:(IJ)Ljava/nio/ByteBuffer;
      83: pop
      84: return

  private void writeVarint64SixBytes(long);
    Code:
       0: aload_0
       1: dup
       2: getfield      #25                 // Field pos:I
       5: bipush        6
       7: isub
       8: putfield      #25                 // Field pos:I
      11: aload_0
      12: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
      15: aload_0
      16: getfield      #25                 // Field pos:I
      19: iconst_1
      20: isub
      21: lload_1
      22: ldc2_w        #93                 // long 4363686772736l
      25: land
      26: bipush        21
      28: lshl
      29: lload_1
      30: ldc2_w        #74                 // long 34091302912l
      33: land
      34: ldc2_w        #95                 // long 34359738368l
      37: lor
      38: bipush        20
      40: lshl
      41: lor
      42: lload_1
      43: ldc2_w        #76                 // long 266338304l
      46: land
      47: ldc2_w        #78                 // long 268435456l
      50: lor
      51: bipush        19
      53: lshl
      54: lor
      55: lload_1
      56: ldc2_w        #80                 // long 2080768l
      59: land
      60: ldc2_w        #82                 // long 2097152l
      63: lor
      64: bipush        18
      66: lshl
      67: lor
      68: lload_1
      69: ldc2_w        #84                 // long 16256l
      72: land
      73: ldc2_w        #86                 // long 16384l
      76: lor
      77: bipush        17
      79: lshl
      80: lor
      81: lload_1
      82: ldc2_w        #88                 // long 127l
      85: land
      86: ldc2_w        #90                 // long 128l
      89: lor
      90: bipush        16
      92: lshl
      93: lor
      94: invokevirtual #92                 // Method java/nio/ByteBuffer.putLong:(IJ)Ljava/nio/ByteBuffer;
      97: pop
      98: return

  private void writeVarint64SevenBytes(long);
    Code:
       0: aload_0
       1: dup
       2: getfield      #25                 // Field pos:I
       5: bipush        7
       7: isub
       8: putfield      #25                 // Field pos:I
      11: aload_0
      12: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
      15: aload_0
      16: getfield      #25                 // Field pos:I
      19: lload_1
      20: ldc2_w        #97                 // long 558551906910208l
      23: land
      24: bipush        14
      26: lshl
      27: lload_1
      28: ldc2_w        #93                 // long 4363686772736l
      31: land
      32: ldc2_w        #99                 // long 4398046511104l
      35: lor
      36: bipush        13
      38: lshl
      39: lor
      40: lload_1
      41: ldc2_w        #74                 // long 34091302912l
      44: land
      45: ldc2_w        #95                 // long 34359738368l
      48: lor
      49: bipush        12
      51: lshl
      52: lor
      53: lload_1
      54: ldc2_w        #76                 // long 266338304l
      57: land
      58: ldc2_w        #78                 // long 268435456l
      61: lor
      62: bipush        11
      64: lshl
      65: lor
      66: lload_1
      67: ldc2_w        #80                 // long 2080768l
      70: land
      71: ldc2_w        #82                 // long 2097152l
      74: lor
      75: bipush        10
      77: lshl
      78: lor
      79: lload_1
      80: ldc2_w        #84                 // long 16256l
      83: land
      84: ldc2_w        #86                 // long 16384l
      87: lor
      88: bipush        9
      90: lshl
      91: lor
      92: lload_1
      93: ldc2_w        #88                 // long 127l
      96: land
      97: ldc2_w        #90                 // long 128l
     100: lor
     101: bipush        8
     103: lshl
     104: lor
     105: invokevirtual #92                 // Method java/nio/ByteBuffer.putLong:(IJ)Ljava/nio/ByteBuffer;
     108: pop
     109: return

  private void writeVarint64EightBytes(long);
    Code:
       0: aload_0
       1: dup
       2: getfield      #25                 // Field pos:I
       5: bipush        8
       7: isub
       8: putfield      #25                 // Field pos:I
      11: aload_0
      12: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
      15: aload_0
      16: getfield      #25                 // Field pos:I
      19: iconst_1
      20: iadd
      21: lload_1
      22: ldc2_w        #101                // long 71494644084506624l
      25: land
      26: bipush        7
      28: lshl
      29: lload_1
      30: ldc2_w        #97                 // long 558551906910208l
      33: land
      34: ldc2_w        #103                // long 562949953421312l
      37: lor
      38: bipush        6
      40: lshl
      41: lor
      42: lload_1
      43: ldc2_w        #93                 // long 4363686772736l
      46: land
      47: ldc2_w        #99                 // long 4398046511104l
      50: lor
      51: iconst_5
      52: lshl
      53: lor
      54: lload_1
      55: ldc2_w        #74                 // long 34091302912l
      58: land
      59: ldc2_w        #95                 // long 34359738368l
      62: lor
      63: iconst_4
      64: lshl
      65: lor
      66: lload_1
      67: ldc2_w        #76                 // long 266338304l
      70: land
      71: ldc2_w        #78                 // long 268435456l
      74: lor
      75: iconst_3
      76: lshl
      77: lor
      78: lload_1
      79: ldc2_w        #80                 // long 2080768l
      82: land
      83: ldc2_w        #82                 // long 2097152l
      86: lor
      87: iconst_2
      88: lshl
      89: lor
      90: lload_1
      91: ldc2_w        #84                 // long 16256l
      94: land
      95: ldc2_w        #86                 // long 16384l
      98: lor
      99: iconst_1
     100: lshl
     101: lor
     102: lload_1
     103: ldc2_w        #88                 // long 127l
     106: land
     107: ldc2_w        #90                 // long 128l
     110: lor
     111: lor
     112: invokevirtual #92                 // Method java/nio/ByteBuffer.putLong:(IJ)Ljava/nio/ByteBuffer;
     115: pop
     116: return

  private void writeVarint64EightBytesWithSign(long);
    Code:
       0: aload_0
       1: dup
       2: getfield      #25                 // Field pos:I
       5: bipush        8
       7: isub
       8: putfield      #25                 // Field pos:I
      11: aload_0
      12: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
      15: aload_0
      16: getfield      #25                 // Field pos:I
      19: iconst_1
      20: iadd
      21: lload_1
      22: ldc2_w        #101                // long 71494644084506624l
      25: land
      26: ldc2_w        #105                // long 72057594037927936l
      29: lor
      30: bipush        7
      32: lshl
      33: lload_1
      34: ldc2_w        #97                 // long 558551906910208l
      37: land
      38: ldc2_w        #103                // long 562949953421312l
      41: lor
      42: bipush        6
      44: lshl
      45: lor
      46: lload_1
      47: ldc2_w        #93                 // long 4363686772736l
      50: land
      51: ldc2_w        #99                 // long 4398046511104l
      54: lor
      55: iconst_5
      56: lshl
      57: lor
      58: lload_1
      59: ldc2_w        #74                 // long 34091302912l
      62: land
      63: ldc2_w        #95                 // long 34359738368l
      66: lor
      67: iconst_4
      68: lshl
      69: lor
      70: lload_1
      71: ldc2_w        #76                 // long 266338304l
      74: land
      75: ldc2_w        #78                 // long 268435456l
      78: lor
      79: iconst_3
      80: lshl
      81: lor
      82: lload_1
      83: ldc2_w        #80                 // long 2080768l
      86: land
      87: ldc2_w        #82                 // long 2097152l
      90: lor
      91: iconst_2
      92: lshl
      93: lor
      94: lload_1
      95: ldc2_w        #84                 // long 16256l
      98: land
      99: ldc2_w        #86                 // long 16384l
     102: lor
     103: iconst_1
     104: lshl
     105: lor
     106: lload_1
     107: ldc2_w        #88                 // long 127l
     110: land
     111: ldc2_w        #90                 // long 128l
     114: lor
     115: lor
     116: invokevirtual #92                 // Method java/nio/ByteBuffer.putLong:(IJ)Ljava/nio/ByteBuffer;
     119: pop
     120: return

  private void writeVarint64NineBytes(long);
    Code:
       0: aload_0
       1: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
       4: aload_0
       5: dup
       6: getfield      #25                 // Field pos:I
       9: dup_x1
      10: iconst_1
      11: isub
      12: putfield      #25                 // Field pos:I
      15: lload_1
      16: bipush        56
      18: lushr
      19: l2i
      20: i2b
      21: invokevirtual #57                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
      24: pop
      25: aload_0
      26: lload_1
      27: ldc2_w        #107                // long 72057594037927935l
      30: land
      31: invokespecial #109                // Method writeVarint64EightBytesWithSign:(J)V
      34: return

  private void writeVarint64TenBytes(long);
    Code:
       0: aload_0
       1: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
       4: aload_0
       5: dup
       6: getfield      #25                 // Field pos:I
       9: dup_x1
      10: iconst_1
      11: isub
      12: putfield      #25                 // Field pos:I
      15: lload_1
      16: bipush        63
      18: lushr
      19: l2i
      20: i2b
      21: invokevirtual #57                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
      24: pop
      25: aload_0
      26: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
      29: aload_0
      30: dup
      31: getfield      #25                 // Field pos:I
      34: dup_x1
      35: iconst_1
      36: isub
      37: putfield      #25                 // Field pos:I
      40: lload_1
      41: bipush        56
      43: lushr
      44: ldc2_w        #88                 // long 127l
      47: land
      48: ldc2_w        #90                 // long 128l
      51: lor
      52: l2i
      53: i2b
      54: invokevirtual #57                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
      57: pop
      58: aload_0
      59: lload_1
      60: ldc2_w        #107                // long 72057594037927935l
      63: land
      64: invokespecial #109                // Method writeVarint64EightBytesWithSign:(J)V
      67: return

  void writeFixed32(int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #25                 // Field pos:I
       5: iconst_4
       6: isub
       7: putfield      #25                 // Field pos:I
      10: aload_0
      11: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
      14: aload_0
      15: getfield      #25                 // Field pos:I
      18: iconst_1
      19: iadd
      20: iload_1
      21: invokevirtual #60                 // Method java/nio/ByteBuffer.putInt:(II)Ljava/nio/ByteBuffer;
      24: pop
      25: return

  void writeFixed64(long);
    Code:
       0: aload_0
       1: dup
       2: getfield      #25                 // Field pos:I
       5: bipush        8
       7: isub
       8: putfield      #25                 // Field pos:I
      11: aload_0
      12: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
      15: aload_0
      16: getfield      #25                 // Field pos:I
      19: iconst_1
      20: iadd
      21: lload_1
      22: invokevirtual #92                 // Method java/nio/ByteBuffer.putLong:(IJ)Ljava/nio/ByteBuffer;
      25: pop
      26: return

  void writeString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #110                // Method java/lang/String.length:()I
       5: invokevirtual #28                 // Method requireSpace:(I)V
       8: aload_1
       9: invokevirtual #110                // Method java/lang/String.length:()I
      12: iconst_1
      13: isub
      14: istore_2
      15: aload_0
      16: dup
      17: getfield      #25                 // Field pos:I
      20: iload_2
      21: isub
      22: putfield      #25                 // Field pos:I
      25: iload_2
      26: iflt          64
      29: aload_1
      30: iload_2
      31: invokevirtual #111                // Method java/lang/String.charAt:(I)C
      34: dup
      35: istore_3
      36: sipush        128
      39: if_icmpge     64
      42: aload_0
      43: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
      46: aload_0
      47: getfield      #25                 // Field pos:I
      50: iload_2
      51: iadd
      52: iload_3
      53: i2b
      54: invokevirtual #57                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
      57: pop
      58: iinc          2, -1
      61: goto          25
      64: iload_2
      65: iconst_m1
      66: if_icmpne     80
      69: aload_0
      70: dup
      71: getfield      #25                 // Field pos:I
      74: iconst_1
      75: isub
      76: putfield      #25                 // Field pos:I
      79: return
      80: aload_0
      81: dup
      82: getfield      #25                 // Field pos:I
      85: iload_2
      86: iadd
      87: putfield      #25                 // Field pos:I
      90: iload_2
      91: iflt          515
      94: aload_1
      95: iload_2
      96: invokevirtual #111                // Method java/lang/String.charAt:(I)C
      99: istore_3
     100: iload_3
     101: sipush        128
     104: if_icmpge     138
     107: aload_0
     108: getfield      #25                 // Field pos:I
     111: iflt          138
     114: aload_0
     115: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
     118: aload_0
     119: dup
     120: getfield      #25                 // Field pos:I
     123: dup_x1
     124: iconst_1
     125: isub
     126: putfield      #25                 // Field pos:I
     129: iload_3
     130: i2b
     131: invokevirtual #57                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     134: pop
     135: goto          509
     138: iload_3
     139: sipush        2048
     142: if_icmpge     211
     145: aload_0
     146: getfield      #25                 // Field pos:I
     149: ifle          211
     152: aload_0
     153: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
     156: aload_0
     157: dup
     158: getfield      #25                 // Field pos:I
     161: dup_x1
     162: iconst_1
     163: isub
     164: putfield      #25                 // Field pos:I
     167: sipush        128
     170: bipush        63
     172: iload_3
     173: iand
     174: ior
     175: i2b
     176: invokevirtual #57                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     179: pop
     180: aload_0
     181: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
     184: aload_0
     185: dup
     186: getfield      #25                 // Field pos:I
     189: dup_x1
     190: iconst_1
     191: isub
     192: putfield      #25                 // Field pos:I
     195: sipush        960
     198: iload_3
     199: bipush        6
     201: iushr
     202: ior
     203: i2b
     204: invokevirtual #57                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     207: pop
     208: goto          509
     211: iload_3
     212: ldc           #113                // int 55296
     214: if_icmplt     223
     217: ldc           #114                // int 57343
     219: iload_3
     220: if_icmpge     321
     223: aload_0
     224: getfield      #25                 // Field pos:I
     227: iconst_1
     228: if_icmple     321
     231: aload_0
     232: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
     235: aload_0
     236: dup
     237: getfield      #25                 // Field pos:I
     240: dup_x1
     241: iconst_1
     242: isub
     243: putfield      #25                 // Field pos:I
     246: sipush        128
     249: bipush        63
     251: iload_3
     252: iand
     253: ior
     254: i2b
     255: invokevirtual #57                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     258: pop
     259: aload_0
     260: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
     263: aload_0
     264: dup
     265: getfield      #25                 // Field pos:I
     268: dup_x1
     269: iconst_1
     270: isub
     271: putfield      #25                 // Field pos:I
     274: sipush        128
     277: bipush        63
     279: iload_3
     280: bipush        6
     282: iushr
     283: iand
     284: ior
     285: i2b
     286: invokevirtual #57                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     289: pop
     290: aload_0
     291: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
     294: aload_0
     295: dup
     296: getfield      #25                 // Field pos:I
     299: dup_x1
     300: iconst_1
     301: isub
     302: putfield      #25                 // Field pos:I
     305: sipush        480
     308: iload_3
     309: bipush        12
     311: iushr
     312: ior
     313: i2b
     314: invokevirtual #57                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     317: pop
     318: goto          509
     321: aload_0
     322: getfield      #25                 // Field pos:I
     325: iconst_2
     326: if_icmple     501
     329: iconst_0
     330: istore        4
     332: iload_2
     333: ifeq          353
     336: aload_1
     337: iload_2
     338: iconst_1
     339: isub
     340: invokevirtual #111                // Method java/lang/String.charAt:(I)C
     343: dup
     344: istore        4
     346: iload_3
     347: invokestatic  #115                // Method java/lang/Character.isSurrogatePair:(CC)Z
     350: ifne          365
     353: new           #116                // class com/google/protobuf/Utf8$UnpairedSurrogateException
     356: dup
     357: iload_2
     358: iconst_1
     359: isub
     360: iload_2
     361: invokespecial #117                // Method com/google/protobuf/Utf8$UnpairedSurrogateException."<init>":(II)V
     364: athrow
     365: iinc          2, -1
     368: iload         4
     370: iload_3
     371: invokestatic  #118                // Method java/lang/Character.toCodePoint:(CC)I
     374: istore        5
     376: aload_0
     377: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
     380: aload_0
     381: dup
     382: getfield      #25                 // Field pos:I
     385: dup_x1
     386: iconst_1
     387: isub
     388: putfield      #25                 // Field pos:I
     391: sipush        128
     394: bipush        63
     396: iload         5
     398: iand
     399: ior
     400: i2b
     401: invokevirtual #57                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     404: pop
     405: aload_0
     406: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
     409: aload_0
     410: dup
     411: getfield      #25                 // Field pos:I
     414: dup_x1
     415: iconst_1
     416: isub
     417: putfield      #25                 // Field pos:I
     420: sipush        128
     423: bipush        63
     425: iload         5
     427: bipush        6
     429: iushr
     430: iand
     431: ior
     432: i2b
     433: invokevirtual #57                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     436: pop
     437: aload_0
     438: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
     441: aload_0
     442: dup
     443: getfield      #25                 // Field pos:I
     446: dup_x1
     447: iconst_1
     448: isub
     449: putfield      #25                 // Field pos:I
     452: sipush        128
     455: bipush        63
     457: iload         5
     459: bipush        12
     461: iushr
     462: iand
     463: ior
     464: i2b
     465: invokevirtual #57                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     468: pop
     469: aload_0
     470: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
     473: aload_0
     474: dup
     475: getfield      #25                 // Field pos:I
     478: dup_x1
     479: iconst_1
     480: isub
     481: putfield      #25                 // Field pos:I
     484: sipush        240
     487: iload         5
     489: bipush        18
     491: iushr
     492: ior
     493: i2b
     494: invokevirtual #57                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     497: pop
     498: goto          509
     501: aload_0
     502: iload_2
     503: invokevirtual #28                 // Method requireSpace:(I)V
     506: iinc          2, 1
     509: iinc          2, -1
     512: goto          90
     515: return

  public void write(byte);
    Code:
       0: aload_0
       1: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
       4: aload_0
       5: dup
       6: getfield      #25                 // Field pos:I
       9: dup_x1
      10: iconst_1
      11: isub
      12: putfield      #25                 // Field pos:I
      15: iload_1
      16: invokevirtual #57                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
      19: pop
      20: return

  public void write(byte[], int, int);
    Code:
       0: aload_0
       1: invokespecial #119                // Method spaceLeft:()I
       4: iload_3
       5: if_icmpge     13
       8: aload_0
       9: iload_3
      10: invokespecial #120                // Method nextBuffer:(I)V
      13: aload_0
      14: dup
      15: getfield      #25                 // Field pos:I
      18: iload_3
      19: isub
      20: putfield      #25                 // Field pos:I
      23: aload_0
      24: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
      27: aload_0
      28: getfield      #25                 // Field pos:I
      31: iconst_1
      32: iadd
      33: invokevirtual #20                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      36: pop
      37: aload_0
      38: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
      41: aload_1
      42: iload_2
      43: iload_3
      44: invokevirtual #121                // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      47: pop
      48: return

  public void writeLazy(byte[], int, int);
    Code:
       0: aload_0
       1: invokespecial #119                // Method spaceLeft:()I
       4: iload_3
       5: if_icmpge     36
       8: aload_0
       9: dup
      10: getfield      #26                 // Field totalDoneBytes:I
      13: iload_3
      14: iadd
      15: putfield      #26                 // Field totalDoneBytes:I
      18: aload_0
      19: getfield      #15                 // Field buffers:Ljava/util/ArrayDeque;
      22: aload_1
      23: iload_2
      24: iload_3
      25: invokestatic  #122                // Method com/google/protobuf/AllocatedBuffer.wrap:([BII)Lcom/google/protobuf/AllocatedBuffer;
      28: invokevirtual #16                 // Method java/util/ArrayDeque.addFirst:(Ljava/lang/Object;)V
      31: aload_0
      32: invokespecial #3                  // Method nextBuffer:()V
      35: return
      36: aload_0
      37: dup
      38: getfield      #25                 // Field pos:I
      41: iload_3
      42: isub
      43: putfield      #25                 // Field pos:I
      46: aload_0
      47: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
      50: aload_0
      51: getfield      #25                 // Field pos:I
      54: iconst_1
      55: iadd
      56: invokevirtual #20                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      59: pop
      60: aload_0
      61: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
      64: aload_1
      65: iload_2
      66: iload_3
      67: invokevirtual #121                // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      70: pop
      71: return

  public void write(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokevirtual #123                // Method java/nio/ByteBuffer.remaining:()I
       4: istore_2
       5: aload_0
       6: invokespecial #119                // Method spaceLeft:()I
       9: iload_2
      10: if_icmpge     18
      13: aload_0
      14: iload_2
      15: invokespecial #120                // Method nextBuffer:(I)V
      18: aload_0
      19: dup
      20: getfield      #25                 // Field pos:I
      23: iload_2
      24: isub
      25: putfield      #25                 // Field pos:I
      28: aload_0
      29: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
      32: aload_0
      33: getfield      #25                 // Field pos:I
      36: iconst_1
      37: iadd
      38: invokevirtual #20                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      41: pop
      42: aload_0
      43: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
      46: aload_1
      47: invokevirtual #124                // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      50: pop
      51: return

  public void writeLazy(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokevirtual #123                // Method java/nio/ByteBuffer.remaining:()I
       4: istore_2
       5: aload_0
       6: invokespecial #119                // Method spaceLeft:()I
       9: iload_2
      10: if_icmpge     39
      13: aload_0
      14: dup
      15: getfield      #26                 // Field totalDoneBytes:I
      18: iload_2
      19: iadd
      20: putfield      #26                 // Field totalDoneBytes:I
      23: aload_0
      24: getfield      #15                 // Field buffers:Ljava/util/ArrayDeque;
      27: aload_1
      28: invokestatic  #125                // Method com/google/protobuf/AllocatedBuffer.wrap:(Ljava/nio/ByteBuffer;)Lcom/google/protobuf/AllocatedBuffer;
      31: invokevirtual #16                 // Method java/util/ArrayDeque.addFirst:(Ljava/lang/Object;)V
      34: aload_0
      35: invokespecial #3                  // Method nextBuffer:()V
      38: return
      39: aload_0
      40: dup
      41: getfield      #25                 // Field pos:I
      44: iload_2
      45: isub
      46: putfield      #25                 // Field pos:I
      49: aload_0
      50: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
      53: aload_0
      54: getfield      #25                 // Field pos:I
      57: iconst_1
      58: iadd
      59: invokevirtual #20                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      62: pop
      63: aload_0
      64: getfield      #17                 // Field buffer:Ljava/nio/ByteBuffer;
      67: aload_1
      68: invokevirtual #124                // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      71: pop
      72: return

  void requireSpace(int);
    Code:
       0: aload_0
       1: invokespecial #119                // Method spaceLeft:()I
       4: iload_1
       5: if_icmpge     13
       8: aload_0
       9: iload_1
      10: invokespecial #120                // Method nextBuffer:(I)V
      13: return
}
