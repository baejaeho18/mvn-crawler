Compiled from "Utf8.java"
final class com.google.protobuf.Utf8 {
  private static final com.google.protobuf.Utf8$Processor processor;

  private static final long ASCII_MASK_LONG;

  static final int MAX_BYTES_PER_CHAR;

  public static final int COMPLETE;

  public static final int MALFORMED;

  private static final int UNSAFE_COUNT_ASCII_THRESHOLD;

  public static boolean isValidUtf8(byte[]);
    Code:
       0: getstatic     #8                  // Field processor:Lcom/google/protobuf/Utf8$Processor;
       3: aload_0
       4: iconst_0
       5: aload_0
       6: arraylength
       7: invokevirtual #9                  // Method com/google/protobuf/Utf8$Processor.isValidUtf8:([BII)Z
      10: ireturn

  public static boolean isValidUtf8(byte[], int, int);
    Code:
       0: getstatic     #8                  // Field processor:Lcom/google/protobuf/Utf8$Processor;
       3: aload_0
       4: iload_1
       5: iload_2
       6: invokevirtual #9                  // Method com/google/protobuf/Utf8$Processor.isValidUtf8:([BII)Z
       9: ireturn

  public static int partialIsValidUtf8(int, byte[], int, int);
    Code:
       0: getstatic     #8                  // Field processor:Lcom/google/protobuf/Utf8$Processor;
       3: iload_0
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #10                 // Method com/google/protobuf/Utf8$Processor.partialIsValidUtf8:(I[BII)I
      10: ireturn

  private static int incompleteStateFor(int);
    Code:
       0: iload_0
       1: bipush        -12
       3: if_icmple     10
       6: iconst_m1
       7: goto          11
      10: iload_0
      11: ireturn

  private static int incompleteStateFor(int, int);
    Code:
       0: iload_0
       1: bipush        -12
       3: if_icmpgt     12
       6: iload_1
       7: bipush        -65
       9: if_icmple     16
      12: iconst_m1
      13: goto          22
      16: iload_0
      17: iload_1
      18: bipush        8
      20: ishl
      21: ixor
      22: ireturn

  private static int incompleteStateFor(int, int, int);
    Code:
       0: iload_0
       1: bipush        -12
       3: if_icmpgt     18
       6: iload_1
       7: bipush        -65
       9: if_icmpgt     18
      12: iload_2
      13: bipush        -65
      15: if_icmple     22
      18: iconst_m1
      19: goto          33
      22: iload_0
      23: iload_1
      24: bipush        8
      26: ishl
      27: ixor
      28: iload_2
      29: bipush        16
      31: ishl
      32: ixor
      33: ireturn

  private static int incompleteStateFor(byte[], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_1
       3: isub
       4: baload
       5: istore_3
       6: iload_2
       7: iload_1
       8: isub
       9: tableswitch   { // 0 to 2
                     0: 36
                     1: 41
                     2: 49
               default: 62
          }
      36: iload_3
      37: invokestatic  #2                  // Method incompleteStateFor:(I)I
      40: ireturn
      41: iload_3
      42: aload_0
      43: iload_1
      44: baload
      45: invokestatic  #7                  // Method incompleteStateFor:(II)I
      48: ireturn
      49: iload_3
      50: aload_0
      51: iload_1
      52: baload
      53: aload_0
      54: iload_1
      55: iconst_1
      56: iadd
      57: baload
      58: invokestatic  #6                  // Method incompleteStateFor:(III)I
      61: ireturn
      62: new           #12                 // class java/lang/AssertionError
      65: dup
      66: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      69: athrow

  private static int incompleteStateFor(java.nio.ByteBuffer, int, int, int);
    Code:
       0: iload_3
       1: tableswitch   { // 0 to 2
                     0: 28
                     1: 33
                     2: 43
               default: 60
          }
      28: iload_1
      29: invokestatic  #2                  // Method incompleteStateFor:(I)I
      32: ireturn
      33: iload_1
      34: aload_0
      35: iload_2
      36: invokevirtual #14                 // Method java/nio/ByteBuffer.get:(I)B
      39: invokestatic  #7                  // Method incompleteStateFor:(II)I
      42: ireturn
      43: iload_1
      44: aload_0
      45: iload_2
      46: invokevirtual #14                 // Method java/nio/ByteBuffer.get:(I)B
      49: aload_0
      50: iload_2
      51: iconst_1
      52: iadd
      53: invokevirtual #14                 // Method java/nio/ByteBuffer.get:(I)B
      56: invokestatic  #6                  // Method incompleteStateFor:(III)I
      59: ireturn
      60: new           #12                 // class java/lang/AssertionError
      63: dup
      64: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      67: athrow

  static int encodedLength(java.lang.CharSequence);
    Code:
       0: aload_0
       1: invokeinterface #15,  1           // InterfaceMethod java/lang/CharSequence.length:()I
       6: istore_1
       7: iload_1
       8: istore_2
       9: iconst_0
      10: istore_3
      11: iload_3
      12: iload_1
      13: if_icmpge     35
      16: aload_0
      17: iload_3
      18: invokeinterface #16,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      23: sipush        128
      26: if_icmpge     35
      29: iinc          3, 1
      32: goto          11
      35: iload_3
      36: iload_1
      37: if_icmpge     88
      40: aload_0
      41: iload_3
      42: invokeinterface #16,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      47: istore        4
      49: iload         4
      51: sipush        2048
      54: if_icmpge     71
      57: iload_2
      58: bipush        127
      60: iload         4
      62: isub
      63: bipush        31
      65: iushr
      66: iadd
      67: istore_2
      68: goto          82
      71: iload_2
      72: aload_0
      73: iload_3
      74: invokestatic  #17                 // Method encodedLengthGeneral:(Ljava/lang/CharSequence;I)I
      77: iadd
      78: istore_2
      79: goto          88
      82: iinc          3, 1
      85: goto          35
      88: iload_2
      89: iload_1
      90: if_icmpge     125
      93: new           #18                 // class java/lang/IllegalArgumentException
      96: dup
      97: new           #19                 // class java/lang/StringBuilder
     100: dup
     101: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
     104: ldc           #21                 // String UTF-8 length does not fit in int:
     106: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: iload_2
     110: i2l
     111: ldc2_w        #23                 // long 4294967296l
     114: ladd
     115: invokevirtual #25                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     118: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     121: invokespecial #27                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     124: athrow
     125: iload_2
     126: ireturn

  private static int encodedLengthGeneral(java.lang.CharSequence, int);
    Code:
       0: aload_0
       1: invokeinterface #15,  1           // InterfaceMethod java/lang/CharSequence.length:()I
       6: istore_2
       7: iconst_0
       8: istore_3
       9: iload_1
      10: istore        4
      12: iload         4
      14: iload_2
      15: if_icmpge     102
      18: aload_0
      19: iload         4
      21: invokeinterface #16,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      26: istore        5
      28: iload         5
      30: sipush        2048
      33: if_icmpge     50
      36: iload_3
      37: bipush        127
      39: iload         5
      41: isub
      42: bipush        31
      44: iushr
      45: iadd
      46: istore_3
      47: goto          96
      50: iinc          3, 2
      53: ldc           #28                 // int 55296
      55: iload         5
      57: if_icmpgt     96
      60: iload         5
      62: ldc           #29                 // int 57343
      64: if_icmpgt     96
      67: aload_0
      68: iload         4
      70: invokestatic  #30                 // Method java/lang/Character.codePointAt:(Ljava/lang/CharSequence;I)I
      73: istore        6
      75: iload         6
      77: ldc           #31                 // int 65536
      79: if_icmpge     93
      82: new           #32                 // class com/google/protobuf/Utf8$UnpairedSurrogateException
      85: dup
      86: iload         4
      88: iload_2
      89: invokespecial #33                 // Method com/google/protobuf/Utf8$UnpairedSurrogateException."<init>":(II)V
      92: athrow
      93: iinc          4, 1
      96: iinc          4, 1
      99: goto          12
     102: iload_3
     103: ireturn

  static int encode(java.lang.CharSequence, byte[], int, int);
    Code:
       0: getstatic     #8                  // Field processor:Lcom/google/protobuf/Utf8$Processor;
       3: aload_0
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #34                 // Method com/google/protobuf/Utf8$Processor.encodeUtf8:(Ljava/lang/CharSequence;[BII)I
      10: ireturn

  static boolean isValidUtf8(java.nio.ByteBuffer);
    Code:
       0: getstatic     #8                  // Field processor:Lcom/google/protobuf/Utf8$Processor;
       3: aload_0
       4: aload_0
       5: invokevirtual #35                 // Method java/nio/ByteBuffer.position:()I
       8: aload_0
       9: invokevirtual #36                 // Method java/nio/ByteBuffer.remaining:()I
      12: invokevirtual #37                 // Method com/google/protobuf/Utf8$Processor.isValidUtf8:(Ljava/nio/ByteBuffer;II)Z
      15: ireturn

  static int partialIsValidUtf8(int, java.nio.ByteBuffer, int, int);
    Code:
       0: getstatic     #8                  // Field processor:Lcom/google/protobuf/Utf8$Processor;
       3: iload_0
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #38                 // Method com/google/protobuf/Utf8$Processor.partialIsValidUtf8:(ILjava/nio/ByteBuffer;II)I
      10: ireturn

  static java.lang.String decodeUtf8(java.nio.ByteBuffer, int, int) throws com.google.protobuf.InvalidProtocolBufferException;
    Code:
       0: getstatic     #8                  // Field processor:Lcom/google/protobuf/Utf8$Processor;
       3: aload_0
       4: iload_1
       5: iload_2
       6: invokevirtual #39                 // Method com/google/protobuf/Utf8$Processor.decodeUtf8:(Ljava/nio/ByteBuffer;II)Ljava/lang/String;
       9: areturn

  static java.lang.String decodeUtf8(byte[], int, int) throws com.google.protobuf.InvalidProtocolBufferException;
    Code:
       0: getstatic     #8                  // Field processor:Lcom/google/protobuf/Utf8$Processor;
       3: aload_0
       4: iload_1
       5: iload_2
       6: invokevirtual #40                 // Method com/google/protobuf/Utf8$Processor.decodeUtf8:([BII)Ljava/lang/String;
       9: areturn

  static void encodeUtf8(java.lang.CharSequence, java.nio.ByteBuffer);
    Code:
       0: getstatic     #8                  // Field processor:Lcom/google/protobuf/Utf8$Processor;
       3: aload_0
       4: aload_1
       5: invokevirtual #41                 // Method com/google/protobuf/Utf8$Processor.encodeUtf8:(Ljava/lang/CharSequence;Ljava/nio/ByteBuffer;)V
       8: return

  private static int estimateConsecutiveAscii(java.nio.ByteBuffer, int, int);
    Code:
       0: iload_1
       1: istore_3
       2: iload_2
       3: bipush        7
       5: isub
       6: istore        4
       8: iload_3
       9: iload         4
      11: if_icmpge     34
      14: aload_0
      15: iload_3
      16: invokevirtual #42                 // Method java/nio/ByteBuffer.getLong:(I)J
      19: ldc2_w        #43                 // long -9187201950435737472l
      22: land
      23: lconst_0
      24: lcmp
      25: ifne          34
      28: iinc          3, 8
      31: goto          8
      34: iload_3
      35: iload_1
      36: isub
      37: ireturn

  private com.google.protobuf.Utf8();
    Code:
       0: aload_0
       1: invokespecial #45                 // Method java/lang/Object."<init>":()V
       4: return

  static int access$000(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: invokestatic  #7                  // Method incompleteStateFor:(II)I
       5: ireturn

  static int access$100(int, int, int);
    Code:
       0: iload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #6                  // Method incompleteStateFor:(III)I
       6: ireturn

  static int access$200(java.nio.ByteBuffer, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #5                  // Method estimateConsecutiveAscii:(Ljava/nio/ByteBuffer;II)I
       6: ireturn

  static int access$300(java.nio.ByteBuffer, int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #4                  // Method incompleteStateFor:(Ljava/nio/ByteBuffer;III)I
       7: ireturn

  static int access$1100(byte[], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #3                  // Method incompleteStateFor:([BII)I
       6: ireturn

  static int access$1200(int);
    Code:
       0: iload_0
       1: invokestatic  #2                  // Method incompleteStateFor:(I)I
       4: ireturn

  static {};
    Code:
       0: invokestatic  #46                 // Method com/google/protobuf/Utf8$UnsafeProcessor.isAvailable:()Z
       3: ifeq          22
       6: invokestatic  #47                 // Method com/google/protobuf/Android.isOnAndroidDevice:()Z
       9: ifne          22
      12: new           #48                 // class com/google/protobuf/Utf8$UnsafeProcessor
      15: dup
      16: invokespecial #49                 // Method com/google/protobuf/Utf8$UnsafeProcessor."<init>":()V
      19: goto          29
      22: new           #50                 // class com/google/protobuf/Utf8$SafeProcessor
      25: dup
      26: invokespecial #51                 // Method com/google/protobuf/Utf8$SafeProcessor."<init>":()V
      29: putstatic     #8                  // Field processor:Lcom/google/protobuf/Utf8$Processor;
      32: return
}
