Compiled from "CodedInputStream.java"
final class com.google.protobuf.CodedInputStream$ArrayDecoder extends com.google.protobuf.CodedInputStream {
  private final byte[] buffer;

  private final boolean immutable;

  private int limit;

  private int bufferSizeAfterLimit;

  private int pos;

  private int startPos;

  private int lastTag;

  private boolean enableAliasing;

  private int currentLimit;

  private com.google.protobuf.CodedInputStream$ArrayDecoder(byte[], int, int, boolean);
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #3                  // Method com/google/protobuf/CodedInputStream."<init>":(Lcom/google/protobuf/CodedInputStream$1;)V
       5: aload_0
       6: ldc           #5                  // int 2147483647
       8: putfield      #6                  // Field currentLimit:I
      11: aload_0
      12: aload_1
      13: putfield      #7                  // Field buffer:[B
      16: aload_0
      17: iload_2
      18: iload_3
      19: iadd
      20: putfield      #8                  // Field limit:I
      23: aload_0
      24: iload_2
      25: putfield      #9                  // Field pos:I
      28: aload_0
      29: aload_0
      30: getfield      #9                  // Field pos:I
      33: putfield      #10                 // Field startPos:I
      36: aload_0
      37: iload         4
      39: putfield      #11                 // Field immutable:Z
      42: return

  public int readTag() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method isAtEnd:()Z
       4: ifeq          14
       7: aload_0
       8: iconst_0
       9: putfield      #13                 // Field lastTag:I
      12: iconst_0
      13: ireturn
      14: aload_0
      15: aload_0
      16: invokevirtual #14                 // Method readRawVarint32:()I
      19: putfield      #13                 // Field lastTag:I
      22: aload_0
      23: getfield      #13                 // Field lastTag:I
      26: invokestatic  #15                 // Method com/google/protobuf/WireFormat.getTagFieldNumber:(I)I
      29: ifne          36
      32: invokestatic  #16                 // Method com/google/protobuf/InvalidProtocolBufferException.invalidTag:()Lcom/google/protobuf/InvalidProtocolBufferException;
      35: athrow
      36: aload_0
      37: getfield      #13                 // Field lastTag:I
      40: ireturn

  public void checkLastTagWas(int) throws com.google.protobuf.InvalidProtocolBufferException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field lastTag:I
       4: iload_1
       5: if_icmpeq     12
       8: invokestatic  #17                 // Method com/google/protobuf/InvalidProtocolBufferException.invalidEndTag:()Lcom/google/protobuf/InvalidProtocolBufferException;
      11: athrow
      12: return

  public int getLastTag();
    Code:
       0: aload_0
       1: getfield      #13                 // Field lastTag:I
       4: ireturn

  public boolean skipField(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: invokestatic  #18                 // Method com/google/protobuf/WireFormat.getTagWireType:(I)I
       4: tableswitch   { // 0 to 5
                     0: 44
                     1: 50
                     2: 58
                     3: 68
                     4: 86
                     5: 88
               default: 95
          }
      44: aload_0
      45: invokespecial #19                 // Method skipRawVarint:()V
      48: iconst_1
      49: ireturn
      50: aload_0
      51: bipush        8
      53: invokevirtual #20                 // Method skipRawBytes:(I)V
      56: iconst_1
      57: ireturn
      58: aload_0
      59: aload_0
      60: invokevirtual #14                 // Method readRawVarint32:()I
      63: invokevirtual #20                 // Method skipRawBytes:(I)V
      66: iconst_1
      67: ireturn
      68: aload_0
      69: invokevirtual #21                 // Method skipMessage:()V
      72: aload_0
      73: iload_1
      74: invokestatic  #15                 // Method com/google/protobuf/WireFormat.getTagFieldNumber:(I)I
      77: iconst_4
      78: invokestatic  #22                 // Method com/google/protobuf/WireFormat.makeTag:(II)I
      81: invokevirtual #23                 // Method checkLastTagWas:(I)V
      84: iconst_1
      85: ireturn
      86: iconst_0
      87: ireturn
      88: aload_0
      89: iconst_4
      90: invokevirtual #20                 // Method skipRawBytes:(I)V
      93: iconst_1
      94: ireturn
      95: invokestatic  #24                 // Method com/google/protobuf/InvalidProtocolBufferException.invalidWireType:()Lcom/google/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;
      98: athrow

  public boolean skipField(int, com.google.protobuf.CodedOutputStream) throws java.io.IOException;
    Code:
       0: iload_1
       1: invokestatic  #18                 // Method com/google/protobuf/WireFormat.getTagWireType:(I)I
       4: tableswitch   { // 0 to 5
                     0: 44
                     1: 61
                     2: 78
                     3: 95
                     4: 126
                     5: 128
               default: 145
          }
      44: aload_0
      45: invokevirtual #25                 // Method readInt64:()J
      48: lstore_3
      49: aload_2
      50: iload_1
      51: invokevirtual #26                 // Method com/google/protobuf/CodedOutputStream.writeRawVarint32:(I)V
      54: aload_2
      55: lload_3
      56: invokevirtual #27                 // Method com/google/protobuf/CodedOutputStream.writeUInt64NoTag:(J)V
      59: iconst_1
      60: ireturn
      61: aload_0
      62: invokevirtual #28                 // Method readRawLittleEndian64:()J
      65: lstore_3
      66: aload_2
      67: iload_1
      68: invokevirtual #26                 // Method com/google/protobuf/CodedOutputStream.writeRawVarint32:(I)V
      71: aload_2
      72: lload_3
      73: invokevirtual #29                 // Method com/google/protobuf/CodedOutputStream.writeFixed64NoTag:(J)V
      76: iconst_1
      77: ireturn
      78: aload_0
      79: invokevirtual #30                 // Method readBytes:()Lcom/google/protobuf/ByteString;
      82: astore_3
      83: aload_2
      84: iload_1
      85: invokevirtual #26                 // Method com/google/protobuf/CodedOutputStream.writeRawVarint32:(I)V
      88: aload_2
      89: aload_3
      90: invokevirtual #31                 // Method com/google/protobuf/CodedOutputStream.writeBytesNoTag:(Lcom/google/protobuf/ByteString;)V
      93: iconst_1
      94: ireturn
      95: aload_2
      96: iload_1
      97: invokevirtual #26                 // Method com/google/protobuf/CodedOutputStream.writeRawVarint32:(I)V
     100: aload_0
     101: aload_2
     102: invokevirtual #32                 // Method skipMessage:(Lcom/google/protobuf/CodedOutputStream;)V
     105: iload_1
     106: invokestatic  #15                 // Method com/google/protobuf/WireFormat.getTagFieldNumber:(I)I
     109: iconst_4
     110: invokestatic  #22                 // Method com/google/protobuf/WireFormat.makeTag:(II)I
     113: istore_3
     114: aload_0
     115: iload_3
     116: invokevirtual #23                 // Method checkLastTagWas:(I)V
     119: aload_2
     120: iload_3
     121: invokevirtual #26                 // Method com/google/protobuf/CodedOutputStream.writeRawVarint32:(I)V
     124: iconst_1
     125: ireturn
     126: iconst_0
     127: ireturn
     128: aload_0
     129: invokevirtual #33                 // Method readRawLittleEndian32:()I
     132: istore_3
     133: aload_2
     134: iload_1
     135: invokevirtual #26                 // Method com/google/protobuf/CodedOutputStream.writeRawVarint32:(I)V
     138: aload_2
     139: iload_3
     140: invokevirtual #34                 // Method com/google/protobuf/CodedOutputStream.writeFixed32NoTag:(I)V
     143: iconst_1
     144: ireturn
     145: invokestatic  #24                 // Method com/google/protobuf/InvalidProtocolBufferException.invalidWireType:()Lcom/google/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;
     148: athrow

  public void skipMessage() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method readTag:()I
       4: istore_1
       5: iload_1
       6: ifeq          17
       9: aload_0
      10: iload_1
      11: invokevirtual #36                 // Method skipField:(I)Z
      14: ifne          18
      17: return
      18: goto          0

  public void skipMessage(com.google.protobuf.CodedOutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method readTag:()I
       4: istore_2
       5: iload_2
       6: ifeq          18
       9: aload_0
      10: iload_2
      11: aload_1
      12: invokevirtual #37                 // Method skipField:(ILcom/google/protobuf/CodedOutputStream;)Z
      15: ifne          19
      18: return
      19: goto          0

  public double readDouble() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method readRawLittleEndian64:()J
       4: invokestatic  #38                 // Method java/lang/Double.longBitsToDouble:(J)D
       7: dreturn

  public float readFloat() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method readRawLittleEndian32:()I
       4: invokestatic  #39                 // Method java/lang/Float.intBitsToFloat:(I)F
       7: freturn

  public long readUInt64() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method readRawVarint64:()J
       4: lreturn

  public long readInt64() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method readRawVarint64:()J
       4: lreturn

  public int readInt32() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method readRawVarint32:()I
       4: ireturn

  public long readFixed64() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method readRawLittleEndian64:()J
       4: lreturn

  public int readFixed32() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method readRawLittleEndian32:()I
       4: ireturn

  public boolean readBool() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method readRawVarint64:()J
       4: lconst_0
       5: lcmp
       6: ifeq          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public java.lang.String readString() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method readRawVarint32:()I
       4: istore_1
       5: iload_1
       6: ifle          54
       9: iload_1
      10: aload_0
      11: getfield      #8                  // Field limit:I
      14: aload_0
      15: getfield      #9                  // Field pos:I
      18: isub
      19: if_icmpgt     54
      22: new           #41                 // class java/lang/String
      25: dup
      26: aload_0
      27: getfield      #7                  // Field buffer:[B
      30: aload_0
      31: getfield      #9                  // Field pos:I
      34: iload_1
      35: getstatic     #42                 // Field com/google/protobuf/Internal.UTF_8:Ljava/nio/charset/Charset;
      38: invokespecial #43                 // Method java/lang/String."<init>":([BIILjava/nio/charset/Charset;)V
      41: astore_2
      42: aload_0
      43: dup
      44: getfield      #9                  // Field pos:I
      47: iload_1
      48: iadd
      49: putfield      #9                  // Field pos:I
      52: aload_2
      53: areturn
      54: iload_1
      55: ifne          61
      58: ldc           #44                 // String
      60: areturn
      61: iload_1
      62: ifge          69
      65: invokestatic  #45                 // Method com/google/protobuf/InvalidProtocolBufferException.negativeSize:()Lcom/google/protobuf/InvalidProtocolBufferException;
      68: athrow
      69: invokestatic  #46                 // Method com/google/protobuf/InvalidProtocolBufferException.truncatedMessage:()Lcom/google/protobuf/InvalidProtocolBufferException;
      72: athrow

  public java.lang.String readStringRequireUtf8() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method readRawVarint32:()I
       4: istore_1
       5: iload_1
       6: ifle          47
       9: iload_1
      10: aload_0
      11: getfield      #8                  // Field limit:I
      14: aload_0
      15: getfield      #9                  // Field pos:I
      18: isub
      19: if_icmpgt     47
      22: aload_0
      23: getfield      #7                  // Field buffer:[B
      26: aload_0
      27: getfield      #9                  // Field pos:I
      30: iload_1
      31: invokestatic  #47                 // Method com/google/protobuf/Utf8.decodeUtf8:([BII)Ljava/lang/String;
      34: astore_2
      35: aload_0
      36: dup
      37: getfield      #9                  // Field pos:I
      40: iload_1
      41: iadd
      42: putfield      #9                  // Field pos:I
      45: aload_2
      46: areturn
      47: iload_1
      48: ifne          54
      51: ldc           #44                 // String
      53: areturn
      54: iload_1
      55: ifgt          62
      58: invokestatic  #45                 // Method com/google/protobuf/InvalidProtocolBufferException.negativeSize:()Lcom/google/protobuf/InvalidProtocolBufferException;
      61: athrow
      62: invokestatic  #46                 // Method com/google/protobuf/InvalidProtocolBufferException.truncatedMessage:()Lcom/google/protobuf/InvalidProtocolBufferException;
      65: athrow

  public void readGroup(int, com.google.protobuf.MessageLite$Builder, com.google.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #48                 // Field recursionDepth:I
       4: aload_0
       5: getfield      #49                 // Field recursionLimit:I
       8: if_icmplt     15
      11: invokestatic  #50                 // Method com/google/protobuf/InvalidProtocolBufferException.recursionLimitExceeded:()Lcom/google/protobuf/InvalidProtocolBufferException;
      14: athrow
      15: aload_0
      16: dup
      17: getfield      #48                 // Field recursionDepth:I
      20: iconst_1
      21: iadd
      22: putfield      #48                 // Field recursionDepth:I
      25: aload_2
      26: aload_0
      27: aload_3
      28: invokeinterface #51,  3           // InterfaceMethod com/google/protobuf/MessageLite$Builder.mergeFrom:(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/MessageLite$Builder;
      33: pop
      34: aload_0
      35: iload_1
      36: iconst_4
      37: invokestatic  #22                 // Method com/google/protobuf/WireFormat.makeTag:(II)I
      40: invokevirtual #23                 // Method checkLastTagWas:(I)V
      43: aload_0
      44: dup
      45: getfield      #48                 // Field recursionDepth:I
      48: iconst_1
      49: isub
      50: putfield      #48                 // Field recursionDepth:I
      53: return

  public <T extends com.google.protobuf.MessageLite> T readGroup(int, com.google.protobuf.Parser<T>, com.google.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #48                 // Field recursionDepth:I
       4: aload_0
       5: getfield      #49                 // Field recursionLimit:I
       8: if_icmplt     15
      11: invokestatic  #50                 // Method com/google/protobuf/InvalidProtocolBufferException.recursionLimitExceeded:()Lcom/google/protobuf/InvalidProtocolBufferException;
      14: athrow
      15: aload_0
      16: dup
      17: getfield      #48                 // Field recursionDepth:I
      20: iconst_1
      21: iadd
      22: putfield      #48                 // Field recursionDepth:I
      25: aload_2
      26: aload_0
      27: aload_3
      28: invokeinterface #52,  3           // InterfaceMethod com/google/protobuf/Parser.parsePartialFrom:(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      33: checkcast     #53                 // class com/google/protobuf/MessageLite
      36: astore        4
      38: aload_0
      39: iload_1
      40: iconst_4
      41: invokestatic  #22                 // Method com/google/protobuf/WireFormat.makeTag:(II)I
      44: invokevirtual #23                 // Method checkLastTagWas:(I)V
      47: aload_0
      48: dup
      49: getfield      #48                 // Field recursionDepth:I
      52: iconst_1
      53: isub
      54: putfield      #48                 // Field recursionDepth:I
      57: aload         4
      59: areturn

  public void readUnknownGroup(int, com.google.protobuf.MessageLite$Builder) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #54                 // Method com/google/protobuf/ExtensionRegistryLite.getEmptyRegistry:()Lcom/google/protobuf/ExtensionRegistryLite;
       6: invokevirtual #55                 // Method readGroup:(ILcom/google/protobuf/MessageLite$Builder;Lcom/google/protobuf/ExtensionRegistryLite;)V
       9: return

  public void readMessage(com.google.protobuf.MessageLite$Builder, com.google.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method readRawVarint32:()I
       4: istore_3
       5: aload_0
       6: getfield      #48                 // Field recursionDepth:I
       9: aload_0
      10: getfield      #49                 // Field recursionLimit:I
      13: if_icmplt     20
      16: invokestatic  #50                 // Method com/google/protobuf/InvalidProtocolBufferException.recursionLimitExceeded:()Lcom/google/protobuf/InvalidProtocolBufferException;
      19: athrow
      20: aload_0
      21: iload_3
      22: invokevirtual #56                 // Method pushLimit:(I)I
      25: istore        4
      27: aload_0
      28: dup
      29: getfield      #48                 // Field recursionDepth:I
      32: iconst_1
      33: iadd
      34: putfield      #48                 // Field recursionDepth:I
      37: aload_1
      38: aload_0
      39: aload_2
      40: invokeinterface #51,  3           // InterfaceMethod com/google/protobuf/MessageLite$Builder.mergeFrom:(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/MessageLite$Builder;
      45: pop
      46: aload_0
      47: iconst_0
      48: invokevirtual #23                 // Method checkLastTagWas:(I)V
      51: aload_0
      52: dup
      53: getfield      #48                 // Field recursionDepth:I
      56: iconst_1
      57: isub
      58: putfield      #48                 // Field recursionDepth:I
      61: aload_0
      62: iload         4
      64: invokevirtual #57                 // Method popLimit:(I)V
      67: return

  public <T extends com.google.protobuf.MessageLite> T readMessage(com.google.protobuf.Parser<T>, com.google.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method readRawVarint32:()I
       4: istore_3
       5: aload_0
       6: getfield      #48                 // Field recursionDepth:I
       9: aload_0
      10: getfield      #49                 // Field recursionLimit:I
      13: if_icmplt     20
      16: invokestatic  #50                 // Method com/google/protobuf/InvalidProtocolBufferException.recursionLimitExceeded:()Lcom/google/protobuf/InvalidProtocolBufferException;
      19: athrow
      20: aload_0
      21: iload_3
      22: invokevirtual #56                 // Method pushLimit:(I)I
      25: istore        4
      27: aload_0
      28: dup
      29: getfield      #48                 // Field recursionDepth:I
      32: iconst_1
      33: iadd
      34: putfield      #48                 // Field recursionDepth:I
      37: aload_1
      38: aload_0
      39: aload_2
      40: invokeinterface #52,  3           // InterfaceMethod com/google/protobuf/Parser.parsePartialFrom:(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      45: checkcast     #53                 // class com/google/protobuf/MessageLite
      48: astore        5
      50: aload_0
      51: iconst_0
      52: invokevirtual #23                 // Method checkLastTagWas:(I)V
      55: aload_0
      56: dup
      57: getfield      #48                 // Field recursionDepth:I
      60: iconst_1
      61: isub
      62: putfield      #48                 // Field recursionDepth:I
      65: aload_0
      66: iload         4
      68: invokevirtual #57                 // Method popLimit:(I)V
      71: aload         5
      73: areturn

  public com.google.protobuf.ByteString readBytes() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method readRawVarint32:()I
       4: istore_1
       5: iload_1
       6: ifle          76
       9: iload_1
      10: aload_0
      11: getfield      #8                  // Field limit:I
      14: aload_0
      15: getfield      #9                  // Field pos:I
      18: isub
      19: if_icmpgt     76
      22: aload_0
      23: getfield      #11                 // Field immutable:Z
      26: ifeq          51
      29: aload_0
      30: getfield      #58                 // Field enableAliasing:Z
      33: ifeq          51
      36: aload_0
      37: getfield      #7                  // Field buffer:[B
      40: aload_0
      41: getfield      #9                  // Field pos:I
      44: iload_1
      45: invokestatic  #59                 // Method com/google/protobuf/ByteString.wrap:([BII)Lcom/google/protobuf/ByteString;
      48: goto          63
      51: aload_0
      52: getfield      #7                  // Field buffer:[B
      55: aload_0
      56: getfield      #9                  // Field pos:I
      59: iload_1
      60: invokestatic  #60                 // Method com/google/protobuf/ByteString.copyFrom:([BII)Lcom/google/protobuf/ByteString;
      63: astore_2
      64: aload_0
      65: dup
      66: getfield      #9                  // Field pos:I
      69: iload_1
      70: iadd
      71: putfield      #9                  // Field pos:I
      74: aload_2
      75: areturn
      76: iload_1
      77: ifne          84
      80: getstatic     #61                 // Field com/google/protobuf/ByteString.EMPTY:Lcom/google/protobuf/ByteString;
      83: areturn
      84: aload_0
      85: iload_1
      86: invokevirtual #62                 // Method readRawBytes:(I)[B
      89: invokestatic  #63                 // Method com/google/protobuf/ByteString.wrap:([B)Lcom/google/protobuf/ByteString;
      92: areturn

  public byte[] readByteArray() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method readRawVarint32:()I
       4: istore_1
       5: aload_0
       6: iload_1
       7: invokevirtual #62                 // Method readRawBytes:(I)[B
      10: areturn

  public java.nio.ByteBuffer readByteBuffer() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method readRawVarint32:()I
       4: istore_1
       5: iload_1
       6: ifle          87
       9: iload_1
      10: aload_0
      11: getfield      #8                  // Field limit:I
      14: aload_0
      15: getfield      #9                  // Field pos:I
      18: isub
      19: if_icmpgt     87
      22: aload_0
      23: getfield      #11                 // Field immutable:Z
      26: ifne          54
      29: aload_0
      30: getfield      #58                 // Field enableAliasing:Z
      33: ifeq          54
      36: aload_0
      37: getfield      #7                  // Field buffer:[B
      40: aload_0
      41: getfield      #9                  // Field pos:I
      44: iload_1
      45: invokestatic  #64                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
      48: invokevirtual #65                 // Method java/nio/ByteBuffer.slice:()Ljava/nio/ByteBuffer;
      51: goto          74
      54: aload_0
      55: getfield      #7                  // Field buffer:[B
      58: aload_0
      59: getfield      #9                  // Field pos:I
      62: aload_0
      63: getfield      #9                  // Field pos:I
      66: iload_1
      67: iadd
      68: invokestatic  #66                 // Method java/util/Arrays.copyOfRange:([BII)[B
      71: invokestatic  #67                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      74: astore_2
      75: aload_0
      76: dup
      77: getfield      #9                  // Field pos:I
      80: iload_1
      81: iadd
      82: putfield      #9                  // Field pos:I
      85: aload_2
      86: areturn
      87: iload_1
      88: ifne          95
      91: getstatic     #68                 // Field com/google/protobuf/Internal.EMPTY_BYTE_BUFFER:Ljava/nio/ByteBuffer;
      94: areturn
      95: iload_1
      96: ifge          103
      99: invokestatic  #45                 // Method com/google/protobuf/InvalidProtocolBufferException.negativeSize:()Lcom/google/protobuf/InvalidProtocolBufferException;
     102: athrow
     103: invokestatic  #46                 // Method com/google/protobuf/InvalidProtocolBufferException.truncatedMessage:()Lcom/google/protobuf/InvalidProtocolBufferException;
     106: athrow

  public int readUInt32() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method readRawVarint32:()I
       4: ireturn

  public int readEnum() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method readRawVarint32:()I
       4: ireturn

  public int readSFixed32() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method readRawLittleEndian32:()I
       4: ireturn

  public long readSFixed64() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method readRawLittleEndian64:()J
       4: lreturn

  public int readSInt32() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method readRawVarint32:()I
       4: invokestatic  #69                 // Method decodeZigZag32:(I)I
       7: ireturn

  public long readSInt64() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method readRawVarint64:()J
       4: invokestatic  #70                 // Method decodeZigZag64:(J)J
       7: lreturn

  public int readRawVarint32() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field pos:I
       4: istore_1
       5: aload_0
       6: getfield      #8                  // Field limit:I
       9: iload_1
      10: if_icmpne     16
      13: goto          207
      16: aload_0
      17: getfield      #7                  // Field buffer:[B
      20: astore_2
      21: aload_2
      22: iload_1
      23: iinc          1, 1
      26: baload
      27: dup
      28: istore_3
      29: iflt          39
      32: aload_0
      33: iload_1
      34: putfield      #9                  // Field pos:I
      37: iload_3
      38: ireturn
      39: aload_0
      40: getfield      #8                  // Field limit:I
      43: iload_1
      44: isub
      45: bipush        9
      47: if_icmpge     53
      50: goto          207
      53: iload_3
      54: aload_2
      55: iload_1
      56: iinc          1, 1
      59: baload
      60: bipush        7
      62: ishl
      63: ixor
      64: dup
      65: istore_3
      66: ifge          77
      69: iload_3
      70: bipush        -128
      72: ixor
      73: istore_3
      74: goto          200
      77: iload_3
      78: aload_2
      79: iload_1
      80: iinc          1, 1
      83: baload
      84: bipush        14
      86: ishl
      87: ixor
      88: dup
      89: istore_3
      90: iflt          102
      93: iload_3
      94: sipush        16256
      97: ixor
      98: istore_3
      99: goto          200
     102: iload_3
     103: aload_2
     104: iload_1
     105: iinc          1, 1
     108: baload
     109: bipush        21
     111: ishl
     112: ixor
     113: dup
     114: istore_3
     115: ifge          126
     118: iload_3
     119: ldc           #71                 // int -2080896
     121: ixor
     122: istore_3
     123: goto          200
     126: aload_2
     127: iload_1
     128: iinc          1, 1
     131: baload
     132: istore        4
     134: iload_3
     135: iload         4
     137: bipush        28
     139: ishl
     140: ixor
     141: istore_3
     142: iload_3
     143: ldc           #72                 // int 266354560
     145: ixor
     146: istore_3
     147: iload         4
     149: ifge          200
     152: aload_2
     153: iload_1
     154: iinc          1, 1
     157: baload
     158: ifge          200
     161: aload_2
     162: iload_1
     163: iinc          1, 1
     166: baload
     167: ifge          200
     170: aload_2
     171: iload_1
     172: iinc          1, 1
     175: baload
     176: ifge          200
     179: aload_2
     180: iload_1
     181: iinc          1, 1
     184: baload
     185: ifge          200
     188: aload_2
     189: iload_1
     190: iinc          1, 1
     193: baload
     194: ifge          200
     197: goto          207
     200: aload_0
     201: iload_1
     202: putfield      #9                  // Field pos:I
     205: iload_3
     206: ireturn
     207: aload_0
     208: invokevirtual #73                 // Method readRawVarint64SlowPath:()J
     211: l2i
     212: ireturn

  private void skipRawVarint() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field limit:I
       4: aload_0
       5: getfield      #9                  // Field pos:I
       8: isub
       9: bipush        10
      11: if_icmplt     21
      14: aload_0
      15: invokespecial #74                 // Method skipRawVarintFastPath:()V
      18: goto          25
      21: aload_0
      22: invokespecial #75                 // Method skipRawVarintSlowPath:()V
      25: return

  private void skipRawVarintFastPath() throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: bipush        10
       5: if_icmpge     34
       8: aload_0
       9: getfield      #7                  // Field buffer:[B
      12: aload_0
      13: dup
      14: getfield      #9                  // Field pos:I
      17: dup_x1
      18: iconst_1
      19: iadd
      20: putfield      #9                  // Field pos:I
      23: baload
      24: iflt          28
      27: return
      28: iinc          1, 1
      31: goto          2
      34: invokestatic  #76                 // Method com/google/protobuf/InvalidProtocolBufferException.malformedVarint:()Lcom/google/protobuf/InvalidProtocolBufferException;
      37: athrow

  private void skipRawVarintSlowPath() throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: bipush        10
       5: if_icmpge     22
       8: aload_0
       9: invokevirtual #77                 // Method readRawByte:()B
      12: iflt          16
      15: return
      16: iinc          1, 1
      19: goto          2
      22: invokestatic  #76                 // Method com/google/protobuf/InvalidProtocolBufferException.malformedVarint:()Lcom/google/protobuf/InvalidProtocolBufferException;
      25: athrow

  public long readRawVarint64() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field pos:I
       4: istore_1
       5: aload_0
       6: getfield      #8                  // Field limit:I
       9: iload_1
      10: if_icmpne     16
      13: goto          302
      16: aload_0
      17: getfield      #7                  // Field buffer:[B
      20: astore_2
      21: aload_2
      22: iload_1
      23: iinc          1, 1
      26: baload
      27: dup
      28: istore        5
      30: iflt          42
      33: aload_0
      34: iload_1
      35: putfield      #9                  // Field pos:I
      38: iload         5
      40: i2l
      41: lreturn
      42: aload_0
      43: getfield      #8                  // Field limit:I
      46: iload_1
      47: isub
      48: bipush        9
      50: if_icmpge     56
      53: goto          302
      56: iload         5
      58: aload_2
      59: iload_1
      60: iinc          1, 1
      63: baload
      64: bipush        7
      66: ishl
      67: ixor
      68: dup
      69: istore        5
      71: ifge          84
      74: iload         5
      76: bipush        -128
      78: ixor
      79: i2l
      80: lstore_3
      81: goto          295
      84: iload         5
      86: aload_2
      87: iload_1
      88: iinc          1, 1
      91: baload
      92: bipush        14
      94: ishl
      95: ixor
      96: dup
      97: istore        5
      99: iflt          113
     102: iload         5
     104: sipush        16256
     107: ixor
     108: i2l
     109: lstore_3
     110: goto          295
     113: iload         5
     115: aload_2
     116: iload_1
     117: iinc          1, 1
     120: baload
     121: bipush        21
     123: ishl
     124: ixor
     125: dup
     126: istore        5
     128: ifge          141
     131: iload         5
     133: ldc           #71                 // int -2080896
     135: ixor
     136: i2l
     137: lstore_3
     138: goto          295
     141: iload         5
     143: i2l
     144: aload_2
     145: iload_1
     146: iinc          1, 1
     149: baload
     150: i2l
     151: bipush        28
     153: lshl
     154: lxor
     155: dup2
     156: lstore_3
     157: lconst_0
     158: lcmp
     159: iflt          171
     162: lload_3
     163: ldc2_w        #78                 // long 266354560l
     166: lxor
     167: lstore_3
     168: goto          295
     171: lload_3
     172: aload_2
     173: iload_1
     174: iinc          1, 1
     177: baload
     178: i2l
     179: bipush        35
     181: lshl
     182: lxor
     183: dup2
     184: lstore_3
     185: lconst_0
     186: lcmp
     187: ifge          199
     190: lload_3
     191: ldc2_w        #80                 // long -34093383808l
     194: lxor
     195: lstore_3
     196: goto          295
     199: lload_3
     200: aload_2
     201: iload_1
     202: iinc          1, 1
     205: baload
     206: i2l
     207: bipush        42
     209: lshl
     210: lxor
     211: dup2
     212: lstore_3
     213: lconst_0
     214: lcmp
     215: iflt          227
     218: lload_3
     219: ldc2_w        #82                 // long 4363953127296l
     222: lxor
     223: lstore_3
     224: goto          295
     227: lload_3
     228: aload_2
     229: iload_1
     230: iinc          1, 1
     233: baload
     234: i2l
     235: bipush        49
     237: lshl
     238: lxor
     239: dup2
     240: lstore_3
     241: lconst_0
     242: lcmp
     243: ifge          255
     246: lload_3
     247: ldc2_w        #84                 // long -558586000294016l
     250: lxor
     251: lstore_3
     252: goto          295
     255: lload_3
     256: aload_2
     257: iload_1
     258: iinc          1, 1
     261: baload
     262: i2l
     263: bipush        56
     265: lshl
     266: lxor
     267: lstore_3
     268: lload_3
     269: ldc2_w        #86                 // long 71499008037633920l
     272: lxor
     273: lstore_3
     274: lload_3
     275: lconst_0
     276: lcmp
     277: ifge          295
     280: aload_2
     281: iload_1
     282: iinc          1, 1
     285: baload
     286: i2l
     287: lconst_0
     288: lcmp
     289: ifge          295
     292: goto          302
     295: aload_0
     296: iload_1
     297: putfield      #9                  // Field pos:I
     300: lload_3
     301: lreturn
     302: aload_0
     303: invokevirtual #73                 // Method readRawVarint64SlowPath:()J
     306: lreturn

  long readRawVarint64SlowPath() throws java.io.IOException;
    Code:
       0: lconst_0
       1: lstore_1
       2: iconst_0
       3: istore_3
       4: iload_3
       5: bipush        64
       7: if_icmpge     44
      10: aload_0
      11: invokevirtual #77                 // Method readRawByte:()B
      14: istore        4
      16: lload_1
      17: iload         4
      19: bipush        127
      21: iand
      22: i2l
      23: iload_3
      24: lshl
      25: lor
      26: lstore_1
      27: iload         4
      29: sipush        128
      32: iand
      33: ifne          38
      36: lload_1
      37: lreturn
      38: iinc          3, 7
      41: goto          4
      44: invokestatic  #76                 // Method com/google/protobuf/InvalidProtocolBufferException.malformedVarint:()Lcom/google/protobuf/InvalidProtocolBufferException;
      47: athrow

  public int readRawLittleEndian32() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field pos:I
       4: istore_1
       5: aload_0
       6: getfield      #8                  // Field limit:I
       9: iload_1
      10: isub
      11: iconst_4
      12: if_icmpge     19
      15: invokestatic  #46                 // Method com/google/protobuf/InvalidProtocolBufferException.truncatedMessage:()Lcom/google/protobuf/InvalidProtocolBufferException;
      18: athrow
      19: aload_0
      20: getfield      #7                  // Field buffer:[B
      23: astore_2
      24: aload_0
      25: iload_1
      26: iconst_4
      27: iadd
      28: putfield      #9                  // Field pos:I
      31: aload_2
      32: iload_1
      33: baload
      34: sipush        255
      37: iand
      38: aload_2
      39: iload_1
      40: iconst_1
      41: iadd
      42: baload
      43: sipush        255
      46: iand
      47: bipush        8
      49: ishl
      50: ior
      51: aload_2
      52: iload_1
      53: iconst_2
      54: iadd
      55: baload
      56: sipush        255
      59: iand
      60: bipush        16
      62: ishl
      63: ior
      64: aload_2
      65: iload_1
      66: iconst_3
      67: iadd
      68: baload
      69: sipush        255
      72: iand
      73: bipush        24
      75: ishl
      76: ior
      77: ireturn

  public long readRawLittleEndian64() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field pos:I
       4: istore_1
       5: aload_0
       6: getfield      #8                  // Field limit:I
       9: iload_1
      10: isub
      11: bipush        8
      13: if_icmpge     20
      16: invokestatic  #46                 // Method com/google/protobuf/InvalidProtocolBufferException.truncatedMessage:()Lcom/google/protobuf/InvalidProtocolBufferException;
      19: athrow
      20: aload_0
      21: getfield      #7                  // Field buffer:[B
      24: astore_2
      25: aload_0
      26: iload_1
      27: bipush        8
      29: iadd
      30: putfield      #9                  // Field pos:I
      33: aload_2
      34: iload_1
      35: baload
      36: i2l
      37: ldc2_w        #88                 // long 255l
      40: land
      41: aload_2
      42: iload_1
      43: iconst_1
      44: iadd
      45: baload
      46: i2l
      47: ldc2_w        #88                 // long 255l
      50: land
      51: bipush        8
      53: lshl
      54: lor
      55: aload_2
      56: iload_1
      57: iconst_2
      58: iadd
      59: baload
      60: i2l
      61: ldc2_w        #88                 // long 255l
      64: land
      65: bipush        16
      67: lshl
      68: lor
      69: aload_2
      70: iload_1
      71: iconst_3
      72: iadd
      73: baload
      74: i2l
      75: ldc2_w        #88                 // long 255l
      78: land
      79: bipush        24
      81: lshl
      82: lor
      83: aload_2
      84: iload_1
      85: iconst_4
      86: iadd
      87: baload
      88: i2l
      89: ldc2_w        #88                 // long 255l
      92: land
      93: bipush        32
      95: lshl
      96: lor
      97: aload_2
      98: iload_1
      99: iconst_5
     100: iadd
     101: baload
     102: i2l
     103: ldc2_w        #88                 // long 255l
     106: land
     107: bipush        40
     109: lshl
     110: lor
     111: aload_2
     112: iload_1
     113: bipush        6
     115: iadd
     116: baload
     117: i2l
     118: ldc2_w        #88                 // long 255l
     121: land
     122: bipush        48
     124: lshl
     125: lor
     126: aload_2
     127: iload_1
     128: bipush        7
     130: iadd
     131: baload
     132: i2l
     133: ldc2_w        #88                 // long 255l
     136: land
     137: bipush        56
     139: lshl
     140: lor
     141: lreturn

  public void enableAliasing(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #58                 // Field enableAliasing:Z
       5: return

  public void resetSizeCounter();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field pos:I
       5: putfield      #10                 // Field startPos:I
       8: return

  public int pushLimit(int) throws com.google.protobuf.InvalidProtocolBufferException;
    Code:
       0: iload_1
       1: ifge          8
       4: invokestatic  #45                 // Method com/google/protobuf/InvalidProtocolBufferException.negativeSize:()Lcom/google/protobuf/InvalidProtocolBufferException;
       7: athrow
       8: iload_1
       9: aload_0
      10: invokevirtual #90                 // Method getTotalBytesRead:()I
      13: iadd
      14: istore_1
      15: iload_1
      16: ifge          23
      19: invokestatic  #91                 // Method com/google/protobuf/InvalidProtocolBufferException.parseFailure:()Lcom/google/protobuf/InvalidProtocolBufferException;
      22: athrow
      23: aload_0
      24: getfield      #6                  // Field currentLimit:I
      27: istore_2
      28: iload_1
      29: iload_2
      30: if_icmple     37
      33: invokestatic  #46                 // Method com/google/protobuf/InvalidProtocolBufferException.truncatedMessage:()Lcom/google/protobuf/InvalidProtocolBufferException;
      36: athrow
      37: aload_0
      38: iload_1
      39: putfield      #6                  // Field currentLimit:I
      42: aload_0
      43: invokespecial #92                 // Method recomputeBufferSizeAfterLimit:()V
      46: iload_2
      47: ireturn

  private void recomputeBufferSizeAfterLimit();
    Code:
       0: aload_0
       1: dup
       2: getfield      #8                  // Field limit:I
       5: aload_0
       6: getfield      #93                 // Field bufferSizeAfterLimit:I
       9: iadd
      10: putfield      #8                  // Field limit:I
      13: aload_0
      14: getfield      #8                  // Field limit:I
      17: aload_0
      18: getfield      #10                 // Field startPos:I
      21: isub
      22: istore_1
      23: iload_1
      24: aload_0
      25: getfield      #6                  // Field currentLimit:I
      28: if_icmple     57
      31: aload_0
      32: iload_1
      33: aload_0
      34: getfield      #6                  // Field currentLimit:I
      37: isub
      38: putfield      #93                 // Field bufferSizeAfterLimit:I
      41: aload_0
      42: dup
      43: getfield      #8                  // Field limit:I
      46: aload_0
      47: getfield      #93                 // Field bufferSizeAfterLimit:I
      50: isub
      51: putfield      #8                  // Field limit:I
      54: goto          62
      57: aload_0
      58: iconst_0
      59: putfield      #93                 // Field bufferSizeAfterLimit:I
      62: return

  public void popLimit(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field currentLimit:I
       5: aload_0
       6: invokespecial #92                 // Method recomputeBufferSizeAfterLimit:()V
       9: return

  public int getBytesUntilLimit();
    Code:
       0: aload_0
       1: getfield      #6                  // Field currentLimit:I
       4: ldc           #5                  // int 2147483647
       6: if_icmpne     11
       9: iconst_m1
      10: ireturn
      11: aload_0
      12: getfield      #6                  // Field currentLimit:I
      15: aload_0
      16: invokevirtual #90                 // Method getTotalBytesRead:()I
      19: isub
      20: ireturn

  public boolean isAtEnd() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field pos:I
       4: aload_0
       5: getfield      #8                  // Field limit:I
       8: if_icmpne     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public int getTotalBytesRead();
    Code:
       0: aload_0
       1: getfield      #9                  // Field pos:I
       4: aload_0
       5: getfield      #10                 // Field startPos:I
       8: isub
       9: ireturn

  public byte readRawByte() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field pos:I
       4: aload_0
       5: getfield      #8                  // Field limit:I
       8: if_icmpne     15
      11: invokestatic  #46                 // Method com/google/protobuf/InvalidProtocolBufferException.truncatedMessage:()Lcom/google/protobuf/InvalidProtocolBufferException;
      14: athrow
      15: aload_0
      16: getfield      #7                  // Field buffer:[B
      19: aload_0
      20: dup
      21: getfield      #9                  // Field pos:I
      24: dup_x1
      25: iconst_1
      26: iadd
      27: putfield      #9                  // Field pos:I
      30: baload
      31: ireturn

  public byte[] readRawBytes(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: ifle          45
       4: iload_1
       5: aload_0
       6: getfield      #8                  // Field limit:I
       9: aload_0
      10: getfield      #9                  // Field pos:I
      13: isub
      14: if_icmpgt     45
      17: aload_0
      18: getfield      #9                  // Field pos:I
      21: istore_2
      22: aload_0
      23: dup
      24: getfield      #9                  // Field pos:I
      27: iload_1
      28: iadd
      29: putfield      #9                  // Field pos:I
      32: aload_0
      33: getfield      #7                  // Field buffer:[B
      36: iload_2
      37: aload_0
      38: getfield      #9                  // Field pos:I
      41: invokestatic  #66                 // Method java/util/Arrays.copyOfRange:([BII)[B
      44: areturn
      45: iload_1
      46: ifgt          61
      49: iload_1
      50: ifne          57
      53: getstatic     #94                 // Field com/google/protobuf/Internal.EMPTY_BYTE_ARRAY:[B
      56: areturn
      57: invokestatic  #45                 // Method com/google/protobuf/InvalidProtocolBufferException.negativeSize:()Lcom/google/protobuf/InvalidProtocolBufferException;
      60: athrow
      61: invokestatic  #46                 // Method com/google/protobuf/InvalidProtocolBufferException.truncatedMessage:()Lcom/google/protobuf/InvalidProtocolBufferException;
      64: athrow

  public void skipRawBytes(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: iflt          28
       4: iload_1
       5: aload_0
       6: getfield      #8                  // Field limit:I
       9: aload_0
      10: getfield      #9                  // Field pos:I
      13: isub
      14: if_icmpgt     28
      17: aload_0
      18: dup
      19: getfield      #9                  // Field pos:I
      22: iload_1
      23: iadd
      24: putfield      #9                  // Field pos:I
      27: return
      28: iload_1
      29: ifge          36
      32: invokestatic  #45                 // Method com/google/protobuf/InvalidProtocolBufferException.negativeSize:()Lcom/google/protobuf/InvalidProtocolBufferException;
      35: athrow
      36: invokestatic  #46                 // Method com/google/protobuf/InvalidProtocolBufferException.truncatedMessage:()Lcom/google/protobuf/InvalidProtocolBufferException;
      39: athrow

  com.google.protobuf.CodedInputStream$ArrayDecoder(byte[], int, int, boolean, com.google.protobuf.CodedInputStream$1);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: invokespecial #2                  // Method "<init>":([BIIZ)V
       9: return
}
