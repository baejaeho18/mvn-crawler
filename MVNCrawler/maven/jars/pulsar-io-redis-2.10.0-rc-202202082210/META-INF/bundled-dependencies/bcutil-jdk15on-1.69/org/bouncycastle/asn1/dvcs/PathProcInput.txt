public class org.bouncycastle.asn1.dvcs.PathProcInput extends org.bouncycastle.asn1.ASN1Object {
  private org.bouncycastle.asn1.x509.PolicyInformation[] acceptablePolicySet;

  private boolean inhibitPolicyMapping;

  private boolean explicitPolicyReqd;

  private boolean inhibitAnyPolicy;

  public org.bouncycastle.asn1.dvcs.PathProcInput(org.bouncycastle.asn1.x509.PolicyInformation[]);
    Code:
       0: aload_0
       1: invokespecial #152                // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #135                // Field inhibitPolicyMapping:Z
       9: aload_0
      10: iconst_0
      11: putfield      #133                // Field explicitPolicyReqd:Z
      14: aload_0
      15: iconst_0
      16: putfield      #134                // Field inhibitAnyPolicy:Z
      19: aload_0
      20: aload_0
      21: aload_1
      22: invokespecial #167                // Method copy:([Lorg/bouncycastle/asn1/x509/PolicyInformation;)[Lorg/bouncycastle/asn1/x509/PolicyInformation;
      25: putfield      #136                // Field acceptablePolicySet:[Lorg/bouncycastle/asn1/x509/PolicyInformation;
      28: return

  public org.bouncycastle.asn1.dvcs.PathProcInput(org.bouncycastle.asn1.x509.PolicyInformation[], boolean, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #152                // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #135                // Field inhibitPolicyMapping:Z
       9: aload_0
      10: iconst_0
      11: putfield      #133                // Field explicitPolicyReqd:Z
      14: aload_0
      15: iconst_0
      16: putfield      #134                // Field inhibitAnyPolicy:Z
      19: aload_0
      20: aload_0
      21: aload_1
      22: invokespecial #167                // Method copy:([Lorg/bouncycastle/asn1/x509/PolicyInformation;)[Lorg/bouncycastle/asn1/x509/PolicyInformation;
      25: putfield      #136                // Field acceptablePolicySet:[Lorg/bouncycastle/asn1/x509/PolicyInformation;
      28: aload_0
      29: iload_2
      30: putfield      #135                // Field inhibitPolicyMapping:Z
      33: aload_0
      34: iload_3
      35: putfield      #133                // Field explicitPolicyReqd:Z
      38: aload_0
      39: iload         4
      41: putfield      #134                // Field inhibitAnyPolicy:Z
      44: return

  private static org.bouncycastle.asn1.x509.PolicyInformation[] fromSequence(org.bouncycastle.asn1.ASN1Sequence);
    Code:
       0: aload_0
       1: invokevirtual #153                // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
       4: anewarray     #69                 // class org/bouncycastle/asn1/x509/PolicyInformation
       7: astore_1
       8: iconst_0
       9: istore_2
      10: iload_2
      11: aload_1
      12: arraylength
      13: if_icmpeq     33
      16: aload_1
      17: iload_2
      18: aload_0
      19: iload_2
      20: invokevirtual #154                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      23: invokestatic  #168                // Method org/bouncycastle/asn1/x509/PolicyInformation.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x509/PolicyInformation;
      26: aastore
      27: iinc          2, 1
      30: goto          10
      33: aload_1
      34: areturn

  public static org.bouncycastle.asn1.dvcs.PathProcInput getInstance(java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #68                 // class org/bouncycastle/asn1/dvcs/PathProcInput
       4: ifeq          12
       7: aload_0
       8: checkcast     #68                 // class org/bouncycastle/asn1/dvcs/PathProcInput
      11: areturn
      12: aload_0
      13: ifnull        215
      16: aload_0
      17: invokestatic  #155                // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Sequence;
      20: astore_1
      21: aload_1
      22: iconst_0
      23: invokevirtual #154                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      26: invokestatic  #155                // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Sequence;
      29: astore_2
      30: new           #68                 // class org/bouncycastle/asn1/dvcs/PathProcInput
      33: dup
      34: aload_2
      35: invokestatic  #166                // Method fromSequence:(Lorg/bouncycastle/asn1/ASN1Sequence;)[Lorg/bouncycastle/asn1/x509/PolicyInformation;
      38: invokespecial #164                // Method "<init>":([Lorg/bouncycastle/asn1/x509/PolicyInformation;)V
      41: astore_3
      42: iconst_1
      43: istore        4
      45: iload         4
      47: aload_1
      48: invokevirtual #153                // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      51: if_icmpge     213
      54: aload_1
      55: iload         4
      57: invokevirtual #154                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      60: astore        5
      62: aload         5
      64: instanceof    #61                 // class org/bouncycastle/asn1/ASN1Boolean
      67: ifeq          89
      70: aload         5
      72: invokestatic  #148                // Method org/bouncycastle/asn1/ASN1Boolean.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Boolean;
      75: astore        6
      77: aload_3
      78: aload         6
      80: invokevirtual #146                // Method org/bouncycastle/asn1/ASN1Boolean.isTrue:()Z
      83: invokespecial #163                // Method setInhibitPolicyMapping:(Z)V
      86: goto          207
      89: aload         5
      91: instanceof    #65                 // class org/bouncycastle/asn1/ASN1TaggedObject
      94: ifeq          207
      97: aload         5
      99: invokestatic  #158                // Method org/bouncycastle/asn1/ASN1TaggedObject.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1TaggedObject;
     102: astore        6
     104: aload         6
     106: invokevirtual #157                // Method org/bouncycastle/asn1/ASN1TaggedObject.getTagNo:()I
     109: lookupswitch  { // 2
                     0: 136
                     1: 156
               default: 176
          }
     136: aload         6
     138: iconst_0
     139: invokestatic  #149                // Method org/bouncycastle/asn1/ASN1Boolean.getInstance:(Lorg/bouncycastle/asn1/ASN1TaggedObject;Z)Lorg/bouncycastle/asn1/ASN1Boolean;
     142: astore        7
     144: aload_3
     145: aload         7
     147: invokevirtual #146                // Method org/bouncycastle/asn1/ASN1Boolean.isTrue:()Z
     150: invokespecial #161                // Method setExplicitPolicyReqd:(Z)V
     153: goto          207
     156: aload         6
     158: iconst_0
     159: invokestatic  #149                // Method org/bouncycastle/asn1/ASN1Boolean.getInstance:(Lorg/bouncycastle/asn1/ASN1TaggedObject;Z)Lorg/bouncycastle/asn1/ASN1Boolean;
     162: astore        7
     164: aload_3
     165: aload         7
     167: invokevirtual #146                // Method org/bouncycastle/asn1/ASN1Boolean.isTrue:()Z
     170: invokespecial #162                // Method setInhibitAnyPolicy:(Z)V
     173: goto          207
     176: new           #57                 // class java/lang/IllegalArgumentException
     179: dup
     180: new           #58                 // class java/lang/StringBuilder
     183: dup
     184: invokespecial #138                // Method java/lang/StringBuilder."<init>":()V
     187: ldc           #6                  // String Unknown tag encountered:
     189: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     192: aload         6
     194: invokevirtual #157                // Method org/bouncycastle/asn1/ASN1TaggedObject.getTagNo:()I
     197: invokevirtual #140                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     200: invokevirtual #139                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     203: invokespecial #137                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     206: athrow
     207: iinc          4, 1
     210: goto          45
     213: aload_3
     214: areturn
     215: aconst_null
     216: areturn

  public static org.bouncycastle.asn1.dvcs.PathProcInput getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #156                // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Lorg/bouncycastle/asn1/ASN1TaggedObject;Z)Lorg/bouncycastle/asn1/ASN1Sequence;
       5: invokestatic  #165                // Method getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/dvcs/PathProcInput;
       8: areturn

  public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive();
    Code:
       0: new           #62                 // class org/bouncycastle/asn1/ASN1EncodableVector
       3: dup
       4: iconst_4
       5: invokespecial #150                // Method org/bouncycastle/asn1/ASN1EncodableVector."<init>":(I)V
       8: astore_1
       9: new           #62                 // class org/bouncycastle/asn1/ASN1EncodableVector
      12: dup
      13: aload_0
      14: getfield      #136                // Field acceptablePolicySet:[Lorg/bouncycastle/asn1/x509/PolicyInformation;
      17: arraylength
      18: invokespecial #150                // Method org/bouncycastle/asn1/ASN1EncodableVector."<init>":(I)V
      21: astore_2
      22: iconst_0
      23: istore_3
      24: iload_3
      25: aload_0
      26: getfield      #136                // Field acceptablePolicySet:[Lorg/bouncycastle/asn1/x509/PolicyInformation;
      29: arraylength
      30: if_icmpeq     49
      33: aload_2
      34: aload_0
      35: getfield      #136                // Field acceptablePolicySet:[Lorg/bouncycastle/asn1/x509/PolicyInformation;
      38: iload_3
      39: aaload
      40: invokevirtual #151                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      43: iinc          3, 1
      46: goto          24
      49: aload_1
      50: new           #66                 // class org/bouncycastle/asn1/DERSequence
      53: dup
      54: aload_2
      55: invokespecial #159                // Method org/bouncycastle/asn1/DERSequence."<init>":(Lorg/bouncycastle/asn1/ASN1EncodableVector;)V
      58: invokevirtual #151                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      61: aload_0
      62: getfield      #135                // Field inhibitPolicyMapping:Z
      65: ifeq          79
      68: aload_1
      69: aload_0
      70: getfield      #135                // Field inhibitPolicyMapping:Z
      73: invokestatic  #147                // Method org/bouncycastle/asn1/ASN1Boolean.getInstance:(Z)Lorg/bouncycastle/asn1/ASN1Boolean;
      76: invokevirtual #151                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      79: aload_0
      80: getfield      #133                // Field explicitPolicyReqd:Z
      83: ifeq          106
      86: aload_1
      87: new           #67                 // class org/bouncycastle/asn1/DERTaggedObject
      90: dup
      91: iconst_0
      92: iconst_0
      93: aload_0
      94: getfield      #133                // Field explicitPolicyReqd:Z
      97: invokestatic  #147                // Method org/bouncycastle/asn1/ASN1Boolean.getInstance:(Z)Lorg/bouncycastle/asn1/ASN1Boolean;
     100: invokespecial #160                // Method org/bouncycastle/asn1/DERTaggedObject."<init>":(ZILorg/bouncycastle/asn1/ASN1Encodable;)V
     103: invokevirtual #151                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
     106: aload_0
     107: getfield      #134                // Field inhibitAnyPolicy:Z
     110: ifeq          133
     113: aload_1
     114: new           #67                 // class org/bouncycastle/asn1/DERTaggedObject
     117: dup
     118: iconst_0
     119: iconst_1
     120: aload_0
     121: getfield      #134                // Field inhibitAnyPolicy:Z
     124: invokestatic  #147                // Method org/bouncycastle/asn1/ASN1Boolean.getInstance:(Z)Lorg/bouncycastle/asn1/ASN1Boolean;
     127: invokespecial #160                // Method org/bouncycastle/asn1/DERTaggedObject."<init>":(ZILorg/bouncycastle/asn1/ASN1Encodable;)V
     130: invokevirtual #151                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
     133: new           #66                 // class org/bouncycastle/asn1/DERSequence
     136: dup
     137: aload_1
     138: invokespecial #159                // Method org/bouncycastle/asn1/DERSequence."<init>":(Lorg/bouncycastle/asn1/ASN1EncodableVector;)V
     141: areturn

  public java.lang.String toString();
    Code:
       0: new           #58                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #138                // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #5                  // String PathProcInput: {\nacceptablePolicySet:
       9: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #136                // Field acceptablePolicySet:[Lorg/bouncycastle/asn1/x509/PolicyInformation;
      16: invokestatic  #145                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      19: invokevirtual #142                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      22: ldc           #3                  // String \ninhibitPolicyMapping:
      24: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: getfield      #135                // Field inhibitPolicyMapping:Z
      31: invokevirtual #141                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      34: ldc           #1                  // String \nexplicitPolicyReqd:
      36: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: getfield      #133                // Field explicitPolicyReqd:Z
      43: invokevirtual #141                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      46: ldc           #2                  // String \ninhibitAnyPolicy:
      48: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_0
      52: getfield      #134                // Field inhibitAnyPolicy:Z
      55: invokevirtual #141                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      58: ldc           #4                  // String \n}\n
      60: invokevirtual #143                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: invokevirtual #139                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: areturn

  public org.bouncycastle.asn1.x509.PolicyInformation[] getAcceptablePolicySet();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #136                // Field acceptablePolicySet:[Lorg/bouncycastle/asn1/x509/PolicyInformation;
       5: invokespecial #167                // Method copy:([Lorg/bouncycastle/asn1/x509/PolicyInformation;)[Lorg/bouncycastle/asn1/x509/PolicyInformation;
       8: areturn

  public boolean isInhibitPolicyMapping();
    Code:
       0: aload_0
       1: getfield      #135                // Field inhibitPolicyMapping:Z
       4: ireturn

  private void setInhibitPolicyMapping(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #135                // Field inhibitPolicyMapping:Z
       5: return

  public boolean isExplicitPolicyReqd();
    Code:
       0: aload_0
       1: getfield      #133                // Field explicitPolicyReqd:Z
       4: ireturn

  private void setExplicitPolicyReqd(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #133                // Field explicitPolicyReqd:Z
       5: return

  public boolean isInhibitAnyPolicy();
    Code:
       0: aload_0
       1: getfield      #134                // Field inhibitAnyPolicy:Z
       4: ireturn

  private void setInhibitAnyPolicy(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #134                // Field inhibitAnyPolicy:Z
       5: return

  private org.bouncycastle.asn1.x509.PolicyInformation[] copy(org.bouncycastle.asn1.x509.PolicyInformation[]);
    Code:
       0: aload_1
       1: arraylength
       2: anewarray     #69                 // class org/bouncycastle/asn1/x509/PolicyInformation
       5: astore_2
       6: aload_1
       7: iconst_0
       8: aload_2
       9: iconst_0
      10: aload_2
      11: arraylength
      12: invokestatic  #144                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      15: aload_2
      16: areturn
}
