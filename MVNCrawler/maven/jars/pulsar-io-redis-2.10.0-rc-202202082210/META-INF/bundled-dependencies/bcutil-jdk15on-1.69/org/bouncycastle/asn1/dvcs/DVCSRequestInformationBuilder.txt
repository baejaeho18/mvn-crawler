public class org.bouncycastle.asn1.dvcs.DVCSRequestInformationBuilder {
  private int version;

  private final org.bouncycastle.asn1.dvcs.ServiceType service;

  private org.bouncycastle.asn1.dvcs.DVCSRequestInformation initialInfo;

  private java.math.BigInteger nonce;

  private org.bouncycastle.asn1.dvcs.DVCSTime requestTime;

  private org.bouncycastle.asn1.x509.GeneralNames requester;

  private org.bouncycastle.asn1.x509.PolicyInformation requestPolicy;

  private org.bouncycastle.asn1.x509.GeneralNames dvcs;

  private org.bouncycastle.asn1.x509.GeneralNames dataLocations;

  private org.bouncycastle.asn1.x509.Extensions extensions;

  private static final int DEFAULT_VERSION;

  private static final int TAG_REQUESTER;

  private static final int TAG_REQUEST_POLICY;

  private static final int TAG_DVCS;

  private static final int TAG_DATA_LOCATIONS;

  private static final int TAG_EXTENSIONS;

  public org.bouncycastle.asn1.dvcs.DVCSRequestInformationBuilder(org.bouncycastle.asn1.dvcs.ServiceType);
    Code:
       0: aload_0
       1: invokespecial #158                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #147                // Field version:I
       9: aload_0
      10: aload_1
      11: putfield      #151                // Field service:Lorg/bouncycastle/asn1/dvcs/ServiceType;
      14: return

  public org.bouncycastle.asn1.dvcs.DVCSRequestInformationBuilder(org.bouncycastle.asn1.dvcs.DVCSRequestInformation);
    Code:
       0: aload_0
       1: invokespecial #158                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #147                // Field version:I
       9: aload_0
      10: aload_1
      11: putfield      #149                // Field initialInfo:Lorg/bouncycastle/asn1/dvcs/DVCSRequestInformation;
      14: aload_0
      15: aload_1
      16: invokevirtual #171                // Method org/bouncycastle/asn1/dvcs/DVCSRequestInformation.getService:()Lorg/bouncycastle/asn1/dvcs/ServiceType;
      19: putfield      #151                // Field service:Lorg/bouncycastle/asn1/dvcs/ServiceType;
      22: aload_0
      23: aload_1
      24: invokevirtual #168                // Method org/bouncycastle/asn1/dvcs/DVCSRequestInformation.getVersion:()I
      27: putfield      #147                // Field version:I
      30: aload_0
      31: aload_1
      32: invokevirtual #169                // Method org/bouncycastle/asn1/dvcs/DVCSRequestInformation.getNonce:()Ljava/math/BigInteger;
      35: putfield      #148                // Field nonce:Ljava/math/BigInteger;
      38: aload_0
      39: aload_1
      40: invokevirtual #170                // Method org/bouncycastle/asn1/dvcs/DVCSRequestInformation.getRequestTime:()Lorg/bouncycastle/asn1/dvcs/DVCSTime;
      43: putfield      #150                // Field requestTime:Lorg/bouncycastle/asn1/dvcs/DVCSTime;
      46: aload_0
      47: aload_1
      48: invokevirtual #174                // Method org/bouncycastle/asn1/dvcs/DVCSRequestInformation.getRequestPolicy:()Lorg/bouncycastle/asn1/x509/PolicyInformation;
      51: putfield      #156                // Field requestPolicy:Lorg/bouncycastle/asn1/x509/PolicyInformation;
      54: aload_0
      55: aload_1
      56: invokevirtual #172                // Method org/bouncycastle/asn1/dvcs/DVCSRequestInformation.getDVCS:()Lorg/bouncycastle/asn1/x509/GeneralNames;
      59: putfield      #154                // Field dvcs:Lorg/bouncycastle/asn1/x509/GeneralNames;
      62: aload_0
      63: aload_1
      64: invokevirtual #173                // Method org/bouncycastle/asn1/dvcs/DVCSRequestInformation.getDataLocations:()Lorg/bouncycastle/asn1/x509/GeneralNames;
      67: putfield      #153                // Field dataLocations:Lorg/bouncycastle/asn1/x509/GeneralNames;
      70: return

  public org.bouncycastle.asn1.dvcs.DVCSRequestInformation build();
    Code:
       0: new           #77                 // class org/bouncycastle/asn1/ASN1EncodableVector
       3: dup
       4: bipush        9
       6: invokespecial #162                // Method org/bouncycastle/asn1/ASN1EncodableVector."<init>":(I)V
       9: astore_1
      10: aload_0
      11: getfield      #147                // Field version:I
      14: iconst_1
      15: if_icmpeq     34
      18: aload_1
      19: new           #78                 // class org/bouncycastle/asn1/ASN1Integer
      22: dup
      23: aload_0
      24: getfield      #147                // Field version:I
      27: i2l
      28: invokespecial #164                // Method org/bouncycastle/asn1/ASN1Integer."<init>":(J)V
      31: invokevirtual #163                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      34: aload_1
      35: aload_0
      36: getfield      #151                // Field service:Lorg/bouncycastle/asn1/dvcs/ServiceType;
      39: invokevirtual #163                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      42: aload_0
      43: getfield      #148                // Field nonce:Ljava/math/BigInteger;
      46: ifnull        64
      49: aload_1
      50: new           #78                 // class org/bouncycastle/asn1/ASN1Integer
      53: dup
      54: aload_0
      55: getfield      #148                // Field nonce:Ljava/math/BigInteger;
      58: invokespecial #165                // Method org/bouncycastle/asn1/ASN1Integer."<init>":(Ljava/math/BigInteger;)V
      61: invokevirtual #163                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      64: aload_0
      65: getfield      #150                // Field requestTime:Lorg/bouncycastle/asn1/dvcs/DVCSTime;
      68: ifnull        79
      71: aload_1
      72: aload_0
      73: getfield      #150                // Field requestTime:Lorg/bouncycastle/asn1/dvcs/DVCSTime;
      76: invokevirtual #163                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      79: iconst_5
      80: newarray       int
      82: dup
      83: iconst_0
      84: iconst_0
      85: iastore
      86: dup
      87: iconst_1
      88: iconst_1
      89: iastore
      90: dup
      91: iconst_2
      92: iconst_2
      93: iastore
      94: dup
      95: iconst_3
      96: iconst_3
      97: iastore
      98: dup
      99: iconst_4
     100: iconst_4
     101: iastore
     102: astore_2
     103: iconst_5
     104: anewarray     #76                 // class org/bouncycastle/asn1/ASN1Encodable
     107: dup
     108: iconst_0
     109: aload_0
     110: getfield      #155                // Field requester:Lorg/bouncycastle/asn1/x509/GeneralNames;
     113: aastore
     114: dup
     115: iconst_1
     116: aload_0
     117: getfield      #156                // Field requestPolicy:Lorg/bouncycastle/asn1/x509/PolicyInformation;
     120: aastore
     121: dup
     122: iconst_2
     123: aload_0
     124: getfield      #154                // Field dvcs:Lorg/bouncycastle/asn1/x509/GeneralNames;
     127: aastore
     128: dup
     129: iconst_3
     130: aload_0
     131: getfield      #153                // Field dataLocations:Lorg/bouncycastle/asn1/x509/GeneralNames;
     134: aastore
     135: dup
     136: iconst_4
     137: aload_0
     138: getfield      #152                // Field extensions:Lorg/bouncycastle/asn1/x509/Extensions;
     141: aastore
     142: astore_3
     143: iconst_0
     144: istore        4
     146: iload         4
     148: aload_2
     149: arraylength
     150: if_icmpge     192
     153: aload_2
     154: iload         4
     156: iaload
     157: istore        5
     159: aload_3
     160: iload         4
     162: aaload
     163: astore        6
     165: aload         6
     167: ifnull        186
     170: aload_1
     171: new           #80                 // class org/bouncycastle/asn1/DERTaggedObject
     174: dup
     175: iconst_0
     176: iload         5
     178: aload         6
     180: invokespecial #167                // Method org/bouncycastle/asn1/DERTaggedObject."<init>":(ZILorg/bouncycastle/asn1/ASN1Encodable;)V
     183: invokevirtual #163                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
     186: iinc          4, 1
     189: goto          146
     192: new           #79                 // class org/bouncycastle/asn1/DERSequence
     195: dup
     196: aload_1
     197: invokespecial #166                // Method org/bouncycastle/asn1/DERSequence."<init>":(Lorg/bouncycastle/asn1/ASN1EncodableVector;)V
     200: invokestatic  #175                // Method org/bouncycastle/asn1/dvcs/DVCSRequestInformation.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/dvcs/DVCSRequestInformation;
     203: areturn

  public void setVersion(int);
    Code:
       0: aload_0
       1: getfield      #149                // Field initialInfo:Lorg/bouncycastle/asn1/dvcs/DVCSRequestInformation;
       4: ifnull        17
       7: new           #72                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #4                  // String cannot change version in existing DVCSRequestInformation
      13: invokespecial #157                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: iload_1
      19: putfield      #147                // Field version:I
      22: return

  public void setNonce(java.math.BigInteger);
    Code:
       0: aload_0
       1: getfield      #149                // Field initialInfo:Lorg/bouncycastle/asn1/dvcs/DVCSRequestInformation;
       4: ifnull        84
       7: aload_0
       8: getfield      #149                // Field initialInfo:Lorg/bouncycastle/asn1/dvcs/DVCSRequestInformation;
      11: invokevirtual #169                // Method org/bouncycastle/asn1/dvcs/DVCSRequestInformation.getNonce:()Ljava/math/BigInteger;
      14: ifnonnull     25
      17: aload_0
      18: aload_1
      19: putfield      #148                // Field nonce:Ljava/math/BigInteger;
      22: goto          84
      25: aload_0
      26: getfield      #149                // Field initialInfo:Lorg/bouncycastle/asn1/dvcs/DVCSRequestInformation;
      29: invokevirtual #169                // Method org/bouncycastle/asn1/dvcs/DVCSRequestInformation.getNonce:()Ljava/math/BigInteger;
      32: invokevirtual #160                // Method java/math/BigInteger.toByteArray:()[B
      35: astore_2
      36: aload_1
      37: invokestatic  #180                // Method org/bouncycastle/util/BigIntegers.asUnsignedByteArray:(Ljava/math/BigInteger;)[B
      40: astore_3
      41: aload_2
      42: arraylength
      43: aload_3
      44: arraylength
      45: iadd
      46: newarray       byte
      48: astore        4
      50: aload_2
      51: iconst_0
      52: aload         4
      54: iconst_0
      55: aload_2
      56: arraylength
      57: invokestatic  #159                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      60: aload_3
      61: iconst_0
      62: aload         4
      64: aload_2
      65: arraylength
      66: aload_3
      67: arraylength
      68: invokestatic  #159                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      71: aload_0
      72: new           #75                 // class java/math/BigInteger
      75: dup
      76: aload         4
      78: invokespecial #161                // Method java/math/BigInteger."<init>":([B)V
      81: putfield      #148                // Field nonce:Ljava/math/BigInteger;
      84: aload_0
      85: aload_1
      86: putfield      #148                // Field nonce:Ljava/math/BigInteger;
      89: return

  public void setRequestTime(org.bouncycastle.asn1.dvcs.DVCSTime);
    Code:
       0: aload_0
       1: getfield      #149                // Field initialInfo:Lorg/bouncycastle/asn1/dvcs/DVCSRequestInformation;
       4: ifnull        17
       7: new           #72                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #3                  // String cannot change request time in existing DVCSRequestInformation
      13: invokespecial #157                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: putfield      #150                // Field requestTime:Lorg/bouncycastle/asn1/dvcs/DVCSTime;
      22: return

  public void setRequester(org.bouncycastle.asn1.x509.GeneralName);
    Code:
       0: aload_0
       1: new           #83                 // class org/bouncycastle/asn1/x509/GeneralNames
       4: dup
       5: aload_1
       6: invokespecial #179                // Method org/bouncycastle/asn1/x509/GeneralNames."<init>":(Lorg/bouncycastle/asn1/x509/GeneralName;)V
       9: invokevirtual #178                // Method setRequester:(Lorg/bouncycastle/asn1/x509/GeneralNames;)V
      12: return

  public void setRequester(org.bouncycastle.asn1.x509.GeneralNames);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #155                // Field requester:Lorg/bouncycastle/asn1/x509/GeneralNames;
       5: return

  public void setRequestPolicy(org.bouncycastle.asn1.x509.PolicyInformation);
    Code:
       0: aload_0
       1: getfield      #149                // Field initialInfo:Lorg/bouncycastle/asn1/dvcs/DVCSRequestInformation;
       4: ifnull        17
       7: new           #72                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #2                  // String cannot change request policy in existing DVCSRequestInformation
      13: invokespecial #157                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: putfield      #156                // Field requestPolicy:Lorg/bouncycastle/asn1/x509/PolicyInformation;
      22: return

  public void setDVCS(org.bouncycastle.asn1.x509.GeneralName);
    Code:
       0: aload_0
       1: new           #83                 // class org/bouncycastle/asn1/x509/GeneralNames
       4: dup
       5: aload_1
       6: invokespecial #179                // Method org/bouncycastle/asn1/x509/GeneralNames."<init>":(Lorg/bouncycastle/asn1/x509/GeneralName;)V
       9: invokevirtual #176                // Method setDVCS:(Lorg/bouncycastle/asn1/x509/GeneralNames;)V
      12: return

  public void setDVCS(org.bouncycastle.asn1.x509.GeneralNames);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #154                // Field dvcs:Lorg/bouncycastle/asn1/x509/GeneralNames;
       5: return

  public void setDataLocations(org.bouncycastle.asn1.x509.GeneralName);
    Code:
       0: aload_0
       1: new           #83                 // class org/bouncycastle/asn1/x509/GeneralNames
       4: dup
       5: aload_1
       6: invokespecial #179                // Method org/bouncycastle/asn1/x509/GeneralNames."<init>":(Lorg/bouncycastle/asn1/x509/GeneralName;)V
       9: invokevirtual #177                // Method setDataLocations:(Lorg/bouncycastle/asn1/x509/GeneralNames;)V
      12: return

  public void setDataLocations(org.bouncycastle.asn1.x509.GeneralNames);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #153                // Field dataLocations:Lorg/bouncycastle/asn1/x509/GeneralNames;
       5: return

  public void setExtensions(org.bouncycastle.asn1.x509.Extensions);
    Code:
       0: aload_0
       1: getfield      #149                // Field initialInfo:Lorg/bouncycastle/asn1/dvcs/DVCSRequestInformation;
       4: ifnull        17
       7: new           #72                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #1                  // String cannot change extensions in existing DVCSRequestInformation
      13: invokespecial #157                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: putfield      #152                // Field extensions:Lorg/bouncycastle/asn1/x509/Extensions;
      22: return
}
