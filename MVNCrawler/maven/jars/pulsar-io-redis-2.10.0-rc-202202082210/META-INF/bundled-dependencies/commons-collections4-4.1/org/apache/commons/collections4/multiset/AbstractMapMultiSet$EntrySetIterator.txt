Compiled from "AbstractMapMultiSet.java"
public class org.apache.commons.collections4.multiset.AbstractMapMultiSet$EntrySetIterator<E> implements java.util.Iterator<org.apache.commons.collections4.MultiSet$Entry<E>> {
  protected final org.apache.commons.collections4.multiset.AbstractMapMultiSet<E> parent;

  protected final java.util.Iterator<java.util.Map$Entry<E, org.apache.commons.collections4.multiset.AbstractMapMultiSet$MutableInteger>> decorated;

  protected org.apache.commons.collections4.MultiSet$Entry<E> last;

  protected boolean canRemove;

  protected org.apache.commons.collections4.multiset.AbstractMapMultiSet$EntrySetIterator(java.util.Iterator<java.util.Map$Entry<E, org.apache.commons.collections4.multiset.AbstractMapMultiSet$MutableInteger>>, org.apache.commons.collections4.multiset.AbstractMapMultiSet<E>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field last:Lorg/apache/commons/collections4/MultiSet$Entry;
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field canRemove:Z
      14: aload_0
      15: aload_1
      16: putfield      #4                  // Field decorated:Ljava/util/Iterator;
      19: aload_0
      20: aload_2
      21: putfield      #5                  // Field parent:Lorg/apache/commons/collections4/multiset/AbstractMapMultiSet;
      24: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #4                  // Field decorated:Ljava/util/Iterator;
       4: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
       9: ireturn

  public org.apache.commons.collections4.MultiSet$Entry<E> next();
    Code:
       0: aload_0
       1: new           #7                  // class org/apache/commons/collections4/multiset/AbstractMapMultiSet$MultiSetEntry
       4: dup
       5: aload_0
       6: getfield      #4                  // Field decorated:Ljava/util/Iterator;
       9: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      14: checkcast     #9                  // class java/util/Map$Entry
      17: invokespecial #10                 // Method org/apache/commons/collections4/multiset/AbstractMapMultiSet$MultiSetEntry."<init>":(Ljava/util/Map$Entry;)V
      20: putfield      #2                  // Field last:Lorg/apache/commons/collections4/MultiSet$Entry;
      23: aload_0
      24: iconst_1
      25: putfield      #3                  // Field canRemove:Z
      28: aload_0
      29: getfield      #2                  // Field last:Lorg/apache/commons/collections4/MultiSet$Entry;
      32: areturn

  public void remove();
    Code:
       0: aload_0
       1: getfield      #3                  // Field canRemove:Z
       4: ifne          17
       7: new           #11                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #12                 // String Iterator remove() can only be called once after next()
      13: invokespecial #13                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #4                  // Field decorated:Ljava/util/Iterator;
      21: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.remove:()V
      26: aload_0
      27: aconst_null
      28: putfield      #2                  // Field last:Lorg/apache/commons/collections4/MultiSet$Entry;
      31: aload_0
      32: iconst_0
      33: putfield      #3                  // Field canRemove:Z
      36: return

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method next:()Lorg/apache/commons/collections4/MultiSet$Entry;
       4: areturn
}
