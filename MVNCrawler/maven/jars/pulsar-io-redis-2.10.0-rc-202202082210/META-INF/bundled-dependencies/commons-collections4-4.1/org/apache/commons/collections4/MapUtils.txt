Compiled from "MapUtils.java"
public class org.apache.commons.collections4.MapUtils {
  public static final java.util.SortedMap EMPTY_SORTED_MAP;

  private static final java.lang.String INDENT_STRING;

  private org.apache.commons.collections4.MapUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <K, V> V getObject(java.util.Map<? super K, V>, K);
    Code:
       0: aload_0
       1: ifnull        12
       4: aload_0
       5: aload_1
       6: invokeinterface #2,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn
      12: aconst_null
      13: areturn

  public static <K> java.lang.String getString(java.util.Map<? super K, ?>, K);
    Code:
       0: aload_0
       1: ifnull        21
       4: aload_0
       5: aload_1
       6: invokeinterface #2,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: astore_2
      12: aload_2
      13: ifnull        21
      16: aload_2
      17: invokevirtual #3                  // Method java/lang/Object.toString:()Ljava/lang/String;
      20: areturn
      21: aconst_null
      22: areturn

  public static <K> java.lang.Boolean getBoolean(java.util.Map<? super K, ?>, K);
    Code:
       0: aload_0
       1: ifnull        72
       4: aload_0
       5: aload_1
       6: invokeinterface #2,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: astore_2
      12: aload_2
      13: ifnull        72
      16: aload_2
      17: instanceof    #4                  // class java/lang/Boolean
      20: ifeq          28
      23: aload_2
      24: checkcast     #4                  // class java/lang/Boolean
      27: areturn
      28: aload_2
      29: instanceof    #5                  // class java/lang/String
      32: ifeq          43
      35: aload_2
      36: checkcast     #5                  // class java/lang/String
      39: invokestatic  #6                  // Method java/lang/Boolean.valueOf:(Ljava/lang/String;)Ljava/lang/Boolean;
      42: areturn
      43: aload_2
      44: instanceof    #7                  // class java/lang/Number
      47: ifeq          72
      50: aload_2
      51: checkcast     #7                  // class java/lang/Number
      54: astore_3
      55: aload_3
      56: invokevirtual #8                  // Method java/lang/Number.intValue:()I
      59: ifeq          68
      62: getstatic     #9                  // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      65: goto          71
      68: getstatic     #10                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      71: areturn
      72: aconst_null
      73: areturn

  public static <K> java.lang.Number getNumber(java.util.Map<? super K, ?>, K);
    Code:
       0: aload_0
       1: ifnull        49
       4: aload_0
       5: aload_1
       6: invokeinterface #2,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: astore_2
      12: aload_2
      13: ifnull        49
      16: aload_2
      17: instanceof    #7                  // class java/lang/Number
      20: ifeq          28
      23: aload_2
      24: checkcast     #7                  // class java/lang/Number
      27: areturn
      28: aload_2
      29: instanceof    #5                  // class java/lang/String
      32: ifeq          49
      35: aload_2
      36: checkcast     #5                  // class java/lang/String
      39: astore_3
      40: invokestatic  #11                 // Method java/text/NumberFormat.getInstance:()Ljava/text/NumberFormat;
      43: aload_3
      44: invokevirtual #12                 // Method java/text/NumberFormat.parse:(Ljava/lang/String;)Ljava/lang/Number;
      47: areturn
      48: astore_3
      49: aconst_null
      50: areturn
    Exception table:
       from    to  target type
          35    47    48   Class java/text/ParseException

  public static <K> java.lang.Byte getByte(java.util.Map<? super K, ?>, K);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #14                 // Method getNumber:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Number;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_2
      13: instanceof    #15                 // class java/lang/Byte
      16: ifeq          24
      19: aload_2
      20: checkcast     #15                 // class java/lang/Byte
      23: areturn
      24: aload_2
      25: invokevirtual #16                 // Method java/lang/Number.byteValue:()B
      28: invokestatic  #17                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
      31: areturn

  public static <K> java.lang.Short getShort(java.util.Map<? super K, ?>, K);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #14                 // Method getNumber:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Number;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_2
      13: instanceof    #18                 // class java/lang/Short
      16: ifeq          24
      19: aload_2
      20: checkcast     #18                 // class java/lang/Short
      23: areturn
      24: aload_2
      25: invokevirtual #19                 // Method java/lang/Number.shortValue:()S
      28: invokestatic  #20                 // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
      31: areturn

  public static <K> java.lang.Integer getInteger(java.util.Map<? super K, ?>, K);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #14                 // Method getNumber:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Number;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_2
      13: instanceof    #21                 // class java/lang/Integer
      16: ifeq          24
      19: aload_2
      20: checkcast     #21                 // class java/lang/Integer
      23: areturn
      24: aload_2
      25: invokevirtual #8                  // Method java/lang/Number.intValue:()I
      28: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      31: areturn

  public static <K> java.lang.Long getLong(java.util.Map<? super K, ?>, K);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #14                 // Method getNumber:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Number;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_2
      13: instanceof    #23                 // class java/lang/Long
      16: ifeq          24
      19: aload_2
      20: checkcast     #23                 // class java/lang/Long
      23: areturn
      24: aload_2
      25: invokevirtual #24                 // Method java/lang/Number.longValue:()J
      28: invokestatic  #25                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      31: areturn

  public static <K> java.lang.Float getFloat(java.util.Map<? super K, ?>, K);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #14                 // Method getNumber:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Number;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_2
      13: instanceof    #26                 // class java/lang/Float
      16: ifeq          24
      19: aload_2
      20: checkcast     #26                 // class java/lang/Float
      23: areturn
      24: aload_2
      25: invokevirtual #27                 // Method java/lang/Number.floatValue:()F
      28: invokestatic  #28                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      31: areturn

  public static <K> java.lang.Double getDouble(java.util.Map<? super K, ?>, K);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #14                 // Method getNumber:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Number;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_2
      13: instanceof    #29                 // class java/lang/Double
      16: ifeq          24
      19: aload_2
      20: checkcast     #29                 // class java/lang/Double
      23: areturn
      24: aload_2
      25: invokevirtual #30                 // Method java/lang/Number.doubleValue:()D
      28: invokestatic  #31                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      31: areturn

  public static <K> java.util.Map<?, ?> getMap(java.util.Map<? super K, ?>, K);
    Code:
       0: aload_0
       1: ifnull        28
       4: aload_0
       5: aload_1
       6: invokeinterface #2,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: astore_2
      12: aload_2
      13: ifnull        28
      16: aload_2
      17: instanceof    #32                 // class java/util/Map
      20: ifeq          28
      23: aload_2
      24: checkcast     #32                 // class java/util/Map
      27: areturn
      28: aconst_null
      29: areturn

  public static <K, V> V getObject(java.util.Map<K, V>, K, V);
    Code:
       0: aload_0
       1: ifnull        18
       4: aload_0
       5: aload_1
       6: invokeinterface #2,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: astore_3
      12: aload_3
      13: ifnull        18
      16: aload_3
      17: areturn
      18: aload_2
      19: areturn

  public static <K> java.lang.String getString(java.util.Map<? super K, ?>, K, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #33                 // Method getString:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/String;
       5: astore_3
       6: aload_3
       7: ifnonnull     12
      10: aload_2
      11: astore_3
      12: aload_3
      13: areturn

  public static <K> java.lang.Boolean getBoolean(java.util.Map<? super K, ?>, K, java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #34                 // Method getBoolean:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Boolean;
       5: astore_3
       6: aload_3
       7: ifnonnull     12
      10: aload_2
      11: astore_3
      12: aload_3
      13: areturn

  public static <K> java.lang.Number getNumber(java.util.Map<? super K, ?>, K, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #14                 // Method getNumber:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Number;
       5: astore_3
       6: aload_3
       7: ifnonnull     12
      10: aload_2
      11: astore_3
      12: aload_3
      13: areturn

  public static <K> java.lang.Byte getByte(java.util.Map<? super K, ?>, K, java.lang.Byte);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #35                 // Method getByte:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Byte;
       5: astore_3
       6: aload_3
       7: ifnonnull     12
      10: aload_2
      11: astore_3
      12: aload_3
      13: areturn

  public static <K> java.lang.Short getShort(java.util.Map<? super K, ?>, K, java.lang.Short);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #36                 // Method getShort:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Short;
       5: astore_3
       6: aload_3
       7: ifnonnull     12
      10: aload_2
      11: astore_3
      12: aload_3
      13: areturn

  public static <K> java.lang.Integer getInteger(java.util.Map<? super K, ?>, K, java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #37                 // Method getInteger:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Integer;
       5: astore_3
       6: aload_3
       7: ifnonnull     12
      10: aload_2
      11: astore_3
      12: aload_3
      13: areturn

  public static <K> java.lang.Long getLong(java.util.Map<? super K, ?>, K, java.lang.Long);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #38                 // Method getLong:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Long;
       5: astore_3
       6: aload_3
       7: ifnonnull     12
      10: aload_2
      11: astore_3
      12: aload_3
      13: areturn

  public static <K> java.lang.Float getFloat(java.util.Map<? super K, ?>, K, java.lang.Float);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #39                 // Method getFloat:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Float;
       5: astore_3
       6: aload_3
       7: ifnonnull     12
      10: aload_2
      11: astore_3
      12: aload_3
      13: areturn

  public static <K> java.lang.Double getDouble(java.util.Map<? super K, ?>, K, java.lang.Double);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #40                 // Method getDouble:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Double;
       5: astore_3
       6: aload_3
       7: ifnonnull     12
      10: aload_2
      11: astore_3
      12: aload_3
      13: areturn

  public static <K> java.util.Map<?, ?> getMap(java.util.Map<? super K, ?>, K, java.util.Map<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #41                 // Method getMap:(Ljava/util/Map;Ljava/lang/Object;)Ljava/util/Map;
       5: astore_3
       6: aload_3
       7: ifnonnull     12
      10: aload_2
      11: astore_3
      12: aload_3
      13: areturn

  public static <K> boolean getBooleanValue(java.util.Map<? super K, ?>, K);
    Code:
       0: getstatic     #9                  // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
       3: aload_0
       4: aload_1
       5: invokestatic  #34                 // Method getBoolean:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Boolean;
       8: invokevirtual #42                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      11: ireturn

  public static <K> byte getByteValue(java.util.Map<? super K, ?>, K);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #35                 // Method getByte:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Byte;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: iconst_0
      11: ireturn
      12: aload_2
      13: invokevirtual #43                 // Method java/lang/Byte.byteValue:()B
      16: ireturn

  public static <K> short getShortValue(java.util.Map<? super K, ?>, K);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #36                 // Method getShort:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Short;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: iconst_0
      11: ireturn
      12: aload_2
      13: invokevirtual #44                 // Method java/lang/Short.shortValue:()S
      16: ireturn

  public static <K> int getIntValue(java.util.Map<? super K, ?>, K);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #37                 // Method getInteger:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Integer;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: iconst_0
      11: ireturn
      12: aload_2
      13: invokevirtual #45                 // Method java/lang/Integer.intValue:()I
      16: ireturn

  public static <K> long getLongValue(java.util.Map<? super K, ?>, K);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #38                 // Method getLong:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Long;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: lconst_0
      11: lreturn
      12: aload_2
      13: invokevirtual #46                 // Method java/lang/Long.longValue:()J
      16: lreturn

  public static <K> float getFloatValue(java.util.Map<? super K, ?>, K);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #39                 // Method getFloat:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Float;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: fconst_0
      11: freturn
      12: aload_2
      13: invokevirtual #47                 // Method java/lang/Float.floatValue:()F
      16: freturn

  public static <K> double getDoubleValue(java.util.Map<? super K, ?>, K);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #40                 // Method getDouble:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Double;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: dconst_0
      11: dreturn
      12: aload_2
      13: invokevirtual #48                 // Method java/lang/Double.doubleValue:()D
      16: dreturn

  public static <K> boolean getBooleanValue(java.util.Map<? super K, ?>, K, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #34                 // Method getBoolean:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Boolean;
       5: astore_3
       6: aload_3
       7: ifnonnull     12
      10: iload_2
      11: ireturn
      12: aload_3
      13: invokevirtual #49                 // Method java/lang/Boolean.booleanValue:()Z
      16: ireturn

  public static <K> byte getByteValue(java.util.Map<? super K, ?>, K, byte);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #35                 // Method getByte:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Byte;
       5: astore_3
       6: aload_3
       7: ifnonnull     12
      10: iload_2
      11: ireturn
      12: aload_3
      13: invokevirtual #43                 // Method java/lang/Byte.byteValue:()B
      16: ireturn

  public static <K> short getShortValue(java.util.Map<? super K, ?>, K, short);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #36                 // Method getShort:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Short;
       5: astore_3
       6: aload_3
       7: ifnonnull     12
      10: iload_2
      11: ireturn
      12: aload_3
      13: invokevirtual #44                 // Method java/lang/Short.shortValue:()S
      16: ireturn

  public static <K> int getIntValue(java.util.Map<? super K, ?>, K, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #37                 // Method getInteger:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Integer;
       5: astore_3
       6: aload_3
       7: ifnonnull     12
      10: iload_2
      11: ireturn
      12: aload_3
      13: invokevirtual #45                 // Method java/lang/Integer.intValue:()I
      16: ireturn

  public static <K> long getLongValue(java.util.Map<? super K, ?>, K, long);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #38                 // Method getLong:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Long;
       5: astore        4
       7: aload         4
       9: ifnonnull     14
      12: lload_2
      13: lreturn
      14: aload         4
      16: invokevirtual #46                 // Method java/lang/Long.longValue:()J
      19: lreturn

  public static <K> float getFloatValue(java.util.Map<? super K, ?>, K, float);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #39                 // Method getFloat:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Float;
       5: astore_3
       6: aload_3
       7: ifnonnull     12
      10: fload_2
      11: freturn
      12: aload_3
      13: invokevirtual #47                 // Method java/lang/Float.floatValue:()F
      16: freturn

  public static <K> double getDoubleValue(java.util.Map<? super K, ?>, K, double);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #40                 // Method getDouble:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Double;
       5: astore        4
       7: aload         4
       9: ifnonnull     14
      12: dload_2
      13: dreturn
      14: aload         4
      16: invokevirtual #48                 // Method java/lang/Double.doubleValue:()D
      19: dreturn

  public static <K, V> java.util.Properties toProperties(java.util.Map<K, V>);
    Code:
       0: new           #50                 // class java/util/Properties
       3: dup
       4: invokespecial #51                 // Method java/util/Properties."<init>":()V
       7: astore_1
       8: aload_0
       9: ifnull        76
      12: aload_0
      13: invokeinterface #52,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      18: invokeinterface #53,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      23: astore_2
      24: aload_2
      25: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          76
      33: aload_2
      34: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #56                 // class java/util/Map$Entry
      42: astore_3
      43: aload_3
      44: astore        4
      46: aload         4
      48: invokeinterface #57,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      53: astore        5
      55: aload         4
      57: invokeinterface #58,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      62: astore        6
      64: aload_1
      65: aload         5
      67: aload         6
      69: invokevirtual #59                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      72: pop
      73: goto          24
      76: aload_1
      77: areturn

  public static java.util.Map<java.lang.String, java.lang.Object> toMap(java.util.ResourceBundle);
    Code:
       0: aload_0
       1: invokevirtual #60                 // Method java/util/ResourceBundle.getKeys:()Ljava/util/Enumeration;
       4: astore_1
       5: new           #61                 // class java/util/HashMap
       8: dup
       9: invokespecial #62                 // Method java/util/HashMap."<init>":()V
      12: astore_2
      13: aload_1
      14: invokeinterface #63,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      19: ifeq          52
      22: aload_1
      23: invokeinterface #64,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      28: checkcast     #5                  // class java/lang/String
      31: astore_3
      32: aload_0
      33: aload_3
      34: invokevirtual #65                 // Method java/util/ResourceBundle.getObject:(Ljava/lang/String;)Ljava/lang/Object;
      37: astore        4
      39: aload_2
      40: aload_3
      41: aload         4
      43: invokeinterface #66,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      48: pop
      49: goto          13
      52: aload_2
      53: areturn

  public static void verbosePrint(java.io.PrintStream, java.lang.Object, java.util.Map<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: new           #67                 // class java/util/ArrayDeque
       6: dup
       7: invokespecial #68                 // Method java/util/ArrayDeque."<init>":()V
      10: iconst_0
      11: invokestatic  #69                 // Method verbosePrintInternal:(Ljava/io/PrintStream;Ljava/lang/Object;Ljava/util/Map;Ljava/util/Deque;Z)V
      14: return

  public static void debugPrint(java.io.PrintStream, java.lang.Object, java.util.Map<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: new           #67                 // class java/util/ArrayDeque
       6: dup
       7: invokespecial #68                 // Method java/util/ArrayDeque."<init>":()V
      10: iconst_1
      11: invokestatic  #69                 // Method verbosePrintInternal:(Ljava/io/PrintStream;Ljava/lang/Object;Ljava/util/Map;Ljava/util/Deque;Z)V
      14: return

  private static void verbosePrintInternal(java.io.PrintStream, java.lang.Object, java.util.Map<?, ?>, java.util.Deque<java.util.Map<?, ?>>, boolean);
    Code:
       0: aload_0
       1: aload_3
       2: invokeinterface #70,  1           // InterfaceMethod java/util/Deque.size:()I
       7: invokestatic  #71                 // Method printIndent:(Ljava/io/PrintStream;I)V
      10: aload_2
      11: ifnonnull     36
      14: aload_1
      15: ifnull        29
      18: aload_0
      19: aload_1
      20: invokevirtual #72                 // Method java/io/PrintStream.print:(Ljava/lang/Object;)V
      23: aload_0
      24: ldc           #73                 // String  =
      26: invokevirtual #74                 // Method java/io/PrintStream.print:(Ljava/lang/String;)V
      29: aload_0
      30: ldc           #75                 // String null
      32: invokevirtual #76                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      35: return
      36: aload_1
      37: ifnull        51
      40: aload_0
      41: aload_1
      42: invokevirtual #72                 // Method java/io/PrintStream.print:(Ljava/lang/Object;)V
      45: aload_0
      46: ldc           #73                 // String  =
      48: invokevirtual #76                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      51: aload_0
      52: aload_3
      53: invokeinterface #70,  1           // InterfaceMethod java/util/Deque.size:()I
      58: invokestatic  #71                 // Method printIndent:(Ljava/io/PrintStream;I)V
      61: aload_0
      62: ldc           #77                 // String {
      64: invokevirtual #76                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      67: aload_3
      68: aload_2
      69: invokeinterface #78,  2           // InterfaceMethod java/util/Deque.addLast:(Ljava/lang/Object;)V
      74: aload_2
      75: invokeinterface #52,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      80: invokeinterface #53,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      85: astore        5
      87: aload         5
      89: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      94: ifeq          321
      97: aload         5
      99: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     104: checkcast     #56                 // class java/util/Map$Entry
     107: astore        6
     109: aload         6
     111: invokeinterface #57,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     116: astore        7
     118: aload         6
     120: invokeinterface #58,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     125: astore        8
     127: aload         8
     129: instanceof    #32                 // class java/util/Map
     132: ifeq          173
     135: aload_3
     136: aload         8
     138: invokeinterface #79,  2           // InterfaceMethod java/util/Deque.contains:(Ljava/lang/Object;)Z
     143: ifne          173
     146: aload_0
     147: aload         7
     149: ifnonnull     157
     152: ldc           #75                 // String null
     154: goto          159
     157: aload         7
     159: aload         8
     161: checkcast     #32                 // class java/util/Map
     164: aload_3
     165: iload         4
     167: invokestatic  #69                 // Method verbosePrintInternal:(Ljava/io/PrintStream;Ljava/lang/Object;Ljava/util/Map;Ljava/util/Deque;Z)V
     170: goto          318
     173: aload_0
     174: aload_3
     175: invokeinterface #70,  1           // InterfaceMethod java/util/Deque.size:()I
     180: invokestatic  #71                 // Method printIndent:(Ljava/io/PrintStream;I)V
     183: aload_0
     184: aload         7
     186: invokevirtual #72                 // Method java/io/PrintStream.print:(Ljava/lang/Object;)V
     189: aload_0
     190: ldc           #73                 // String  =
     192: invokevirtual #74                 // Method java/io/PrintStream.print:(Ljava/lang/String;)V
     195: aload_3
     196: aload         8
     198: invokestatic  #80                 // Method org/apache/commons/collections4/PredicateUtils.equalPredicate:(Ljava/lang/Object;)Lorg/apache/commons/collections4/Predicate;
     201: invokestatic  #81                 // Method org/apache/commons/collections4/IterableUtils.indexOf:(Ljava/lang/Iterable;Lorg/apache/commons/collections4/Predicate;)I
     204: istore        9
     206: iload         9
     208: iconst_m1
     209: if_icmpne     221
     212: aload_0
     213: aload         8
     215: invokevirtual #72                 // Method java/io/PrintStream.print:(Ljava/lang/Object;)V
     218: goto          283
     221: aload_3
     222: invokeinterface #70,  1           // InterfaceMethod java/util/Deque.size:()I
     227: iconst_1
     228: isub
     229: iload         9
     231: if_icmpne     243
     234: aload_0
     235: ldc           #82                 // String (this Map)
     237: invokevirtual #74                 // Method java/io/PrintStream.print:(Ljava/lang/String;)V
     240: goto          283
     243: aload_0
     244: new           #83                 // class java/lang/StringBuilder
     247: dup
     248: invokespecial #84                 // Method java/lang/StringBuilder."<init>":()V
     251: ldc           #85                 // String (ancestor[
     253: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     256: aload_3
     257: invokeinterface #70,  1           // InterfaceMethod java/util/Deque.size:()I
     262: iconst_1
     263: isub
     264: iload         9
     266: isub
     267: iconst_1
     268: isub
     269: invokevirtual #87                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     272: ldc           #88                 // String ] Map)
     274: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     277: invokevirtual #89                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     280: invokevirtual #74                 // Method java/io/PrintStream.print:(Ljava/lang/String;)V
     283: iload         4
     285: ifeq          314
     288: aload         8
     290: ifnull        314
     293: aload_0
     294: bipush        32
     296: invokevirtual #90                 // Method java/io/PrintStream.print:(C)V
     299: aload_0
     300: aload         8
     302: invokevirtual #91                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     305: invokevirtual #92                 // Method java/lang/Class.getName:()Ljava/lang/String;
     308: invokevirtual #76                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     311: goto          318
     314: aload_0
     315: invokevirtual #93                 // Method java/io/PrintStream.println:()V
     318: goto          87
     321: aload_3
     322: invokeinterface #94,  1           // InterfaceMethod java/util/Deque.removeLast:()Ljava/lang/Object;
     327: pop
     328: aload_0
     329: aload_3
     330: invokeinterface #70,  1           // InterfaceMethod java/util/Deque.size:()I
     335: invokestatic  #71                 // Method printIndent:(Ljava/io/PrintStream;I)V
     338: aload_0
     339: iload         4
     341: ifeq          372
     344: new           #83                 // class java/lang/StringBuilder
     347: dup
     348: invokespecial #84                 // Method java/lang/StringBuilder."<init>":()V
     351: ldc           #95                 // String }
     353: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     356: aload_2
     357: invokevirtual #91                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     360: invokevirtual #92                 // Method java/lang/Class.getName:()Ljava/lang/String;
     363: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     366: invokevirtual #89                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     369: goto          374
     372: ldc           #96                 // String }
     374: invokevirtual #76                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     377: return

  private static void printIndent(java.io.PrintStream, int);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: iload_1
       4: if_icmpge     19
       7: aload_0
       8: ldc           #97                 // String
      10: invokevirtual #74                 // Method java/io/PrintStream.print:(Ljava/lang/String;)V
      13: iinc          2, 1
      16: goto          2
      19: return

  public static <K, V> java.util.Map<V, K> invertMap(java.util.Map<K, V>);
    Code:
       0: new           #61                 // class java/util/HashMap
       3: dup
       4: aload_0
       5: invokeinterface #98,  1           // InterfaceMethod java/util/Map.size:()I
      10: invokespecial #99                 // Method java/util/HashMap."<init>":(I)V
      13: astore_1
      14: aload_0
      15: invokeinterface #52,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      20: invokeinterface #53,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      25: astore_2
      26: aload_2
      27: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          67
      35: aload_2
      36: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #56                 // class java/util/Map$Entry
      44: astore_3
      45: aload_1
      46: aload_3
      47: invokeinterface #58,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      52: aload_3
      53: invokeinterface #57,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      58: invokeinterface #66,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      63: pop
      64: goto          26
      67: aload_1
      68: areturn

  public static <K> void safeAddToMap(java.util.Map<? super K, java.lang.Object>, K, java.lang.Object) throws java.lang.NullPointerException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: ifnonnull     11
       6: ldc           #100                // String
       8: goto          12
      11: aload_2
      12: invokeinterface #66,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: pop
      18: return

  public static <K, V> java.util.Map<K, V> putAll(java.util.Map<K, V>, java.lang.Object[]);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #101                // class java/lang/NullPointerException
       7: dup
       8: ldc           #102                // String The map must not be null
      10: invokespecial #103                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: ifnull        23
      18: aload_1
      19: arraylength
      20: ifne          25
      23: aload_0
      24: areturn
      25: aload_1
      26: iconst_0
      27: aaload
      28: astore_2
      29: aload_2
      30: instanceof    #56                 // class java/util/Map$Entry
      33: ifeq          95
      36: aload_1
      37: astore_3
      38: aload_3
      39: arraylength
      40: istore        4
      42: iconst_0
      43: istore        5
      45: iload         5
      47: iload         4
      49: if_icmpge     92
      52: aload_3
      53: iload         5
      55: aaload
      56: astore        6
      58: aload         6
      60: checkcast     #56                 // class java/util/Map$Entry
      63: astore        7
      65: aload_0
      66: aload         7
      68: invokeinterface #57,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      73: aload         7
      75: invokeinterface #58,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      80: invokeinterface #66,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      85: pop
      86: iinc          5, 1
      89: goto          45
      92: goto          282
      95: aload_2
      96: instanceof    #104                // class org/apache/commons/collections4/KeyValue
      99: ifeq          161
     102: aload_1
     103: astore_3
     104: aload_3
     105: arraylength
     106: istore        4
     108: iconst_0
     109: istore        5
     111: iload         5
     113: iload         4
     115: if_icmpge     158
     118: aload_3
     119: iload         5
     121: aaload
     122: astore        6
     124: aload         6
     126: checkcast     #104                // class org/apache/commons/collections4/KeyValue
     129: astore        7
     131: aload_0
     132: aload         7
     134: invokeinterface #105,  1          // InterfaceMethod org/apache/commons/collections4/KeyValue.getKey:()Ljava/lang/Object;
     139: aload         7
     141: invokeinterface #106,  1          // InterfaceMethod org/apache/commons/collections4/KeyValue.getValue:()Ljava/lang/Object;
     146: invokeinterface #66,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     151: pop
     152: iinc          5, 1
     155: goto          111
     158: goto          282
     161: aload_2
     162: instanceof    #107                // class "[Ljava/lang/Object;"
     165: ifeq          250
     168: iconst_0
     169: istore_3
     170: iload_3
     171: aload_1
     172: arraylength
     173: if_icmpge     247
     176: aload_1
     177: iload_3
     178: aaload
     179: checkcast     #107                // class "[Ljava/lang/Object;"
     182: checkcast     #107                // class "[Ljava/lang/Object;"
     185: astore        4
     187: aload         4
     189: ifnull        199
     192: aload         4
     194: arraylength
     195: iconst_2
     196: if_icmpge     226
     199: new           #108                // class java/lang/IllegalArgumentException
     202: dup
     203: new           #83                 // class java/lang/StringBuilder
     206: dup
     207: invokespecial #84                 // Method java/lang/StringBuilder."<init>":()V
     210: ldc           #109                // String Invalid array element:
     212: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     215: iload_3
     216: invokevirtual #87                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     219: invokevirtual #89                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     222: invokespecial #110                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     225: athrow
     226: aload_0
     227: aload         4
     229: iconst_0
     230: aaload
     231: aload         4
     233: iconst_1
     234: aaload
     235: invokeinterface #66,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     240: pop
     241: iinc          3, 1
     244: goto          170
     247: goto          282
     250: iconst_0
     251: istore_3
     252: iload_3
     253: aload_1
     254: arraylength
     255: iconst_1
     256: isub
     257: if_icmpge     282
     260: aload_0
     261: aload_1
     262: iload_3
     263: iinc          3, 1
     266: aaload
     267: aload_1
     268: iload_3
     269: iinc          3, 1
     272: aaload
     273: invokeinterface #66,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     278: pop
     279: goto          252
     282: aload_0
     283: areturn

  public static <K, V> java.util.Map<K, V> emptyIfNull(java.util.Map<K, V>);
    Code:
       0: aload_0
       1: ifnonnull     10
       4: invokestatic  #111                // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       7: goto          11
      10: aload_0
      11: areturn

  public static boolean isEmpty(java.util.Map<?, ?>);
    Code:
       0: aload_0
       1: ifnull        13
       4: aload_0
       5: invokeinterface #112,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
      10: ifeq          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public static boolean isNotEmpty(java.util.Map<?, ?>);
    Code:
       0: aload_0
       1: invokestatic  #113                // Method isEmpty:(Ljava/util/Map;)Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public static <K, V> java.util.Map<K, V> synchronizedMap(java.util.Map<K, V>);
    Code:
       0: aload_0
       1: invokestatic  #114                // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
       4: areturn

  public static <K, V> java.util.Map<K, V> unmodifiableMap(java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: invokestatic  #115                // Method org/apache/commons/collections4/map/UnmodifiableMap.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       4: areturn

  public static <K, V> org.apache.commons.collections4.IterableMap<K, V> predicatedMap(java.util.Map<K, V>, org.apache.commons.collections4.Predicate<? super K>, org.apache.commons.collections4.Predicate<? super V>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #116                // Method org/apache/commons/collections4/map/PredicatedMap.predicatedMap:(Ljava/util/Map;Lorg/apache/commons/collections4/Predicate;Lorg/apache/commons/collections4/Predicate;)Lorg/apache/commons/collections4/map/PredicatedMap;
       6: areturn

  public static <K, V> org.apache.commons.collections4.IterableMap<K, V> transformedMap(java.util.Map<K, V>, org.apache.commons.collections4.Transformer<? super K, ? extends K>, org.apache.commons.collections4.Transformer<? super V, ? extends V>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #117                // Method org/apache/commons/collections4/map/TransformedMap.transformingMap:(Ljava/util/Map;Lorg/apache/commons/collections4/Transformer;Lorg/apache/commons/collections4/Transformer;)Lorg/apache/commons/collections4/map/TransformedMap;
       6: areturn

  public static <K, V> org.apache.commons.collections4.IterableMap<K, V> fixedSizeMap(java.util.Map<K, V>);
    Code:
       0: aload_0
       1: invokestatic  #118                // Method org/apache/commons/collections4/map/FixedSizeMap.fixedSizeMap:(Ljava/util/Map;)Lorg/apache/commons/collections4/map/FixedSizeMap;
       4: areturn

  public static <K, V> org.apache.commons.collections4.IterableMap<K, V> lazyMap(java.util.Map<K, V>, org.apache.commons.collections4.Factory<? extends V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #119                // Method org/apache/commons/collections4/map/LazyMap.lazyMap:(Ljava/util/Map;Lorg/apache/commons/collections4/Factory;)Lorg/apache/commons/collections4/map/LazyMap;
       5: areturn

  public static <K, V> org.apache.commons.collections4.IterableMap<K, V> lazyMap(java.util.Map<K, V>, org.apache.commons.collections4.Transformer<? super K, ? extends V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #120                // Method org/apache/commons/collections4/map/LazyMap.lazyMap:(Ljava/util/Map;Lorg/apache/commons/collections4/Transformer;)Lorg/apache/commons/collections4/map/LazyMap;
       5: areturn

  public static <K, V> org.apache.commons.collections4.OrderedMap<K, V> orderedMap(java.util.Map<K, V>);
    Code:
       0: aload_0
       1: invokestatic  #121                // Method org/apache/commons/collections4/map/ListOrderedMap.listOrderedMap:(Ljava/util/Map;)Lorg/apache/commons/collections4/map/ListOrderedMap;
       4: areturn

  public static <K, V> org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(java.util.Map<K, ? super java.util.Collection<V>>);
    Code:
       0: aload_0
       1: invokestatic  #122                // Method org/apache/commons/collections4/map/MultiValueMap.multiValueMap:(Ljava/util/Map;)Lorg/apache/commons/collections4/map/MultiValueMap;
       4: areturn

  public static <K, V, C extends java.util.Collection<V>> org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(java.util.Map<K, C>, java.lang.Class<C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #123                // Method org/apache/commons/collections4/map/MultiValueMap.multiValueMap:(Ljava/util/Map;Ljava/lang/Class;)Lorg/apache/commons/collections4/map/MultiValueMap;
       5: areturn

  public static <K, V, C extends java.util.Collection<V>> org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(java.util.Map<K, C>, org.apache.commons.collections4.Factory<C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #124                // Method org/apache/commons/collections4/map/MultiValueMap.multiValueMap:(Ljava/util/Map;Lorg/apache/commons/collections4/Factory;)Lorg/apache/commons/collections4/map/MultiValueMap;
       5: areturn

  public static <K, V> java.util.SortedMap<K, V> synchronizedSortedMap(java.util.SortedMap<K, V>);
    Code:
       0: aload_0
       1: invokestatic  #125                // Method java/util/Collections.synchronizedSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;
       4: areturn

  public static <K, V> java.util.SortedMap<K, V> unmodifiableSortedMap(java.util.SortedMap<K, ? extends V>);
    Code:
       0: aload_0
       1: invokestatic  #126                // Method org/apache/commons/collections4/map/UnmodifiableSortedMap.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;
       4: areturn

  public static <K, V> java.util.SortedMap<K, V> predicatedSortedMap(java.util.SortedMap<K, V>, org.apache.commons.collections4.Predicate<? super K>, org.apache.commons.collections4.Predicate<? super V>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #127                // Method org/apache/commons/collections4/map/PredicatedSortedMap.predicatedSortedMap:(Ljava/util/SortedMap;Lorg/apache/commons/collections4/Predicate;Lorg/apache/commons/collections4/Predicate;)Lorg/apache/commons/collections4/map/PredicatedSortedMap;
       6: areturn

  public static <K, V> java.util.SortedMap<K, V> transformedSortedMap(java.util.SortedMap<K, V>, org.apache.commons.collections4.Transformer<? super K, ? extends K>, org.apache.commons.collections4.Transformer<? super V, ? extends V>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #128                // Method org/apache/commons/collections4/map/TransformedSortedMap.transformingSortedMap:(Ljava/util/SortedMap;Lorg/apache/commons/collections4/Transformer;Lorg/apache/commons/collections4/Transformer;)Lorg/apache/commons/collections4/map/TransformedSortedMap;
       6: areturn

  public static <K, V> java.util.SortedMap<K, V> fixedSizeSortedMap(java.util.SortedMap<K, V>);
    Code:
       0: aload_0
       1: invokestatic  #129                // Method org/apache/commons/collections4/map/FixedSizeSortedMap.fixedSizeSortedMap:(Ljava/util/SortedMap;)Lorg/apache/commons/collections4/map/FixedSizeSortedMap;
       4: areturn

  public static <K, V> java.util.SortedMap<K, V> lazySortedMap(java.util.SortedMap<K, V>, org.apache.commons.collections4.Factory<? extends V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #130                // Method org/apache/commons/collections4/map/LazySortedMap.lazySortedMap:(Ljava/util/SortedMap;Lorg/apache/commons/collections4/Factory;)Lorg/apache/commons/collections4/map/LazySortedMap;
       5: areturn

  public static <K, V> java.util.SortedMap<K, V> lazySortedMap(java.util.SortedMap<K, V>, org.apache.commons.collections4.Transformer<? super K, ? extends V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #131                // Method org/apache/commons/collections4/map/LazySortedMap.lazySortedMap:(Ljava/util/SortedMap;Lorg/apache/commons/collections4/Transformer;)Lorg/apache/commons/collections4/map/LazySortedMap;
       5: areturn

  public static <K, V> void populateMap(java.util.Map<K, V>, java.lang.Iterable<? extends V>, org.apache.commons.collections4.Transformer<V, K>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #132                // Method org/apache/commons/collections4/TransformerUtils.nopTransformer:()Lorg/apache/commons/collections4/Transformer;
       6: invokestatic  #133                // Method populateMap:(Ljava/util/Map;Ljava/lang/Iterable;Lorg/apache/commons/collections4/Transformer;Lorg/apache/commons/collections4/Transformer;)V
       9: return

  public static <K, V, E> void populateMap(java.util.Map<K, V>, java.lang.Iterable<? extends E>, org.apache.commons.collections4.Transformer<E, K>, org.apache.commons.collections4.Transformer<E, V>);
    Code:
       0: aload_1
       1: invokeinterface #134,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: astore        4
       8: aload         4
      10: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          53
      18: aload         4
      20: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: astore        5
      27: aload_0
      28: aload_2
      29: aload         5
      31: invokeinterface #135,  2          // InterfaceMethod org/apache/commons/collections4/Transformer.transform:(Ljava/lang/Object;)Ljava/lang/Object;
      36: aload_3
      37: aload         5
      39: invokeinterface #135,  2          // InterfaceMethod org/apache/commons/collections4/Transformer.transform:(Ljava/lang/Object;)Ljava/lang/Object;
      44: invokeinterface #66,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: goto          8
      53: return

  public static <K, V> void populateMap(org.apache.commons.collections4.MultiMap<K, V>, java.lang.Iterable<? extends V>, org.apache.commons.collections4.Transformer<V, K>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #132                // Method org/apache/commons/collections4/TransformerUtils.nopTransformer:()Lorg/apache/commons/collections4/Transformer;
       6: invokestatic  #136                // Method populateMap:(Lorg/apache/commons/collections4/MultiMap;Ljava/lang/Iterable;Lorg/apache/commons/collections4/Transformer;Lorg/apache/commons/collections4/Transformer;)V
       9: return

  public static <K, V, E> void populateMap(org.apache.commons.collections4.MultiMap<K, V>, java.lang.Iterable<? extends E>, org.apache.commons.collections4.Transformer<E, K>, org.apache.commons.collections4.Transformer<E, V>);
    Code:
       0: aload_1
       1: invokeinterface #134,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: astore        4
       8: aload         4
      10: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          53
      18: aload         4
      20: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: astore        5
      27: aload_0
      28: aload_2
      29: aload         5
      31: invokeinterface #135,  2          // InterfaceMethod org/apache/commons/collections4/Transformer.transform:(Ljava/lang/Object;)Ljava/lang/Object;
      36: aload_3
      37: aload         5
      39: invokeinterface #135,  2          // InterfaceMethod org/apache/commons/collections4/Transformer.transform:(Ljava/lang/Object;)Ljava/lang/Object;
      44: invokeinterface #137,  3          // InterfaceMethod org/apache/commons/collections4/MultiMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: goto          8
      53: return

  public static <K, V> org.apache.commons.collections4.IterableMap<K, V> iterableMap(java.util.Map<K, V>);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #101                // class java/lang/NullPointerException
       7: dup
       8: ldc           #138                // String Map must not be null
      10: invokespecial #103                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: instanceof    #139                // class org/apache/commons/collections4/IterableMap
      18: ifeq          28
      21: aload_0
      22: checkcast     #139                // class org/apache/commons/collections4/IterableMap
      25: goto          36
      28: new           #140                // class org/apache/commons/collections4/MapUtils$1
      31: dup
      32: aload_0
      33: invokespecial #141                // Method org/apache/commons/collections4/MapUtils$1."<init>":(Ljava/util/Map;)V
      36: areturn

  public static <K, V> org.apache.commons.collections4.IterableSortedMap<K, V> iterableSortedMap(java.util.SortedMap<K, V>);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #101                // class java/lang/NullPointerException
       7: dup
       8: ldc           #138                // String Map must not be null
      10: invokespecial #103                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: instanceof    #142                // class org/apache/commons/collections4/IterableSortedMap
      18: ifeq          28
      21: aload_0
      22: checkcast     #142                // class org/apache/commons/collections4/IterableSortedMap
      25: goto          36
      28: new           #143                // class org/apache/commons/collections4/MapUtils$2
      31: dup
      32: aload_0
      33: invokespecial #144                // Method org/apache/commons/collections4/MapUtils$2."<init>":(Ljava/util/SortedMap;)V
      36: areturn

  static {};
    Code:
       0: new           #145                // class java/util/TreeMap
       3: dup
       4: invokespecial #146                // Method java/util/TreeMap."<init>":()V
       7: invokestatic  #126                // Method org/apache/commons/collections4/map/UnmodifiableSortedMap.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;
      10: putstatic     #147                // Field EMPTY_SORTED_MAP:Ljava/util/SortedMap;
      13: return
}
