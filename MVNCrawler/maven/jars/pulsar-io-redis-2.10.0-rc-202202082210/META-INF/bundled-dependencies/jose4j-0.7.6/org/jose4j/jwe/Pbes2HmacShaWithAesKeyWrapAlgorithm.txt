Compiled from "Pbes2HmacShaWithAesKeyWrapAlgorithm.java"
public class org.jose4j.jwe.Pbes2HmacShaWithAesKeyWrapAlgorithm extends org.jose4j.jwa.AlgorithmInfo implements org.jose4j.jwe.KeyManagementAlgorithm {
  private static final byte[] ZERO_BYTE;

  private org.jose4j.jwe.AesKeyWrapManagementAlgorithm keyWrap;

  private org.jose4j.jwe.ContentEncryptionKeyDescriptor keyWrapKeyDescriptor;

  private org.jose4j.jwe.kdf.PasswordBasedKeyDerivationFunction2 pbkdf2;

  private long defaultIterationCount;

  private int defaultSaltByteLength;

  public org.jose4j.jwe.Pbes2HmacShaWithAesKeyWrapAlgorithm(java.lang.String, java.lang.String, org.jose4j.jwe.AesKeyWrapManagementAlgorithm);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jose4j/jwa/AlgorithmInfo."<init>":()V
       4: aload_0
       5: ldc2_w        #2                  // long 8192l
       8: putfield      #4                  // Field defaultIterationCount:J
      11: aload_0
      12: bipush        12
      14: putfield      #5                  // Field defaultSaltByteLength:I
      17: aload_0
      18: aload_1
      19: invokevirtual #6                  // Method setAlgorithmIdentifier:(Ljava/lang/String;)V
      22: aload_0
      23: ldc           #7                  // String n/a
      25: invokevirtual #8                  // Method setJavaAlgorithm:(Ljava/lang/String;)V
      28: aload_0
      29: new           #9                  // class org/jose4j/jwe/kdf/PasswordBasedKeyDerivationFunction2
      32: dup
      33: aload_2
      34: invokespecial #10                 // Method org/jose4j/jwe/kdf/PasswordBasedKeyDerivationFunction2."<init>":(Ljava/lang/String;)V
      37: putfield      #11                 // Field pbkdf2:Lorg/jose4j/jwe/kdf/PasswordBasedKeyDerivationFunction2;
      40: aload_0
      41: getstatic     #12                 // Field org/jose4j/keys/KeyPersuasion.SYMMETRIC:Lorg/jose4j/keys/KeyPersuasion;
      44: invokevirtual #13                 // Method setKeyPersuasion:(Lorg/jose4j/keys/KeyPersuasion;)V
      47: aload_0
      48: ldc           #14                 // String PBKDF2
      50: invokevirtual #15                 // Method setKeyType:(Ljava/lang/String;)V
      53: aload_0
      54: aload_3
      55: putfield      #16                 // Field keyWrap:Lorg/jose4j/jwe/AesKeyWrapManagementAlgorithm;
      58: aload_0
      59: new           #17                 // class org/jose4j/jwe/ContentEncryptionKeyDescriptor
      62: dup
      63: aload_0
      64: getfield      #16                 // Field keyWrap:Lorg/jose4j/jwe/AesKeyWrapManagementAlgorithm;
      67: invokevirtual #18                 // Method org/jose4j/jwe/AesKeyWrapManagementAlgorithm.getKeyByteLength:()I
      70: ldc           #19                 // String AES
      72: invokespecial #20                 // Method org/jose4j/jwe/ContentEncryptionKeyDescriptor."<init>":(ILjava/lang/String;)V
      75: putfield      #21                 // Field keyWrapKeyDescriptor:Lorg/jose4j/jwe/ContentEncryptionKeyDescriptor;
      78: return

  public org.jose4j.jwe.ContentEncryptionKeys manageForEncrypt(java.security.Key, org.jose4j.jwe.ContentEncryptionKeyDescriptor, org.jose4j.jwx.Headers, byte[], org.jose4j.jca.ProviderContext) throws org.jose4j.lang.JoseException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: aload         5
       5: invokevirtual #22                 // Method deriveForEncrypt:(Ljava/security/Key;Lorg/jose4j/jwx/Headers;Lorg/jose4j/jca/ProviderContext;)Ljava/security/Key;
       8: astore        6
      10: aload_0
      11: getfield      #16                 // Field keyWrap:Lorg/jose4j/jwe/AesKeyWrapManagementAlgorithm;
      14: aload         6
      16: aload_2
      17: aload_3
      18: aload         4
      20: aload         5
      22: invokevirtual #23                 // Method org/jose4j/jwe/AesKeyWrapManagementAlgorithm.manageForEncrypt:(Ljava/security/Key;Lorg/jose4j/jwe/ContentEncryptionKeyDescriptor;Lorg/jose4j/jwx/Headers;[BLorg/jose4j/jca/ProviderContext;)Lorg/jose4j/jwe/ContentEncryptionKeys;
      25: areturn

  protected java.security.Key deriveForEncrypt(java.security.Key, org.jose4j.jwx.Headers, org.jose4j.jca.ProviderContext) throws org.jose4j.lang.JoseException;
    Code:
       0: aload_2
       1: ldc           #24                 // String p2c
       3: invokevirtual #25                 // Method org/jose4j/jwx/Headers.getLongHeaderValue:(Ljava/lang/String;)Ljava/lang/Long;
       6: astore        4
       8: aload         4
      10: ifnonnull     30
      13: aload_0
      14: getfield      #4                  // Field defaultIterationCount:J
      17: invokestatic  #26                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      20: astore        4
      22: aload_2
      23: ldc           #24                 // String p2c
      25: aload         4
      27: invokevirtual #27                 // Method org/jose4j/jwx/Headers.setObjectHeaderValue:(Ljava/lang/String;Ljava/lang/Object;)V
      30: aload_2
      31: ldc           #28                 // String p2s
      33: invokevirtual #29                 // Method org/jose4j/jwx/Headers.getStringHeaderValue:(Ljava/lang/String;)Ljava/lang/String;
      36: astore        5
      38: new           #30                 // class org/jose4j/base64url/Base64Url
      41: dup
      42: invokespecial #31                 // Method org/jose4j/base64url/Base64Url."<init>":()V
      45: astore        7
      47: aload         5
      49: ifnonnull     85
      52: aload_0
      53: getfield      #5                  // Field defaultSaltByteLength:I
      56: aload_3
      57: invokevirtual #32                 // Method org/jose4j/jca/ProviderContext.getSecureRandom:()Ljava/security/SecureRandom;
      60: invokestatic  #33                 // Method org/jose4j/lang/ByteUtil.randomBytes:(ILjava/security/SecureRandom;)[B
      63: astore        6
      65: aload         7
      67: aload         6
      69: invokevirtual #34                 // Method org/jose4j/base64url/Base64Url.base64UrlEncode:([B)Ljava/lang/String;
      72: astore        5
      74: aload_2
      75: ldc           #28                 // String p2s
      77: aload         5
      79: invokevirtual #35                 // Method org/jose4j/jwx/Headers.setStringHeaderValue:(Ljava/lang/String;Ljava/lang/String;)V
      82: goto          94
      85: aload         7
      87: aload         5
      89: invokevirtual #36                 // Method org/jose4j/base64url/Base64Url.base64UrlDecode:(Ljava/lang/String;)[B
      92: astore        6
      94: aload_0
      95: aload_1
      96: aload         4
      98: aload         6
     100: aload_3
     101: invokespecial #37                 // Method deriveKey:(Ljava/security/Key;Ljava/lang/Long;[BLorg/jose4j/jca/ProviderContext;)Ljava/security/Key;
     104: areturn

  public org.jose4j.jwa.CryptoPrimitive prepareForDecrypt(java.security.Key, org.jose4j.jwx.Headers, org.jose4j.jca.ProviderContext) throws org.jose4j.lang.JoseException;
    Code:
       0: aload_2
       1: ldc           #24                 // String p2c
       3: invokevirtual #25                 // Method org/jose4j/jwx/Headers.getLongHeaderValue:(Ljava/lang/String;)Ljava/lang/Long;
       6: astore        4
       8: aload_2
       9: ldc           #28                 // String p2s
      11: invokevirtual #29                 // Method org/jose4j/jwx/Headers.getStringHeaderValue:(Ljava/lang/String;)Ljava/lang/String;
      14: astore        5
      16: new           #30                 // class org/jose4j/base64url/Base64Url
      19: dup
      20: invokespecial #31                 // Method org/jose4j/base64url/Base64Url."<init>":()V
      23: astore        6
      25: aload         6
      27: aload         5
      29: invokevirtual #36                 // Method org/jose4j/base64url/Base64Url.base64UrlDecode:(Ljava/lang/String;)[B
      32: astore        7
      34: aload_0
      35: aload_1
      36: aload         4
      38: aload         7
      40: aload_3
      41: invokespecial #37                 // Method deriveKey:(Ljava/security/Key;Ljava/lang/Long;[BLorg/jose4j/jca/ProviderContext;)Ljava/security/Key;
      44: astore        8
      46: new           #38                 // class org/jose4j/jwa/CryptoPrimitive
      49: dup
      50: aload         8
      52: invokespecial #39                 // Method org/jose4j/jwa/CryptoPrimitive."<init>":(Ljava/security/Key;)V
      55: areturn

  public java.security.Key manageForDecrypt(org.jose4j.jwa.CryptoPrimitive, byte[], org.jose4j.jwe.ContentEncryptionKeyDescriptor, org.jose4j.jwx.Headers, org.jose4j.jca.ProviderContext) throws org.jose4j.lang.JoseException;
    Code:
       0: aload_1
       1: invokevirtual #40                 // Method org/jose4j/jwa/CryptoPrimitive.getKey:()Ljava/security/Key;
       4: astore        6
       6: aload_0
       7: getfield      #16                 // Field keyWrap:Lorg/jose4j/jwe/AesKeyWrapManagementAlgorithm;
      10: aload         6
      12: aload         4
      14: aload         5
      16: invokevirtual #41                 // Method org/jose4j/jwe/AesKeyWrapManagementAlgorithm.prepareForDecrypt:(Ljava/security/Key;Lorg/jose4j/jwx/Headers;Lorg/jose4j/jca/ProviderContext;)Lorg/jose4j/jwa/CryptoPrimitive;
      19: astore        7
      21: aload_0
      22: getfield      #16                 // Field keyWrap:Lorg/jose4j/jwe/AesKeyWrapManagementAlgorithm;
      25: aload         7
      27: aload_2
      28: aload_3
      29: aload         4
      31: aload         5
      33: invokevirtual #42                 // Method org/jose4j/jwe/AesKeyWrapManagementAlgorithm.manageForDecrypt:(Lorg/jose4j/jwa/CryptoPrimitive;[BLorg/jose4j/jwe/ContentEncryptionKeyDescriptor;Lorg/jose4j/jwx/Headers;Lorg/jose4j/jca/ProviderContext;)Ljava/security/Key;
      36: areturn

  private java.security.Key deriveKey(java.security.Key, java.lang.Long, byte[], org.jose4j.jca.ProviderContext) throws org.jose4j.lang.JoseException;
    Code:
       0: iconst_3
       1: anewarray     #43                 // class "[B"
       4: dup
       5: iconst_0
       6: aload_0
       7: invokevirtual #44                 // Method getAlgorithmIdentifier:()Ljava/lang/String;
      10: invokestatic  #45                 // Method org/jose4j/lang/StringUtil.getBytesUtf8:(Ljava/lang/String;)[B
      13: aastore
      14: dup
      15: iconst_1
      16: getstatic     #46                 // Field ZERO_BYTE:[B
      19: aastore
      20: dup
      21: iconst_2
      22: aload_3
      23: aastore
      24: invokestatic  #47                 // Method org/jose4j/lang/ByteUtil.concat:([[B)[B
      27: astore        5
      29: aload_0
      30: getfield      #21                 // Field keyWrapKeyDescriptor:Lorg/jose4j/jwe/ContentEncryptionKeyDescriptor;
      33: invokevirtual #48                 // Method org/jose4j/jwe/ContentEncryptionKeyDescriptor.getContentEncryptionKeyByteLength:()I
      36: istore        6
      38: aload         4
      40: invokevirtual #49                 // Method org/jose4j/jca/ProviderContext.getSuppliedKeyProviderContext:()Lorg/jose4j/jca/ProviderContext$Context;
      43: invokevirtual #50                 // Method org/jose4j/jca/ProviderContext$Context.getMacProvider:()Ljava/lang/String;
      46: astore        7
      48: aload_0
      49: getfield      #11                 // Field pbkdf2:Lorg/jose4j/jwe/kdf/PasswordBasedKeyDerivationFunction2;
      52: aload_1
      53: invokeinterface #51,  1           // InterfaceMethod java/security/Key.getEncoded:()[B
      58: aload         5
      60: aload_2
      61: invokevirtual #52                 // Method java/lang/Long.intValue:()I
      64: iload         6
      66: aload         7
      68: invokevirtual #53                 // Method org/jose4j/jwe/kdf/PasswordBasedKeyDerivationFunction2.derive:([B[BIILjava/lang/String;)[B
      71: astore        8
      73: new           #54                 // class javax/crypto/spec/SecretKeySpec
      76: dup
      77: aload         8
      79: aload_0
      80: getfield      #21                 // Field keyWrapKeyDescriptor:Lorg/jose4j/jwe/ContentEncryptionKeyDescriptor;
      83: invokevirtual #55                 // Method org/jose4j/jwe/ContentEncryptionKeyDescriptor.getContentEncryptionKeyAlgorithm:()Ljava/lang/String;
      86: invokespecial #56                 // Method javax/crypto/spec/SecretKeySpec."<init>":([BLjava/lang/String;)V
      89: areturn

  public void validateEncryptionKey(java.security.Key, org.jose4j.jwe.ContentEncryptionAlgorithm) throws org.jose4j.lang.InvalidKeyException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #57                 // Method validateKey:(Ljava/security/Key;)V
       5: return

  public void validateDecryptionKey(java.security.Key, org.jose4j.jwe.ContentEncryptionAlgorithm) throws org.jose4j.lang.InvalidKeyException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #57                 // Method validateKey:(Ljava/security/Key;)V
       5: return

  public void validateKey(java.security.Key) throws org.jose4j.lang.InvalidKeyException;
    Code:
       0: aload_1
       1: invokestatic  #58                 // Method org/jose4j/jwx/KeyValidationSupport.notNull:(Ljava/security/Key;)V
       4: return

  public boolean isAvailable();
    Code:
       0: aload_0
       1: getfield      #16                 // Field keyWrap:Lorg/jose4j/jwe/AesKeyWrapManagementAlgorithm;
       4: invokevirtual #59                 // Method org/jose4j/jwe/AesKeyWrapManagementAlgorithm.isAvailable:()Z
       7: ireturn

  public long getDefaultIterationCount();
    Code:
       0: aload_0
       1: getfield      #4                  // Field defaultIterationCount:J
       4: lreturn

  public void setDefaultIterationCount(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #4                  // Field defaultIterationCount:J
       5: return

  public int getDefaultSaltByteLength();
    Code:
       0: aload_0
       1: getfield      #5                  // Field defaultSaltByteLength:I
       4: ireturn

  public void setDefaultSaltByteLength(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field defaultSaltByteLength:I
       5: return

  static {};
    Code:
       0: iconst_1
       1: newarray       byte
       3: dup
       4: iconst_0
       5: iconst_0
       6: bastore
       7: putstatic     #46                 // Field ZERO_BYTE:[B
      10: return
}
