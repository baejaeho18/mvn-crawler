Compiled from "JsonWebSignature.java"
public class org.jose4j.jws.JsonWebSignature extends org.jose4j.jwx.JsonWebStructure {
  public static final short COMPACT_SERIALIZATION_PARTS;

  private byte[] payloadBytes;

  private java.lang.String payloadCharEncoding;

  private java.lang.String encodedPayload;

  private java.lang.Boolean validSignature;

  private org.jose4j.jwa.CryptoPrimitive signingPrimitive;

  public org.jose4j.jws.JsonWebSignature();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jose4j/jwx/JsonWebStructure."<init>":()V
       4: aload_0
       5: ldc           #2                  // String UTF-8
       7: putfield      #3                  // Field payloadCharEncoding:Ljava/lang/String;
      10: ldc           #4                  // String org.jose4j.jws.default-allow-none
      12: invokestatic  #5                  // Method java/lang/Boolean.getBoolean:(Ljava/lang/String;)Z
      15: ifne          25
      18: aload_0
      19: getstatic     #6                  // Field org/jose4j/jwa/AlgorithmConstraints.DISALLOW_NONE:Lorg/jose4j/jwa/AlgorithmConstraints;
      22: invokevirtual #7                  // Method setAlgorithmConstraints:(Lorg/jose4j/jwa/AlgorithmConstraints;)V
      25: return

  public void setPayload(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #3                  // Field payloadCharEncoding:Ljava/lang/String;
       6: invokestatic  #8                  // Method org/jose4j/lang/StringUtil.getBytesUnchecked:(Ljava/lang/String;Ljava/lang/String;)[B
       9: putfield      #9                  // Field payloadBytes:[B
      12: return

  public byte[] getPayloadBytes() throws org.jose4j.lang.JoseException;
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method verifySignature:()Z
       4: ifne          17
       7: new           #11                 // class org/jose4j/lang/IntegrityException
      10: dup
      11: ldc           #12                 // String JWS signature is invalid.
      13: invokespecial #13                 // Method org/jose4j/lang/IntegrityException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #9                  // Field payloadBytes:[B
      21: areturn

  public byte[] getUnverifiedPayloadBytes();
    Code:
       0: aload_0
       1: getfield      #9                  // Field payloadBytes:[B
       4: areturn

  public void setPayloadBytes(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field payloadBytes:[B
       5: return

  protected void setCompactSerializationParts(java.lang.String[]) throws org.jose4j.lang.JoseException;
    Code:
       0: aload_1
       1: arraylength
       2: iconst_3
       3: if_icmpeq     16
       6: new           #14                 // class org/jose4j/lang/JoseException
       9: dup
      10: ldc           #15                 // String A JWS Compact Serialization must have exactly 3 parts separated by period (\'.\') characters
      12: invokespecial #16                 // Method org/jose4j/lang/JoseException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: aload_0
      17: aload_1
      18: iconst_0
      19: aaload
      20: invokevirtual #17                 // Method setEncodedHeader:(Ljava/lang/String;)V
      23: aload_0
      24: invokevirtual #18                 // Method isRfc7797UnencodedPayload:()Z
      27: ifeq          40
      30: aload_0
      31: aload_1
      32: iconst_1
      33: aaload
      34: invokevirtual #19                 // Method setPayload:(Ljava/lang/String;)V
      37: goto          47
      40: aload_0
      41: aload_1
      42: iconst_1
      43: aaload
      44: invokevirtual #20                 // Method setEncodedPayload:(Ljava/lang/String;)V
      47: aload_0
      48: aload_0
      49: getfield      #21                 // Field base64url:Lorg/jose4j/base64url/Base64Url;
      52: aload_1
      53: iconst_2
      54: aaload
      55: invokevirtual #22                 // Method org/jose4j/base64url/Base64Url.base64UrlDecode:(Ljava/lang/String;)[B
      58: invokevirtual #23                 // Method setSignature:([B)V
      61: return

  public java.lang.String getCompactSerialization() throws org.jose4j.lang.JoseException;
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method sign:()V
       4: aload_0
       5: invokevirtual #18                 // Method isRfc7797UnencodedPayload:()Z
       8: ifeq          35
      11: aload_0
      12: invokespecial #25                 // Method getStringPayload:()Ljava/lang/String;
      15: astore_1
      16: aload_1
      17: ldc           #26                 // String .
      19: invokevirtual #27                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      22: ifeq          40
      25: new           #14                 // class org/jose4j/lang/JoseException
      28: dup
      29: ldc           #28                 // String per https://tools.ietf.org/html/rfc7797#section-5.2 when using the JWS Compact Serialization, unencoded non-detached payloads using period (\'.\') characters would cause parsing errors; such payloads MUST NOT be used with the JWS Compact Serialization.
      31: invokespecial #16                 // Method org/jose4j/lang/JoseException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: invokevirtual #29                 // Method getEncodedPayload:()Ljava/lang/String;
      39: astore_1
      40: iconst_3
      41: anewarray     #30                 // class java/lang/String
      44: dup
      45: iconst_0
      46: aload_0
      47: invokevirtual #31                 // Method getEncodedHeader:()Ljava/lang/String;
      50: aastore
      51: dup
      52: iconst_1
      53: aload_1
      54: aastore
      55: dup
      56: iconst_2
      57: aload_0
      58: invokevirtual #32                 // Method getEncodedSignature:()Ljava/lang/String;
      61: aastore
      62: invokestatic  #33                 // Method org/jose4j/jwx/CompactSerializer.serialize:([Ljava/lang/String;)Ljava/lang/String;
      65: areturn

  public java.lang.String getDetachedContentCompactSerialization() throws org.jose4j.lang.JoseException;
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method sign:()V
       4: iconst_3
       5: anewarray     #30                 // class java/lang/String
       8: dup
       9: iconst_0
      10: aload_0
      11: invokevirtual #31                 // Method getEncodedHeader:()Ljava/lang/String;
      14: aastore
      15: dup
      16: iconst_1
      17: ldc           #34                 // String
      19: aastore
      20: dup
      21: iconst_2
      22: aload_0
      23: invokevirtual #32                 // Method getEncodedSignature:()Ljava/lang/String;
      26: aastore
      27: invokestatic  #33                 // Method org/jose4j/jwx/CompactSerializer.serialize:([Ljava/lang/String;)Ljava/lang/String;
      30: areturn

  public org.jose4j.jwa.CryptoPrimitive prepareSigningPrimitive() throws org.jose4j.lang.JoseException;
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #35                 // Method createSigningPrimitive:()Lorg/jose4j/jwa/CryptoPrimitive;
       5: putfield      #36                 // Field signingPrimitive:Lorg/jose4j/jwa/CryptoPrimitive;
       8: aload_0
       9: getfield      #36                 // Field signingPrimitive:Lorg/jose4j/jwa/CryptoPrimitive;
      12: areturn

  private org.jose4j.jwa.CryptoPrimitive createSigningPrimitive() throws org.jose4j.lang.JoseException;
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method getAlgorithm:()Lorg/jose4j/jws/JsonWebSignatureAlgorithm;
       4: astore_1
       5: aload_0
       6: invokevirtual #38                 // Method getKey:()Ljava/security/Key;
       9: astore_2
      10: aload_0
      11: invokevirtual #39                 // Method isDoKeyValidation:()Z
      14: ifeq          24
      17: aload_1
      18: aload_2
      19: invokeinterface #40,  2           // InterfaceMethod org/jose4j/jws/JsonWebSignatureAlgorithm.validateSigningKey:(Ljava/security/Key;)V
      24: aload_1
      25: aload_2
      26: aload_0
      27: invokevirtual #41                 // Method getProviderCtx:()Lorg/jose4j/jca/ProviderContext;
      30: invokeinterface #42,  3           // InterfaceMethod org/jose4j/jws/JsonWebSignatureAlgorithm.prepareForSign:(Ljava/security/Key;Lorg/jose4j/jca/ProviderContext;)Lorg/jose4j/jwa/CryptoPrimitive;
      35: areturn

  public void sign() throws org.jose4j.lang.JoseException;
    Code:
       0: aload_0
       1: getfield      #36                 // Field signingPrimitive:Lorg/jose4j/jwa/CryptoPrimitive;
       4: ifnonnull     14
       7: aload_0
       8: invokespecial #35                 // Method createSigningPrimitive:()Lorg/jose4j/jwa/CryptoPrimitive;
      11: goto          18
      14: aload_0
      15: getfield      #36                 // Field signingPrimitive:Lorg/jose4j/jwa/CryptoPrimitive;
      18: astore_1
      19: aload_0
      20: invokespecial #43                 // Method getSigningInputBytes:()[B
      23: astore_2
      24: aload_0
      25: invokevirtual #37                 // Method getAlgorithm:()Lorg/jose4j/jws/JsonWebSignatureAlgorithm;
      28: aload_1
      29: aload_2
      30: invokeinterface #44,  3           // InterfaceMethod org/jose4j/jws/JsonWebSignatureAlgorithm.sign:(Lorg/jose4j/jwa/CryptoPrimitive;[B)[B
      35: astore_3
      36: aload_0
      37: aload_3
      38: invokevirtual #23                 // Method setSignature:([B)V
      41: return

  protected void onNewKey();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #45                 // Field validSignature:Ljava/lang/Boolean;
       5: return

  public boolean verifySignature() throws org.jose4j.lang.JoseException;
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method getAlgorithm:()Lorg/jose4j/jws/JsonWebSignatureAlgorithm;
       4: astore_1
       5: aload_0
       6: invokevirtual #38                 // Method getKey:()Ljava/security/Key;
       9: astore_2
      10: aload_0
      11: invokevirtual #39                 // Method isDoKeyValidation:()Z
      14: ifeq          24
      17: aload_1
      18: aload_2
      19: invokeinterface #46,  2           // InterfaceMethod org/jose4j/jws/JsonWebSignatureAlgorithm.validateVerificationKey:(Ljava/security/Key;)V
      24: aload_0
      25: getfield      #45                 // Field validSignature:Ljava/lang/Boolean;
      28: ifnonnull     67
      31: aload_0
      32: invokevirtual #47                 // Method checkCrit:()V
      35: aload_0
      36: invokevirtual #48                 // Method getSignature:()[B
      39: astore_3
      40: aload_0
      41: invokespecial #43                 // Method getSigningInputBytes:()[B
      44: astore        4
      46: aload_0
      47: aload_1
      48: aload_3
      49: aload_2
      50: aload         4
      52: aload_0
      53: invokevirtual #41                 // Method getProviderCtx:()Lorg/jose4j/jca/ProviderContext;
      56: invokeinterface #49,  5           // InterfaceMethod org/jose4j/jws/JsonWebSignatureAlgorithm.verifySignature:([BLjava/security/Key;[BLorg/jose4j/jca/ProviderContext;)Z
      61: invokestatic  #50                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      64: putfield      #45                 // Field validSignature:Ljava/lang/Boolean;
      67: aload_0
      68: getfield      #45                 // Field validSignature:Ljava/lang/Boolean;
      71: invokevirtual #51                 // Method java/lang/Boolean.booleanValue:()Z
      74: ireturn

  protected boolean isSupportedCriticalHeader(java.lang.String);
    Code:
       0: ldc           #52                 // String b64
       2: aload_1
       3: invokevirtual #53                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ireturn

  public org.jose4j.jws.JsonWebSignatureAlgorithm getAlgorithm() throws org.jose4j.lang.InvalidAlgorithmException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #54                 // Method getAlgorithm:(Z)Lorg/jose4j/jws/JsonWebSignatureAlgorithm;
       5: areturn

  public org.jose4j.jws.JsonWebSignatureAlgorithm getAlgorithmNoConstraintCheck() throws org.jose4j.lang.InvalidAlgorithmException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #54                 // Method getAlgorithm:(Z)Lorg/jose4j/jws/JsonWebSignatureAlgorithm;
       5: areturn

  private org.jose4j.jws.JsonWebSignatureAlgorithm getAlgorithm(boolean) throws org.jose4j.lang.InvalidAlgorithmException;
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method getAlgorithmHeaderValue:()Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: ifnonnull     19
       9: new           #56                 // class org/jose4j/lang/InvalidAlgorithmException
      12: dup
      13: ldc           #57                 // String Signature algorithm header (alg) not set.
      15: invokespecial #58                 // Method org/jose4j/lang/InvalidAlgorithmException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: iload_1
      20: ifeq          31
      23: aload_0
      24: invokevirtual #59                 // Method getAlgorithmConstraints:()Lorg/jose4j/jwa/AlgorithmConstraints;
      27: aload_2
      28: invokevirtual #60                 // Method org/jose4j/jwa/AlgorithmConstraints.checkConstraint:(Ljava/lang/String;)V
      31: invokestatic  #61                 // Method org/jose4j/jwa/AlgorithmFactoryFactory.getInstance:()Lorg/jose4j/jwa/AlgorithmFactoryFactory;
      34: astore_3
      35: aload_3
      36: invokevirtual #62                 // Method org/jose4j/jwa/AlgorithmFactoryFactory.getJwsAlgorithmFactory:()Lorg/jose4j/jwa/AlgorithmFactory;
      39: astore        4
      41: aload         4
      43: aload_2
      44: invokevirtual #63                 // Method org/jose4j/jwa/AlgorithmFactory.getAlgorithm:(Ljava/lang/String;)Lorg/jose4j/jwa/Algorithm;
      47: checkcast     #64                 // class org/jose4j/jws/JsonWebSignatureAlgorithm
      50: areturn

  private byte[] getSigningInputBytes() throws org.jose4j.lang.JoseException;
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method isRfc7797UnencodedPayload:()Z
       4: ifne          34
       7: iconst_2
       8: anewarray     #30                 // class java/lang/String
      11: dup
      12: iconst_0
      13: aload_0
      14: invokevirtual #31                 // Method getEncodedHeader:()Ljava/lang/String;
      17: aastore
      18: dup
      19: iconst_1
      20: aload_0
      21: invokevirtual #29                 // Method getEncodedPayload:()Ljava/lang/String;
      24: aastore
      25: invokestatic  #33                 // Method org/jose4j/jwx/CompactSerializer.serialize:([Ljava/lang/String;)Ljava/lang/String;
      28: astore_1
      29: aload_1
      30: invokestatic  #65                 // Method org/jose4j/lang/StringUtil.getBytesAscii:(Ljava/lang/String;)[B
      33: areturn
      34: new           #66                 // class java/io/ByteArrayOutputStream
      37: dup
      38: invokespecial #67                 // Method java/io/ByteArrayOutputStream."<init>":()V
      41: astore_1
      42: aload_1
      43: aload_0
      44: invokevirtual #31                 // Method getEncodedHeader:()Ljava/lang/String;
      47: invokestatic  #65                 // Method org/jose4j/lang/StringUtil.getBytesAscii:(Ljava/lang/String;)[B
      50: invokevirtual #68                 // Method java/io/ByteArrayOutputStream.write:([B)V
      53: aload_1
      54: bipush        46
      56: invokevirtual #69                 // Method java/io/ByteArrayOutputStream.write:(I)V
      59: aload_1
      60: aload_0
      61: getfield      #9                  // Field payloadBytes:[B
      64: invokevirtual #68                 // Method java/io/ByteArrayOutputStream.write:([B)V
      67: aload_1
      68: invokevirtual #70                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      71: areturn
      72: astore_1
      73: new           #14                 // class org/jose4j/lang/JoseException
      76: dup
      77: ldc           #72                 // String This should never happen from a ByteArrayOutputStream
      79: aload_1
      80: invokespecial #73                 // Method org/jose4j/lang/JoseException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      83: athrow
    Exception table:
       from    to  target type
          34    71    72   Class java/io/IOException

  protected boolean isRfc7797UnencodedPayload();
    Code:
       0: aload_0
       1: getfield      #74                 // Field headers:Lorg/jose4j/jwx/Headers;
       4: ldc           #52                 // String b64
       6: invokevirtual #75                 // Method org/jose4j/jwx/Headers.getObjectHeaderValue:(Ljava/lang/String;)Ljava/lang/Object;
       9: astore_1
      10: aload_1
      11: ifnull        35
      14: aload_1
      15: instanceof    #76                 // class java/lang/Boolean
      18: ifeq          35
      21: aload_1
      22: checkcast     #76                 // class java/lang/Boolean
      25: invokevirtual #51                 // Method java/lang/Boolean.booleanValue:()Z
      28: ifne          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ireturn

  public java.lang.String getPayload() throws org.jose4j.lang.JoseException;
    Code:
       0: ldc           #77                 // String org.jose4j.jws.getPayload-skip-verify
       2: invokestatic  #5                  // Method java/lang/Boolean.getBoolean:(Ljava/lang/String;)Z
       5: ifne          25
       8: aload_0
       9: invokevirtual #10                 // Method verifySignature:()Z
      12: ifne          25
      15: new           #11                 // class org/jose4j/lang/IntegrityException
      18: dup
      19: ldc           #12                 // String JWS signature is invalid.
      21: invokespecial #13                 // Method org/jose4j/lang/IntegrityException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: aload_0
      26: invokespecial #25                 // Method getStringPayload:()Ljava/lang/String;
      29: areturn

  public java.lang.String getUnverifiedPayload();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method getStringPayload:()Ljava/lang/String;
       4: areturn

  private java.lang.String getStringPayload();
    Code:
       0: aload_0
       1: getfield      #9                  // Field payloadBytes:[B
       4: aload_0
       5: getfield      #3                  // Field payloadCharEncoding:Ljava/lang/String;
       8: invokestatic  #78                 // Method org/jose4j/lang/StringUtil.newString:([BLjava/lang/String;)Ljava/lang/String;
      11: areturn

  public java.lang.String getPayloadCharEncoding();
    Code:
       0: aload_0
       1: getfield      #3                  // Field payloadCharEncoding:Ljava/lang/String;
       4: areturn

  public void setPayloadCharEncoding(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field payloadCharEncoding:Ljava/lang/String;
       5: return

  public java.lang.String getKeyType() throws org.jose4j.lang.InvalidAlgorithmException;
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method getAlgorithmNoConstraintCheck:()Lorg/jose4j/jws/JsonWebSignatureAlgorithm;
       4: invokeinterface #80,  1           // InterfaceMethod org/jose4j/jws/JsonWebSignatureAlgorithm.getKeyType:()Ljava/lang/String;
       9: areturn

  public org.jose4j.keys.KeyPersuasion getKeyPersuasion() throws org.jose4j.lang.InvalidAlgorithmException;
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method getAlgorithmNoConstraintCheck:()Lorg/jose4j/jws/JsonWebSignatureAlgorithm;
       4: invokeinterface #81,  1           // InterfaceMethod org/jose4j/jws/JsonWebSignatureAlgorithm.getKeyPersuasion:()Lorg/jose4j/keys/KeyPersuasion;
       9: areturn

  public void setEncodedPayload(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #82                 // Field encodedPayload:Ljava/lang/String;
       5: aload_0
       6: aload_0
       7: getfield      #21                 // Field base64url:Lorg/jose4j/base64url/Base64Url;
      10: aload_1
      11: invokevirtual #22                 // Method org/jose4j/base64url/Base64Url.base64UrlDecode:(Ljava/lang/String;)[B
      14: putfield      #9                  // Field payloadBytes:[B
      17: return

  public java.lang.String getEncodedPayload();
    Code:
       0: aload_0
       1: getfield      #82                 // Field encodedPayload:Ljava/lang/String;
       4: ifnull        14
       7: aload_0
       8: getfield      #82                 // Field encodedPayload:Ljava/lang/String;
      11: goto          25
      14: aload_0
      15: getfield      #21                 // Field base64url:Lorg/jose4j/base64url/Base64Url;
      18: aload_0
      19: getfield      #9                  // Field payloadBytes:[B
      22: invokevirtual #83                 // Method org/jose4j/base64url/Base64Url.base64UrlEncode:([B)Ljava/lang/String;
      25: areturn

  public java.lang.String getEncodedSignature();
    Code:
       0: aload_0
       1: getfield      #21                 // Field base64url:Lorg/jose4j/base64url/Base64Url;
       4: aload_0
       5: invokevirtual #48                 // Method getSignature:()[B
       8: invokevirtual #83                 // Method org/jose4j/base64url/Base64Url.base64UrlEncode:([B)Ljava/lang/String;
      11: areturn

  protected byte[] getSignature();
    Code:
       0: aload_0
       1: invokevirtual #84                 // Method getIntegrity:()[B
       4: areturn

  protected void setSignature(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #85                 // Method setIntegrity:([B)V
       5: return

  public org.jose4j.jwa.Algorithm getAlgorithmNoConstraintCheck() throws org.jose4j.lang.InvalidAlgorithmException;
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method getAlgorithmNoConstraintCheck:()Lorg/jose4j/jws/JsonWebSignatureAlgorithm;
       4: areturn

  public org.jose4j.jwa.Algorithm getAlgorithm() throws org.jose4j.lang.InvalidAlgorithmException;
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method getAlgorithm:()Lorg/jose4j/jws/JsonWebSignatureAlgorithm;
       4: areturn
}
