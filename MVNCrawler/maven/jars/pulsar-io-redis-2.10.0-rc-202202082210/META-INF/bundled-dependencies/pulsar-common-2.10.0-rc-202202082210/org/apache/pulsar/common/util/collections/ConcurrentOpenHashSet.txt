Compiled from "ConcurrentOpenHashSet.java"
public class org.apache.pulsar.common.util.collections.ConcurrentOpenHashSet<V> {
  private static final java.lang.Object EmptyValue;

  private static final java.lang.Object DeletedValue;

  private static final float MapFillFactor;

  private static final int DefaultExpectedItems;

  private static final int DefaultConcurrencyLevel;

  private final org.apache.pulsar.common.util.collections.ConcurrentOpenHashSet$Section<V>[] sections;

  private static final long HashMixer;

  private static final int R;

  public org.apache.pulsar.common.util.collections.ConcurrentOpenHashSet();
    Code:
       0: aload_0
       1: sipush        256
       4: invokespecial #5                  // Method "<init>":(I)V
       7: return

  public org.apache.pulsar.common.util.collections.ConcurrentOpenHashSet(int);
    Code:
       0: aload_0
       1: iload_1
       2: bipush        16
       4: invokespecial #6                  // Method "<init>":(II)V
       7: return

  public org.apache.pulsar.common.util.collections.ConcurrentOpenHashSet(int, int);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: iload_1
       5: ifle          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      16: iload_2
      17: ifle          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      28: iload_1
      29: iload_2
      30: if_icmplt     37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      41: iload_2
      42: istore_3
      43: iload_1
      44: iload_3
      45: idiv
      46: istore        4
      48: iload         4
      50: i2f
      51: ldc           #9                  // float 0.66f
      53: fdiv
      54: f2i
      55: istore        5
      57: aload_0
      58: iload_3
      59: anewarray     #10                 // class org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section
      62: checkcast     #11                 // class "[Lorg/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section;"
      65: putfield      #12                 // Field sections:[Lorg/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section;
      68: iconst_0
      69: istore        6
      71: iload         6
      73: iload_3
      74: if_icmpge     99
      77: aload_0
      78: getfield      #12                 // Field sections:[Lorg/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section;
      81: iload         6
      83: new           #10                 // class org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section
      86: dup
      87: iload         5
      89: invokespecial #13                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section."<init>":(I)V
      92: aastore
      93: iinc          6, 1
      96: goto          71
      99: return

  public long size();
    Code:
       0: lconst_0
       1: lstore_1
       2: iconst_0
       3: istore_3
       4: iload_3
       5: aload_0
       6: getfield      #12                 // Field sections:[Lorg/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section;
       9: arraylength
      10: if_icmpge     32
      13: lload_1
      14: aload_0
      15: getfield      #12                 // Field sections:[Lorg/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section;
      18: iload_3
      19: aaload
      20: invokestatic  #14                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section.access$000:(Lorg/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section;)I
      23: i2l
      24: ladd
      25: lstore_1
      26: iinc          3, 1
      29: goto          4
      32: lload_1
      33: lreturn

  public long capacity();
    Code:
       0: lconst_0
       1: lstore_1
       2: iconst_0
       3: istore_3
       4: iload_3
       5: aload_0
       6: getfield      #12                 // Field sections:[Lorg/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section;
       9: arraylength
      10: if_icmpge     32
      13: lload_1
      14: aload_0
      15: getfield      #12                 // Field sections:[Lorg/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section;
      18: iload_3
      19: aaload
      20: invokestatic  #15                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section.access$100:(Lorg/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section;)I
      23: i2l
      24: ladd
      25: lstore_1
      26: iinc          3, 1
      29: goto          4
      32: lload_1
      33: lreturn

  public boolean isEmpty();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #12                 // Field sections:[Lorg/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section;
       7: arraylength
       8: if_icmpge     31
      11: aload_0
      12: getfield      #12                 // Field sections:[Lorg/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section;
      15: iload_1
      16: aaload
      17: invokestatic  #14                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section.access$000:(Lorg/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section;)I
      20: ifeq          25
      23: iconst_0
      24: ireturn
      25: iinc          1, 1
      28: goto          2
      31: iconst_1
      32: ireturn

  public boolean contains(V);
    Code:
       0: aload_1
       1: invokestatic  #16                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #17                 // Method hash:(Ljava/lang/Object;)J
       9: lstore_2
      10: aload_0
      11: lload_2
      12: invokespecial #18                 // Method getSection:(J)Lorg/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section;
      15: aload_1
      16: lload_2
      17: l2i
      18: invokevirtual #19                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section.contains:(Ljava/lang/Object;I)Z
      21: ireturn

  public boolean add(V);
    Code:
       0: aload_1
       1: invokestatic  #16                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #17                 // Method hash:(Ljava/lang/Object;)J
       9: lstore_2
      10: aload_0
      11: lload_2
      12: invokespecial #18                 // Method getSection:(J)Lorg/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section;
      15: aload_1
      16: lload_2
      17: l2i
      18: invokevirtual #20                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section.add:(Ljava/lang/Object;I)Z
      21: ireturn

  public boolean remove(V);
    Code:
       0: aload_1
       1: invokestatic  #16                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #17                 // Method hash:(Ljava/lang/Object;)J
       9: lstore_2
      10: aload_0
      11: lload_2
      12: invokespecial #18                 // Method getSection:(J)Lorg/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section;
      15: aload_1
      16: lload_2
      17: l2i
      18: invokestatic  #21                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section.access$200:(Lorg/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section;Ljava/lang/Object;I)Z
      21: ireturn

  private org.apache.pulsar.common.util.collections.ConcurrentOpenHashSet$Section<V> getSection(long);
    Code:
       0: lload_1
       1: bipush        32
       3: lushr
       4: l2i
       5: aload_0
       6: getfield      #12                 // Field sections:[Lorg/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section;
       9: arraylength
      10: iconst_1
      11: isub
      12: iand
      13: istore_3
      14: aload_0
      15: getfield      #12                 // Field sections:[Lorg/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section;
      18: iload_3
      19: aaload
      20: areturn

  public void clear();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #12                 // Field sections:[Lorg/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section;
       7: arraylength
       8: if_icmpge     26
      11: aload_0
      12: getfield      #12                 // Field sections:[Lorg/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section;
      15: iload_1
      16: aaload
      17: invokevirtual #22                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section.clear:()V
      20: iinc          1, 1
      23: goto          2
      26: return

  public void forEach(java.util.function.Consumer<? super V>);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: getfield      #12                 // Field sections:[Lorg/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section;
       7: arraylength
       8: if_icmpge     27
      11: aload_0
      12: getfield      #12                 // Field sections:[Lorg/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section;
      15: iload_2
      16: aaload
      17: aload_1
      18: invokevirtual #23                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section.forEach:(Ljava/util/function/Consumer;)V
      21: iinc          2, 1
      24: goto          2
      27: return

  public int removeIf(java.util.function.Predicate<V>);
    Code:
       0: aload_1
       1: invokestatic  #16                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iconst_0
       6: istore_2
       7: iconst_0
       8: istore_3
       9: iload_3
      10: aload_0
      11: getfield      #12                 // Field sections:[Lorg/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section;
      14: arraylength
      15: if_icmpge     37
      18: iload_2
      19: aload_0
      20: getfield      #12                 // Field sections:[Lorg/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section;
      23: iload_3
      24: aaload
      25: aload_1
      26: invokevirtual #24                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section.removeIf:(Ljava/util/function/Predicate;)I
      29: iadd
      30: istore_2
      31: iinc          3, 1
      34: goto          9
      37: iload_2
      38: ireturn

  public java.util.List<V> values();
    Code:
       0: new           #25                 // class java/util/ArrayList
       3: dup
       4: invokespecial #26                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokedynamic #27,  0             // InvokeDynamic #0:accept:(Ljava/util/List;)Ljava/util/function/Consumer;
      15: invokevirtual #28                 // Method forEach:(Ljava/util/function/Consumer;)V
      18: aload_1
      19: areturn

  public java.lang.String toString();
    Code:
       0: new           #29                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: bipush        123
      11: invokevirtual #31                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      14: pop
      15: new           #32                 // class java/util/concurrent/atomic/AtomicBoolean
      18: dup
      19: iconst_1
      20: invokespecial #33                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      23: astore_2
      24: aload_0
      25: aload_2
      26: aload_1
      27: invokedynamic #34,  0             // InvokeDynamic #1:accept:(Ljava/util/concurrent/atomic/AtomicBoolean;Ljava/lang/StringBuilder;)Ljava/util/function/Consumer;
      32: invokevirtual #28                 // Method forEach:(Ljava/util/function/Consumer;)V
      35: aload_1
      36: bipush        125
      38: invokevirtual #31                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      41: pop
      42: aload_1
      43: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: areturn

  static final <K> long hash(K);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method java/lang/Object.hashCode:()I
       4: i2l
       5: ldc2_w        #37                 // long -4132994306676758123l
       8: lmul
       9: lstore_1
      10: lload_1
      11: lload_1
      12: bipush        47
      14: lushr
      15: lxor
      16: lstore_1
      17: lload_1
      18: ldc2_w        #37                 // long -4132994306676758123l
      21: lmul
      22: lstore_1
      23: lload_1
      24: lreturn

  static final int signSafeMod(long, int);
    Code:
       0: lload_0
       1: l2i
       2: iload_2
       3: iconst_1
       4: isub
       5: iand
       6: ireturn

  private static int alignToPowerOfTwo(int);
    Code:
       0: ldc2_w        #39                 // double 2.0d
       3: bipush        32
       5: iload_0
       6: iconst_1
       7: isub
       8: invokestatic  #41                 // Method java/lang/Integer.numberOfLeadingZeros:(I)I
      11: isub
      12: i2d
      13: invokestatic  #42                 // Method java/lang/Math.pow:(DD)D
      16: d2i
      17: ireturn

  private static void lambda$toString$1(java.util.concurrent.atomic.AtomicBoolean, java.lang.StringBuilder, java.lang.Object);
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicBoolean.getAndSet:(Z)Z
       5: ifne          15
       8: aload_1
       9: ldc           #44                 // String ,
      11: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_1
      16: aload_2
      17: invokevirtual #46                 // Method java/lang/Object.toString:()Ljava/lang/String;
      20: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: pop
      24: return

  private static void lambda$values$0(java.util.List, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #47,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
       7: pop
       8: return

  static int access$300(int);
    Code:
       0: iload_0
       1: invokestatic  #3                  // Method alignToPowerOfTwo:(I)I
       4: ireturn

  static java.lang.Object access$400();
    Code:
       0: getstatic     #2                  // Field EmptyValue:Ljava/lang/Object;
       3: areturn

  static java.lang.Object access$500();
    Code:
       0: getstatic     #1                  // Field DeletedValue:Ljava/lang/Object;
       3: areturn

  static {};
    Code:
       0: aconst_null
       1: putstatic     #2                  // Field EmptyValue:Ljava/lang/Object;
       4: new           #48                 // class java/lang/Object
       7: dup
       8: invokespecial #7                  // Method java/lang/Object."<init>":()V
      11: putstatic     #1                  // Field DeletedValue:Ljava/lang/Object;
      14: return
}
