Compiled from "FileUtils.java"
public class org.apache.pulsar.common.nar.FileUtils {
  private static final org.slf4j.Logger log;

  public static final long MILLIS_BETWEEN_ATTEMPTS;

  public org.apache.pulsar.common.nar.FileUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void ensureDirectoryExistAndCanReadAndWrite(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method java/io/File.exists:()Z
       4: ifeq          44
       7: aload_0
       8: invokevirtual #3                  // Method java/io/File.isDirectory:()Z
      11: ifne          44
      14: new           #4                  // class java/io/IOException
      17: dup
      18: new           #5                  // class java/lang/StringBuilder
      21: dup
      22: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      25: aload_0
      26: invokevirtual #7                  // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      29: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #9                  // String  is not a directory
      34: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokespecial #11                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload_0
      45: invokevirtual #2                  // Method java/io/File.exists:()Z
      48: ifne          90
      51: aload_0
      52: invokevirtual #12                 // Method java/io/File.mkdirs:()Z
      55: istore_1
      56: iload_1
      57: ifne          90
      60: new           #4                  // class java/io/IOException
      63: dup
      64: new           #5                  // class java/lang/StringBuilder
      67: dup
      68: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      71: aload_0
      72: invokevirtual #7                  // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      75: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: ldc           #13                 // String  could not be created
      80: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: invokespecial #11                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      89: athrow
      90: aload_0
      91: invokevirtual #14                 // Method java/io/File.canRead:()Z
      94: ifeq          104
      97: aload_0
      98: invokevirtual #15                 // Method java/io/File.canWrite:()Z
     101: ifne          134
     104: new           #4                  // class java/io/IOException
     107: dup
     108: new           #5                  // class java/lang/StringBuilder
     111: dup
     112: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
     115: aload_0
     116: invokevirtual #7                  // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     119: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: ldc           #16                 // String  directory does not have read/write privilege
     124: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     130: invokespecial #11                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     133: athrow
     134: return

  public static void ensureDirectoryExistAndCanRead(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method java/io/File.exists:()Z
       4: ifeq          44
       7: aload_0
       8: invokevirtual #3                  // Method java/io/File.isDirectory:()Z
      11: ifne          44
      14: new           #4                  // class java/io/IOException
      17: dup
      18: new           #5                  // class java/lang/StringBuilder
      21: dup
      22: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      25: aload_0
      26: invokevirtual #7                  // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      29: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #9                  // String  is not a directory
      34: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokespecial #11                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload_0
      45: invokevirtual #2                  // Method java/io/File.exists:()Z
      48: ifne          90
      51: aload_0
      52: invokevirtual #12                 // Method java/io/File.mkdirs:()Z
      55: istore_1
      56: iload_1
      57: ifne          90
      60: new           #4                  // class java/io/IOException
      63: dup
      64: new           #5                  // class java/lang/StringBuilder
      67: dup
      68: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      71: aload_0
      72: invokevirtual #7                  // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      75: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: ldc           #13                 // String  could not be created
      80: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: invokespecial #11                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      89: athrow
      90: aload_0
      91: invokevirtual #14                 // Method java/io/File.canRead:()Z
      94: ifne          127
      97: new           #4                  // class java/io/IOException
     100: dup
     101: new           #5                  // class java/lang/StringBuilder
     104: dup
     105: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
     108: aload_0
     109: invokevirtual #7                  // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     112: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: ldc           #17                 // String  directory does not have read privilege
     117: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     123: invokespecial #11                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     126: athrow
     127: return

  public static boolean deleteFile(java.io.File, org.slf4j.Logger);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokestatic  #18                 // Method deleteFile:(Ljava/io/File;Lorg/slf4j/Logger;I)Z
       6: ireturn

  public static boolean deleteFile(java.io.File, org.slf4j.Logger, int);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: iconst_0
       7: istore_3
       8: aload_0
       9: invokevirtual #2                  // Method java/io/File.exists:()Z
      12: ifeq          117
      15: iconst_1
      16: iload_2
      17: invokestatic  #19                 // Method java/lang/Math.max:(II)I
      20: istore        4
      22: iconst_0
      23: istore        5
      25: iload         5
      27: iload         4
      29: if_icmpge     81
      32: iload_3
      33: ifne          81
      36: aload_0
      37: invokevirtual #20                 // Method java/io/File.delete:()Z
      40: ifne          50
      43: aload_0
      44: invokevirtual #2                  // Method java/io/File.exists:()Z
      47: ifne          54
      50: iconst_1
      51: goto          55
      54: iconst_0
      55: istore_3
      56: iload_3
      57: ifne          75
      60: iload         4
      62: iload         5
      64: isub
      65: iconst_1
      66: if_icmple     75
      69: ldc2_w        #22                 // long 50l
      72: invokestatic  #24                 // Method sleepQuietly:(J)V
      75: iinc          5, 1
      78: goto          25
      81: iload_3
      82: ifne          117
      85: aload_1
      86: ifnull        117
      89: aload_1
      90: new           #5                  // class java/lang/StringBuilder
      93: dup
      94: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      97: ldc           #25                 // String File appears to exist but unable to delete file:
      99: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: aload_0
     103: invokevirtual #7                  // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     106: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     112: invokeinterface #26,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     117: goto          164
     120: astore        4
     122: aload_1
     123: ifnull        164
     126: aload_1
     127: new           #5                  // class java/lang/StringBuilder
     130: dup
     131: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
     134: ldc           #28                 // String Unable to delete file: \'
     136: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     139: aload_0
     140: invokevirtual #7                  // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     143: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: ldc           #29                 // String \' due to
     148: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: aload         4
     153: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     156: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     159: invokeinterface #26,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     164: iload_3
     165: ireturn
    Exception table:
       from    to  target type
           8   117   120   Class java/lang/Throwable

  public static void deleteFilesInDirectory(java.io.File, java.io.FilenameFilter, org.slf4j.Logger) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokestatic  #31                 // Method deleteFilesInDirectory:(Ljava/io/File;Ljava/io/FilenameFilter;Lorg/slf4j/Logger;Z)V
       7: return

  public static void deleteFilesInDirectory(java.io.File, java.io.FilenameFilter, org.slf4j.Logger, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iconst_0
       5: invokestatic  #32                 // Method deleteFilesInDirectory:(Ljava/io/File;Ljava/io/FilenameFilter;Lorg/slf4j/Logger;ZZ)V
       8: return

  public static void deleteFilesInDirectory(java.io.File, java.io.FilenameFilter, org.slf4j.Logger, boolean, boolean) throws java.io.IOException;
    Code:
       0: aconst_null
       1: aload_0
       2: if_acmpeq     181
       5: aload_0
       6: invokevirtual #3                  // Method java/io/File.isDirectory:()Z
       9: ifeq          181
      12: aload_0
      13: invokevirtual #33                 // Method java/io/File.listFiles:()[Ljava/io/File;
      16: astore        5
      18: aload         5
      20: ifnonnull     53
      23: new           #4                  // class java/io/IOException
      26: dup
      27: new           #5                  // class java/lang/StringBuilder
      30: dup
      31: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #34                 // String Unable to list directory content in:
      36: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: invokevirtual #7                  // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      43: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokespecial #11                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: aload         5
      55: astore        6
      57: aload         6
      59: arraylength
      60: istore        7
      62: iconst_0
      63: istore        8
      65: iload         8
      67: iload         7
      69: if_icmpge     181
      72: aload         6
      74: iload         8
      76: aaload
      77: astore        9
      79: aload_1
      80: ifnonnull     87
      83: iconst_1
      84: goto          99
      87: aload_1
      88: aload_0
      89: aload         9
      91: invokevirtual #35                 // Method java/io/File.getName:()Ljava/lang/String;
      94: invokeinterface #36,  3           // InterfaceMethod java/io/FilenameFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z
      99: istore        10
     101: aload         9
     103: invokevirtual #37                 // Method java/io/File.isFile:()Z
     106: ifeq          122
     109: iload         10
     111: ifeq          122
     114: aload         9
     116: aload_2
     117: iconst_3
     118: invokestatic  #18                 // Method deleteFile:(Ljava/io/File;Lorg/slf4j/Logger;I)Z
     121: pop
     122: aload         9
     124: invokevirtual #3                  // Method java/io/File.isDirectory:()Z
     127: ifeq          175
     130: iload_3
     131: ifeq          175
     134: aload         9
     136: aload_1
     137: aload_2
     138: iload_3
     139: iload         4
     141: invokestatic  #32                 // Method deleteFilesInDirectory:(Ljava/io/File;Ljava/io/FilenameFilter;Lorg/slf4j/Logger;ZZ)V
     144: aload         9
     146: invokevirtual #38                 // Method java/io/File.list:()[Ljava/lang/String;
     149: astore        11
     151: iload         4
     153: ifeq          175
     156: aload         11
     158: ifnull        175
     161: aload         11
     163: arraylength
     164: ifne          175
     167: aload         9
     169: aload_2
     170: iconst_3
     171: invokestatic  #18                 // Method deleteFile:(Ljava/io/File;Lorg/slf4j/Logger;I)Z
     174: pop
     175: iinc          8, 1
     178: goto          65
     181: return

  public static void deleteFiles(java.util.Collection<java.io.File>, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokeinterface #39,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          34
      16: aload_2
      17: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #42                 // class java/io/File
      25: astore_3
      26: aload_3
      27: iload_1
      28: invokestatic  #43                 // Method deleteFile:(Ljava/io/File;Z)V
      31: goto          7
      34: return

  public static void deleteFile(java.io.File, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method java/io/File.listFiles:()[Ljava/io/File;
       4: astore_2
       5: aload_0
       6: invokevirtual #3                  // Method java/io/File.isDirectory:()Z
       9: ifeq          28
      12: iload_1
      13: ifeq          28
      16: aload_2
      17: ifnull        28
      20: aload_2
      21: invokestatic  #44                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      24: iload_1
      25: invokestatic  #45                 // Method deleteFiles:(Ljava/util/Collection;Z)V
      28: aload_0
      29: aconst_null
      30: iconst_5
      31: invokestatic  #18                 // Method deleteFile:(Ljava/io/File;Lorg/slf4j/Logger;I)Z
      34: ifne          67
      37: new           #4                  // class java/io/IOException
      40: dup
      41: new           #5                  // class java/lang/StringBuilder
      44: dup
      45: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #46                 // String Unable to delete
      50: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_0
      54: invokevirtual #7                  // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      57: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #11                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: return

  public static void sleepQuietly(long);
    Code:
       0: lload_0
       1: invokestatic  #47                 // Method java/lang/Thread.sleep:(J)V
       4: goto          8
       7: astore_2
       8: return
    Exception table:
       from    to  target type
           0     4     7   Class java/lang/InterruptedException

  public static boolean mayBeANarArchive(java.io.File);
    Code:
       0: new           #49                 // class java/util/zip/ZipFile
       3: dup
       4: aload_0
       5: invokespecial #50                 // Method java/util/zip/ZipFile."<init>":(Ljava/io/File;)V
       8: astore_1
       9: aconst_null
      10: astore_2
      11: aload_1
      12: ldc           #51                 // String META-INF/bundled-dependencies
      14: invokevirtual #52                 // Method java/util/zip/ZipFile.getEntry:(Ljava/lang/String;)Ljava/util/zip/ZipEntry;
      17: astore_3
      18: aload_3
      19: ifnull        29
      22: aload_3
      23: invokevirtual #53                 // Method java/util/zip/ZipEntry.isDirectory:()Z
      26: ifne          76
      29: getstatic     #54                 // Field log:Lorg/slf4j/Logger;
      32: ldc           #55                 // String Jar file {} does not contain META-INF/bundled-dependencies, it is not a NAR file
      34: aload_0
      35: invokeinterface #56,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      40: iconst_0
      41: istore        4
      43: aload_1
      44: ifnull        73
      47: aload_2
      48: ifnull        69
      51: aload_1
      52: invokevirtual #57                 // Method java/util/zip/ZipFile.close:()V
      55: goto          73
      58: astore        5
      60: aload_2
      61: aload         5
      63: invokevirtual #58                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      66: goto          73
      69: aload_1
      70: invokevirtual #57                 // Method java/util/zip/ZipFile.close:()V
      73: iload         4
      75: ireturn
      76: getstatic     #54                 // Field log:Lorg/slf4j/Logger;
      79: ldc           #59                 // String Jar file {} contains META-INF/bundled-dependencies, it may be a NAR file
      81: aload_0
      82: invokeinterface #56,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      87: iconst_1
      88: istore        4
      90: aload_1
      91: ifnull        120
      94: aload_2
      95: ifnull        116
      98: aload_1
      99: invokevirtual #57                 // Method java/util/zip/ZipFile.close:()V
     102: goto          120
     105: astore        5
     107: aload_2
     108: aload         5
     110: invokevirtual #58                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     113: goto          120
     116: aload_1
     117: invokevirtual #57                 // Method java/util/zip/ZipFile.close:()V
     120: iload         4
     122: ireturn
     123: astore_3
     124: aload_3
     125: astore_2
     126: aload_3
     127: athrow
     128: astore        6
     130: aload_1
     131: ifnull        160
     134: aload_2
     135: ifnull        156
     138: aload_1
     139: invokevirtual #57                 // Method java/util/zip/ZipFile.close:()V
     142: goto          160
     145: astore        7
     147: aload_2
     148: aload         7
     150: invokevirtual #58                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     153: goto          160
     156: aload_1
     157: invokevirtual #57                 // Method java/util/zip/ZipFile.close:()V
     160: aload         6
     162: athrow
     163: astore_1
     164: getstatic     #54                 // Field log:Lorg/slf4j/Logger;
     167: ldc           #60                 // String Cannot safely detect if {} is a NAR archive
     169: aload_0
     170: aload_1
     171: invokeinterface #61,  4           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     176: iconst_1
     177: ireturn
    Exception table:
       from    to  target type
          51    55    58   Class java/lang/Throwable
          98   102   105   Class java/lang/Throwable
          11    43   123   Class java/lang/Throwable
          76    90   123   Class java/lang/Throwable
          11    43   128   any
          76    90   128   any
         138   142   145   Class java/lang/Throwable
         123   130   128   any
           0    73   163   Class java/io/IOException
          76   120   163   Class java/io/IOException
         123   163   163   Class java/io/IOException

  static {};
    Code:
       0: ldc           #21                 // class org/apache/pulsar/common/nar/FileUtils
       2: invokestatic  #62                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #54                 // Field log:Lorg/slf4j/Logger;
       8: return
}
