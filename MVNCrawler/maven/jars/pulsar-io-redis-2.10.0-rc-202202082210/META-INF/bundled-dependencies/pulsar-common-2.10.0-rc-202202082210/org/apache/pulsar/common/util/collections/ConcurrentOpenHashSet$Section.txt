Compiled from "ConcurrentOpenHashSet.java"
final class org.apache.pulsar.common.util.collections.ConcurrentOpenHashSet$Section<V> extends java.util.concurrent.locks.StampedLock {
  private volatile V[] values;

  private volatile int capacity;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.apache.pulsar.common.util.collections.ConcurrentOpenHashSet$Section> SIZE_UPDATER;

  private volatile int size;

  private int usedBuckets;

  private int resizeThreshold;

  org.apache.pulsar.common.util.collections.ConcurrentOpenHashSet$Section(int);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/util/concurrent/locks/StampedLock."<init>":()V
       4: aload_0
       5: iload_1
       6: invokestatic  #6                  // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet.access$300:(I)I
       9: putfield      #3                  // Field capacity:I
      12: aload_0
      13: aload_0
      14: getfield      #3                  // Field capacity:I
      17: anewarray     #7                  // class java/lang/Object
      20: checkcast     #8                  // class "[Ljava/lang/Object;"
      23: putfield      #9                  // Field values:[Ljava/lang/Object;
      26: aload_0
      27: iconst_0
      28: putfield      #4                  // Field size:I
      31: aload_0
      32: iconst_0
      33: putfield      #10                 // Field usedBuckets:I
      36: aload_0
      37: aload_0
      38: getfield      #3                  // Field capacity:I
      41: i2f
      42: ldc           #11                 // float 0.66f
      44: fmul
      45: f2i
      46: putfield      #12                 // Field resizeThreshold:I
      49: return

  boolean contains(V, int);
    Code:
       0: iload_2
       1: istore_3
       2: aload_0
       3: invokevirtual #13                 // Method tryOptimisticRead:()J
       6: lstore        4
       8: iconst_0
       9: istore        6
      11: aload_0
      12: getfield      #3                  // Field capacity:I
      15: istore        7
      17: iload_3
      18: i2l
      19: iload         7
      21: invokestatic  #14                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet.signSafeMod:(JI)I
      24: istore_3
      25: aload_0
      26: getfield      #9                  // Field values:[Ljava/lang/Object;
      29: iload_3
      30: aaload
      31: astore        8
      33: iload         6
      35: ifne          98
      38: aload_0
      39: lload         4
      41: invokevirtual #15                 // Method validate:(J)Z
      44: ifeq          98
      47: aload_1
      48: aload         8
      50: invokevirtual #16                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      53: ifeq          73
      56: iconst_1
      57: istore        9
      59: iload         6
      61: ifeq          70
      64: aload_0
      65: lload         4
      67: invokevirtual #17                 // Method unlockRead:(J)V
      70: iload         9
      72: ireturn
      73: aload         8
      75: invokestatic  #18                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet.access$400:()Ljava/lang/Object;
      78: if_acmpne     185
      81: iconst_0
      82: istore        9
      84: iload         6
      86: ifeq          95
      89: aload_0
      90: lload         4
      92: invokevirtual #17                 // Method unlockRead:(J)V
      95: iload         9
      97: ireturn
      98: iload         6
     100: ifne          120
     103: aload_0
     104: invokevirtual #19                 // Method readLock:()J
     107: lstore        4
     109: iconst_1
     110: istore        6
     112: aload_0
     113: getfield      #9                  // Field values:[Ljava/lang/Object;
     116: iload_3
     117: aaload
     118: astore        8
     120: iload         7
     122: aload_0
     123: getfield      #3                  // Field capacity:I
     126: if_icmpeq     134
     129: iload_2
     130: istore_3
     131: goto          11
     134: aload_1
     135: aload         8
     137: invokevirtual #16                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     140: ifeq          160
     143: iconst_1
     144: istore        9
     146: iload         6
     148: ifeq          157
     151: aload_0
     152: lload         4
     154: invokevirtual #17                 // Method unlockRead:(J)V
     157: iload         9
     159: ireturn
     160: aload         8
     162: invokestatic  #18                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet.access$400:()Ljava/lang/Object;
     165: if_acmpne     185
     168: iconst_0
     169: istore        9
     171: iload         6
     173: ifeq          182
     176: aload_0
     177: lload         4
     179: invokevirtual #17                 // Method unlockRead:(J)V
     182: iload         9
     184: ireturn
     185: iinc          3, 1
     188: goto          11
     191: astore        10
     193: iload         6
     195: ifeq          204
     198: aload_0
     199: lload         4
     201: invokevirtual #17                 // Method unlockRead:(J)V
     204: aload         10
     206: athrow
    Exception table:
       from    to  target type
          11    59   191   any
          73    84   191   any
          98   146   191   any
         160   171   191   any
         185   193   191   any

  boolean add(V, int);
    Code:
       0: iload_2
       1: istore_3
       2: aload_0
       3: invokevirtual #20                 // Method writeLock:()J
       6: lstore        4
       8: aload_0
       9: getfield      #3                  // Field capacity:I
      12: istore        6
      14: iconst_m1
      15: istore        7
      17: iload_3
      18: i2l
      19: iload         6
      21: invokestatic  #14                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet.signSafeMod:(JI)I
      24: istore_3
      25: aload_0
      26: getfield      #9                  // Field values:[Ljava/lang/Object;
      29: iload_3
      30: aaload
      31: astore        8
      33: aload_1
      34: aload         8
      36: invokevirtual #16                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      39: ifeq          92
      42: iconst_0
      43: istore        9
      45: aload_0
      46: getfield      #10                 // Field usedBuckets:I
      49: aload_0
      50: getfield      #12                 // Field resizeThreshold:I
      53: if_icmple     83
      56: aload_0
      57: invokespecial #21                 // Method rehash:()V
      60: aload_0
      61: lload         4
      63: invokevirtual #22                 // Method unlockWrite:(J)V
      66: goto          80
      69: astore        10
      71: aload_0
      72: lload         4
      74: invokevirtual #22                 // Method unlockWrite:(J)V
      77: aload         10
      79: athrow
      80: goto          89
      83: aload_0
      84: lload         4
      86: invokevirtual #22                 // Method unlockWrite:(J)V
      89: iload         9
      91: ireturn
      92: aload         8
      94: invokestatic  #18                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet.access$400:()Ljava/lang/Object;
      97: if_acmpne     187
     100: iload         7
     102: iconst_m1
     103: if_icmpeq     112
     106: iload         7
     108: istore_3
     109: goto          122
     112: aload_0
     113: dup
     114: getfield      #10                 // Field usedBuckets:I
     117: iconst_1
     118: iadd
     119: putfield      #10                 // Field usedBuckets:I
     122: aload_0
     123: getfield      #9                  // Field values:[Ljava/lang/Object;
     126: iload_3
     127: aload_1
     128: aastore
     129: getstatic     #23                 // Field SIZE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     132: aload_0
     133: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.incrementAndGet:(Ljava/lang/Object;)I
     136: pop
     137: iconst_1
     138: istore        9
     140: aload_0
     141: getfield      #10                 // Field usedBuckets:I
     144: aload_0
     145: getfield      #12                 // Field resizeThreshold:I
     148: if_icmple     178
     151: aload_0
     152: invokespecial #21                 // Method rehash:()V
     155: aload_0
     156: lload         4
     158: invokevirtual #22                 // Method unlockWrite:(J)V
     161: goto          175
     164: astore        11
     166: aload_0
     167: lload         4
     169: invokevirtual #22                 // Method unlockWrite:(J)V
     172: aload         11
     174: athrow
     175: goto          184
     178: aload_0
     179: lload         4
     181: invokevirtual #22                 // Method unlockWrite:(J)V
     184: iload         9
     186: ireturn
     187: aload         8
     189: invokestatic  #25                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet.access$500:()Ljava/lang/Object;
     192: if_acmpne     204
     195: iload         7
     197: iconst_m1
     198: if_icmpne     204
     201: iload_3
     202: istore        7
     204: iinc          3, 1
     207: goto          17
     210: astore        12
     212: aload_0
     213: getfield      #10                 // Field usedBuckets:I
     216: aload_0
     217: getfield      #12                 // Field resizeThreshold:I
     220: if_icmple     250
     223: aload_0
     224: invokespecial #21                 // Method rehash:()V
     227: aload_0
     228: lload         4
     230: invokevirtual #22                 // Method unlockWrite:(J)V
     233: goto          247
     236: astore        13
     238: aload_0
     239: lload         4
     241: invokevirtual #22                 // Method unlockWrite:(J)V
     244: aload         13
     246: athrow
     247: goto          256
     250: aload_0
     251: lload         4
     253: invokevirtual #22                 // Method unlockWrite:(J)V
     256: aload         12
     258: athrow
    Exception table:
       from    to  target type
          56    60    69   any
          69    71    69   any
         151   155   164   any
         164   166   164   any
          17    45   210   any
          92   140   210   any
         223   227   236   any
         236   238   236   any
         187   212   210   any

  private boolean remove(V, int);
    Code:
       0: iload_2
       1: istore_3
       2: aload_0
       3: invokevirtual #20                 // Method writeLock:()J
       6: lstore        4
       8: aload_0
       9: getfield      #3                  // Field capacity:I
      12: istore        6
      14: iload_3
      15: i2l
      16: iload         6
      18: invokestatic  #14                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet.signSafeMod:(JI)I
      21: istore_3
      22: aload_0
      23: getfield      #9                  // Field values:[Ljava/lang/Object;
      26: iload_3
      27: aaload
      28: astore        7
      30: aload_1
      31: aload         7
      33: invokevirtual #16                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      36: ifeq          64
      39: getstatic     #23                 // Field SIZE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      42: aload_0
      43: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.decrementAndGet:(Ljava/lang/Object;)I
      46: pop
      47: aload_0
      48: iload_3
      49: invokespecial #27                 // Method cleanBucket:(I)V
      52: iconst_1
      53: istore        8
      55: aload_0
      56: lload         4
      58: invokevirtual #22                 // Method unlockWrite:(J)V
      61: iload         8
      63: ireturn
      64: aload         7
      66: invokestatic  #18                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet.access$400:()Ljava/lang/Object;
      69: if_acmpne     84
      72: iconst_0
      73: istore        8
      75: aload_0
      76: lload         4
      78: invokevirtual #22                 // Method unlockWrite:(J)V
      81: iload         8
      83: ireturn
      84: iinc          3, 1
      87: goto          8
      90: astore        9
      92: aload_0
      93: lload         4
      95: invokevirtual #22                 // Method unlockWrite:(J)V
      98: aload         9
     100: athrow
    Exception table:
       from    to  target type
           8    55    90   any
          64    75    90   any
          84    92    90   any

  void clear();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method writeLock:()J
       4: lstore_1
       5: aload_0
       6: getfield      #9                  // Field values:[Ljava/lang/Object;
       9: invokestatic  #18                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet.access$400:()Ljava/lang/Object;
      12: invokestatic  #28                 // Method java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V
      15: aload_0
      16: iconst_0
      17: putfield      #4                  // Field size:I
      20: aload_0
      21: iconst_0
      22: putfield      #10                 // Field usedBuckets:I
      25: aload_0
      26: lload_1
      27: invokevirtual #22                 // Method unlockWrite:(J)V
      30: goto          41
      33: astore_3
      34: aload_0
      35: lload_1
      36: invokevirtual #22                 // Method unlockWrite:(J)V
      39: aload_3
      40: athrow
      41: return
    Exception table:
       from    to  target type
           5    25    33   any

  int removeIf(java.util.function.Predicate<V>);
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method writeLock:()J
       4: lstore_2
       5: iconst_0
       6: istore        4
       8: aload_0
       9: getfield      #3                  // Field capacity:I
      12: iconst_1
      13: isub
      14: istore        5
      16: iload         5
      18: iflt          80
      21: aload_0
      22: getfield      #9                  // Field values:[Ljava/lang/Object;
      25: iload         5
      27: aaload
      28: astore        6
      30: aload         6
      32: invokestatic  #25                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet.access$500:()Ljava/lang/Object;
      35: if_acmpeq     74
      38: aload         6
      40: invokestatic  #18                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet.access$400:()Ljava/lang/Object;
      43: if_acmpeq     74
      46: aload_1
      47: aload         6
      49: invokeinterface #29,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      54: ifeq          74
      57: getstatic     #23                 // Field SIZE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      60: aload_0
      61: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.decrementAndGet:(Ljava/lang/Object;)I
      64: pop
      65: iinc          4, 1
      68: aload_0
      69: iload         5
      71: invokespecial #27                 // Method cleanBucket:(I)V
      74: iinc          5, -1
      77: goto          16
      80: iload         4
      82: istore        5
      84: aload_0
      85: lload_2
      86: invokevirtual #22                 // Method unlockWrite:(J)V
      89: iload         5
      91: ireturn
      92: astore        7
      94: aload_0
      95: lload_2
      96: invokevirtual #22                 // Method unlockWrite:(J)V
      99: aload         7
     101: athrow
    Exception table:
       from    to  target type
           8    84    92   any
          92    94    92   any

  private void cleanBucket(int);
    Code:
       0: iload_1
       1: iconst_1
       2: iadd
       3: i2l
       4: aload_0
       5: getfield      #3                  // Field capacity:I
       8: invokestatic  #14                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet.signSafeMod:(JI)I
      11: istore_2
      12: aload_0
      13: getfield      #9                  // Field values:[Ljava/lang/Object;
      16: iload_2
      17: aaload
      18: invokestatic  #18                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet.access$400:()Ljava/lang/Object;
      21: if_acmpne     46
      24: aload_0
      25: getfield      #9                  // Field values:[Ljava/lang/Object;
      28: iload_1
      29: invokestatic  #18                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet.access$400:()Ljava/lang/Object;
      32: aastore
      33: aload_0
      34: dup
      35: getfield      #10                 // Field usedBuckets:I
      38: iconst_1
      39: isub
      40: putfield      #10                 // Field usedBuckets:I
      43: goto          55
      46: aload_0
      47: getfield      #9                  // Field values:[Ljava/lang/Object;
      50: iload_1
      51: invokestatic  #25                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet.access$500:()Ljava/lang/Object;
      54: aastore
      55: return

  public void forEach(java.util.function.Consumer<? super V>);
    Code:
       0: aload_0
       1: getfield      #9                  // Field values:[Ljava/lang/Object;
       4: astore_2
       5: lconst_0
       6: lstore_3
       7: iconst_0
       8: istore        5
      10: iload         5
      12: aload_0
      13: getfield      #3                  // Field capacity:I
      16: if_icmpge     105
      19: lload_3
      20: lconst_0
      21: lcmp
      22: ifne          30
      25: aload_0
      26: invokevirtual #13                 // Method tryOptimisticRead:()J
      29: lstore_3
      30: aload_2
      31: iload         5
      33: aaload
      34: astore        6
      36: aload_0
      37: lload_3
      38: invokevirtual #15                 // Method validate:(J)Z
      41: ifne          75
      44: aload_0
      45: invokevirtual #19                 // Method readLock:()J
      48: lstore_3
      49: aload_2
      50: iload         5
      52: aaload
      53: astore        6
      55: aload_0
      56: lload_3
      57: invokevirtual #17                 // Method unlockRead:(J)V
      60: goto          73
      63: astore        7
      65: aload_0
      66: lload_3
      67: invokevirtual #17                 // Method unlockRead:(J)V
      70: aload         7
      72: athrow
      73: lconst_0
      74: lstore_3
      75: aload         6
      77: invokestatic  #25                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet.access$500:()Ljava/lang/Object;
      80: if_acmpeq     99
      83: aload         6
      85: invokestatic  #18                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet.access$400:()Ljava/lang/Object;
      88: if_acmpeq     99
      91: aload_1
      92: aload         6
      94: invokeinterface #30,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      99: iinc          5, 1
     102: goto          10
     105: return
    Exception table:
       from    to  target type
          49    55    63   any
          63    65    63   any

  private void rehash();
    Code:
       0: aload_0
       1: getfield      #3                  // Field capacity:I
       4: iconst_2
       5: imul
       6: istore_1
       7: iload_1
       8: anewarray     #7                  // class java/lang/Object
      11: checkcast     #8                  // class "[Ljava/lang/Object;"
      14: astore_2
      15: iconst_0
      16: istore_3
      17: iload_3
      18: aload_0
      19: getfield      #9                  // Field values:[Ljava/lang/Object;
      22: arraylength
      23: if_icmpge     62
      26: aload_0
      27: getfield      #9                  // Field values:[Ljava/lang/Object;
      30: iload_3
      31: aaload
      32: astore        4
      34: aload         4
      36: invokestatic  #18                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet.access$400:()Ljava/lang/Object;
      39: if_acmpeq     56
      42: aload         4
      44: invokestatic  #25                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet.access$500:()Ljava/lang/Object;
      47: if_acmpeq     56
      50: aload_2
      51: aload         4
      53: invokestatic  #31                 // Method insertValueNoLock:([Ljava/lang/Object;Ljava/lang/Object;)V
      56: iinc          3, 1
      59: goto          17
      62: aload_0
      63: aload_2
      64: putfield      #9                  // Field values:[Ljava/lang/Object;
      67: aload_0
      68: iload_1
      69: putfield      #3                  // Field capacity:I
      72: aload_0
      73: aload_0
      74: getfield      #4                  // Field size:I
      77: putfield      #10                 // Field usedBuckets:I
      80: aload_0
      81: aload_0
      82: getfield      #3                  // Field capacity:I
      85: i2f
      86: ldc           #11                 // float 0.66f
      88: fmul
      89: f2i
      90: putfield      #12                 // Field resizeThreshold:I
      93: return

  private static <V> void insertValueNoLock(V[], V);
    Code:
       0: aload_1
       1: invokestatic  #32                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet.hash:(Ljava/lang/Object;)J
       4: l2i
       5: istore_2
       6: iload_2
       7: i2l
       8: aload_0
       9: arraylength
      10: invokestatic  #14                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet.signSafeMod:(JI)I
      13: istore_2
      14: aload_0
      15: iload_2
      16: aaload
      17: astore_3
      18: aload_3
      19: invokestatic  #18                 // Method org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet.access$400:()Ljava/lang/Object;
      22: if_acmpne     30
      25: aload_0
      26: iload_2
      27: aload_1
      28: aastore
      29: return
      30: iinc          2, 1
      33: goto          6

  static int access$000(org.apache.pulsar.common.util.collections.ConcurrentOpenHashSet$Section);
    Code:
       0: aload_0
       1: getfield      #4                  // Field size:I
       4: ireturn

  static int access$100(org.apache.pulsar.common.util.collections.ConcurrentOpenHashSet$Section);
    Code:
       0: aload_0
       1: getfield      #3                  // Field capacity:I
       4: ireturn

  static boolean access$200(org.apache.pulsar.common.util.collections.ConcurrentOpenHashSet$Section, java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #2                  // Method remove:(Ljava/lang/Object;I)Z
       6: ireturn

  static {};
    Code:
       0: ldc           #33                 // class org/apache/pulsar/common/util/collections/ConcurrentOpenHashSet$Section
       2: ldc           #34                 // String size
       4: invokestatic  #35                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #23                 // Field SIZE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: return
}
