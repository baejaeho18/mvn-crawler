Compiled from "ClosedState.java"
public class net.jodah.failsafe.internal.ClosedState extends net.jodah.failsafe.internal.CircuitState {
  private final net.jodah.failsafe.internal.CircuitBreakerInternals internals;

  public net.jodah.failsafe.internal.ClosedState(net.jodah.failsafe.CircuitBreaker, net.jodah.failsafe.internal.CircuitBreakerInternals);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: aload_1
       4: invokestatic  #1                  // Method capacityFor:(Lnet/jodah/failsafe/CircuitBreaker;)I
       7: iconst_1
       8: aconst_null
       9: invokestatic  #2                  // InterfaceMethod net/jodah/failsafe/internal/CircuitStats.create:(Lnet/jodah/failsafe/CircuitBreaker;IZLnet/jodah/failsafe/internal/CircuitStats;)Lnet/jodah/failsafe/internal/CircuitStats;
      12: invokespecial #3                  // Method net/jodah/failsafe/internal/CircuitState."<init>":(Lnet/jodah/failsafe/CircuitBreaker;Lnet/jodah/failsafe/internal/CircuitStats;)V
      15: aload_0
      16: aload_2
      17: putfield      #4                  // Field internals:Lnet/jodah/failsafe/internal/CircuitBreakerInternals;
      20: return

  public boolean allowsExecution();
    Code:
       0: iconst_1
       1: ireturn

  public net.jodah.failsafe.CircuitBreaker$State getState();
    Code:
       0: getstatic     #5                  // Field net/jodah/failsafe/CircuitBreaker$State.CLOSED:Lnet/jodah/failsafe/CircuitBreaker$State;
       3: areturn

  public synchronized void handleConfigChange();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field breaker:Lnet/jodah/failsafe/CircuitBreaker;
       5: aload_0
       6: getfield      #6                  // Field breaker:Lnet/jodah/failsafe/CircuitBreaker;
       9: invokestatic  #1                  // Method capacityFor:(Lnet/jodah/failsafe/CircuitBreaker;)I
      12: iconst_1
      13: aload_0
      14: getfield      #7                  // Field stats:Lnet/jodah/failsafe/internal/CircuitStats;
      17: invokestatic  #2                  // InterfaceMethod net/jodah/failsafe/internal/CircuitStats.create:(Lnet/jodah/failsafe/CircuitBreaker;IZLnet/jodah/failsafe/internal/CircuitStats;)Lnet/jodah/failsafe/internal/CircuitStats;
      20: putfield      #7                  // Field stats:Lnet/jodah/failsafe/internal/CircuitStats;
      23: return

  synchronized void checkThreshold(net.jodah.failsafe.ExecutionContext);
    Code:
       0: aload_0
       1: getfield      #7                  // Field stats:Lnet/jodah/failsafe/internal/CircuitStats;
       4: invokeinterface #8,  1            // InterfaceMethod net/jodah/failsafe/internal/CircuitStats.getExecutionCount:()I
       9: aload_0
      10: getfield      #6                  // Field breaker:Lnet/jodah/failsafe/CircuitBreaker;
      13: invokevirtual #9                  // Method net/jodah/failsafe/CircuitBreaker.getFailureExecutionThreshold:()I
      16: if_icmplt     84
      19: aload_0
      20: getfield      #6                  // Field breaker:Lnet/jodah/failsafe/CircuitBreaker;
      23: invokevirtual #10                 // Method net/jodah/failsafe/CircuitBreaker.getFailureRateThreshold:()I
      26: i2d
      27: dstore_2
      28: dload_2
      29: dconst_0
      30: dcmpl
      31: ifeq          49
      34: aload_0
      35: getfield      #7                  // Field stats:Lnet/jodah/failsafe/internal/CircuitStats;
      38: invokeinterface #11,  1           // InterfaceMethod net/jodah/failsafe/internal/CircuitStats.getFailureRate:()I
      43: i2d
      44: dload_2
      45: dcmpl
      46: ifge          74
      49: dload_2
      50: dconst_0
      51: dcmpl
      52: ifne          84
      55: aload_0
      56: getfield      #7                  // Field stats:Lnet/jodah/failsafe/internal/CircuitStats;
      59: invokeinterface #12,  1           // InterfaceMethod net/jodah/failsafe/internal/CircuitStats.getFailureCount:()I
      64: aload_0
      65: getfield      #6                  // Field breaker:Lnet/jodah/failsafe/CircuitBreaker;
      68: invokevirtual #13                 // Method net/jodah/failsafe/CircuitBreaker.getFailureThreshold:()I
      71: if_icmplt     84
      74: aload_0
      75: getfield      #4                  // Field internals:Lnet/jodah/failsafe/internal/CircuitBreakerInternals;
      78: aload_1
      79: invokeinterface #14,  2           // InterfaceMethod net/jodah/failsafe/internal/CircuitBreakerInternals.open:(Lnet/jodah/failsafe/ExecutionContext;)V
      84: return

  private static int capacityFor(net.jodah.failsafe.CircuitBreaker<?>);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method net/jodah/failsafe/CircuitBreaker.getFailureExecutionThreshold:()I
       4: ifeq          12
       7: aload_0
       8: invokevirtual #9                  // Method net/jodah/failsafe/CircuitBreaker.getFailureExecutionThreshold:()I
      11: ireturn
      12: aload_0
      13: invokevirtual #15                 // Method net/jodah/failsafe/CircuitBreaker.getFailureThresholdingCapacity:()I
      16: ireturn
}
