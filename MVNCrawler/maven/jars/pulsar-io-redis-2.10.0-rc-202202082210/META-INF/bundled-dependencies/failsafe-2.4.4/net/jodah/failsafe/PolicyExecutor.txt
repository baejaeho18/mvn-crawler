Compiled from "PolicyExecutor.java"
public abstract class net.jodah.failsafe.PolicyExecutor<R, P extends net.jodah.failsafe.Policy<R>> {
  protected final P policy;

  protected final net.jodah.failsafe.AbstractExecution<R> execution;

  int policyIndex;

  protected net.jodah.failsafe.PolicyExecutor(P, net.jodah.failsafe.AbstractExecution<R>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field policy:Lnet/jodah/failsafe/Policy;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field execution:Lnet/jodah/failsafe/AbstractExecution;
      14: return

  protected net.jodah.failsafe.ExecutionResult preExecute();
    Code:
       0: aconst_null
       1: areturn

  protected java.util.function.Supplier<net.jodah.failsafe.ExecutionResult> supply(java.util.function.Supplier<net.jodah.failsafe.ExecutionResult>, net.jodah.failsafe.util.concurrent.Scheduler);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #4,  0              // InvokeDynamic #0:get:(Lnet/jodah/failsafe/PolicyExecutor;Ljava/util/function/Supplier;)Ljava/util/function/Supplier;
       7: areturn

  protected net.jodah.failsafe.ExecutionResult postExecute(net.jodah.failsafe.ExecutionResult);
    Code:
       0: aload_0
       1: getfield      #3                  // Field execution:Lnet/jodah/failsafe/AbstractExecution;
       4: invokevirtual #5                  // Method net/jodah/failsafe/AbstractExecution.recordAttempt:()V
       7: aload_0
       8: aload_1
       9: invokevirtual #6                  // Method isFailure:(Lnet/jodah/failsafe/ExecutionResult;)Z
      12: ifeq          32
      15: aload_0
      16: aload_1
      17: invokevirtual #7                  // Method net/jodah/failsafe/ExecutionResult.withFailure:()Lnet/jodah/failsafe/ExecutionResult;
      20: invokevirtual #8                  // Method onFailure:(Lnet/jodah/failsafe/ExecutionResult;)Lnet/jodah/failsafe/ExecutionResult;
      23: astore_1
      24: aload_0
      25: aload_1
      26: invokespecial #9                  // Method callFailureListener:(Lnet/jodah/failsafe/ExecutionResult;)V
      29: goto          47
      32: aload_1
      33: invokevirtual #10                 // Method net/jodah/failsafe/ExecutionResult.withSuccess:()Lnet/jodah/failsafe/ExecutionResult;
      36: astore_1
      37: aload_0
      38: aload_1
      39: invokevirtual #11                 // Method onSuccess:(Lnet/jodah/failsafe/ExecutionResult;)V
      42: aload_0
      43: aload_1
      44: invokespecial #12                 // Method callSuccessListener:(Lnet/jodah/failsafe/ExecutionResult;)V
      47: aload_1
      48: areturn

  protected java.util.function.Supplier<java.util.concurrent.CompletableFuture<net.jodah.failsafe.ExecutionResult>> supplyAsync(java.util.function.Supplier<java.util.concurrent.CompletableFuture<net.jodah.failsafe.ExecutionResult>>, net.jodah.failsafe.util.concurrent.Scheduler, net.jodah.failsafe.FailsafeFuture<R>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokedynamic #13,  0             // InvokeDynamic #1:get:(Lnet/jodah/failsafe/PolicyExecutor;Ljava/util/function/Supplier;Lnet/jodah/failsafe/util/concurrent/Scheduler;Lnet/jodah/failsafe/FailsafeFuture;)Ljava/util/function/Supplier;
       9: areturn

  protected java.util.concurrent.CompletableFuture<net.jodah.failsafe.ExecutionResult> postExecuteAsync(net.jodah.failsafe.ExecutionResult, net.jodah.failsafe.util.concurrent.Scheduler, net.jodah.failsafe.FailsafeFuture<R>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field execution:Lnet/jodah/failsafe/AbstractExecution;
       4: invokevirtual #5                  // Method net/jodah/failsafe/AbstractExecution.recordAttempt:()V
       7: aload_0
       8: aload_1
       9: invokevirtual #6                  // Method isFailure:(Lnet/jodah/failsafe/ExecutionResult;)Z
      12: ifeq          35
      15: aload_0
      16: aload_1
      17: invokevirtual #7                  // Method net/jodah/failsafe/ExecutionResult.withFailure:()Lnet/jodah/failsafe/ExecutionResult;
      20: aload_2
      21: aload_3
      22: invokevirtual #14                 // Method onFailureAsync:(Lnet/jodah/failsafe/ExecutionResult;Lnet/jodah/failsafe/util/concurrent/Scheduler;Lnet/jodah/failsafe/FailsafeFuture;)Ljava/util/concurrent/CompletableFuture;
      25: aload_0
      26: invokedynamic #15,  0             // InvokeDynamic #2:accept:(Lnet/jodah/failsafe/PolicyExecutor;)Ljava/util/function/BiConsumer;
      31: invokevirtual #16                 // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
      34: areturn
      35: aload_1
      36: invokevirtual #10                 // Method net/jodah/failsafe/ExecutionResult.withSuccess:()Lnet/jodah/failsafe/ExecutionResult;
      39: astore_1
      40: aload_0
      41: aload_1
      42: invokevirtual #11                 // Method onSuccess:(Lnet/jodah/failsafe/ExecutionResult;)V
      45: aload_0
      46: aload_1
      47: invokespecial #12                 // Method callSuccessListener:(Lnet/jodah/failsafe/ExecutionResult;)V
      50: aload_1
      51: invokestatic  #17                 // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      54: areturn

  protected boolean isFailure(net.jodah.failsafe.ExecutionResult);
    Code:
       0: aload_1
       1: invokevirtual #18                 // Method net/jodah/failsafe/ExecutionResult.isNonResult:()Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #2                  // Field policy:Lnet/jodah/failsafe/Policy;
      13: instanceof    #19                 // class net/jodah/failsafe/FailurePolicy
      16: ifeq          31
      19: aload_0
      20: getfield      #2                  // Field policy:Lnet/jodah/failsafe/Policy;
      23: checkcast     #19                 // class net/jodah/failsafe/FailurePolicy
      26: aload_1
      27: invokevirtual #20                 // Method net/jodah/failsafe/FailurePolicy.isFailure:(Lnet/jodah/failsafe/ExecutionResult;)Z
      30: ireturn
      31: aload_1
      32: invokevirtual #21                 // Method net/jodah/failsafe/ExecutionResult.getFailure:()Ljava/lang/Throwable;
      35: ifnull        42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: ireturn

  protected void onSuccess(net.jodah.failsafe.ExecutionResult);
    Code:
       0: return

  protected net.jodah.failsafe.ExecutionResult onFailure(net.jodah.failsafe.ExecutionResult);
    Code:
       0: aload_1
       1: areturn

  protected java.util.concurrent.CompletableFuture<net.jodah.failsafe.ExecutionResult> onFailureAsync(net.jodah.failsafe.ExecutionResult, net.jodah.failsafe.util.concurrent.Scheduler, net.jodah.failsafe.FailsafeFuture<R>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field execution:Lnet/jodah/failsafe/AbstractExecution;
       4: getfield      #22                 // Field net/jodah/failsafe/AbstractExecution.resultHandled:Z
       7: ifeq          14
      10: aload_1
      11: goto          19
      14: aload_0
      15: aload_1
      16: invokevirtual #8                  // Method onFailure:(Lnet/jodah/failsafe/ExecutionResult;)Lnet/jodah/failsafe/ExecutionResult;
      19: invokestatic  #17                 // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      22: areturn

  boolean executionCancelled();
    Code:
       0: aload_0
       1: getfield      #3                  // Field execution:Lnet/jodah/failsafe/AbstractExecution;
       4: getfield      #23                 // Field net/jodah/failsafe/AbstractExecution.cancelledIndex:I
       7: aload_0
       8: getfield      #24                 // Field policyIndex:I
      11: if_icmple     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  private void callSuccessListener(net.jodah.failsafe.ExecutionResult);
    Code:
       0: aload_1
       1: invokevirtual #25                 // Method net/jodah/failsafe/ExecutionResult.isComplete:()Z
       4: ifeq          46
       7: aload_0
       8: getfield      #2                  // Field policy:Lnet/jodah/failsafe/Policy;
      11: instanceof    #26                 // class net/jodah/failsafe/PolicyListeners
      14: ifeq          46
      17: aload_0
      18: getfield      #2                  // Field policy:Lnet/jodah/failsafe/Policy;
      21: checkcast     #26                 // class net/jodah/failsafe/PolicyListeners
      24: astore_2
      25: aload_2
      26: getfield      #27                 // Field net/jodah/failsafe/PolicyListeners.successListener:Lnet/jodah/failsafe/internal/EventListener;
      29: ifnull        46
      32: aload_2
      33: getfield      #27                 // Field net/jodah/failsafe/PolicyListeners.successListener:Lnet/jodah/failsafe/internal/EventListener;
      36: aload_1
      37: aload_0
      38: getfield      #3                  // Field execution:Lnet/jodah/failsafe/AbstractExecution;
      41: invokeinterface #28,  3           // InterfaceMethod net/jodah/failsafe/internal/EventListener.handle:(Lnet/jodah/failsafe/ExecutionResult;Lnet/jodah/failsafe/ExecutionContext;)V
      46: return

  private void callFailureListener(net.jodah.failsafe.ExecutionResult);
    Code:
       0: aload_1
       1: invokevirtual #25                 // Method net/jodah/failsafe/ExecutionResult.isComplete:()Z
       4: ifeq          46
       7: aload_0
       8: getfield      #2                  // Field policy:Lnet/jodah/failsafe/Policy;
      11: instanceof    #26                 // class net/jodah/failsafe/PolicyListeners
      14: ifeq          46
      17: aload_0
      18: getfield      #2                  // Field policy:Lnet/jodah/failsafe/Policy;
      21: checkcast     #26                 // class net/jodah/failsafe/PolicyListeners
      24: astore_2
      25: aload_2
      26: getfield      #29                 // Field net/jodah/failsafe/PolicyListeners.failureListener:Lnet/jodah/failsafe/internal/EventListener;
      29: ifnull        46
      32: aload_2
      33: getfield      #29                 // Field net/jodah/failsafe/PolicyListeners.failureListener:Lnet/jodah/failsafe/internal/EventListener;
      36: aload_1
      37: aload_0
      38: getfield      #3                  // Field execution:Lnet/jodah/failsafe/AbstractExecution;
      41: invokeinterface #28,  3           // InterfaceMethod net/jodah/failsafe/internal/EventListener.handle:(Lnet/jodah/failsafe/ExecutionResult;Lnet/jodah/failsafe/ExecutionContext;)V
      46: return

  private void lambda$postExecuteAsync$3(net.jodah.failsafe.ExecutionResult, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method callFailureListener:(Lnet/jodah/failsafe/ExecutionResult;)V
       5: return

  private java.util.concurrent.CompletableFuture lambda$supplyAsync$2(java.util.function.Supplier, net.jodah.failsafe.util.concurrent.Scheduler, net.jodah.failsafe.FailsafeFuture);
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method preExecute:()Lnet/jodah/failsafe/ExecutionResult;
       4: astore        4
       6: aload         4
       8: ifnull        24
      11: aload_0
      12: getfield      #3                  // Field execution:Lnet/jodah/failsafe/AbstractExecution;
      15: invokevirtual #31                 // Method net/jodah/failsafe/AbstractExecution.preExecute:()V
      18: aload         4
      20: invokestatic  #17                 // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      23: areturn
      24: aload_1
      25: invokeinterface #32,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      30: checkcast     #33                 // class java/util/concurrent/CompletableFuture
      33: aload_0
      34: aload_2
      35: aload_3
      36: invokedynamic #34,  0             // InvokeDynamic #3:apply:(Lnet/jodah/failsafe/PolicyExecutor;Lnet/jodah/failsafe/util/concurrent/Scheduler;Lnet/jodah/failsafe/FailsafeFuture;)Ljava/util/function/Function;
      41: invokevirtual #35                 // Method java/util/concurrent/CompletableFuture.thenCompose:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      44: areturn

  private java.util.concurrent.CompletionStage lambda$null$1(net.jodah.failsafe.util.concurrent.Scheduler, net.jodah.failsafe.FailsafeFuture, net.jodah.failsafe.ExecutionResult);
    Code:
       0: aload_3
       1: ifnonnull     10
       4: getstatic     #36                 // Field net/jodah/failsafe/ExecutionResult.NULL_FUTURE:Ljava/util/concurrent/CompletableFuture;
       7: goto          17
      10: aload_0
      11: aload_3
      12: aload_1
      13: aload_2
      14: invokevirtual #37                 // Method postExecuteAsync:(Lnet/jodah/failsafe/ExecutionResult;Lnet/jodah/failsafe/util/concurrent/Scheduler;Lnet/jodah/failsafe/FailsafeFuture;)Ljava/util/concurrent/CompletableFuture;
      17: areturn

  private net.jodah.failsafe.ExecutionResult lambda$supply$0(java.util.function.Supplier);
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method preExecute:()Lnet/jodah/failsafe/ExecutionResult;
       4: astore_2
       5: aload_2
       6: ifnull        18
       9: aload_0
      10: getfield      #3                  // Field execution:Lnet/jodah/failsafe/AbstractExecution;
      13: invokevirtual #31                 // Method net/jodah/failsafe/AbstractExecution.preExecute:()V
      16: aload_2
      17: areturn
      18: aload_0
      19: aload_1
      20: invokeinterface #32,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      25: checkcast     #38                 // class net/jodah/failsafe/ExecutionResult
      28: invokevirtual #39                 // Method postExecute:(Lnet/jodah/failsafe/ExecutionResult;)Lnet/jodah/failsafe/ExecutionResult;
      31: areturn
}
