Compiled from "Execution.java"
public class net.jodah.failsafe.Execution<R> extends net.jodah.failsafe.AbstractExecution<R> {
  public net.jodah.failsafe.Execution(net.jodah.failsafe.Policy<R>...);
    Code:
       0: aload_0
       1: getstatic     #1                  // Field net/jodah/failsafe/internal/util/DelegatingScheduler.INSTANCE:Lnet/jodah/failsafe/internal/util/DelegatingScheduler;
       4: new           #2                  // class net/jodah/failsafe/FailsafeExecutor
       7: dup
       8: aload_1
       9: ldc           #3                  // String policies
      11: invokestatic  #4                  // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      14: checkcast     #5                  // class "[Ljava/lang/Object;"
      17: invokestatic  #6                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      20: invokespecial #7                  // Method net/jodah/failsafe/FailsafeExecutor."<init>":(Ljava/util/List;)V
      23: invokespecial #8                  // Method net/jodah/failsafe/AbstractExecution."<init>":(Lnet/jodah/failsafe/util/concurrent/Scheduler;Lnet/jodah/failsafe/FailsafeExecutor;)V
      26: aload_0
      27: invokevirtual #9                  // Method preExecute:()V
      30: return

  net.jodah.failsafe.Execution(net.jodah.failsafe.FailsafeExecutor<R>);
    Code:
       0: aload_0
       1: getstatic     #1                  // Field net/jodah/failsafe/internal/util/DelegatingScheduler.INSTANCE:Lnet/jodah/failsafe/internal/util/DelegatingScheduler;
       4: aload_1
       5: invokespecial #8                  // Method net/jodah/failsafe/AbstractExecution."<init>":(Lnet/jodah/failsafe/util/concurrent/Scheduler;Lnet/jodah/failsafe/FailsafeExecutor;)V
       8: return

  public boolean canRetryFor(R);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method preExecute:()V
       4: aload_0
       5: new           #10                 // class net/jodah/failsafe/ExecutionResult
       8: dup
       9: aload_1
      10: aconst_null
      11: invokespecial #11                 // Method net/jodah/failsafe/ExecutionResult."<init>":(Ljava/lang/Object;Ljava/lang/Throwable;)V
      14: invokevirtual #12                 // Method postExecute:(Lnet/jodah/failsafe/ExecutionResult;)Lnet/jodah/failsafe/ExecutionResult;
      17: pop
      18: aload_0
      19: getfield      #13                 // Field completed:Z
      22: ifne          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  public boolean canRetryFor(R, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method preExecute:()V
       4: aload_0
       5: new           #10                 // class net/jodah/failsafe/ExecutionResult
       8: dup
       9: aload_1
      10: aload_2
      11: invokespecial #11                 // Method net/jodah/failsafe/ExecutionResult."<init>":(Ljava/lang/Object;Ljava/lang/Throwable;)V
      14: invokevirtual #12                 // Method postExecute:(Lnet/jodah/failsafe/ExecutionResult;)Lnet/jodah/failsafe/ExecutionResult;
      17: pop
      18: aload_0
      19: getfield      #13                 // Field completed:Z
      22: ifne          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  public boolean canRetryOn(java.lang.Throwable);
    Code:
       0: aload_1
       1: ldc           #14                 // String failure
       3: invokestatic  #4                  // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokevirtual #9                  // Method preExecute:()V
      11: aload_0
      12: new           #10                 // class net/jodah/failsafe/ExecutionResult
      15: dup
      16: aconst_null
      17: aload_1
      18: invokespecial #11                 // Method net/jodah/failsafe/ExecutionResult."<init>":(Ljava/lang/Object;Ljava/lang/Throwable;)V
      21: invokevirtual #12                 // Method postExecute:(Lnet/jodah/failsafe/ExecutionResult;)Lnet/jodah/failsafe/ExecutionResult;
      24: pop
      25: aload_0
      26: getfield      #13                 // Field completed:Z
      29: ifne          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn

  public void complete();
    Code:
       0: aload_0
       1: getstatic     #15                 // Field net/jodah/failsafe/ExecutionResult.NONE:Lnet/jodah/failsafe/ExecutionResult;
       4: invokevirtual #12                 // Method postExecute:(Lnet/jodah/failsafe/ExecutionResult;)Lnet/jodah/failsafe/ExecutionResult;
       7: pop
       8: return

  public boolean complete(R);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method preExecute:()V
       4: aload_0
       5: new           #10                 // class net/jodah/failsafe/ExecutionResult
       8: dup
       9: aload_1
      10: aconst_null
      11: invokespecial #11                 // Method net/jodah/failsafe/ExecutionResult."<init>":(Ljava/lang/Object;Ljava/lang/Throwable;)V
      14: invokevirtual #12                 // Method postExecute:(Lnet/jodah/failsafe/ExecutionResult;)Lnet/jodah/failsafe/ExecutionResult;
      17: pop
      18: aload_0
      19: getfield      #13                 // Field completed:Z
      22: ireturn

  public boolean recordFailure(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method canRetryOn:(Ljava/lang/Throwable;)Z
       5: ireturn

  net.jodah.failsafe.ExecutionResult executeSync(java.util.function.Supplier<net.jodah.failsafe.ExecutionResult>);
    Code:
       0: aload_0
       1: getfield      #17                 // Field policyExecutors:Ljava/util/List;
       4: invokeinterface #18,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          42
      19: aload_2
      20: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #21                 // class net/jodah/failsafe/PolicyExecutor
      28: astore_3
      29: aload_3
      30: aload_1
      31: aload_0
      32: getfield      #22                 // Field scheduler:Lnet/jodah/failsafe/util/concurrent/Scheduler;
      35: invokevirtual #23                 // Method net/jodah/failsafe/PolicyExecutor.supply:(Ljava/util/function/Supplier;Lnet/jodah/failsafe/util/concurrent/Scheduler;)Ljava/util/function/Supplier;
      38: astore_1
      39: goto          10
      42: aload_1
      43: invokeinterface #24,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      48: checkcast     #10                 // class net/jodah/failsafe/ExecutionResult
      51: astore_2
      52: aload_0
      53: aload_2
      54: invokevirtual #25                 // Method net/jodah/failsafe/ExecutionResult.isComplete:()Z
      57: putfield      #13                 // Field completed:Z
      60: aload_0
      61: getfield      #26                 // Field executor:Lnet/jodah/failsafe/FailsafeExecutor;
      64: aload_2
      65: aload_0
      66: invokevirtual #27                 // Method net/jodah/failsafe/FailsafeExecutor.handleComplete:(Lnet/jodah/failsafe/ExecutionResult;Lnet/jodah/failsafe/AbstractExecution;)V
      69: aload_2
      70: areturn
}
