Compiled from "CircuitBreakerExecutor.java"
class net.jodah.failsafe.CircuitBreakerExecutor<R> extends net.jodah.failsafe.PolicyExecutor<R, net.jodah.failsafe.CircuitBreaker<R>> {
  net.jodah.failsafe.CircuitBreakerExecutor(net.jodah.failsafe.CircuitBreaker<R>, net.jodah.failsafe.AbstractExecution<R>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method net/jodah/failsafe/PolicyExecutor."<init>":(Lnet/jodah/failsafe/Policy;Lnet/jodah/failsafe/AbstractExecution;)V
       6: return

  protected net.jodah.failsafe.ExecutionResult preExecute();
    Code:
       0: aload_0
       1: getfield      #2                  // Field policy:Lnet/jodah/failsafe/Policy;
       4: checkcast     #3                  // class net/jodah/failsafe/CircuitBreaker
       7: invokevirtual #4                  // Method net/jodah/failsafe/CircuitBreaker.allowsExecution:()Z
      10: ifeq          25
      13: aload_0
      14: getfield      #2                  // Field policy:Lnet/jodah/failsafe/Policy;
      17: checkcast     #3                  // class net/jodah/failsafe/CircuitBreaker
      20: invokevirtual #5                  // Method net/jodah/failsafe/CircuitBreaker.preExecute:()V
      23: aconst_null
      24: areturn
      25: new           #6                  // class net/jodah/failsafe/CircuitBreakerOpenException
      28: dup
      29: aload_0
      30: getfield      #2                  // Field policy:Lnet/jodah/failsafe/Policy;
      33: checkcast     #3                  // class net/jodah/failsafe/CircuitBreaker
      36: invokespecial #7                  // Method net/jodah/failsafe/CircuitBreakerOpenException."<init>":(Lnet/jodah/failsafe/CircuitBreaker;)V
      39: invokestatic  #8                  // Method net/jodah/failsafe/ExecutionResult.failure:(Ljava/lang/Throwable;)Lnet/jodah/failsafe/ExecutionResult;
      42: areturn

  protected void onSuccess(net.jodah.failsafe.ExecutionResult);
    Code:
       0: aload_0
       1: getfield      #2                  // Field policy:Lnet/jodah/failsafe/Policy;
       4: checkcast     #3                  // class net/jodah/failsafe/CircuitBreaker
       7: invokevirtual #9                  // Method net/jodah/failsafe/CircuitBreaker.recordSuccess:()V
      10: return

  protected net.jodah.failsafe.ExecutionResult onFailure(net.jodah.failsafe.ExecutionResult);
    Code:
       0: aload_0
       1: getfield      #2                  // Field policy:Lnet/jodah/failsafe/Policy;
       4: checkcast     #3                  // class net/jodah/failsafe/CircuitBreaker
       7: aload_0
       8: getfield      #10                 // Field execution:Lnet/jodah/failsafe/AbstractExecution;
      11: invokevirtual #11                 // Method net/jodah/failsafe/CircuitBreaker.recordExecutionFailure:(Lnet/jodah/failsafe/ExecutionContext;)V
      14: aload_1
      15: areturn
}
