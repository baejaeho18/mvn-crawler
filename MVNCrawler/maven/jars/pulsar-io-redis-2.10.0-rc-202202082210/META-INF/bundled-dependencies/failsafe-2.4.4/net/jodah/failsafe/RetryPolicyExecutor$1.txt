Compiled from "RetryPolicyExecutor.java"
class net.jodah.failsafe.RetryPolicyExecutor$1 implements java.util.concurrent.Callable<java.lang.Object> {
  volatile net.jodah.failsafe.ExecutionResult previousResult;

  final java.util.function.Supplier val$supplier;

  final java.util.concurrent.CompletableFuture val$promise;

  final net.jodah.failsafe.util.concurrent.Scheduler val$scheduler;

  final net.jodah.failsafe.FailsafeFuture val$future;

  final net.jodah.failsafe.RetryPolicyExecutor this$0;

  net.jodah.failsafe.RetryPolicyExecutor$1(net.jodah.failsafe.RetryPolicyExecutor, java.util.function.Supplier, java.util.concurrent.CompletableFuture, net.jodah.failsafe.util.concurrent.Scheduler, net.jodah.failsafe.FailsafeFuture);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lnet/jodah/failsafe/RetryPolicyExecutor;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$supplier:Ljava/util/function/Supplier;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$promise:Ljava/util/concurrent/CompletableFuture;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$scheduler:Lnet/jodah/failsafe/util/concurrent/Scheduler;
      21: aload_0
      22: aload         5
      24: putfield      #5                  // Field val$future:Lnet/jodah/failsafe/FailsafeFuture;
      27: aload_0
      28: invokespecial #6                  // Method java/lang/Object."<init>":()V
      31: return

  public java.lang.Object call();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lnet/jodah/failsafe/RetryPolicyExecutor;
       4: invokestatic  #7                  // Method net/jodah/failsafe/RetryPolicyExecutor.access$000:(Lnet/jodah/failsafe/RetryPolicyExecutor;)Lnet/jodah/failsafe/internal/EventListener;
       7: ifnull        40
      10: aload_0
      11: getfield      #8                  // Field previousResult:Lnet/jodah/failsafe/ExecutionResult;
      14: ifnull        40
      17: aload_0
      18: getfield      #1                  // Field this$0:Lnet/jodah/failsafe/RetryPolicyExecutor;
      21: invokestatic  #7                  // Method net/jodah/failsafe/RetryPolicyExecutor.access$000:(Lnet/jodah/failsafe/RetryPolicyExecutor;)Lnet/jodah/failsafe/internal/EventListener;
      24: aload_0
      25: getfield      #8                  // Field previousResult:Lnet/jodah/failsafe/ExecutionResult;
      28: aload_0
      29: getfield      #1                  // Field this$0:Lnet/jodah/failsafe/RetryPolicyExecutor;
      32: getfield      #9                  // Field net/jodah/failsafe/RetryPolicyExecutor.execution:Lnet/jodah/failsafe/AbstractExecution;
      35: invokeinterface #10,  3           // InterfaceMethod net/jodah/failsafe/internal/EventListener.handle:(Lnet/jodah/failsafe/ExecutionResult;Lnet/jodah/failsafe/ExecutionContext;)V
      40: aload_0
      41: getfield      #2                  // Field val$supplier:Ljava/util/function/Supplier;
      44: invokeinterface #11,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      49: checkcast     #12                 // class java/util/concurrent/CompletableFuture
      52: aload_0
      53: aload_0
      54: getfield      #3                  // Field val$promise:Ljava/util/concurrent/CompletableFuture;
      57: aload_0
      58: getfield      #4                  // Field val$scheduler:Lnet/jodah/failsafe/util/concurrent/Scheduler;
      61: aload_0
      62: getfield      #5                  // Field val$future:Lnet/jodah/failsafe/FailsafeFuture;
      65: invokedynamic #13,  0             // InvokeDynamic #0:accept:(Lnet/jodah/failsafe/RetryPolicyExecutor$1;Ljava/util/concurrent/CompletableFuture;Lnet/jodah/failsafe/util/concurrent/Scheduler;Lnet/jodah/failsafe/FailsafeFuture;)Ljava/util/function/BiConsumer;
      70: invokevirtual #14                 // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
      73: pop
      74: aconst_null
      75: areturn

  private void lambda$call$2(java.util.concurrent.CompletableFuture, net.jodah.failsafe.util.concurrent.Scheduler, net.jodah.failsafe.FailsafeFuture, net.jodah.failsafe.ExecutionResult, java.lang.Throwable);
    Code:
       0: aload         5
       2: ifnull        15
       5: aload_1
       6: aload         5
       8: invokevirtual #15                 // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
      11: pop
      12: goto          83
      15: aload         4
      17: ifnonnull     29
      20: aload_1
      21: aconst_null
      22: invokevirtual #16                 // Method java/util/concurrent/CompletableFuture.complete:(Ljava/lang/Object;)Z
      25: pop
      26: goto          83
      29: aload_0
      30: getfield      #1                  // Field this$0:Lnet/jodah/failsafe/RetryPolicyExecutor;
      33: invokestatic  #17                 // Method net/jodah/failsafe/RetryPolicyExecutor.access$100:(Lnet/jodah/failsafe/RetryPolicyExecutor;)Z
      36: ifne          49
      39: aload_0
      40: getfield      #1                  // Field this$0:Lnet/jodah/failsafe/RetryPolicyExecutor;
      43: invokevirtual #18                 // Method net/jodah/failsafe/RetryPolicyExecutor.executionCancelled:()Z
      46: ifeq          59
      49: aload_1
      50: aload         4
      52: invokevirtual #16                 // Method java/util/concurrent/CompletableFuture.complete:(Ljava/lang/Object;)Z
      55: pop
      56: goto          83
      59: aload_0
      60: getfield      #1                  // Field this$0:Lnet/jodah/failsafe/RetryPolicyExecutor;
      63: aload         4
      65: aload_2
      66: aload_3
      67: invokevirtual #19                 // Method net/jodah/failsafe/RetryPolicyExecutor.postExecuteAsync:(Lnet/jodah/failsafe/ExecutionResult;Lnet/jodah/failsafe/util/concurrent/Scheduler;Lnet/jodah/failsafe/FailsafeFuture;)Ljava/util/concurrent/CompletableFuture;
      70: aload_0
      71: aload_1
      72: aload_3
      73: aload_2
      74: invokedynamic #20,  0             // InvokeDynamic #1:accept:(Lnet/jodah/failsafe/RetryPolicyExecutor$1;Ljava/util/concurrent/CompletableFuture;Lnet/jodah/failsafe/FailsafeFuture;Lnet/jodah/failsafe/util/concurrent/Scheduler;)Ljava/util/function/BiConsumer;
      79: invokevirtual #14                 // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
      82: pop
      83: return

  private void lambda$null$1(java.util.concurrent.CompletableFuture, net.jodah.failsafe.FailsafeFuture, net.jodah.failsafe.util.concurrent.Scheduler, net.jodah.failsafe.ExecutionResult, java.lang.Throwable);
    Code:
       0: aload         5
       2: ifnull        15
       5: aload_1
       6: aload         5
       8: invokevirtual #15                 // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
      11: pop
      12: goto          162
      15: aload         4
      17: ifnonnull     29
      20: aload_1
      21: aconst_null
      22: invokevirtual #16                 // Method java/util/concurrent/CompletableFuture.complete:(Ljava/lang/Object;)Z
      25: pop
      26: goto          162
      29: aload         4
      31: invokevirtual #21                 // Method net/jodah/failsafe/ExecutionResult.isComplete:()Z
      34: ifne          47
      37: aload_0
      38: getfield      #1                  // Field this$0:Lnet/jodah/failsafe/RetryPolicyExecutor;
      41: invokevirtual #18                 // Method net/jodah/failsafe/RetryPolicyExecutor.executionCancelled:()Z
      44: ifeq          57
      47: aload_1
      48: aload         4
      50: invokevirtual #16                 // Method java/util/concurrent/CompletableFuture.complete:(Ljava/lang/Object;)Z
      53: pop
      54: goto          162
      57: aload_2
      58: dup
      59: astore        6
      61: monitorenter
      62: aload_2
      63: invokevirtual #22                 // Method net/jodah/failsafe/FailsafeFuture.isDone:()Z
      66: ifne          148
      69: aload_0
      70: getfield      #1                  // Field this$0:Lnet/jodah/failsafe/RetryPolicyExecutor;
      73: invokestatic  #23                 // Method net/jodah/failsafe/RetryPolicyExecutor.access$200:(Lnet/jodah/failsafe/RetryPolicyExecutor;)Lnet/jodah/failsafe/internal/EventListener;
      76: ifnull        100
      79: aload_0
      80: getfield      #1                  // Field this$0:Lnet/jodah/failsafe/RetryPolicyExecutor;
      83: invokestatic  #23                 // Method net/jodah/failsafe/RetryPolicyExecutor.access$200:(Lnet/jodah/failsafe/RetryPolicyExecutor;)Lnet/jodah/failsafe/internal/EventListener;
      86: aload         4
      88: aload_0
      89: getfield      #1                  // Field this$0:Lnet/jodah/failsafe/RetryPolicyExecutor;
      92: getfield      #9                  // Field net/jodah/failsafe/RetryPolicyExecutor.execution:Lnet/jodah/failsafe/AbstractExecution;
      95: invokeinterface #10,  3           // InterfaceMethod net/jodah/failsafe/internal/EventListener.handle:(Lnet/jodah/failsafe/ExecutionResult;Lnet/jodah/failsafe/ExecutionContext;)V
     100: aload_0
     101: aload         4
     103: putfield      #8                  // Field previousResult:Lnet/jodah/failsafe/ExecutionResult;
     106: aload_3
     107: aload_0
     108: aload         4
     110: invokevirtual #24                 // Method net/jodah/failsafe/ExecutionResult.getWaitNanos:()J
     113: getstatic     #25                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     116: invokeinterface #26,  5           // InterfaceMethod net/jodah/failsafe/util/concurrent/Scheduler.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
     121: astore        7
     123: aload_2
     124: aload_0
     125: aload         7
     127: aload_1
     128: invokedynamic #27,  0             // InvokeDynamic #2:accept:(Lnet/jodah/failsafe/RetryPolicyExecutor$1;Ljava/util/concurrent/Future;Ljava/util/concurrent/CompletableFuture;)Ljava/util/function/BiConsumer;
     133: invokevirtual #28                 // Method net/jodah/failsafe/FailsafeFuture.injectCancelFn:(Ljava/util/function/BiConsumer;)V
     136: goto          148
     139: astore        7
     141: aload_1
     142: aload         7
     144: invokevirtual #15                 // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
     147: pop
     148: aload         6
     150: monitorexit
     151: goto          162
     154: astore        8
     156: aload         6
     158: monitorexit
     159: aload         8
     161: athrow
     162: return
    Exception table:
       from    to  target type
          69   136   139   Class java/lang/Throwable
          62   151   154   any
         154   159   154   any

  private void lambda$null$0(java.util.concurrent.Future, java.util.concurrent.CompletableFuture, java.lang.Boolean, net.jodah.failsafe.ExecutionResult);
    Code:
       0: aload_1
       1: aload_3
       2: invokevirtual #30                 // Method java/lang/Boolean.booleanValue:()Z
       5: invokeinterface #31,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      10: pop
      11: aload_0
      12: getfield      #1                  // Field this$0:Lnet/jodah/failsafe/RetryPolicyExecutor;
      15: invokevirtual #18                 // Method net/jodah/failsafe/RetryPolicyExecutor.executionCancelled:()Z
      18: ifeq          28
      21: aload_2
      22: aload         4
      24: invokevirtual #16                 // Method java/util/concurrent/CompletableFuture.complete:(Ljava/lang/Object;)Z
      27: pop
      28: return
}
