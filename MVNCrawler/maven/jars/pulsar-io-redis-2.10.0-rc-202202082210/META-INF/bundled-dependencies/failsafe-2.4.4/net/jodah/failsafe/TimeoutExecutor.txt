Compiled from "TimeoutExecutor.java"
class net.jodah.failsafe.TimeoutExecutor<R> extends net.jodah.failsafe.PolicyExecutor<R, net.jodah.failsafe.Timeout<R>> {
  net.jodah.failsafe.TimeoutExecutor(net.jodah.failsafe.Timeout<R>, net.jodah.failsafe.AbstractExecution<R>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method net/jodah/failsafe/PolicyExecutor."<init>":(Lnet/jodah/failsafe/Policy;Lnet/jodah/failsafe/AbstractExecution;)V
       6: return

  protected boolean isFailure(net.jodah.failsafe.ExecutionResult);
    Code:
       0: aload_0
       1: getfield      #2                  // Field execution:Lnet/jodah/failsafe/AbstractExecution;
       4: invokevirtual #3                  // Method net/jodah/failsafe/AbstractExecution.isAsyncExecution:()Z
       7: ifeq          41
      10: aload_0
      11: getfield      #2                  // Field execution:Lnet/jodah/failsafe/AbstractExecution;
      14: invokevirtual #4                  // Method net/jodah/failsafe/AbstractExecution.getElapsedAttemptTime:()Ljava/time/Duration;
      17: invokevirtual #5                  // Method java/time/Duration.toNanos:()J
      20: aload_0
      21: getfield      #6                  // Field policy:Lnet/jodah/failsafe/Policy;
      24: checkcast     #7                  // class net/jodah/failsafe/Timeout
      27: invokevirtual #8                  // Method net/jodah/failsafe/Timeout.getTimeout:()Ljava/time/Duration;
      30: invokevirtual #5                  // Method java/time/Duration.toNanos:()J
      33: lcmp
      34: iflt          41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: istore_2
      43: iload_2
      44: ifne          64
      47: aload_1
      48: invokevirtual #9                  // Method net/jodah/failsafe/ExecutionResult.isNonResult:()Z
      51: ifne          68
      54: aload_1
      55: invokevirtual #10                 // Method net/jodah/failsafe/ExecutionResult.getFailure:()Ljava/lang/Throwable;
      58: instanceof    #11                 // class net/jodah/failsafe/TimeoutExceededException
      61: ifeq          68
      64: iconst_1
      65: goto          69
      68: iconst_0
      69: ireturn

  protected net.jodah.failsafe.ExecutionResult onFailure(net.jodah.failsafe.ExecutionResult);
    Code:
       0: aload_1
       1: invokevirtual #10                 // Method net/jodah/failsafe/ExecutionResult.getFailure:()Ljava/lang/Throwable;
       4: instanceof    #11                 // class net/jodah/failsafe/TimeoutExceededException
       7: ifne          28
      10: new           #11                 // class net/jodah/failsafe/TimeoutExceededException
      13: dup
      14: aload_0
      15: getfield      #6                  // Field policy:Lnet/jodah/failsafe/Policy;
      18: checkcast     #7                  // class net/jodah/failsafe/Timeout
      21: invokespecial #12                 // Method net/jodah/failsafe/TimeoutExceededException."<init>":(Lnet/jodah/failsafe/Timeout;)V
      24: invokestatic  #13                 // Method net/jodah/failsafe/ExecutionResult.failure:(Ljava/lang/Throwable;)Lnet/jodah/failsafe/ExecutionResult;
      27: astore_1
      28: aload_1
      29: areturn

  protected java.util.function.Supplier<net.jodah.failsafe.ExecutionResult> supply(java.util.function.Supplier<net.jodah.failsafe.ExecutionResult>, net.jodah.failsafe.util.concurrent.Scheduler);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #14,  0             // InvokeDynamic #0:get:(Lnet/jodah/failsafe/TimeoutExecutor;Ljava/util/function/Supplier;)Ljava/util/function/Supplier;
       7: areturn

  protected java.util.function.Supplier<java.util.concurrent.CompletableFuture<net.jodah.failsafe.ExecutionResult>> supplyAsync(java.util.function.Supplier<java.util.concurrent.CompletableFuture<net.jodah.failsafe.ExecutionResult>>, net.jodah.failsafe.util.concurrent.Scheduler, net.jodah.failsafe.FailsafeFuture<R>);
    Code:
       0: aload_0
       1: aload_3
       2: aload_1
       3: aload_2
       4: invokedynamic #15,  0             // InvokeDynamic #1:get:(Lnet/jodah/failsafe/TimeoutExecutor;Lnet/jodah/failsafe/FailsafeFuture;Ljava/util/function/Supplier;Lnet/jodah/failsafe/util/concurrent/Scheduler;)Ljava/util/function/Supplier;
       9: areturn

  private java.util.concurrent.CompletableFuture lambda$supplyAsync$4(net.jodah.failsafe.FailsafeFuture, java.util.function.Supplier, net.jodah.failsafe.util.concurrent.Scheduler);
    Code:
       0: new           #16                 // class java/util/concurrent/atomic/AtomicReference
       3: dup
       4: invokespecial #17                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       7: astore        4
       9: new           #18                 // class java/util/concurrent/CompletableFuture
      12: dup
      13: invokespecial #19                 // Method java/util/concurrent/CompletableFuture."<init>":()V
      16: astore        5
      18: new           #16                 // class java/util/concurrent/atomic/AtomicReference
      21: dup
      22: invokespecial #17                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      25: astore        6
      27: aload_0
      28: getfield      #2                  // Field execution:Lnet/jodah/failsafe/AbstractExecution;
      31: invokevirtual #3                  // Method net/jodah/failsafe/AbstractExecution.isAsyncExecution:()Z
      34: ifne          132
      37: aload_1
      38: dup
      39: astore        7
      41: monitorenter
      42: aload_1
      43: invokevirtual #20                 // Method net/jodah/failsafe/FailsafeFuture.isDone:()Z
      46: ifne          118
      49: aload         6
      51: getstatic     #21                 // Field net/jodah/failsafe/util/concurrent/Scheduler.DEFAULT:Lnet/jodah/failsafe/util/concurrent/Scheduler;
      54: aload_0
      55: aload         4
      57: aload_1
      58: invokedynamic #22,  0             // InvokeDynamic #2:call:(Lnet/jodah/failsafe/TimeoutExecutor;Ljava/util/concurrent/atomic/AtomicReference;Lnet/jodah/failsafe/FailsafeFuture;)Ljava/util/concurrent/Callable;
      63: aload_0
      64: getfield      #6                  // Field policy:Lnet/jodah/failsafe/Policy;
      67: checkcast     #7                  // class net/jodah/failsafe/Timeout
      70: invokevirtual #8                  // Method net/jodah/failsafe/Timeout.getTimeout:()Ljava/time/Duration;
      73: invokevirtual #5                  // Method java/time/Duration.toNanos:()J
      76: getstatic     #23                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      79: invokeinterface #24,  5           // InterfaceMethod net/jodah/failsafe/util/concurrent/Scheduler.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      84: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      87: aload_1
      88: aload         6
      90: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      93: checkcast     #27                 // class java/util/concurrent/Future
      96: invokevirtual #28                 // Method net/jodah/failsafe/FailsafeFuture.injectTimeout:(Ljava/util/concurrent/Future;)V
      99: goto          118
     102: astore        8
     104: aload         5
     106: aload         8
     108: invokevirtual #30                 // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
     111: pop
     112: aload         5
     114: aload         7
     116: monitorexit
     117: areturn
     118: aload         7
     120: monitorexit
     121: goto          132
     124: astore        9
     126: aload         7
     128: monitorexit
     129: aload         9
     131: athrow
     132: aload_2
     133: invokeinterface #31,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
     138: checkcast     #18                 // class java/util/concurrent/CompletableFuture
     141: aload_0
     142: aload         4
     144: aload         5
     146: aload         6
     148: aload_3
     149: aload_1
     150: invokedynamic #32,  0             // InvokeDynamic #3:accept:(Lnet/jodah/failsafe/TimeoutExecutor;Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/atomic/AtomicReference;Lnet/jodah/failsafe/util/concurrent/Scheduler;Lnet/jodah/failsafe/FailsafeFuture;)Ljava/util/function/BiConsumer;
     155: invokevirtual #33                 // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
     158: pop
     159: aload         5
     161: areturn
    Exception table:
       from    to  target type
          49    99   102   Class java/lang/Throwable
          42   117   124   any
         118   121   124   any
         124   129   124   any

  private void lambda$null$3(java.util.concurrent.atomic.AtomicReference, java.util.concurrent.CompletableFuture, java.util.concurrent.atomic.AtomicReference, net.jodah.failsafe.util.concurrent.Scheduler, net.jodah.failsafe.FailsafeFuture, net.jodah.failsafe.ExecutionResult, java.lang.Throwable);
    Code:
       0: aload_1
       1: aconst_null
       2: aload         6
       4: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
       7: ifeq          49
      10: aload         7
      12: ifnull        23
      15: aload_2
      16: aload         7
      18: invokevirtual #30                 // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
      21: pop
      22: return
      23: aload_3
      24: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      27: checkcast     #27                 // class java/util/concurrent/Future
      30: astore        8
      32: aload         8
      34: ifnull        46
      37: aload         8
      39: iconst_0
      40: invokeinterface #35,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      45: pop
      46: goto          63
      49: aload_1
      50: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      53: checkcast     #36                 // class net/jodah/failsafe/ExecutionResult
      56: astore        6
      58: goto          63
      61: astore        8
      63: aload_0
      64: aload         6
      66: aload         4
      68: aload         5
      70: invokevirtual #38                 // Method postExecuteAsync:(Lnet/jodah/failsafe/ExecutionResult;Lnet/jodah/failsafe/util/concurrent/Scheduler;Lnet/jodah/failsafe/FailsafeFuture;)Ljava/util/concurrent/CompletableFuture;
      73: pop
      74: aload_2
      75: aload         6
      77: invokevirtual #39                 // Method java/util/concurrent/CompletableFuture.complete:(Ljava/lang/Object;)Z
      80: pop
      81: return
    Exception table:
       from    to  target type
          49    58    61   Class java/lang/Exception

  private java.lang.Object lambda$null$2(java.util.concurrent.atomic.AtomicReference, net.jodah.failsafe.FailsafeFuture) throws java.lang.Exception;
    Code:
       0: new           #11                 // class net/jodah/failsafe/TimeoutExceededException
       3: dup
       4: aload_0
       5: getfield      #6                  // Field policy:Lnet/jodah/failsafe/Policy;
       8: checkcast     #7                  // class net/jodah/failsafe/Timeout
      11: invokespecial #12                 // Method net/jodah/failsafe/TimeoutExceededException."<init>":(Lnet/jodah/failsafe/Timeout;)V
      14: invokestatic  #13                 // Method net/jodah/failsafe/ExecutionResult.failure:(Ljava/lang/Throwable;)Lnet/jodah/failsafe/ExecutionResult;
      17: astore_3
      18: aload_1
      19: aconst_null
      20: aload_3
      21: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      24: ifeq          77
      27: aload_0
      28: getfield      #6                  // Field policy:Lnet/jodah/failsafe/Policy;
      31: checkcast     #7                  // class net/jodah/failsafe/Timeout
      34: invokevirtual #40                 // Method net/jodah/failsafe/Timeout.canInterrupt:()Z
      37: istore        4
      39: iload         4
      41: ifeq          59
      44: aload_0
      45: getfield      #2                  // Field execution:Lnet/jodah/failsafe/AbstractExecution;
      48: aload_1
      49: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      52: checkcast     #36                 // class net/jodah/failsafe/ExecutionResult
      55: iconst_1
      56: invokevirtual #41                 // Method net/jodah/failsafe/AbstractExecution.record:(Lnet/jodah/failsafe/ExecutionResult;Z)V
      59: aload_0
      60: getfield      #2                  // Field execution:Lnet/jodah/failsafe/AbstractExecution;
      63: aload_0
      64: getfield      #42                 // Field policyIndex:I
      67: putfield      #43                 // Field net/jodah/failsafe/AbstractExecution.cancelledIndex:I
      70: aload_2
      71: iload         4
      73: aload_3
      74: invokevirtual #44                 // Method net/jodah/failsafe/FailsafeFuture.cancelDependencies:(ZLnet/jodah/failsafe/ExecutionResult;)V
      77: aconst_null
      78: areturn

  private net.jodah.failsafe.ExecutionResult lambda$supply$1(java.util.function.Supplier);
    Code:
       0: new           #16                 // class java/util/concurrent/atomic/AtomicReference
       3: dup
       4: invokespecial #17                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       7: astore_2
       8: invokestatic  #45                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      11: astore        4
      13: getstatic     #21                 // Field net/jodah/failsafe/util/concurrent/Scheduler.DEFAULT:Lnet/jodah/failsafe/util/concurrent/Scheduler;
      16: aload_0
      17: aload_2
      18: aload         4
      20: invokedynamic #46,  0             // InvokeDynamic #4:call:(Lnet/jodah/failsafe/TimeoutExecutor;Ljava/util/concurrent/atomic/AtomicReference;Ljava/lang/Thread;)Ljava/util/concurrent/Callable;
      25: aload_0
      26: getfield      #6                  // Field policy:Lnet/jodah/failsafe/Policy;
      29: checkcast     #7                  // class net/jodah/failsafe/Timeout
      32: invokevirtual #8                  // Method net/jodah/failsafe/Timeout.getTimeout:()Ljava/time/Duration;
      35: invokevirtual #5                  // Method java/time/Duration.toNanos:()J
      38: getstatic     #23                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      41: invokeinterface #24,  5           // InterfaceMethod net/jodah/failsafe/util/concurrent/Scheduler.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      46: astore_3
      47: goto          62
      50: astore        5
      52: aload_0
      53: aload         5
      55: invokestatic  #13                 // Method net/jodah/failsafe/ExecutionResult.failure:(Ljava/lang/Throwable;)Lnet/jodah/failsafe/ExecutionResult;
      58: invokevirtual #47                 // Method postExecute:(Lnet/jodah/failsafe/ExecutionResult;)Lnet/jodah/failsafe/ExecutionResult;
      61: areturn
      62: aload_2
      63: aconst_null
      64: aload_1
      65: invokeinterface #31,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      70: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      73: ifeq          84
      76: aload_3
      77: iconst_0
      78: invokeinterface #35,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      83: pop
      84: aload_0
      85: aload_2
      86: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      89: checkcast     #36                 // class net/jodah/failsafe/ExecutionResult
      92: invokevirtual #47                 // Method postExecute:(Lnet/jodah/failsafe/ExecutionResult;)Lnet/jodah/failsafe/ExecutionResult;
      95: areturn
    Exception table:
       from    to  target type
          13    47    50   Class java/lang/Throwable

  private java.lang.Object lambda$null$0(java.util.concurrent.atomic.AtomicReference, java.lang.Thread) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aconst_null
       2: new           #11                 // class net/jodah/failsafe/TimeoutExceededException
       5: dup
       6: aload_0
       7: getfield      #6                  // Field policy:Lnet/jodah/failsafe/Policy;
      10: checkcast     #7                  // class net/jodah/failsafe/Timeout
      13: invokespecial #12                 // Method net/jodah/failsafe/TimeoutExceededException."<init>":(Lnet/jodah/failsafe/Timeout;)V
      16: invokestatic  #13                 // Method net/jodah/failsafe/ExecutionResult.failure:(Ljava/lang/Throwable;)Lnet/jodah/failsafe/ExecutionResult;
      19: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      22: ifeq          105
      25: aload_0
      26: getfield      #2                  // Field execution:Lnet/jodah/failsafe/AbstractExecution;
      29: aload_0
      30: getfield      #42                 // Field policyIndex:I
      33: putfield      #43                 // Field net/jodah/failsafe/AbstractExecution.cancelledIndex:I
      36: aload_0
      37: getfield      #6                  // Field policy:Lnet/jodah/failsafe/Policy;
      40: checkcast     #7                  // class net/jodah/failsafe/Timeout
      43: invokevirtual #40                 // Method net/jodah/failsafe/Timeout.canInterrupt:()Z
      46: ifeq          105
      49: aload_0
      50: getfield      #2                  // Field execution:Lnet/jodah/failsafe/AbstractExecution;
      53: dup
      54: astore_3
      55: monitorenter
      56: aload_0
      57: getfield      #2                  // Field execution:Lnet/jodah/failsafe/AbstractExecution;
      60: getfield      #48                 // Field net/jodah/failsafe/AbstractExecution.canInterrupt:Z
      63: ifeq          93
      66: aload_0
      67: getfield      #2                  // Field execution:Lnet/jodah/failsafe/AbstractExecution;
      70: aload_1
      71: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      74: checkcast     #36                 // class net/jodah/failsafe/ExecutionResult
      77: iconst_1
      78: invokevirtual #41                 // Method net/jodah/failsafe/AbstractExecution.record:(Lnet/jodah/failsafe/ExecutionResult;Z)V
      81: aload_0
      82: getfield      #2                  // Field execution:Lnet/jodah/failsafe/AbstractExecution;
      85: iconst_1
      86: putfield      #49                 // Field net/jodah/failsafe/AbstractExecution.interrupted:Z
      89: aload_2
      90: invokevirtual #50                 // Method java/lang/Thread.interrupt:()V
      93: aload_3
      94: monitorexit
      95: goto          105
      98: astore        4
     100: aload_3
     101: monitorexit
     102: aload         4
     104: athrow
     105: aconst_null
     106: areturn
    Exception table:
       from    to  target type
          56    95    98   any
          98   102    98   any
}
