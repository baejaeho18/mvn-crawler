Compiled from "HalfOpenState.java"
public class net.jodah.failsafe.internal.HalfOpenState extends net.jodah.failsafe.internal.CircuitState {
  private final net.jodah.failsafe.internal.CircuitBreakerInternals internals;

  public net.jodah.failsafe.internal.HalfOpenState(net.jodah.failsafe.CircuitBreaker, net.jodah.failsafe.internal.CircuitBreakerInternals);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: aload_1
       4: invokestatic  #1                  // Method capacityFor:(Lnet/jodah/failsafe/CircuitBreaker;)I
       7: iconst_0
       8: aconst_null
       9: invokestatic  #2                  // InterfaceMethod net/jodah/failsafe/internal/CircuitStats.create:(Lnet/jodah/failsafe/CircuitBreaker;IZLnet/jodah/failsafe/internal/CircuitStats;)Lnet/jodah/failsafe/internal/CircuitStats;
      12: invokespecial #3                  // Method net/jodah/failsafe/internal/CircuitState."<init>":(Lnet/jodah/failsafe/CircuitBreaker;Lnet/jodah/failsafe/internal/CircuitStats;)V
      15: aload_0
      16: aload_2
      17: putfield      #4                  // Field internals:Lnet/jodah/failsafe/internal/CircuitBreakerInternals;
      20: return

  public boolean allowsExecution();
    Code:
       0: aload_0
       1: getfield      #4                  // Field internals:Lnet/jodah/failsafe/internal/CircuitBreakerInternals;
       4: invokeinterface #5,  1            // InterfaceMethod net/jodah/failsafe/internal/CircuitBreakerInternals.getCurrentExecutions:()I
       9: aload_0
      10: getfield      #6                  // Field breaker:Lnet/jodah/failsafe/CircuitBreaker;
      13: invokestatic  #1                  // Method capacityFor:(Lnet/jodah/failsafe/CircuitBreaker;)I
      16: if_icmpge     23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public net.jodah.failsafe.CircuitBreaker$State getState();
    Code:
       0: getstatic     #7                  // Field net/jodah/failsafe/CircuitBreaker$State.HALF_OPEN:Lnet/jodah/failsafe/CircuitBreaker$State;
       3: areturn

  public synchronized void handleConfigChange();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field breaker:Lnet/jodah/failsafe/CircuitBreaker;
       5: aload_0
       6: getfield      #6                  // Field breaker:Lnet/jodah/failsafe/CircuitBreaker;
       9: invokestatic  #1                  // Method capacityFor:(Lnet/jodah/failsafe/CircuitBreaker;)I
      12: iconst_0
      13: aload_0
      14: getfield      #8                  // Field stats:Lnet/jodah/failsafe/internal/CircuitStats;
      17: invokestatic  #2                  // InterfaceMethod net/jodah/failsafe/internal/CircuitStats.create:(Lnet/jodah/failsafe/CircuitBreaker;IZLnet/jodah/failsafe/internal/CircuitStats;)Lnet/jodah/failsafe/internal/CircuitStats;
      20: putfield      #8                  // Field stats:Lnet/jodah/failsafe/internal/CircuitStats;
      23: return

  synchronized void checkThreshold(net.jodah.failsafe.ExecutionContext);
    Code:
       0: aload_0
       1: getfield      #6                  // Field breaker:Lnet/jodah/failsafe/CircuitBreaker;
       4: invokevirtual #9                  // Method net/jodah/failsafe/CircuitBreaker.getSuccessThreshold:()I
       7: istore        4
       9: iload         4
      11: ifeq          69
      14: aload_0
      15: getfield      #6                  // Field breaker:Lnet/jodah/failsafe/CircuitBreaker;
      18: invokevirtual #10                 // Method net/jodah/failsafe/CircuitBreaker.getSuccessThresholdingCapacity:()I
      21: istore        5
      23: aload_0
      24: getfield      #8                  // Field stats:Lnet/jodah/failsafe/internal/CircuitStats;
      27: invokeinterface #11,  1           // InterfaceMethod net/jodah/failsafe/internal/CircuitStats.getSuccessCount:()I
      32: iload         4
      34: if_icmplt     41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: istore_2
      43: aload_0
      44: getfield      #8                  // Field stats:Lnet/jodah/failsafe/internal/CircuitStats;
      47: invokeinterface #12,  1           // InterfaceMethod net/jodah/failsafe/internal/CircuitStats.getFailureCount:()I
      52: iload         5
      54: iload         4
      56: isub
      57: if_icmple     64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: istore_3
      66: goto          226
      69: aload_0
      70: getfield      #6                  // Field breaker:Lnet/jodah/failsafe/CircuitBreaker;
      73: invokevirtual #13                 // Method net/jodah/failsafe/CircuitBreaker.getFailureRateThreshold:()I
      76: istore        5
      78: iload         5
      80: ifeq          165
      83: aload_0
      84: getfield      #8                  // Field stats:Lnet/jodah/failsafe/internal/CircuitStats;
      87: invokeinterface #14,  1           // InterfaceMethod net/jodah/failsafe/internal/CircuitStats.getExecutionCount:()I
      92: aload_0
      93: getfield      #6                  // Field breaker:Lnet/jodah/failsafe/CircuitBreaker;
      96: invokevirtual #15                 // Method net/jodah/failsafe/CircuitBreaker.getFailureExecutionThreshold:()I
      99: if_icmplt     106
     102: iconst_1
     103: goto          107
     106: iconst_0
     107: istore        6
     109: iload         6
     111: ifeq          132
     114: aload_0
     115: getfield      #8                  // Field stats:Lnet/jodah/failsafe/internal/CircuitStats;
     118: invokeinterface #16,  1           // InterfaceMethod net/jodah/failsafe/internal/CircuitStats.getFailureRate:()I
     123: iload         5
     125: if_icmplt     132
     128: iconst_1
     129: goto          133
     132: iconst_0
     133: istore_3
     134: iload         6
     136: ifeq          160
     139: aload_0
     140: getfield      #8                  // Field stats:Lnet/jodah/failsafe/internal/CircuitStats;
     143: invokeinterface #17,  1           // InterfaceMethod net/jodah/failsafe/internal/CircuitStats.getSuccessRate:()I
     148: bipush        100
     150: iload         5
     152: isub
     153: if_icmple     160
     156: iconst_1
     157: goto          161
     160: iconst_0
     161: istore_2
     162: goto          226
     165: aload_0
     166: getfield      #6                  // Field breaker:Lnet/jodah/failsafe/CircuitBreaker;
     169: invokevirtual #18                 // Method net/jodah/failsafe/CircuitBreaker.getFailureThresholdingCapacity:()I
     172: istore        6
     174: aload_0
     175: getfield      #6                  // Field breaker:Lnet/jodah/failsafe/CircuitBreaker;
     178: invokevirtual #19                 // Method net/jodah/failsafe/CircuitBreaker.getFailureThreshold:()I
     181: istore        7
     183: aload_0
     184: getfield      #8                  // Field stats:Lnet/jodah/failsafe/internal/CircuitStats;
     187: invokeinterface #12,  1           // InterfaceMethod net/jodah/failsafe/internal/CircuitStats.getFailureCount:()I
     192: iload         7
     194: if_icmplt     201
     197: iconst_1
     198: goto          202
     201: iconst_0
     202: istore_3
     203: aload_0
     204: getfield      #8                  // Field stats:Lnet/jodah/failsafe/internal/CircuitStats;
     207: invokeinterface #11,  1           // InterfaceMethod net/jodah/failsafe/internal/CircuitStats.getSuccessCount:()I
     212: iload         6
     214: iload         7
     216: isub
     217: if_icmple     224
     220: iconst_1
     221: goto          225
     224: iconst_0
     225: istore_2
     226: iload_2
     227: ifeq          240
     230: aload_0
     231: getfield      #6                  // Field breaker:Lnet/jodah/failsafe/CircuitBreaker;
     234: invokevirtual #20                 // Method net/jodah/failsafe/CircuitBreaker.close:()V
     237: goto          254
     240: iload_3
     241: ifeq          254
     244: aload_0
     245: getfield      #4                  // Field internals:Lnet/jodah/failsafe/internal/CircuitBreakerInternals;
     248: aload_1
     249: invokeinterface #21,  2           // InterfaceMethod net/jodah/failsafe/internal/CircuitBreakerInternals.open:(Lnet/jodah/failsafe/ExecutionContext;)V
     254: return

  private static int capacityFor(net.jodah.failsafe.CircuitBreaker<?>);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method net/jodah/failsafe/CircuitBreaker.getSuccessThresholdingCapacity:()I
       4: istore_1
       5: iload_1
       6: ifne          14
       9: aload_0
      10: invokevirtual #15                 // Method net/jodah/failsafe/CircuitBreaker.getFailureExecutionThreshold:()I
      13: istore_1
      14: iload_1
      15: ifne          23
      18: aload_0
      19: invokevirtual #18                 // Method net/jodah/failsafe/CircuitBreaker.getFailureThresholdingCapacity:()I
      22: istore_1
      23: iload_1
      24: ireturn
}
