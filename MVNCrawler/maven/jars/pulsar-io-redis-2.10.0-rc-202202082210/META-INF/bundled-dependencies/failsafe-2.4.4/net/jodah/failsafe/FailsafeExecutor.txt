Compiled from "FailsafeExecutor.java"
public class net.jodah.failsafe.FailsafeExecutor<R> extends net.jodah.failsafe.PolicyListeners<net.jodah.failsafe.FailsafeExecutor<R>, R> {
  private net.jodah.failsafe.util.concurrent.Scheduler scheduler;

  final java.util.List<net.jodah.failsafe.Policy<R>> policies;

  private net.jodah.failsafe.internal.EventListener completeListener;

  net.jodah.failsafe.FailsafeExecutor(java.util.List<net.jodah.failsafe.Policy<R>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method net/jodah/failsafe/PolicyListeners."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field net/jodah/failsafe/util/concurrent/Scheduler.DEFAULT:Lnet/jodah/failsafe/util/concurrent/Scheduler;
       8: putfield      #3                  // Field scheduler:Lnet/jodah/failsafe/util/concurrent/Scheduler;
      11: aload_0
      12: aload_1
      13: putfield      #4                  // Field policies:Ljava/util/List;
      16: return

  public <T extends R> T get(net.jodah.failsafe.function.CheckedSupplier<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #5,  0              // InvokeDynamic #0:apply:(Lnet/jodah/failsafe/function/CheckedSupplier;)Ljava/util/function/Function;
       7: invokespecial #6                  // Method call:(Ljava/util/function/Function;)Ljava/lang/Object;
      10: areturn

  public <T extends R> T get(net.jodah.failsafe.function.ContextualSupplier<T, T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #7,  0              // InvokeDynamic #1:apply:(Lnet/jodah/failsafe/function/ContextualSupplier;)Ljava/util/function/Function;
       7: invokespecial #6                  // Method call:(Ljava/util/function/Function;)Ljava/lang/Object;
      10: areturn

  public <T extends R> java.util.concurrent.CompletableFuture<T> getAsync(net.jodah.failsafe.function.CheckedSupplier<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #8,  0              // InvokeDynamic #2:apply:(Lnet/jodah/failsafe/function/CheckedSupplier;)Ljava/util/function/Function;
       7: iconst_0
       8: invokespecial #9                  // Method callAsync:(Ljava/util/function/Function;Z)Ljava/util/concurrent/CompletableFuture;
      11: areturn

  public <T extends R> java.util.concurrent.CompletableFuture<T> getAsync(net.jodah.failsafe.function.ContextualSupplier<T, T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #10,  0             // InvokeDynamic #3:apply:(Lnet/jodah/failsafe/function/ContextualSupplier;)Ljava/util/function/Function;
       7: iconst_0
       8: invokespecial #9                  // Method callAsync:(Ljava/util/function/Function;Z)Ljava/util/concurrent/CompletableFuture;
      11: areturn

  public <T extends R> java.util.concurrent.CompletableFuture<T> getAsyncExecution(net.jodah.failsafe.function.AsyncRunnable<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #11,  0             // InvokeDynamic #4:apply:(Lnet/jodah/failsafe/function/AsyncRunnable;)Ljava/util/function/Function;
       7: iconst_1
       8: invokespecial #9                  // Method callAsync:(Ljava/util/function/Function;Z)Ljava/util/concurrent/CompletableFuture;
      11: areturn

  public <T extends R> java.util.concurrent.CompletableFuture<T> getStageAsync(net.jodah.failsafe.function.CheckedSupplier<? extends java.util.concurrent.CompletionStage<T>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #12,  0             // InvokeDynamic #5:apply:(Lnet/jodah/failsafe/function/CheckedSupplier;)Ljava/util/function/Function;
       7: iconst_0
       8: invokespecial #9                  // Method callAsync:(Ljava/util/function/Function;Z)Ljava/util/concurrent/CompletableFuture;
      11: areturn

  public <T extends R> java.util.concurrent.CompletableFuture<T> getStageAsync(net.jodah.failsafe.function.ContextualSupplier<T, ? extends java.util.concurrent.CompletionStage<T>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #13,  0             // InvokeDynamic #6:apply:(Lnet/jodah/failsafe/function/ContextualSupplier;)Ljava/util/function/Function;
       7: iconst_0
       8: invokespecial #9                  // Method callAsync:(Ljava/util/function/Function;Z)Ljava/util/concurrent/CompletableFuture;
      11: areturn

  public <T extends R> java.util.concurrent.CompletableFuture<T> getStageAsyncExecution(net.jodah.failsafe.function.AsyncSupplier<T, ? extends java.util.concurrent.CompletionStage<T>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #14,  0             // InvokeDynamic #7:apply:(Lnet/jodah/failsafe/function/AsyncSupplier;)Ljava/util/function/Function;
       7: iconst_1
       8: invokespecial #9                  // Method callAsync:(Ljava/util/function/Function;Z)Ljava/util/concurrent/CompletableFuture;
      11: areturn

  public void run(net.jodah.failsafe.function.CheckedRunnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #15,  0             // InvokeDynamic #8:apply:(Lnet/jodah/failsafe/function/CheckedRunnable;)Ljava/util/function/Function;
       7: invokespecial #6                  // Method call:(Ljava/util/function/Function;)Ljava/lang/Object;
      10: pop
      11: return

  public void run(net.jodah.failsafe.function.ContextualRunnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #16,  0             // InvokeDynamic #9:apply:(Lnet/jodah/failsafe/function/ContextualRunnable;)Ljava/util/function/Function;
       7: invokespecial #6                  // Method call:(Ljava/util/function/Function;)Ljava/lang/Object;
      10: pop
      11: return

  public java.util.concurrent.CompletableFuture<java.lang.Void> runAsync(net.jodah.failsafe.function.CheckedRunnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #17,  0             // InvokeDynamic #10:apply:(Lnet/jodah/failsafe/function/CheckedRunnable;)Ljava/util/function/Function;
       7: iconst_0
       8: invokespecial #9                  // Method callAsync:(Ljava/util/function/Function;Z)Ljava/util/concurrent/CompletableFuture;
      11: areturn

  public java.util.concurrent.CompletableFuture<java.lang.Void> runAsync(net.jodah.failsafe.function.ContextualRunnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #18,  0             // InvokeDynamic #11:apply:(Lnet/jodah/failsafe/function/ContextualRunnable;)Ljava/util/function/Function;
       7: iconst_0
       8: invokespecial #9                  // Method callAsync:(Ljava/util/function/Function;Z)Ljava/util/concurrent/CompletableFuture;
      11: areturn

  public java.util.concurrent.CompletableFuture<java.lang.Void> runAsyncExecution(net.jodah.failsafe.function.AsyncRunnable<java.lang.Void>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #19,  0             // InvokeDynamic #12:apply:(Lnet/jodah/failsafe/function/AsyncRunnable;)Ljava/util/function/Function;
       7: iconst_1
       8: invokespecial #9                  // Method callAsync:(Ljava/util/function/Function;Z)Ljava/util/concurrent/CompletableFuture;
      11: areturn

  public net.jodah.failsafe.FailsafeExecutor<R> onComplete(net.jodah.failsafe.function.CheckedConsumer<? extends net.jodah.failsafe.event.ExecutionCompletedEvent<R>>);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #20                 // String listener
       4: invokestatic  #21                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #22                 // class net/jodah/failsafe/function/CheckedConsumer
      10: invokestatic  #23                 // InterfaceMethod net/jodah/failsafe/internal/EventListener.of:(Lnet/jodah/failsafe/function/CheckedConsumer;)Lnet/jodah/failsafe/internal/EventListener;
      13: putfield      #24                 // Field completeListener:Lnet/jodah/failsafe/internal/EventListener;
      16: aload_0
      17: areturn

  public net.jodah.failsafe.FailsafeExecutor<R> onFailure(net.jodah.failsafe.function.CheckedConsumer<? extends net.jodah.failsafe.event.ExecutionCompletedEvent<R>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #25                 // Method net/jodah/failsafe/PolicyListeners.onFailure:(Lnet/jodah/failsafe/function/CheckedConsumer;)Ljava/lang/Object;
       5: checkcast     #26                 // class net/jodah/failsafe/FailsafeExecutor
       8: areturn

  public net.jodah.failsafe.FailsafeExecutor<R> onSuccess(net.jodah.failsafe.function.CheckedConsumer<? extends net.jodah.failsafe.event.ExecutionCompletedEvent<R>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #27                 // Method net/jodah/failsafe/PolicyListeners.onSuccess:(Lnet/jodah/failsafe/function/CheckedConsumer;)Ljava/lang/Object;
       5: checkcast     #26                 // class net/jodah/failsafe/FailsafeExecutor
       8: areturn

  void handleComplete(net.jodah.failsafe.ExecutionResult, net.jodah.failsafe.AbstractExecution<R>);
    Code:
       0: aload_0
       1: getfield      #28                 // Field successListener:Lnet/jodah/failsafe/internal/EventListener;
       4: ifnull        28
       7: aload_1
       8: invokevirtual #29                 // Method net/jodah/failsafe/ExecutionResult.getSuccessAll:()Z
      11: ifeq          28
      14: aload_0
      15: getfield      #28                 // Field successListener:Lnet/jodah/failsafe/internal/EventListener;
      18: aload_1
      19: aload_2
      20: invokeinterface #30,  3           // InterfaceMethod net/jodah/failsafe/internal/EventListener.handle:(Lnet/jodah/failsafe/ExecutionResult;Lnet/jodah/failsafe/ExecutionContext;)V
      25: goto          53
      28: aload_0
      29: getfield      #31                 // Field failureListener:Lnet/jodah/failsafe/internal/EventListener;
      32: ifnull        53
      35: aload_1
      36: invokevirtual #29                 // Method net/jodah/failsafe/ExecutionResult.getSuccessAll:()Z
      39: ifne          53
      42: aload_0
      43: getfield      #31                 // Field failureListener:Lnet/jodah/failsafe/internal/EventListener;
      46: aload_1
      47: aload_2
      48: invokeinterface #30,  3           // InterfaceMethod net/jodah/failsafe/internal/EventListener.handle:(Lnet/jodah/failsafe/ExecutionResult;Lnet/jodah/failsafe/ExecutionContext;)V
      53: aload_0
      54: getfield      #24                 // Field completeListener:Lnet/jodah/failsafe/internal/EventListener;
      57: ifnull        71
      60: aload_0
      61: getfield      #24                 // Field completeListener:Lnet/jodah/failsafe/internal/EventListener;
      64: aload_1
      65: aload_2
      66: invokeinterface #30,  3           // InterfaceMethod net/jodah/failsafe/internal/EventListener.handle:(Lnet/jodah/failsafe/ExecutionResult;Lnet/jodah/failsafe/ExecutionContext;)V
      71: return

  public net.jodah.failsafe.FailsafeExecutor<R> with(java.util.concurrent.ScheduledExecutorService);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #32                 // InterfaceMethod net/jodah/failsafe/util/concurrent/Scheduler.of:(Ljava/util/concurrent/ScheduledExecutorService;)Lnet/jodah/failsafe/util/concurrent/Scheduler;
       5: putfield      #3                  // Field scheduler:Lnet/jodah/failsafe/util/concurrent/Scheduler;
       8: aload_0
       9: areturn

  public net.jodah.failsafe.FailsafeExecutor<R> with(java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #33                 // InterfaceMethod net/jodah/failsafe/util/concurrent/Scheduler.of:(Ljava/util/concurrent/Executor;)Lnet/jodah/failsafe/util/concurrent/Scheduler;
       5: putfield      #3                  // Field scheduler:Lnet/jodah/failsafe/util/concurrent/Scheduler;
       8: aload_0
       9: areturn

  public net.jodah.failsafe.FailsafeExecutor<R> with(net.jodah.failsafe.util.concurrent.Scheduler);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #34                 // String scheduler
       4: invokestatic  #21                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #35                 // class net/jodah/failsafe/util/concurrent/Scheduler
      10: putfield      #3                  // Field scheduler:Lnet/jodah/failsafe/util/concurrent/Scheduler;
      13: aload_0
      14: areturn

  private <T> T call(java.util.function.Function<net.jodah.failsafe.Execution<T>, net.jodah.failsafe.function.CheckedSupplier<T>>);
    Code:
       0: new           #36                 // class net/jodah/failsafe/Execution
       3: dup
       4: aload_0
       5: invokespecial #37                 // Method net/jodah/failsafe/Execution."<init>":(Lnet/jodah/failsafe/FailsafeExecutor;)V
       8: astore_2
       9: aload_1
      10: aload_2
      11: invokeinterface #38,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #39                 // class net/jodah/failsafe/function/CheckedSupplier
      19: aload_2
      20: invokestatic  #40                 // Method net/jodah/failsafe/Functions.get:(Lnet/jodah/failsafe/function/CheckedSupplier;Lnet/jodah/failsafe/AbstractExecution;)Ljava/util/function/Supplier;
      23: astore_3
      24: aload_2
      25: aload_3
      26: invokevirtual #41                 // Method net/jodah/failsafe/Execution.executeSync:(Ljava/util/function/Supplier;)Lnet/jodah/failsafe/ExecutionResult;
      29: astore        4
      31: aload         4
      33: invokevirtual #42                 // Method net/jodah/failsafe/ExecutionResult.getFailure:()Ljava/lang/Throwable;
      36: astore        5
      38: aload         5
      40: ifnull        81
      43: aload         5
      45: instanceof    #43                 // class java/lang/RuntimeException
      48: ifeq          57
      51: aload         5
      53: checkcast     #43                 // class java/lang/RuntimeException
      56: athrow
      57: aload         5
      59: instanceof    #44                 // class java/lang/Error
      62: ifeq          71
      65: aload         5
      67: checkcast     #44                 // class java/lang/Error
      70: athrow
      71: new           #45                 // class net/jodah/failsafe/FailsafeException
      74: dup
      75: aload         5
      77: invokespecial #46                 // Method net/jodah/failsafe/FailsafeException."<init>":(Ljava/lang/Throwable;)V
      80: athrow
      81: aload         4
      83: invokevirtual #47                 // Method net/jodah/failsafe/ExecutionResult.getResult:()Ljava/lang/Object;
      86: areturn

  private <T> java.util.concurrent.CompletableFuture<T> callAsync(java.util.function.Function<net.jodah.failsafe.AsyncExecution<T>, java.util.function.Supplier<java.util.concurrent.CompletableFuture<net.jodah.failsafe.ExecutionResult>>>, boolean);
    Code:
       0: new           #48                 // class net/jodah/failsafe/FailsafeFuture
       3: dup
       4: aload_0
       5: invokespecial #49                 // Method net/jodah/failsafe/FailsafeFuture."<init>":(Lnet/jodah/failsafe/FailsafeExecutor;)V
       8: astore_3
       9: new           #50                 // class net/jodah/failsafe/AsyncExecution
      12: dup
      13: aload_0
      14: getfield      #3                  // Field scheduler:Lnet/jodah/failsafe/util/concurrent/Scheduler;
      17: aload_3
      18: aload_0
      19: invokespecial #51                 // Method net/jodah/failsafe/AsyncExecution."<init>":(Lnet/jodah/failsafe/util/concurrent/Scheduler;Lnet/jodah/failsafe/FailsafeFuture;Lnet/jodah/failsafe/FailsafeExecutor;)V
      22: astore        4
      24: aload_3
      25: aload         4
      27: invokevirtual #52                 // Method net/jodah/failsafe/FailsafeFuture.inject:(Lnet/jodah/failsafe/AbstractExecution;)V
      30: aload         4
      32: aload_1
      33: aload         4
      35: invokeinterface #38,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      40: checkcast     #53                 // class java/util/function/Supplier
      43: iload_2
      44: invokevirtual #54                 // Method net/jodah/failsafe/AsyncExecution.inject:(Ljava/util/function/Supplier;Z)V
      47: aload         4
      49: iload_2
      50: invokevirtual #55                 // Method net/jodah/failsafe/AsyncExecution.executeAsync:(Z)V
      53: aload_3
      54: areturn

  public java.lang.Object onSuccess(net.jodah.failsafe.function.CheckedConsumer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #56                 // Method onSuccess:(Lnet/jodah/failsafe/function/CheckedConsumer;)Lnet/jodah/failsafe/FailsafeExecutor;
       5: areturn

  public java.lang.Object onFailure(net.jodah.failsafe.function.CheckedConsumer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #57                 // Method onFailure:(Lnet/jodah/failsafe/function/CheckedConsumer;)Lnet/jodah/failsafe/FailsafeExecutor;
       5: areturn

  private static java.util.function.Supplier lambda$runAsyncExecution$12(net.jodah.failsafe.function.AsyncRunnable, net.jodah.failsafe.AsyncExecution);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #58                 // Method net/jodah/failsafe/Functions.getPromiseExecution:(Lnet/jodah/failsafe/function/AsyncRunnable;Lnet/jodah/failsafe/AsyncExecution;)Ljava/util/function/Supplier;
       5: areturn

  private static java.util.function.Supplier lambda$runAsync$11(net.jodah.failsafe.function.ContextualRunnable, net.jodah.failsafe.AsyncExecution);
    Code:
       0: aload_0
       1: invokestatic  #59                 // Method net/jodah/failsafe/Functions.toCtxSupplier:(Lnet/jodah/failsafe/function/ContextualRunnable;)Lnet/jodah/failsafe/function/ContextualSupplier;
       4: aload_1
       5: invokestatic  #60                 // Method net/jodah/failsafe/Functions.getPromise:(Lnet/jodah/failsafe/function/ContextualSupplier;Lnet/jodah/failsafe/AbstractExecution;)Ljava/util/function/Supplier;
       8: areturn

  private static java.util.function.Supplier lambda$runAsync$10(net.jodah.failsafe.function.CheckedRunnable, net.jodah.failsafe.AsyncExecution);
    Code:
       0: aload_0
       1: invokestatic  #61                 // Method net/jodah/failsafe/Functions.toCtxSupplier:(Lnet/jodah/failsafe/function/CheckedRunnable;)Lnet/jodah/failsafe/function/ContextualSupplier;
       4: aload_1
       5: invokestatic  #60                 // Method net/jodah/failsafe/Functions.getPromise:(Lnet/jodah/failsafe/function/ContextualSupplier;Lnet/jodah/failsafe/AbstractExecution;)Ljava/util/function/Supplier;
       8: areturn

  private static net.jodah.failsafe.function.CheckedSupplier lambda$run$9(net.jodah.failsafe.function.ContextualRunnable, net.jodah.failsafe.Execution);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #62                 // Method net/jodah/failsafe/Functions.toSupplier:(Lnet/jodah/failsafe/function/ContextualRunnable;Lnet/jodah/failsafe/ExecutionContext;)Lnet/jodah/failsafe/function/CheckedSupplier;
       5: areturn

  private static net.jodah.failsafe.function.CheckedSupplier lambda$run$8(net.jodah.failsafe.function.CheckedRunnable, net.jodah.failsafe.Execution);
    Code:
       0: aload_0
       1: invokestatic  #63                 // Method net/jodah/failsafe/Functions.toSupplier:(Lnet/jodah/failsafe/function/CheckedRunnable;)Lnet/jodah/failsafe/function/CheckedSupplier;
       4: areturn

  private static java.util.function.Supplier lambda$getStageAsyncExecution$7(net.jodah.failsafe.function.AsyncSupplier, net.jodah.failsafe.AsyncExecution);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #64                 // Method net/jodah/failsafe/Functions.getPromiseOfStageExecution:(Lnet/jodah/failsafe/function/AsyncSupplier;Lnet/jodah/failsafe/AsyncExecution;)Ljava/util/function/Supplier;
       5: areturn

  private static java.util.function.Supplier lambda$getStageAsync$6(net.jodah.failsafe.function.ContextualSupplier, net.jodah.failsafe.AsyncExecution);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #65                 // Method net/jodah/failsafe/Functions.getPromiseOfStage:(Lnet/jodah/failsafe/function/ContextualSupplier;Lnet/jodah/failsafe/AsyncExecution;)Ljava/util/function/Supplier;
       5: areturn

  private static java.util.function.Supplier lambda$getStageAsync$5(net.jodah.failsafe.function.CheckedSupplier, net.jodah.failsafe.AsyncExecution);
    Code:
       0: aload_0
       1: invokestatic  #66                 // Method net/jodah/failsafe/Functions.toCtxSupplier:(Lnet/jodah/failsafe/function/CheckedSupplier;)Lnet/jodah/failsafe/function/ContextualSupplier;
       4: aload_1
       5: invokestatic  #65                 // Method net/jodah/failsafe/Functions.getPromiseOfStage:(Lnet/jodah/failsafe/function/ContextualSupplier;Lnet/jodah/failsafe/AsyncExecution;)Ljava/util/function/Supplier;
       8: areturn

  private static java.util.function.Supplier lambda$getAsyncExecution$4(net.jodah.failsafe.function.AsyncRunnable, net.jodah.failsafe.AsyncExecution);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #58                 // Method net/jodah/failsafe/Functions.getPromiseExecution:(Lnet/jodah/failsafe/function/AsyncRunnable;Lnet/jodah/failsafe/AsyncExecution;)Ljava/util/function/Supplier;
       5: areturn

  private static java.util.function.Supplier lambda$getAsync$3(net.jodah.failsafe.function.ContextualSupplier, net.jodah.failsafe.AsyncExecution);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #60                 // Method net/jodah/failsafe/Functions.getPromise:(Lnet/jodah/failsafe/function/ContextualSupplier;Lnet/jodah/failsafe/AbstractExecution;)Ljava/util/function/Supplier;
       5: areturn

  private static java.util.function.Supplier lambda$getAsync$2(net.jodah.failsafe.function.CheckedSupplier, net.jodah.failsafe.AsyncExecution);
    Code:
       0: aload_0
       1: invokestatic  #66                 // Method net/jodah/failsafe/Functions.toCtxSupplier:(Lnet/jodah/failsafe/function/CheckedSupplier;)Lnet/jodah/failsafe/function/ContextualSupplier;
       4: aload_1
       5: invokestatic  #60                 // Method net/jodah/failsafe/Functions.getPromise:(Lnet/jodah/failsafe/function/ContextualSupplier;Lnet/jodah/failsafe/AbstractExecution;)Ljava/util/function/Supplier;
       8: areturn

  private static net.jodah.failsafe.function.CheckedSupplier lambda$get$1(net.jodah.failsafe.function.ContextualSupplier, net.jodah.failsafe.Execution);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #67                 // Method net/jodah/failsafe/Functions.toSupplier:(Lnet/jodah/failsafe/function/ContextualSupplier;Lnet/jodah/failsafe/ExecutionContext;)Lnet/jodah/failsafe/function/CheckedSupplier;
       5: areturn

  private static net.jodah.failsafe.function.CheckedSupplier lambda$get$0(net.jodah.failsafe.function.CheckedSupplier, net.jodah.failsafe.Execution);
    Code:
       0: aload_0
       1: ldc           #68                 // String supplier
       3: invokestatic  #21                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: checkcast     #39                 // class net/jodah/failsafe/function/CheckedSupplier
       9: areturn
}
