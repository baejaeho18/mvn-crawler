Compiled from "AsyncExecution.java"
public final class net.jodah.failsafe.AsyncExecution<R> extends net.jodah.failsafe.AbstractExecution<R> {
  private net.jodah.failsafe.Functions$SettableSupplier<java.util.concurrent.CompletableFuture<net.jodah.failsafe.ExecutionResult>> innerExecutionSupplier;

  private java.util.function.Supplier<java.util.concurrent.CompletableFuture<net.jodah.failsafe.ExecutionResult>> outerExecutionSupplier;

  final net.jodah.failsafe.FailsafeFuture<R> future;

  private volatile boolean completeCalled;

  private volatile boolean retryCalled;

  net.jodah.failsafe.AsyncExecution(net.jodah.failsafe.util.concurrent.Scheduler, net.jodah.failsafe.FailsafeFuture<R>, net.jodah.failsafe.FailsafeExecutor<R>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokespecial #1                  // Method net/jodah/failsafe/AbstractExecution."<init>":(Lnet/jodah/failsafe/util/concurrent/Scheduler;Lnet/jodah/failsafe/FailsafeExecutor;)V
       6: aload_0
       7: aload_2
       8: putfield      #2                  // Field future:Lnet/jodah/failsafe/FailsafeFuture;
      11: return

  void inject(java.util.function.Supplier<java.util.concurrent.CompletableFuture<net.jodah.failsafe.ExecutionResult>>, boolean);
    Code:
       0: iload_2
       1: ifne          20
       4: aload_0
       5: aload_1
       6: aload_0
       7: getfield      #3                  // Field scheduler:Lnet/jodah/failsafe/util/concurrent/Scheduler;
      10: aload_0
      11: invokestatic  #4                  // Method net/jodah/failsafe/Functions.getPromiseAsync:(Ljava/util/function/Supplier;Lnet/jodah/failsafe/util/concurrent/Scheduler;Lnet/jodah/failsafe/AsyncExecution;)Ljava/util/function/Supplier;
      14: putfield      #5                  // Field outerExecutionSupplier:Ljava/util/function/Supplier;
      17: goto          33
      20: aload_0
      21: aload_0
      22: aload_1
      23: invokestatic  #6                  // Method net/jodah/failsafe/Functions.toSettableSupplier:(Ljava/util/function/Supplier;)Lnet/jodah/failsafe/Functions$SettableSupplier;
      26: dup_x1
      27: putfield      #7                  // Field innerExecutionSupplier:Lnet/jodah/failsafe/Functions$SettableSupplier;
      30: putfield      #5                  // Field outerExecutionSupplier:Ljava/util/function/Supplier;
      33: aload_0
      34: getfield      #8                  // Field policyExecutors:Ljava/util/List;
      37: invokeinterface #9,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      42: astore_3
      43: aload_3
      44: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      49: ifeq          87
      52: aload_3
      53: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      58: checkcast     #12                 // class net/jodah/failsafe/PolicyExecutor
      61: astore        4
      63: aload_0
      64: aload         4
      66: aload_0
      67: getfield      #5                  // Field outerExecutionSupplier:Ljava/util/function/Supplier;
      70: aload_0
      71: getfield      #3                  // Field scheduler:Lnet/jodah/failsafe/util/concurrent/Scheduler;
      74: aload_0
      75: getfield      #2                  // Field future:Lnet/jodah/failsafe/FailsafeFuture;
      78: invokevirtual #13                 // Method net/jodah/failsafe/PolicyExecutor.supplyAsync:(Ljava/util/function/Supplier;Lnet/jodah/failsafe/util/concurrent/Scheduler;Lnet/jodah/failsafe/FailsafeFuture;)Ljava/util/function/Supplier;
      81: putfield      #5                  // Field outerExecutionSupplier:Ljava/util/function/Supplier;
      84: goto          43
      87: return

  public void complete();
    Code:
       0: aload_0
       1: getstatic     #14                 // Field net/jodah/failsafe/ExecutionResult.NONE:Lnet/jodah/failsafe/ExecutionResult;
       4: invokevirtual #15                 // Method postExecute:(Lnet/jodah/failsafe/ExecutionResult;)Lnet/jodah/failsafe/ExecutionResult;
       7: pop
       8: return

  public boolean complete(R);
    Code:
       0: aload_0
       1: new           #16                 // class net/jodah/failsafe/ExecutionResult
       4: dup
       5: aload_1
       6: aconst_null
       7: invokespecial #17                 // Method net/jodah/failsafe/ExecutionResult."<init>":(Ljava/lang/Object;Ljava/lang/Throwable;)V
      10: invokevirtual #15                 // Method postExecute:(Lnet/jodah/failsafe/ExecutionResult;)Lnet/jodah/failsafe/ExecutionResult;
      13: pop
      14: aload_0
      15: getfield      #18                 // Field completed:Z
      18: ireturn

  public boolean complete(R, java.lang.Throwable);
    Code:
       0: aload_0
       1: new           #16                 // class net/jodah/failsafe/ExecutionResult
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #17                 // Method net/jodah/failsafe/ExecutionResult."<init>":(Ljava/lang/Object;Ljava/lang/Throwable;)V
      10: invokevirtual #15                 // Method postExecute:(Lnet/jodah/failsafe/ExecutionResult;)Lnet/jodah/failsafe/ExecutionResult;
      13: pop
      14: aload_0
      15: getfield      #18                 // Field completed:Z
      18: ireturn

  public boolean retry();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #19                 // Field lastResult:Ljava/lang/Object;
       5: aload_0
       6: getfield      #20                 // Field lastFailure:Ljava/lang/Throwable;
       9: invokevirtual #21                 // Method retryFor:(Ljava/lang/Object;Ljava/lang/Throwable;)Z
      12: ireturn

  public boolean retryFor(R);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #21                 // Method retryFor:(Ljava/lang/Object;Ljava/lang/Throwable;)Z
       6: ireturn

  public boolean retryFor(R, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #22                 // Field retryCalled:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #23                 // String Retry has already been called
      14: iconst_0
      15: anewarray     #24                 // class java/lang/Object
      18: invokestatic  #25                 // Method net/jodah/failsafe/internal/util/Assert.state:(ZLjava/lang/String;[Ljava/lang/Object;)V
      21: aload_0
      22: iconst_1
      23: putfield      #22                 // Field retryCalled:Z
      26: aload_0
      27: aload_1
      28: aload_2
      29: invokevirtual #26                 // Method completeOrHandle:(Ljava/lang/Object;Ljava/lang/Throwable;)Z
      32: ifne          39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: ireturn

  public boolean retryOn(java.lang.Throwable);
    Code:
       0: aload_1
       1: ldc           #27                 // String failure
       3: invokestatic  #28                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aconst_null
       9: aload_1
      10: invokevirtual #21                 // Method retryFor:(Ljava/lang/Object;Ljava/lang/Throwable;)Z
      13: ireturn

  void preExecute();
    Code:
       0: aload_0
       1: invokespecial #29                 // Method net/jodah/failsafe/AbstractExecution.preExecute:()V
       4: aload_0
       5: iconst_0
       6: putfield      #30                 // Field completeCalled:Z
       9: aload_0
      10: iconst_0
      11: putfield      #22                 // Field retryCalled:Z
      14: return

  boolean isAsyncExecution();
    Code:
       0: aload_0
       1: getfield      #7                  // Field innerExecutionSupplier:Lnet/jodah/failsafe/Functions$SettableSupplier;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  net.jodah.failsafe.ExecutionResult postExecute(net.jodah.failsafe.ExecutionResult);
    Code:
       0: aload_0
       1: getfield      #2                  // Field future:Lnet/jodah/failsafe/FailsafeFuture;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #30                 // Field completeCalled:Z
      11: ifne          43
      14: aload_0
      15: aload_1
      16: invokespecial #31                 // Method net/jodah/failsafe/AbstractExecution.postExecute:(Lnet/jodah/failsafe/ExecutionResult;)Lnet/jodah/failsafe/ExecutionResult;
      19: astore_1
      20: aload_0
      21: getfield      #18                 // Field completed:Z
      24: ifeq          33
      27: aload_0
      28: aload_1
      29: aconst_null
      30: invokespecial #32                 // Method complete:(Lnet/jodah/failsafe/ExecutionResult;Ljava/lang/Throwable;)V
      33: aload_0
      34: iconst_1
      35: putfield      #30                 // Field completeCalled:Z
      38: aload_0
      39: iconst_1
      40: putfield      #33                 // Field resultHandled:Z
      43: aload_1
      44: aload_2
      45: monitorexit
      46: areturn
      47: astore_3
      48: aload_2
      49: monitorexit
      50: aload_3
      51: athrow
    Exception table:
       from    to  target type
           7    46    47   any
          47    50    47   any

  void executeAsync(boolean);
    Code:
       0: iload_1
       1: ifne          29
       4: aload_0
       5: getfield      #5                  // Field outerExecutionSupplier:Ljava/util/function/Supplier;
       8: invokeinterface #34,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      13: checkcast     #35                 // class java/util/concurrent/CompletableFuture
      16: aload_0
      17: invokedynamic #36,  0             // InvokeDynamic #0:accept:(Lnet/jodah/failsafe/AsyncExecution;)Ljava/util/function/BiConsumer;
      22: invokevirtual #37                 // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
      25: pop
      26: goto          70
      29: aload_0
      30: getfield      #3                  // Field scheduler:Lnet/jodah/failsafe/util/concurrent/Scheduler;
      33: aload_0
      34: getfield      #7                  // Field innerExecutionSupplier:Lnet/jodah/failsafe/Functions$SettableSupplier;
      37: dup
      38: invokevirtual #38                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      41: pop
      42: invokedynamic #39,  0             // InvokeDynamic #1:call:(Lnet/jodah/failsafe/Functions$SettableSupplier;)Ljava/util/concurrent/Callable;
      47: lconst_0
      48: getstatic     #40                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      51: invokeinterface #41,  5           // InterfaceMethod net/jodah/failsafe/util/concurrent/Scheduler.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      56: astore_2
      57: aload_0
      58: getfield      #2                  // Field future:Lnet/jodah/failsafe/FailsafeFuture;
      61: aload_2
      62: invokedynamic #42,  0             // InvokeDynamic #2:accept:(Ljava/util/concurrent/Future;)Ljava/util/function/BiConsumer;
      67: invokevirtual #43                 // Method net/jodah/failsafe/FailsafeFuture.injectCancelFn:(Ljava/util/function/BiConsumer;)V
      70: return

  boolean completeOrHandle(R, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field future:Lnet/jodah/failsafe/FailsafeFuture;
       4: dup
       5: astore_3
       6: monitorenter
       7: new           #16                 // class net/jodah/failsafe/ExecutionResult
      10: dup
      11: aload_1
      12: aload_2
      13: invokespecial #17                 // Method net/jodah/failsafe/ExecutionResult."<init>":(Ljava/lang/Object;Ljava/lang/Throwable;)V
      16: aload_0
      17: getfield      #44                 // Field waitNanos:J
      20: invokevirtual #45                 // Method net/jodah/failsafe/ExecutionResult.withWaitNanos:(J)Lnet/jodah/failsafe/ExecutionResult;
      23: astore        4
      25: aload_0
      26: getfield      #30                 // Field completeCalled:Z
      29: ifne          38
      32: aload_0
      33: aload         4
      35: invokevirtual #46                 // Method record:(Lnet/jodah/failsafe/ExecutionResult;)V
      38: aload_0
      39: iconst_1
      40: putfield      #30                 // Field completeCalled:Z
      43: aload_0
      44: getfield      #7                  // Field innerExecutionSupplier:Lnet/jodah/failsafe/Functions$SettableSupplier;
      47: aload         4
      49: invokestatic  #47                 // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      52: invokeinterface #48,  2           // InterfaceMethod net/jodah/failsafe/Functions$SettableSupplier.set:(Ljava/lang/Object;)V
      57: aload_0
      58: getfield      #5                  // Field outerExecutionSupplier:Ljava/util/function/Supplier;
      61: invokeinterface #34,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      66: checkcast     #35                 // class java/util/concurrent/CompletableFuture
      69: aload_0
      70: invokedynamic #36,  0             // InvokeDynamic #0:accept:(Lnet/jodah/failsafe/AsyncExecution;)Ljava/util/function/BiConsumer;
      75: invokevirtual #37                 // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
      78: pop
      79: aload_0
      80: getfield      #18                 // Field completed:Z
      83: aload_3
      84: monitorexit
      85: ireturn
      86: astore        5
      88: aload_3
      89: monitorexit
      90: aload         5
      92: athrow
    Exception table:
       from    to  target type
           7    85    86   any
          86    90    86   any

  private void complete(net.jodah.failsafe.ExecutionResult, java.lang.Throwable);
    Code:
       0: aload_1
       1: ifnonnull     9
       4: aload_2
       5: ifnonnull     9
       8: return
       9: aload_0
      10: iconst_1
      11: putfield      #18                 // Field completed:Z
      14: aload_0
      15: getfield      #2                  // Field future:Lnet/jodah/failsafe/FailsafeFuture;
      18: invokevirtual #49                 // Method net/jodah/failsafe/FailsafeFuture.isDone:()Z
      21: ifne          64
      24: aload_1
      25: ifnull        40
      28: aload_0
      29: getfield      #2                  // Field future:Lnet/jodah/failsafe/FailsafeFuture;
      32: aload_1
      33: invokevirtual #50                 // Method net/jodah/failsafe/FailsafeFuture.completeResult:(Lnet/jodah/failsafe/ExecutionResult;)Z
      36: pop
      37: goto          64
      40: aload_2
      41: instanceof    #51                 // class java/util/concurrent/CompletionException
      44: ifeq          52
      47: aload_2
      48: invokevirtual #52                 // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      51: astore_2
      52: aload_0
      53: getfield      #2                  // Field future:Lnet/jodah/failsafe/FailsafeFuture;
      56: aload_2
      57: invokestatic  #53                 // Method net/jodah/failsafe/ExecutionResult.failure:(Ljava/lang/Throwable;)Lnet/jodah/failsafe/ExecutionResult;
      60: invokevirtual #50                 // Method net/jodah/failsafe/FailsafeFuture.completeResult:(Lnet/jodah/failsafe/ExecutionResult;)Z
      63: pop
      64: return

  private static void lambda$executeAsync$0(java.util.concurrent.Future, java.lang.Boolean, net.jodah.failsafe.ExecutionResult);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #54                 // Method java/lang/Boolean.booleanValue:()Z
       5: invokeinterface #55,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      10: pop
      11: return
}
