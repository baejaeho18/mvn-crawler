Compiled from "ZipSplitReadOnlySeekableByteChannel.java"
public class org.apache.commons.compress.archivers.zip.ZipSplitReadOnlySeekableByteChannel extends org.apache.commons.compress.utils.MultiReadOnlySeekableByteChannel {
  private static final int ZIP_SPLIT_SIGNATURE_LENGTH;

  private final java.nio.ByteBuffer zipSplitSignatureByteBuffer;

  public org.apache.commons.compress.archivers.zip.ZipSplitReadOnlySeekableByteChannel(java.util.List<java.nio.channels.SeekableByteChannel>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/commons/compress/utils/MultiReadOnlySeekableByteChannel."<init>":(Ljava/util/List;)V
       5: aload_0
       6: iconst_4
       7: invokestatic  #3                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      10: putfield      #4                  // Field zipSplitSignatureByteBuffer:Ljava/nio/ByteBuffer;
      13: aload_0
      14: aload_1
      15: invokespecial #5                  // Method assertSplitSignature:(Ljava/util/List;)V
      18: return

  private void assertSplitSignature(java.util.List<java.nio.channels.SeekableByteChannel>) throws java.io.IOException;
    Code:
       0: aload_1
       1: iconst_0
       2: invokeinterface #6,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
       7: checkcast     #7                  // class java/nio/channels/SeekableByteChannel
      10: astore_2
      11: aload_2
      12: lconst_0
      13: invokeinterface #8,  3            // InterfaceMethod java/nio/channels/SeekableByteChannel.position:(J)Ljava/nio/channels/SeekableByteChannel;
      18: pop
      19: aload_0
      20: getfield      #4                  // Field zipSplitSignatureByteBuffer:Ljava/nio/ByteBuffer;
      23: invokevirtual #9                  // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
      26: pop
      27: aload_2
      28: aload_0
      29: getfield      #4                  // Field zipSplitSignatureByteBuffer:Ljava/nio/ByteBuffer;
      32: invokeinterface #10,  2           // InterfaceMethod java/nio/channels/SeekableByteChannel.read:(Ljava/nio/ByteBuffer;)I
      37: pop
      38: new           #11                 // class org/apache/commons/compress/archivers/zip/ZipLong
      41: dup
      42: aload_0
      43: getfield      #4                  // Field zipSplitSignatureByteBuffer:Ljava/nio/ByteBuffer;
      46: invokevirtual #12                 // Method java/nio/ByteBuffer.array:()[B
      49: invokespecial #13                 // Method org/apache/commons/compress/archivers/zip/ZipLong."<init>":([B)V
      52: astore_3
      53: aload_3
      54: getstatic     #14                 // Field org/apache/commons/compress/archivers/zip/ZipLong.DD_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;
      57: invokevirtual #15                 // Method org/apache/commons/compress/archivers/zip/ZipLong.equals:(Ljava/lang/Object;)Z
      60: ifne          81
      63: aload_2
      64: lconst_0
      65: invokeinterface #8,  3            // InterfaceMethod java/nio/channels/SeekableByteChannel.position:(J)Ljava/nio/channels/SeekableByteChannel;
      70: pop
      71: new           #16                 // class java/io/IOException
      74: dup
      75: ldc           #17                 // String The first zip split segment does not begin with split zip file signature
      77: invokespecial #18                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      80: athrow
      81: aload_2
      82: lconst_0
      83: invokeinterface #8,  3            // InterfaceMethod java/nio/channels/SeekableByteChannel.position:(J)Ljava/nio/channels/SeekableByteChannel;
      88: pop
      89: return

  public static java.nio.channels.SeekableByteChannel forOrderedSeekableByteChannels(java.nio.channels.SeekableByteChannel...) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #19                 // String channels must not be null
       3: invokestatic  #20                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: checkcast     #21                 // class "[Ljava/nio/channels/SeekableByteChannel;"
       9: arraylength
      10: iconst_1
      11: if_icmpne     18
      14: aload_0
      15: iconst_0
      16: aaload
      17: areturn
      18: new           #2                  // class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel
      21: dup
      22: aload_0
      23: invokestatic  #22                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      26: invokespecial #23                 // Method "<init>":(Ljava/util/List;)V
      29: areturn

  public static java.nio.channels.SeekableByteChannel forOrderedSeekableByteChannels(java.nio.channels.SeekableByteChannel, java.lang.Iterable<java.nio.channels.SeekableByteChannel>) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #24                 // String channels
       3: invokestatic  #20                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: ldc           #25                 // String lastSegmentChannel
      10: invokestatic  #20                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: new           #26                 // class java/util/ArrayList
      17: dup
      18: invokespecial #27                 // Method java/util/ArrayList."<init>":()V
      21: astore_2
      22: aload_1
      23: invokeinterface #28,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      28: astore_3
      29: aload_3
      30: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          61
      38: aload_3
      39: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #7                  // class java/nio/channels/SeekableByteChannel
      47: astore        4
      49: aload_2
      50: aload         4
      52: invokeinterface #31,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      57: pop
      58: goto          29
      61: aload_2
      62: aload_0
      63: invokeinterface #31,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      68: pop
      69: aload_2
      70: iconst_0
      71: anewarray     #7                  // class java/nio/channels/SeekableByteChannel
      74: invokeinterface #32,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      79: checkcast     #21                 // class "[Ljava/nio/channels/SeekableByteChannel;"
      82: invokestatic  #33                 // Method forOrderedSeekableByteChannels:([Ljava/nio/channels/SeekableByteChannel;)Ljava/nio/channels/SeekableByteChannel;
      85: areturn

  public static java.nio.channels.SeekableByteChannel buildFromLastSplitSegment(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
       4: invokestatic  #35                 // Method org/apache/commons/compress/utils/FileNameUtils.getExtension:(Ljava/lang/String;)Ljava/lang/String;
       7: astore_1
       8: aload_1
       9: ldc           #37                 // String zip
      11: invokevirtual #38                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      14: ifne          27
      17: new           #39                 // class java/lang/IllegalArgumentException
      20: dup
      21: ldc           #40                 // String The extension of last zip split segment should be .zip
      23: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: invokevirtual #42                 // Method java/io/File.getParentFile:()Ljava/io/File;
      31: astore_2
      32: aload_0
      33: invokevirtual #34                 // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
      36: invokestatic  #43                 // Method org/apache/commons/compress/utils/FileNameUtils.getBaseName:(Ljava/lang/String;)Ljava/lang/String;
      39: astore_3
      40: new           #26                 // class java/util/ArrayList
      43: dup
      44: invokespecial #27                 // Method java/util/ArrayList."<init>":()V
      47: astore        4
      49: new           #44                 // class java/lang/StringBuilder
      52: dup
      53: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
      56: aload_3
      57: invokestatic  #46                 // Method java/util/regex/Pattern.quote:(Ljava/lang/String;)Ljava/lang/String;
      60: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: ldc           #48                 // String .[zZ][0-9]+
      65: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: invokestatic  #50                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      74: astore        5
      76: aload_2
      77: invokevirtual #51                 // Method java/io/File.listFiles:()[Ljava/io/File;
      80: astore        6
      82: aload         6
      84: ifnull        146
      87: aload         6
      89: astore        7
      91: aload         7
      93: arraylength
      94: istore        8
      96: iconst_0
      97: istore        9
      99: iload         9
     101: iload         8
     103: if_icmpge     146
     106: aload         7
     108: iload         9
     110: aaload
     111: astore        10
     113: aload         5
     115: aload         10
     117: invokevirtual #52                 // Method java/io/File.getName:()Ljava/lang/String;
     120: invokevirtual #53                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
     123: invokevirtual #54                 // Method java/util/regex/Matcher.matches:()Z
     126: ifne          132
     129: goto          140
     132: aload         4
     134: aload         10
     136: invokevirtual #55                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     139: pop
     140: iinc          9, 1
     143: goto          99
     146: aload         4
     148: new           #56                 // class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator
     151: dup
     152: aconst_null
     153: invokespecial #57                 // Method org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator."<init>":(Lorg/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$1;)V
     156: invokevirtual #58                 // Method java/util/ArrayList.sort:(Ljava/util/Comparator;)V
     159: aload_0
     160: aload         4
     162: invokestatic  #59                 // Method forFiles:(Ljava/io/File;Ljava/lang/Iterable;)Ljava/nio/channels/SeekableByteChannel;
     165: areturn

  public static java.nio.channels.SeekableByteChannel forFiles(java.io.File...) throws java.io.IOException;
    Code:
       0: new           #26                 // class java/util/ArrayList
       3: dup
       4: invokespecial #27                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: ldc           #60                 // String files must not be null
      11: invokestatic  #20                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      14: checkcast     #61                 // class "[Ljava/io/File;"
      17: astore_2
      18: aload_2
      19: arraylength
      20: istore_3
      21: iconst_0
      22: istore        4
      24: iload         4
      26: iload_3
      27: if_icmpge     67
      30: aload_2
      31: iload         4
      33: aaload
      34: astore        5
      36: aload_1
      37: aload         5
      39: invokevirtual #62                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
      42: iconst_1
      43: anewarray     #63                 // class java/nio/file/OpenOption
      46: dup
      47: iconst_0
      48: getstatic     #64                 // Field java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;
      51: aastore
      52: invokestatic  #65                 // Method java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;
      55: invokeinterface #31,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      60: pop
      61: iinc          4, 1
      64: goto          24
      67: aload_1
      68: invokeinterface #66,  1           // InterfaceMethod java/util/List.size:()I
      73: iconst_1
      74: if_icmpne     88
      77: aload_1
      78: iconst_0
      79: invokeinterface #6,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      84: checkcast     #7                  // class java/nio/channels/SeekableByteChannel
      87: areturn
      88: new           #2                  // class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel
      91: dup
      92: aload_1
      93: invokespecial #23                 // Method "<init>":(Ljava/util/List;)V
      96: areturn

  public static java.nio.channels.SeekableByteChannel forFiles(java.io.File, java.lang.Iterable<java.io.File>) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #67                 // String files
       3: invokestatic  #20                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: ldc           #68                 // String lastSegmentFile
      10: invokestatic  #20                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: new           #26                 // class java/util/ArrayList
      17: dup
      18: invokespecial #27                 // Method java/util/ArrayList."<init>":()V
      21: astore_2
      22: aload_1
      23: invokeinterface #28,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      28: astore_3
      29: aload_3
      30: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          61
      38: aload_3
      39: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #69                 // class java/io/File
      47: astore        4
      49: aload_2
      50: aload         4
      52: invokeinterface #31,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      57: pop
      58: goto          29
      61: aload_2
      62: aload_0
      63: invokeinterface #31,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      68: pop
      69: aload_2
      70: iconst_0
      71: anewarray     #69                 // class java/io/File
      74: invokeinterface #32,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      79: checkcast     #61                 // class "[Ljava/io/File;"
      82: invokestatic  #70                 // Method forFiles:([Ljava/io/File;)Ljava/nio/channels/SeekableByteChannel;
      85: areturn
}
