Compiled from "ZipEncodingHelper.java"
public abstract class org.apache.commons.compress.archivers.zip.ZipEncodingHelper {
  static final java.lang.String UTF8;

  static final org.apache.commons.compress.archivers.zip.ZipEncoding UTF8_ZIP_ENCODING;

  public org.apache.commons.compress.archivers.zip.ZipEncodingHelper();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static org.apache.commons.compress.archivers.zip.ZipEncoding getZipEncoding(java.lang.String);
    Code:
       0: invokestatic  #2                  // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
       3: astore_1
       4: aload_0
       5: ifnull        17
       8: aload_0
       9: invokestatic  #3                  // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      12: astore_1
      13: goto          17
      16: astore_2
      17: aload_1
      18: invokevirtual #5                  // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      21: invokestatic  #6                  // Method isUTF8:(Ljava/lang/String;)Z
      24: istore_2
      25: new           #7                  // class org/apache/commons/compress/archivers/zip/NioZipEncoding
      28: dup
      29: aload_1
      30: iload_2
      31: invokespecial #8                  // Method org/apache/commons/compress/archivers/zip/NioZipEncoding."<init>":(Ljava/nio/charset/Charset;Z)V
      34: areturn
    Exception table:
       from    to  target type
           8    13    16   Class java/nio/charset/UnsupportedCharsetException

  static boolean isUTF8(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     11
       4: invokestatic  #2                  // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
       7: invokevirtual #5                  // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      10: astore_0
      11: getstatic     #9                  // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      14: invokevirtual #5                  // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      17: aload_0
      18: invokevirtual #10                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      21: ifeq          26
      24: iconst_1
      25: ireturn
      26: getstatic     #9                  // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      29: invokevirtual #11                 // Method java/nio/charset/Charset.aliases:()Ljava/util/Set;
      32: invokeinterface #12,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      37: astore_1
      38: aload_1
      39: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      44: ifeq          70
      47: aload_1
      48: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      53: checkcast     #15                 // class java/lang/String
      56: astore_2
      57: aload_2
      58: aload_0
      59: invokevirtual #10                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      62: ifeq          67
      65: iconst_1
      66: ireturn
      67: goto          38
      70: iconst_0
      71: ireturn

  static java.nio.ByteBuffer growBufferBy(java.nio.ByteBuffer, int);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #16                 // Method java/nio/ByteBuffer.position:()I
       5: invokevirtual #17                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
       8: pop
       9: aload_0
      10: invokevirtual #18                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
      13: pop
      14: aload_0
      15: invokevirtual #19                 // Method java/nio/ByteBuffer.capacity:()I
      18: iload_1
      19: iadd
      20: invokestatic  #20                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      23: astore_2
      24: aload_2
      25: aload_0
      26: invokevirtual #21                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      29: pop
      30: aload_2
      31: areturn

  static {};
    Code:
       0: ldc           #23                 // String UTF8
       2: invokestatic  #24                 // Method getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
       5: putstatic     #25                 // Field UTF8_ZIP_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;
       8: return
}
