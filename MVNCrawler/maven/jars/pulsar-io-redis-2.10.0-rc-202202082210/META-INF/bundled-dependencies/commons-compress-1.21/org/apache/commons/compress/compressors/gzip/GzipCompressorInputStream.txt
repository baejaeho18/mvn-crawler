Compiled from "GzipCompressorInputStream.java"
public class org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream extends org.apache.commons.compress.compressors.CompressorInputStream implements org.apache.commons.compress.utils.InputStreamStatistics {
  private static final int FHCRC;

  private static final int FEXTRA;

  private static final int FNAME;

  private static final int FCOMMENT;

  private static final int FRESERVED;

  private final org.apache.commons.compress.utils.CountingInputStream countingStream;

  private final java.io.InputStream in;

  private final boolean decompressConcatenated;

  private final byte[] buf;

  private int bufUsed;

  private java.util.zip.Inflater inf;

  private final java.util.zip.CRC32 crc;

  private boolean endReached;

  private final byte[] oneByte;

  private final org.apache.commons.compress.compressors.gzip.GzipParameters parameters;

  static final boolean $assertionsDisabled;

  public org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #1                  // Method "<init>":(Ljava/io/InputStream;Z)V
       6: return

  public org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream(java.io.InputStream, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/commons/compress/compressors/CompressorInputStream."<init>":()V
       4: aload_0
       5: sipush        8192
       8: newarray       byte
      10: putfield      #3                  // Field buf:[B
      13: aload_0
      14: new           #4                  // class java/util/zip/Inflater
      17: dup
      18: iconst_1
      19: invokespecial #5                  // Method java/util/zip/Inflater."<init>":(Z)V
      22: putfield      #6                  // Field inf:Ljava/util/zip/Inflater;
      25: aload_0
      26: new           #7                  // class java/util/zip/CRC32
      29: dup
      30: invokespecial #8                  // Method java/util/zip/CRC32."<init>":()V
      33: putfield      #9                  // Field crc:Ljava/util/zip/CRC32;
      36: aload_0
      37: iconst_1
      38: newarray       byte
      40: putfield      #10                 // Field oneByte:[B
      43: aload_0
      44: new           #11                 // class org/apache/commons/compress/compressors/gzip/GzipParameters
      47: dup
      48: invokespecial #12                 // Method org/apache/commons/compress/compressors/gzip/GzipParameters."<init>":()V
      51: putfield      #13                 // Field parameters:Lorg/apache/commons/compress/compressors/gzip/GzipParameters;
      54: aload_0
      55: new           #14                 // class org/apache/commons/compress/utils/CountingInputStream
      58: dup
      59: aload_1
      60: invokespecial #15                 // Method org/apache/commons/compress/utils/CountingInputStream."<init>":(Ljava/io/InputStream;)V
      63: putfield      #16                 // Field countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;
      66: aload_0
      67: getfield      #16                 // Field countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;
      70: invokevirtual #17                 // Method org/apache/commons/compress/utils/CountingInputStream.markSupported:()Z
      73: ifeq          87
      76: aload_0
      77: aload_0
      78: getfield      #16                 // Field countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;
      81: putfield      #18                 // Field in:Ljava/io/InputStream;
      84: goto          102
      87: aload_0
      88: new           #19                 // class java/io/BufferedInputStream
      91: dup
      92: aload_0
      93: getfield      #16                 // Field countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;
      96: invokespecial #20                 // Method java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;)V
      99: putfield      #18                 // Field in:Ljava/io/InputStream;
     102: aload_0
     103: iload_2
     104: putfield      #21                 // Field decompressConcatenated:Z
     107: aload_0
     108: iconst_1
     109: invokespecial #22                 // Method init:(Z)Z
     112: pop
     113: return

  public org.apache.commons.compress.compressors.gzip.GzipParameters getMetaData();
    Code:
       0: aload_0
       1: getfield      #13                 // Field parameters:Lorg/apache/commons/compress/compressors/gzip/GzipParameters;
       4: areturn

  private boolean init(boolean) throws java.io.IOException;
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          25
       6: iload_1
       7: ifne          25
      10: aload_0
      11: getfield      #21                 // Field decompressConcatenated:Z
      14: ifne          25
      17: new           #24                 // class java/lang/AssertionError
      20: dup
      21: invokespecial #25                 // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: aload_0
      26: getfield      #18                 // Field in:Ljava/io/InputStream;
      29: invokevirtual #26                 // Method java/io/InputStream.read:()I
      32: istore_2
      33: iload_2
      34: iconst_m1
      35: if_icmpne     44
      38: iload_1
      39: ifne          44
      42: iconst_0
      43: ireturn
      44: iload_2
      45: bipush        31
      47: if_icmpne     63
      50: aload_0
      51: getfield      #18                 // Field in:Ljava/io/InputStream;
      54: invokevirtual #26                 // Method java/io/InputStream.read:()I
      57: sipush        139
      60: if_icmpeq     82
      63: new           #27                 // class java/io/IOException
      66: dup
      67: iload_1
      68: ifeq          76
      71: ldc           #28                 // String Input is not in the .gz format
      73: goto          78
      76: ldc           #29                 // String Garbage after a valid .gz stream
      78: invokespecial #30                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      81: athrow
      82: new           #31                 // class java/io/DataInputStream
      85: dup
      86: aload_0
      87: getfield      #18                 // Field in:Ljava/io/InputStream;
      90: invokespecial #32                 // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
      93: astore_3
      94: aload_3
      95: invokeinterface #33,  1           // InterfaceMethod java/io/DataInput.readUnsignedByte:()I
     100: istore        4
     102: iload         4
     104: bipush        8
     106: if_icmpeq     142
     109: new           #27                 // class java/io/IOException
     112: dup
     113: new           #35                 // class java/lang/StringBuilder
     116: dup
     117: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
     120: ldc           #37                 // String Unsupported compression method
     122: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: iload         4
     127: invokevirtual #39                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     130: ldc           #40                 // String  in the .gz header
     132: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     138: invokespecial #30                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     141: athrow
     142: aload_3
     143: invokeinterface #33,  1           // InterfaceMethod java/io/DataInput.readUnsignedByte:()I
     148: istore        5
     150: iload         5
     152: sipush        224
     155: iand
     156: ifeq          169
     159: new           #27                 // class java/io/IOException
     162: dup
     163: ldc           #43                 // String Reserved flags are set in the .gz header
     165: invokespecial #30                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     168: athrow
     169: aload_0
     170: getfield      #13                 // Field parameters:Lorg/apache/commons/compress/compressors/gzip/GzipParameters;
     173: aload_3
     174: iconst_4
     175: invokestatic  #44                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Ljava/io/DataInput;I)J
     178: ldc2_w        #45                 // long 1000l
     181: lmul
     182: invokevirtual #47                 // Method org/apache/commons/compress/compressors/gzip/GzipParameters.setModificationTime:(J)V
     185: aload_3
     186: invokeinterface #33,  1           // InterfaceMethod java/io/DataInput.readUnsignedByte:()I
     191: lookupswitch  { // 2
                     2: 216
                     4: 228
               default: 239
          }
     216: aload_0
     217: getfield      #13                 // Field parameters:Lorg/apache/commons/compress/compressors/gzip/GzipParameters;
     220: bipush        9
     222: invokevirtual #48                 // Method org/apache/commons/compress/compressors/gzip/GzipParameters.setCompressionLevel:(I)V
     225: goto          239
     228: aload_0
     229: getfield      #13                 // Field parameters:Lorg/apache/commons/compress/compressors/gzip/GzipParameters;
     232: iconst_1
     233: invokevirtual #48                 // Method org/apache/commons/compress/compressors/gzip/GzipParameters.setCompressionLevel:(I)V
     236: goto          239
     239: aload_0
     240: getfield      #13                 // Field parameters:Lorg/apache/commons/compress/compressors/gzip/GzipParameters;
     243: aload_3
     244: invokeinterface #33,  1           // InterfaceMethod java/io/DataInput.readUnsignedByte:()I
     249: invokevirtual #49                 // Method org/apache/commons/compress/compressors/gzip/GzipParameters.setOperatingSystem:(I)V
     252: iload         5
     254: iconst_4
     255: iand
     256: ifeq          299
     259: aload_3
     260: invokeinterface #33,  1           // InterfaceMethod java/io/DataInput.readUnsignedByte:()I
     265: istore        6
     267: iload         6
     269: aload_3
     270: invokeinterface #33,  1           // InterfaceMethod java/io/DataInput.readUnsignedByte:()I
     275: bipush        8
     277: ishl
     278: ior
     279: istore        6
     281: iload         6
     283: iinc          6, -1
     286: ifle          299
     289: aload_3
     290: invokeinterface #33,  1           // InterfaceMethod java/io/DataInput.readUnsignedByte:()I
     295: pop
     296: goto          281
     299: iload         5
     301: bipush        8
     303: iand
     304: ifeq          328
     307: aload_0
     308: getfield      #13                 // Field parameters:Lorg/apache/commons/compress/compressors/gzip/GzipParameters;
     311: new           #50                 // class java/lang/String
     314: dup
     315: aload_3
     316: invokestatic  #51                 // Method readToNull:(Ljava/io/DataInput;)[B
     319: getstatic     #52                 // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
     322: invokespecial #53                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
     325: invokevirtual #54                 // Method org/apache/commons/compress/compressors/gzip/GzipParameters.setFilename:(Ljava/lang/String;)V
     328: iload         5
     330: bipush        16
     332: iand
     333: ifeq          357
     336: aload_0
     337: getfield      #13                 // Field parameters:Lorg/apache/commons/compress/compressors/gzip/GzipParameters;
     340: new           #50                 // class java/lang/String
     343: dup
     344: aload_3
     345: invokestatic  #51                 // Method readToNull:(Ljava/io/DataInput;)[B
     348: getstatic     #52                 // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
     351: invokespecial #53                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
     354: invokevirtual #55                 // Method org/apache/commons/compress/compressors/gzip/GzipParameters.setComment:(Ljava/lang/String;)V
     357: iload         5
     359: iconst_2
     360: iand
     361: ifeq          371
     364: aload_3
     365: invokeinterface #56,  1           // InterfaceMethod java/io/DataInput.readShort:()S
     370: pop
     371: aload_0
     372: getfield      #6                  // Field inf:Ljava/util/zip/Inflater;
     375: invokevirtual #57                 // Method java/util/zip/Inflater.reset:()V
     378: aload_0
     379: getfield      #9                  // Field crc:Ljava/util/zip/CRC32;
     382: invokevirtual #58                 // Method java/util/zip/CRC32.reset:()V
     385: iconst_1
     386: ireturn

  private static byte[] readToNull(java.io.DataInput) throws java.io.IOException;
    Code:
       0: new           #59                 // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #60                 // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_1
       8: aconst_null
       9: astore_2
      10: iconst_0
      11: istore_3
      12: aload_0
      13: invokeinterface #33,  1           // InterfaceMethod java/io/DataInput.readUnsignedByte:()I
      18: dup
      19: istore_3
      20: ifeq          31
      23: aload_1
      24: iload_3
      25: invokevirtual #61                 // Method java/io/ByteArrayOutputStream.write:(I)V
      28: goto          12
      31: aload_1
      32: invokevirtual #62                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      35: astore        4
      37: aload_1
      38: ifnull        67
      41: aload_2
      42: ifnull        63
      45: aload_1
      46: invokevirtual #63                 // Method java/io/ByteArrayOutputStream.close:()V
      49: goto          67
      52: astore        5
      54: aload_2
      55: aload         5
      57: invokevirtual #65                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      60: goto          67
      63: aload_1
      64: invokevirtual #63                 // Method java/io/ByteArrayOutputStream.close:()V
      67: aload         4
      69: areturn
      70: astore_3
      71: aload_3
      72: astore_2
      73: aload_3
      74: athrow
      75: astore        6
      77: aload_1
      78: ifnull        107
      81: aload_2
      82: ifnull        103
      85: aload_1
      86: invokevirtual #63                 // Method java/io/ByteArrayOutputStream.close:()V
      89: goto          107
      92: astore        7
      94: aload_2
      95: aload         7
      97: invokevirtual #65                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     100: goto          107
     103: aload_1
     104: invokevirtual #63                 // Method java/io/ByteArrayOutputStream.close:()V
     107: aload         6
     109: athrow
    Exception table:
       from    to  target type
          45    49    52   Class java/lang/Throwable
          10    37    70   Class java/lang/Throwable
          10    37    75   any
          85    89    92   Class java/lang/Throwable
          70    77    75   any

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #10                 // Field oneByte:[B
       5: iconst_0
       6: iconst_1
       7: invokevirtual #66                 // Method read:([BII)I
      10: iconst_m1
      11: if_icmpne     18
      14: iconst_m1
      15: goto          28
      18: aload_0
      19: getfield      #10                 // Field oneByte:[B
      22: iconst_0
      23: baload
      24: sipush        255
      27: iand
      28: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifne          6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: getfield      #67                 // Field endReached:Z
      10: ifeq          15
      13: iconst_m1
      14: ireturn
      15: iconst_0
      16: istore        4
      18: iload_3
      19: ifle          339
      22: aload_0
      23: getfield      #6                  // Field inf:Ljava/util/zip/Inflater;
      26: invokevirtual #68                 // Method java/util/zip/Inflater.needsInput:()Z
      29: ifeq          91
      32: aload_0
      33: getfield      #18                 // Field in:Ljava/io/InputStream;
      36: aload_0
      37: getfield      #3                  // Field buf:[B
      40: arraylength
      41: invokevirtual #69                 // Method java/io/InputStream.mark:(I)V
      44: aload_0
      45: aload_0
      46: getfield      #18                 // Field in:Ljava/io/InputStream;
      49: aload_0
      50: getfield      #3                  // Field buf:[B
      53: invokevirtual #70                 // Method java/io/InputStream.read:([B)I
      56: putfield      #71                 // Field bufUsed:I
      59: aload_0
      60: getfield      #71                 // Field bufUsed:I
      63: iconst_m1
      64: if_icmpne     75
      67: new           #72                 // class java/io/EOFException
      70: dup
      71: invokespecial #73                 // Method java/io/EOFException."<init>":()V
      74: athrow
      75: aload_0
      76: getfield      #6                  // Field inf:Ljava/util/zip/Inflater;
      79: aload_0
      80: getfield      #3                  // Field buf:[B
      83: iconst_0
      84: aload_0
      85: getfield      #71                 // Field bufUsed:I
      88: invokevirtual #74                 // Method java/util/zip/Inflater.setInput:([BII)V
      91: aload_0
      92: getfield      #6                  // Field inf:Ljava/util/zip/Inflater;
      95: aload_1
      96: iload_2
      97: iload_3
      98: invokevirtual #75                 // Method java/util/zip/Inflater.inflate:([BII)I
     101: istore        5
     103: goto          118
     106: astore        6
     108: new           #27                 // class java/io/IOException
     111: dup
     112: ldc           #77                 // String Gzip-compressed data is corrupt
     114: invokespecial #30                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     117: athrow
     118: aload_0
     119: getfield      #9                  // Field crc:Ljava/util/zip/CRC32;
     122: aload_1
     123: iload_2
     124: iload         5
     126: invokevirtual #78                 // Method java/util/zip/CRC32.update:([BII)V
     129: iload_2
     130: iload         5
     132: iadd
     133: istore_2
     134: iload_3
     135: iload         5
     137: isub
     138: istore_3
     139: iload         4
     141: iload         5
     143: iadd
     144: istore        4
     146: aload_0
     147: iload         5
     149: invokevirtual #79                 // Method count:(I)V
     152: aload_0
     153: getfield      #6                  // Field inf:Ljava/util/zip/Inflater;
     156: invokevirtual #80                 // Method java/util/zip/Inflater.finished:()Z
     159: ifeq          336
     162: aload_0
     163: getfield      #18                 // Field in:Ljava/io/InputStream;
     166: invokevirtual #81                 // Method java/io/InputStream.reset:()V
     169: aload_0
     170: getfield      #71                 // Field bufUsed:I
     173: aload_0
     174: getfield      #6                  // Field inf:Ljava/util/zip/Inflater;
     177: invokevirtual #82                 // Method java/util/zip/Inflater.getRemaining:()I
     180: isub
     181: istore        6
     183: aload_0
     184: getfield      #18                 // Field in:Ljava/io/InputStream;
     187: iload         6
     189: i2l
     190: invokestatic  #83                 // Method org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J
     193: iload         6
     195: i2l
     196: lcmp
     197: ifeq          208
     200: new           #27                 // class java/io/IOException
     203: dup
     204: invokespecial #84                 // Method java/io/IOException."<init>":()V
     207: athrow
     208: aload_0
     209: iconst_0
     210: putfield      #71                 // Field bufUsed:I
     213: new           #31                 // class java/io/DataInputStream
     216: dup
     217: aload_0
     218: getfield      #18                 // Field in:Ljava/io/InputStream;
     221: invokespecial #32                 // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
     224: astore        7
     226: aload         7
     228: iconst_4
     229: invokestatic  #44                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Ljava/io/DataInput;I)J
     232: lstore        8
     234: lload         8
     236: aload_0
     237: getfield      #9                  // Field crc:Ljava/util/zip/CRC32;
     240: invokevirtual #85                 // Method java/util/zip/CRC32.getValue:()J
     243: lcmp
     244: ifeq          257
     247: new           #27                 // class java/io/IOException
     250: dup
     251: ldc           #86                 // String Gzip-compressed data is corrupt (CRC32 error)
     253: invokespecial #30                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     256: athrow
     257: aload         7
     259: iconst_4
     260: invokestatic  #44                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Ljava/io/DataInput;I)J
     263: lstore        10
     265: lload         10
     267: aload_0
     268: getfield      #6                  // Field inf:Ljava/util/zip/Inflater;
     271: invokevirtual #87                 // Method java/util/zip/Inflater.getBytesWritten:()J
     274: ldc2_w        #88                 // long 4294967295l
     277: land
     278: lcmp
     279: ifeq          292
     282: new           #27                 // class java/io/IOException
     285: dup
     286: ldc           #90                 // String Gzip-compressed data is corrupt(uncompressed size mismatch)
     288: invokespecial #30                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     291: athrow
     292: aload_0
     293: getfield      #21                 // Field decompressConcatenated:Z
     296: ifeq          307
     299: aload_0
     300: iconst_0
     301: invokespecial #22                 // Method init:(Z)Z
     304: ifne          336
     307: aload_0
     308: getfield      #6                  // Field inf:Ljava/util/zip/Inflater;
     311: invokevirtual #91                 // Method java/util/zip/Inflater.end:()V
     314: aload_0
     315: aconst_null
     316: putfield      #6                  // Field inf:Ljava/util/zip/Inflater;
     319: aload_0
     320: iconst_1
     321: putfield      #67                 // Field endReached:Z
     324: iload         4
     326: ifne          333
     329: iconst_m1
     330: goto          335
     333: iload         4
     335: ireturn
     336: goto          18
     339: iload         4
     341: ireturn
    Exception table:
       from    to  target type
          91   103   106   Class java/util/zip/DataFormatException

  public static boolean matches(byte[], int);
    Code:
       0: iload_1
       1: iconst_2
       2: if_icmplt     25
       5: aload_0
       6: iconst_0
       7: baload
       8: bipush        31
      10: if_icmpne     25
      13: aload_0
      14: iconst_1
      15: baload
      16: bipush        -117
      18: if_icmpne     25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field inf:Ljava/util/zip/Inflater;
       4: ifnull        19
       7: aload_0
       8: getfield      #6                  // Field inf:Ljava/util/zip/Inflater;
      11: invokevirtual #91                 // Method java/util/zip/Inflater.end:()V
      14: aload_0
      15: aconst_null
      16: putfield      #6                  // Field inf:Ljava/util/zip/Inflater;
      19: aload_0
      20: getfield      #18                 // Field in:Ljava/io/InputStream;
      23: getstatic     #92                 // Field java/lang/System.in:Ljava/io/InputStream;
      26: if_acmpeq     36
      29: aload_0
      30: getfield      #18                 // Field in:Ljava/io/InputStream;
      33: invokevirtual #93                 // Method java/io/InputStream.close:()V
      36: return

  public long getCompressedCount();
    Code:
       0: aload_0
       1: getfield      #16                 // Field countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;
       4: invokevirtual #94                 // Method org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J
       7: lreturn

  static {};
    Code:
       0: ldc           #42                 // class org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream
       2: invokevirtual #95                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #23                 // Field $assertionsDisabled:Z
      16: return
}
