Compiled from "Zip64ExtendedInformationExtraField.java"
public class org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField implements org.apache.commons.compress.archivers.zip.ZipExtraField {
  static final org.apache.commons.compress.archivers.zip.ZipShort HEADER_ID;

  private static final java.lang.String LFH_MUST_HAVE_BOTH_SIZES_MSG;

  private org.apache.commons.compress.archivers.zip.ZipEightByteInteger size;

  private org.apache.commons.compress.archivers.zip.ZipEightByteInteger compressedSize;

  private org.apache.commons.compress.archivers.zip.ZipEightByteInteger relativeHeaderOffset;

  private org.apache.commons.compress.archivers.zip.ZipLong diskStart;

  private byte[] rawCentralDirectoryData;

  public org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField(org.apache.commons.compress.archivers.zip.ZipEightByteInteger, org.apache.commons.compress.archivers.zip.ZipEightByteInteger);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: aconst_null
       5: invokespecial #3                  // Method "<init>":(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;Lorg/apache/commons/compress/archivers/zip/ZipLong;)V
       8: return

  public org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField(org.apache.commons.compress.archivers.zip.ZipEightByteInteger, org.apache.commons.compress.archivers.zip.ZipEightByteInteger, org.apache.commons.compress.archivers.zip.ZipEightByteInteger, org.apache.commons.compress.archivers.zip.ZipLong);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field size:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
       9: aload_0
      10: aload_2
      11: putfield      #5                  // Field compressedSize:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
      14: aload_0
      15: aload_3
      16: putfield      #6                  // Field relativeHeaderOffset:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
      19: aload_0
      20: aload         4
      22: putfield      #7                  // Field diskStart:Lorg/apache/commons/compress/archivers/zip/ZipLong;
      25: return

  public org.apache.commons.compress.archivers.zip.ZipShort getHeaderId();
    Code:
       0: getstatic     #8                  // Field HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;
       3: areturn

  public org.apache.commons.compress.archivers.zip.ZipShort getLocalFileDataLength();
    Code:
       0: new           #9                  // class org/apache/commons/compress/archivers/zip/ZipShort
       3: dup
       4: aload_0
       5: getfield      #4                  // Field size:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
       8: ifnull        16
      11: bipush        16
      13: goto          17
      16: iconst_0
      17: invokespecial #10                 // Method org/apache/commons/compress/archivers/zip/ZipShort."<init>":(I)V
      20: areturn

  public org.apache.commons.compress.archivers.zip.ZipShort getCentralDirectoryLength();
    Code:
       0: new           #9                  // class org/apache/commons/compress/archivers/zip/ZipShort
       3: dup
       4: aload_0
       5: getfield      #4                  // Field size:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
       8: ifnull        16
      11: bipush        8
      13: goto          17
      16: iconst_0
      17: aload_0
      18: getfield      #5                  // Field compressedSize:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
      21: ifnull        29
      24: bipush        8
      26: goto          30
      29: iconst_0
      30: iadd
      31: aload_0
      32: getfield      #6                  // Field relativeHeaderOffset:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
      35: ifnull        43
      38: bipush        8
      40: goto          44
      43: iconst_0
      44: iadd
      45: aload_0
      46: getfield      #7                  // Field diskStart:Lorg/apache/commons/compress/archivers/zip/ZipLong;
      49: ifnull        56
      52: iconst_4
      53: goto          57
      56: iconst_0
      57: iadd
      58: invokespecial #10                 // Method org/apache/commons/compress/archivers/zip/ZipShort."<init>":(I)V
      61: areturn

  public byte[] getLocalFileDataData();
    Code:
       0: aload_0
       1: getfield      #4                  // Field size:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
       4: ifnonnull     14
       7: aload_0
       8: getfield      #5                  // Field compressedSize:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
      11: ifnull        51
      14: aload_0
      15: getfield      #4                  // Field size:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
      18: ifnull        28
      21: aload_0
      22: getfield      #5                  // Field compressedSize:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
      25: ifnonnull     38
      28: new           #11                 // class java/lang/IllegalArgumentException
      31: dup
      32: ldc           #13                 // String Zip64 extended information must contain both size values in the local file header.
      34: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: bipush        16
      40: newarray       byte
      42: astore_1
      43: aload_0
      44: aload_1
      45: invokespecial #15                 // Method addSizes:([B)I
      48: pop
      49: aload_1
      50: areturn
      51: getstatic     #16                 // Field org/apache/commons/compress/utils/ByteUtils.EMPTY_BYTE_ARRAY:[B
      54: areturn

  public byte[] getCentralDirectoryData();
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method getCentralDirectoryLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;
       4: invokevirtual #18                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:()I
       7: newarray       byte
       9: astore_1
      10: aload_0
      11: aload_1
      12: invokespecial #15                 // Method addSizes:([B)I
      15: istore_2
      16: aload_0
      17: getfield      #6                  // Field relativeHeaderOffset:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
      20: ifnull        41
      23: aload_0
      24: getfield      #6                  // Field relativeHeaderOffset:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
      27: invokevirtual #19                 // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getBytes:()[B
      30: iconst_0
      31: aload_1
      32: iload_2
      33: bipush        8
      35: invokestatic  #20                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      38: iinc          2, 8
      41: aload_0
      42: getfield      #7                  // Field diskStart:Lorg/apache/commons/compress/archivers/zip/ZipLong;
      45: ifnull        65
      48: aload_0
      49: getfield      #7                  // Field diskStart:Lorg/apache/commons/compress/archivers/zip/ZipLong;
      52: invokevirtual #21                 // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:()[B
      55: iconst_0
      56: aload_1
      57: iload_2
      58: iconst_4
      59: invokestatic  #20                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      62: iinc          2, 4
      65: aload_1
      66: areturn

  public void parseFromLocalFileData(byte[], int, int) throws java.util.zip.ZipException;
    Code:
       0: iload_3
       1: ifne          5
       4: return
       5: iload_3
       6: bipush        16
       8: if_icmpge     21
      11: new           #22                 // class java/util/zip/ZipException
      14: dup
      15: ldc           #13                 // String Zip64 extended information must contain both size values in the local file header.
      17: invokespecial #23                 // Method java/util/zip/ZipException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: new           #24                 // class org/apache/commons/compress/archivers/zip/ZipEightByteInteger
      25: dup
      26: aload_1
      27: iload_2
      28: invokespecial #25                 // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger."<init>":([BI)V
      31: putfield      #4                  // Field size:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
      34: iinc          2, 8
      37: aload_0
      38: new           #24                 // class org/apache/commons/compress/archivers/zip/ZipEightByteInteger
      41: dup
      42: aload_1
      43: iload_2
      44: invokespecial #25                 // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger."<init>":([BI)V
      47: putfield      #5                  // Field compressedSize:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
      50: iinc          2, 8
      53: iload_3
      54: bipush        16
      56: isub
      57: istore        4
      59: iload         4
      61: bipush        8
      63: if_icmplt     85
      66: aload_0
      67: new           #24                 // class org/apache/commons/compress/archivers/zip/ZipEightByteInteger
      70: dup
      71: aload_1
      72: iload_2
      73: invokespecial #25                 // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger."<init>":([BI)V
      76: putfield      #6                  // Field relativeHeaderOffset:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
      79: iinc          2, 8
      82: iinc          4, -8
      85: iload         4
      87: iconst_4
      88: if_icmplt     110
      91: aload_0
      92: new           #26                 // class org/apache/commons/compress/archivers/zip/ZipLong
      95: dup
      96: aload_1
      97: iload_2
      98: invokespecial #27                 // Method org/apache/commons/compress/archivers/zip/ZipLong."<init>":([BI)V
     101: putfield      #7                  // Field diskStart:Lorg/apache/commons/compress/archivers/zip/ZipLong;
     104: iinc          2, 4
     107: iinc          4, -4
     110: return

  public void parseFromCentralDirectoryData(byte[], int, int) throws java.util.zip.ZipException;
    Code:
       0: aload_0
       1: iload_3
       2: newarray       byte
       4: putfield      #28                 // Field rawCentralDirectoryData:[B
       7: aload_1
       8: iload_2
       9: aload_0
      10: getfield      #28                 // Field rawCentralDirectoryData:[B
      13: iconst_0
      14: iload_3
      15: invokestatic  #20                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      18: iload_3
      19: bipush        28
      21: if_icmplt     34
      24: aload_0
      25: aload_1
      26: iload_2
      27: iload_3
      28: invokevirtual #29                 // Method parseFromLocalFileData:([BII)V
      31: goto          113
      34: iload_3
      35: bipush        24
      37: if_icmpne     88
      40: aload_0
      41: new           #24                 // class org/apache/commons/compress/archivers/zip/ZipEightByteInteger
      44: dup
      45: aload_1
      46: iload_2
      47: invokespecial #25                 // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger."<init>":([BI)V
      50: putfield      #4                  // Field size:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
      53: iinc          2, 8
      56: aload_0
      57: new           #24                 // class org/apache/commons/compress/archivers/zip/ZipEightByteInteger
      60: dup
      61: aload_1
      62: iload_2
      63: invokespecial #25                 // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger."<init>":([BI)V
      66: putfield      #5                  // Field compressedSize:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
      69: iinc          2, 8
      72: aload_0
      73: new           #24                 // class org/apache/commons/compress/archivers/zip/ZipEightByteInteger
      76: dup
      77: aload_1
      78: iload_2
      79: invokespecial #25                 // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger."<init>":([BI)V
      82: putfield      #6                  // Field relativeHeaderOffset:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
      85: goto          113
      88: iload_3
      89: bipush        8
      91: irem
      92: iconst_4
      93: if_icmpne     113
      96: aload_0
      97: new           #26                 // class org/apache/commons/compress/archivers/zip/ZipLong
     100: dup
     101: aload_1
     102: iload_2
     103: iload_3
     104: iadd
     105: iconst_4
     106: isub
     107: invokespecial #27                 // Method org/apache/commons/compress/archivers/zip/ZipLong."<init>":([BI)V
     110: putfield      #7                  // Field diskStart:Lorg/apache/commons/compress/archivers/zip/ZipLong;
     113: return

  public void reparseCentralDirectoryData(boolean, boolean, boolean, boolean) throws java.util.zip.ZipException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field rawCentralDirectoryData:[B
       4: ifnull        203
       7: iload_1
       8: ifeq          16
      11: bipush        8
      13: goto          17
      16: iconst_0
      17: iload_2
      18: ifeq          26
      21: bipush        8
      23: goto          27
      26: iconst_0
      27: iadd
      28: iload_3
      29: ifeq          37
      32: bipush        8
      34: goto          38
      37: iconst_0
      38: iadd
      39: iload         4
      41: ifeq          48
      44: iconst_4
      45: goto          49
      48: iconst_0
      49: iadd
      50: istore        5
      52: aload_0
      53: getfield      #28                 // Field rawCentralDirectoryData:[B
      56: arraylength
      57: iload         5
      59: if_icmpge     103
      62: new           #22                 // class java/util/zip/ZipException
      65: dup
      66: new           #30                 // class java/lang/StringBuilder
      69: dup
      70: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      73: ldc           #32                 // String Central directory zip64 extended information extra field\'s length doesn\'t match central directory data.  Expected length
      75: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: iload         5
      80: invokevirtual #34                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      83: ldc           #35                 // String  but is
      85: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload_0
      89: getfield      #28                 // Field rawCentralDirectoryData:[B
      92: arraylength
      93: invokevirtual #34                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      96: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: invokespecial #23                 // Method java/util/zip/ZipException."<init>":(Ljava/lang/String;)V
     102: athrow
     103: iconst_0
     104: istore        6
     106: iload_1
     107: ifeq          130
     110: aload_0
     111: new           #24                 // class org/apache/commons/compress/archivers/zip/ZipEightByteInteger
     114: dup
     115: aload_0
     116: getfield      #28                 // Field rawCentralDirectoryData:[B
     119: iload         6
     121: invokespecial #25                 // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger."<init>":([BI)V
     124: putfield      #4                  // Field size:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
     127: iinc          6, 8
     130: iload_2
     131: ifeq          154
     134: aload_0
     135: new           #24                 // class org/apache/commons/compress/archivers/zip/ZipEightByteInteger
     138: dup
     139: aload_0
     140: getfield      #28                 // Field rawCentralDirectoryData:[B
     143: iload         6
     145: invokespecial #25                 // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger."<init>":([BI)V
     148: putfield      #5                  // Field compressedSize:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
     151: iinc          6, 8
     154: iload_3
     155: ifeq          178
     158: aload_0
     159: new           #24                 // class org/apache/commons/compress/archivers/zip/ZipEightByteInteger
     162: dup
     163: aload_0
     164: getfield      #28                 // Field rawCentralDirectoryData:[B
     167: iload         6
     169: invokespecial #25                 // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger."<init>":([BI)V
     172: putfield      #6                  // Field relativeHeaderOffset:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
     175: iinc          6, 8
     178: iload         4
     180: ifeq          203
     183: aload_0
     184: new           #26                 // class org/apache/commons/compress/archivers/zip/ZipLong
     187: dup
     188: aload_0
     189: getfield      #28                 // Field rawCentralDirectoryData:[B
     192: iload         6
     194: invokespecial #27                 // Method org/apache/commons/compress/archivers/zip/ZipLong."<init>":([BI)V
     197: putfield      #7                  // Field diskStart:Lorg/apache/commons/compress/archivers/zip/ZipLong;
     200: iinc          6, 4
     203: return

  public org.apache.commons.compress.archivers.zip.ZipEightByteInteger getSize();
    Code:
       0: aload_0
       1: getfield      #4                  // Field size:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
       4: areturn

  public void setSize(org.apache.commons.compress.archivers.zip.ZipEightByteInteger);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field size:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
       5: return

  public org.apache.commons.compress.archivers.zip.ZipEightByteInteger getCompressedSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field compressedSize:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
       4: areturn

  public void setCompressedSize(org.apache.commons.compress.archivers.zip.ZipEightByteInteger);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field compressedSize:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
       5: return

  public org.apache.commons.compress.archivers.zip.ZipEightByteInteger getRelativeHeaderOffset();
    Code:
       0: aload_0
       1: getfield      #6                  // Field relativeHeaderOffset:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
       4: areturn

  public void setRelativeHeaderOffset(org.apache.commons.compress.archivers.zip.ZipEightByteInteger);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field relativeHeaderOffset:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
       5: return

  public org.apache.commons.compress.archivers.zip.ZipLong getDiskStartNumber();
    Code:
       0: aload_0
       1: getfield      #7                  // Field diskStart:Lorg/apache/commons/compress/archivers/zip/ZipLong;
       4: areturn

  public void setDiskStartNumber(org.apache.commons.compress.archivers.zip.ZipLong);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field diskStart:Lorg/apache/commons/compress/archivers/zip/ZipLong;
       5: return

  private int addSizes(byte[]);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #4                  // Field size:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
       6: ifnull        27
       9: aload_0
      10: getfield      #4                  // Field size:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
      13: invokevirtual #19                 // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getBytes:()[B
      16: iconst_0
      17: aload_1
      18: iconst_0
      19: bipush        8
      21: invokestatic  #20                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      24: iinc          2, 8
      27: aload_0
      28: getfield      #5                  // Field compressedSize:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
      31: ifnull        52
      34: aload_0
      35: getfield      #5                  // Field compressedSize:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;
      38: invokevirtual #19                 // Method org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getBytes:()[B
      41: iconst_0
      42: aload_1
      43: iload_2
      44: bipush        8
      46: invokestatic  #20                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      49: iinc          2, 8
      52: iload_2
      53: ireturn

  static {};
    Code:
       0: new           #9                  // class org/apache/commons/compress/archivers/zip/ZipShort
       3: dup
       4: iconst_1
       5: invokespecial #10                 // Method org/apache/commons/compress/archivers/zip/ZipShort."<init>":(I)V
       8: putstatic     #8                  // Field HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;
      11: return
}
