Compiled from "TarArchiveSparseEntry.java"
public class org.apache.commons.compress.archivers.tar.TarArchiveSparseEntry implements org.apache.commons.compress.archivers.tar.TarConstants {
  private final boolean isExtended;

  private final java.util.List<org.apache.commons.compress.archivers.tar.TarArchiveStructSparse> sparseHeaders;

  public org.apache.commons.compress.archivers.tar.TarArchiveSparseEntry(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: iconst_0
       5: istore_2
       6: aload_0
       7: new           #2                  // class java/util/ArrayList
      10: dup
      11: aload_1
      12: iconst_0
      13: bipush        21
      15: invokestatic  #4                  // Method org/apache/commons/compress/archivers/tar/TarUtils.readSparseStructs:([BII)Ljava/util/List;
      18: invokespecial #5                  // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      21: putfield      #6                  // Field sparseHeaders:Ljava/util/List;
      24: iinc_w        2, 504
      30: aload_0
      31: aload_1
      32: iload_2
      33: invokestatic  #7                  // Method org/apache/commons/compress/archivers/tar/TarUtils.parseBoolean:([BI)Z
      36: putfield      #8                  // Field isExtended:Z
      39: return

  public boolean isExtended();
    Code:
       0: aload_0
       1: getfield      #8                  // Field isExtended:Z
       4: ireturn

  public java.util.List<org.apache.commons.compress.archivers.tar.TarArchiveStructSparse> getSparseHeaders();
    Code:
       0: aload_0
       1: getfield      #6                  // Field sparseHeaders:Ljava/util/List;
       4: areturn
}
