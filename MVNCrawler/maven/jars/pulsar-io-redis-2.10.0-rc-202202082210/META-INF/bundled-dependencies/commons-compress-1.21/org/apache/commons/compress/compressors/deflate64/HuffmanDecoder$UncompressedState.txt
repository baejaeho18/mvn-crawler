Compiled from "HuffmanDecoder.java"
class org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$UncompressedState extends org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$DecoderState {
  private final long blockLength;

  private long read;

  final org.apache.commons.compress.compressors.deflate64.HuffmanDecoder this$0;

  private org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$UncompressedState(org.apache.commons.compress.compressors.deflate64.HuffmanDecoder, long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;
       5: aload_0
       6: aconst_null
       7: invokespecial #3                  // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState."<init>":(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1;)V
      10: aload_0
      11: lload_2
      12: putfield      #4                  // Field blockLength:J
      15: return

  org.apache.commons.compress.compressors.deflate64.HuffmanState state();
    Code:
       0: aload_0
       1: getfield      #5                  // Field read:J
       4: aload_0
       5: getfield      #4                  // Field blockLength:J
       8: lcmp
       9: ifge          18
      12: getstatic     #6                  // Field org/apache/commons/compress/compressors/deflate64/HuffmanState.STORED:Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;
      15: goto          21
      18: getstatic     #7                  // Field org/apache/commons/compress/compressors/deflate64/HuffmanState.INITIAL:Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;
      21: areturn

  int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifne          6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: getfield      #4                  // Field blockLength:J
      10: aload_0
      11: getfield      #5                  // Field read:J
      14: lsub
      15: iload_3
      16: i2l
      17: invokestatic  #8                  // Method java/lang/Math.min:(JJ)J
      20: l2i
      21: istore        4
      23: iconst_0
      24: istore        5
      26: iload         5
      28: iload         4
      30: if_icmpge     160
      33: aload_0
      34: getfield      #2                  // Field this$0:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;
      37: invokestatic  #9                  // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$400:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/utils/BitInputStream;
      40: invokevirtual #10                 // Method org/apache/commons/compress/utils/BitInputStream.bitsCached:()I
      43: ifle          83
      46: aload_0
      47: getfield      #2                  // Field this$0:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;
      50: bipush        8
      52: invokestatic  #12                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$500:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;I)J
      55: l2i
      56: i2b
      57: istore        7
      59: aload_1
      60: iload_2
      61: iload         5
      63: iadd
      64: aload_0
      65: getfield      #2                  // Field this$0:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;
      68: invokestatic  #13                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$600:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;
      71: iload         7
      73: invokevirtual #14                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.add:(B)B
      76: bastore
      77: iconst_1
      78: istore        6
      80: goto          138
      83: aload_0
      84: getfield      #2                  // Field this$0:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;
      87: invokestatic  #15                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$700:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Ljava/io/InputStream;
      90: aload_1
      91: iload_2
      92: iload         5
      94: iadd
      95: iload         4
      97: iload         5
      99: isub
     100: invokevirtual #16                 // Method java/io/InputStream.read:([BII)I
     103: istore        6
     105: iload         6
     107: iconst_m1
     108: if_icmpne     121
     111: new           #17                 // class java/io/EOFException
     114: dup
     115: ldc           #18                 // String Truncated Deflate64 Stream
     117: invokespecial #19                 // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
     120: athrow
     121: aload_0
     122: getfield      #2                  // Field this$0:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;
     125: invokestatic  #13                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$600:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;
     128: aload_1
     129: iload_2
     130: iload         5
     132: iadd
     133: iload         6
     135: invokevirtual #20                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.add:([BII)V
     138: aload_0
     139: dup
     140: getfield      #5                  // Field read:J
     143: iload         6
     145: i2l
     146: ladd
     147: putfield      #5                  // Field read:J
     150: iload         5
     152: iload         6
     154: iadd
     155: istore        5
     157: goto          26
     160: iload         4
     162: ireturn

  boolean hasData();
    Code:
       0: aload_0
       1: getfield      #5                  // Field read:J
       4: aload_0
       5: getfield      #4                  // Field blockLength:J
       8: lcmp
       9: ifge          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field blockLength:J
       4: aload_0
       5: getfield      #5                  // Field read:J
       8: lsub
       9: aload_0
      10: getfield      #2                  // Field this$0:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;
      13: invokestatic  #9                  // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$400:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/utils/BitInputStream;
      16: invokevirtual #21                 // Method org/apache/commons/compress/utils/BitInputStream.bitsAvailable:()J
      19: ldc2_w        #22                 // long 8l
      22: ldiv
      23: invokestatic  #8                  // Method java/lang/Math.min:(JJ)J
      26: l2i
      27: ireturn

  org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$UncompressedState(org.apache.commons.compress.compressors.deflate64.HuffmanDecoder, long, org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$1);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: invokespecial #1                  // Method "<init>":(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;J)V
       6: return
}
