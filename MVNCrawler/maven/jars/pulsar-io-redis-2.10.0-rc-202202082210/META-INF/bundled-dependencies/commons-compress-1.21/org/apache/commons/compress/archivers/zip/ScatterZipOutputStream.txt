Compiled from "ScatterZipOutputStream.java"
public class org.apache.commons.compress.archivers.zip.ScatterZipOutputStream implements java.io.Closeable {
  private final java.util.Queue<org.apache.commons.compress.archivers.zip.ScatterZipOutputStream$CompressedEntry> items;

  private final org.apache.commons.compress.parallel.ScatterGatherBackingStore backingStore;

  private final org.apache.commons.compress.archivers.zip.StreamCompressor streamCompressor;

  private final java.util.concurrent.atomic.AtomicBoolean isClosed;

  private org.apache.commons.compress.archivers.zip.ScatterZipOutputStream$ZipEntryWriter zipEntryWriter;

  public org.apache.commons.compress.archivers.zip.ScatterZipOutputStream(org.apache.commons.compress.parallel.ScatterGatherBackingStore, org.apache.commons.compress.archivers.zip.StreamCompressor);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/concurrent/ConcurrentLinkedQueue
       8: dup
       9: invokespecial #5                  // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      12: putfield      #1                  // Field items:Ljava/util/Queue;
      15: aload_0
      16: new           #6                  // class java/util/concurrent/atomic/AtomicBoolean
      19: dup
      20: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      23: putfield      #8                  // Field isClosed:Ljava/util/concurrent/atomic/AtomicBoolean;
      26: aload_0
      27: aload_1
      28: putfield      #2                  // Field backingStore:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;
      31: aload_0
      32: aload_2
      33: putfield      #9                  // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
      36: return

  public void addArchiveEntry(org.apache.commons.compress.archivers.zip.ZipArchiveEntryRequest) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #10                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.getPayloadStream:()Ljava/io/InputStream;
       4: astore_2
       5: aconst_null
       6: astore_3
       7: aload_0
       8: getfield      #9                  // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
      11: aload_2
      12: aload_1
      13: invokevirtual #11                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.getMethod:()I
      16: invokevirtual #12                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.deflate:(Ljava/io/InputStream;I)V
      19: aload_2
      20: ifnull        95
      23: aload_3
      24: ifnull        45
      27: aload_2
      28: invokevirtual #13                 // Method java/io/InputStream.close:()V
      31: goto          95
      34: astore        4
      36: aload_3
      37: aload         4
      39: invokevirtual #15                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      42: goto          95
      45: aload_2
      46: invokevirtual #13                 // Method java/io/InputStream.close:()V
      49: goto          95
      52: astore        4
      54: aload         4
      56: astore_3
      57: aload         4
      59: athrow
      60: astore        5
      62: aload_2
      63: ifnull        92
      66: aload_3
      67: ifnull        88
      70: aload_2
      71: invokevirtual #13                 // Method java/io/InputStream.close:()V
      74: goto          92
      77: astore        6
      79: aload_3
      80: aload         6
      82: invokevirtual #15                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      85: goto          92
      88: aload_2
      89: invokevirtual #13                 // Method java/io/InputStream.close:()V
      92: aload         5
      94: athrow
      95: aload_0
      96: getfield      #1                  // Field items:Ljava/util/Queue;
      99: new           #16                 // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry
     102: dup
     103: aload_1
     104: aload_0
     105: getfield      #9                  // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
     108: invokevirtual #17                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.getCrc32:()J
     111: aload_0
     112: getfield      #9                  // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
     115: invokevirtual #18                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.getBytesWrittenForLastEntry:()J
     118: aload_0
     119: getfield      #9                  // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
     122: invokevirtual #19                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.getBytesRead:()J
     125: invokespecial #20                 // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry."<init>":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;JJJ)V
     128: invokeinterface #21,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
     133: pop
     134: return
    Exception table:
       from    to  target type
          27    31    34   Class java/lang/Throwable
           7    19    52   Class java/lang/Throwable
           7    19    60   any
          70    74    77   Class java/lang/Throwable
          52    62    60   any

  public void writeTo(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field backingStore:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;
       4: invokeinterface #22,  1           // InterfaceMethod org/apache/commons/compress/parallel/ScatterGatherBackingStore.closeForWriting:()V
       9: aload_0
      10: getfield      #2                  // Field backingStore:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;
      13: invokeinterface #23,  1           // InterfaceMethod org/apache/commons/compress/parallel/ScatterGatherBackingStore.getInputStream:()Ljava/io/InputStream;
      18: astore_2
      19: aconst_null
      20: astore_3
      21: aload_0
      22: getfield      #1                  // Field items:Ljava/util/Queue;
      25: invokeinterface #24,  1           // InterfaceMethod java/util/Queue.iterator:()Ljava/util/Iterator;
      30: astore        4
      32: aload         4
      34: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          173
      42: aload         4
      44: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #16                 // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry
      52: astore        5
      54: new           #27                 // class org/apache/commons/compress/utils/BoundedInputStream
      57: dup
      58: aload_2
      59: aload         5
      61: getfield      #28                 // Field org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.compressedSize:J
      64: invokespecial #29                 // Method org/apache/commons/compress/utils/BoundedInputStream."<init>":(Ljava/io/InputStream;J)V
      67: astore        6
      69: aconst_null
      70: astore        7
      72: aload_1
      73: aload         5
      75: invokevirtual #30                 // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.transferToArchiveEntry:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;
      78: aload         6
      80: invokevirtual #31                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.addRawArchiveEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Ljava/io/InputStream;)V
      83: aload         6
      85: ifnull        170
      88: aload         7
      90: ifnull        113
      93: aload         6
      95: invokevirtual #32                 // Method org/apache/commons/compress/utils/BoundedInputStream.close:()V
      98: goto          170
     101: astore        8
     103: aload         7
     105: aload         8
     107: invokevirtual #15                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     110: goto          170
     113: aload         6
     115: invokevirtual #32                 // Method org/apache/commons/compress/utils/BoundedInputStream.close:()V
     118: goto          170
     121: astore        8
     123: aload         8
     125: astore        7
     127: aload         8
     129: athrow
     130: astore        9
     132: aload         6
     134: ifnull        167
     137: aload         7
     139: ifnull        162
     142: aload         6
     144: invokevirtual #32                 // Method org/apache/commons/compress/utils/BoundedInputStream.close:()V
     147: goto          167
     150: astore        10
     152: aload         7
     154: aload         10
     156: invokevirtual #15                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     159: goto          167
     162: aload         6
     164: invokevirtual #32                 // Method org/apache/commons/compress/utils/BoundedInputStream.close:()V
     167: aload         9
     169: athrow
     170: goto          32
     173: aload_2
     174: ifnull        249
     177: aload_3
     178: ifnull        199
     181: aload_2
     182: invokevirtual #13                 // Method java/io/InputStream.close:()V
     185: goto          249
     188: astore        4
     190: aload_3
     191: aload         4
     193: invokevirtual #15                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     196: goto          249
     199: aload_2
     200: invokevirtual #13                 // Method java/io/InputStream.close:()V
     203: goto          249
     206: astore        4
     208: aload         4
     210: astore_3
     211: aload         4
     213: athrow
     214: astore        11
     216: aload_2
     217: ifnull        246
     220: aload_3
     221: ifnull        242
     224: aload_2
     225: invokevirtual #13                 // Method java/io/InputStream.close:()V
     228: goto          246
     231: astore        12
     233: aload_3
     234: aload         12
     236: invokevirtual #15                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     239: goto          246
     242: aload_2
     243: invokevirtual #13                 // Method java/io/InputStream.close:()V
     246: aload         11
     248: athrow
     249: return
    Exception table:
       from    to  target type
          93    98   101   Class java/lang/Throwable
          72    83   121   Class java/lang/Throwable
          72    83   130   any
         142   147   150   Class java/lang/Throwable
         121   132   130   any
         181   185   188   Class java/lang/Throwable
          21   173   206   Class java/lang/Throwable
          21   173   214   any
         224   228   231   Class java/lang/Throwable
         206   216   214   any

  public org.apache.commons.compress.archivers.zip.ScatterZipOutputStream$ZipEntryWriter zipEntryWriter() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field zipEntryWriter:Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter;
       4: ifnonnull     19
       7: aload_0
       8: new           #34                 // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter
      11: dup
      12: aload_0
      13: invokespecial #35                 // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter."<init>":(Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)V
      16: putfield      #33                 // Field zipEntryWriter:Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter;
      19: aload_0
      20: getfield      #33                 // Field zipEntryWriter:Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter;
      23: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field isClosed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifne          13
      12: return
      13: aload_0
      14: getfield      #33                 // Field zipEntryWriter:Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter;
      17: ifnull        27
      20: aload_0
      21: getfield      #33                 // Field zipEntryWriter:Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter;
      24: invokevirtual #37                 // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter.close:()V
      27: aload_0
      28: getfield      #2                  // Field backingStore:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;
      31: invokeinterface #38,  1           // InterfaceMethod org/apache/commons/compress/parallel/ScatterGatherBackingStore.close:()V
      36: aload_0
      37: getfield      #9                  // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
      40: invokevirtual #39                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.close:()V
      43: goto          56
      46: astore_1
      47: aload_0
      48: getfield      #9                  // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
      51: invokevirtual #39                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.close:()V
      54: aload_1
      55: athrow
      56: return
    Exception table:
       from    to  target type
          13    36    46   any

  public static org.apache.commons.compress.archivers.zip.ScatterZipOutputStream fileBased(java.io.File) throws java.io.FileNotFoundException;
    Code:
       0: aload_0
       1: iconst_m1
       2: invokestatic  #41                 // Method fileBased:(Ljava/io/File;I)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;
       5: areturn

  public static org.apache.commons.compress.archivers.zip.ScatterZipOutputStream fileBased(java.io.File, int) throws java.io.FileNotFoundException;
    Code:
       0: new           #42                 // class org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore
       3: dup
       4: aload_0
       5: invokespecial #43                 // Method org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore."<init>":(Ljava/io/File;)V
       8: astore_2
       9: iload_1
      10: aload_2
      11: invokestatic  #44                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.create:(ILorg/apache/commons/compress/parallel/ScatterGatherBackingStore;)Lorg/apache/commons/compress/archivers/zip/StreamCompressor;
      14: astore_3
      15: new           #45                 // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream
      18: dup
      19: aload_2
      20: aload_3
      21: invokespecial #46                 // Method "<init>":(Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;Lorg/apache/commons/compress/archivers/zip/StreamCompressor;)V
      24: areturn

  static org.apache.commons.compress.parallel.ScatterGatherBackingStore access$000(org.apache.commons.compress.archivers.zip.ScatterZipOutputStream);
    Code:
       0: aload_0
       1: getfield      #2                  // Field backingStore:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;
       4: areturn

  static java.util.Queue access$100(org.apache.commons.compress.archivers.zip.ScatterZipOutputStream);
    Code:
       0: aload_0
       1: getfield      #1                  // Field items:Ljava/util/Queue;
       4: areturn
}
