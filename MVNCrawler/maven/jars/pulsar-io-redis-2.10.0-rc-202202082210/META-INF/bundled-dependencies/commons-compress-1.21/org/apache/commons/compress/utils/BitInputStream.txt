Compiled from "BitInputStream.java"
public class org.apache.commons.compress.utils.BitInputStream implements java.io.Closeable {
  private static final int MAXIMUM_CACHE_SIZE;

  private static final long[] MASKS;

  private final org.apache.commons.compress.utils.CountingInputStream in;

  private final java.nio.ByteOrder byteOrder;

  private long bitsCached;

  private int bitsCachedSize;

  public org.apache.commons.compress.utils.BitInputStream(java.io.InputStream, java.nio.ByteOrder);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/apache/commons/compress/utils/CountingInputStream
       8: dup
       9: aload_1
      10: invokespecial #3                  // Method org/apache/commons/compress/utils/CountingInputStream."<init>":(Ljava/io/InputStream;)V
      13: putfield      #4                  // Field in:Lorg/apache/commons/compress/utils/CountingInputStream;
      16: aload_0
      17: aload_2
      18: putfield      #5                  // Field byteOrder:Ljava/nio/ByteOrder;
      21: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field in:Lorg/apache/commons/compress/utils/CountingInputStream;
       4: invokevirtual #6                  // Method org/apache/commons/compress/utils/CountingInputStream.close:()V
       7: return

  public void clearBitCache();
    Code:
       0: aload_0
       1: lconst_0
       2: putfield      #7                  // Field bitsCached:J
       5: aload_0
       6: iconst_0
       7: putfield      #8                  // Field bitsCachedSize:I
      10: return

  public long readBits(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: iflt          10
       4: iload_1
       5: bipush        63
       7: if_icmple     20
      10: new           #10                 // class java/io/IOException
      13: dup
      14: ldc           #11                 // String count must not be negative or greater than 63
      16: invokespecial #12                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: iload_1
      22: invokespecial #13                 // Method ensureCache:(I)Z
      25: ifeq          32
      28: ldc2_w        #14                 // long -1l
      31: lreturn
      32: aload_0
      33: getfield      #8                  // Field bitsCachedSize:I
      36: iload_1
      37: if_icmpge     46
      40: aload_0
      41: iload_1
      42: invokespecial #16                 // Method processBitsGreater57:(I)J
      45: lreturn
      46: aload_0
      47: iload_1
      48: invokespecial #17                 // Method readCachedBits:(I)J
      51: lreturn

  public int bitsCached();
    Code:
       0: aload_0
       1: getfield      #8                  // Field bitsCachedSize:I
       4: ireturn

  public long bitsAvailable() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field bitsCachedSize:I
       4: i2l
       5: ldc2_w        #19                 // long 8l
       8: aload_0
       9: getfield      #4                  // Field in:Lorg/apache/commons/compress/utils/CountingInputStream;
      12: invokevirtual #21                 // Method org/apache/commons/compress/utils/CountingInputStream.available:()I
      15: i2l
      16: lmul
      17: ladd
      18: lreturn

  public void alignWithByteBoundary();
    Code:
       0: aload_0
       1: getfield      #8                  // Field bitsCachedSize:I
       4: bipush        8
       6: irem
       7: istore_1
       8: iload_1
       9: ifle          18
      12: aload_0
      13: iload_1
      14: invokespecial #17                 // Method readCachedBits:(I)J
      17: pop2
      18: return

  public long getBytesRead();
    Code:
       0: aload_0
       1: getfield      #4                  // Field in:Lorg/apache/commons/compress/utils/CountingInputStream;
       4: invokevirtual #22                 // Method org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J
       7: lreturn

  private long processBitsGreater57(int) throws java.io.IOException;
    Code:
       0: lconst_0
       1: lstore        5
       3: iload_1
       4: aload_0
       5: getfield      #8                  // Field bitsCachedSize:I
       8: isub
       9: istore        7
      11: bipush        8
      13: iload         7
      15: isub
      16: istore        4
      18: aload_0
      19: getfield      #4                  // Field in:Lorg/apache/commons/compress/utils/CountingInputStream;
      22: invokevirtual #23                 // Method org/apache/commons/compress/utils/CountingInputStream.read:()I
      25: i2l
      26: lstore        8
      28: lload         8
      30: lconst_0
      31: lcmp
      32: ifge          38
      35: lload         8
      37: lreturn
      38: aload_0
      39: getfield      #5                  // Field byteOrder:Ljava/nio/ByteOrder;
      42: getstatic     #24                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
      45: if_acmpne     92
      48: lload         8
      50: getstatic     #25                 // Field MASKS:[J
      53: iload         7
      55: laload
      56: land
      57: lstore        10
      59: aload_0
      60: dup
      61: getfield      #7                  // Field bitsCached:J
      64: lload         10
      66: aload_0
      67: getfield      #8                  // Field bitsCachedSize:I
      70: lshl
      71: lor
      72: putfield      #7                  // Field bitsCached:J
      75: lload         8
      77: iload         7
      79: lushr
      80: getstatic     #25                 // Field MASKS:[J
      83: iload         4
      85: laload
      86: land
      87: lstore        5
      89: goto          139
      92: aload_0
      93: dup
      94: getfield      #7                  // Field bitsCached:J
      97: iload         7
      99: lshl
     100: putfield      #7                  // Field bitsCached:J
     103: lload         8
     105: iload         4
     107: lushr
     108: getstatic     #25                 // Field MASKS:[J
     111: iload         7
     113: laload
     114: land
     115: lstore        10
     117: aload_0
     118: dup
     119: getfield      #7                  // Field bitsCached:J
     122: lload         10
     124: lor
     125: putfield      #7                  // Field bitsCached:J
     128: lload         8
     130: getstatic     #25                 // Field MASKS:[J
     133: iload         4
     135: laload
     136: land
     137: lstore        5
     139: aload_0
     140: getfield      #7                  // Field bitsCached:J
     143: getstatic     #25                 // Field MASKS:[J
     146: iload_1
     147: laload
     148: land
     149: lstore_2
     150: aload_0
     151: lload         5
     153: putfield      #7                  // Field bitsCached:J
     156: aload_0
     157: iload         4
     159: putfield      #8                  // Field bitsCachedSize:I
     162: lload_2
     163: lreturn

  private long readCachedBits(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field byteOrder:Ljava/nio/ByteOrder;
       4: getstatic     #24                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
       7: if_acmpne     34
      10: aload_0
      11: getfield      #7                  // Field bitsCached:J
      14: getstatic     #25                 // Field MASKS:[J
      17: iload_1
      18: laload
      19: land
      20: lstore_2
      21: aload_0
      22: dup
      23: getfield      #7                  // Field bitsCached:J
      26: iload_1
      27: lushr
      28: putfield      #7                  // Field bitsCached:J
      31: goto          52
      34: aload_0
      35: getfield      #7                  // Field bitsCached:J
      38: aload_0
      39: getfield      #8                  // Field bitsCachedSize:I
      42: iload_1
      43: isub
      44: lshr
      45: getstatic     #25                 // Field MASKS:[J
      48: iload_1
      49: laload
      50: land
      51: lstore_2
      52: aload_0
      53: dup
      54: getfield      #8                  // Field bitsCachedSize:I
      57: iload_1
      58: isub
      59: putfield      #8                  // Field bitsCachedSize:I
      62: lload_2
      63: lreturn

  private boolean ensureCache(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field bitsCachedSize:I
       4: iload_1
       5: if_icmpge     97
       8: aload_0
       9: getfield      #8                  // Field bitsCachedSize:I
      12: bipush        57
      14: if_icmpge     97
      17: aload_0
      18: getfield      #4                  // Field in:Lorg/apache/commons/compress/utils/CountingInputStream;
      21: invokevirtual #23                 // Method org/apache/commons/compress/utils/CountingInputStream.read:()I
      24: i2l
      25: lstore_2
      26: lload_2
      27: lconst_0
      28: lcmp
      29: ifge          34
      32: iconst_1
      33: ireturn
      34: aload_0
      35: getfield      #5                  // Field byteOrder:Ljava/nio/ByteOrder;
      38: getstatic     #24                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
      41: if_acmpne     62
      44: aload_0
      45: dup
      46: getfield      #7                  // Field bitsCached:J
      49: lload_2
      50: aload_0
      51: getfield      #8                  // Field bitsCachedSize:I
      54: lshl
      55: lor
      56: putfield      #7                  // Field bitsCached:J
      59: goto          83
      62: aload_0
      63: dup
      64: getfield      #7                  // Field bitsCached:J
      67: bipush        8
      69: lshl
      70: putfield      #7                  // Field bitsCached:J
      73: aload_0
      74: dup
      75: getfield      #7                  // Field bitsCached:J
      78: lload_2
      79: lor
      80: putfield      #7                  // Field bitsCached:J
      83: aload_0
      84: dup
      85: getfield      #8                  // Field bitsCachedSize:I
      88: bipush        8
      90: iadd
      91: putfield      #8                  // Field bitsCachedSize:I
      94: goto          0
      97: iconst_0
      98: ireturn

  static {};
    Code:
       0: bipush        64
       2: newarray       long
       4: putstatic     #25                 // Field MASKS:[J
       7: iconst_1
       8: istore_0
       9: iload_0
      10: bipush        63
      12: if_icmpgt     37
      15: getstatic     #25                 // Field MASKS:[J
      18: iload_0
      19: getstatic     #25                 // Field MASKS:[J
      22: iload_0
      23: iconst_1
      24: isub
      25: laload
      26: iconst_1
      27: lshl
      28: lconst_1
      29: ladd
      30: lastore
      31: iinc          0, 1
      34: goto          9
      37: return
}
