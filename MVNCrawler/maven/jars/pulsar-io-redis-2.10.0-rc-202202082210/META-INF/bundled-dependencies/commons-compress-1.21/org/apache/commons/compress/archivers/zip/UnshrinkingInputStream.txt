Compiled from "UnshrinkingInputStream.java"
class org.apache.commons.compress.archivers.zip.UnshrinkingInputStream extends org.apache.commons.compress.compressors.lzw.LZWInputStream {
  private static final int MAX_CODE_SIZE;

  private static final int MAX_TABLE_SIZE;

  private final boolean[] isUsed;

  public org.apache.commons.compress.archivers.zip.UnshrinkingInputStream(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #2                  // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
       5: invokespecial #3                  // Method org/apache/commons/compress/compressors/lzw/LZWInputStream."<init>":(Ljava/io/InputStream;Ljava/nio/ByteOrder;)V
       8: aload_0
       9: bipush        9
      11: invokevirtual #5                  // Method setClearCode:(I)V
      14: aload_0
      15: bipush        13
      17: invokevirtual #6                  // Method initializeTables:(I)V
      20: aload_0
      21: aload_0
      22: invokevirtual #7                  // Method getPrefixesLength:()I
      25: newarray       boolean
      27: putfield      #8                  // Field isUsed:[Z
      30: iconst_0
      31: istore_2
      32: iload_2
      33: sipush        256
      36: if_icmpge     52
      39: aload_0
      40: getfield      #8                  // Field isUsed:[Z
      43: iload_2
      44: iconst_1
      45: bastore
      46: iinc          2, 1
      49: goto          32
      52: aload_0
      53: aload_0
      54: invokevirtual #9                  // Method getClearCode:()I
      57: iconst_1
      58: iadd
      59: invokevirtual #10                 // Method setTableSize:(I)V
      62: return

  protected int addEntry(int, byte) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getTableSize:()I
       4: istore_3
       5: iload_3
       6: sipush        8192
       9: if_icmpge     27
      12: aload_0
      13: getfield      #8                  // Field isUsed:[Z
      16: iload_3
      17: baload
      18: ifeq          27
      21: iinc          3, 1
      24: goto          5
      27: aload_0
      28: iload_3
      29: invokevirtual #10                 // Method setTableSize:(I)V
      32: aload_0
      33: iload_1
      34: iload_2
      35: sipush        8192
      38: invokevirtual #12                 // Method addEntry:(IBI)I
      41: istore        4
      43: iload         4
      45: iflt          56
      48: aload_0
      49: getfield      #8                  // Field isUsed:[Z
      52: iload         4
      54: iconst_1
      55: bastore
      56: iload         4
      58: ireturn

  private void partialClear();
    Code:
       0: sipush        8192
       3: newarray       boolean
       5: astore_1
       6: iconst_0
       7: istore_2
       8: iload_2
       9: aload_0
      10: getfield      #8                  // Field isUsed:[Z
      13: arraylength
      14: if_icmpge     49
      17: aload_0
      18: getfield      #8                  // Field isUsed:[Z
      21: iload_2
      22: baload
      23: ifeq          43
      26: aload_0
      27: iload_2
      28: invokevirtual #13                 // Method getPrefix:(I)I
      31: iconst_m1
      32: if_icmpeq     43
      35: aload_1
      36: aload_0
      37: iload_2
      38: invokevirtual #13                 // Method getPrefix:(I)I
      41: iconst_1
      42: bastore
      43: iinc          2, 1
      46: goto          8
      49: aload_0
      50: invokevirtual #9                  // Method getClearCode:()I
      53: iconst_1
      54: iadd
      55: istore_2
      56: iload_2
      57: aload_1
      58: arraylength
      59: if_icmpge     87
      62: aload_1
      63: iload_2
      64: baload
      65: ifne          81
      68: aload_0
      69: getfield      #8                  // Field isUsed:[Z
      72: iload_2
      73: iconst_0
      74: bastore
      75: aload_0
      76: iload_2
      77: iconst_m1
      78: invokevirtual #14                 // Method setPrefix:(II)V
      81: iinc          2, 1
      84: goto          56
      87: return

  protected int decompressNextSymbol() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method readNextCode:()I
       4: istore_1
       5: iload_1
       6: ifge          11
       9: iconst_m1
      10: ireturn
      11: iload_1
      12: aload_0
      13: invokevirtual #9                  // Method getClearCode:()I
      16: if_icmpeq     46
      19: iconst_0
      20: istore_2
      21: iload_1
      22: istore_3
      23: aload_0
      24: getfield      #8                  // Field isUsed:[Z
      27: iload_1
      28: baload
      29: ifne          39
      32: aload_0
      33: invokevirtual #16                 // Method addRepeatOfPreviousCode:()I
      36: istore_3
      37: iconst_1
      38: istore_2
      39: aload_0
      40: iload_3
      41: iload_2
      42: invokevirtual #17                 // Method expandCodeToOutputStack:(IZ)I
      45: ireturn
      46: aload_0
      47: invokevirtual #15                 // Method readNextCode:()I
      50: istore_2
      51: iload_2
      52: ifge          65
      55: new           #18                 // class java/io/IOException
      58: dup
      59: ldc           #19                 // String Unexpected EOF;
      61: invokespecial #20                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      64: athrow
      65: iload_2
      66: iconst_1
      67: if_icmpne     96
      70: aload_0
      71: invokevirtual #21                 // Method getCodeSize:()I
      74: bipush        13
      76: if_icmplt     89
      79: new           #18                 // class java/io/IOException
      82: dup
      83: ldc           #22                 // String Attempt to increase code size beyond maximum
      85: invokespecial #20                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      88: athrow
      89: aload_0
      90: invokevirtual #23                 // Method incrementCodeSize:()V
      93: goto          145
      96: iload_2
      97: iconst_2
      98: if_icmpne     118
     101: aload_0
     102: invokespecial #24                 // Method partialClear:()V
     105: aload_0
     106: aload_0
     107: invokevirtual #9                  // Method getClearCode:()I
     110: iconst_1
     111: iadd
     112: invokevirtual #10                 // Method setTableSize:(I)V
     115: goto          145
     118: new           #18                 // class java/io/IOException
     121: dup
     122: new           #25                 // class java/lang/StringBuilder
     125: dup
     126: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     129: ldc           #27                 // String Invalid clear code subcode
     131: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: iload_2
     135: invokevirtual #29                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     138: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     141: invokespecial #20                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     144: athrow
     145: iconst_0
     146: ireturn
}
