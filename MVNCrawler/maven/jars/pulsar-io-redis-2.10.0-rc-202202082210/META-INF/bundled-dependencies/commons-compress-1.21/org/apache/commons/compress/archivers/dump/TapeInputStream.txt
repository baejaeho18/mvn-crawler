Compiled from "TapeInputStream.java"
class org.apache.commons.compress.archivers.dump.TapeInputStream extends java.io.FilterInputStream {
  private byte[] blockBuffer;

  private int currBlkIdx;

  private int blockSize;

  private static final int RECORD_SIZE;

  private int readOffset;

  private boolean isCompressed;

  private long bytesRead;

  public org.apache.commons.compress.archivers.dump.TapeInputStream(java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method java/io/FilterInputStream."<init>":(Ljava/io/InputStream;)V
       5: aload_0
       6: sipush        1024
       9: newarray       byte
      11: putfield      #3                  // Field blockBuffer:[B
      14: aload_0
      15: iconst_m1
      16: putfield      #4                  // Field currBlkIdx:I
      19: aload_0
      20: sipush        1024
      23: putfield      #5                  // Field blockSize:I
      26: aload_0
      27: sipush        1024
      30: putfield      #6                  // Field readOffset:I
      33: return

  public void resetBlockSize(int, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_2
       2: putfield      #7                  // Field isCompressed:Z
       5: iload_1
       6: iconst_1
       7: if_icmpge     42
      10: new           #8                  // class java/io/IOException
      13: dup
      14: new           #9                  // class java/lang/StringBuilder
      17: dup
      18: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #11                 // String Block with
      23: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: iload_1
      27: invokevirtual #13                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: ldc           #14                 // String  records found, must be at least 1
      32: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #16                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_0
      43: sipush        1024
      46: iload_1
      47: imul
      48: putfield      #5                  // Field blockSize:I
      51: aload_0
      52: getfield      #3                  // Field blockBuffer:[B
      55: astore_3
      56: aload_0
      57: aload_0
      58: getfield      #5                  // Field blockSize:I
      61: newarray       byte
      63: putfield      #3                  // Field blockBuffer:[B
      66: aload_3
      67: iconst_0
      68: aload_0
      69: getfield      #3                  // Field blockBuffer:[B
      72: iconst_0
      73: sipush        1024
      76: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      79: aload_0
      80: aload_0
      81: getfield      #3                  // Field blockBuffer:[B
      84: sipush        1024
      87: aload_0
      88: getfield      #5                  // Field blockSize:I
      91: sipush        1024
      94: isub
      95: invokespecial #19                 // Method readFully:([BII)V
      98: aload_0
      99: iconst_0
     100: putfield      #4                  // Field currBlkIdx:I
     103: aload_0
     104: sipush        1024
     107: putfield      #6                  // Field readOffset:I
     110: return

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field readOffset:I
       4: aload_0
       5: getfield      #5                  // Field blockSize:I
       8: if_icmpge     21
      11: aload_0
      12: getfield      #5                  // Field blockSize:I
      15: aload_0
      16: getfield      #6                  // Field readOffset:I
      19: isub
      20: ireturn
      21: aload_0
      22: getfield      #20                 // Field in:Ljava/io/InputStream;
      25: invokevirtual #21                 // Method java/io/InputStream.available:()I
      28: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: new           #22                 // class java/lang/IllegalArgumentException
       3: dup
       4: ldc           #23                 // String All reads must be multiple of record size (1024 bytes.
       6: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       9: athrow

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifne          6
       4: iconst_0
       5: ireturn
       6: iload_3
       7: sipush        1024
      10: irem
      11: ifeq          24
      14: new           #22                 // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #23                 // String All reads must be multiple of record size (1024 bytes.
      20: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: iconst_0
      25: istore        4
      27: iload         4
      29: iload_3
      30: if_icmpge     136
      33: aload_0
      34: getfield      #6                  // Field readOffset:I
      37: aload_0
      38: getfield      #5                  // Field blockSize:I
      41: if_icmpne     56
      44: aload_0
      45: iconst_1
      46: invokespecial #25                 // Method readBlock:(Z)V
      49: goto          56
      52: astore        5
      54: iconst_m1
      55: ireturn
      56: iconst_0
      57: istore        5
      59: aload_0
      60: getfield      #6                  // Field readOffset:I
      63: iload_3
      64: iload         4
      66: isub
      67: iadd
      68: aload_0
      69: getfield      #5                  // Field blockSize:I
      72: if_icmpgt     84
      75: iload_3
      76: iload         4
      78: isub
      79: istore        5
      81: goto          95
      84: aload_0
      85: getfield      #5                  // Field blockSize:I
      88: aload_0
      89: getfield      #6                  // Field readOffset:I
      92: isub
      93: istore        5
      95: aload_0
      96: getfield      #3                  // Field blockBuffer:[B
      99: aload_0
     100: getfield      #6                  // Field readOffset:I
     103: aload_1
     104: iload_2
     105: iload         5
     107: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     110: aload_0
     111: dup
     112: getfield      #6                  // Field readOffset:I
     115: iload         5
     117: iadd
     118: putfield      #6                  // Field readOffset:I
     121: iload         4
     123: iload         5
     125: iadd
     126: istore        4
     128: iload_2
     129: iload         5
     131: iadd
     132: istore_2
     133: goto          27
     136: iload         4
     138: ireturn
    Exception table:
       from    to  target type
          44    49    52   Class org/apache/commons/compress/archivers/dump/ShortFileException

  public long skip(long) throws java.io.IOException;
    Code:
       0: lload_1
       1: ldc2_w        #27                 // long 1024l
       4: lrem
       5: lconst_0
       6: lcmp
       7: ifeq          20
      10: new           #22                 // class java/lang/IllegalArgumentException
      13: dup
      14: ldc           #23                 // String All reads must be multiple of record size (1024 bytes.
      16: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: lconst_0
      21: lstore_3
      22: lload_3
      23: lload_1
      24: lcmp
      25: ifge          132
      28: aload_0
      29: getfield      #6                  // Field readOffset:I
      32: aload_0
      33: getfield      #5                  // Field blockSize:I
      36: if_icmpne     69
      39: aload_0
      40: lload_1
      41: lload_3
      42: lsub
      43: aload_0
      44: getfield      #5                  // Field blockSize:I
      47: i2l
      48: lcmp
      49: ifge          56
      52: iconst_1
      53: goto          57
      56: iconst_0
      57: invokespecial #25                 // Method readBlock:(Z)V
      60: goto          69
      63: astore        5
      65: ldc2_w        #29                 // long -1l
      68: lreturn
      69: lconst_0
      70: lstore        5
      72: aload_0
      73: getfield      #6                  // Field readOffset:I
      76: i2l
      77: lload_1
      78: lload_3
      79: lsub
      80: ladd
      81: aload_0
      82: getfield      #5                  // Field blockSize:I
      85: i2l
      86: lcmp
      87: ifgt          98
      90: lload_1
      91: lload_3
      92: lsub
      93: lstore        5
      95: goto          111
      98: aload_0
      99: getfield      #5                  // Field blockSize:I
     102: i2l
     103: aload_0
     104: getfield      #6                  // Field readOffset:I
     107: i2l
     108: lsub
     109: lstore        5
     111: aload_0
     112: dup
     113: getfield      #6                  // Field readOffset:I
     116: i2l
     117: lload         5
     119: ladd
     120: l2i
     121: putfield      #6                  // Field readOffset:I
     124: lload_3
     125: lload         5
     127: ladd
     128: lstore_3
     129: goto          22
     132: lload_3
     133: lreturn
    Exception table:
       from    to  target type
          39    60    63   Class org/apache/commons/compress/archivers/dump/ShortFileException

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field in:Ljava/io/InputStream;
       4: ifnull        24
       7: aload_0
       8: getfield      #20                 // Field in:Ljava/io/InputStream;
      11: getstatic     #31                 // Field java/lang/System.in:Ljava/io/InputStream;
      14: if_acmpeq     24
      17: aload_0
      18: getfield      #20                 // Field in:Ljava/io/InputStream;
      21: invokevirtual #32                 // Method java/io/InputStream.close:()V
      24: return

  public byte[] peek() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field readOffset:I
       4: aload_0
       5: getfield      #5                  // Field blockSize:I
       8: if_icmpne     22
      11: aload_0
      12: iconst_1
      13: invokespecial #25                 // Method readBlock:(Z)V
      16: goto          22
      19: astore_1
      20: aconst_null
      21: areturn
      22: sipush        1024
      25: newarray       byte
      27: astore_1
      28: aload_0
      29: getfield      #3                  // Field blockBuffer:[B
      32: aload_0
      33: getfield      #6                  // Field readOffset:I
      36: aload_1
      37: iconst_0
      38: aload_1
      39: arraylength
      40: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      43: aload_1
      44: areturn
    Exception table:
       from    to  target type
          11    16    19   Class org/apache/commons/compress/archivers/dump/ShortFileException

  public byte[] readRecord() throws java.io.IOException;
    Code:
       0: sipush        1024
       3: newarray       byte
       5: astore_1
       6: iconst_m1
       7: aload_0
       8: aload_1
       9: iconst_0
      10: aload_1
      11: arraylength
      12: invokevirtual #33                 // Method read:([BII)I
      15: if_icmpne     26
      18: new           #26                 // class org/apache/commons/compress/archivers/dump/ShortFileException
      21: dup
      22: invokespecial #34                 // Method org/apache/commons/compress/archivers/dump/ShortFileException."<init>":()V
      25: athrow
      26: aload_1
      27: areturn

  private void readBlock(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field in:Ljava/io/InputStream;
       4: ifnonnull     17
       7: new           #8                  // class java/io/IOException
      10: dup
      11: ldc           #35                 // String Input buffer is closed
      13: invokespecial #16                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #7                  // Field isCompressed:Z
      21: ifeq          32
      24: aload_0
      25: getfield      #4                  // Field currBlkIdx:I
      28: iconst_m1
      29: if_icmpne     62
      32: aload_0
      33: aload_0
      34: getfield      #3                  // Field blockBuffer:[B
      37: iconst_0
      38: aload_0
      39: getfield      #5                  // Field blockSize:I
      42: invokespecial #19                 // Method readFully:([BII)V
      45: aload_0
      46: dup
      47: getfield      #36                 // Field bytesRead:J
      50: aload_0
      51: getfield      #5                  // Field blockSize:I
      54: i2l
      55: ladd
      56: putfield      #36                 // Field bytesRead:J
      59: goto          343
      62: aload_0
      63: aload_0
      64: getfield      #3                  // Field blockBuffer:[B
      67: iconst_0
      68: iconst_4
      69: invokespecial #19                 // Method readFully:([BII)V
      72: aload_0
      73: dup
      74: getfield      #36                 // Field bytesRead:J
      77: ldc2_w        #37                 // long 4l
      80: ladd
      81: putfield      #36                 // Field bytesRead:J
      84: aload_0
      85: getfield      #3                  // Field blockBuffer:[B
      88: iconst_0
      89: invokestatic  #39                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32:([BI)I
      92: istore_2
      93: iload_2
      94: iconst_1
      95: iand
      96: iconst_1
      97: if_icmpne     104
     100: iconst_1
     101: goto          105
     104: iconst_0
     105: istore_3
     106: iload_3
     107: ifne          140
     110: aload_0
     111: aload_0
     112: getfield      #3                  // Field blockBuffer:[B
     115: iconst_0
     116: aload_0
     117: getfield      #5                  // Field blockSize:I
     120: invokespecial #19                 // Method readFully:([BII)V
     123: aload_0
     124: dup
     125: getfield      #36                 // Field bytesRead:J
     128: aload_0
     129: getfield      #5                  // Field blockSize:I
     132: i2l
     133: ladd
     134: putfield      #36                 // Field bytesRead:J
     137: goto          343
     140: iload_2
     141: iconst_1
     142: ishr
     143: bipush        7
     145: iand
     146: istore        4
     148: iload_2
     149: iconst_4
     150: ishr
     151: ldc           #40                 // int 268435455
     153: iand
     154: istore        5
     156: aload_0
     157: iload         5
     159: invokespecial #41                 // Method readRange:(I)[B
     162: astore        6
     164: aload_0
     165: dup
     166: getfield      #36                 // Field bytesRead:J
     169: iload         5
     171: i2l
     172: ladd
     173: putfield      #36                 // Field bytesRead:J
     176: iload_1
     177: ifne          191
     180: aload_0
     181: getfield      #3                  // Field blockBuffer:[B
     184: iconst_0
     185: invokestatic  #42                 // Method java/util/Arrays.fill:([BB)V
     188: goto          343
     191: getstatic     #43                 // Field org/apache/commons/compress/archivers/dump/TapeInputStream$1.$SwitchMap$org$apache$commons$compress$archivers$dump$DumpArchiveConstants$COMPRESSION_TYPE:[I
     194: iload         4
     196: iconst_3
     197: iand
     198: invokestatic  #44                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE.find:(I)Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE;
     201: invokevirtual #45                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE.ordinal:()I
     204: iaload
     205: tableswitch   { // 1 to 3
                     1: 232
                     2: 315
                     3: 325
               default: 335
          }
     232: new           #46                 // class java/util/zip/Inflater
     235: dup
     236: invokespecial #47                 // Method java/util/zip/Inflater."<init>":()V
     239: astore        7
     241: aload         7
     243: aload         6
     245: iconst_0
     246: aload         6
     248: arraylength
     249: invokevirtual #48                 // Method java/util/zip/Inflater.setInput:([BII)V
     252: aload         7
     254: aload_0
     255: getfield      #3                  // Field blockBuffer:[B
     258: invokevirtual #49                 // Method java/util/zip/Inflater.inflate:([B)I
     261: istore        5
     263: iload         5
     265: aload_0
     266: getfield      #5                  // Field blockSize:I
     269: if_icmpeq     280
     272: new           #26                 // class org/apache/commons/compress/archivers/dump/ShortFileException
     275: dup
     276: invokespecial #34                 // Method org/apache/commons/compress/archivers/dump/ShortFileException."<init>":()V
     279: athrow
     280: aload         7
     282: invokevirtual #50                 // Method java/util/zip/Inflater.end:()V
     285: goto          312
     288: astore        8
     290: new           #52                 // class org/apache/commons/compress/archivers/dump/DumpArchiveException
     293: dup
     294: ldc           #53                 // String Bad data
     296: aload         8
     298: invokespecial #54                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     301: athrow
     302: astore        9
     304: aload         7
     306: invokevirtual #50                 // Method java/util/zip/Inflater.end:()V
     309: aload         9
     311: athrow
     312: goto          343
     315: new           #55                 // class org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException
     318: dup
     319: ldc           #56                 // String BZLIB2
     321: invokespecial #57                 // Method org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException."<init>":(Ljava/lang/String;)V
     324: athrow
     325: new           #55                 // class org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException
     328: dup
     329: ldc           #58                 // String LZO
     331: invokespecial #57                 // Method org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException."<init>":(Ljava/lang/String;)V
     334: athrow
     335: new           #55                 // class org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException
     338: dup
     339: invokespecial #59                 // Method org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException."<init>":()V
     342: athrow
     343: aload_0
     344: dup
     345: getfield      #4                  // Field currBlkIdx:I
     348: iconst_1
     349: iadd
     350: putfield      #4                  // Field currBlkIdx:I
     353: aload_0
     354: iconst_0
     355: putfield      #6                  // Field readOffset:I
     358: return
    Exception table:
       from    to  target type
         241   280   288   Class java/util/zip/DataFormatException
         241   280   302   any
         288   304   302   any

  private void readFully(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field in:Ljava/io/InputStream;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokestatic  #60                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[BII)I
      10: istore        4
      12: iload         4
      14: iload_3
      15: if_icmpge     26
      18: new           #26                 // class org/apache/commons/compress/archivers/dump/ShortFileException
      21: dup
      22: invokespecial #34                 // Method org/apache/commons/compress/archivers/dump/ShortFileException."<init>":()V
      25: athrow
      26: return

  private byte[] readRange(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field in:Ljava/io/InputStream;
       4: iload_1
       5: invokestatic  #61                 // Method org/apache/commons/compress/utils/IOUtils.readRange:(Ljava/io/InputStream;I)[B
       8: astore_2
       9: aload_2
      10: arraylength
      11: iload_1
      12: if_icmpge     23
      15: new           #26                 // class org/apache/commons/compress/archivers/dump/ShortFileException
      18: dup
      19: invokespecial #34                 // Method org/apache/commons/compress/archivers/dump/ShortFileException."<init>":()V
      22: athrow
      23: aload_2
      24: areturn

  public long getBytesRead();
    Code:
       0: aload_0
       1: getfield      #36                 // Field bytesRead:J
       4: lreturn
}
