Compiled from "SevenZFile.java"
class org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics {
  private int numberOfPackedStreams;

  private long numberOfCoders;

  private long numberOfOutStreams;

  private long numberOfInStreams;

  private long numberOfUnpackSubStreams;

  private int numberOfFolders;

  private java.util.BitSet folderHasCrc;

  private int numberOfEntries;

  private int numberOfEntriesWithStream;

  private org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.String toString();
    Code:
       0: new           #12                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #14                 // String Archive with
       9: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field numberOfEntries:I
      16: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #17                 // String  entries in
      21: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #8                  // Field numberOfFolders:I
      28: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: ldc           #18                 // String  folders. Estimated size
      33: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #19                 // Method estimateSize:()J
      40: ldc2_w        #20                 // long 1024l
      43: ldiv
      44: invokevirtual #22                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      47: ldc           #23                 // String  kB.
      49: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: areturn

  long estimateSize();
    Code:
       0: ldc2_w        #25                 // long 16l
       3: aload_0
       4: getfield      #9                  // Field numberOfPackedStreams:I
       7: i2l
       8: lmul
       9: aload_0
      10: getfield      #9                  // Field numberOfPackedStreams:I
      13: bipush        8
      15: idiv
      16: i2l
      17: ladd
      18: aload_0
      19: getfield      #8                  // Field numberOfFolders:I
      22: i2l
      23: aload_0
      24: invokespecial #27                 // Method folderSize:()J
      27: lmul
      28: ladd
      29: aload_0
      30: getfield      #3                  // Field numberOfCoders:J
      33: aload_0
      34: invokespecial #28                 // Method coderSize:()J
      37: lmul
      38: ladd
      39: aload_0
      40: getfield      #7                  // Field numberOfOutStreams:J
      43: aload_0
      44: getfield      #8                  // Field numberOfFolders:I
      47: i2l
      48: lsub
      49: aload_0
      50: invokespecial #29                 // Method bindPairSize:()J
      53: lmul
      54: ladd
      55: ldc2_w        #30                 // long 8l
      58: aload_0
      59: getfield      #6                  // Field numberOfInStreams:J
      62: aload_0
      63: getfield      #7                  // Field numberOfOutStreams:J
      66: lsub
      67: aload_0
      68: getfield      #8                  // Field numberOfFolders:I
      71: i2l
      72: ladd
      73: lmul
      74: ladd
      75: ldc2_w        #30                 // long 8l
      78: aload_0
      79: getfield      #7                  // Field numberOfOutStreams:J
      82: lmul
      83: ladd
      84: aload_0
      85: getfield      #2                  // Field numberOfEntries:I
      88: i2l
      89: aload_0
      90: invokespecial #32                 // Method entrySize:()J
      93: lmul
      94: ladd
      95: aload_0
      96: invokespecial #33                 // Method streamMapSize:()J
      99: ladd
     100: lstore_1
     101: ldc2_w        #34                 // long 2l
     104: lload_1
     105: lmul
     106: lreturn

  void assertValidity(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field numberOfEntriesWithStream:I
       4: ifle          24
       7: aload_0
       8: getfield      #8                  // Field numberOfFolders:I
      11: ifne          24
      14: new           #36                 // class java/io/IOException
      17: dup
      18: ldc           #37                 // String archive with entries but no folders
      20: invokespecial #38                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: getfield      #1                  // Field numberOfEntriesWithStream:I
      28: i2l
      29: aload_0
      30: getfield      #4                  // Field numberOfUnpackSubStreams:J
      33: lcmp
      34: ifle          47
      37: new           #36                 // class java/io/IOException
      40: dup
      41: ldc           #39                 // String archive doesn\'t contain enough substreams for entries
      43: invokespecial #38                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: invokevirtual #19                 // Method estimateSize:()J
      51: ldc2_w        #20                 // long 1024l
      54: ldiv
      55: lstore_2
      56: iload_1
      57: i2l
      58: lload_2
      59: lcmp
      60: ifge          73
      63: new           #40                 // class org/apache/commons/compress/MemoryLimitException
      66: dup
      67: lload_2
      68: iload_1
      69: invokespecial #41                 // Method org/apache/commons/compress/MemoryLimitException."<init>":(JI)V
      72: athrow
      73: return

  private long folderSize();
    Code:
       0: ldc2_w        #42                 // long 30l
       3: lreturn

  private long coderSize();
    Code:
       0: ldc2_w        #44                 // long 22l
       3: lreturn

  private long bindPairSize();
    Code:
       0: ldc2_w        #25                 // long 16l
       3: lreturn

  private long entrySize();
    Code:
       0: ldc2_w        #46                 // long 100l
       3: lreturn

  private long streamMapSize();
    Code:
       0: bipush        8
       2: aload_0
       3: getfield      #8                  // Field numberOfFolders:I
       6: imul
       7: bipush        8
       9: aload_0
      10: getfield      #9                  // Field numberOfPackedStreams:I
      13: imul
      14: iadd
      15: iconst_4
      16: aload_0
      17: getfield      #2                  // Field numberOfEntries:I
      20: imul
      21: iadd
      22: i2l
      23: lreturn

  org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics(org.apache.commons.compress.archivers.sevenz.SevenZFile$1);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method "<init>":()V
       4: return

  static int access$102(org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #9                  // Field numberOfPackedStreams:I
       6: ireturn

  static int access$100(org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics);
    Code:
       0: aload_0
       1: getfield      #9                  // Field numberOfPackedStreams:I
       4: ireturn

  static int access$202(org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #8                  // Field numberOfFolders:I
       6: ireturn

  static int access$200(org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics);
    Code:
       0: aload_0
       1: getfield      #8                  // Field numberOfFolders:I
       4: ireturn

  static long access$300(org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics);
    Code:
       0: aload_0
       1: getfield      #7                  // Field numberOfOutStreams:J
       4: lreturn

  static long access$400(org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics);
    Code:
       0: aload_0
       1: getfield      #6                  // Field numberOfInStreams:J
       4: lreturn

  static java.util.BitSet access$502(org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics, java.util.BitSet);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #5                  // Field folderHasCrc:Ljava/util/BitSet;
       6: areturn

  static java.util.BitSet access$500(org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics);
    Code:
       0: aload_0
       1: getfield      #5                  // Field folderHasCrc:Ljava/util/BitSet;
       4: areturn

  static long access$602(org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics, long);
    Code:
       0: aload_0
       1: lload_1
       2: dup2_x1
       3: putfield      #4                  // Field numberOfUnpackSubStreams:J
       6: lreturn

  static long access$600(org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics);
    Code:
       0: aload_0
       1: getfield      #4                  // Field numberOfUnpackSubStreams:J
       4: lreturn

  static long access$700(org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics);
    Code:
       0: aload_0
       1: getfield      #3                  // Field numberOfCoders:J
       4: lreturn

  static long access$702(org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics, long);
    Code:
       0: aload_0
       1: lload_1
       2: dup2_x1
       3: putfield      #3                  // Field numberOfCoders:J
       6: lreturn

  static long access$302(org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics, long);
    Code:
       0: aload_0
       1: lload_1
       2: dup2_x1
       3: putfield      #7                  // Field numberOfOutStreams:J
       6: lreturn

  static long access$402(org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics, long);
    Code:
       0: aload_0
       1: lload_1
       2: dup2_x1
       3: putfield      #6                  // Field numberOfInStreams:J
       6: lreturn

  static int access$802(org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #2                  // Field numberOfEntries:I
       6: ireturn

  static int access$800(org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics);
    Code:
       0: aload_0
       1: getfield      #2                  // Field numberOfEntries:I
       4: ireturn

  static int access$902(org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #1                  // Field numberOfEntriesWithStream:I
       6: ireturn
}
