Compiled from "HuffmanDecoder.java"
class org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$DecodingMemory {
  private final byte[] memory;

  private final int mask;

  private int wHead;

  private boolean wrappedAround;

  private org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$DecodingMemory();
    Code:
       0: aload_0
       1: bipush        16
       3: invokespecial #2                  // Method "<init>":(I)V
       6: return

  private org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$DecodingMemory(int);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: iload_1
       7: ishl
       8: newarray       byte
      10: putfield      #4                  // Field memory:[B
      13: aload_0
      14: aload_0
      15: getfield      #4                  // Field memory:[B
      18: arraylength
      19: iconst_1
      20: isub
      21: putfield      #5                  // Field mask:I
      24: return

  byte add(byte);
    Code:
       0: aload_0
       1: getfield      #4                  // Field memory:[B
       4: aload_0
       5: getfield      #6                  // Field wHead:I
       8: iload_1
       9: bastore
      10: aload_0
      11: aload_0
      12: aload_0
      13: getfield      #6                  // Field wHead:I
      16: invokespecial #7                  // Method incCounter:(I)I
      19: putfield      #6                  // Field wHead:I
      22: iload_1
      23: ireturn

  void add(byte[], int, int);
    Code:
       0: iload_2
       1: istore        4
       3: iload         4
       5: iload_2
       6: iload_3
       7: iadd
       8: if_icmpge     26
      11: aload_0
      12: aload_1
      13: iload         4
      15: baload
      16: invokevirtual #8                  // Method add:(B)B
      19: pop
      20: iinc          4, 1
      23: goto          3
      26: return

  void recordToBuffer(int, int, byte[]);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #4                  // Field memory:[B
       5: arraylength
       6: if_icmple     36
       9: new           #9                  // class java/lang/IllegalStateException
      12: dup
      13: new           #10                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #12                 // String Illegal distance parameter:
      22: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: iload_1
      26: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      29: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #16                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: getfield      #6                  // Field wHead:I
      40: iload_1
      41: isub
      42: aload_0
      43: getfield      #5                  // Field mask:I
      46: iand
      47: istore        4
      49: aload_0
      50: getfield      #17                 // Field wrappedAround:Z
      53: ifne          92
      56: iload         4
      58: aload_0
      59: getfield      #6                  // Field wHead:I
      62: if_icmplt     92
      65: new           #9                  // class java/lang/IllegalStateException
      68: dup
      69: new           #10                 // class java/lang/StringBuilder
      72: dup
      73: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      76: ldc           #18                 // String Attempt to read beyond memory: dist=
      78: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: iload_1
      82: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      85: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      88: invokespecial #16                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      91: athrow
      92: iconst_0
      93: istore        5
      95: iload         4
      97: istore        6
      99: iload         5
     101: iload_2
     102: if_icmpge     134
     105: aload_3
     106: iload         5
     108: aload_0
     109: aload_0
     110: getfield      #4                  // Field memory:[B
     113: iload         6
     115: baload
     116: invokevirtual #8                  // Method add:(B)B
     119: bastore
     120: iinc          5, 1
     123: aload_0
     124: iload         6
     126: invokespecial #7                  // Method incCounter:(I)I
     129: istore        6
     131: goto          99
     134: return

  private int incCounter(int);
    Code:
       0: iload_1
       1: iconst_1
       2: iadd
       3: aload_0
       4: getfield      #5                  // Field mask:I
       7: iand
       8: istore_2
       9: aload_0
      10: getfield      #17                 // Field wrappedAround:Z
      13: ifne          26
      16: iload_2
      17: iload_1
      18: if_icmpge     26
      21: aload_0
      22: iconst_1
      23: putfield      #17                 // Field wrappedAround:Z
      26: iload_2
      27: ireturn

  org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$DecodingMemory(org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
