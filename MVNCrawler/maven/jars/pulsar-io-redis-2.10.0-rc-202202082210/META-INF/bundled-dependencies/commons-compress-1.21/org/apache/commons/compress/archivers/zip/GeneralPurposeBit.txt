Compiled from "GeneralPurposeBit.java"
public final class org.apache.commons.compress.archivers.zip.GeneralPurposeBit implements java.lang.Cloneable {
  private static final int ENCRYPTION_FLAG;

  private static final int SLIDING_DICTIONARY_SIZE_FLAG;

  private static final int NUMBER_OF_SHANNON_FANO_TREES_FLAG;

  private static final int DATA_DESCRIPTOR_FLAG;

  private static final int STRONG_ENCRYPTION_FLAG;

  public static final int UFT8_NAMES_FLAG;

  private boolean languageEncodingFlag;

  private boolean dataDescriptorFlag;

  private boolean encryptionFlag;

  private boolean strongEncryptionFlag;

  private int slidingDictionarySize;

  private int numberOfShannonFanoTrees;

  public org.apache.commons.compress.archivers.zip.GeneralPurposeBit();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public boolean usesUTF8ForNames();
    Code:
       0: aload_0
       1: getfield      #2                  // Field languageEncodingFlag:Z
       4: ireturn

  public void useUTF8ForNames(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field languageEncodingFlag:Z
       5: return

  public boolean usesDataDescriptor();
    Code:
       0: aload_0
       1: getfield      #3                  // Field dataDescriptorFlag:Z
       4: ireturn

  public void useDataDescriptor(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field dataDescriptorFlag:Z
       5: return

  public boolean usesEncryption();
    Code:
       0: aload_0
       1: getfield      #4                  // Field encryptionFlag:Z
       4: ireturn

  public void useEncryption(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field encryptionFlag:Z
       5: return

  public boolean usesStrongEncryption();
    Code:
       0: aload_0
       1: getfield      #4                  // Field encryptionFlag:Z
       4: ifeq          18
       7: aload_0
       8: getfield      #5                  // Field strongEncryptionFlag:Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public void useStrongEncryption(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field strongEncryptionFlag:Z
       5: iload_1
       6: ifeq          14
       9: aload_0
      10: iconst_1
      11: invokevirtual #6                  // Method useEncryption:(Z)V
      14: return

  int getSlidingDictionarySize();
    Code:
       0: aload_0
       1: getfield      #7                  // Field slidingDictionarySize:I
       4: ireturn

  int getNumberOfShannonFanoTrees();
    Code:
       0: aload_0
       1: getfield      #8                  // Field numberOfShannonFanoTrees:I
       4: ireturn

  public byte[] encode();
    Code:
       0: iconst_2
       1: newarray       byte
       3: astore_1
       4: aload_0
       5: aload_1
       6: iconst_0
       7: invokevirtual #9                  // Method encode:([BI)V
      10: aload_1
      11: areturn

  public void encode(byte[], int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field dataDescriptorFlag:Z
       4: ifeq          12
       7: bipush        8
       9: goto          13
      12: iconst_0
      13: aload_0
      14: getfield      #2                  // Field languageEncodingFlag:Z
      17: ifeq          26
      20: sipush        2048
      23: goto          27
      26: iconst_0
      27: ior
      28: aload_0
      29: getfield      #4                  // Field encryptionFlag:Z
      32: ifeq          39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: ior
      41: aload_0
      42: getfield      #5                  // Field strongEncryptionFlag:Z
      45: ifeq          53
      48: bipush        64
      50: goto          54
      53: iconst_0
      54: ior
      55: aload_1
      56: iload_2
      57: invokestatic  #11                 // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V
      60: return

  public static org.apache.commons.compress.archivers.zip.GeneralPurposeBit parse(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #12                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I
       5: istore_2
       6: new           #10                 // class org/apache/commons/compress/archivers/zip/GeneralPurposeBit
       9: dup
      10: invokespecial #13                 // Method "<init>":()V
      13: astore_3
      14: aload_3
      15: iload_2
      16: bipush        8
      18: iand
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: invokevirtual #14                 // Method useDataDescriptor:(Z)V
      30: aload_3
      31: iload_2
      32: sipush        2048
      35: iand
      36: ifeq          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: invokevirtual #15                 // Method useUTF8ForNames:(Z)V
      47: aload_3
      48: iload_2
      49: bipush        64
      51: iand
      52: ifeq          59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: invokevirtual #16                 // Method useStrongEncryption:(Z)V
      63: aload_3
      64: iload_2
      65: iconst_1
      66: iand
      67: ifeq          74
      70: iconst_1
      71: goto          75
      74: iconst_0
      75: invokevirtual #6                  // Method useEncryption:(Z)V
      78: aload_3
      79: iload_2
      80: iconst_2
      81: iand
      82: ifeq          91
      85: sipush        8192
      88: goto          94
      91: sipush        4096
      94: putfield      #7                  // Field slidingDictionarySize:I
      97: aload_3
      98: iload_2
      99: iconst_4
     100: iand
     101: ifeq          108
     104: iconst_3
     105: goto          109
     108: iconst_2
     109: putfield      #8                  // Field numberOfShannonFanoTrees:I
     112: aload_3
     113: areturn

  public int hashCode();
    Code:
       0: iconst_3
       1: bipush        7
       3: bipush        13
       5: bipush        17
       7: aload_0
       8: getfield      #4                  // Field encryptionFlag:Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: imul
      20: aload_0
      21: getfield      #5                  // Field strongEncryptionFlag:Z
      24: ifeq          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: iadd
      33: imul
      34: aload_0
      35: getfield      #2                  // Field languageEncodingFlag:Z
      38: ifeq          45
      41: iconst_1
      42: goto          46
      45: iconst_0
      46: iadd
      47: imul
      48: aload_0
      49: getfield      #3                  // Field dataDescriptorFlag:Z
      52: ifeq          59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: iadd
      61: imul
      62: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #10                 // class org/apache/commons/compress/archivers/zip/GeneralPurposeBit
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #10                 // class org/apache/commons/compress/archivers/zip/GeneralPurposeBit
      13: astore_2
      14: aload_2
      15: getfield      #4                  // Field encryptionFlag:Z
      18: aload_0
      19: getfield      #4                  // Field encryptionFlag:Z
      22: if_icmpne     62
      25: aload_2
      26: getfield      #5                  // Field strongEncryptionFlag:Z
      29: aload_0
      30: getfield      #5                  // Field strongEncryptionFlag:Z
      33: if_icmpne     62
      36: aload_2
      37: getfield      #2                  // Field languageEncodingFlag:Z
      40: aload_0
      41: getfield      #2                  // Field languageEncodingFlag:Z
      44: if_icmpne     62
      47: aload_2
      48: getfield      #3                  // Field dataDescriptorFlag:Z
      51: aload_0
      52: getfield      #3                  // Field dataDescriptorFlag:Z
      55: if_icmpne     62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: ireturn

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: invokespecial #17                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: areturn
       5: astore_1
       6: new           #19                 // class java/lang/RuntimeException
       9: dup
      10: ldc           #20                 // String GeneralPurposeBit is not Cloneable?
      12: aload_1
      13: invokespecial #21                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      16: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/CloneNotSupportedException
}
