Compiled from "IOUtils.java"
public final class org.apache.commons.compress.utils.IOUtils {
  private static final int COPY_BUF_SIZE;

  private static final int SKIP_BUF_SIZE;

  public static final java.nio.file.LinkOption[] EMPTY_LINK_OPTIONS;

  private static final byte[] SKIP_BUF;

  private org.apache.commons.compress.utils.IOUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static long copy(java.io.InputStream, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: sipush        8024
       5: invokestatic  #3                  // Method copy:(Ljava/io/InputStream;Ljava/io/OutputStream;I)J
       8: lreturn

  public static long copy(java.io.InputStream, java.io.OutputStream, int) throws java.io.IOException;
    Code:
       0: iload_2
       1: iconst_1
       2: if_icmpge     15
       5: new           #4                  // class java/lang/IllegalArgumentException
       8: dup
       9: ldc           #5                  // String buffersize must be bigger than 0
      11: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: iload_2
      16: newarray       byte
      18: astore_3
      19: iconst_0
      20: istore        4
      22: lconst_0
      23: lstore        5
      25: iconst_m1
      26: aload_0
      27: aload_3
      28: invokevirtual #7                  // Method java/io/InputStream.read:([B)I
      31: dup
      32: istore        4
      34: if_icmpeq     56
      37: aload_1
      38: aload_3
      39: iconst_0
      40: iload         4
      42: invokevirtual #8                  // Method java/io/OutputStream.write:([BII)V
      45: lload         5
      47: iload         4
      49: i2l
      50: ladd
      51: lstore        5
      53: goto          25
      56: lload         5
      58: lreturn

  public static long skip(java.io.InputStream, long) throws java.io.IOException;
    Code:
       0: lload_1
       1: lstore_3
       2: lload_1
       3: lconst_0
       4: lcmp
       5: ifle          33
       8: aload_0
       9: lload_1
      10: invokevirtual #9                  // Method java/io/InputStream.skip:(J)J
      13: lstore        5
      15: lload         5
      17: lconst_0
      18: lcmp
      19: ifne          25
      22: goto          33
      25: lload_1
      26: lload         5
      28: lsub
      29: lstore_1
      30: goto          2
      33: lload_1
      34: lconst_0
      35: lcmp
      36: ifle          75
      39: aload_0
      40: getstatic     #10                 // Field SKIP_BUF:[B
      43: iconst_0
      44: lload_1
      45: ldc2_w        #11                 // long 4096l
      48: invokestatic  #13                 // Method java/lang/Math.min:(JJ)J
      51: l2i
      52: invokestatic  #14                 // Method readFully:(Ljava/io/InputStream;[BII)I
      55: istore        5
      57: iload         5
      59: iconst_1
      60: if_icmpge     66
      63: goto          75
      66: lload_1
      67: iload         5
      69: i2l
      70: lsub
      71: lstore_1
      72: goto          33
      75: lload_3
      76: lload_1
      77: lsub
      78: lreturn

  public static int read(java.io.File, byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
       4: iconst_0
       5: anewarray     #16                 // class java/nio/file/OpenOption
       8: invokestatic  #17                 // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
      11: astore_2
      12: aconst_null
      13: astore_3
      14: aload_2
      15: aload_1
      16: iconst_0
      17: aload_1
      18: arraylength
      19: invokestatic  #14                 // Method readFully:(Ljava/io/InputStream;[BII)I
      22: istore        4
      24: aload_2
      25: ifnull        54
      28: aload_3
      29: ifnull        50
      32: aload_2
      33: invokevirtual #18                 // Method java/io/InputStream.close:()V
      36: goto          54
      39: astore        5
      41: aload_3
      42: aload         5
      44: invokevirtual #20                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      47: goto          54
      50: aload_2
      51: invokevirtual #18                 // Method java/io/InputStream.close:()V
      54: iload         4
      56: ireturn
      57: astore        4
      59: aload         4
      61: astore_3
      62: aload         4
      64: athrow
      65: astore        6
      67: aload_2
      68: ifnull        97
      71: aload_3
      72: ifnull        93
      75: aload_2
      76: invokevirtual #18                 // Method java/io/InputStream.close:()V
      79: goto          97
      82: astore        7
      84: aload_3
      85: aload         7
      87: invokevirtual #20                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      90: goto          97
      93: aload_2
      94: invokevirtual #18                 // Method java/io/InputStream.close:()V
      97: aload         6
      99: athrow
    Exception table:
       from    to  target type
          32    36    39   Class java/lang/Throwable
          14    24    57   Class java/lang/Throwable
          14    24    65   any
          75    79    82   Class java/lang/Throwable
          57    67    65   any

  public static int readFully(java.io.InputStream, byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokestatic  #14                 // Method readFully:(Ljava/io/InputStream;[BII)I
       8: ireturn

  public static int readFully(java.io.InputStream, byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: iflt          22
       4: iload_2
       5: iflt          22
       8: iload_3
       9: iload_2
      10: iadd
      11: aload_1
      12: arraylength
      13: if_icmpgt     22
      16: iload_3
      17: iload_2
      18: iadd
      19: ifge          30
      22: new           #21                 // class java/lang/IndexOutOfBoundsException
      25: dup
      26: invokespecial #22                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      29: athrow
      30: iconst_0
      31: istore        4
      33: iconst_0
      34: istore        5
      36: iload         4
      38: iload_3
      39: if_icmpeq     76
      42: aload_0
      43: aload_1
      44: iload_2
      45: iload         4
      47: iadd
      48: iload_3
      49: iload         4
      51: isub
      52: invokevirtual #23                 // Method java/io/InputStream.read:([BII)I
      55: istore        5
      57: iload         5
      59: iconst_m1
      60: if_icmpne     66
      63: goto          76
      66: iload         4
      68: iload         5
      70: iadd
      71: istore        4
      73: goto          36
      76: iload         4
      78: ireturn

  public static void readFully(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #24                 // Method java/nio/ByteBuffer.remaining:()I
       4: istore_2
       5: iconst_0
       6: istore_3
       7: iload_3
       8: iload_2
       9: if_icmpge     37
      12: aload_0
      13: aload_1
      14: invokeinterface #25,  2           // InterfaceMethod java/nio/channels/ReadableByteChannel.read:(Ljava/nio/ByteBuffer;)I
      19: istore        4
      21: iload         4
      23: ifgt          29
      26: goto          37
      29: iload_3
      30: iload         4
      32: iadd
      33: istore_3
      34: goto          7
      37: iload_3
      38: iload_2
      39: if_icmpge     50
      42: new           #26                 // class java/io/EOFException
      45: dup
      46: invokespecial #27                 // Method java/io/EOFException."<init>":()V
      49: athrow
      50: return

  public static byte[] toByteArray(java.io.InputStream) throws java.io.IOException;
    Code:
       0: new           #28                 // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #29                 // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokestatic  #30                 // Method copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)J
      13: pop2
      14: aload_1
      15: invokevirtual #31                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      18: areturn

  public static void closeQuietly(java.io.Closeable);
    Code:
       0: aload_0
       1: ifnull        14
       4: aload_0
       5: invokeinterface #32,  1           // InterfaceMethod java/io/Closeable.close:()V
      10: goto          14
      13: astore_1
      14: return
    Exception table:
       from    to  target type
           4    10    13   Class java/io/IOException

  public static void copy(java.io.File, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
       4: aload_1
       5: invokestatic  #34                 // Method java/nio/file/Files.copy:(Ljava/nio/file/Path;Ljava/io/OutputStream;)J
       8: pop2
       9: return

  public static long copyRange(java.io.InputStream, long, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: sipush        8024
       6: invokestatic  #35                 // Method copyRange:(Ljava/io/InputStream;JLjava/io/OutputStream;I)J
       9: lreturn

  public static long copyRange(java.io.InputStream, long, java.io.OutputStream, int) throws java.io.IOException;
    Code:
       0: iload         4
       2: iconst_1
       3: if_icmpge     16
       6: new           #4                  // class java/lang/IllegalArgumentException
       9: dup
      10: ldc           #5                  // String buffersize must be bigger than 0
      12: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: iload         4
      18: i2l
      19: lload_1
      20: invokestatic  #13                 // Method java/lang/Math.min:(JJ)J
      23: l2i
      24: newarray       byte
      26: astore        5
      28: iconst_0
      29: istore        6
      31: lconst_0
      32: lstore        7
      34: lload         7
      36: lload_1
      37: lcmp
      38: ifge          87
      41: iconst_m1
      42: aload_0
      43: aload         5
      45: iconst_0
      46: lload_1
      47: lload         7
      49: lsub
      50: aload         5
      52: arraylength
      53: i2l
      54: invokestatic  #13                 // Method java/lang/Math.min:(JJ)J
      57: l2i
      58: invokevirtual #23                 // Method java/io/InputStream.read:([BII)I
      61: dup
      62: istore        6
      64: if_icmpeq     87
      67: aload_3
      68: aload         5
      70: iconst_0
      71: iload         6
      73: invokevirtual #8                  // Method java/io/OutputStream.write:([BII)V
      76: lload         7
      78: iload         6
      80: i2l
      81: ladd
      82: lstore        7
      84: goto          34
      87: lload         7
      89: lreturn

  public static byte[] readRange(java.io.InputStream, int) throws java.io.IOException;
    Code:
       0: new           #28                 // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #29                 // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_2
       8: aload_0
       9: iload_1
      10: i2l
      11: aload_2
      12: invokestatic  #36                 // Method copyRange:(Ljava/io/InputStream;JLjava/io/OutputStream;)J
      15: pop2
      16: aload_2
      17: invokevirtual #31                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      20: areturn

  public static byte[] readRange(java.nio.channels.ReadableByteChannel, int) throws java.io.IOException;
    Code:
       0: new           #28                 // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #29                 // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_2
       8: iload_1
       9: sipush        8024
      12: invokestatic  #37                 // Method java/lang/Math.min:(II)I
      15: invokestatic  #38                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      18: astore_3
      19: iconst_0
      20: istore        4
      22: iload         4
      24: iload_1
      25: if_icmpge     71
      28: aload_0
      29: aload_3
      30: invokeinterface #25,  2           // InterfaceMethod java/nio/channels/ReadableByteChannel.read:(Ljava/nio/ByteBuffer;)I
      35: istore        5
      37: iload         5
      39: ifgt          45
      42: goto          71
      45: aload_2
      46: aload_3
      47: invokevirtual #39                 // Method java/nio/ByteBuffer.array:()[B
      50: iconst_0
      51: iload         5
      53: invokevirtual #40                 // Method java/io/ByteArrayOutputStream.write:([BII)V
      56: aload_3
      57: invokevirtual #41                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
      60: pop
      61: iload         4
      63: iload         5
      65: iadd
      66: istore        4
      68: goto          22
      71: aload_2
      72: invokevirtual #31                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      75: areturn

  static {};
    Code:
       0: iconst_0
       1: anewarray     #42                 // class java/nio/file/LinkOption
       4: putstatic     #43                 // Field EMPTY_LINK_OPTIONS:[Ljava/nio/file/LinkOption;
       7: sipush        4096
      10: newarray       byte
      12: putstatic     #10                 // Field SKIP_BUF:[B
      15: return
}
