Compiled from "Attribute.java"
public abstract class org.apache.commons.compress.harmony.unpack200.bytecode.Attribute extends org.apache.commons.compress.harmony.unpack200.bytecode.ClassFileEntry {
  protected final org.apache.commons.compress.harmony.unpack200.bytecode.CPUTF8 attributeName;

  private int attributeNameIndex;

  public org.apache.commons.compress.harmony.unpack200.bytecode.Attribute(org.apache.commons.compress.harmony.unpack200.bytecode.CPUTF8);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;
       9: return

  protected void doWrite(java.io.DataOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field attributeNameIndex:I
       5: invokevirtual #4                  // Method java/io/DataOutputStream.writeShort:(I)V
       8: aload_1
       9: aload_0
      10: invokevirtual #5                  // Method getLength:()I
      13: invokevirtual #6                  // Method java/io/DataOutputStream.writeInt:(I)V
      16: aload_0
      17: aload_1
      18: invokevirtual #7                  // Method writeBody:(Ljava/io/DataOutputStream;)V
      21: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: aload_1
      18: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_1
      27: checkcast     #9                  // class org/apache/commons/compress/harmony/unpack200/bytecode/Attribute
      30: astore_2
      31: aload_0
      32: getfield      #2                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;
      35: ifnonnull     47
      38: aload_2
      39: getfield      #2                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;
      42: ifnull        63
      45: iconst_0
      46: ireturn
      47: aload_0
      48: getfield      #2                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;
      51: aload_2
      52: getfield      #2                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;
      55: invokevirtual #10                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8.equals:(Ljava/lang/Object;)Z
      58: ifne          63
      61: iconst_0
      62: ireturn
      63: iconst_1
      64: ireturn

  protected org.apache.commons.compress.harmony.unpack200.bytecode.CPUTF8 getAttributeName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;
       4: areturn

  protected abstract int getLength();

  protected int getLengthIncludingHeader();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getLength:()I
       4: iconst_2
       5: iadd
       6: iconst_4
       7: iadd
       8: ireturn

  protected org.apache.commons.compress.harmony.unpack200.bytecode.ClassFileEntry[] getNestedClassFileEntries();
    Code:
       0: iconst_1
       1: anewarray     #11                 // class org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry
       4: dup
       5: iconst_0
       6: aload_0
       7: invokevirtual #12                 // Method getAttributeName:()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;
      10: aastore
      11: areturn

  public boolean hasBCIRenumbering();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isSourceFileAttribute();
    Code:
       0: iconst_0
       1: ireturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: getfield      #2                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;
      13: ifnonnull     20
      16: iconst_0
      17: goto          27
      20: aload_0
      21: getfield      #2                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;
      24: invokevirtual #13                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8.hashCode:()I
      27: iadd
      28: istore_2
      29: iload_2
      30: ireturn

  protected void resolve(org.apache.commons.compress.harmony.unpack200.bytecode.ClassConstantPool);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V
       5: aload_0
       6: aload_1
       7: aload_0
       8: getfield      #2                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;
      11: invokevirtual #15                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool.indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I
      14: putfield      #3                  // Field attributeNameIndex:I
      17: return

  protected abstract void writeBody(java.io.DataOutputStream) throws java.io.IOException;
}
