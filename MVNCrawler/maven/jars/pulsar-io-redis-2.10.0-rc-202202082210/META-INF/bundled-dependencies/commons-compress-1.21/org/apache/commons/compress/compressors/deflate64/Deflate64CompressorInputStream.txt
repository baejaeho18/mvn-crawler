Compiled from "Deflate64CompressorInputStream.java"
public class org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStream extends org.apache.commons.compress.compressors.CompressorInputStream implements org.apache.commons.compress.utils.InputStreamStatistics {
  private java.io.InputStream originalStream;

  private org.apache.commons.compress.compressors.deflate64.HuffmanDecoder decoder;

  private long compressedBytesRead;

  private final byte[] oneByte;

  public org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStream(java.io.InputStream);
    Code:
       0: aload_0
       1: new           #1                  // class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder
       4: dup
       5: aload_1
       6: invokespecial #2                  // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder."<init>":(Ljava/io/InputStream;)V
       9: invokespecial #3                  // Method "<init>":(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)V
      12: aload_0
      13: aload_1
      14: putfield      #4                  // Field originalStream:Ljava/io/InputStream;
      17: return

  org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStream(org.apache.commons.compress.compressors.deflate64.HuffmanDecoder);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method org/apache/commons/compress/compressors/CompressorInputStream."<init>":()V
       4: aload_0
       5: iconst_1
       6: newarray       byte
       8: putfield      #6                  // Field oneByte:[B
      11: aload_0
      12: aload_1
      13: putfield      #7                  // Field decoder:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;
      16: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field oneByte:[B
       5: invokevirtual #8                  // Method read:([B)I
       8: istore_1
       9: iload_1
      10: tableswitch   { // -1 to 1
                    -1: 47
                     0: 49
                     1: 36
               default: 52
          }
      36: aload_0
      37: getfield      #6                  // Field oneByte:[B
      40: iconst_0
      41: baload
      42: sipush        255
      45: iand
      46: ireturn
      47: iconst_m1
      48: ireturn
      49: goto          0
      52: new           #9                  // class java/lang/IllegalStateException
      55: dup
      56: new           #10                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      63: ldc           #12                 // String Invalid return value from read:
      65: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: iload_1
      69: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      72: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: invokespecial #16                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      78: athrow

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifne          6
       4: iconst_0
       5: ireturn
       6: iconst_m1
       7: istore        4
       9: aload_0
      10: getfield      #7                  // Field decoder:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;
      13: ifnull        72
      16: aload_0
      17: getfield      #7                  // Field decoder:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;
      20: aload_1
      21: iload_2
      22: iload_3
      23: invokevirtual #17                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.decode:([BII)I
      26: istore        4
      28: goto          45
      31: astore        5
      33: new           #19                 // class java/io/IOException
      36: dup
      37: ldc           #20                 // String Invalid Deflate64 input
      39: aload         5
      41: invokespecial #21                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      44: athrow
      45: aload_0
      46: aload_0
      47: getfield      #7                  // Field decoder:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;
      50: invokevirtual #22                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.getBytesRead:()J
      53: putfield      #23                 // Field compressedBytesRead:J
      56: aload_0
      57: iload         4
      59: invokevirtual #24                 // Method count:(I)V
      62: iload         4
      64: iconst_m1
      65: if_icmpne     72
      68: aload_0
      69: invokespecial #25                 // Method closeDecoder:()V
      72: iload         4
      74: ireturn
    Exception table:
       from    to  target type
          16    28    31   Class java/lang/RuntimeException

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field decoder:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;
       4: ifnull        17
       7: aload_0
       8: getfield      #7                  // Field decoder:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;
      11: invokevirtual #26                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.available:()I
      14: goto          18
      17: iconst_0
      18: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method closeDecoder:()V
       4: aload_0
       5: getfield      #4                  // Field originalStream:Ljava/io/InputStream;
       8: ifnull        48
      11: aload_0
      12: getfield      #4                  // Field originalStream:Ljava/io/InputStream;
      15: invokevirtual #27                 // Method java/io/InputStream.close:()V
      18: aload_0
      19: aconst_null
      20: putfield      #4                  // Field originalStream:Ljava/io/InputStream;
      23: goto          48
      26: astore_1
      27: aload_0
      28: getfield      #4                  // Field originalStream:Ljava/io/InputStream;
      31: ifnull        46
      34: aload_0
      35: getfield      #4                  // Field originalStream:Ljava/io/InputStream;
      38: invokevirtual #27                 // Method java/io/InputStream.close:()V
      41: aload_0
      42: aconst_null
      43: putfield      #4                  // Field originalStream:Ljava/io/InputStream;
      46: aload_1
      47: athrow
      48: return
    Exception table:
       from    to  target type
           0     4    26   any

  public long getCompressedCount();
    Code:
       0: aload_0
       1: getfield      #23                 // Field compressedBytesRead:J
       4: lreturn

  private void closeDecoder();
    Code:
       0: aload_0
       1: getfield      #7                  // Field decoder:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;
       4: invokestatic  #28                 // Method org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V
       7: aload_0
       8: aconst_null
       9: putfield      #7                  // Field decoder:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;
      12: return
}
