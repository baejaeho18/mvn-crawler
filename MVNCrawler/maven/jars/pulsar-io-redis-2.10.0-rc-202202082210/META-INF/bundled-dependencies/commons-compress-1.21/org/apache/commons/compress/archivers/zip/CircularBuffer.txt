Compiled from "CircularBuffer.java"
class org.apache.commons.compress.archivers.zip.CircularBuffer {
  private final int size;

  private final byte[] buffer;

  private int readIndex;

  private int writeIndex;

  org.apache.commons.compress.archivers.zip.CircularBuffer(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field size:I
       9: aload_0
      10: iload_1
      11: newarray       byte
      13: putfield      #3                  // Field buffer:[B
      16: return

  public boolean available();
    Code:
       0: aload_0
       1: getfield      #4                  // Field readIndex:I
       4: aload_0
       5: getfield      #5                  // Field writeIndex:I
       8: if_icmpeq     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public void put(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field buffer:[B
       4: aload_0
       5: getfield      #5                  // Field writeIndex:I
       8: iload_1
       9: i2b
      10: bastore
      11: aload_0
      12: aload_0
      13: getfield      #5                  // Field writeIndex:I
      16: iconst_1
      17: iadd
      18: aload_0
      19: getfield      #2                  // Field size:I
      22: irem
      23: putfield      #5                  // Field writeIndex:I
      26: return

  public int get();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method available:()Z
       4: ifeq          38
       7: aload_0
       8: getfield      #3                  // Field buffer:[B
      11: aload_0
      12: getfield      #4                  // Field readIndex:I
      15: baload
      16: istore_1
      17: aload_0
      18: aload_0
      19: getfield      #4                  // Field readIndex:I
      22: iconst_1
      23: iadd
      24: aload_0
      25: getfield      #2                  // Field size:I
      28: irem
      29: putfield      #4                  // Field readIndex:I
      32: iload_1
      33: sipush        255
      36: iand
      37: ireturn
      38: iconst_m1
      39: ireturn

  public void copy(int, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field writeIndex:I
       4: iload_1
       5: isub
       6: istore_3
       7: iload_3
       8: iload_2
       9: iadd
      10: istore        4
      12: iload_3
      13: istore        5
      15: iload         5
      17: iload         4
      19: if_icmpge     69
      22: aload_0
      23: getfield      #3                  // Field buffer:[B
      26: aload_0
      27: getfield      #5                  // Field writeIndex:I
      30: aload_0
      31: getfield      #3                  // Field buffer:[B
      34: iload         5
      36: aload_0
      37: getfield      #2                  // Field size:I
      40: iadd
      41: aload_0
      42: getfield      #2                  // Field size:I
      45: irem
      46: baload
      47: bastore
      48: aload_0
      49: aload_0
      50: getfield      #5                  // Field writeIndex:I
      53: iconst_1
      54: iadd
      55: aload_0
      56: getfield      #2                  // Field size:I
      59: irem
      60: putfield      #5                  // Field writeIndex:I
      63: iinc          5, 1
      66: goto          15
      69: return
}
