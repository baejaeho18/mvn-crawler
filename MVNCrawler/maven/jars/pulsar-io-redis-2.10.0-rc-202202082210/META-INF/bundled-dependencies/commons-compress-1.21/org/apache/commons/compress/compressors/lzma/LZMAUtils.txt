Compiled from "LZMAUtils.java"
public class org.apache.commons.compress.compressors.lzma.LZMAUtils {
  private static final org.apache.commons.compress.compressors.FileNameUtil fileNameUtil;

  private static final byte[] HEADER_MAGIC;

  private static volatile org.apache.commons.compress.compressors.lzma.LZMAUtils$CachedAvailability cachedLZMAAvailability;

  private org.apache.commons.compress.compressors.lzma.LZMAUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean matches(byte[], int);
    Code:
       0: iload_1
       1: getstatic     #2                  // Field HEADER_MAGIC:[B
       4: arraylength
       5: if_icmpge     10
       8: iconst_0
       9: ireturn
      10: iconst_0
      11: istore_2
      12: iload_2
      13: getstatic     #2                  // Field HEADER_MAGIC:[B
      16: arraylength
      17: if_icmpge     39
      20: aload_0
      21: iload_2
      22: baload
      23: getstatic     #2                  // Field HEADER_MAGIC:[B
      26: iload_2
      27: baload
      28: if_icmpeq     33
      31: iconst_0
      32: ireturn
      33: iinc          2, 1
      36: goto          12
      39: iconst_1
      40: ireturn

  public static boolean isLZMACompressionAvailable();
    Code:
       0: getstatic     #3                  // Field cachedLZMAAvailability:Lorg/apache/commons/compress/compressors/lzma/LZMAUtils$CachedAvailability;
       3: astore_0
       4: aload_0
       5: getstatic     #4                  // Field org/apache/commons/compress/compressors/lzma/LZMAUtils$CachedAvailability.DONT_CACHE:Lorg/apache/commons/compress/compressors/lzma/LZMAUtils$CachedAvailability;
       8: if_acmpeq     24
      11: aload_0
      12: getstatic     #5                  // Field org/apache/commons/compress/compressors/lzma/LZMAUtils$CachedAvailability.CACHED_AVAILABLE:Lorg/apache/commons/compress/compressors/lzma/LZMAUtils$CachedAvailability;
      15: if_acmpne     22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn
      24: invokestatic  #6                  // Method internalIsLZMACompressionAvailable:()Z
      27: ireturn

  private static boolean internalIsLZMACompressionAvailable();
    Code:
       0: aconst_null
       1: iconst_0
       2: invokestatic  #7                  // Method org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.matches:([BI)Z
       5: pop
       6: iconst_1
       7: ireturn
       8: astore_0
       9: iconst_0
      10: ireturn
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/NoClassDefFoundError

  public static boolean isCompressedFilename(java.lang.String);
    Code:
       0: getstatic     #9                  // Field fileNameUtil:Lorg/apache/commons/compress/compressors/FileNameUtil;
       3: aload_0
       4: invokevirtual #10                 // Method org/apache/commons/compress/compressors/FileNameUtil.isCompressedFilename:(Ljava/lang/String;)Z
       7: ireturn

  public static java.lang.String getUncompressedFilename(java.lang.String);
    Code:
       0: getstatic     #9                  // Field fileNameUtil:Lorg/apache/commons/compress/compressors/FileNameUtil;
       3: aload_0
       4: invokevirtual #11                 // Method org/apache/commons/compress/compressors/FileNameUtil.getUncompressedFilename:(Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public static java.lang.String getCompressedFilename(java.lang.String);
    Code:
       0: getstatic     #9                  // Field fileNameUtil:Lorg/apache/commons/compress/compressors/FileNameUtil;
       3: aload_0
       4: invokevirtual #12                 // Method org/apache/commons/compress/compressors/FileNameUtil.getCompressedFilename:(Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public static void setCacheLZMAAvailablity(boolean);
    Code:
       0: iload_0
       1: ifne          13
       4: getstatic     #4                  // Field org/apache/commons/compress/compressors/lzma/LZMAUtils$CachedAvailability.DONT_CACHE:Lorg/apache/commons/compress/compressors/lzma/LZMAUtils$CachedAvailability;
       7: putstatic     #3                  // Field cachedLZMAAvailability:Lorg/apache/commons/compress/compressors/lzma/LZMAUtils$CachedAvailability;
      10: goto          42
      13: getstatic     #3                  // Field cachedLZMAAvailability:Lorg/apache/commons/compress/compressors/lzma/LZMAUtils$CachedAvailability;
      16: getstatic     #4                  // Field org/apache/commons/compress/compressors/lzma/LZMAUtils$CachedAvailability.DONT_CACHE:Lorg/apache/commons/compress/compressors/lzma/LZMAUtils$CachedAvailability;
      19: if_acmpne     42
      22: invokestatic  #6                  // Method internalIsLZMACompressionAvailable:()Z
      25: istore_1
      26: iload_1
      27: ifeq          36
      30: getstatic     #5                  // Field org/apache/commons/compress/compressors/lzma/LZMAUtils$CachedAvailability.CACHED_AVAILABLE:Lorg/apache/commons/compress/compressors/lzma/LZMAUtils$CachedAvailability;
      33: goto          39
      36: getstatic     #13                 // Field org/apache/commons/compress/compressors/lzma/LZMAUtils$CachedAvailability.CACHED_UNAVAILABLE:Lorg/apache/commons/compress/compressors/lzma/LZMAUtils$CachedAvailability;
      39: putstatic     #3                  // Field cachedLZMAAvailability:Lorg/apache/commons/compress/compressors/lzma/LZMAUtils$CachedAvailability;
      42: return

  static org.apache.commons.compress.compressors.lzma.LZMAUtils$CachedAvailability getCachedLZMAAvailability();
    Code:
       0: getstatic     #3                  // Field cachedLZMAAvailability:Lorg/apache/commons/compress/compressors/lzma/LZMAUtils$CachedAvailability;
       3: areturn

  static {};
    Code:
       0: iconst_3
       1: newarray       byte
       3: dup
       4: iconst_0
       5: bipush        93
       7: bastore
       8: dup
       9: iconst_1
      10: iconst_0
      11: bastore
      12: dup
      13: iconst_2
      14: iconst_0
      15: bastore
      16: putstatic     #2                  // Field HEADER_MAGIC:[B
      19: new           #14                 // class java/util/HashMap
      22: dup
      23: invokespecial #15                 // Method java/util/HashMap."<init>":()V
      26: astore_0
      27: aload_0
      28: ldc           #16                 // String .lzma
      30: ldc           #17                 // String
      32: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aload_0
      39: ldc           #19                 // String -lzma
      41: ldc           #17                 // String
      43: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      48: pop
      49: new           #20                 // class org/apache/commons/compress/compressors/FileNameUtil
      52: dup
      53: aload_0
      54: ldc           #16                 // String .lzma
      56: invokespecial #21                 // Method org/apache/commons/compress/compressors/FileNameUtil."<init>":(Ljava/util/Map;Ljava/lang/String;)V
      59: putstatic     #9                  // Field fileNameUtil:Lorg/apache/commons/compress/compressors/FileNameUtil;
      62: getstatic     #4                  // Field org/apache/commons/compress/compressors/lzma/LZMAUtils$CachedAvailability.DONT_CACHE:Lorg/apache/commons/compress/compressors/lzma/LZMAUtils$CachedAvailability;
      65: putstatic     #3                  // Field cachedLZMAAvailability:Lorg/apache/commons/compress/compressors/lzma/LZMAUtils$CachedAvailability;
      68: invokestatic  #22                 // Method org/apache/commons/compress/utils/OsgiUtils.isRunningInOsgiEnvironment:()Z
      71: ifne          78
      74: iconst_1
      75: goto          79
      78: iconst_0
      79: invokestatic  #23                 // Method setCacheLZMAAvailablity:(Z)V
      82: return
}
