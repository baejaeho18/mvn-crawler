Compiled from "SharedResourceManager.java"
public class org.apache.bookkeeper.common.util.SharedResourceManager {
  static final long DESTROY_DELAY_SECONDS;

  private static final org.apache.bookkeeper.common.util.SharedResourceManager SHARED;

  private final java.util.IdentityHashMap<org.apache.bookkeeper.common.util.SharedResourceManager$Resource<?>, org.apache.bookkeeper.common.util.SharedResourceManager$Instance> instances;

  private final java.util.function.Supplier<java.util.concurrent.ScheduledExecutorService> destroyerFactory;

  private java.util.concurrent.ScheduledExecutorService destroyer;

  public static org.apache.bookkeeper.common.util.SharedResourceManager shared();
    Code:
       0: getstatic     #1                  // Field SHARED:Lorg/apache/bookkeeper/common/util/SharedResourceManager;
       3: areturn

  public static org.apache.bookkeeper.common.util.SharedResourceManager create();
    Code:
       0: invokedynamic #2,  0              // InvokeDynamic #0:get:()Ljava/util/function/Supplier;
       5: invokestatic  #3                  // Method create:(Ljava/util/function/Supplier;)Lorg/apache/bookkeeper/common/util/SharedResourceManager;
       8: areturn

  public static org.apache.bookkeeper.common.util.SharedResourceManager create(java.util.function.Supplier<java.util.concurrent.ScheduledExecutorService>);
    Code:
       0: new           #4                  // class org/apache/bookkeeper/common/util/SharedResourceManager
       3: dup
       4: aload_0
       5: invokespecial #5                  // Method "<init>":(Ljava/util/function/Supplier;)V
       8: areturn

  private org.apache.bookkeeper.common.util.SharedResourceManager(java.util.function.Supplier<java.util.concurrent.ScheduledExecutorService>);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/IdentityHashMap
       8: dup
       9: invokespecial #8                  // Method java/util/IdentityHashMap."<init>":()V
      12: putfield      #9                  // Field instances:Ljava/util/IdentityHashMap;
      15: aload_0
      16: aload_1
      17: putfield      #10                 // Field destroyerFactory:Ljava/util/function/Supplier;
      20: return

  public synchronized <T> T get(org.apache.bookkeeper.common.util.SharedResourceManager$Resource<T>);
    Code:
       0: aload_0
       1: getfield      #9                  // Field instances:Ljava/util/IdentityHashMap;
       4: aload_1
       5: invokevirtual #11                 // Method java/util/IdentityHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #12                 // class org/apache/bookkeeper/common/util/SharedResourceManager$Instance
      11: astore_2
      12: aconst_null
      13: aload_2
      14: if_acmpne     41
      17: new           #12                 // class org/apache/bookkeeper/common/util/SharedResourceManager$Instance
      20: dup
      21: aload_1
      22: invokeinterface #13,  1           // InterfaceMethod org/apache/bookkeeper/common/util/SharedResourceManager$Resource.create:()Ljava/lang/Object;
      27: invokespecial #14                 // Method org/apache/bookkeeper/common/util/SharedResourceManager$Instance."<init>":(Ljava/lang/Object;)V
      30: astore_2
      31: aload_0
      32: getfield      #9                  // Field instances:Ljava/util/IdentityHashMap;
      35: aload_1
      36: aload_2
      37: invokevirtual #15                 // Method java/util/IdentityHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: aload_2
      42: invokevirtual #16                 // Method org/apache/bookkeeper/common/util/SharedResourceManager$Instance.cancelDestroyTask:()V
      45: aload_2
      46: invokevirtual #17                 // Method org/apache/bookkeeper/common/util/SharedResourceManager$Instance.retain:()V
      49: aload_2
      50: invokestatic  #18                 // Method org/apache/bookkeeper/common/util/SharedResourceManager$Instance.access$000:(Lorg/apache/bookkeeper/common/util/SharedResourceManager$Instance;)Ljava/lang/Object;
      53: areturn

  public synchronized <T> void release(org.apache.bookkeeper.common.util.SharedResourceManager$Resource<T>, T);
    Code:
       0: aload_0
       1: getfield      #9                  // Field instances:Ljava/util/IdentityHashMap;
       4: aload_1
       5: invokevirtual #11                 // Method java/util/IdentityHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #12                 // class org/apache/bookkeeper/common/util/SharedResourceManager$Instance
      11: astore_3
      12: aconst_null
      13: aload_3
      14: if_acmpeq     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ldc           #19                 // String No cached instance found for %s
      24: aload_1
      25: invokestatic  #20                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V
      28: aload_2
      29: aload_3
      30: invokestatic  #18                 // Method org/apache/bookkeeper/common/util/SharedResourceManager$Instance.access$000:(Lorg/apache/bookkeeper/common/util/SharedResourceManager$Instance;)Ljava/lang/Object;
      33: if_acmpne     40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ldc           #21                 // String Release the wrong instance for %s
      43: aload_1
      44: invokestatic  #20                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V
      47: aload_3
      48: invokestatic  #22                 // Method org/apache/bookkeeper/common/util/SharedResourceManager$Instance.access$100:(Lorg/apache/bookkeeper/common/util/SharedResourceManager$Instance;)I
      51: ifle          58
      54: iconst_1
      55: goto          59
      58: iconst_0
      59: ldc           #23                 // String Refcount has already reached zero for %s
      61: aload_1
      62: invokestatic  #24                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;Ljava/lang/Object;)V
      65: aload_3
      66: invokevirtual #25                 // Method org/apache/bookkeeper/common/util/SharedResourceManager$Instance.release:()V
      69: iconst_0
      70: aload_3
      71: invokestatic  #22                 // Method org/apache/bookkeeper/common/util/SharedResourceManager$Instance.access$100:(Lorg/apache/bookkeeper/common/util/SharedResourceManager$Instance;)I
      74: if_icmpne     153
      77: aconst_null
      78: aload_3
      79: getfield      #26                 // Field org/apache/bookkeeper/common/util/SharedResourceManager$Instance.destroyTask:Ljava/util/concurrent/ScheduledFuture;
      82: if_acmpne     89
      85: iconst_1
      86: goto          90
      89: iconst_0
      90: ldc           #27                 // String Destroy task already scheduled for %s
      92: aload_1
      93: invokestatic  #24                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;Ljava/lang/Object;)V
      96: aconst_null
      97: aload_0
      98: getfield      #28                 // Field destroyer:Ljava/util/concurrent/ScheduledExecutorService;
     101: if_acmpne     120
     104: aload_0
     105: aload_0
     106: getfield      #10                 // Field destroyerFactory:Ljava/util/function/Supplier;
     109: invokeinterface #29,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
     114: checkcast     #30                 // class java/util/concurrent/ScheduledExecutorService
     117: putfield      #28                 // Field destroyer:Ljava/util/concurrent/ScheduledExecutorService;
     120: aload_3
     121: aload_0
     122: getfield      #28                 // Field destroyer:Ljava/util/concurrent/ScheduledExecutorService;
     125: new           #31                 // class org/apache/bookkeeper/common/util/LogExceptionRunnable
     128: dup
     129: aload_0
     130: aload_3
     131: aload_1
     132: aload_2
     133: invokedynamic #32,  0             // InvokeDynamic #1:run:(Lorg/apache/bookkeeper/common/util/SharedResourceManager;Lorg/apache/bookkeeper/common/util/SharedResourceManager$Instance;Lorg/apache/bookkeeper/common/util/SharedResourceManager$Resource;Ljava/lang/Object;)Ljava/lang/Runnable;
     138: invokespecial #33                 // Method org/apache/bookkeeper/common/util/LogExceptionRunnable."<init>":(Ljava/lang/Runnable;)V
     141: lconst_1
     142: getstatic     #34                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
     145: invokeinterface #35,  5           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
     150: putfield      #26                 // Field org/apache/bookkeeper/common/util/SharedResourceManager$Instance.destroyTask:Ljava/util/concurrent/ScheduledFuture;
     153: return

  private void lambda$release$1(org.apache.bookkeeper.common.util.SharedResourceManager$Instance, org.apache.bookkeeper.common.util.SharedResourceManager$Resource, java.lang.Object);
    Code:
       0: aload_0
       1: dup
       2: astore        4
       4: monitorenter
       5: aload_1
       6: invokestatic  #22                 // Method org/apache/bookkeeper/common/util/SharedResourceManager$Instance.access$100:(Lorg/apache/bookkeeper/common/util/SharedResourceManager$Instance;)I
       9: ifne          52
      12: aload_2
      13: aload_3
      14: invokeinterface #36,  2           // InterfaceMethod org/apache/bookkeeper/common/util/SharedResourceManager$Resource.close:(Ljava/lang/Object;)V
      19: aload_0
      20: getfield      #9                  // Field instances:Ljava/util/IdentityHashMap;
      23: aload_2
      24: invokevirtual #37                 // Method java/util/IdentityHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      27: pop
      28: aload_0
      29: getfield      #9                  // Field instances:Ljava/util/IdentityHashMap;
      32: invokevirtual #38                 // Method java/util/IdentityHashMap.isEmpty:()Z
      35: ifeq          52
      38: aload_0
      39: getfield      #28                 // Field destroyer:Ljava/util/concurrent/ScheduledExecutorService;
      42: invokeinterface #39,  1           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.shutdown:()V
      47: aload_0
      48: aconst_null
      49: putfield      #28                 // Field destroyer:Ljava/util/concurrent/ScheduledExecutorService;
      52: aload         4
      54: monitorexit
      55: goto          66
      58: astore        5
      60: aload         4
      62: monitorexit
      63: aload         5
      65: athrow
      66: return
    Exception table:
       from    to  target type
           5    55    58   any
          58    63    58   any

  private static java.util.concurrent.ScheduledExecutorService lambda$create$0();
    Code:
       0: ldc           #40                 // String bookkeeper-shared-destroyer-%d
       2: iconst_1
       3: invokestatic  #41                 // Method org/apache/bookkeeper/common/util/ExecutorUtils.getThreadFactory:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;
       6: invokestatic  #42                 // Method java/util/concurrent/Executors.newSingleThreadScheduledExecutor:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;
       9: areturn

  static {};
    Code:
       0: invokestatic  #43                 // Method create:()Lorg/apache/bookkeeper/common/util/SharedResourceManager;
       3: putstatic     #1                  // Field SHARED:Lorg/apache/bookkeeper/common/util/SharedResourceManager;
       6: return
}
