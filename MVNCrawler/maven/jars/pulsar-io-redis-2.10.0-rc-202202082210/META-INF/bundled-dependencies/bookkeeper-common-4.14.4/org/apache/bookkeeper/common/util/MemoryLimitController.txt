Compiled from "MemoryLimitController.java"
public class org.apache.bookkeeper.common.util.MemoryLimitController {
  private final long memoryLimit;

  private final java.util.concurrent.atomic.AtomicLong currentUsage;

  private final java.util.concurrent.locks.ReentrantLock mutex;

  private final java.util.concurrent.locks.Condition condition;

  public org.apache.bookkeeper.common.util.MemoryLimitController(long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      12: putfield      #4                  // Field currentUsage:Ljava/util/concurrent/atomic/AtomicLong;
      15: aload_0
      16: new           #5                  // class java/util/concurrent/locks/ReentrantLock
      19: dup
      20: iconst_0
      21: invokespecial #6                  // Method java/util/concurrent/locks/ReentrantLock."<init>":(Z)V
      24: putfield      #7                  // Field mutex:Ljava/util/concurrent/locks/ReentrantLock;
      27: aload_0
      28: aload_0
      29: getfield      #7                  // Field mutex:Ljava/util/concurrent/locks/ReentrantLock;
      32: invokevirtual #8                  // Method java/util/concurrent/locks/ReentrantLock.newCondition:()Ljava/util/concurrent/locks/Condition;
      35: putfield      #9                  // Field condition:Ljava/util/concurrent/locks/Condition;
      38: aload_0
      39: lload_1
      40: putfield      #10                 // Field memoryLimit:J
      43: return

  public boolean tryReserveMemory(long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field currentUsage:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lstore_3
       8: lload_3
       9: lload_1
      10: ladd
      11: lstore        5
      13: lload_3
      14: aload_0
      15: getfield      #10                 // Field memoryLimit:J
      18: lcmp
      19: ifle          33
      22: aload_0
      23: getfield      #10                 // Field memoryLimit:J
      26: lconst_0
      27: lcmp
      28: ifle          33
      31: iconst_0
      32: ireturn
      33: aload_0
      34: getfield      #4                  // Field currentUsage:Ljava/util/concurrent/atomic/AtomicLong;
      37: lload_3
      38: lload         5
      40: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicLong.compareAndSet:(JJ)Z
      43: ifeq          48
      46: iconst_1
      47: ireturn
      48: goto          0

  public void reserveMemory(long) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #13                 // Method tryReserveMemory:(J)Z
       5: ifne          55
       8: aload_0
       9: getfield      #7                  // Field mutex:Ljava/util/concurrent/locks/ReentrantLock;
      12: invokevirtual #14                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      15: aload_0
      16: lload_1
      17: invokevirtual #13                 // Method tryReserveMemory:(J)Z
      20: ifne          35
      23: aload_0
      24: getfield      #9                  // Field condition:Ljava/util/concurrent/locks/Condition;
      27: invokeinterface #15,  1           // InterfaceMethod java/util/concurrent/locks/Condition.await:()V
      32: goto          15
      35: aload_0
      36: getfield      #7                  // Field mutex:Ljava/util/concurrent/locks/ReentrantLock;
      39: invokevirtual #16                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      42: goto          55
      45: astore_3
      46: aload_0
      47: getfield      #7                  // Field mutex:Ljava/util/concurrent/locks/ReentrantLock;
      50: invokevirtual #16                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      53: aload_3
      54: athrow
      55: return
    Exception table:
       from    to  target type
          15    35    45   any

  public void releaseMemory(long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field currentUsage:Ljava/util/concurrent/atomic/AtomicLong;
       4: lload_1
       5: lneg
       6: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
       9: lstore_3
      10: lload_3
      11: lload_1
      12: ladd
      13: aload_0
      14: getfield      #10                 // Field memoryLimit:J
      17: lcmp
      18: ifle          68
      21: lload_3
      22: aload_0
      23: getfield      #10                 // Field memoryLimit:J
      26: lcmp
      27: ifgt          68
      30: aload_0
      31: getfield      #7                  // Field mutex:Ljava/util/concurrent/locks/ReentrantLock;
      34: invokevirtual #14                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      37: aload_0
      38: getfield      #9                  // Field condition:Ljava/util/concurrent/locks/Condition;
      41: invokeinterface #18,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signalAll:()V
      46: aload_0
      47: getfield      #7                  // Field mutex:Ljava/util/concurrent/locks/ReentrantLock;
      50: invokevirtual #16                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      53: goto          68
      56: astore        5
      58: aload_0
      59: getfield      #7                  // Field mutex:Ljava/util/concurrent/locks/ReentrantLock;
      62: invokevirtual #16                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      65: aload         5
      67: athrow
      68: return
    Exception table:
       from    to  target type
          37    46    56   any
          56    58    56   any

  public long currentUsage();
    Code:
       0: aload_0
       1: getfield      #4                  // Field currentUsage:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn
}
