Compiled from "Backoff.java"
public class org.apache.bookkeeper.common.util.Backoff$Jitter implements org.apache.bookkeeper.common.util.Backoff$Policy {
  private final org.apache.bookkeeper.common.util.Backoff$Jitter$Type type;

  private final long startMs;

  private final long maxMs;

  private final long limit;

  public static org.apache.bookkeeper.common.util.Backoff$Jitter of(org.apache.bookkeeper.common.util.Backoff$Jitter$Type, long, long);
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: ldc2_w        #1                  // long -1l
       6: invokestatic  #3                  // Method of:(Lorg/apache/bookkeeper/common/util/Backoff$Jitter$Type;JJJ)Lorg/apache/bookkeeper/common/util/Backoff$Jitter;
       9: areturn

  public java.util.stream.Stream<java.lang.Long> toBackoffs();
    Code:
       0: getstatic     #4                  // Field org/apache/bookkeeper/common/util/Backoff$1.$SwitchMap$org$apache$bookkeeper$common$util$Backoff$Jitter$Type:[I
       3: aload_0
       4: getfield      #5                  // Field type:Lorg/apache/bookkeeper/common/util/Backoff$Jitter$Type;
       7: invokevirtual #6                  // Method org/apache/bookkeeper/common/util/Backoff$Jitter$Type.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 3
                     1: 36
                     2: 51
                     3: 66
               default: 66
          }
      36: aload_0
      37: getfield      #7                  // Field startMs:J
      40: aload_0
      41: getfield      #8                  // Field maxMs:J
      44: invokestatic  #9                  // Method org/apache/bookkeeper/common/util/Backoff.decorrelatedJittered:(JJ)Ljava/util/stream/Stream;
      47: astore_1
      48: goto          78
      51: aload_0
      52: getfield      #7                  // Field startMs:J
      55: aload_0
      56: getfield      #8                  // Field maxMs:J
      59: invokestatic  #10                 // Method org/apache/bookkeeper/common/util/Backoff.equalJittered:(JJ)Ljava/util/stream/Stream;
      62: astore_1
      63: goto          78
      66: aload_0
      67: getfield      #7                  // Field startMs:J
      70: aload_0
      71: getfield      #8                  // Field maxMs:J
      74: invokestatic  #11                 // Method org/apache/bookkeeper/common/util/Backoff.exponentialJittered:(JJ)Ljava/util/stream/Stream;
      77: astore_1
      78: aload_0
      79: getfield      #12                 // Field limit:J
      82: lconst_0
      83: lcmp
      84: iflt          98
      87: aload_1
      88: aload_0
      89: getfield      #12                 // Field limit:J
      92: invokeinterface #13,  3           // InterfaceMethod java/util/stream/Stream.limit:(J)Ljava/util/stream/Stream;
      97: areturn
      98: aload_1
      99: areturn

  private org.apache.bookkeeper.common.util.Backoff$Jitter(org.apache.bookkeeper.common.util.Backoff$Jitter$Type, long, long, long);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field type:Lorg/apache/bookkeeper/common/util/Backoff$Jitter$Type;
       9: aload_0
      10: lload_2
      11: putfield      #7                  // Field startMs:J
      14: aload_0
      15: lload         4
      17: putfield      #8                  // Field maxMs:J
      20: aload_0
      21: lload         6
      23: putfield      #12                 // Field limit:J
      26: return

  public static org.apache.bookkeeper.common.util.Backoff$Jitter of(org.apache.bookkeeper.common.util.Backoff$Jitter$Type, long, long, long);
    Code:
       0: new           #15                 // class org/apache/bookkeeper/common/util/Backoff$Jitter
       3: dup
       4: aload_0
       5: lload_1
       6: lload_3
       7: lload         5
       9: invokespecial #16                 // Method "<init>":(Lorg/apache/bookkeeper/common/util/Backoff$Jitter$Type;JJJ)V
      12: areturn

  public org.apache.bookkeeper.common.util.Backoff$Jitter$Type getType();
    Code:
       0: aload_0
       1: getfield      #5                  // Field type:Lorg/apache/bookkeeper/common/util/Backoff$Jitter$Type;
       4: areturn

  public long getStartMs();
    Code:
       0: aload_0
       1: getfield      #7                  // Field startMs:J
       4: lreturn

  public long getMaxMs();
    Code:
       0: aload_0
       1: getfield      #8                  // Field maxMs:J
       4: lreturn

  public long getLimit();
    Code:
       0: aload_0
       1: getfield      #12                 // Field limit:J
       4: lreturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #15                 // class org/apache/bookkeeper/common/util/Backoff$Jitter
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #15                 // class org/apache/bookkeeper/common/util/Backoff$Jitter
      20: astore_2
      21: aload_2
      22: aload_0
      23: invokevirtual #17                 // Method canEqual:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: invokevirtual #18                 // Method getStartMs:()J
      35: aload_2
      36: invokevirtual #18                 // Method getStartMs:()J
      39: lcmp
      40: ifeq          45
      43: iconst_0
      44: ireturn
      45: aload_0
      46: invokevirtual #19                 // Method getMaxMs:()J
      49: aload_2
      50: invokevirtual #19                 // Method getMaxMs:()J
      53: lcmp
      54: ifeq          59
      57: iconst_0
      58: ireturn
      59: aload_0
      60: invokevirtual #20                 // Method getLimit:()J
      63: aload_2
      64: invokevirtual #20                 // Method getLimit:()J
      67: lcmp
      68: ifeq          73
      71: iconst_0
      72: ireturn
      73: aload_0
      74: invokevirtual #21                 // Method getType:()Lorg/apache/bookkeeper/common/util/Backoff$Jitter$Type;
      77: astore_3
      78: aload_2
      79: invokevirtual #21                 // Method getType:()Lorg/apache/bookkeeper/common/util/Backoff$Jitter$Type;
      82: astore        4
      84: aload_3
      85: ifnonnull     96
      88: aload         4
      90: ifnull        107
      93: goto          105
      96: aload_3
      97: aload         4
      99: invokevirtual #22                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     102: ifne          107
     105: iconst_0
     106: ireturn
     107: iconst_1
     108: ireturn

  protected boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #15                 // class org/apache/bookkeeper/common/util/Backoff$Jitter
       4: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: aload_0
       6: invokevirtual #18                 // Method getStartMs:()J
       9: lstore_3
      10: iload_2
      11: bipush        59
      13: imul
      14: lload_3
      15: bipush        32
      17: lushr
      18: lload_3
      19: lxor
      20: l2i
      21: iadd
      22: istore_2
      23: aload_0
      24: invokevirtual #19                 // Method getMaxMs:()J
      27: lstore        5
      29: iload_2
      30: bipush        59
      32: imul
      33: lload         5
      35: bipush        32
      37: lushr
      38: lload         5
      40: lxor
      41: l2i
      42: iadd
      43: istore_2
      44: aload_0
      45: invokevirtual #20                 // Method getLimit:()J
      48: lstore        7
      50: iload_2
      51: bipush        59
      53: imul
      54: lload         7
      56: bipush        32
      58: lushr
      59: lload         7
      61: lxor
      62: l2i
      63: iadd
      64: istore_2
      65: aload_0
      66: invokevirtual #21                 // Method getType:()Lorg/apache/bookkeeper/common/util/Backoff$Jitter$Type;
      69: astore        9
      71: iload_2
      72: bipush        59
      74: imul
      75: aload         9
      77: ifnonnull     85
      80: bipush        43
      82: goto          90
      85: aload         9
      87: invokevirtual #23                 // Method java/lang/Object.hashCode:()I
      90: iadd
      91: istore_2
      92: iload_2
      93: ireturn

  public java.lang.String toString();
    Code:
       0: new           #24                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #26                 // String Backoff.Jitter(type=
       9: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #21                 // Method getType:()Lorg/apache/bookkeeper/common/util/Backoff$Jitter$Type;
      16: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #29                 // String , startMs=
      21: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #18                 // Method getStartMs:()J
      28: invokevirtual #30                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      31: ldc           #31                 // String , maxMs=
      33: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #19                 // Method getMaxMs:()J
      40: invokevirtual #30                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      43: ldc           #32                 // String , limit=
      45: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: invokevirtual #20                 // Method getLimit:()J
      52: invokevirtual #30                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      55: ldc           #33                 // String )
      57: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: areturn
}
