Compiled from "BlockingMpscQueue.java"
public class org.apache.bookkeeper.common.collections.BlockingMpscQueue<T> extends org.jctools.queues.MpscArrayQueue<T> implements java.util.concurrent.BlockingQueue<T> {
  private static final org.jctools.queues.MessagePassingQueue$WaitStrategy SPIN_STRATEGY;

  private static final org.jctools.queues.MessagePassingQueue$WaitStrategy WAIT_STRATEGY;

  public org.apache.bookkeeper.common.collections.BlockingMpscQueue(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method org/jctools/queues/MpscArrayQueue."<init>":(I)V
       5: return

  public void put(T) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2                  // Method relaxedOffer:(Ljava/lang/Object;)Z
       5: ifne          22
       8: invokestatic  #3                  // Method java/lang/Thread.interrupted:()Z
      11: ifeq          0
      14: new           #4                  // class java/lang/InterruptedException
      17: dup
      18: invokespecial #5                  // Method java/lang/InterruptedException."<init>":()V
      21: athrow
      22: return

  public boolean offer(T, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: invokestatic  #6                  // Method java/lang/System.nanoTime:()J
       3: aload         4
       5: lload_2
       6: invokevirtual #7                  // Method java/util/concurrent/TimeUnit.toNanos:(J)J
       9: ladd
      10: lstore        5
      12: aload_0
      13: aload_1
      14: invokevirtual #2                  // Method relaxedOffer:(Ljava/lang/Object;)Z
      17: ifne          45
      20: invokestatic  #6                  // Method java/lang/System.nanoTime:()J
      23: lload         5
      25: lcmp
      26: ifle          31
      29: iconst_0
      30: ireturn
      31: invokestatic  #3                  // Method java/lang/Thread.interrupted:()Z
      34: ifeq          12
      37: new           #4                  // class java/lang/InterruptedException
      40: dup
      41: invokespecial #5                  // Method java/lang/InterruptedException."<init>":()V
      44: athrow
      45: iconst_1
      46: ireturn

  public T take() throws java.lang.InterruptedException;
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokevirtual #8                  // Method relaxedPoll:()Ljava/lang/Object;
       6: astore_2
       7: aload_2
       8: ifnonnull     38
      11: invokestatic  #3                  // Method java/lang/Thread.interrupted:()Z
      14: ifeq          25
      17: new           #4                  // class java/lang/InterruptedException
      20: dup
      21: invokespecial #5                  // Method java/lang/InterruptedException."<init>":()V
      24: athrow
      25: getstatic     #9                  // Field WAIT_STRATEGY:Lorg/jctools/queues/MessagePassingQueue$WaitStrategy;
      28: iload_1
      29: invokeinterface #10,  2           // InterfaceMethod org/jctools/queues/MessagePassingQueue$WaitStrategy.idle:(I)I
      34: istore_1
      35: goto          2
      38: aload_2
      39: areturn

  public T poll(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: invokestatic  #6                  // Method java/lang/System.nanoTime:()J
       3: aload_3
       4: lload_1
       5: invokevirtual #7                  // Method java/util/concurrent/TimeUnit.toNanos:(J)J
       8: ladd
       9: lstore        4
      11: iconst_0
      12: istore        6
      14: aload_0
      15: invokevirtual #8                  // Method relaxedPoll:()Ljava/lang/Object;
      18: astore        7
      20: aload         7
      22: ifnonnull     65
      25: invokestatic  #3                  // Method java/lang/Thread.interrupted:()Z
      28: ifeq          39
      31: new           #4                  // class java/lang/InterruptedException
      34: dup
      35: invokespecial #5                  // Method java/lang/InterruptedException."<init>":()V
      38: athrow
      39: invokestatic  #6                  // Method java/lang/System.nanoTime:()J
      42: lload         4
      44: lcmp
      45: ifle          50
      48: aconst_null
      49: areturn
      50: getstatic     #9                  // Field WAIT_STRATEGY:Lorg/jctools/queues/MessagePassingQueue$WaitStrategy;
      53: iload         6
      55: invokeinterface #10,  2           // InterfaceMethod org/jctools/queues/MessagePassingQueue$WaitStrategy.idle:(I)I
      60: istore        6
      62: goto          14
      65: aload         7
      67: areturn

  public int remainingCapacity();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method capacity:()I
       4: aload_0
       5: invokevirtual #12                 // Method size:()I
       8: isub
       9: ireturn

  public int drainTo(java.util.Collection<? super T>);
    Code:
       0: aload_1
       1: invokeinterface #13,  1           // InterfaceMethod java/util/Collection.size:()I
       6: istore_2
       7: new           #14                 // class org/apache/bookkeeper/common/collections/BlockingMpscQueue$DrainStrategy
      10: dup
      11: aconst_null
      12: invokespecial #15                 // Method org/apache/bookkeeper/common/collections/BlockingMpscQueue$DrainStrategy."<init>":(Lorg/apache/bookkeeper/common/collections/BlockingMpscQueue$1;)V
      15: astore_3
      16: aload_0
      17: aload_1
      18: dup
      19: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      22: pop
      23: invokedynamic #17,  0             // InvokeDynamic #0:accept:(Ljava/util/Collection;)Lorg/jctools/queues/MessagePassingQueue$Consumer;
      28: aload_3
      29: aload_3
      30: invokevirtual #18                 // Method drain:(Lorg/jctools/queues/MessagePassingQueue$Consumer;Lorg/jctools/queues/MessagePassingQueue$WaitStrategy;Lorg/jctools/queues/MessagePassingQueue$ExitCondition;)V
      33: aload_1
      34: invokeinterface #13,  1           // InterfaceMethod java/util/Collection.size:()I
      39: iload_2
      40: isub
      41: ireturn

  public int drainTo(java.util.Collection<? super T>, int);
    Code:
       0: aload_0
       1: aload_1
       2: dup
       3: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       6: pop
       7: invokedynamic #17,  0             // InvokeDynamic #0:accept:(Ljava/util/Collection;)Lorg/jctools/queues/MessagePassingQueue$Consumer;
      12: iload_2
      13: invokevirtual #19                 // Method drain:(Lorg/jctools/queues/MessagePassingQueue$Consumer;I)I
      16: ireturn

  static {};
    Code:
       0: new           #20                 // class org/apache/bookkeeper/common/collections/BlockingMpscQueue$1
       3: dup
       4: invokespecial #21                 // Method org/apache/bookkeeper/common/collections/BlockingMpscQueue$1."<init>":()V
       7: putstatic     #22                 // Field SPIN_STRATEGY:Lorg/jctools/queues/MessagePassingQueue$WaitStrategy;
      10: getstatic     #22                 // Field SPIN_STRATEGY:Lorg/jctools/queues/MessagePassingQueue$WaitStrategy;
      13: putstatic     #9                  // Field WAIT_STRATEGY:Lorg/jctools/queues/MessagePassingQueue$WaitStrategy;
      16: return
}
