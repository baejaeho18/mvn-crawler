Compiled from "Backoff.java"
public class org.apache.bookkeeper.common.util.Backoff$Constant implements org.apache.bookkeeper.common.util.Backoff$Policy {
  private final long ms;

  private final long limit;

  public static org.apache.bookkeeper.common.util.Backoff$Constant of(long);
    Code:
       0: lload_0
       1: ldc2_w        #1                  // long -1l
       4: invokestatic  #3                  // Method of:(JJ)Lorg/apache/bookkeeper/common/util/Backoff$Constant;
       7: areturn

  public java.util.stream.Stream<java.lang.Long> toBackoffs();
    Code:
       0: aload_0
       1: getfield      #4                  // Field limit:J
       4: lconst_0
       5: lcmp
       6: iflt          26
       9: aload_0
      10: getfield      #5                  // Field ms:J
      13: invokestatic  #6                  // Method org/apache/bookkeeper/common/util/Backoff.constant:(J)Ljava/util/stream/Stream;
      16: aload_0
      17: getfield      #4                  // Field limit:J
      20: invokeinterface #7,  3            // InterfaceMethod java/util/stream/Stream.limit:(J)Ljava/util/stream/Stream;
      25: areturn
      26: aload_0
      27: getfield      #5                  // Field ms:J
      30: invokestatic  #6                  // Method org/apache/bookkeeper/common/util/Backoff.constant:(J)Ljava/util/stream/Stream;
      33: areturn

  private org.apache.bookkeeper.common.util.Backoff$Constant(long, long);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lload_1
       6: putfield      #5                  // Field ms:J
       9: aload_0
      10: lload_3
      11: putfield      #4                  // Field limit:J
      14: return

  public static org.apache.bookkeeper.common.util.Backoff$Constant of(long, long);
    Code:
       0: new           #9                  // class org/apache/bookkeeper/common/util/Backoff$Constant
       3: dup
       4: lload_0
       5: lload_2
       6: invokespecial #10                 // Method "<init>":(JJ)V
       9: areturn

  public long getMs();
    Code:
       0: aload_0
       1: getfield      #5                  // Field ms:J
       4: lreturn

  public long getLimit();
    Code:
       0: aload_0
       1: getfield      #4                  // Field limit:J
       4: lreturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #9                  // class org/apache/bookkeeper/common/util/Backoff$Constant
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #9                  // class org/apache/bookkeeper/common/util/Backoff$Constant
      20: astore_2
      21: aload_2
      22: aload_0
      23: invokevirtual #11                 // Method canEqual:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: invokevirtual #12                 // Method getMs:()J
      35: aload_2
      36: invokevirtual #12                 // Method getMs:()J
      39: lcmp
      40: ifeq          45
      43: iconst_0
      44: ireturn
      45: aload_0
      46: invokevirtual #13                 // Method getLimit:()J
      49: aload_2
      50: invokevirtual #13                 // Method getLimit:()J
      53: lcmp
      54: ifeq          59
      57: iconst_0
      58: ireturn
      59: iconst_1
      60: ireturn

  protected boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #9                  // class org/apache/bookkeeper/common/util/Backoff$Constant
       4: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: aload_0
       6: invokevirtual #12                 // Method getMs:()J
       9: lstore_3
      10: iload_2
      11: bipush        59
      13: imul
      14: lload_3
      15: bipush        32
      17: lushr
      18: lload_3
      19: lxor
      20: l2i
      21: iadd
      22: istore_2
      23: aload_0
      24: invokevirtual #13                 // Method getLimit:()J
      27: lstore        5
      29: iload_2
      30: bipush        59
      32: imul
      33: lload         5
      35: bipush        32
      37: lushr
      38: lload         5
      40: lxor
      41: l2i
      42: iadd
      43: istore_2
      44: iload_2
      45: ireturn

  public java.lang.String toString();
    Code:
       0: new           #14                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #16                 // String Backoff.Constant(ms=
       9: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #12                 // Method getMs:()J
      16: invokevirtual #18                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      19: ldc           #19                 // String , limit=
      21: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #13                 // Method getLimit:()J
      28: invokevirtual #18                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      31: ldc           #20                 // String )
      33: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn
}
