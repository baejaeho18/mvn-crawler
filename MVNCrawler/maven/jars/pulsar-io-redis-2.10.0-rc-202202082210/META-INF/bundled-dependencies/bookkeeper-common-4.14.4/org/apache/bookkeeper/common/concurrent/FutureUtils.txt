Compiled from "FutureUtils.java"
public final class org.apache.bookkeeper.common.concurrent.FutureUtils {
  private static final org.slf4j.Logger log;

  private static final java.util.function.Function<java.lang.Throwable, java.lang.Exception> DEFAULT_EXCEPTION_HANDLER;

  private org.apache.bookkeeper.common.concurrent.FutureUtils();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.util.concurrent.CompletableFuture<java.lang.Void> Void();
    Code:
       0: aconst_null
       1: invokestatic  #3                  // Method value:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
       4: areturn

  public static <T> T result(java.util.concurrent.CompletableFuture<T>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getstatic     #4                  // Field DEFAULT_EXCEPTION_HANDLER:Ljava/util/function/Function;
       4: invokestatic  #5                  // Method result:(Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Function;)Ljava/lang/Object;
       7: areturn

  public static <T> T result(java.util.concurrent.CompletableFuture<T>, long, java.util.concurrent.TimeUnit) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getstatic     #4                  // Field DEFAULT_EXCEPTION_HANDLER:Ljava/util/function/Function;
       4: lload_1
       5: aload_3
       6: invokestatic  #6                  // Method result:(Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Function;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
       9: areturn

  public static <T, ExceptionT extends java.lang.Throwable> T result(java.util.concurrent.CompletableFuture<T>, java.util.function.Function<java.lang.Throwable, ExceptionT>) throws ExceptionT;
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method java/util/concurrent/CompletableFuture.get:()Ljava/lang/Object;
       4: areturn
       5: astore_2
       6: invokestatic  #9                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       9: invokevirtual #10                 // Method java/lang/Thread.interrupt:()V
      12: aload_2
      13: athrow
      14: astore_2
      15: aload_1
      16: aload_2
      17: invokevirtual #12                 // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
      20: invokeinterface #13,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #113                // class java/lang/Throwable
      28: astore_3
      29: aconst_null
      30: aload_3
      31: if_acmpne     36
      34: aconst_null
      35: areturn
      36: aload_3
      37: athrow
      38: astore_2
      39: aload_2
      40: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/InterruptedException
           0     4    14   Class java/util/concurrent/ExecutionException
           0     4    38   Class java/lang/InterruptedException
           5    35    38   Class java/lang/InterruptedException
          36    38    38   Class java/lang/InterruptedException

  public static <T, ExceptionT extends java.lang.Throwable> T result(java.util.concurrent.CompletableFuture<T>, java.util.function.Function<java.lang.Throwable, ExceptionT>, long, java.util.concurrent.TimeUnit) throws ExceptionT, java/util/concurrent/TimeoutException;
    Code:
       0: aload_0
       1: lload_2
       2: aload         4
       4: invokevirtual #16                 // Method java/util/concurrent/CompletableFuture.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
       7: areturn
       8: astore        5
      10: invokestatic  #9                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      13: invokevirtual #10                 // Method java/lang/Thread.interrupt:()V
      16: aload         5
      18: athrow
      19: astore        5
      21: aload_1
      22: aload         5
      24: invokevirtual #12                 // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
      27: invokeinterface #13,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #113                // class java/lang/Throwable
      35: astore        6
      37: aconst_null
      38: aload         6
      40: if_acmpne     45
      43: aconst_null
      44: areturn
      45: aload         6
      47: athrow
      48: astore        5
      50: aload         5
      52: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/InterruptedException
           0     7    19   Class java/util/concurrent/ExecutionException
           0     7    48   Class java/lang/InterruptedException
           8    44    48   Class java/lang/InterruptedException
          45    48    48   Class java/lang/InterruptedException

  public static <T> java.util.concurrent.CompletableFuture<T> createFuture();
    Code:
       0: new           #114                // class java/util/concurrent/CompletableFuture
       3: dup
       4: invokespecial #18                 // Method java/util/concurrent/CompletableFuture."<init>":()V
       7: areturn

  public static <T> java.util.concurrent.CompletableFuture<T> value(T);
    Code:
       0: aload_0
       1: invokestatic  #19                 // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
       4: areturn

  public static <T> java.util.concurrent.CompletableFuture<T> exception(java.lang.Throwable);
    Code:
       0: invokestatic  #20                 // Method createFuture:()Ljava/util/concurrent/CompletableFuture;
       3: astore_1
       4: aload_1
       5: aload_0
       6: invokevirtual #21                 // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
       9: pop
      10: aload_1
      11: areturn

  public static <T> void complete(java.util.concurrent.CompletableFuture<T>, T);
    Code:
       0: aconst_null
       1: aload_0
       2: if_acmpne     6
       5: return
       6: aload_0
       7: aload_1
       8: invokevirtual #22                 // Method java/util/concurrent/CompletableFuture.complete:(Ljava/lang/Object;)Z
      11: pop
      12: return

  public static <T> void completeExceptionally(java.util.concurrent.CompletableFuture<T>, java.lang.Throwable);
    Code:
       0: aconst_null
       1: aload_0
       2: if_acmpne     6
       5: return
       6: aload_0
       7: aload_1
       8: invokevirtual #21                 // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
      11: pop
      12: return

  public static <T> java.util.concurrent.CompletableFuture<T> whenCompleteAsync(java.util.concurrent.CompletableFuture<T>, java.util.function.BiConsumer<? super T, ? super java.lang.Throwable>, org.apache.bookkeeper.common.util.OrderedScheduler, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #23                 // Method org/apache/bookkeeper/common/util/OrderedScheduler.chooseThread:(Ljava/lang/Object;)Lcom/google/common/util/concurrent/ListeningScheduledExecutorService;
       7: invokevirtual #24                 // Method java/util/concurrent/CompletableFuture.whenCompleteAsync:(Ljava/util/function/BiConsumer;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
      10: areturn

  public static <T> java.util.concurrent.CompletableFuture<java.util.List<T>> collect(java.util.List<java.util.concurrent.CompletableFuture<T>>);
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #25,  1           // InterfaceMethod java/util/List.size:()I
       7: anewarray     #114                // class java/util/concurrent/CompletableFuture
      10: invokeinterface #26,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      15: checkcast     #27                 // class "[Ljava/util/concurrent/CompletableFuture;"
      18: invokestatic  #28                 // Method java/util/concurrent/CompletableFuture.allOf:([Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture;
      21: astore_1
      22: aload_1
      23: aload_0
      24: invokedynamic #29,  0             // InvokeDynamic #0:apply:(Ljava/util/List;)Ljava/util/function/Function;
      29: invokevirtual #30                 // Method java/util/concurrent/CompletableFuture.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      32: areturn

  public static <T> void proxyTo(java.util.concurrent.CompletableFuture<T>, java.util.concurrent.CompletableFuture<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #31,  0             // InvokeDynamic #1:accept:(Ljava/util/concurrent/CompletableFuture;)Ljava/util/function/BiConsumer;
       7: invokevirtual #32                 // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
      10: pop
      11: return

  public static <T, R> java.util.concurrent.CompletableFuture<java.util.List<R>> processList(java.util.List<T>, java.util.function.Function<T, java.util.concurrent.CompletableFuture<R>>, java.util.concurrent.ExecutorService);
    Code:
       0: new           #170                // class org/apache/bookkeeper/common/concurrent/FutureUtils$ListFutureProcessor
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #34                 // Method org/apache/bookkeeper/common/concurrent/FutureUtils$ListFutureProcessor."<init>":(Ljava/util/List;Ljava/util/function/Function;Ljava/util/concurrent/ExecutorService;)V
      10: astore_3
      11: aconst_null
      12: aload_2
      13: if_acmpeq     27
      16: aload_2
      17: aload_3
      18: invokeinterface #35,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
      23: pop
      24: goto          31
      27: aload_3
      28: invokevirtual #36                 // Method org/apache/bookkeeper/common/concurrent/FutureUtils$ListFutureProcessor.run:()V
      31: aload_3
      32: invokestatic  #37                 // Method org/apache/bookkeeper/common/concurrent/FutureUtils$ListFutureProcessor.access$100:(Lorg/apache/bookkeeper/common/concurrent/FutureUtils$ListFutureProcessor;)Ljava/util/concurrent/CompletableFuture;
      35: areturn

  public static <T> java.util.concurrent.CompletableFuture<T> within(java.util.concurrent.CompletableFuture<T>, long, java.util.concurrent.TimeUnit, java.lang.Throwable, org.apache.bookkeeper.common.util.OrderedScheduler, java.lang.Object);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: iflt          13
       6: aload_0
       7: invokevirtual #38                 // Method java/util/concurrent/CompletableFuture.isDone:()Z
      10: ifeq          15
      13: aload_0
      14: areturn
      15: aload         5
      17: aload         6
      19: aload_0
      20: aload         4
      22: invokedynamic #39,  0             // InvokeDynamic #2:safeRun:(Ljava/util/concurrent/CompletableFuture;Ljava/lang/Throwable;)Lorg/apache/bookkeeper/common/util/SafeRunnable;
      27: lload_1
      28: aload_3
      29: invokevirtual #40                 // Method org/apache/bookkeeper/common/util/OrderedScheduler.scheduleOrdered:(Ljava/lang/Object;Lorg/apache/bookkeeper/common/util/SafeRunnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      32: astore        7
      34: aload_0
      35: aload         7
      37: invokedynamic #41,  0             // InvokeDynamic #3:accept:(Ljava/util/concurrent/ScheduledFuture;)Ljava/util/function/BiConsumer;
      42: invokevirtual #32                 // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
      45: pop
      46: aload_0
      47: areturn

  public static <T> java.util.concurrent.CompletableFuture<java.lang.Void> ignore(java.util.concurrent.CompletableFuture<T>);
    Code:
       0: aload_0
       1: aconst_null
       2: invokestatic  #42                 // Method ignore:(Ljava/util/concurrent/CompletableFuture;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
       5: areturn

  public static <T> java.util.concurrent.CompletableFuture<java.lang.Void> ignore(java.util.concurrent.CompletableFuture<T>, java.lang.String);
    Code:
       0: new           #114                // class java/util/concurrent/CompletableFuture
       3: dup
       4: invokespecial #18                 // Method java/util/concurrent/CompletableFuture."<init>":()V
       7: astore_2
       8: aload_0
       9: new           #43                 // class org/apache/bookkeeper/common/concurrent/FutureUtils$1
      12: dup
      13: aload_2
      14: aload_1
      15: invokespecial #44                 // Method org/apache/bookkeeper/common/concurrent/FutureUtils$1."<init>":(Ljava/util/concurrent/CompletableFuture;Ljava/lang/String;)V
      18: invokevirtual #32                 // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
      21: pop
      22: aload_2
      23: areturn

  public static <T> java.util.concurrent.CompletableFuture<T> ensure(java.util.concurrent.CompletableFuture<T>, java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #45,  0             // InvokeDynamic #4:accept:(Ljava/lang/Runnable;)Ljava/util/function/BiConsumer;
       7: invokevirtual #32                 // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
      10: areturn

  public static <T> java.util.concurrent.CompletableFuture<T> rescue(java.util.concurrent.CompletableFuture<T>, java.util.function.Function<java.lang.Throwable, java.util.concurrent.CompletableFuture<T>>);
    Code:
       0: invokestatic  #20                 // Method createFuture:()Ljava/util/concurrent/CompletableFuture;
       3: astore_2
       4: aload_0
       5: aload_2
       6: aload_1
       7: invokedynamic #46,  0             // InvokeDynamic #5:accept:(Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Function;)Ljava/util/function/BiConsumer;
      12: invokevirtual #32                 // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
      15: pop
      16: aload_2
      17: areturn

  public static <T> java.util.concurrent.CompletableFuture<T> stats(java.util.concurrent.CompletableFuture<T>, org.apache.bookkeeper.stats.OpStatsLogger, com.google.common.base.Stopwatch);
    Code:
       0: aload_0
       1: new           #47                 // class org/apache/bookkeeper/common/stats/OpStatsListener
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #48                 // Method org/apache/bookkeeper/common/stats/OpStatsListener."<init>":(Lorg/apache/bookkeeper/stats/OpStatsLogger;Lcom/google/common/base/Stopwatch;)V
      10: invokevirtual #32                 // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
      13: areturn

  private static void lambda$rescue$6(java.util.concurrent.CompletableFuture, java.util.function.Function, java.lang.Object, java.lang.Throwable);
    Code:
       0: aconst_null
       1: aload_3
       2: if_acmpne     12
       5: aload_0
       6: aload_2
       7: invokevirtual #22                 // Method java/util/concurrent/CompletableFuture.complete:(Ljava/lang/Object;)Z
      10: pop
      11: return
      12: aload_1
      13: aload_3
      14: invokeinterface #13,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #114                // class java/util/concurrent/CompletableFuture
      22: aload_0
      23: invokestatic  #49                 // Method proxyTo:(Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)V
      26: return

  private static void lambda$ensure$5(java.lang.Runnable, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokeinterface #50,  1           // InterfaceMethod java/lang/Runnable.run:()V
       6: return

  private static void lambda$within$4(java.util.concurrent.ScheduledFuture, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: iconst_1
       2: invokeinterface #51,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
       7: ifne          20
      10: getstatic     #1                  // Field log:Lorg/slf4j/Logger;
      13: ldc           #52                 // String Failed to cancel the timeout task
      15: invokeinterface #53,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      20: return

  private static void lambda$within$3(java.util.concurrent.CompletableFuture, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method java/util/concurrent/CompletableFuture.isDone:()Z
       4: ifne          26
       7: aload_0
       8: aload_1
       9: invokevirtual #21                 // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
      12: ifeq          26
      15: getstatic     #1                  // Field log:Lorg/slf4j/Logger;
      18: ldc           #54                 // String Raise exception
      20: aload_1
      21: invokeinterface #55,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Throwable;)V
      26: return

  private static void lambda$proxyTo$2(java.util.concurrent.CompletableFuture, java.lang.Object, java.lang.Throwable);
    Code:
       0: aconst_null
       1: aload_2
       2: if_acmpne     14
       5: aload_0
       6: aload_1
       7: invokevirtual #22                 // Method java/util/concurrent/CompletableFuture.complete:(Ljava/lang/Object;)Z
      10: pop
      11: goto          20
      14: aload_0
      15: aload_2
      16: invokevirtual #21                 // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
      19: pop
      20: return

  private static java.util.List lambda$collect$1(java.util.List, java.lang.Void);
    Code:
       0: aload_0
       1: invokeinterface #56,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #57,  0             // InvokeDynamic #6:apply:()Ljava/util/function/Function;
      11: invokeinterface #58,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      16: invokestatic  #59                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      19: invokeinterface #60,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      24: checkcast     #61                 // class java/util/List
      27: areturn

  private static java.lang.Exception lambda$static$0(java.lang.Throwable);
    Code:
       0: aload_0
       1: instanceof    #62                 // class java/lang/Exception
       4: ifeq          12
       7: aload_0
       8: checkcast     #62                 // class java/lang/Exception
      11: areturn
      12: new           #62                 // class java/lang/Exception
      15: dup
      16: aload_0
      17: invokespecial #63                 // Method java/lang/Exception."<init>":(Ljava/lang/Throwable;)V
      20: areturn

  static org.slf4j.Logger access$000();
    Code:
       0: getstatic     #1                  // Field log:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #64                 // class org/apache/bookkeeper/common/concurrent/FutureUtils
       2: invokestatic  #65                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #1                  // Field log:Lorg/slf4j/Logger;
       8: invokedynamic #66,  0             // InvokeDynamic #7:apply:()Ljava/util/function/Function;
      13: putstatic     #4                  // Field DEFAULT_EXCEPTION_HANDLER:Ljava/util/function/Function;
      16: return
}
