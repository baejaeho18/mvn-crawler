Compiled from "ResponseFiltersInterceptor.java"
public class org.asynchttpclient.netty.handler.intercept.ResponseFiltersInterceptor {
  private final org.asynchttpclient.AsyncHttpClientConfig config;

  private final org.asynchttpclient.netty.request.NettyRequestSender requestSender;

  org.asynchttpclient.netty.handler.intercept.ResponseFiltersInterceptor(org.asynchttpclient.AsyncHttpClientConfig, org.asynchttpclient.netty.request.NettyRequestSender);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field config:Lorg/asynchttpclient/AsyncHttpClientConfig;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field requestSender:Lorg/asynchttpclient/netty/request/NettyRequestSender;
      14: return

  public boolean exitAfterProcessingFilters(io.netty.channel.Channel, org.asynchttpclient.netty.NettyResponseFuture<?>, org.asynchttpclient.AsyncHandler<?>, org.asynchttpclient.HttpResponseStatus, io.netty.handler.codec.http.HttpHeaders);
    Code:
       0: new           #4                  // class org/asynchttpclient/filter/FilterContext$FilterContextBuilder
       3: dup
       4: invokespecial #5                  // Method org/asynchttpclient/filter/FilterContext$FilterContextBuilder."<init>":()V
       7: aload_3
       8: invokevirtual #6                  // Method org/asynchttpclient/filter/FilterContext$FilterContextBuilder.asyncHandler:(Lorg/asynchttpclient/AsyncHandler;)Lorg/asynchttpclient/filter/FilterContext$FilterContextBuilder;
      11: aload_2
      12: invokevirtual #7                  // Method org/asynchttpclient/netty/NettyResponseFuture.getCurrentRequest:()Lorg/asynchttpclient/Request;
      15: invokevirtual #8                  // Method org/asynchttpclient/filter/FilterContext$FilterContextBuilder.request:(Lorg/asynchttpclient/Request;)Lorg/asynchttpclient/filter/FilterContext$FilterContextBuilder;
      18: aload         4
      20: invokevirtual #9                  // Method org/asynchttpclient/filter/FilterContext$FilterContextBuilder.responseStatus:(Lorg/asynchttpclient/HttpResponseStatus;)Lorg/asynchttpclient/filter/FilterContext$FilterContextBuilder;
      23: aload         5
      25: invokevirtual #10                 // Method org/asynchttpclient/filter/FilterContext$FilterContextBuilder.responseHeaders:(Lio/netty/handler/codec/http/HttpHeaders;)Lorg/asynchttpclient/filter/FilterContext$FilterContextBuilder;
      28: invokevirtual #11                 // Method org/asynchttpclient/filter/FilterContext$FilterContextBuilder.build:()Lorg/asynchttpclient/filter/FilterContext;
      31: astore        6
      33: aload_0
      34: getfield      #2                  // Field config:Lorg/asynchttpclient/AsyncHttpClientConfig;
      37: invokeinterface #12,  1           // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getResponseFilters:()Ljava/util/List;
      42: invokeinterface #13,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      47: astore        7
      49: aload         7
      51: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      56: ifeq          109
      59: aload         7
      61: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      66: checkcast     #16                 // class org/asynchttpclient/filter/ResponseFilter
      69: astore        8
      71: aload         8
      73: aload         6
      75: invokeinterface #17,  2           // InterfaceMethod org/asynchttpclient/filter/ResponseFilter.filter:(Lorg/asynchttpclient/filter/FilterContext;)Lorg/asynchttpclient/filter/FilterContext;
      80: astore        6
      82: ldc           #18                 // String fc
      84: ldc           #19                 // String filterContext
      86: invokestatic  #20                 // Method org/asynchttpclient/util/Assertions.assertNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      89: pop
      90: goto          106
      93: astore        9
      95: aload_0
      96: getfield      #3                  // Field requestSender:Lorg/asynchttpclient/netty/request/NettyRequestSender;
      99: aload_1
     100: aload_2
     101: aload         9
     103: invokevirtual #22                 // Method org/asynchttpclient/netty/request/NettyRequestSender.abort:(Lio/netty/channel/Channel;Lorg/asynchttpclient/netty/NettyResponseFuture;Ljava/lang/Throwable;)V
     106: goto          49
     109: aload_2
     110: aload         6
     112: invokevirtual #23                 // Method org/asynchttpclient/filter/FilterContext.getAsyncHandler:()Lorg/asynchttpclient/AsyncHandler;
     115: invokevirtual #24                 // Method org/asynchttpclient/netty/NettyResponseFuture.setAsyncHandler:(Lorg/asynchttpclient/AsyncHandler;)V
     118: aload         6
     120: invokevirtual #25                 // Method org/asynchttpclient/filter/FilterContext.replayRequest:()Z
     123: ifeq          139
     126: aload_0
     127: getfield      #3                  // Field requestSender:Lorg/asynchttpclient/netty/request/NettyRequestSender;
     130: aload_2
     131: aload         6
     133: aload_1
     134: invokevirtual #26                 // Method org/asynchttpclient/netty/request/NettyRequestSender.replayRequest:(Lorg/asynchttpclient/netty/NettyResponseFuture;Lorg/asynchttpclient/filter/FilterContext;Lio/netty/channel/Channel;)V
     137: iconst_1
     138: ireturn
     139: iconst_0
     140: ireturn
    Exception table:
       from    to  target type
          71    90    93   Class org/asynchttpclient/filter/FilterException
}
