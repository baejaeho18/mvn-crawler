Compiled from "RequestHostnameResolver.java"
public final class org.asynchttpclient.resolver.RequestHostnameResolver extends java.lang.Enum<org.asynchttpclient.resolver.RequestHostnameResolver> {
  public static final org.asynchttpclient.resolver.RequestHostnameResolver INSTANCE;

  private static final org.slf4j.Logger LOGGER;

  private static final org.asynchttpclient.resolver.RequestHostnameResolver[] $VALUES;

  public static org.asynchttpclient.resolver.RequestHostnameResolver[] values();
    Code:
       0: getstatic     #2                  // Field $VALUES:[Lorg/asynchttpclient/resolver/RequestHostnameResolver;
       3: invokevirtual #3                  // Method "[Lorg/asynchttpclient/resolver/RequestHostnameResolver;".clone:()Ljava/lang/Object;
       6: checkcast     #4                  // class "[Lorg/asynchttpclient/resolver/RequestHostnameResolver;"
       9: areturn

  public static org.asynchttpclient.resolver.RequestHostnameResolver valueOf(java.lang.String);
    Code:
       0: ldc           #5                  // class org/asynchttpclient/resolver/RequestHostnameResolver
       2: aload_0
       3: invokestatic  #6                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #5                  // class org/asynchttpclient/resolver/RequestHostnameResolver
       9: areturn

  private org.asynchttpclient.resolver.RequestHostnameResolver();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #7                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  public io.netty.util.concurrent.Future<java.util.List<java.net.InetSocketAddress>> resolve(io.netty.resolver.NameResolver<java.net.InetAddress>, java.net.InetSocketAddress, org.asynchttpclient.AsyncHandler<?>);
    Code:
       0: aload_2
       1: invokevirtual #8                  // Method java/net/InetSocketAddress.getHostString:()Ljava/lang/String;
       4: astore        4
       6: aload_2
       7: invokevirtual #9                  // Method java/net/InetSocketAddress.getPort:()I
      10: istore        5
      12: getstatic     #10                 // Field io/netty/util/concurrent/ImmediateEventExecutor.INSTANCE:Lio/netty/util/concurrent/ImmediateEventExecutor;
      15: invokevirtual #11                 // Method io/netty/util/concurrent/ImmediateEventExecutor.newPromise:()Lio/netty/util/concurrent/Promise;
      18: astore        6
      20: aload_3
      21: aload         4
      23: invokeinterface #12,  2           // InterfaceMethod org/asynchttpclient/AsyncHandler.onHostnameResolutionAttempt:(Ljava/lang/String;)V
      28: goto          58
      31: astore        7
      33: getstatic     #1                  // Field LOGGER:Lorg/slf4j/Logger;
      36: ldc           #14                 // String onHostnameResolutionAttempt crashed
      38: aload         7
      40: invokeinterface #15,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      45: aload         6
      47: aload         7
      49: invokeinterface #16,  2           // InterfaceMethod io/netty/util/concurrent/Promise.tryFailure:(Ljava/lang/Throwable;)Z
      54: pop
      55: aload         6
      57: areturn
      58: aload_1
      59: aload         4
      61: invokeinterface #17,  2           // InterfaceMethod io/netty/resolver/NameResolver.resolveAll:(Ljava/lang/String;)Lio/netty/util/concurrent/Future;
      66: astore        7
      68: aload         7
      70: new           #18                 // class org/asynchttpclient/resolver/RequestHostnameResolver$1
      73: dup
      74: aload_0
      75: iload         5
      77: aload_3
      78: aload         4
      80: aload         6
      82: invokespecial #19                 // Method org/asynchttpclient/resolver/RequestHostnameResolver$1."<init>":(Lorg/asynchttpclient/resolver/RequestHostnameResolver;ILorg/asynchttpclient/AsyncHandler;Ljava/lang/String;Lio/netty/util/concurrent/Promise;)V
      85: invokeinterface #20,  2           // InterfaceMethod io/netty/util/concurrent/Future.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/util/concurrent/Future;
      90: pop
      91: aload         6
      93: areturn
    Exception table:
       from    to  target type
          20    28    31   Class java/lang/Exception

  static org.slf4j.Logger access$000();
    Code:
       0: getstatic     #1                  // Field LOGGER:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: new           #5                  // class org/asynchttpclient/resolver/RequestHostnameResolver
       3: dup
       4: ldc           #21                 // String INSTANCE
       6: iconst_0
       7: invokespecial #22                 // Method "<init>":(Ljava/lang/String;I)V
      10: putstatic     #23                 // Field INSTANCE:Lorg/asynchttpclient/resolver/RequestHostnameResolver;
      13: iconst_1
      14: anewarray     #5                  // class org/asynchttpclient/resolver/RequestHostnameResolver
      17: dup
      18: iconst_0
      19: getstatic     #23                 // Field INSTANCE:Lorg/asynchttpclient/resolver/RequestHostnameResolver;
      22: aastore
      23: putstatic     #2                  // Field $VALUES:[Lorg/asynchttpclient/resolver/RequestHostnameResolver;
      26: ldc           #5                  // class org/asynchttpclient/resolver/RequestHostnameResolver
      28: invokestatic  #24                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      31: putstatic     #1                  // Field LOGGER:Lorg/slf4j/Logger;
      34: return
}
