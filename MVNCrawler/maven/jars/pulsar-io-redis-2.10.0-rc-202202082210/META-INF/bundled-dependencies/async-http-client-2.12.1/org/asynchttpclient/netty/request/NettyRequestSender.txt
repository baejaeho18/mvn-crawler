Compiled from "NettyRequestSender.java"
public final class org.asynchttpclient.netty.request.NettyRequestSender {
  private static final org.slf4j.Logger LOGGER;

  private final org.asynchttpclient.AsyncHttpClientConfig config;

  private final org.asynchttpclient.netty.channel.ChannelManager channelManager;

  private final org.asynchttpclient.netty.channel.ConnectionSemaphore connectionSemaphore;

  private final io.netty.util.Timer nettyTimer;

  private final org.asynchttpclient.AsyncHttpClientState clientState;

  private final org.asynchttpclient.netty.request.NettyRequestFactory requestFactory;

  public org.asynchttpclient.netty.request.NettyRequestSender(org.asynchttpclient.AsyncHttpClientConfig, org.asynchttpclient.netty.channel.ChannelManager, io.netty.util.Timer, org.asynchttpclient.AsyncHttpClientState);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field config:Lorg/asynchttpclient/AsyncHttpClientConfig;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field channelManager:Lorg/asynchttpclient/netty/channel/ChannelManager;
      14: aload_0
      15: aload_1
      16: invokeinterface #6,  1            // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getConnectionSemaphoreFactory:()Lorg/asynchttpclient/netty/channel/ConnectionSemaphoreFactory;
      21: ifnonnull     38
      24: new           #7                  // class org/asynchttpclient/netty/channel/DefaultConnectionSemaphoreFactory
      27: dup
      28: invokespecial #8                  // Method org/asynchttpclient/netty/channel/DefaultConnectionSemaphoreFactory."<init>":()V
      31: aload_1
      32: invokevirtual #9                  // Method org/asynchttpclient/netty/channel/DefaultConnectionSemaphoreFactory.newConnectionSemaphore:(Lorg/asynchttpclient/AsyncHttpClientConfig;)Lorg/asynchttpclient/netty/channel/ConnectionSemaphore;
      35: goto          50
      38: aload_1
      39: invokeinterface #6,  1            // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getConnectionSemaphoreFactory:()Lorg/asynchttpclient/netty/channel/ConnectionSemaphoreFactory;
      44: aload_1
      45: invokeinterface #10,  2           // InterfaceMethod org/asynchttpclient/netty/channel/ConnectionSemaphoreFactory.newConnectionSemaphore:(Lorg/asynchttpclient/AsyncHttpClientConfig;)Lorg/asynchttpclient/netty/channel/ConnectionSemaphore;
      50: putfield      #2                  // Field connectionSemaphore:Lorg/asynchttpclient/netty/channel/ConnectionSemaphore;
      53: aload_0
      54: aload_3
      55: putfield      #11                 // Field nettyTimer:Lio/netty/util/Timer;
      58: aload_0
      59: aload         4
      61: putfield      #1                  // Field clientState:Lorg/asynchttpclient/AsyncHttpClientState;
      64: aload_0
      65: new           #12                 // class org/asynchttpclient/netty/request/NettyRequestFactory
      68: dup
      69: aload_1
      70: invokespecial #13                 // Method org/asynchttpclient/netty/request/NettyRequestFactory."<init>":(Lorg/asynchttpclient/AsyncHttpClientConfig;)V
      73: putfield      #14                 // Field requestFactory:Lorg/asynchttpclient/netty/request/NettyRequestFactory;
      76: return

  public <T> org.asynchttpclient.ListenableFuture<T> sendRequest(org.asynchttpclient.Request, org.asynchttpclient.AsyncHandler<T>, org.asynchttpclient.netty.NettyResponseFuture<T>);
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method isClosed:()Z
       4: ifeq          17
       7: new           #16                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #17                 // String Closed
      13: invokespecial #18                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: aload_2
      20: invokespecial #19                 // Method validateWebSocketRequest:(Lorg/asynchttpclient/Request;Lorg/asynchttpclient/AsyncHandler;)V
      23: aload_0
      24: getfield      #5                  // Field config:Lorg/asynchttpclient/AsyncHttpClientConfig;
      27: aload_1
      28: invokestatic  #20                 // Method org/asynchttpclient/util/ProxyUtils.getProxyServer:(Lorg/asynchttpclient/AsyncHttpClientConfig;Lorg/asynchttpclient/Request;)Lorg/asynchttpclient/proxy/ProxyServer;
      31: astore        4
      33: aload         4
      35: ifnull        114
      38: aload         4
      40: invokevirtual #21                 // Method org/asynchttpclient/proxy/ProxyServer.getProxyType:()Lorg/asynchttpclient/proxy/ProxyType;
      43: invokevirtual #22                 // Method org/asynchttpclient/proxy/ProxyType.isHttp:()Z
      46: ifeq          114
      49: aload_1
      50: invokeinterface #23,  1           // InterfaceMethod org/asynchttpclient/Request.getUri:()Lorg/asynchttpclient/uri/Uri;
      55: invokevirtual #24                 // Method org/asynchttpclient/uri/Uri.isSecured:()Z
      58: ifne          73
      61: aload_1
      62: invokeinterface #23,  1           // InterfaceMethod org/asynchttpclient/Request.getUri:()Lorg/asynchttpclient/uri/Uri;
      67: invokevirtual #25                 // Method org/asynchttpclient/uri/Uri.isWebSocket:()Z
      70: ifeq          114
      73: aload_0
      74: aload_1
      75: aload_3
      76: invokespecial #26                 // Method isConnectAlreadyDone:(Lorg/asynchttpclient/Request;Lorg/asynchttpclient/netty/NettyResponseFuture;)Z
      79: ifne          114
      82: aload_3
      83: ifnull        104
      86: aload_3
      87: invokevirtual #27                 // Method org/asynchttpclient/netty/NettyResponseFuture.isConnectAllowed:()Z
      90: ifeq          104
      93: aload_0
      94: aload_1
      95: aload_2
      96: aload_3
      97: aload         4
      99: iconst_1
     100: invokespecial #28                 // Method sendRequestWithCertainForceConnect:(Lorg/asynchttpclient/Request;Lorg/asynchttpclient/AsyncHandler;Lorg/asynchttpclient/netty/NettyResponseFuture;Lorg/asynchttpclient/proxy/ProxyServer;Z)Lorg/asynchttpclient/ListenableFuture;
     103: areturn
     104: aload_0
     105: aload_1
     106: aload_2
     107: aload_3
     108: aload         4
     110: invokespecial #29                 // Method sendRequestThroughProxy:(Lorg/asynchttpclient/Request;Lorg/asynchttpclient/AsyncHandler;Lorg/asynchttpclient/netty/NettyResponseFuture;Lorg/asynchttpclient/proxy/ProxyServer;)Lorg/asynchttpclient/ListenableFuture;
     113: areturn
     114: aload_0
     115: aload_1
     116: aload_2
     117: aload_3
     118: aload         4
     120: iconst_0
     121: invokespecial #28                 // Method sendRequestWithCertainForceConnect:(Lorg/asynchttpclient/Request;Lorg/asynchttpclient/AsyncHandler;Lorg/asynchttpclient/netty/NettyResponseFuture;Lorg/asynchttpclient/proxy/ProxyServer;Z)Lorg/asynchttpclient/ListenableFuture;
     124: areturn

  private boolean isConnectAlreadyDone(org.asynchttpclient.Request, org.asynchttpclient.netty.NettyResponseFuture<?>);
    Code:
       0: aload_2
       1: ifnull        48
       4: aload_2
       5: invokevirtual #30                 // Method org/asynchttpclient/netty/NettyResponseFuture.getNettyRequest:()Lorg/asynchttpclient/netty/request/NettyRequest;
       8: ifnull        48
      11: aload_2
      12: invokevirtual #30                 // Method org/asynchttpclient/netty/NettyResponseFuture.getNettyRequest:()Lorg/asynchttpclient/netty/request/NettyRequest;
      15: invokevirtual #31                 // Method org/asynchttpclient/netty/request/NettyRequest.getHttpRequest:()Lio/netty/handler/codec/http/HttpRequest;
      18: invokeinterface #32,  1           // InterfaceMethod io/netty/handler/codec/http/HttpRequest.method:()Lio/netty/handler/codec/http/HttpMethod;
      23: getstatic     #33                 // Field io/netty/handler/codec/http/HttpMethod.CONNECT:Lio/netty/handler/codec/http/HttpMethod;
      26: if_acmpne     48
      29: aload_1
      30: invokeinterface #34,  1           // InterfaceMethod org/asynchttpclient/Request.getMethod:()Ljava/lang/String;
      35: getstatic     #35                 // Field org/asynchttpclient/util/HttpConstants$Methods.CONNECT:Ljava/lang/String;
      38: invokevirtual #36                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      41: ifne          48
      44: iconst_1
      45: goto          49
      48: iconst_0
      49: ireturn

  private <T> org.asynchttpclient.ListenableFuture<T> sendRequestWithCertainForceConnect(org.asynchttpclient.Request, org.asynchttpclient.AsyncHandler<T>, org.asynchttpclient.netty.NettyResponseFuture<T>, org.asynchttpclient.proxy.ProxyServer, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: iload         5
       8: invokespecial #37                 // Method newNettyRequestAndResponseFuture:(Lorg/asynchttpclient/Request;Lorg/asynchttpclient/AsyncHandler;Lorg/asynchttpclient/netty/NettyResponseFuture;Lorg/asynchttpclient/proxy/ProxyServer;Z)Lorg/asynchttpclient/netty/NettyResponseFuture;
      11: astore        6
      13: aload_0
      14: aload_3
      15: aload_1
      16: aload         4
      18: aload_2
      19: invokespecial #38                 // Method getOpenChannel:(Lorg/asynchttpclient/netty/NettyResponseFuture;Lorg/asynchttpclient/Request;Lorg/asynchttpclient/proxy/ProxyServer;Lorg/asynchttpclient/AsyncHandler;)Lio/netty/channel/Channel;
      22: astore        7
      24: aload         7
      26: invokestatic  #39                 // Method org/asynchttpclient/netty/channel/Channels.isChannelActive:(Lio/netty/channel/Channel;)Z
      29: ifeq          44
      32: aload_0
      33: aload         6
      35: aload_2
      36: aload         7
      38: invokespecial #40                 // Method sendRequestWithOpenChannel:(Lorg/asynchttpclient/netty/NettyResponseFuture;Lorg/asynchttpclient/AsyncHandler;Lio/netty/channel/Channel;)Lorg/asynchttpclient/ListenableFuture;
      41: goto          54
      44: aload_0
      45: aload_1
      46: aload         4
      48: aload         6
      50: aload_2
      51: invokespecial #41                 // Method sendRequestWithNewChannel:(Lorg/asynchttpclient/Request;Lorg/asynchttpclient/proxy/ProxyServer;Lorg/asynchttpclient/netty/NettyResponseFuture;Lorg/asynchttpclient/AsyncHandler;)Lorg/asynchttpclient/ListenableFuture;
      54: areturn

  private <T> org.asynchttpclient.ListenableFuture<T> sendRequestThroughProxy(org.asynchttpclient.Request, org.asynchttpclient.AsyncHandler<T>, org.asynchttpclient.netty.NettyResponseFuture<T>, org.asynchttpclient.proxy.ProxyServer);
    Code:
       0: aconst_null
       1: astore        5
       3: iconst_0
       4: istore        6
       6: iload         6
       8: iconst_3
       9: if_icmpge     72
      12: aload_0
      13: aload_3
      14: aload_1
      15: aload         4
      17: aload_2
      18: invokespecial #38                 // Method getOpenChannel:(Lorg/asynchttpclient/netty/NettyResponseFuture;Lorg/asynchttpclient/Request;Lorg/asynchttpclient/proxy/ProxyServer;Lorg/asynchttpclient/AsyncHandler;)Lio/netty/channel/Channel;
      21: astore        7
      23: aload         7
      25: ifnonnull     31
      28: goto          72
      31: aload         5
      33: ifnonnull     48
      36: aload_0
      37: aload_1
      38: aload_2
      39: aload_3
      40: aload         4
      42: iconst_0
      43: invokespecial #37                 // Method newNettyRequestAndResponseFuture:(Lorg/asynchttpclient/Request;Lorg/asynchttpclient/AsyncHandler;Lorg/asynchttpclient/netty/NettyResponseFuture;Lorg/asynchttpclient/proxy/ProxyServer;Z)Lorg/asynchttpclient/netty/NettyResponseFuture;
      46: astore        5
      48: aload         7
      50: invokestatic  #39                 // Method org/asynchttpclient/netty/channel/Channels.isChannelActive:(Lio/netty/channel/Channel;)Z
      53: ifeq          66
      56: aload_0
      57: aload         5
      59: aload_2
      60: aload         7
      62: invokespecial #40                 // Method sendRequestWithOpenChannel:(Lorg/asynchttpclient/netty/NettyResponseFuture;Lorg/asynchttpclient/AsyncHandler;Lio/netty/channel/Channel;)Lorg/asynchttpclient/ListenableFuture;
      65: areturn
      66: iinc          6, 1
      69: goto          6
      72: aload_0
      73: aload_1
      74: aload_2
      75: aload_3
      76: aload         4
      78: iconst_1
      79: invokespecial #37                 // Method newNettyRequestAndResponseFuture:(Lorg/asynchttpclient/Request;Lorg/asynchttpclient/AsyncHandler;Lorg/asynchttpclient/netty/NettyResponseFuture;Lorg/asynchttpclient/proxy/ProxyServer;Z)Lorg/asynchttpclient/netty/NettyResponseFuture;
      82: astore        5
      84: aload_0
      85: aload_1
      86: aload         4
      88: aload         5
      90: aload_2
      91: invokespecial #41                 // Method sendRequestWithNewChannel:(Lorg/asynchttpclient/Request;Lorg/asynchttpclient/proxy/ProxyServer;Lorg/asynchttpclient/netty/NettyResponseFuture;Lorg/asynchttpclient/AsyncHandler;)Lorg/asynchttpclient/ListenableFuture;
      94: areturn

  private <T> org.asynchttpclient.netty.NettyResponseFuture<T> newNettyRequestAndResponseFuture(org.asynchttpclient.Request, org.asynchttpclient.AsyncHandler<T>, org.asynchttpclient.netty.NettyResponseFuture<T>, org.asynchttpclient.proxy.ProxyServer, boolean);
    Code:
       0: aload_3
       1: ifnull        13
       4: aload_3
       5: invokevirtual #42                 // Method org/asynchttpclient/netty/NettyResponseFuture.getRealm:()Lorg/asynchttpclient/Realm;
       8: astore        6
      10: goto          37
      13: aload_1
      14: invokeinterface #43,  1           // InterfaceMethod org/asynchttpclient/Request.getRealm:()Lorg/asynchttpclient/Realm;
      19: astore        6
      21: aload         6
      23: ifnonnull     37
      26: aload_0
      27: getfield      #5                  // Field config:Lorg/asynchttpclient/AsyncHttpClientConfig;
      30: invokeinterface #44,  1           // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getRealm:()Lorg/asynchttpclient/Realm;
      35: astore        6
      37: aconst_null
      38: astore        7
      40: aload_3
      41: ifnull        53
      44: aload_3
      45: invokevirtual #45                 // Method org/asynchttpclient/netty/NettyResponseFuture.getProxyRealm:()Lorg/asynchttpclient/Realm;
      48: astore        7
      50: goto          65
      53: aload         4
      55: ifnull        65
      58: aload         4
      60: invokevirtual #46                 // Method org/asynchttpclient/proxy/ProxyServer.getRealm:()Lorg/asynchttpclient/Realm;
      63: astore        7
      65: aload_0
      66: getfield      #14                 // Field requestFactory:Lorg/asynchttpclient/netty/request/NettyRequestFactory;
      69: aload_1
      70: iload         5
      72: aload         4
      74: aload         6
      76: aload         7
      78: invokevirtual #47                 // Method org/asynchttpclient/netty/request/NettyRequestFactory.newNettyRequest:(Lorg/asynchttpclient/Request;ZLorg/asynchttpclient/proxy/ProxyServer;Lorg/asynchttpclient/Realm;Lorg/asynchttpclient/Realm;)Lorg/asynchttpclient/netty/request/NettyRequest;
      81: astore        8
      83: aload_3
      84: ifnonnull     116
      87: aload_0
      88: aload_1
      89: aload_2
      90: aload         8
      92: aload         4
      94: invokespecial #48                 // Method newNettyResponseFuture:(Lorg/asynchttpclient/Request;Lorg/asynchttpclient/AsyncHandler;Lorg/asynchttpclient/netty/request/NettyRequest;Lorg/asynchttpclient/proxy/ProxyServer;)Lorg/asynchttpclient/netty/NettyResponseFuture;
      97: astore        9
      99: aload         9
     101: aload         6
     103: invokevirtual #49                 // Method org/asynchttpclient/netty/NettyResponseFuture.setRealm:(Lorg/asynchttpclient/Realm;)V
     106: aload         9
     108: aload         7
     110: invokevirtual #50                 // Method org/asynchttpclient/netty/NettyResponseFuture.setProxyRealm:(Lorg/asynchttpclient/Realm;)V
     113: aload         9
     115: areturn
     116: aload_3
     117: aload         8
     119: invokevirtual #51                 // Method org/asynchttpclient/netty/NettyResponseFuture.setNettyRequest:(Lorg/asynchttpclient/netty/request/NettyRequest;)V
     122: aload_3
     123: aload_1
     124: invokevirtual #52                 // Method org/asynchttpclient/netty/NettyResponseFuture.setCurrentRequest:(Lorg/asynchttpclient/Request;)V
     127: aload_3
     128: areturn

  private io.netty.channel.Channel getOpenChannel(org.asynchttpclient.netty.NettyResponseFuture<?>, org.asynchttpclient.Request, org.asynchttpclient.proxy.ProxyServer, org.asynchttpclient.AsyncHandler<?>);
    Code:
       0: aload_1
       1: ifnull        26
       4: aload_1
       5: invokevirtual #53                 // Method org/asynchttpclient/netty/NettyResponseFuture.isReuseChannel:()Z
       8: ifeq          26
      11: aload_1
      12: invokevirtual #54                 // Method org/asynchttpclient/netty/NettyResponseFuture.channel:()Lio/netty/channel/Channel;
      15: invokestatic  #39                 // Method org/asynchttpclient/netty/channel/Channels.isChannelActive:(Lio/netty/channel/Channel;)Z
      18: ifeq          26
      21: aload_1
      22: invokevirtual #54                 // Method org/asynchttpclient/netty/NettyResponseFuture.channel:()Lio/netty/channel/Channel;
      25: areturn
      26: aload_0
      27: aload_2
      28: aload_3
      29: aload         4
      31: invokespecial #55                 // Method pollPooledChannel:(Lorg/asynchttpclient/Request;Lorg/asynchttpclient/proxy/ProxyServer;Lorg/asynchttpclient/AsyncHandler;)Lio/netty/channel/Channel;
      34: areturn

  private <T> org.asynchttpclient.ListenableFuture<T> sendRequestWithOpenChannel(org.asynchttpclient.netty.NettyResponseFuture<T>, org.asynchttpclient.AsyncHandler<T>, io.netty.channel.Channel);
    Code:
       0: aload_2
       1: aload_3
       2: invokeinterface #56,  2           // InterfaceMethod org/asynchttpclient/AsyncHandler.onConnectionPooled:(Lio/netty/channel/Channel;)V
       7: goto          34
      10: astore        4
      12: getstatic     #58                 // Field LOGGER:Lorg/slf4j/Logger;
      15: ldc           #59                 // String onConnectionPooled crashed
      17: aload         4
      19: invokeinterface #60,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      24: aload_0
      25: aload_3
      26: aload_1
      27: aload         4
      29: invokevirtual #61                 // Method abort:(Lio/netty/channel/Channel;Lorg/asynchttpclient/netty/NettyResponseFuture;Ljava/lang/Throwable;)V
      32: aload_1
      33: areturn
      34: aload_3
      35: invokeinterface #62,  1           // InterfaceMethod io/netty/channel/Channel.remoteAddress:()Ljava/net/SocketAddress;
      40: astore        4
      42: aload         4
      44: ifnull        57
      47: aload_0
      48: aload_1
      49: aload         4
      51: checkcast     #63                 // class java/net/InetSocketAddress
      54: invokespecial #64                 // Method scheduleRequestTimeout:(Lorg/asynchttpclient/netty/NettyResponseFuture;Ljava/net/InetSocketAddress;)V
      57: aload_1
      58: getstatic     #65                 // Field org/asynchttpclient/netty/channel/ChannelState.POOLED:Lorg/asynchttpclient/netty/channel/ChannelState;
      61: invokevirtual #66                 // Method org/asynchttpclient/netty/NettyResponseFuture.setChannelState:(Lorg/asynchttpclient/netty/channel/ChannelState;)V
      64: aload_1
      65: aload_3
      66: iconst_0
      67: invokevirtual #67                 // Method org/asynchttpclient/netty/NettyResponseFuture.attachChannel:(Lio/netty/channel/Channel;Z)V
      70: getstatic     #58                 // Field LOGGER:Lorg/slf4j/Logger;
      73: invokeinterface #68,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      78: ifeq          128
      81: aload_1
      82: invokevirtual #30                 // Method org/asynchttpclient/netty/NettyResponseFuture.getNettyRequest:()Lorg/asynchttpclient/netty/request/NettyRequest;
      85: invokevirtual #31                 // Method org/asynchttpclient/netty/request/NettyRequest.getHttpRequest:()Lio/netty/handler/codec/http/HttpRequest;
      88: astore        5
      90: getstatic     #58                 // Field LOGGER:Lorg/slf4j/Logger;
      93: ldc           #69                 // String Using open Channel {} for {} \'{}\'
      95: iconst_3
      96: anewarray     #70                 // class java/lang/Object
      99: dup
     100: iconst_0
     101: aload_3
     102: aastore
     103: dup
     104: iconst_1
     105: aload         5
     107: invokeinterface #32,  1           // InterfaceMethod io/netty/handler/codec/http/HttpRequest.method:()Lio/netty/handler/codec/http/HttpMethod;
     112: aastore
     113: dup
     114: iconst_2
     115: aload         5
     117: invokeinterface #71,  1           // InterfaceMethod io/netty/handler/codec/http/HttpRequest.uri:()Ljava/lang/String;
     122: aastore
     123: invokeinterface #72,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     128: aload_3
     129: aload_1
     130: invokestatic  #73                 // Method org/asynchttpclient/netty/channel/Channels.setAttribute:(Lio/netty/channel/Channel;Ljava/lang/Object;)V
     133: aload_3
     134: invokestatic  #39                 // Method org/asynchttpclient/netty/channel/Channels.isChannelActive:(Lio/netty/channel/Channel;)Z
     137: ifeq          149
     140: aload_0
     141: aload_1
     142: aload_3
     143: invokevirtual #74                 // Method writeRequest:(Lorg/asynchttpclient/netty/NettyResponseFuture;Lio/netty/channel/Channel;)V
     146: goto          155
     149: aload_0
     150: aload_3
     151: aload_1
     152: invokevirtual #75                 // Method handleUnexpectedClosedChannel:(Lio/netty/channel/Channel;Lorg/asynchttpclient/netty/NettyResponseFuture;)V
     155: aload_1
     156: areturn
    Exception table:
       from    to  target type
           0     7    10   Class java/lang/Exception

  private <T> org.asynchttpclient.ListenableFuture<T> sendRequestWithNewChannel(org.asynchttpclient.Request, org.asynchttpclient.proxy.ProxyServer, org.asynchttpclient.netty.NettyResponseFuture<T>, org.asynchttpclient.AsyncHandler<T>);
    Code:
       0: aload_3
       1: invokevirtual #30                 // Method org/asynchttpclient/netty/NettyResponseFuture.getNettyRequest:()Lorg/asynchttpclient/netty/request/NettyRequest;
       4: invokevirtual #31                 // Method org/asynchttpclient/netty/request/NettyRequest.getHttpRequest:()Lio/netty/handler/codec/http/HttpRequest;
       7: invokeinterface #76,  1           // InterfaceMethod io/netty/handler/codec/http/HttpRequest.headers:()Lio/netty/handler/codec/http/HttpHeaders;
      12: astore        5
      14: aload_3
      15: invokevirtual #42                 // Method org/asynchttpclient/netty/NettyResponseFuture.getRealm:()Lorg/asynchttpclient/Realm;
      18: astore        6
      20: aload_3
      21: invokevirtual #45                 // Method org/asynchttpclient/netty/NettyResponseFuture.getProxyRealm:()Lorg/asynchttpclient/Realm;
      24: astore        7
      26: aload_0
      27: getfield      #14                 // Field requestFactory:Lorg/asynchttpclient/netty/request/NettyRequestFactory;
      30: aload         5
      32: aload_1
      33: aload_2
      34: aload         6
      36: invokestatic  #77                 // Method org/asynchttpclient/util/AuthenticatorUtils.perConnectionAuthorizationHeader:(Lorg/asynchttpclient/Request;Lorg/asynchttpclient/proxy/ProxyServer;Lorg/asynchttpclient/Realm;)Ljava/lang/String;
      39: invokevirtual #78                 // Method org/asynchttpclient/netty/request/NettyRequestFactory.addAuthorizationHeader:(Lio/netty/handler/codec/http/HttpHeaders;Ljava/lang/String;)V
      42: aload_0
      43: getfield      #14                 // Field requestFactory:Lorg/asynchttpclient/netty/request/NettyRequestFactory;
      46: aload         5
      48: aload_1
      49: aload         7
      51: invokestatic  #79                 // Method org/asynchttpclient/util/AuthenticatorUtils.perConnectionProxyAuthorizationHeader:(Lorg/asynchttpclient/Request;Lorg/asynchttpclient/Realm;)Ljava/lang/String;
      54: invokevirtual #80                 // Method org/asynchttpclient/netty/request/NettyRequestFactory.setProxyAuthorizationHeader:(Lio/netty/handler/codec/http/HttpHeaders;Ljava/lang/String;)V
      57: aload_3
      58: aload         6
      60: ifnull        86
      63: aload         6
      65: invokevirtual #81                 // Method org/asynchttpclient/Realm.isUsePreemptiveAuth:()Z
      68: ifeq          86
      71: aload         6
      73: invokevirtual #82                 // Method org/asynchttpclient/Realm.getScheme:()Lorg/asynchttpclient/Realm$AuthScheme;
      76: getstatic     #83                 // Field org/asynchttpclient/Realm$AuthScheme.NTLM:Lorg/asynchttpclient/Realm$AuthScheme;
      79: if_acmpeq     86
      82: iconst_1
      83: goto          87
      86: iconst_0
      87: invokevirtual #84                 // Method org/asynchttpclient/netty/NettyResponseFuture.setInAuth:(Z)V
      90: aload_3
      91: aload         7
      93: ifnull        119
      96: aload         7
      98: invokevirtual #81                 // Method org/asynchttpclient/Realm.isUsePreemptiveAuth:()Z
     101: ifeq          119
     104: aload         7
     106: invokevirtual #82                 // Method org/asynchttpclient/Realm.getScheme:()Lorg/asynchttpclient/Realm$AuthScheme;
     109: getstatic     #83                 // Field org/asynchttpclient/Realm$AuthScheme.NTLM:Lorg/asynchttpclient/Realm$AuthScheme;
     112: if_acmpeq     119
     115: iconst_1
     116: goto          120
     119: iconst_0
     120: invokevirtual #85                 // Method org/asynchttpclient/netty/NettyResponseFuture.setInProxyAuth:(Z)V
     123: aload_0
     124: getfield      #3                  // Field channelManager:Lorg/asynchttpclient/netty/channel/ChannelManager;
     127: invokevirtual #86                 // Method org/asynchttpclient/netty/channel/ChannelManager.isOpen:()Z
     130: ifne          137
     133: getstatic     #87                 // Field org/asynchttpclient/exception/PoolAlreadyClosedException.INSTANCE:Lorg/asynchttpclient/exception/PoolAlreadyClosedException;
     136: athrow
     137: aload_3
     138: invokevirtual #88                 // Method org/asynchttpclient/netty/NettyResponseFuture.acquirePartitionLockLazily:()V
     141: goto          159
     144: astore        8
     146: aload_0
     147: aconst_null
     148: aload_3
     149: aload         8
     151: invokestatic  #90                 // Method org/asynchttpclient/util/MiscUtils.getCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
     154: invokevirtual #61                 // Method abort:(Lio/netty/channel/Channel;Lorg/asynchttpclient/netty/NettyResponseFuture;Ljava/lang/Throwable;)V
     157: aload_3
     158: areturn
     159: aload_0
     160: aload_1
     161: aload_2
     162: aload_3
     163: aload         4
     165: invokespecial #91                 // Method resolveAddresses:(Lorg/asynchttpclient/Request;Lorg/asynchttpclient/proxy/ProxyServer;Lorg/asynchttpclient/netty/NettyResponseFuture;Lorg/asynchttpclient/AsyncHandler;)Lio/netty/util/concurrent/Future;
     168: new           #92                 // class org/asynchttpclient/netty/request/NettyRequestSender$1
     171: dup
     172: aload_0
     173: aload_3
     174: aload_1
     175: aload         4
     177: aload_2
     178: invokespecial #93                 // Method org/asynchttpclient/netty/request/NettyRequestSender$1."<init>":(Lorg/asynchttpclient/netty/request/NettyRequestSender;Lorg/asynchttpclient/netty/NettyResponseFuture;Lorg/asynchttpclient/Request;Lorg/asynchttpclient/AsyncHandler;Lorg/asynchttpclient/proxy/ProxyServer;)V
     181: invokeinterface #94,  2           // InterfaceMethod io/netty/util/concurrent/Future.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/util/concurrent/Future;
     186: pop
     187: aload_3
     188: areturn
    Exception table:
       from    to  target type
         123   141   144   Class java/lang/Throwable

  private <T> io.netty.util.concurrent.Future<java.util.List<java.net.InetSocketAddress>> resolveAddresses(org.asynchttpclient.Request, org.asynchttpclient.proxy.ProxyServer, org.asynchttpclient.netty.NettyResponseFuture<T>, org.asynchttpclient.AsyncHandler<T>);
    Code:
       0: aload_1
       1: invokeinterface #23,  1           // InterfaceMethod org/asynchttpclient/Request.getUri:()Lorg/asynchttpclient/uri/Uri;
       6: astore        5
       8: getstatic     #95                 // Field io/netty/util/concurrent/ImmediateEventExecutor.INSTANCE:Lio/netty/util/concurrent/ImmediateEventExecutor;
      11: invokevirtual #96                 // Method io/netty/util/concurrent/ImmediateEventExecutor.newPromise:()Lio/netty/util/concurrent/Promise;
      14: astore        6
      16: aload_2
      17: ifnull        98
      20: aload_2
      21: aload         5
      23: invokevirtual #97                 // Method org/asynchttpclient/uri/Uri.getHost:()Ljava/lang/String;
      26: invokevirtual #98                 // Method org/asynchttpclient/proxy/ProxyServer.isIgnoredForHost:(Ljava/lang/String;)Z
      29: ifne          98
      32: aload_2
      33: invokevirtual #21                 // Method org/asynchttpclient/proxy/ProxyServer.getProxyType:()Lorg/asynchttpclient/proxy/ProxyType;
      36: invokevirtual #22                 // Method org/asynchttpclient/proxy/ProxyType.isHttp:()Z
      39: ifeq          98
      42: aload         5
      44: invokevirtual #24                 // Method org/asynchttpclient/uri/Uri.isSecured:()Z
      47: ifeq          57
      50: aload_2
      51: invokevirtual #99                 // Method org/asynchttpclient/proxy/ProxyServer.getSecuredPort:()I
      54: goto          61
      57: aload_2
      58: invokevirtual #100                // Method org/asynchttpclient/proxy/ProxyServer.getPort:()I
      61: istore        7
      63: aload_2
      64: invokevirtual #101                // Method org/asynchttpclient/proxy/ProxyServer.getHost:()Ljava/lang/String;
      67: iload         7
      69: invokestatic  #102                // Method java/net/InetSocketAddress.createUnresolved:(Ljava/lang/String;I)Ljava/net/InetSocketAddress;
      72: astore        8
      74: aload_0
      75: aload_3
      76: aload         8
      78: invokespecial #64                 // Method scheduleRequestTimeout:(Lorg/asynchttpclient/netty/NettyResponseFuture;Ljava/net/InetSocketAddress;)V
      81: getstatic     #103                // Field org/asynchttpclient/resolver/RequestHostnameResolver.INSTANCE:Lorg/asynchttpclient/resolver/RequestHostnameResolver;
      84: aload_1
      85: invokeinterface #104,  1          // InterfaceMethod org/asynchttpclient/Request.getNameResolver:()Lio/netty/resolver/NameResolver;
      90: aload         8
      92: aload         4
      94: invokevirtual #105                // Method org/asynchttpclient/resolver/RequestHostnameResolver.resolve:(Lio/netty/resolver/NameResolver;Ljava/net/InetSocketAddress;Lorg/asynchttpclient/AsyncHandler;)Lio/netty/util/concurrent/Future;
      97: areturn
      98: aload         5
     100: invokevirtual #106                // Method org/asynchttpclient/uri/Uri.getExplicitPort:()I
     103: istore        7
     105: aload         5
     107: invokevirtual #97                 // Method org/asynchttpclient/uri/Uri.getHost:()Ljava/lang/String;
     110: iload         7
     112: invokestatic  #102                // Method java/net/InetSocketAddress.createUnresolved:(Ljava/lang/String;I)Ljava/net/InetSocketAddress;
     115: astore        8
     117: aload_0
     118: aload_3
     119: aload         8
     121: invokespecial #64                 // Method scheduleRequestTimeout:(Lorg/asynchttpclient/netty/NettyResponseFuture;Ljava/net/InetSocketAddress;)V
     124: aload_1
     125: invokeinterface #107,  1          // InterfaceMethod org/asynchttpclient/Request.getAddress:()Ljava/net/InetAddress;
     130: ifnull        163
     133: new           #63                 // class java/net/InetSocketAddress
     136: dup
     137: aload_1
     138: invokeinterface #107,  1          // InterfaceMethod org/asynchttpclient/Request.getAddress:()Ljava/net/InetAddress;
     143: iload         7
     145: invokespecial #108                // Method java/net/InetSocketAddress."<init>":(Ljava/net/InetAddress;I)V
     148: astore        9
     150: aload         6
     152: aload         9
     154: invokestatic  #109                // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
     157: invokeinterface #110,  2          // InterfaceMethod io/netty/util/concurrent/Promise.setSuccess:(Ljava/lang/Object;)Lio/netty/util/concurrent/Promise;
     162: areturn
     163: getstatic     #103                // Field org/asynchttpclient/resolver/RequestHostnameResolver.INSTANCE:Lorg/asynchttpclient/resolver/RequestHostnameResolver;
     166: aload_1
     167: invokeinterface #104,  1          // InterfaceMethod org/asynchttpclient/Request.getNameResolver:()Lio/netty/resolver/NameResolver;
     172: aload         8
     174: aload         4
     176: invokevirtual #105                // Method org/asynchttpclient/resolver/RequestHostnameResolver.resolve:(Lio/netty/resolver/NameResolver;Ljava/net/InetSocketAddress;Lorg/asynchttpclient/AsyncHandler;)Lio/netty/util/concurrent/Future;
     179: areturn

  private <T> org.asynchttpclient.netty.NettyResponseFuture<T> newNettyResponseFuture(org.asynchttpclient.Request, org.asynchttpclient.AsyncHandler<T>, org.asynchttpclient.netty.request.NettyRequest, org.asynchttpclient.proxy.ProxyServer);
    Code:
       0: new           #111                // class org/asynchttpclient/netty/NettyResponseFuture
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload_0
       8: getfield      #5                  // Field config:Lorg/asynchttpclient/AsyncHttpClientConfig;
      11: invokeinterface #112,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getMaxRequestRetry:()I
      16: aload_1
      17: invokeinterface #113,  1          // InterfaceMethod org/asynchttpclient/Request.getChannelPoolPartitioning:()Lorg/asynchttpclient/channel/ChannelPoolPartitioning;
      22: aload_0
      23: getfield      #2                  // Field connectionSemaphore:Lorg/asynchttpclient/netty/channel/ConnectionSemaphore;
      26: aload         4
      28: invokespecial #114                // Method org/asynchttpclient/netty/NettyResponseFuture."<init>":(Lorg/asynchttpclient/Request;Lorg/asynchttpclient/AsyncHandler;Lorg/asynchttpclient/netty/request/NettyRequest;ILorg/asynchttpclient/channel/ChannelPoolPartitioning;Lorg/asynchttpclient/netty/channel/ConnectionSemaphore;Lorg/asynchttpclient/proxy/ProxyServer;)V
      31: astore        5
      33: aload_1
      34: invokeinterface #115,  1          // InterfaceMethod org/asynchttpclient/Request.getHeaders:()Lio/netty/handler/codec/http/HttpHeaders;
      39: getstatic     #116                // Field io/netty/handler/codec/http/HttpHeaderNames.EXPECT:Lio/netty/util/AsciiString;
      42: invokevirtual #117                // Method io/netty/handler/codec/http/HttpHeaders.get:(Ljava/lang/CharSequence;)Ljava/lang/String;
      45: astore        6
      47: getstatic     #118                // Field io/netty/handler/codec/http/HttpHeaderValues.CONTINUE:Lio/netty/util/AsciiString;
      50: aload         6
      52: invokevirtual #119                // Method io/netty/util/AsciiString.contentEqualsIgnoreCase:(Ljava/lang/CharSequence;)Z
      55: ifeq          64
      58: aload         5
      60: iconst_1
      61: invokevirtual #120                // Method org/asynchttpclient/netty/NettyResponseFuture.setDontWriteBodyBecauseExpectContinue:(Z)V
      64: aload         5
      66: areturn

  public <T> void writeRequest(org.asynchttpclient.netty.NettyResponseFuture<T>, io.netty.channel.Channel);
    Code:
       0: aload_1
       1: invokevirtual #30                 // Method org/asynchttpclient/netty/NettyResponseFuture.getNettyRequest:()Lorg/asynchttpclient/netty/request/NettyRequest;
       4: astore_3
       5: aload_3
       6: invokevirtual #31                 // Method org/asynchttpclient/netty/request/NettyRequest.getHttpRequest:()Lio/netty/handler/codec/http/HttpRequest;
       9: astore        4
      11: aload_1
      12: invokevirtual #121                // Method org/asynchttpclient/netty/NettyResponseFuture.getAsyncHandler:()Lorg/asynchttpclient/AsyncHandler;
      15: astore        5
      17: aload_2
      18: invokestatic  #39                 // Method org/asynchttpclient/netty/channel/Channels.isChannelActive:(Lio/netty/channel/Channel;)Z
      21: ifne          25
      24: return
      25: aload         5
      27: instanceof    #122                // class org/asynchttpclient/handler/TransferCompletionHandler
      30: ifeq          41
      33: aload_0
      34: aload         5
      36: aload         4
      38: invokespecial #123                // Method configureTransferAdapter:(Lorg/asynchttpclient/AsyncHandler;Lio/netty/handler/codec/http/HttpRequest;)V
      41: aload_1
      42: invokevirtual #124                // Method org/asynchttpclient/netty/NettyResponseFuture.isDontWriteBodyBecauseExpectContinue:()Z
      45: ifne          72
      48: aload         4
      50: invokeinterface #32,  1           // InterfaceMethod io/netty/handler/codec/http/HttpRequest.method:()Lio/netty/handler/codec/http/HttpMethod;
      55: getstatic     #33                 // Field io/netty/handler/codec/http/HttpMethod.CONNECT:Lio/netty/handler/codec/http/HttpMethod;
      58: if_acmpeq     72
      61: aload_3
      62: invokevirtual #125                // Method org/asynchttpclient/netty/request/NettyRequest.getBody:()Lorg/asynchttpclient/netty/request/body/NettyBody;
      65: ifnull        72
      68: iconst_1
      69: goto          73
      72: iconst_0
      73: istore        6
      75: aload_1
      76: invokevirtual #126                // Method org/asynchttpclient/netty/NettyResponseFuture.isHeadersAlreadyWrittenOnContinue:()Z
      79: ifne          198
      82: aload         5
      84: aload_3
      85: invokeinterface #127,  2          // InterfaceMethod org/asynchttpclient/AsyncHandler.onRequestSend:(Lorg/asynchttpclient/netty/request/NettyRequest;)V
      90: goto          116
      93: astore        7
      95: getstatic     #58                 // Field LOGGER:Lorg/slf4j/Logger;
      98: ldc           #128                // String onRequestSend crashed
     100: aload         7
     102: invokeinterface #60,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     107: aload_0
     108: aload_2
     109: aload_1
     110: aload         7
     112: invokevirtual #61                 // Method abort:(Lio/netty/channel/Channel;Lorg/asynchttpclient/netty/NettyResponseFuture;Ljava/lang/Throwable;)V
     115: return
     116: iload         6
     118: ifeq          162
     121: aload_2
     122: invokeinterface #129,  1          // InterfaceMethod io/netty/channel/Channel.newProgressivePromise:()Lio/netty/channel/ChannelProgressivePromise;
     127: astore        7
     129: aload_2
     130: aload         4
     132: aload         7
     134: invokeinterface #130,  3          // InterfaceMethod io/netty/channel/Channel.write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
     139: astore        8
     141: aload         8
     143: new           #131                // class org/asynchttpclient/netty/request/WriteProgressListener
     146: dup
     147: aload_1
     148: iconst_1
     149: lconst_0
     150: invokespecial #132                // Method org/asynchttpclient/netty/request/WriteProgressListener."<init>":(Lorg/asynchttpclient/netty/NettyResponseFuture;ZJ)V
     153: invokeinterface #133,  2          // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
     158: pop
     159: goto          198
     162: aload_2
     163: invokeinterface #134,  1          // InterfaceMethod io/netty/channel/Channel.newPromise:()Lio/netty/channel/ChannelPromise;
     168: astore        7
     170: aload_2
     171: aload         4
     173: aload         7
     175: invokeinterface #135,  3          // InterfaceMethod io/netty/channel/Channel.writeAndFlush:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
     180: astore        8
     182: aload         8
     184: new           #136                // class org/asynchttpclient/netty/request/WriteCompleteListener
     187: dup
     188: aload_1
     189: invokespecial #137                // Method org/asynchttpclient/netty/request/WriteCompleteListener."<init>":(Lorg/asynchttpclient/netty/NettyResponseFuture;)V
     192: invokeinterface #133,  2          // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
     197: pop
     198: iload         6
     200: ifeq          214
     203: aload_3
     204: invokevirtual #125                // Method org/asynchttpclient/netty/request/NettyRequest.getBody:()Lorg/asynchttpclient/netty/request/body/NettyBody;
     207: aload_2
     208: aload_1
     209: invokeinterface #138,  3          // InterfaceMethod org/asynchttpclient/netty/request/body/NettyBody.write:(Lio/netty/channel/Channel;Lorg/asynchttpclient/netty/NettyResponseFuture;)V
     214: aload_2
     215: invokestatic  #39                 // Method org/asynchttpclient/netty/channel/Channels.isChannelActive:(Lio/netty/channel/Channel;)Z
     218: ifeq          226
     221: aload_0
     222: aload_1
     223: invokespecial #139                // Method scheduleReadTimeout:(Lorg/asynchttpclient/netty/NettyResponseFuture;)V
     226: goto          251
     229: astore        6
     231: getstatic     #58                 // Field LOGGER:Lorg/slf4j/Logger;
     234: ldc           #140                // String Can\'t write request
     236: aload         6
     238: invokeinterface #60,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     243: aload_0
     244: aload_2
     245: aload_1
     246: aload         6
     248: invokevirtual #61                 // Method abort:(Lio/netty/channel/Channel;Lorg/asynchttpclient/netty/NettyResponseFuture;Ljava/lang/Throwable;)V
     251: return
    Exception table:
       from    to  target type
          82    90    93   Class java/lang/Exception
          25   115   229   Class java/lang/Exception
         116   226   229   Class java/lang/Exception

  private void configureTransferAdapter(org.asynchttpclient.AsyncHandler<?>, io.netty.handler.codec.http.HttpRequest);
    Code:
       0: new           #141                // class io/netty/handler/codec/http/DefaultHttpHeaders
       3: dup
       4: invokespecial #142                // Method io/netty/handler/codec/http/DefaultHttpHeaders."<init>":()V
       7: aload_2
       8: invokeinterface #76,  1           // InterfaceMethod io/netty/handler/codec/http/HttpRequest.headers:()Lio/netty/handler/codec/http/HttpHeaders;
      13: invokevirtual #143                // Method io/netty/handler/codec/http/DefaultHttpHeaders.set:(Lio/netty/handler/codec/http/HttpHeaders;)Lio/netty/handler/codec/http/HttpHeaders;
      16: astore_3
      17: aload_1
      18: checkcast     #122                // class org/asynchttpclient/handler/TransferCompletionHandler
      21: aload_3
      22: invokevirtual #144                // Method org/asynchttpclient/handler/TransferCompletionHandler.headers:(Lio/netty/handler/codec/http/HttpHeaders;)V
      25: return

  private void scheduleRequestTimeout(org.asynchttpclient.netty.NettyResponseFuture<?>, java.net.InetSocketAddress);
    Code:
       0: aload_1
       1: invokevirtual #145                // Method org/asynchttpclient/netty/NettyResponseFuture.touch:()V
       4: new           #146                // class org/asynchttpclient/netty/timeout/TimeoutsHolder
       7: dup
       8: aload_0
       9: getfield      #11                 // Field nettyTimer:Lio/netty/util/Timer;
      12: aload_1
      13: aload_0
      14: aload_0
      15: getfield      #5                  // Field config:Lorg/asynchttpclient/AsyncHttpClientConfig;
      18: aload_2
      19: invokespecial #147                // Method org/asynchttpclient/netty/timeout/TimeoutsHolder."<init>":(Lio/netty/util/Timer;Lorg/asynchttpclient/netty/NettyResponseFuture;Lorg/asynchttpclient/netty/request/NettyRequestSender;Lorg/asynchttpclient/AsyncHttpClientConfig;Ljava/net/InetSocketAddress;)V
      22: astore_3
      23: aload_1
      24: aload_3
      25: invokevirtual #148                // Method org/asynchttpclient/netty/NettyResponseFuture.setTimeoutsHolder:(Lorg/asynchttpclient/netty/timeout/TimeoutsHolder;)V
      28: return

  private void scheduleReadTimeout(org.asynchttpclient.netty.NettyResponseFuture<?>);
    Code:
       0: aload_1
       1: invokevirtual #149                // Method org/asynchttpclient/netty/NettyResponseFuture.getTimeoutsHolder:()Lorg/asynchttpclient/netty/timeout/TimeoutsHolder;
       4: astore_2
       5: aload_2
       6: ifnull        17
       9: aload_1
      10: invokevirtual #145                // Method org/asynchttpclient/netty/NettyResponseFuture.touch:()V
      13: aload_2
      14: invokevirtual #150                // Method org/asynchttpclient/netty/timeout/TimeoutsHolder.startReadTimeout:()V
      17: return

  public void abort(io.netty.channel.Channel, org.asynchttpclient.netty.NettyResponseFuture<?>, java.lang.Throwable);
    Code:
       0: aload_1
       1: ifnull        21
       4: aload_1
       5: invokeinterface #151,  1          // InterfaceMethod io/netty/channel/Channel.isActive:()Z
      10: ifeq          21
      13: aload_0
      14: getfield      #3                  // Field channelManager:Lorg/asynchttpclient/netty/channel/ChannelManager;
      17: aload_1
      18: invokevirtual #152                // Method org/asynchttpclient/netty/channel/ChannelManager.closeChannel:(Lio/netty/channel/Channel;)V
      21: aload_2
      22: invokevirtual #153                // Method org/asynchttpclient/netty/NettyResponseFuture.isDone:()Z
      25: ifne          64
      28: aload_2
      29: getstatic     #154                // Field org/asynchttpclient/netty/channel/ChannelState.CLOSED:Lorg/asynchttpclient/netty/channel/ChannelState;
      32: invokevirtual #66                 // Method org/asynchttpclient/netty/NettyResponseFuture.setChannelState:(Lorg/asynchttpclient/netty/channel/ChannelState;)V
      35: getstatic     #58                 // Field LOGGER:Lorg/slf4j/Logger;
      38: ldc           #155                // String Aborting Future {}\n
      40: aload_2
      41: invokeinterface #156,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      46: getstatic     #58                 // Field LOGGER:Lorg/slf4j/Logger;
      49: aload_3
      50: invokevirtual #157                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      53: aload_3
      54: invokeinterface #158,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      59: aload_2
      60: aload_3
      61: invokevirtual #159                // Method org/asynchttpclient/netty/NettyResponseFuture.abort:(Ljava/lang/Throwable;)V
      64: return

  public void handleUnexpectedClosedChannel(io.netty.channel.Channel, org.asynchttpclient.netty.NettyResponseFuture<?>);
    Code:
       0: aload_1
       1: invokestatic  #160                // Method org/asynchttpclient/netty/channel/Channels.isActiveTokenSet:(Lio/netty/channel/Channel;)Z
       4: ifeq          71
       7: aload_2
       8: invokevirtual #153                // Method org/asynchttpclient/netty/NettyResponseFuture.isDone:()Z
      11: ifeq          25
      14: aload_0
      15: getfield      #3                  // Field channelManager:Lorg/asynchttpclient/netty/channel/ChannelManager;
      18: aload_1
      19: invokevirtual #152                // Method org/asynchttpclient/netty/channel/ChannelManager.closeChannel:(Lio/netty/channel/Channel;)V
      22: goto          71
      25: aload_2
      26: invokevirtual #161                // Method org/asynchttpclient/netty/NettyResponseFuture.incrementRetryAndCheck:()Z
      29: ifeq          48
      32: aload_0
      33: aload_2
      34: invokevirtual #162                // Method retry:(Lorg/asynchttpclient/netty/NettyResponseFuture;)Z
      37: ifeq          48
      40: aload_2
      41: aconst_null
      42: putfield      #163                // Field org/asynchttpclient/netty/NettyResponseFuture.pendingException:Ljava/lang/Throwable;
      45: goto          71
      48: aload_0
      49: aload_1
      50: aload_2
      51: aload_2
      52: getfield      #163                // Field org/asynchttpclient/netty/NettyResponseFuture.pendingException:Ljava/lang/Throwable;
      55: ifnull        65
      58: aload_2
      59: getfield      #163                // Field org/asynchttpclient/netty/NettyResponseFuture.pendingException:Ljava/lang/Throwable;
      62: goto          68
      65: getstatic     #164                // Field org/asynchttpclient/exception/RemotelyClosedException.INSTANCE:Lorg/asynchttpclient/exception/RemotelyClosedException;
      68: invokevirtual #61                 // Method abort:(Lio/netty/channel/Channel;Lorg/asynchttpclient/netty/NettyResponseFuture;Ljava/lang/Throwable;)V
      71: return

  public boolean retry(org.asynchttpclient.netty.NettyResponseFuture<?>);
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method isClosed:()Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: invokevirtual #165                // Method org/asynchttpclient/netty/NettyResponseFuture.isReplayPossible:()Z
      13: ifeq          100
      16: aload_1
      17: getstatic     #166                // Field org/asynchttpclient/netty/channel/ChannelState.RECONNECTED:Lorg/asynchttpclient/netty/channel/ChannelState;
      20: invokevirtual #66                 // Method org/asynchttpclient/netty/NettyResponseFuture.setChannelState:(Lorg/asynchttpclient/netty/channel/ChannelState;)V
      23: getstatic     #58                 // Field LOGGER:Lorg/slf4j/Logger;
      26: ldc           #167                // String Trying to recover request {}\n
      28: aload_1
      29: invokevirtual #30                 // Method org/asynchttpclient/netty/NettyResponseFuture.getNettyRequest:()Lorg/asynchttpclient/netty/request/NettyRequest;
      32: invokevirtual #31                 // Method org/asynchttpclient/netty/request/NettyRequest.getHttpRequest:()Lio/netty/handler/codec/http/HttpRequest;
      35: invokeinterface #156,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      40: aload_1
      41: invokevirtual #121                // Method org/asynchttpclient/netty/NettyResponseFuture.getAsyncHandler:()Lorg/asynchttpclient/AsyncHandler;
      44: invokeinterface #168,  1          // InterfaceMethod org/asynchttpclient/AsyncHandler.onRetry:()V
      49: goto          76
      52: astore_2
      53: getstatic     #58                 // Field LOGGER:Lorg/slf4j/Logger;
      56: ldc           #169                // String onRetry crashed
      58: aload_2
      59: invokeinterface #60,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      64: aload_0
      65: aload_1
      66: invokevirtual #54                 // Method org/asynchttpclient/netty/NettyResponseFuture.channel:()Lio/netty/channel/Channel;
      69: aload_1
      70: aload_2
      71: invokevirtual #61                 // Method abort:(Lio/netty/channel/Channel;Lorg/asynchttpclient/netty/NettyResponseFuture;Ljava/lang/Throwable;)V
      74: iconst_0
      75: ireturn
      76: aload_0
      77: aload_1
      78: invokevirtual #170                // Method org/asynchttpclient/netty/NettyResponseFuture.getCurrentRequest:()Lorg/asynchttpclient/Request;
      81: aload_1
      82: invokevirtual #171                // Method sendNextRequest:(Lorg/asynchttpclient/Request;Lorg/asynchttpclient/netty/NettyResponseFuture;)V
      85: iconst_1
      86: ireturn
      87: astore_2
      88: aload_0
      89: aload_1
      90: invokevirtual #54                 // Method org/asynchttpclient/netty/NettyResponseFuture.channel:()Lio/netty/channel/Channel;
      93: aload_1
      94: aload_2
      95: invokevirtual #61                 // Method abort:(Lio/netty/channel/Channel;Lorg/asynchttpclient/netty/NettyResponseFuture;Ljava/lang/Throwable;)V
      98: iconst_0
      99: ireturn
     100: getstatic     #58                 // Field LOGGER:Lorg/slf4j/Logger;
     103: ldc           #172                // String Unable to recover future {}\n
     105: aload_1
     106: invokeinterface #156,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     111: iconst_0
     112: ireturn
    Exception table:
       from    to  target type
          40    49    52   Class java/lang/Exception
          76    86    87   Class java/lang/Exception

  public boolean applyIoExceptionFiltersAndReplayRequest(org.asynchttpclient.netty.NettyResponseFuture<?>, java.io.IOException, io.netty.channel.Channel);
    Code:
       0: iconst_0
       1: istore        4
       3: new           #173                // class org/asynchttpclient/filter/FilterContext$FilterContextBuilder
       6: dup
       7: invokespecial #174                // Method org/asynchttpclient/filter/FilterContext$FilterContextBuilder."<init>":()V
      10: aload_1
      11: invokevirtual #121                // Method org/asynchttpclient/netty/NettyResponseFuture.getAsyncHandler:()Lorg/asynchttpclient/AsyncHandler;
      14: invokevirtual #175                // Method org/asynchttpclient/filter/FilterContext$FilterContextBuilder.asyncHandler:(Lorg/asynchttpclient/AsyncHandler;)Lorg/asynchttpclient/filter/FilterContext$FilterContextBuilder;
      17: aload_1
      18: invokevirtual #170                // Method org/asynchttpclient/netty/NettyResponseFuture.getCurrentRequest:()Lorg/asynchttpclient/Request;
      21: invokevirtual #176                // Method org/asynchttpclient/filter/FilterContext$FilterContextBuilder.request:(Lorg/asynchttpclient/Request;)Lorg/asynchttpclient/filter/FilterContext$FilterContextBuilder;
      24: aload_2
      25: invokevirtual #177                // Method org/asynchttpclient/filter/FilterContext$FilterContextBuilder.ioException:(Ljava/io/IOException;)Lorg/asynchttpclient/filter/FilterContext$FilterContextBuilder;
      28: invokevirtual #178                // Method org/asynchttpclient/filter/FilterContext$FilterContextBuilder.build:()Lorg/asynchttpclient/filter/FilterContext;
      31: astore        5
      33: aload_0
      34: getfield      #5                  // Field config:Lorg/asynchttpclient/AsyncHttpClientConfig;
      37: invokeinterface #179,  1          // InterfaceMethod org/asynchttpclient/AsyncHttpClientConfig.getIoExceptionFilters:()Ljava/util/List;
      42: invokeinterface #180,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      47: astore        6
      49: aload         6
      51: invokeinterface #181,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      56: ifeq          106
      59: aload         6
      61: invokeinterface #182,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      66: checkcast     #183                // class org/asynchttpclient/filter/IOExceptionFilter
      69: astore        7
      71: aload         7
      73: aload         5
      75: invokeinterface #184,  2          // InterfaceMethod org/asynchttpclient/filter/IOExceptionFilter.filter:(Lorg/asynchttpclient/filter/FilterContext;)Lorg/asynchttpclient/filter/FilterContext;
      80: astore        5
      82: aload         5
      84: ldc           #185                // String filterContext
      86: invokestatic  #186                // Method org/asynchttpclient/util/Assertions.assertNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      89: pop
      90: goto          103
      93: astore        8
      95: aload_0
      96: aload_3
      97: aload_1
      98: aload         8
     100: invokevirtual #61                 // Method abort:(Lio/netty/channel/Channel;Lorg/asynchttpclient/netty/NettyResponseFuture;Ljava/lang/Throwable;)V
     103: goto          49
     106: aload         5
     108: invokevirtual #188                // Method org/asynchttpclient/filter/FilterContext.replayRequest:()Z
     111: ifeq          144
     114: aload_1
     115: invokevirtual #161                // Method org/asynchttpclient/netty/NettyResponseFuture.incrementRetryAndCheck:()Z
     118: ifeq          144
     121: aload_1
     122: invokevirtual #165                // Method org/asynchttpclient/netty/NettyResponseFuture.isReplayPossible:()Z
     125: ifeq          144
     128: aload_1
     129: iconst_0
     130: invokevirtual #189                // Method org/asynchttpclient/netty/NettyResponseFuture.setKeepAlive:(Z)V
     133: aload_0
     134: aload_1
     135: aload         5
     137: aload_3
     138: invokevirtual #190                // Method replayRequest:(Lorg/asynchttpclient/netty/NettyResponseFuture;Lorg/asynchttpclient/filter/FilterContext;Lio/netty/channel/Channel;)V
     141: iconst_1
     142: istore        4
     144: iload         4
     146: ireturn
    Exception table:
       from    to  target type
          71    90    93   Class org/asynchttpclient/filter/FilterException

  public <T> void sendNextRequest(org.asynchttpclient.Request, org.asynchttpclient.netty.NettyResponseFuture<T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #121                // Method org/asynchttpclient/netty/NettyResponseFuture.getAsyncHandler:()Lorg/asynchttpclient/AsyncHandler;
       6: aload_2
       7: invokevirtual #191                // Method sendRequest:(Lorg/asynchttpclient/Request;Lorg/asynchttpclient/AsyncHandler;Lorg/asynchttpclient/netty/NettyResponseFuture;)Lorg/asynchttpclient/ListenableFuture;
      10: pop
      11: return

  private void validateWebSocketRequest(org.asynchttpclient.Request, org.asynchttpclient.AsyncHandler<?>);
    Code:
       0: aload_1
       1: invokeinterface #23,  1           // InterfaceMethod org/asynchttpclient/Request.getUri:()Lorg/asynchttpclient/uri/Uri;
       6: astore_3
       7: aload_3
       8: invokevirtual #25                 // Method org/asynchttpclient/uri/Uri.isWebSocket:()Z
      11: istore        4
      13: aload_2
      14: instanceof    #192                // class org/asynchttpclient/ws/WebSocketUpgradeHandler
      17: ifeq          117
      20: iload         4
      22: ifne          55
      25: new           #193                // class java/lang/IllegalArgumentException
      28: dup
      29: new           #194                // class java/lang/StringBuilder
      32: dup
      33: invokespecial #195                // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #196                // String WebSocketUpgradeHandler but scheme isn\'t ws or wss:
      38: invokevirtual #197                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_3
      42: invokevirtual #198                // Method org/asynchttpclient/uri/Uri.getScheme:()Ljava/lang/String;
      45: invokevirtual #197                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #199                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #200                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_1
      56: invokeinterface #34,  1           // InterfaceMethod org/asynchttpclient/Request.getMethod:()Ljava/lang/String;
      61: getstatic     #201                // Field org/asynchttpclient/util/HttpConstants$Methods.GET:Ljava/lang/String;
      64: invokevirtual #36                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      67: ifne          152
      70: aload_1
      71: invokeinterface #34,  1           // InterfaceMethod org/asynchttpclient/Request.getMethod:()Ljava/lang/String;
      76: getstatic     #35                 // Field org/asynchttpclient/util/HttpConstants$Methods.CONNECT:Ljava/lang/String;
      79: invokevirtual #36                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      82: ifne          152
      85: new           #193                // class java/lang/IllegalArgumentException
      88: dup
      89: new           #194                // class java/lang/StringBuilder
      92: dup
      93: invokespecial #195                // Method java/lang/StringBuilder."<init>":()V
      96: ldc           #202                // String WebSocketUpgradeHandler but method isn\'t GET or CONNECT:
      98: invokevirtual #197                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: aload_1
     102: invokeinterface #34,  1           // InterfaceMethod org/asynchttpclient/Request.getMethod:()Ljava/lang/String;
     107: invokevirtual #197                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: invokevirtual #199                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     113: invokespecial #200                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     116: athrow
     117: iload         4
     119: ifeq          152
     122: new           #193                // class java/lang/IllegalArgumentException
     125: dup
     126: new           #194                // class java/lang/StringBuilder
     129: dup
     130: invokespecial #195                // Method java/lang/StringBuilder."<init>":()V
     133: ldc           #203                // String No WebSocketUpgradeHandler but scheme is
     135: invokevirtual #197                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: aload_3
     139: invokevirtual #198                // Method org/asynchttpclient/uri/Uri.getScheme:()Ljava/lang/String;
     142: invokevirtual #197                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: invokevirtual #199                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     148: invokespecial #200                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     151: athrow
     152: return

  private io.netty.channel.Channel pollPooledChannel(org.asynchttpclient.Request, org.asynchttpclient.proxy.ProxyServer, org.asynchttpclient.AsyncHandler<?>);
    Code:
       0: aload_3
       1: invokeinterface #204,  1          // InterfaceMethod org/asynchttpclient/AsyncHandler.onConnectionPoolAttempt:()V
       6: goto          23
       9: astore        4
      11: getstatic     #58                 // Field LOGGER:Lorg/slf4j/Logger;
      14: ldc           #205                // String onConnectionPoolAttempt crashed
      16: aload         4
      18: invokeinterface #60,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      23: aload_1
      24: invokeinterface #23,  1           // InterfaceMethod org/asynchttpclient/Request.getUri:()Lorg/asynchttpclient/uri/Uri;
      29: astore        4
      31: aload_1
      32: invokeinterface #206,  1          // InterfaceMethod org/asynchttpclient/Request.getVirtualHost:()Ljava/lang/String;
      37: astore        5
      39: aload_0
      40: getfield      #3                  // Field channelManager:Lorg/asynchttpclient/netty/channel/ChannelManager;
      43: aload         4
      45: aload         5
      47: aload_2
      48: aload_1
      49: invokeinterface #113,  1          // InterfaceMethod org/asynchttpclient/Request.getChannelPoolPartitioning:()Lorg/asynchttpclient/channel/ChannelPoolPartitioning;
      54: invokevirtual #207                // Method org/asynchttpclient/netty/channel/ChannelManager.poll:(Lorg/asynchttpclient/uri/Uri;Ljava/lang/String;Lorg/asynchttpclient/proxy/ProxyServer;Lorg/asynchttpclient/channel/ChannelPoolPartitioning;)Lio/netty/channel/Channel;
      57: astore        6
      59: aload         6
      61: ifnull        97
      64: getstatic     #58                 // Field LOGGER:Lorg/slf4j/Logger;
      67: ldc           #208                // String Using pooled Channel \'{}\' for \'{}\' to \'{}\'
      69: iconst_3
      70: anewarray     #70                 // class java/lang/Object
      73: dup
      74: iconst_0
      75: aload         6
      77: aastore
      78: dup
      79: iconst_1
      80: aload_1
      81: invokeinterface #34,  1           // InterfaceMethod org/asynchttpclient/Request.getMethod:()Ljava/lang/String;
      86: aastore
      87: dup
      88: iconst_2
      89: aload         4
      91: aastore
      92: invokeinterface #72,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      97: aload         6
      99: areturn
    Exception table:
       from    to  target type
           0     6     9   Class java/lang/Exception

  public void replayRequest(org.asynchttpclient.netty.NettyResponseFuture<?>, org.asynchttpclient.filter.FilterContext, io.netty.channel.Channel);
    Code:
       0: aload_2
       1: invokevirtual #209                // Method org/asynchttpclient/filter/FilterContext.getRequest:()Lorg/asynchttpclient/Request;
       4: astore        4
       6: aload_1
       7: aload_2
       8: invokevirtual #210                // Method org/asynchttpclient/filter/FilterContext.getAsyncHandler:()Lorg/asynchttpclient/AsyncHandler;
      11: invokevirtual #211                // Method org/asynchttpclient/netty/NettyResponseFuture.setAsyncHandler:(Lorg/asynchttpclient/AsyncHandler;)V
      14: aload_1
      15: getstatic     #212                // Field org/asynchttpclient/netty/channel/ChannelState.NEW:Lorg/asynchttpclient/netty/channel/ChannelState;
      18: invokevirtual #66                 // Method org/asynchttpclient/netty/NettyResponseFuture.setChannelState:(Lorg/asynchttpclient/netty/channel/ChannelState;)V
      21: aload_1
      22: invokevirtual #145                // Method org/asynchttpclient/netty/NettyResponseFuture.touch:()V
      25: getstatic     #58                 // Field LOGGER:Lorg/slf4j/Logger;
      28: ldc           #213                // String \n\nReplaying Request {}\n for Future {}\n
      30: aload         4
      32: aload_1
      33: invokeinterface #214,  4          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      38: aload_1
      39: invokevirtual #121                // Method org/asynchttpclient/netty/NettyResponseFuture.getAsyncHandler:()Lorg/asynchttpclient/AsyncHandler;
      42: invokeinterface #168,  1          // InterfaceMethod org/asynchttpclient/AsyncHandler.onRetry:()V
      47: goto          73
      50: astore        5
      52: getstatic     #58                 // Field LOGGER:Lorg/slf4j/Logger;
      55: ldc           #169                // String onRetry crashed
      57: aload         5
      59: invokeinterface #60,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      64: aload_0
      65: aload_3
      66: aload_1
      67: aload         5
      69: invokevirtual #61                 // Method abort:(Lio/netty/channel/Channel;Lorg/asynchttpclient/netty/NettyResponseFuture;Ljava/lang/Throwable;)V
      72: return
      73: aload_0
      74: getfield      #3                  // Field channelManager:Lorg/asynchttpclient/netty/channel/ChannelManager;
      77: aload_3
      78: aload_1
      79: invokevirtual #215                // Method org/asynchttpclient/netty/channel/ChannelManager.drainChannelAndOffer:(Lio/netty/channel/Channel;Lorg/asynchttpclient/netty/NettyResponseFuture;)V
      82: aload_0
      83: aload         4
      85: aload_1
      86: invokevirtual #171                // Method sendNextRequest:(Lorg/asynchttpclient/Request;Lorg/asynchttpclient/netty/NettyResponseFuture;)V
      89: return
    Exception table:
       from    to  target type
          38    47    50   Class java/lang/Exception

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #1                  // Field clientState:Lorg/asynchttpclient/AsyncHttpClientState;
       4: invokevirtual #216                // Method org/asynchttpclient/AsyncHttpClientState.isClosed:()Z
       7: ireturn

  public void drainChannelAndExecuteNextRequest(io.netty.channel.Channel, org.asynchttpclient.netty.NettyResponseFuture<?>, org.asynchttpclient.Request);
    Code:
       0: aload_1
       1: new           #217                // class org/asynchttpclient/netty/request/NettyRequestSender$2
       4: dup
       5: aload_0
       6: aload_2
       7: aload_3
       8: invokespecial #218                // Method org/asynchttpclient/netty/request/NettyRequestSender$2."<init>":(Lorg/asynchttpclient/netty/request/NettyRequestSender;Lorg/asynchttpclient/netty/NettyResponseFuture;Lorg/asynchttpclient/Request;)V
      11: invokestatic  #73                 // Method org/asynchttpclient/netty/channel/Channels.setAttribute:(Lio/netty/channel/Channel;Ljava/lang/Object;)V
      14: return

  public void drainChannelAndExecuteNextRequest(io.netty.channel.Channel, org.asynchttpclient.netty.NettyResponseFuture<?>, org.asynchttpclient.Request, io.netty.util.concurrent.Future<io.netty.channel.Channel>);
    Code:
       0: aload_1
       1: new           #219                // class org/asynchttpclient/netty/request/NettyRequestSender$3
       4: dup
       5: aload_0
       6: aload_2
       7: aload         4
       9: aload_3
      10: invokespecial #220                // Method org/asynchttpclient/netty/request/NettyRequestSender$3."<init>":(Lorg/asynchttpclient/netty/request/NettyRequestSender;Lorg/asynchttpclient/netty/NettyResponseFuture;Lio/netty/util/concurrent/Future;Lorg/asynchttpclient/Request;)V
      13: invokestatic  #73                 // Method org/asynchttpclient/netty/channel/Channels.setAttribute:(Lio/netty/channel/Channel;Ljava/lang/Object;)V
      16: return

  static org.asynchttpclient.netty.channel.ChannelManager access$000(org.asynchttpclient.netty.request.NettyRequestSender);
    Code:
       0: aload_0
       1: getfield      #3                  // Field channelManager:Lorg/asynchttpclient/netty/channel/ChannelManager;
       4: areturn

  static org.asynchttpclient.netty.channel.ConnectionSemaphore access$100(org.asynchttpclient.netty.request.NettyRequestSender);
    Code:
       0: aload_0
       1: getfield      #2                  // Field connectionSemaphore:Lorg/asynchttpclient/netty/channel/ConnectionSemaphore;
       4: areturn

  static org.asynchttpclient.AsyncHttpClientState access$200(org.asynchttpclient.netty.request.NettyRequestSender);
    Code:
       0: aload_0
       1: getfield      #1                  // Field clientState:Lorg/asynchttpclient/AsyncHttpClientState;
       4: areturn

  static {};
    Code:
       0: ldc           #221                // class org/asynchttpclient/netty/request/NettyRequestSender
       2: invokestatic  #222                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #58                 // Field LOGGER:Lorg/slf4j/Logger;
       8: return
}
