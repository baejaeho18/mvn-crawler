Compiled from "TransferCompletionHandler.java"
public class org.asynchttpclient.handler.TransferCompletionHandler extends org.asynchttpclient.AsyncCompletionHandlerBase {
  private static final org.slf4j.Logger logger;

  private final java.util.concurrent.ConcurrentLinkedQueue<org.asynchttpclient.handler.TransferListener> listeners;

  private final boolean accumulateResponseBytes;

  private io.netty.handler.codec.http.HttpHeaders headers;

  public org.asynchttpclient.handler.TransferCompletionHandler();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #1                  // Method "<init>":(Z)V
       5: return

  public org.asynchttpclient.handler.TransferCompletionHandler(boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/asynchttpclient/AsyncCompletionHandlerBase."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/ConcurrentLinkedQueue
       8: dup
       9: invokespecial #4                  // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      12: putfield      #5                  // Field listeners:Ljava/util/concurrent/ConcurrentLinkedQueue;
      15: aload_0
      16: iload_1
      17: putfield      #6                  // Field accumulateResponseBytes:Z
      20: return

  public org.asynchttpclient.handler.TransferCompletionHandler addTransferListener(org.asynchttpclient.handler.TransferListener);
    Code:
       0: aload_0
       1: getfield      #5                  // Field listeners:Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: aload_1
       5: invokevirtual #7                  // Method java/util/concurrent/ConcurrentLinkedQueue.offer:(Ljava/lang/Object;)Z
       8: pop
       9: aload_0
      10: areturn

  public org.asynchttpclient.handler.TransferCompletionHandler removeTransferListener(org.asynchttpclient.handler.TransferListener);
    Code:
       0: aload_0
       1: getfield      #5                  // Field listeners:Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: aload_1
       5: invokevirtual #8                  // Method java/util/concurrent/ConcurrentLinkedQueue.remove:(Ljava/lang/Object;)Z
       8: pop
       9: aload_0
      10: areturn

  public void headers(io.netty.handler.codec.http.HttpHeaders);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field headers:Lio/netty/handler/codec/http/HttpHeaders;
       5: return

  public org.asynchttpclient.AsyncHandler$State onHeadersReceived(io.netty.handler.codec.http.HttpHeaders) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method fireOnHeaderReceived:(Lio/netty/handler/codec/http/HttpHeaders;)V
       5: aload_0
       6: aload_1
       7: invokespecial #11                 // Method org/asynchttpclient/AsyncCompletionHandlerBase.onHeadersReceived:(Lio/netty/handler/codec/http/HttpHeaders;)Lorg/asynchttpclient/AsyncHandler$State;
      10: areturn

  public org.asynchttpclient.AsyncHandler$State onTrailingHeadersReceived(io.netty.handler.codec.http.HttpHeaders) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method fireOnHeaderReceived:(Lio/netty/handler/codec/http/HttpHeaders;)V
       5: aload_0
       6: aload_1
       7: invokespecial #11                 // Method org/asynchttpclient/AsyncCompletionHandlerBase.onHeadersReceived:(Lio/netty/handler/codec/http/HttpHeaders;)Lorg/asynchttpclient/AsyncHandler$State;
      10: areturn

  public org.asynchttpclient.AsyncHandler$State onBodyPartReceived(org.asynchttpclient.HttpResponseBodyPart) throws java.lang.Exception;
    Code:
       0: getstatic     #12                 // Field org/asynchttpclient/AsyncHandler$State.CONTINUE:Lorg/asynchttpclient/AsyncHandler$State;
       3: astore_2
       4: aload_0
       5: getfield      #6                  // Field accumulateResponseBytes:Z
       8: ifeq          17
      11: aload_0
      12: aload_1
      13: invokespecial #13                 // Method org/asynchttpclient/AsyncCompletionHandlerBase.onBodyPartReceived:(Lorg/asynchttpclient/HttpResponseBodyPart;)Lorg/asynchttpclient/AsyncHandler$State;
      16: astore_2
      17: aload_0
      18: aload_1
      19: invokevirtual #14                 // Method org/asynchttpclient/HttpResponseBodyPart.getBodyPartBytes:()[B
      22: invokespecial #15                 // Method fireOnBytesReceived:([B)V
      25: aload_2
      26: areturn

  public org.asynchttpclient.Response onCompleted(org.asynchttpclient.Response) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #16                 // Method fireOnEnd:()V
       4: aload_1
       5: areturn

  public org.asynchttpclient.AsyncHandler$State onHeadersWritten();
    Code:
       0: aload_0
       1: getfield      #9                  // Field headers:Lio/netty/handler/codec/http/HttpHeaders;
       4: ifnull        15
       7: aload_0
       8: aload_0
       9: getfield      #9                  // Field headers:Lio/netty/handler/codec/http/HttpHeaders;
      12: invokespecial #17                 // Method fireOnHeadersSent:(Lio/netty/handler/codec/http/HttpHeaders;)V
      15: getstatic     #12                 // Field org/asynchttpclient/AsyncHandler$State.CONTINUE:Lorg/asynchttpclient/AsyncHandler$State;
      18: areturn

  public org.asynchttpclient.AsyncHandler$State onContentWriteProgress(long, long, long);
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: lload         5
       5: invokespecial #18                 // Method fireOnBytesSent:(JJJ)V
       8: getstatic     #12                 // Field org/asynchttpclient/AsyncHandler$State.CONTINUE:Lorg/asynchttpclient/AsyncHandler$State;
      11: areturn

  public void onThrowable(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #19                 // Method fireOnThrowable:(Ljava/lang/Throwable;)V
       5: return

  private void fireOnHeadersSent(io.netty.handler.codec.http.HttpHeaders);
    Code:
       0: aload_0
       1: getfield      #5                  // Field listeners:Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: invokevirtual #20                 // Method java/util/concurrent/ConcurrentLinkedQueue.iterator:()Ljava/util/Iterator;
       7: astore_2
       8: aload_2
       9: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          50
      17: aload_2
      18: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #23                 // class org/asynchttpclient/handler/TransferListener
      26: astore_3
      27: aload_3
      28: aload_1
      29: invokeinterface #24,  2           // InterfaceMethod org/asynchttpclient/handler/TransferListener.onRequestHeadersSent:(Lio/netty/handler/codec/http/HttpHeaders;)V
      34: goto          47
      37: astore        4
      39: aload_3
      40: aload         4
      42: invokeinterface #26,  2           // InterfaceMethod org/asynchttpclient/handler/TransferListener.onThrowable:(Ljava/lang/Throwable;)V
      47: goto          8
      50: return
    Exception table:
       from    to  target type
          27    34    37   Class java/lang/Throwable

  private void fireOnHeaderReceived(io.netty.handler.codec.http.HttpHeaders);
    Code:
       0: aload_0
       1: getfield      #5                  // Field listeners:Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: invokevirtual #20                 // Method java/util/concurrent/ConcurrentLinkedQueue.iterator:()Ljava/util/Iterator;
       7: astore_2
       8: aload_2
       9: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          50
      17: aload_2
      18: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #23                 // class org/asynchttpclient/handler/TransferListener
      26: astore_3
      27: aload_3
      28: aload_1
      29: invokeinterface #27,  2           // InterfaceMethod org/asynchttpclient/handler/TransferListener.onResponseHeadersReceived:(Lio/netty/handler/codec/http/HttpHeaders;)V
      34: goto          47
      37: astore        4
      39: aload_3
      40: aload         4
      42: invokeinterface #26,  2           // InterfaceMethod org/asynchttpclient/handler/TransferListener.onThrowable:(Ljava/lang/Throwable;)V
      47: goto          8
      50: return
    Exception table:
       from    to  target type
          27    34    37   Class java/lang/Throwable

  private void fireOnEnd();
    Code:
       0: aload_0
       1: getfield      #5                  // Field listeners:Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: invokevirtual #20                 // Method java/util/concurrent/ConcurrentLinkedQueue.iterator:()Ljava/util/Iterator;
       7: astore_1
       8: aload_1
       9: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          47
      17: aload_1
      18: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #23                 // class org/asynchttpclient/handler/TransferListener
      26: astore_2
      27: aload_2
      28: invokeinterface #28,  1           // InterfaceMethod org/asynchttpclient/handler/TransferListener.onRequestResponseCompleted:()V
      33: goto          44
      36: astore_3
      37: aload_2
      38: aload_3
      39: invokeinterface #26,  2           // InterfaceMethod org/asynchttpclient/handler/TransferListener.onThrowable:(Ljava/lang/Throwable;)V
      44: goto          8
      47: return
    Exception table:
       from    to  target type
          27    33    36   Class java/lang/Throwable

  private void fireOnBytesReceived(byte[]);
    Code:
       0: aload_0
       1: getfield      #5                  // Field listeners:Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: invokevirtual #20                 // Method java/util/concurrent/ConcurrentLinkedQueue.iterator:()Ljava/util/Iterator;
       7: astore_2
       8: aload_2
       9: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          50
      17: aload_2
      18: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #23                 // class org/asynchttpclient/handler/TransferListener
      26: astore_3
      27: aload_3
      28: aload_1
      29: invokeinterface #29,  2           // InterfaceMethod org/asynchttpclient/handler/TransferListener.onBytesReceived:([B)V
      34: goto          47
      37: astore        4
      39: aload_3
      40: aload         4
      42: invokeinterface #26,  2           // InterfaceMethod org/asynchttpclient/handler/TransferListener.onThrowable:(Ljava/lang/Throwable;)V
      47: goto          8
      50: return
    Exception table:
       from    to  target type
          27    34    37   Class java/lang/Throwable

  private void fireOnBytesSent(long, long, long);
    Code:
       0: aload_0
       1: getfield      #5                  // Field listeners:Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: invokevirtual #20                 // Method java/util/concurrent/ConcurrentLinkedQueue.iterator:()Ljava/util/Iterator;
       7: astore        7
       9: aload         7
      11: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          59
      19: aload         7
      21: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: checkcast     #23                 // class org/asynchttpclient/handler/TransferListener
      29: astore        8
      31: aload         8
      33: lload_1
      34: lload_3
      35: lload         5
      37: invokeinterface #30,  7           // InterfaceMethod org/asynchttpclient/handler/TransferListener.onBytesSent:(JJJ)V
      42: goto          56
      45: astore        9
      47: aload         8
      49: aload         9
      51: invokeinterface #26,  2           // InterfaceMethod org/asynchttpclient/handler/TransferListener.onThrowable:(Ljava/lang/Throwable;)V
      56: goto          9
      59: return
    Exception table:
       from    to  target type
          31    42    45   Class java/lang/Throwable

  private void fireOnThrowable(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #5                  // Field listeners:Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: invokevirtual #20                 // Method java/util/concurrent/ConcurrentLinkedQueue.iterator:()Ljava/util/Iterator;
       7: astore_2
       8: aload_2
       9: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          54
      17: aload_2
      18: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #23                 // class org/asynchttpclient/handler/TransferListener
      26: astore_3
      27: aload_3
      28: aload_1
      29: invokeinterface #26,  2           // InterfaceMethod org/asynchttpclient/handler/TransferListener.onThrowable:(Ljava/lang/Throwable;)V
      34: goto          51
      37: astore        4
      39: getstatic     #31                 // Field logger:Lorg/slf4j/Logger;
      42: ldc           #32                 // String onThrowable
      44: aload         4
      46: invokeinterface #33,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      51: goto          8
      54: return
    Exception table:
       from    to  target type
          27    34    37   Class java/lang/Throwable

  public java.lang.Object onCompleted(org.asynchttpclient.Response) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #34                 // Method onCompleted:(Lorg/asynchttpclient/Response;)Lorg/asynchttpclient/Response;
       5: areturn

  static {};
    Code:
       0: ldc           #35                 // class org/asynchttpclient/handler/TransferCompletionHandler
       2: invokestatic  #36                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #31                 // Field logger:Lorg/slf4j/Logger;
       8: return
}
