Compiled from "ThrottleRequestFilter.java"
public class org.asynchttpclient.filter.ThrottleRequestFilter implements org.asynchttpclient.filter.RequestFilter {
  private static final org.slf4j.Logger logger;

  private final java.util.concurrent.Semaphore available;

  private final int maxWait;

  public org.asynchttpclient.filter.ThrottleRequestFilter(int);
    Code:
       0: aload_0
       1: iload_1
       2: ldc           #2                  // int 2147483647
       4: invokespecial #3                  // Method "<init>":(II)V
       7: return

  public org.asynchttpclient.filter.ThrottleRequestFilter(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iconst_0
       4: invokespecial #4                  // Method "<init>":(IIZ)V
       7: return

  public org.asynchttpclient.filter.ThrottleRequestFilter(int, int, boolean);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_2
       6: putfield      #6                  // Field maxWait:I
       9: aload_0
      10: new           #7                  // class java/util/concurrent/Semaphore
      13: dup
      14: iload_1
      15: iload_3
      16: invokespecial #8                  // Method java/util/concurrent/Semaphore."<init>":(IZ)V
      19: putfield      #9                  // Field available:Ljava/util/concurrent/Semaphore;
      22: return

  public <T> org.asynchttpclient.filter.FilterContext<T> filter(org.asynchttpclient.filter.FilterContext<T>) throws org.asynchttpclient.filter.FilterException;
    Code:
       0: getstatic     #10                 // Field logger:Lorg/slf4j/Logger;
       3: invokeinterface #11,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
       8: ifeq          31
      11: getstatic     #10                 // Field logger:Lorg/slf4j/Logger;
      14: ldc           #12                 // String Current Throttling Status {}
      16: aload_0
      17: getfield      #9                  // Field available:Ljava/util/concurrent/Semaphore;
      20: invokevirtual #13                 // Method java/util/concurrent/Semaphore.availablePermits:()I
      23: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      26: invokeinterface #15,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      31: aload_0
      32: getfield      #9                  // Field available:Ljava/util/concurrent/Semaphore;
      35: aload_0
      36: getfield      #6                  // Field maxWait:I
      39: i2l
      40: getstatic     #16                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      43: invokevirtual #17                 // Method java/util/concurrent/Semaphore.tryAcquire:(JLjava/util/concurrent/TimeUnit;)Z
      46: ifne          80
      49: new           #18                 // class org/asynchttpclient/filter/FilterException
      52: dup
      53: ldc           #19                 // String No slot available for processing Request %s with AsyncHandler %s
      55: iconst_2
      56: anewarray     #20                 // class java/lang/Object
      59: dup
      60: iconst_0
      61: aload_1
      62: invokevirtual #21                 // Method org/asynchttpclient/filter/FilterContext.getRequest:()Lorg/asynchttpclient/Request;
      65: aastore
      66: dup
      67: iconst_1
      68: aload_1
      69: invokevirtual #22                 // Method org/asynchttpclient/filter/FilterContext.getAsyncHandler:()Lorg/asynchttpclient/AsyncHandler;
      72: aastore
      73: invokestatic  #23                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      76: invokespecial #24                 // Method org/asynchttpclient/filter/FilterException."<init>":(Ljava/lang/String;)V
      79: athrow
      80: goto          115
      83: astore_2
      84: new           #18                 // class org/asynchttpclient/filter/FilterException
      87: dup
      88: ldc           #26                 // String Interrupted Request %s with AsyncHandler %s
      90: iconst_2
      91: anewarray     #20                 // class java/lang/Object
      94: dup
      95: iconst_0
      96: aload_1
      97: invokevirtual #21                 // Method org/asynchttpclient/filter/FilterContext.getRequest:()Lorg/asynchttpclient/Request;
     100: aastore
     101: dup
     102: iconst_1
     103: aload_1
     104: invokevirtual #22                 // Method org/asynchttpclient/filter/FilterContext.getAsyncHandler:()Lorg/asynchttpclient/AsyncHandler;
     107: aastore
     108: invokestatic  #23                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     111: invokespecial #24                 // Method org/asynchttpclient/filter/FilterException."<init>":(Ljava/lang/String;)V
     114: athrow
     115: new           #27                 // class org/asynchttpclient/filter/FilterContext$FilterContextBuilder
     118: dup
     119: aload_1
     120: invokespecial #28                 // Method org/asynchttpclient/filter/FilterContext$FilterContextBuilder."<init>":(Lorg/asynchttpclient/filter/FilterContext;)V
     123: aload_1
     124: invokevirtual #22                 // Method org/asynchttpclient/filter/FilterContext.getAsyncHandler:()Lorg/asynchttpclient/AsyncHandler;
     127: aload_0
     128: getfield      #9                  // Field available:Ljava/util/concurrent/Semaphore;
     131: invokestatic  #29                 // Method org/asynchttpclient/filter/ReleasePermitOnComplete.wrap:(Lorg/asynchttpclient/AsyncHandler;Ljava/util/concurrent/Semaphore;)Lorg/asynchttpclient/AsyncHandler;
     134: invokevirtual #30                 // Method org/asynchttpclient/filter/FilterContext$FilterContextBuilder.asyncHandler:(Lorg/asynchttpclient/AsyncHandler;)Lorg/asynchttpclient/filter/FilterContext$FilterContextBuilder;
     137: invokevirtual #31                 // Method org/asynchttpclient/filter/FilterContext$FilterContextBuilder.build:()Lorg/asynchttpclient/filter/FilterContext;
     140: areturn
    Exception table:
       from    to  target type
           0    80    83   Class java/lang/InterruptedException

  static {};
    Code:
       0: ldc           #32                 // class org/asynchttpclient/filter/ThrottleRequestFilter
       2: invokestatic  #33                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #10                 // Field logger:Lorg/slf4j/Logger;
       8: return
}
