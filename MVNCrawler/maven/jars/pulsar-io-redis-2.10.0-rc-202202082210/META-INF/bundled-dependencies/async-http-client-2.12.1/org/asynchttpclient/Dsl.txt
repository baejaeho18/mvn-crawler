Compiled from "Dsl.java"
public final class org.asynchttpclient.Dsl {
  private org.asynchttpclient.Dsl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static org.asynchttpclient.AsyncHttpClient asyncHttpClient();
    Code:
       0: new           #2                  // class org/asynchttpclient/DefaultAsyncHttpClient
       3: dup
       4: invokespecial #3                  // Method org/asynchttpclient/DefaultAsyncHttpClient."<init>":()V
       7: areturn

  public static org.asynchttpclient.AsyncHttpClient asyncHttpClient(org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder);
    Code:
       0: new           #2                  // class org/asynchttpclient/DefaultAsyncHttpClient
       3: dup
       4: aload_0
       5: invokevirtual #4                  // Method org/asynchttpclient/DefaultAsyncHttpClientConfig$Builder.build:()Lorg/asynchttpclient/DefaultAsyncHttpClientConfig;
       8: invokespecial #5                  // Method org/asynchttpclient/DefaultAsyncHttpClient."<init>":(Lorg/asynchttpclient/AsyncHttpClientConfig;)V
      11: areturn

  public static org.asynchttpclient.AsyncHttpClient asyncHttpClient(org.asynchttpclient.AsyncHttpClientConfig);
    Code:
       0: new           #2                  // class org/asynchttpclient/DefaultAsyncHttpClient
       3: dup
       4: aload_0
       5: invokespecial #5                  // Method org/asynchttpclient/DefaultAsyncHttpClient."<init>":(Lorg/asynchttpclient/AsyncHttpClientConfig;)V
       8: areturn

  public static org.asynchttpclient.RequestBuilder get(java.lang.String);
    Code:
       0: getstatic     #6                  // Field org/asynchttpclient/util/HttpConstants$Methods.GET:Ljava/lang/String;
       3: aload_0
       4: invokestatic  #7                  // Method request:(Ljava/lang/String;Ljava/lang/String;)Lorg/asynchttpclient/RequestBuilder;
       7: areturn

  public static org.asynchttpclient.RequestBuilder put(java.lang.String);
    Code:
       0: getstatic     #8                  // Field org/asynchttpclient/util/HttpConstants$Methods.PUT:Ljava/lang/String;
       3: aload_0
       4: invokestatic  #7                  // Method request:(Ljava/lang/String;Ljava/lang/String;)Lorg/asynchttpclient/RequestBuilder;
       7: areturn

  public static org.asynchttpclient.RequestBuilder post(java.lang.String);
    Code:
       0: getstatic     #9                  // Field org/asynchttpclient/util/HttpConstants$Methods.POST:Ljava/lang/String;
       3: aload_0
       4: invokestatic  #7                  // Method request:(Ljava/lang/String;Ljava/lang/String;)Lorg/asynchttpclient/RequestBuilder;
       7: areturn

  public static org.asynchttpclient.RequestBuilder delete(java.lang.String);
    Code:
       0: getstatic     #10                 // Field org/asynchttpclient/util/HttpConstants$Methods.DELETE:Ljava/lang/String;
       3: aload_0
       4: invokestatic  #7                  // Method request:(Ljava/lang/String;Ljava/lang/String;)Lorg/asynchttpclient/RequestBuilder;
       7: areturn

  public static org.asynchttpclient.RequestBuilder head(java.lang.String);
    Code:
       0: getstatic     #11                 // Field org/asynchttpclient/util/HttpConstants$Methods.HEAD:Ljava/lang/String;
       3: aload_0
       4: invokestatic  #7                  // Method request:(Ljava/lang/String;Ljava/lang/String;)Lorg/asynchttpclient/RequestBuilder;
       7: areturn

  public static org.asynchttpclient.RequestBuilder options(java.lang.String);
    Code:
       0: getstatic     #12                 // Field org/asynchttpclient/util/HttpConstants$Methods.OPTIONS:Ljava/lang/String;
       3: aload_0
       4: invokestatic  #7                  // Method request:(Ljava/lang/String;Ljava/lang/String;)Lorg/asynchttpclient/RequestBuilder;
       7: areturn

  public static org.asynchttpclient.RequestBuilder patch(java.lang.String);
    Code:
       0: getstatic     #13                 // Field org/asynchttpclient/util/HttpConstants$Methods.PATCH:Ljava/lang/String;
       3: aload_0
       4: invokestatic  #7                  // Method request:(Ljava/lang/String;Ljava/lang/String;)Lorg/asynchttpclient/RequestBuilder;
       7: areturn

  public static org.asynchttpclient.RequestBuilder trace(java.lang.String);
    Code:
       0: getstatic     #14                 // Field org/asynchttpclient/util/HttpConstants$Methods.TRACE:Ljava/lang/String;
       3: aload_0
       4: invokestatic  #7                  // Method request:(Ljava/lang/String;Ljava/lang/String;)Lorg/asynchttpclient/RequestBuilder;
       7: areturn

  public static org.asynchttpclient.RequestBuilder request(java.lang.String, java.lang.String);
    Code:
       0: new           #15                 // class org/asynchttpclient/RequestBuilder
       3: dup
       4: aload_0
       5: invokespecial #16                 // Method org/asynchttpclient/RequestBuilder."<init>":(Ljava/lang/String;)V
       8: aload_1
       9: invokevirtual #17                 // Method org/asynchttpclient/RequestBuilder.setUrl:(Ljava/lang/String;)Lorg/asynchttpclient/RequestBuilderBase;
      12: checkcast     #15                 // class org/asynchttpclient/RequestBuilder
      15: areturn

  public static org.asynchttpclient.proxy.ProxyServer$Builder proxyServer(java.lang.String, int);
    Code:
       0: new           #18                 // class org/asynchttpclient/proxy/ProxyServer$Builder
       3: dup
       4: aload_0
       5: iload_1
       6: invokespecial #19                 // Method org/asynchttpclient/proxy/ProxyServer$Builder."<init>":(Ljava/lang/String;I)V
       9: areturn

  public static org.asynchttpclient.DefaultAsyncHttpClientConfig$Builder config();
    Code:
       0: new           #20                 // class org/asynchttpclient/DefaultAsyncHttpClientConfig$Builder
       3: dup
       4: invokespecial #21                 // Method org/asynchttpclient/DefaultAsyncHttpClientConfig$Builder."<init>":()V
       7: areturn

  public static org.asynchttpclient.Realm$Builder realm(org.asynchttpclient.Realm);
    Code:
       0: new           #22                 // class org/asynchttpclient/Realm$Builder
       3: dup
       4: aload_0
       5: invokevirtual #23                 // Method org/asynchttpclient/Realm.getPrincipal:()Ljava/lang/String;
       8: aload_0
       9: invokevirtual #24                 // Method org/asynchttpclient/Realm.getPassword:()Ljava/lang/String;
      12: invokespecial #25                 // Method org/asynchttpclient/Realm$Builder."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      15: aload_0
      16: invokevirtual #26                 // Method org/asynchttpclient/Realm.getRealmName:()Ljava/lang/String;
      19: invokevirtual #27                 // Method org/asynchttpclient/Realm$Builder.setRealmName:(Ljava/lang/String;)Lorg/asynchttpclient/Realm$Builder;
      22: aload_0
      23: invokevirtual #28                 // Method org/asynchttpclient/Realm.getAlgorithm:()Ljava/lang/String;
      26: invokevirtual #29                 // Method org/asynchttpclient/Realm$Builder.setAlgorithm:(Ljava/lang/String;)Lorg/asynchttpclient/Realm$Builder;
      29: aload_0
      30: invokevirtual #30                 // Method org/asynchttpclient/Realm.getNc:()Ljava/lang/String;
      33: invokevirtual #31                 // Method org/asynchttpclient/Realm$Builder.setNc:(Ljava/lang/String;)Lorg/asynchttpclient/Realm$Builder;
      36: aload_0
      37: invokevirtual #32                 // Method org/asynchttpclient/Realm.getNonce:()Ljava/lang/String;
      40: invokevirtual #33                 // Method org/asynchttpclient/Realm$Builder.setNonce:(Ljava/lang/String;)Lorg/asynchttpclient/Realm$Builder;
      43: aload_0
      44: invokevirtual #34                 // Method org/asynchttpclient/Realm.getCharset:()Ljava/nio/charset/Charset;
      47: invokevirtual #35                 // Method org/asynchttpclient/Realm$Builder.setCharset:(Ljava/nio/charset/Charset;)Lorg/asynchttpclient/Realm$Builder;
      50: aload_0
      51: invokevirtual #36                 // Method org/asynchttpclient/Realm.getOpaque:()Ljava/lang/String;
      54: invokevirtual #37                 // Method org/asynchttpclient/Realm$Builder.setOpaque:(Ljava/lang/String;)Lorg/asynchttpclient/Realm$Builder;
      57: aload_0
      58: invokevirtual #38                 // Method org/asynchttpclient/Realm.getQop:()Ljava/lang/String;
      61: invokevirtual #39                 // Method org/asynchttpclient/Realm$Builder.setQop:(Ljava/lang/String;)Lorg/asynchttpclient/Realm$Builder;
      64: aload_0
      65: invokevirtual #40                 // Method org/asynchttpclient/Realm.getScheme:()Lorg/asynchttpclient/Realm$AuthScheme;
      68: invokevirtual #41                 // Method org/asynchttpclient/Realm$Builder.setScheme:(Lorg/asynchttpclient/Realm$AuthScheme;)Lorg/asynchttpclient/Realm$Builder;
      71: aload_0
      72: invokevirtual #42                 // Method org/asynchttpclient/Realm.getUri:()Lorg/asynchttpclient/uri/Uri;
      75: invokevirtual #43                 // Method org/asynchttpclient/Realm$Builder.setUri:(Lorg/asynchttpclient/uri/Uri;)Lorg/asynchttpclient/Realm$Builder;
      78: aload_0
      79: invokevirtual #44                 // Method org/asynchttpclient/Realm.isUsePreemptiveAuth:()Z
      82: invokevirtual #45                 // Method org/asynchttpclient/Realm$Builder.setUsePreemptiveAuth:(Z)Lorg/asynchttpclient/Realm$Builder;
      85: aload_0
      86: invokevirtual #46                 // Method org/asynchttpclient/Realm.getNtlmDomain:()Ljava/lang/String;
      89: invokevirtual #47                 // Method org/asynchttpclient/Realm$Builder.setNtlmDomain:(Ljava/lang/String;)Lorg/asynchttpclient/Realm$Builder;
      92: aload_0
      93: invokevirtual #48                 // Method org/asynchttpclient/Realm.getNtlmHost:()Ljava/lang/String;
      96: invokevirtual #49                 // Method org/asynchttpclient/Realm$Builder.setNtlmHost:(Ljava/lang/String;)Lorg/asynchttpclient/Realm$Builder;
      99: aload_0
     100: invokevirtual #50                 // Method org/asynchttpclient/Realm.isUseAbsoluteURI:()Z
     103: invokevirtual #51                 // Method org/asynchttpclient/Realm$Builder.setUseAbsoluteURI:(Z)Lorg/asynchttpclient/Realm$Builder;
     106: aload_0
     107: invokevirtual #52                 // Method org/asynchttpclient/Realm.isOmitQuery:()Z
     110: invokevirtual #53                 // Method org/asynchttpclient/Realm$Builder.setOmitQuery:(Z)Lorg/asynchttpclient/Realm$Builder;
     113: aload_0
     114: invokevirtual #54                 // Method org/asynchttpclient/Realm.getServicePrincipalName:()Ljava/lang/String;
     117: invokevirtual #55                 // Method org/asynchttpclient/Realm$Builder.setServicePrincipalName:(Ljava/lang/String;)Lorg/asynchttpclient/Realm$Builder;
     120: aload_0
     121: invokevirtual #56                 // Method org/asynchttpclient/Realm.isUseCanonicalHostname:()Z
     124: invokevirtual #57                 // Method org/asynchttpclient/Realm$Builder.setUseCanonicalHostname:(Z)Lorg/asynchttpclient/Realm$Builder;
     127: aload_0
     128: invokevirtual #58                 // Method org/asynchttpclient/Realm.getCustomLoginConfig:()Ljava/util/Map;
     131: invokevirtual #59                 // Method org/asynchttpclient/Realm$Builder.setCustomLoginConfig:(Ljava/util/Map;)Lorg/asynchttpclient/Realm$Builder;
     134: aload_0
     135: invokevirtual #60                 // Method org/asynchttpclient/Realm.getLoginContextName:()Ljava/lang/String;
     138: invokevirtual #61                 // Method org/asynchttpclient/Realm$Builder.setLoginContextName:(Ljava/lang/String;)Lorg/asynchttpclient/Realm$Builder;
     141: areturn

  public static org.asynchttpclient.Realm$Builder realm(org.asynchttpclient.Realm$AuthScheme, java.lang.String, java.lang.String);
    Code:
       0: new           #22                 // class org/asynchttpclient/Realm$Builder
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #25                 // Method org/asynchttpclient/Realm$Builder."<init>":(Ljava/lang/String;Ljava/lang/String;)V
       9: aload_0
      10: invokevirtual #41                 // Method org/asynchttpclient/Realm$Builder.setScheme:(Lorg/asynchttpclient/Realm$AuthScheme;)Lorg/asynchttpclient/Realm$Builder;
      13: areturn

  public static org.asynchttpclient.Realm$Builder basicAuthRealm(java.lang.String, java.lang.String);
    Code:
       0: getstatic     #62                 // Field org/asynchttpclient/Realm$AuthScheme.BASIC:Lorg/asynchttpclient/Realm$AuthScheme;
       3: aload_0
       4: aload_1
       5: invokestatic  #63                 // Method realm:(Lorg/asynchttpclient/Realm$AuthScheme;Ljava/lang/String;Ljava/lang/String;)Lorg/asynchttpclient/Realm$Builder;
       8: areturn

  public static org.asynchttpclient.Realm$Builder digestAuthRealm(java.lang.String, java.lang.String);
    Code:
       0: getstatic     #64                 // Field org/asynchttpclient/Realm$AuthScheme.DIGEST:Lorg/asynchttpclient/Realm$AuthScheme;
       3: aload_0
       4: aload_1
       5: invokestatic  #63                 // Method realm:(Lorg/asynchttpclient/Realm$AuthScheme;Ljava/lang/String;Ljava/lang/String;)Lorg/asynchttpclient/Realm$Builder;
       8: areturn

  public static org.asynchttpclient.Realm$Builder ntlmAuthRealm(java.lang.String, java.lang.String);
    Code:
       0: getstatic     #65                 // Field org/asynchttpclient/Realm$AuthScheme.NTLM:Lorg/asynchttpclient/Realm$AuthScheme;
       3: aload_0
       4: aload_1
       5: invokestatic  #63                 // Method realm:(Lorg/asynchttpclient/Realm$AuthScheme;Ljava/lang/String;Ljava/lang/String;)Lorg/asynchttpclient/Realm$Builder;
       8: areturn
}
