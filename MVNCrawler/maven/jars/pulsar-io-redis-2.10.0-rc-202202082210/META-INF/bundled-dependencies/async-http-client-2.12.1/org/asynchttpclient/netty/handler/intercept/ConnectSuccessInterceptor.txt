Compiled from "ConnectSuccessInterceptor.java"
public class org.asynchttpclient.netty.handler.intercept.ConnectSuccessInterceptor {
  private static final org.slf4j.Logger LOGGER;

  private final org.asynchttpclient.netty.channel.ChannelManager channelManager;

  private final org.asynchttpclient.netty.request.NettyRequestSender requestSender;

  org.asynchttpclient.netty.handler.intercept.ConnectSuccessInterceptor(org.asynchttpclient.netty.channel.ChannelManager, org.asynchttpclient.netty.request.NettyRequestSender);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field channelManager:Lorg/asynchttpclient/netty/channel/ChannelManager;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field requestSender:Lorg/asynchttpclient/netty/request/NettyRequestSender;
      14: return

  public boolean exitAfterHandlingConnect(io.netty.channel.Channel, org.asynchttpclient.netty.NettyResponseFuture<?>, org.asynchttpclient.Request, org.asynchttpclient.proxy.ProxyServer);
    Code:
       0: aload_2
       1: invokevirtual #4                  // Method org/asynchttpclient/netty/NettyResponseFuture.isKeepAlive:()Z
       4: ifeq          13
       7: aload_2
       8: aload_1
       9: iconst_1
      10: invokevirtual #5                  // Method org/asynchttpclient/netty/NettyResponseFuture.attachChannel:(Lio/netty/channel/Channel;Z)V
      13: aload_3
      14: invokeinterface #6,  1            // InterfaceMethod org/asynchttpclient/Request.getUri:()Lorg/asynchttpclient/uri/Uri;
      19: astore        5
      21: getstatic     #7                  // Field LOGGER:Lorg/slf4j/Logger;
      24: ldc           #8                  // String Connecting to proxy {} for scheme {}
      26: aload         4
      28: aload         5
      30: invokevirtual #9                  // Method org/asynchttpclient/uri/Uri.getScheme:()Ljava/lang/String;
      33: invokeinterface #10,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      38: aload_0
      39: getfield      #2                  // Field channelManager:Lorg/asynchttpclient/netty/channel/ChannelManager;
      42: aload_1
      43: invokeinterface #11,  1           // InterfaceMethod io/netty/channel/Channel.pipeline:()Lio/netty/channel/ChannelPipeline;
      48: aload         5
      50: invokevirtual #12                 // Method org/asynchttpclient/netty/channel/ChannelManager.updatePipelineForHttpTunneling:(Lio/netty/channel/ChannelPipeline;Lorg/asynchttpclient/uri/Uri;)Lio/netty/util/concurrent/Future;
      53: astore        6
      55: aload_2
      56: iconst_1
      57: invokevirtual #13                 // Method org/asynchttpclient/netty/NettyResponseFuture.setReuseChannel:(Z)V
      60: aload_2
      61: iconst_0
      62: invokevirtual #14                 // Method org/asynchttpclient/netty/NettyResponseFuture.setConnectAllowed:(Z)V
      65: aload_2
      66: invokevirtual #15                 // Method org/asynchttpclient/netty/NettyResponseFuture.getTargetRequest:()Lorg/asynchttpclient/Request;
      69: invokeinterface #16,  1           // InterfaceMethod org/asynchttpclient/Request.toBuilder:()Lorg/asynchttpclient/RequestBuilder;
      74: invokevirtual #17                 // Method org/asynchttpclient/RequestBuilder.build:()Lorg/asynchttpclient/Request;
      77: astore        7
      79: aload         6
      81: ifnonnull     98
      84: aload_0
      85: getfield      #3                  // Field requestSender:Lorg/asynchttpclient/netty/request/NettyRequestSender;
      88: aload_1
      89: aload_2
      90: aload         7
      92: invokevirtual #18                 // Method org/asynchttpclient/netty/request/NettyRequestSender.drainChannelAndExecuteNextRequest:(Lio/netty/channel/Channel;Lorg/asynchttpclient/netty/NettyResponseFuture;Lorg/asynchttpclient/Request;)V
      95: goto          111
      98: aload_0
      99: getfield      #3                  // Field requestSender:Lorg/asynchttpclient/netty/request/NettyRequestSender;
     102: aload_1
     103: aload_2
     104: aload         7
     106: aload         6
     108: invokevirtual #19                 // Method org/asynchttpclient/netty/request/NettyRequestSender.drainChannelAndExecuteNextRequest:(Lio/netty/channel/Channel;Lorg/asynchttpclient/netty/NettyResponseFuture;Lorg/asynchttpclient/Request;Lio/netty/util/concurrent/Future;)V
     111: iconst_1
     112: ireturn

  static {};
    Code:
       0: ldc           #20                 // class org/asynchttpclient/netty/handler/intercept/ConnectSuccessInterceptor
       2: invokestatic  #21                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #7                  // Field LOGGER:Lorg/slf4j/Logger;
       8: return
}
